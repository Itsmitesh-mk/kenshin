{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/activity/add-activity/add-activity.component.html","webpack:///./src/app/activity/add-activity/add-activity.component.ts","webpack:///./src/app/allowance/allowance.component.html","webpack:///./src/app/allowance/allowance.component.ts","webpack:///./src/app/annoucement/add-annoucement/add-annoucement.component.html","webpack:///./src/app/annoucement/add-annoucement/add-annoucement.component.ts","webpack:///./src/app/annoucement/annoucement-detail/annoucement-detail.component.html","webpack:///./src/app/annoucement/annoucement-detail/annoucement-detail.component.ts","webpack:///./src/app/annoucement/annoucement-list/annoucement-list.component.html","webpack:///./src/app/annoucement/annoucement-list/annoucement-list.component.ts","webpack:///./src/app/annoucement/annoucement-list/unique-filter.pipe.ts","webpack:///./src/app/annoucement/read-massage/read-massage.component.html","webpack:///./src/app/annoucement/read-massage/read-massage.component.scss","webpack:///./src/app/annoucement/read-massage/read-massage.component.ts","webpack:///./src/app/annoucement/read-popup/read-popup.component.html","webpack:///./src/app/annoucement/read-popup/read-popup.component.scss","webpack:///./src/app/annoucement/read-popup/read-popup.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard-log.service.ts","webpack:///./src/app/checkin/checkin-detail/checkin-detail.component.html","webpack:///./src/app/checkin/checkin-detail/checkin-detail.component.ts","webpack:///./src/app/checkin/checkin-list/checkin-list.component.html","webpack:///./src/app/checkin/checkin-list/checkin-list.component.ts","webpack:///./src/app/checkin/remark-modal/remark-modal.component.html","webpack:///./src/app/checkin/remark-modal/remark-modal.component.ts","webpack:///./src/app/cities-modal/cities-modal.component.html","webpack:///./src/app/cities-modal/cities-modal.component.ts","webpack:///./src/app/constant.service.ts","webpack:///./src/app/customer-concern/add-concern/add-concern.component.html","webpack:///./src/app/customer-concern/add-concern/add-concern.component.ts","webpack:///./src/app/customer-concern/concern-detail/concern-detail.component.html","webpack:///./src/app/customer-concern/concern-detail/concern-detail.component.ts","webpack:///./src/app/customer-concern/concern-list/concern-list.component.html","webpack:///./src/app/customer-concern/concern-list/concern-list.component.ts","webpack:///./src/app/customer-concern/draft-detail/draft-detail.component.html","webpack:///./src/app/customer-concern/draft-detail/draft-detail.component.ts","webpack:///./src/app/customer-concern/image-modal/image-modal.component.html","webpack:///./src/app/customer-concern/image-modal/image-modal.component.ts","webpack:///./src/app/customer-concern/update-concern/update-concern.component.html","webpack:///./src/app/customer-concern/update-concern/update-concern.component.ts","webpack:///./src/app/customer-concern/update-status/update-status.component.html","webpack:///./src/app/customer-concern/update-status/update-status.component.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dialog.ts","webpack:///./src/app/discount/add-discount/add-discount.component.html","webpack:///./src/app/discount/add-discount/add-discount.component.ts","webpack:///./src/app/discount/discount-list/discount-list.component.html","webpack:///./src/app/discount/discount-list/discount-list.component.ts","webpack:///./src/app/distribution/add-distribution/add-distribution.component.html","webpack:///./src/app/distribution/add-distribution/add-distribution.component.ts","webpack:///./src/app/distribution/distribution-detail/distribution-detail.component.html","webpack:///./src/app/distribution/distribution-detail/distribution-detail.component.ts","webpack:///./src/app/distribution/distribution-order-list/distribution-order-list.component.html","webpack:///./src/app/distribution/distribution-order-list/distribution-order-list.component.ts","webpack:///./src/app/distribution/distributor-list/distribution-list.component.html","webpack:///./src/app/distribution/distributor-list/distribution-list.component.ts","webpack:///./src/app/distribution/document-end-image/document-end-image.component.html","webpack:///./src/app/distribution/document-end-image/document-end-image.component.scss","webpack:///./src/app/distribution/document-end-image/document-end-image.component.ts","webpack:///./src/app/distribution/engine-list/engine-list.component.html","webpack:///./src/app/distribution/engine-list/engine-list.component.ts","webpack:///./src/app/distribution/mechanic-list/mechanic-list.component.html","webpack:///./src/app/distribution/mechanic-list/mechanic-list.component.ts","webpack:///./src/app/distribution/retailer-list/retailer-list.component.html","webpack:///./src/app/distribution/retailer-list/retailer-list.component.ts","webpack:///./src/app/distribution/update-network-address/update-network-address.component.html","webpack:///./src/app/distribution/update-network-address/update-network-address.component.scss","webpack:///./src/app/distribution/update-network-address/update-network-address.component.ts","webpack:///./src/app/distribution/update-network/update-network.component.html","webpack:///./src/app/distribution/update-network/update-network.component.scss","webpack:///./src/app/distribution/update-network/update-network.component.ts","webpack:///./src/app/distribution/wholesaler-list/wholesaler-list.component.html","webpack:///./src/app/distribution/wholesaler-list/wholesaler-list.component.ts","webpack:///./src/app/expense/add-expense/add-expense.component.html","webpack:///./src/app/expense/add-expense/add-expense.component.scss","webpack:///./src/app/expense/add-expense/add-expense.component.ts","webpack:///./src/app/expense/detail-by-date/detail-by-date.component.html","webpack:///./src/app/expense/detail-by-date/detail-by-date.component.scss","webpack:///./src/app/expense/detail-by-date/detail-by-date.component.ts","webpack:///./src/app/expense/edit-local-expense/edit-local-expense.component.html","webpack:///./src/app/expense/edit-local-expense/edit-local-expense.component.scss","webpack:///./src/app/expense/edit-local-expense/edit-local-expense.component.ts","webpack:///./src/app/expense/edit-out-station/edit-out-station.component.html","webpack:///./src/app/expense/edit-out-station/edit-out-station.component.scss","webpack:///./src/app/expense/edit-out-station/edit-out-station.component.ts","webpack:///./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.html","webpack:///./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.scss","webpack:///./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.ts","webpack:///./src/app/expense/editmisc/editmisc.component.html","webpack:///./src/app/expense/editmisc/editmisc.component.scss","webpack:///./src/app/expense/editmisc/editmisc.component.ts","webpack:///./src/app/expense/expense-detail/expense-detail.component.html","webpack:///./src/app/expense/expense-detail/expense-detail.component.scss","webpack:///./src/app/expense/expense-detail/expense-detail.component.ts","webpack:///./src/app/expense/expense-list/expense-list.component.html","webpack:///./src/app/expense/expense-list/expense-list.component.scss","webpack:///./src/app/expense/expense-list/expense-list.component.ts","webpack:///./src/app/followup/add-followup/add-followup.component.html","webpack:///./src/app/followup/add-followup/add-followup.component.ts","webpack:///./src/app/followup/all-followup-list/all-followup-list.component.html","webpack:///./src/app/followup/all-followup-list/all-followup-list.component.scss","webpack:///./src/app/followup/all-followup-list/all-followup-list.component.ts","webpack:///./src/app/followup/followup-list/followup-list.component.html","webpack:///./src/app/followup/followup-list/followup-list.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/lead/add-lead/add-lead.component.html","webpack:///./src/app/lead/add-lead/add-lead.component.ts","webpack:///./src/app/lead/lead-detail/lead-detail.component.html","webpack:///./src/app/lead/lead-detail/lead-detail.component.ts","webpack:///./src/app/lead/lead-list/lead-list.component.html","webpack:///./src/app/lead/lead-list/lead-list.component.ts","webpack:///./src/app/lead/update-lead/update-lead.component.html","webpack:///./src/app/lead/update-lead/update-lead.component.ts","webpack:///./src/app/leave-and-holiday/add-holiday/add-holiday.component.html","webpack:///./src/app/leave-and-holiday/add-holiday/add-holiday.component.ts","webpack:///./src/app/leave-and-holiday/add-leave-rules/add-leave-rules.component.html","webpack:///./src/app/leave-and-holiday/add-leave-rules/add-leave-rules.component.ts","webpack:///./src/app/leave-and-holiday/holiday-list/holiday-list.component.html","webpack:///./src/app/leave-and-holiday/holiday-list/holiday-list.component.ts","webpack:///./src/app/leave-and-holiday/leave-rule-detail/leave-rule-detail.component.html","webpack:///./src/app/leave-and-holiday/leave-rule-detail/leave-rule-detail.component.ts","webpack:///./src/app/leave-and-holiday/leave-rule-list/leave-rule-list.component.html","webpack:///./src/app/leave-and-holiday/leave-rule-list/leave-rule-list.component.ts","webpack:///./src/app/leave-apply/leave-apply-add/leave-apply-add.component.html","webpack:///./src/app/leave-apply/leave-apply-add/leave-apply-add.component.ts","webpack:///./src/app/leave-apply/leave-apply-list/leave-apply-list.component.html","webpack:///./src/app/leave-apply/leave-apply-list/leave-apply-list.component.ts","webpack:///./src/app/leave/add-leave/add-leave.component.html","webpack:///./src/app/leave/add-leave/add-leave.component.ts","webpack:///./src/app/leave/editleave/editleave.component.html","webpack:///./src/app/leave/editleave/editleave.component.scss","webpack:///./src/app/leave/editleave/editleave.component.ts","webpack:///./src/app/leave/leave-detail/leave-detail.component.html","webpack:///./src/app/leave/leave-detail/leave-detail.component.ts","webpack:///./src/app/leave/leave-list/leave-list.component.html","webpack:///./src/app/leave/leave-list/leave-list.component.ts","webpack:///./src/app/leave/remaining-leave/remaining-leave.component.html","webpack:///./src/app/leave/remaining-leave/remaining-leave.component.scss","webpack:///./src/app/leave/remaining-leave/remaining-leave.component.ts","webpack:///./src/app/local-storage.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/master-tab-list/master-tab-list/master-tab-list.component.html","webpack:///./src/app/master-tab-list/master-tab-list/master-tab-list.component.ts","webpack:///./src/app/master-tab/master-tab/master-tab.component.html","webpack:///./src/app/master-tab/master-tab/master-tab.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/order/add-order/add-order.component.html","webpack:///./src/app/order/add-order/add-order.component.ts","webpack:///./src/app/order/detailorderlist/detailorderlist.component.html","webpack:///./src/app/order/detailorderlist/detailorderlist.component.scss","webpack:///./src/app/order/detailorderlist/detailorderlist.component.ts","webpack:///./src/app/order/edit-order/edit-order.component.html","webpack:///./src/app/order/edit-order/edit-order.component.scss","webpack:///./src/app/order/edit-order/edit-order.component.ts","webpack:///./src/app/order/list-order/list-order.component.html","webpack:///./src/app/order/list-order/list-order.component.scss","webpack:///./src/app/order/list-order/list-order.component.ts","webpack:///./src/app/order/order-detail/order-detail.component.html","webpack:///./src/app/order/order-detail/order-detail.component.ts","webpack:///./src/app/order/order-list/order-list.component.html","webpack:///./src/app/order/order-list/order-list.component.ts","webpack:///./src/app/order/other-address/other-address.component.html","webpack:///./src/app/order/other-address/other-address.component.scss","webpack:///./src/app/order/other-address/other-address.component.ts","webpack:///./src/app/order/pending-order/pending-order.component.html","webpack:///./src/app/order/pending-order/pending-order.component.scss","webpack:///./src/app/order/pending-order/pending-order.component.ts","webpack:///./src/app/order/schemepopup/schemepopup.component.html","webpack:///./src/app/order/schemepopup/schemepopup.component.scss","webpack:///./src/app/order/schemepopup/schemepopup.component.ts","webpack:///./src/app/pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component.html","webpack:///./src/app/pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component.ts","webpack:///./src/app/pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component.html","webpack:///./src/app/pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component.ts","webpack:///./src/app/pop_and_gift-distributor/status-modal/status-modal.component.html","webpack:///./src/app/pop_and_gift-distributor/status-modal/status-modal.component.ts","webpack:///./src/app/pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component.html","webpack:///./src/app/pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component.ts","webpack:///./src/app/pop_and_gift/add-gift/add-gift.component.html","webpack:///./src/app/pop_and_gift/add-gift/add-gift.component.ts","webpack:///./src/app/pop_and_gift/eversion-detail/eversion-detail.component.html","webpack:///./src/app/pop_and_gift/eversion-detail/eversion-detail.component.scss","webpack:///./src/app/pop_and_gift/eversion-detail/eversion-detail.component.ts","webpack:///./src/app/pop_and_gift/gift-deatil/gift-deatil.component.html","webpack:///./src/app/pop_and_gift/gift-deatil/gift-deatil.component.ts","webpack:///./src/app/pop_and_gift/gift-list/gift-list.component.html","webpack:///./src/app/pop_and_gift/gift-list/gift-list.component.ts","webpack:///./src/app/pop_and_gift/gift-modal/gift-modal.component.html","webpack:///./src/app/pop_and_gift/gift-modal/gift-modal.component.ts","webpack:///./src/app/pop_and_gift/video-modal/video-modal.component.html","webpack:///./src/app/pop_and_gift/video-modal/video-modal.component.ts","webpack:///./src/app/product/editmodel/editmodel.component.html","webpack:///./src/app/product/editmodel/editmodel.component.scss","webpack:///./src/app/product/editmodel/editmodel.component.ts","webpack:///./src/app/product/product-detail/product-detail.component.html","webpack:///./src/app/product/product-detail/product-detail.component.ts","webpack:///./src/app/product/product-list/product-list.component.html","webpack:///./src/app/product/product-list/product-list.component.ts","webpack:///./src/app/product/product-modal/product-modal.component.html","webpack:///./src/app/product/product-modal/product-modal.component.ts","webpack:///./src/app/reject-lead/reject-lead.component.html","webpack:///./src/app/reject-lead/reject-lead.component.scss","webpack:///./src/app/reject-lead/reject-lead.component.ts","webpack:///./src/app/router-animation/router-animation.component.ts","webpack:///./src/app/scheme/add-distributor/add-distributor.component.html","webpack:///./src/app/scheme/add-distributor/add-distributor.component.scss","webpack:///./src/app/scheme/add-distributor/add-distributor.component.ts","webpack:///./src/app/scheme/add-scheme/add-scheme.component.html","webpack:///./src/app/scheme/add-scheme/add-scheme.component.ts","webpack:///./src/app/scheme/edit-scheme/edit-scheme.component.html","webpack:///./src/app/scheme/edit-scheme/edit-scheme.component.scss","webpack:///./src/app/scheme/edit-scheme/edit-scheme.component.ts","webpack:///./src/app/scheme/editdate-scheme/editdate-scheme.component.html","webpack:///./src/app/scheme/editdate-scheme/editdate-scheme.component.scss","webpack:///./src/app/scheme/editdate-scheme/editdate-scheme.component.ts","webpack:///./src/app/scheme/scheme-detail/scheme-detail.component.html","webpack:///./src/app/scheme/scheme-detail/scheme-detail.component.scss","webpack:///./src/app/scheme/scheme-detail/scheme-detail.component.ts","webpack:///./src/app/scheme/scheme-list/scheme-list.component.html","webpack:///./src/app/scheme/scheme-list/scheme-list.component.ts","webpack:///./src/app/session.service.ts","webpack:///./src/app/shared/pipes/my-filter.pipe.ts","webpack:///./src/app/task/add-task/add-task.component.html","webpack:///./src/app/task/add-task/add-task.component.ts","webpack:///./src/app/task/assigntask/assigntask.component.html","webpack:///./src/app/task/assigntask/assigntask.component.scss","webpack:///./src/app/task/assigntask/assigntask.component.ts","webpack:///./src/app/task/task-detail/task-detail.component.html","webpack:///./src/app/task/task-detail/task-detail.component.ts","webpack:///./src/app/task/task-list/task-list.component.html","webpack:///./src/app/task/task-list/task-list.component.ts","webpack:///./src/app/territory/place-modal/place-modal.component.html","webpack:///./src/app/territory/place-modal/place-modal.component.ts","webpack:///./src/app/territory/territory-add/territory-add.component.html","webpack:///./src/app/territory/territory-add/territory-add.component.ts","webpack:///./src/app/territory/territory-detail/territory-detail.component.html","webpack:///./src/app/territory/territory-detail/territory-detail.component.ts","webpack:///./src/app/territory/territory-list/territory-list.component.html","webpack:///./src/app/territory/territory-list/territory-list.component.ts","webpack:///./src/app/toast.ts","webpack:///./src/app/travel/add-on-detail/add-on-detail.component.html","webpack:///./src/app/travel/add-on-detail/add-on-detail.component.scss","webpack:///./src/app/travel/add-on-detail/add-on-detail.component.ts","webpack:///./src/app/travel/add-travel/add-travel.component.html","webpack:///./src/app/travel/add-travel/add-travel.component.ts","webpack:///./src/app/travel/detail-travel/detail-travel.component.html","webpack:///./src/app/travel/detail-travel/detail-travel.component.ts","webpack:///./src/app/travel/list-travel/list-travel.component.html","webpack:///./src/app/travel/list-travel/list-travel.component.ts","webpack:///./src/app/travel/update-travel/update-travel.component.html","webpack:///./src/app/travel/update-travel/update-travel.component.scss","webpack:///./src/app/travel/update-travel/update-travel.component.ts","webpack:///./src/app/user/address-modal/address-modal.component.html","webpack:///./src/app/user/address-modal/address-modal.component.ts","webpack:///./src/app/user/email-modal/email-modal.component.html","webpack:///./src/app/user/email-modal/email-modal.component.ts","webpack:///./src/app/user/sale-user-detail/sale-user-detail.component.html","webpack:///./src/app/user/sale-user-detail/sale-user-detail.component.ts","webpack:///./src/app/user/sale-user-list/sale-user-list.component.html","webpack:///./src/app/user/sale-user-list/sale-user-list.component.ts","webpack:///./src/app/user/system-modal/system-modal.component.html","webpack:///./src/app/user/system-modal/system-modal.component.ts","webpack:///./src/app/user/system-user-detail/system-user-detail.component.html","webpack:///./src/app/user/system-user-detail/system-user-detail.component.ts","webpack:///./src/app/user/system-user-list/system-user-list.component.html","webpack:///./src/app/user/system-user-list/system-user-list.component.ts","webpack:///./src/app/user/user-add/user-add.component.html","webpack:///./src/app/user/user-add/user-add.component.ts","webpack:///./src/app/vendor/qr-code-detail/qr-code-detail.component.html","webpack:///./src/app/vendor/qr-code-detail/qr-code-detail.component.ts","webpack:///./src/app/vendor/vendor-add/vendor-add.component.html","webpack:///./src/app/vendor/vendor-add/vendor-add.component.ts","webpack:///./src/app/vendor/vendor-detail/vendor-detail.component.html","webpack:///./src/app/vendor/vendor-detail/vendor-detail.component.ts","webpack:///./src/app/vendor/vendor-list/vendor-list.component.html","webpack:///./src/app/vendor/vendor-list/vendor-list.component.ts","webpack:///./src/app/vendor/vendor-update/vendor-update.component.html","webpack:///./src/app/vendor/vendor-update/vendor-update.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" novalidate>\\n  <div class=\\\"main-container\\\">\\n    <div *ngIf=\\\"loader\\\"> \\n      <div class=\\\"cs-loader\\\">\\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n      </div>\\n    </div>\\n    <div class=\\\"middle-container\\\">\\n      <div class=\\\"page-heading\\\">\\n        <img src=\\\"assets/img/activity.svg\\\" class=\\\"h-icon\\\">\\n        <div class=\\\"heading-text\\\">\\n          <h2>DVR</h2>\\n          <p>Add DVR</p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box  pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Checkin Date And Time</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput [matDatepicker]=\\\"pickers1\\\" readonly [max]='currentDate' \\n                        (dateChange)=\\\"getlocation()\\\"  placeholder=\\\"Check In Date\\\" #activitydate=\\\"ngModel\\\" id=\\\"activitydate\\\" name=\\\"activitydate\\\" [(ngModel)]=\\\"activityData.activitydate\\\"  [ngClass]=\\\"{ 'is-invalid': f.submitted && activitydate.invalid }\\\" required>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"pickers1\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #pickers1></mat-datepicker>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && activitydate.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"activitydate.errors.required\\\">Checkin Date is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4\\\"  *ngIf=\\\"activityData.activitydate\\\">\\n                    <div class=\\\"control-field mt14\\\">\\n                      <div class=\\\"cs-input\\\">\\n                        <input [owlDateTimeTrigger]=\\\"dt5\\\" [owlDateTime]=\\\"dt5\\\" placeholder=\\\"Check In Time\\\" name=\\\"activityInTime\\\" #activityInTime=\\\"ngModel\\\"  (dateTimeInput)=\\\"check1(activityData.activityInTime)\\\" [(ngModel)]=\\\"activityData.activityInTime\\\" [ngClass]=\\\"{ 'is-invalid': (f.submitted && activityInTime.invalid) && (datenotvalid==true)}\\\" readonly required>\\n                        <owl-date-time [pickerType]=\\\"'timer'\\\" [hour12Timer]='true'  #dt5 ></owl-date-time>\\n                      </div>\\n                    </div>\\n                    <mat-error *ngIf=\\\"f.submitted && activityInTime.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"activityInTime.errors.required\\\">Check In Time is required</mat-error>\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"datenotvalid==true\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"datenotvalid==true\\\">Check-In time must be between 06:00 AM to 10:00 PM</mat-error>\\n                    </mat-error>\\n                  </div>\\n                  <div class=\\\"col s4\\\"  *ngIf=\\\"activityData.activitydate\\\">\\n                    <div class=\\\"control-field mt14\\\">\\n                      <div class=\\\"cs-input\\\">\\n                        <input [owlDateTimeTrigger]=\\\"dt5\\\" [owlDateTime]=\\\"dt5\\\" placeholder=\\\"Check Out Time\\\" name=\\\"activityOutTime\\\" #activityOutTime=\\\"ngModel\\\" (dateTimeInput)=\\\"check2(activityData.activityOutTime)\\\" [(ngModel)]=\\\"activityData.activityOutTime\\\" [ngClass]=\\\"{ 'is-invalid': (f.submitted && activityOutTime.invalid)  && (dateoutnotvalid==true)}\\\" readonly required>\\n                        <owl-date-time [pickerType]=\\\"'timer'\\\" #dt5 [hour12Timer]='true' ></owl-date-time>\\n                      </div>\\n                    </div>\\n                    <mat-error *ngIf=\\\"f.submitted && activityOutTime.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"activityOutTime.errors.required\\\">Check Out Time is required</mat-error>\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"dateoutnotvalid==true\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"activityData.activityOutTime < timecheckoutfirst || timecheckoutlast < activityData.activityOutTime\\\">Check-Out time must be between 07:00 AM to 11:00 PM</mat-error>\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"f.submitted && dateoutnotvalid==true\\\" class=\\\"invalid-feedback\\\">\\n                      Check-Out time should be greater then Check-In time....\\n                    </mat-error>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\" *ngIf=\\\"activityData.activityInTime && activityData.activityOutTime\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                          <textarea matInput placeholder=\\\"Location\\\" name=\\\"location\\\" #location=\\\"ngModel\\\"  id=\\\"location\\\"  [(ngModel)]=\\\"activityData.location\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && location.invalid }\\\" required ></textarea>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && location.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"location.errors.required\\\">Location is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Dealer Information</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <mat-select  placeholder=\\\"Select Network\\\" id=\\\"role\\\" name=\\\"role\\\" [(ngModel)]=\\\"activityData.role\\\" #role=\\\"ngModel\\\"  [ngClass]=\\\"{ 'is-invalid': f.submitted && role.invalid }\\\" required>\\n                          <mat-option  (click)=\\\"getnetworklist(role.roleId)\\\" *ngFor=\\\"let role of client1\\\" value=\\\"{{role.roleId}}\\\">{{role.roleName}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && role.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"role.errors.required\\\">Network  is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s6 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <mat-select  placeholder=\\\"Select Company\\\"  id=\\\"referenceId\\\" name=\\\"referenceId\\\" #referenceId=\\\"ngModel\\\" [(ngModel)]=\\\"activityData.referenceId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && referenceId.invalid }\\\" required>\\n                          <mat-option  *ngFor=\\\"let netdata of distributionList\\\" [value]=\\\"netdata.networkId\\\">{{netdata.establishment}}</mat-option>\\n                          <mat-option  *ngFor=\\\"let lead of networkLeadList\\\" [value]=\\\"lead.leadId\\\">{{lead.establishment}}</mat-option>\\n                          <mat-option value=\\\"10\\\">Other User</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && referenceId.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"referenceId.errors.required\\\">Company is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"activityData.referenceId=='10'\\\" class=\\\"row\\\">\\n                    <div  class=\\\"col s4 \\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input\\\">\\n                          <input matInput placeholder=\\\"Name\\\" id=\\\"OtherCustomer\\\" name=\\\"OtherCustomer\\\" #OtherCustomer=\\\"ngModel\\\" [(ngModel)]=\\\"activityData.OtherCustomer\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && OtherCustomer.invalid }\\\">\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && OtherCustomer.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"OtherCustomer.errors.required\\\">Name is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <mat-select multiple placeholder=\\\"Select Segment\\\"  id=\\\"segment\\\" name=\\\"segment\\\" #segment=\\\"ngModel\\\" [(ngModel)]=\\\"activityData.segment\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && segment.invalid }\\\" required>\\n                            <mat-option value=\\\"2w\\\">2w</mat-option>\\n                            <mat-option value=\\\"3w\\\">3w</mat-option>\\n                            <mat-option value=\\\"4w\\\">4w</mat-option>\\n                            <mat-option value=\\\"6w\\\">6w</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && segment.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"segment.errors.required\\\">Segment is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div  class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input\\\">\\n                          <input matInput placeholder=\\\"Mobile no\\\" id=\\\"mobile\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"activityData.mobile\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobile.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && mobile.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"mobile.errors.required\\\">Mobile is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"sprate-box mt15 pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Check In Information</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  \\n                  <div class=\\\"col s6 padding0\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s12 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"Objective Of Visit\\\" id=\\\"objectivesOfVisit\\\" name=\\\"objectivesOfVisit\\\" #objectivesOfVisit=\\\"ngModel\\\" [(ngModel)]=\\\"activityData.objectivesOfVisit\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && objectivesOfVisit.invalid }\\\" required>\\n                              <mat-option value=\\\"1\\\">Routine Visit</mat-option>\\n                              <mat-option value=\\\"2\\\">Order</mat-option>\\n                              <mat-option value=\\\"3\\\">Payment</mat-option>\\n                              <mat-option value=\\\"4\\\">Order + Payment</mat-option>\\n                              <mat-option value=\\\"5\\\">Concern Handling</mat-option>\\n                              <mat-option value=\\\"6\\\">Other</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && objectivesOfVisit.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"objectivesOfVisit.errors.required\\\">Objective Of Visit is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s12 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"Next Followup Type\\\" name=\\\"nextFollowUpType\\\" #nextFollowUpType=\\\"ngModel\\\" id=\\\"nextFollowUpType\\\" [(ngModel)]=\\\"activityData.nextFollowUpType\\\">\\n                              <mat-option value=\\\"1\\\">Call</mat-option>\\n                              <mat-option value=\\\"2\\\">Meeting</mat-option>\\n                              <mat-option value=\\\"3\\\">Email</mat-option>\\n                              <mat-option value=\\\"4\\\">Task</mat-option>\\n                              <mat-option value=\\\"5\\\">Other</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s12 pl0\\\" *ngIf=\\\"activityData.nextFollowUpType!=4 && activityData.nextFollowUpType!=5\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput [matDatepicker]=\\\"pickers\\\" readonly [min]='currentDate' id=\\\"nextFollowUpDate\\\" placeholder=\\\"Next Followup Date\\\" #nextFollowUpDate=\\\"ngModel\\\" name=\\\"nextFollowUpDate\\\" [(ngModel)]=\\\"activityData.nextFollowUpDate\\\" >\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"pickers\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #pickers></mat-datepicker>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      \\n                     \\n                      \\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s6 padding0\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s12 pr0\\\" *ngIf=\\\"activityData.objectivesOfVisit=='6'\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Other\\\" name=\\\"OtherObjective\\\"  id=\\\"OtherObjective\\\"  name=\\\"OtherObjective\\\" #OtherObjective=\\\"ngModel\\\" [(ngModel)]=\\\"activityData.OtherObjective\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && OtherObjective.invalid }\\\" >\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && OtherObjective.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"OtherObjective.errors.required\\\">Reason is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s12 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <textarea matInput placeholder=\\\"Remark\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\"  id=\\\"remarks\\\"  [(ngModel)]=\\\"activityData.remarks\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && remarks.invalid }\\\" required class=\\\"h166\\\"></textarea>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && remarks.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"remarks.errors.required\\\">Remark is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-btn fixedd mt15 text-right\\\">\\n            <div class=\\\"in-btn\\\">\\n              <button mat-raised-button color=\\\"accent\\\" (click)=\\\"setFocus(f.form)\\\">Save</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit, Inject, ElementRef, PLATFORM_ID  } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport {MatDialog} from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { sessionStorage }  from '../../local-storage.service';\nimport * as moment from 'moment';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-add-activity',\n  templateUrl: './add-activity.component.html', \n  animations: [slideToTop()]\n})\nexport class AddActivityComponent implements OnInit {\n  userdata:any=[];\n  loader:boolean;\n  senddata:any;  \n  message:any;\n  userType:any;\n  datenotvalid:any=false;\n  dateoutnotvalid:any=false;\n  leadlist:any;\n  distributionList:any;\n  rolelists:any;\n  client1:any;\n  activityData:any={};\n  clientrole:any;\n  timecheckinfirst:any='6:00';\n  timecheckinlast:any='22:00';\n  timecheckoutfirst:any='7:00';\n  timecheckoutlast:any='23:00';\n  other:any=false;\n  currentDate:any = new Date().toJSON().split('T')[0];\n  constructor(public db:ConstantService,public router:Router,public user:sessionStorage,public route:ActivatedRoute, public dialog: MatDialog,public toast:SnackBarOverview,@Inject(PLATFORM_ID) private platformId: Object) {\n  }\n  \n  ngOnInit(){\n    this.rolelist();\n    this.userdata=this.user['user']['data'];\n    this.userType=this.userdata['userType'];\n    this.activityData.userId=this.userdata['userId'];\n    console.log(this.activityData.userId);\n  }\n  \n  \n  \n  rolelist()\n  {\n    this.other=false;\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.rolelists=response['data'];\n      let cllient= this.rolelists.filter(x => x.userTypeId==3);\n      this.client1=cllient[0].roles;\n      console.log(this.client1);\n    });\n  }\n  \n  \n  \n  get_data(roleId){\n    console.log(roleId);\n    console.log(this.activityData);\n    this.clientrole=roleId;\n    this.activityData.role=this.clientrole;\n    this.activityData.activityModule=1;\n    console.log(\"get network based on role\"+this.activityData.role);\n  }\n  \n  getleadlist(){\n    this.loader=true;\n    if(this.userdata['userType']==2){\n      this.senddata={\"leadrole\":this.activityData.leadrole,\"userId\":this.userdata['userId'],\"currentPage\": 1,\"pageSize\": 50};\n    }else{\n      this.senddata={\"leadrole\":this.activityData.leadrole,\"currentPage\": 1,\"pageSize\": 50};\n    }\n    this.db.fetchData(this.senddata,'lead/list').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.leadlist=response['data'];\n      console.log(this.leadlist);\n    });\n  }\n  \n  \n  \n  \n  \n  \n  networkLeadList:any=[]\n  getnetworklist(role){\n    this.distributionList=[];\n    this.networkLeadList=[]\n    if(role==11){\n      this.activityData.activityModule=2\n    }\n    else if(role==12){\n      this.activityData.activityModule=1\n    }\n    else if(role==13){\n      this.activityData.activityModule=3\n    }\n    else if(role==14){\n      this.activityData.activityModule=4\n    }\n    else if(role==15){\n      this.activityData.activityModule=5\n    }\n    else{\n      this.activityData.activityModule=6\n\n    }\n    this.loader=true;\n    if(role==12)\n    {\n      console.log(role);\n      \n      if(this.userdata['userType']==2){\n        this.senddata={\"role\":this.activityData.role,\"salesUserId\":this.userdata['userId']};\n        console.log(this.senddata);\n        this.db.fetchData(this.senddata,'mynetwork/detail').subscribe((response)=>\n        {\n          console.log(response)\n          this.loader=false;\n          this.distributionList=response['data'];\n          console.log(this.distributionList);\n        });\n      }else{\n        this.senddata={\"role\":this.activityData.role,};\n        console.log(this.senddata);\n        this.db.fetchData(this.senddata,'network/list').subscribe((response)=>\n        {\n          console.log(response)\n          this.loader=false;\n          this.distributionList=response['data'];\n          console.log(this.distributionList);\n        });\n      }\n    }\n    else{\n      console.log(role);\n      if(this.userdata['usreType']==2)\n      {\n        \n        this.db.fetchData({'createdBy':this.userdata['userId'],'filterOnAssignTo': false,\"currentPage\": 1,\"pageSize\": 500,'leadType':role,'isActive':1},\"lead/list\").subscribe((result)=>{\n          console.log(result);\n          if(result['status']=='Success')\n          {\n            this.networkLeadList=result['data'];\n          }\n          \n        })\n      }\n      else{\n        this.db.fetchData({\"currentPage\": 1,'filterOnAssignTo': false,\"pageSize\": 500,'leadType':role,'isActive':1},\"lead/list\").subscribe((result)=>{\n          console.log(result);\n          if(result['status']=='Success')\n          {\n            this.networkLeadList=result['data'];\n          }\n          \n        })\n      }\n    }\n    this.loader=false\n  }\n  \n  \n  \n  \n  \n  locationlist:any=[];\n  getlocation(){\n    this.activityData.activityDate==moment(this.activityData.activitydate).format('YYYY-MM-DD');\n    console.log(this.activityData.activitydate);\n    this.db.fetchData({'visitDate':this.activityData.activitydate},'location/list').subscribe((response)=>\n    {\n      console.log(response)\n      this.loader=false;\n      this.locationlist=response['data'];\n      console.log(this.locationlist);\n    });\n  }\n  \n  \n  \n  \n  check1(time){\n    console.log(\"check in time validation\");\n    console.log(this.activityData.activitydate)\n    const activityDate = moment(this.activityData.activitydate).format('Y-MM-D');\n    console.log(activityDate);\n    \n    this.activityData.activityInTime = moment(this.activityData.activityInTime).format('HH:mm');\n    var checkinTimeSelected = new Date(activityDate + ' ' + this.activityData.activityInTime+':00').getTime();\n    \n    console.log(checkinTimeSelected); \n    \n    console.log('Checkin Validate Start Time');\n    \n    const checkinTime1 = moment(activityDate+ ' 06:00:00').format('Y-MM-D H:mm:ss');\n    var checkinMinimumTime = new Date(checkinTime1).getTime();\n    \n    const checkinTime2 = moment(activityDate+ ' 23:00:00').format('Y-MM-D H:mm:ss');\n    var checkinMaximumTime = new Date(checkinTime2).getTime();\n    \n    console.log(checkinMinimumTime);\n    console.log(checkinMaximumTime);\n    \n    if (checkinMinimumTime > checkinTimeSelected || checkinTimeSelected  > checkinMaximumTime) {\n      this.datenotvalid=true;\n      console.log(this.activityData.activityInTime);\n    } else{\n      this.datenotvalid=false;\n      this.activityData.activityInTime=time;\n      console.log(this.activityData.activityInTime);\n    }\n    \n  }\n  \n  check2(time2){\n    console.log(\"check out time validation\")\n    console.log(this.activityData.activityOutTime)\n    console.log(moment(this.activityData.activityOutTime).format('hh:mm'));\n    const activityDate = moment(this.activityData.activityOutTime).format('Y-MM-D');\n    console.log(activityDate);\n    \n    \n    this.activityData.activityOutTime = moment(this.activityData.activityOutTime).format('HH:mm');\n    var checkoutTimeSelected = new Date(activityDate + ' ' + this.activityData.activityOutTime+':00').getTime();\n    \n    console.log(checkoutTimeSelected); \n    \n    console.log('Checkin Validate Start Time');\n    \n    const checkinTime1 = moment(activityDate+ ' 07:00:00').format('Y-MM-D H:mm:ss');\n    var checkinMinimumTime = new Date(checkinTime1).getTime();\n    \n    const checkinTime2 = moment(activityDate+ ' 23:00:00').format('Y-MM-D H:mm:ss');\n    var checkinMaximumTime = new Date(checkinTime2).getTime();\n    \n    console.log(checkinMinimumTime);\n    console.log(checkinMaximumTime);\n    \n    if (checkinMinimumTime > checkoutTimeSelected || checkoutTimeSelected  > checkinMaximumTime) {\n      this.dateoutnotvalid=true;\n      console.log(this.activityData.activityOutTime);\n    } else{\n      this.dateoutnotvalid=false;\n      this.activityData.activityOutTime=time2;\n      console.log(this.activityData.activityOutTime);\n    }\n    \n  }\n  \n  \n  \n  type:any;\n  othercustomer:any;\n  onSubmit(){\n    \n    console.log(this.activityData);\n    let checkInTime=moment(this.activityData.activityInTime).format('HH:mm');\n    console.log(checkInTime);\n    let checkOutTime=moment(this.activityData.activityOutTime).format('HH:mm')\n    console.log(checkOutTime);\n    \n    let inTime=moment(this.activityData.activitydate).format('YYYY-MM-DD')+' '+checkInTime;\n    console.log(inTime);\n    \n    let outTime=moment(this.activityData.activitydate).format('YYYY-MM-DD')+' '+checkOutTime;\n    console.log(outTime);\n    \n    this.activityData.networkId=this.activityData.referenceId;\n    if(this.activityData.nextFollowUpType==4){\n      this.type=this.activityData.nextFollowUpType;\n      this.activityData.nextFollowUpType='';\n    } \n    if(this.activityData.referenceId==10){\n      this.othercustomer=this.activityData.referenceId;\n      this.activityData.referenceId='';\n    }\n    if(this.activityData.activityInTime<this.activityData.activityOutTime){\n      this.activityData.status=1;\n      this.activityData.activityDate=moment(this.activityData.activityDate).format('YYYY-MM-DD');\n    }\n    \n    \n    console.log(this.activityData.activityInTime);\n    // var date=this.activityData.activitydate;\n    // var inTime=this.activityData.activityInTime;\n    // var outTime=this.activityData.activityOutTime;\n    // console.log(date,inTime);\n    // var inDateTime=date+\"T\"+inTime;\n    this.activityData.checkInTime=inTime;\n    // var outDateTime=date+\"T\"+outTime;\n    this.activityData.checkOutTime=outTime;\n    // console.log(inDateTime,outDateTime);\n    \n    \n    if(this.activityData.nextFollowUpDate){\n      this.activityData.isFollowUp=true;\n      this.activityData.nextFollowUpDate=moment(this.activityData.nextFollowUpDate).format('YYYY-MM-DD');\n    }\n    else{\n      this.activityData.isFollowUp=false;\n    }\n    \n    console.log(this.activityData);\n    const activityTempArr = JSON.parse(JSON.stringify(this.activityData));\n    if(this.type==4){\n      delete activityTempArr['nextFollowUpType'];\n    }\n    console.log(this.othercustomer);\n    if(this.othercustomer==10){\n      delete activityTempArr['networkId'];\n      delete activityTempArr['referenceId'];\n    }\n    console.log(activityTempArr);\n    \n    // return;\n    this.db.fetchData(activityTempArr,'activity/add').subscribe((response)=>\n    {\n      console.log(response)\n      this.loader=false;\n      this.message=response['message'];\n      if(response['status']=='Success')\n      {\n        if(this.type!=4){\n          this.toast.openSucess('Activity added successfully','');\n          this.router.navigate(['/checkin-list']);\n        }else{\n          this.toast.openSucess('Activity added successfully','');\n          this.router.navigate(['/add-task']);\n        }\n      }\n      else\n      {\n        this.toast.openError('Activity Not Added !!','');\n      };\n    });\n    \n  }\n  \n  \n  \n  \n  \n  setFocus(form) {\n    console.log(form.controls);\n    for (var key in form.controls)\n    {\n      if (form.controls.hasOwnProperty(key)) {\n        if(form.controls[key].status=='INVALID')\n        {\n          if (isPlatformBrowser(this.platformId)) {\n            console.log(\"hii\");\n            $('#'+key).focus();\n          }\n          console.log(key);\n          return true;\n        }\n        console.log(key + \" -> \" + form.controls[key].status);\n      }\n    }\n  }\n  \n  oherType()\n  {\n    this.other=true;\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/allowance .svg\\\" class=\\\"h-icon h26\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Allowance </h2>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"left-auto\\\">\\n        <div class=\\\"cs-btn fixedd text-right\\\">\\n            <div class=\\\"in-btn\\\" (click)=\\\"saveAllowance()\\\">\\n              <button mat-raised-button color=\\\"accent\\\" >Update</button>\\n            </div>\\n          </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table\\\">\\n            \\n            <div class=\\\"flat-table\\\">\\n              <table>\\n                <tr>\\n                  <th class=\\\"padding0 w200 text-left\\\"><p>Role</p></th>\\n                  <th class=\\\"padding0 w950\\\"><p>Travel Entitlement</p>\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <th class=\\\"w100 padding0\\\"><p>Flight</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <th><p>Economy Class (Air)</p></th>\\n                          </table>\\n                        </th>\\n                        <th class=\\\"w400 padding0\\\"><p>Train</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <tr>\\n                              <th class=\\\"w200\\\"><p>Train (Executive Chair car, 2nd tier AC sleeper, 1st Class)</p></th>\\n                              <th class=\\\"w100\\\"><p>Train (III tier AC)</p></th>\\n                              <th class=\\\"w100\\\"><p>Train (III tier sleeper)</p></th>\\n                            </tr>\\n                          </table>\\n                        </th>\\n                        <th class=\\\"w200 padding0\\\"><p>Buses</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <tr>\\n                              <th class=\\\"w100\\\"><p>AC Buses</p></th>\\n                              <th class=\\\"w100\\\"><p>Non - AC Buses</p></th>\\n                            </tr>\\n                          </table>\\n                        </th>\\n                        <th class=\\\"w250 padding0\\\"><p>Taxi</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <tr>\\n                              <th class=\\\"w125\\\"><p>Private Taxi/ OLA /UBER #</p></th>\\n                              <th class=\\\"w125\\\"><p>Shared Taxi</p></th>\\n                            </tr>\\n                          </table>\\n                        </th>\\n                      </tr>\\n                    </table>\\n                  </th>\\n                  <th class=\\\"w400 padding0\\\"><p>Hotel</p>\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <th class=\\\"w100 padding0\\\"><p>A+</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <th><p><a (click)=\\\"openDialog()\\\">City Detail</a></p></th>\\n                          </table>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>A</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <th><p><a (click)=\\\"openDialog()\\\">City Detail</a></p></th>\\n                          </table>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>B</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <th><p><a (click)=\\\"openDialog()\\\">City Detail</a></p></th>\\n                          </table>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>C</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <th><p><a (click)=\\\"openDialog()\\\">City Detail</a></p></th>\\n                          </table>\\n                        </th>\\n                      </tr>\\n                    </table>\\n                  </th>\\n                  <th class=\\\"w400 padding0\\\"><p>Food Expense</p>\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <th class=\\\"w100 padding0\\\"><p>A+</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <th><p><a (click)=\\\"openDialog()\\\">City Detail</a></p></th>\\n                          </table>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>A</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <th><p><a (click)=\\\"openDialog()\\\">City Detail</a></p></th>\\n                          </table>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>B</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <th><p><a (click)=\\\"openDialog()\\\">City Detail</a></p></th>\\n                          </table>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>C</p>\\n                          <table class=\\\"multi-table\\\">\\n                            <th><p><a (click)=\\\"openDialog()\\\">City Detail</a></p></th>\\n                          </table>\\n                        </th>\\n                      </tr>\\n                    </table>\\n                  </th>\\n                  <th class=\\\"padding0 w500\\\"><p>Local Conveyance</p>\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <th class=\\\"w100 padding0\\\"><p>A/c Taxi</p>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>Non A/c Taxi</p>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>Auto</p>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>Bus</p>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>Two Wheeler</p>\\n                        </th>\\n                      </tr>\\n                    </table>\\n                  </th>\\n                  <th class=\\\"padding0 w200\\\"><p>Self</p>\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <th class=\\\"w100 padding0\\\"><p>Car/km</p>\\n                        </th>\\n                        <th class=\\\"w100 padding0\\\"><p>Bike/km</p>\\n                        </th>\\n                      </tr>\\n                    </table>\\n                  </th>\\n                </tr>\\n\\n                <tr *ngFor=\\\"let list of designationArr; let index = index\\\">\\n                  <td>{{list.designationName}}</td>\\n                  <td class=\\\"padding0 text-center\\\">\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <td class=\\\"w100 padding0\\\">\\n                          <table class=\\\"multi-table\\\">\\n                            <td><mat-checkbox [(ngModel)]=\\\"list.flightEconomyClass\\\" name=\\\"flightEconomyClass{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n                          </table>\\n                        </td>\\n                        <td class=\\\"w400 padding0\\\">\\n                          <table class=\\\"multi-table\\\">\\n                            <tr>\\n                              <td class=\\\"w200\\\"><mat-checkbox [(ngModel)]=\\\"list.travelTrain2A\\\" name=\\\"travelTrain2A{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n                              <td class=\\\"w100\\\"><mat-checkbox [(ngModel)]=\\\"list.travelTrain3A\\\" name=\\\"travelTrain3A{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n                              <td class=\\\"w100\\\"><mat-checkbox [(ngModel)]=\\\"list.travelTrainSL\\\" name=\\\"travelTrainSL{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n                            </tr>\\n                          </table>\\n                        </td>\\n                        <td class=\\\"w200 padding0\\\">\\n                          <table class=\\\"multi-table\\\">\\n                            <tr>\\n                              <td class=\\\"w100\\\"><mat-checkbox [(ngModel)]=\\\"list.travelBusAC\\\" name=\\\"travelBusAC{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n                              <td class=\\\"w100\\\"><mat-checkbox [(ngModel)]=\\\"list.travelBusNonAC\\\" name=\\\"travelBusNonAC{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n                            </tr>\\n                          </table>\\n                        </td>\\n                        <td class=\\\"w250 padding0\\\">\\n                          <table class=\\\"multi-table\\\">\\n                            <tr>\\n                              <td class=\\\"w125\\\"><mat-checkbox [(ngModel)]=\\\"list.travelTaxiPrivate\\\" name=\\\"travelTaxiPrivate{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n                              <td class=\\\"w125\\\"><mat-checkbox [(ngModel)]=\\\"list.travelTaxiShared\\\" name=\\\"travelTaxiShared{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n                            </tr>\\n                          </table>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </td>\\n                  \\n                  <td class=\\\"padding0\\\">\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <td class=\\\"w100\\\">\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.lodgingAllowanceAPlus\\\" name=\\\"lodgingAllowanceAPlus{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                        <td class=\\\"w100\\\">\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.lodgingAllowanceA\\\" name=\\\"lodgingAllowanceA{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                        <td class=\\\"w100\\\">\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.lodgingAllowanceB\\\" name=\\\"lodgingAllowanceB{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                        <td class=\\\"w100\\\">\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.lodgingAllowanceC\\\" name=\\\"lodgingAllowanceC{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </td>\\n                  <td class=\\\"padding0\\\">\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <td class=\\\"w100\\\">\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.foodAllowanceAPlus\\\" name=\\\"foodAllowanceAPlus{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                        <td class=\\\"w100\\\">\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.foodAllowanceA\\\" name=\\\"foodAllowanceA{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                        <td class=\\\"w100\\\">\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.foodAllowanceB\\\" name=\\\"foodAllowanceB{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                        <td class=\\\"w100\\\">\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.foodAllowanceC\\\" name=\\\"foodAllowanceC{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </td>\\n                  <td class=\\\"padding0 text-center\\\">\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <td><mat-checkbox [(ngModel)]=\\\"list.localTaxiAC\\\" name=\\\"localTaxiAC{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n\\n                        <td><mat-checkbox [(ngModel)]=\\\"list.localTaxiNonAC\\\" name=\\\"localTaxiNonAC{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n\\n                        <td><mat-checkbox [(ngModel)]=\\\"list.localAuto\\\" name=\\\"localAuto{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n\\n                        <td><mat-checkbox [(ngModel)]=\\\"list.localBus\\\" name=\\\"localBus{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n\\n                        <td><mat-checkbox [(ngModel)]=\\\"list.localTwoWheeler\\\" name=\\\"localTwoWheeler{{index}}\\\" color=\\\"accent\\\">&nbsp;</mat-checkbox></td>\\n                      </tr>\\n                    </table>\\n                  </td>\\n                  <td class=\\\"padding0 text-center\\\">\\n                    <table class=\\\"multi-table\\\">\\n                      <tr>\\n                        <td>\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.selfCarPerKM\\\" name=\\\"selfCarPerKM{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                        <td>\\n                          <input type=\\\"text\\\" [(ngModel)]=\\\"list.selfBikePerKM\\\" name=\\\"selfBikePerKM{{index}}\\\" class=\\\"simple-input\\\">\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </td>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { CitiesModalComponent } from '../cities-modal/cities-modal.component';\nimport { ConstantService } from '../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n    selector: 'app-allowance',\n    templateUrl: './allowance.component.html'\n})\n\nexport class AllowanceComponent implements OnInit {\n\n  loader:boolean;\n  designationArr:any = [];\n\n  constructor(public dialog: MatDialog, public db: ConstantService, public toast: SnackBarOverview, public confirm:DialogComponent) { }\n\n  ngOnInit() {\n    \n    this.allowanceList();\n  }\n\n    openDialog(): void {\n\n        const dialogRef = this.dialog.open(CitiesModalComponent, {\n          width: '768px',\n          data: {}\n        });\n\n    }\n\n\n    allowanceList() {\n\n\n      console.log(this.designationArr);\n\n      this.loader = true;\n\n      this.db.fetchData({} ,'allowance/list').subscribe((response) => {\n\n            console.log(response);\n\n            this.designationArr = response['data'];\n\n            console.log(this.designationArr);\n\n            this.loader = false;\n            // this.toast.openSucess('Allowances Updated successfully','');\n      });\n\n\n\n\n    }\n\n    saveAllowance() {\n\n         console.log(this.designationArr);\n\n         this.loader = true;\n\n         const allowanceData = {};\n\n         allowanceData['allowances'] = this.designationArr;\n\n         this.db.fetchData(allowanceData ,'allowance/update').subscribe((response) => {\n               console.log(response);\n\n              this.loader = false;\n\n              this.confirm.success();\n         });\n    }\n\n}\n\n","module.exports = \"<div class=\\\"main-container\\\">\\n  \\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/announcement.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Announcement / Notice</h2>\\n        <p>Create New Notice For all Users</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && data.message && (data.isSMSChecked || data.isEmailChecked) &&  salesNetworkSelectedData?.length > 0 && saveAnnouncementDetail()\\\"  #f=\\\"ngForm\\\" novalidate>\\n    \\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>ANNOUNCEMENT / NOTICE </h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col s3 pl0\\\">\\n                  <div class=\\\"from-fields\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <mat-select color=\\\"accent\\\" id=\\\"segment\\\" placeholder=\\\"Select Segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"data.segment\\\" #segment=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && segment.invalid }\\\" multiple [required]=\\\"segmentRequired\\\">\\n\\n                          <mat-option color=\\\"accent\\\" (click)=\\\"getSegmentChangeHandler()\\\" value=\\\"{{segment.text}}\\\"  *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n\\n                      <mat-error *ngIf=\\\"f.submitted && segmentRequired\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"segment.errors.required\\\">Segment is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col s9 pr0\\\">\\n                    <div class=\\\"user-type\\\">\\n                        <div class=\\\"example-section\\\">\\n                          <ng-container *ngFor=\\\"let list of userRolesArr; let index = index\\\">\\n                            <mat-checkbox  *ngIf=\\\"list.userTypeId==1 || list.userTypeId==2 || (list.userTypeId==3 && list.roleId==12)\\\" [(ngModel)]=\\\"list.checked\\\" (change)=\\\"roleSelectedChange(list)\\\" name=\\\"{{list.roleName}}{{index}}\\\" [disabled]=\\\"list.userTypeId!=1 && !data.segment || data.segment?.length==0\\\" class=\\\"example-margin\\\" color=\\\"accent\\\">{{list.roleName}}</mat-checkbox>\\n                          </ng-container>\\n                        </div>\\n                      </div>\\n                </div>\\n\\n              </div>\\n              \\n              <div class=\\\"row mt15\\\">\\n                <div *ngFor=\\\"let list of salesNetworkData\\\" class=\\\"col s4 pl0\\\">\\n                  \\n                  <div class=\\\"territory-info mb15\\\">\\n                    <div class=\\\"head\\\" [ngClass]=\\\"{'active':active[list.roleId]==true}\\\">\\n\\n                      <h2>{{list.roleName}}</h2>\\n\\n                       <span>\\n                          <mat-checkbox class=\\\"fix-check\\\" [(ngModel)]=\\\"list.selectAll\\\" (change)=\\\"onSelectAllHandler(list.roleId, list.selectAll)\\\" name=\\\"selectAll{{list.roleName}}\\\">&nbsp;</mat-checkbox>\\n                       </span>\\n\\n                      <i class=\\\"material-icons search-icon right20\\\" (click)=\\\"toggleSearch(list.roleId,'open')\\\"  matRipple>search</i>\\n                    \\n                      <input type=\\\"text\\\" id=\\\"{{list.roleId}}\\\" [(ngModel)]=\\\"list.searchData\\\" name=\\\"{{list.roleName}}\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                      \\n                      <i class=\\\"material-icons close-icon\\\" (click)=\\\"list.searchData= '';toggleSearch(list.roleId,'close')\\\" matRipple>clear</i>\\n\\n                    </div>\\n\\n\\n                    <div *ngIf=\\\"!list.roleDataArr || list.roleDataArr.length==0\\\" class=\\\"not-data\\\">\\n                      <div class=\\\"inner-data\\\">\\n                        <p>No Data</p>\\n                      </div>\\n                    </div>\\n\\n                    <div *ngIf=\\\"list.roleDataArr && list.roleDataArr.length>0\\\" class=\\\"cs-checkbox\\\">\\n                      <div class=\\\"checkbox-outer\\\">\\n                        <section *ngFor=\\\"let row of list.roleDataArr | myfilter:{src: 'annoucmentFilter', search: list.searchData};let stateIndex=index;\\\" class=\\\"checkbox-inner\\\">\\n\\n                            <ng-container>\\n                              <span>\\n                                <mat-checkbox [(ngModel)]=\\\"row.checked\\\"  value=\\\"{{row.userId}}\\\" (change) = \\\"saveNetworkData(row.userId, list.roleId, row.userName, row.checked)\\\" name=\\\"{{list.roleId}}\\\"  class=\\\"check-list content-ellipsis\\\">{{row.userName}}/{{row.city}}</mat-checkbox>\\n                              </span>\\n                            </ng-container>\\n                        </section>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div> \\n              </div>\\n              \\n              <mat-error *ngIf=\\\"f.submitted && !salesNetworkSelectedData.length\\\" class=\\\"invalid-feedback\\\">\\n                  <mat-error *ngIf=\\\"f.submitted && !salesNetworkSelectedData.length\\\">Choose Sales Network!</mat-error>\\n              </mat-error>\\n              \\n              <div class=\\\"row\\\">\\n                <div class=\\\"col s8 pl0\\\">\\n                  <div class=\\\"from-fields\\\">\\n                    <div class=\\\"col s12 pl0 control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr wp100 h-input\\\">\\n                        <input matInput [(ngModel)]=\\\"data.subject\\\" placeholder=\\\"Subject\\\" name=\\\"subject\\\" #subject=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && subject.invalid }\\\" required>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && subject.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"subject.errors.required\\\">Subject required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                    <div class=\\\"col s12 padding0 action-format\\\">\\n                        <div class=\\\"cs-heading margin0\\\">\\n                          <h2>ACTION</h2>\\n                        </div>\\n                        <div class=\\\"select-one padding10\\\">\\n                          <section class=\\\"check-list\\\" >\\n                            <mat-checkbox [(ngModel)]=\\\"data.isSMSChecked\\\" name=\\\"smsChecked\\\" [disabled]=\\\"urls && urls.length>0\\\" class=\\\"select-check\\\">SMS</mat-checkbox>\\n                            <mat-checkbox [(ngModel)]=\\\"data.isEmailChecked\\\" \\n                            name=\\\"emailChecked\\\" class=\\\"select-check\\\">EMAIL</mat-checkbox>\\n                          </section>\\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && !data.isSMSChecked && !data.isEmailChecked\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"f.submitted && !data.isSMSChecked && !data.isEmailChecked\\\">Choose atleast one Option!</mat-error>\\n                          </mat-error>\\n                          \\n                        </div>\\n                      </div>\\n                    <div class=\\\"col s12 mt15 pl0 control-field\\\" >\\n                          <app-ngx-editor   [placeholder]=\\\"'Description'\\\" [spellcheck]=\\\"true\\\" name=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"data.message\\\"  #description=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && description.invalid,'toolbar-none':data.isSMSChecked!='' }\\\" required></app-ngx-editor>\\n                    </div>\\n\\n                    <mat-error class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"!data.message\\\">Description Required!</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n\\n\\n                <div class=\\\"col s4\\\">\\n                    <div class=\\\"upload-excel mt5\\\">\\n                        <label>\\n                          <input (change)=\\\"insertDocument($event)\\\" style=\\\"display: none;\\\" type=\\\"file\\\">\\n                          <div class=\\\"outer\\\">\\n                            <div class=\\\"innear\\\">\\n                              <i class=\\\"material-icons upload-ic\\\">cloud_upload</i>\\n                              <p>Add Document</p>\\n                            </div>\\n                          </div>\\n                        </label>\\n                        <p *ngIf=\\\"selectedFile && selectedFile[0]\\\">{{selectedFile[0].name}}</p>\\n                        <span class=\\\"file-format\\\">PDF format attactment</span>\\n                      </div>\\n\\n                  <!-- <div class=\\\"sprate-box\\\">\\n                    <div class=\\\"cs-logs\\\">\\n                      <div class=\\\"cs-heading\\\">\\n                        <label >\\n                          <input type=\\\"file\\\" (change)=\\\"insertDocument($event)\\\" style=\\\"display: none;\\\">\\n                          Add Document\\n                        </label>\\n                      </div>\\n                      <div class=\\\"logs-outer padding0\\\">\\n                        <div class=\\\"cs-image\\\">\\n                          <div class=\\\"cs-upload\\\">\\n                            <label>\\n                              <input type=\\\"file\\\" (change)=\\\"insertDocument($event)\\\" style=\\\"display: none;\\\">\\n                              <span>\\n                                <i class=\\\"material-icons\\\">add</i>\\n                                <p>Add Document</p>\\n                              </span>\\n                              \\n                              <a class=\\\"close\\\" *ngIf=\\\"urls.length > 0\\\" matRipple matTooltip=\\\"Delete\\\" (click)=\\\"deleteDocument(i)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                            </label>\\n                          </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div> -->\\n                  \\n                  </div>\\n                </div>\\n                \\n                \\n                \\n              </div>\\n            </div>\\n            \\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button type=\\\"submit\\\" mat-raised-button disabled=\\\"{{button}}\\\" color=\\\"accent\\\">Save</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </form>\\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-add-annoucement',\n  templateUrl: './add-annoucement.component.html',\n  animations: [slideToTop()]\n})\n\nexport class AddAnnoucementComponent implements OnInit {\n    \n  button:any=false;\n  territory_form:any={};\n  statelist:any=[];\n  states:any=[];\n  st:any;\n  districts:any=[];\n  cities:any=[];\n  city:any=[];\n  stateval:any=[];\n  districtval:any=[];\n  checkState:any;\n  checkDistrict:any;\n  isSegmentRequired:any = false;\n\n  data:any = {};\n\n  showDistributorList:any = false;\n  showRetailerList:any = false;\n  showSalesList:any = false;\n\n  salesNetworkData:any = [];\n\n  salesNetworkSelectedData:any = [];\n\n  userRolesArr:any = [];\n\n  loader: boolean;\n\n  selectedFile:any=[];\n  documentData:any={};\n\n  segmentlist:any=[];\n\n  constructor(public db: ConstantService,\n              public toast: SnackBarOverview,\n              public router: Router) {\n\n        this.data.isSMSChecked = false;\n        this.data.isEmailChecked = false;\n\n        this.db.fileData('', 'state/list/').subscribe((response)=>{\n            console.log(response);\n            this.statelist = response;\n            this.states = this.statelist.data;\n            console.log(this.states);\n        });\n  }\n\n  ngOnInit() {\n\n     this.getUserTypeRoles();\n     this.segment_list();\n  }\n\n  segment_list() {\n   \n        this.db.fileData('','segment/list/').subscribe((response)=>{\n            console.log(response);\n            this.segmentlist=response['data'];\n        });\n  }\n\n\n  getSegmentChangeHandler() {\n\n        console.log(this.data.segment);\n\n        if (this.data.segment.length == 0) {\n\n\n            for (let index = 0; index < this.userRolesArr.length; index++) {\n                 this.userRolesArr[index].checked = false;\n            }\n\n            this.salesNetworkData = [];\n            this.salesNetworkSelectedData = [];\n\n        } else {\n\n              this.segmentBasedNetworkData();\n        }\n  }\n\n  segmentBasedNetworkData() {\n\n       this.salesNetworkData = [];\n       for (let index = 0; index < this.userRolesArr.length; index++) {\n\n                if(this.userRolesArr[index].checked) {\n\n                        this.loader = true;\n\n                        let apiUrl = '';\n                        let apiObject = {};\n                        if (this.userRolesArr[index].userTypeId == '3' && this.userRolesArr[index].roleId == '12') {\n                            apiUrl = 'network/list';\n                            apiObject = {role: this.userRolesArr[index].roleId};\n                        } else {\n            \n                            apiUrl = 'user/list';\n                            apiObject = {\n                                'userType': this.userRolesArr[index].userTypeId,\n                                'role': this.userRolesArr[index].roleId,\n                                'segments': this.data.segment,\n                                'currentPage': 1,\n                                'pageSize': 200,\n                                'totalRecords': 200\n                            };\n                        }\n            \n                        console.log(apiUrl);\n                        console.log(apiObject);\n            \n                        this.loader = true;\n                        this.db.fetchData(apiObject, apiUrl).subscribe((response:any) => {\n            \n                            console.log(response);\n\n                            setTimeout(() => {\n                                this.loader = false;\n                            }, 2000);\n                            \n                            if(response.data && response.data.length > 0) {\n\n                                  let lastIndex = null;\n\n                                  const isRoleExist = this.salesNetworkData.findIndex(row => row.roleId == response.data[0].role);\n\n                                  if (isRoleExist == -1) {\n\n                                      const userRoleData = this.userRolesArr.filter(row => row.roleId == response.data[0].role);\n\n                                      this.salesNetworkData.push({roleId: this.userRolesArr[index].roleId, roleName: userRoleData[0]['roleName'], roleDataArr: []});\n\n                                      lastIndex = this.salesNetworkData.length - 1;\n\n                                  } else {\n                                      lastIndex = isRoleExist;\n                                  }\n\n\n                                  for (let index1 = 0; index1 < response.data.length; index1++) {\n            \n                                      this.salesNetworkData[lastIndex].roleDataArr.push({userId: response.data[index1].userId, userName: response.data[index1].userName, city:response.data[index1].city});\n                                  }\n                            }\n                            console.log(this.salesNetworkData);\n                        });\n                }\n       }\n\n       console.log(this.salesNetworkData);\n  }\n\n\n\n  getUserTypeRoles() {\n\n        this.loader = true;\n        this.db.fileData( '' , 'usertype/list').subscribe((response:any)=>{\n            console.log(response);\n             this.loader = false;\n\n             console.log(response.length);\n\n             for (let index = 0; index < response.data.length; index++) {\n\n                 console.log('hello');\n\n                  for (let index1 = 0; index1 < response.data[index].roles.length; index1++) {\n\n                      const typeRoles = response.data[index].roles[index1];\n                      this.userRolesArr.push({userTypeId: response.data[index].userTypeId,\n                                              roleId: typeRoles.roleId,\n                                              roleName: typeRoles.roleName });\n                  }\n             }\n\n             console.log(this.userRolesArr);\n        });\n  }\n\n  getDistrictList(state,stateval) {\n    this.loader=true;\n      this.st =Array(state);\n      console.log(stateval);\n      if(stateval === true) {\n\n            this.db.fetchData(this.st,'district/list').subscribe((response:any)=>{\n\n                console.log(response);\n                this.loader=false;\n                this.districts.push(response.data[0]);\n                console.log(this.districts);     \n            });\n\n      } else {\n\n          const x = this.districts.findIndex(items => items.stateName === state);\n          this.districts.splice(x, 1);\n      }\n  }\n\n\n  getAreaList(stateName,districtName,districtval)\n  {\n     \n        console.log(districtval);\n      \n        console.log(stateName); \n        console.log(districtName);    \n        if(districtval==true) {\n            this.loader=true;\n            this.db.fetchData(Array({\"stateName\":stateName,\"distrcits\":Array({\"districtName\":districtName})}),'city/list').subscribe((response:any)=>{\n\n                console.log(response);\n                this.loader=false;\n                this.cities.push({ \"stateName\":stateName,\"distrcits\":districtName,\"citiesnpins\":response.data[0].distrcits[0].cities});\n                console.log(this.cities);\n                this.city=this.cities[0]\n                console.log(this.city);      \n            });\n\n      } else {\n          var x = this.cities.findIndex(items => items.distrcits === districtName);\n          this.cities.splice(x, 1);\n      }\n  }\n\n\n    roleSelectedChange(roleSelected) {\n\n          console.log(roleSelected);\n\n          if (roleSelected.checked === true) {\n\n                let apiUrl = '';\n                let apiObject = {};\n                if (roleSelected.userTypeId == '3' && roleSelected.roleId == '12') {\n\n                    apiUrl = 'network/list';\n                    apiObject = {role: roleSelected.roleId};\n                    \n                } else {\n\n                    apiUrl = 'user/list';\n\n\n                    if(roleSelected.userTypeId == '1') {\n\n                        apiObject = {\n                            'userType': roleSelected.userTypeId,\n                            'role': roleSelected.roleId,\n                            'currentPage': 1,\n                            'pageSize': 200,\n                            'totalRecords': 200\n                        };\n                    } \n\n\n                    if(roleSelected.userTypeId == '2') {\n\n                        apiObject = {\n                            'userType': roleSelected.userTypeId,\n                            'role': roleSelected.roleId,\n                            'segments': this.data.segment,\n                            'currentPage': 1,\n                            'pageSize': 200,\n                            'totalRecords': 200\n                        };\n                    }\n                   \n                }\n\n                console.log(apiUrl);\n                console.log(apiObject);\n\n                this.loader = true;\n\n\n                setTimeout(() => {\n\n                    this.db.fetchData(apiObject, apiUrl).subscribe((response:any) => {\n\n                        console.log(response);\n                        this.loader = false;\n    \n                        this.salesNetworkData.push({roleId: roleSelected.roleId, roleName: roleSelected.roleName, roleDataArr: []});\n    \n                        const lastIndex = this.salesNetworkData.length - 1;\n    \n                        console.log(this.salesNetworkData);\n    \n                        if (response.data) {\n    \n                            for (let index = 0; index < response.data.length; index++) {\n    \n                                this.salesNetworkData[lastIndex].roleDataArr.push({userId: response.data[index].userId, userName: response.data[index].userName,city:response.data[index].cityOffice});\n                            }\n                        }\n    \n                        console.log(this.userRolesArr);\n                    });\n                    \n                }, 1000);\n  \n          }\n\n          if (roleSelected.checked === false) {\n\n               const itemIndex = this.salesNetworkData.findIndex(salesRow => salesRow.roleId === roleSelected.roleId);\n\n               this.salesNetworkData.splice(itemIndex, 1);\n\n               this.salesNetworkSelectedData = this.salesNetworkSelectedData.filter(selectedRow=> selectedRow.roleId !== roleSelected.roleId);\n\n               console.log(this.salesNetworkSelectedData);\n               \n          }\n\n          console.log(this.salesNetworkData);\n    }\n\n\n    saveNetworkData(userId, roleId, userName, isChecked) {\n\n        console.log(isChecked);\n\n        if (isChecked === false) {\n\n             const rowIndex = this.salesNetworkSelectedData.findIndex(userRow => userRow.id === userId);\n             this.salesNetworkSelectedData.splice(rowIndex, 1);\n\n             for (let index = 0; index < this.salesNetworkData.length; index++) {\n\n                  if(this.salesNetworkData[index].roleId == roleId) {\n                       if(!isChecked) {\n                           this.salesNetworkData[index].selectAll = false;\n                       }\n                  }\n                 \n             }\n        }\n\n        if (isChecked === true) {\n            this.salesNetworkSelectedData.push({roleId: roleId, userId: userId, userName: userName, isRead: false, readOn: '2019-02-16T09:57:00.905Z'});\n        }\n\n        console.log(this.salesNetworkSelectedData);\n    }\n\n\n    urls:any=[];\n    insertDocument(data)\n    {\n\n           this.urls = [];\n           this.selectedFile = [];\n\n          let files = data.target.files;\n          if (files) {\n            for (let file of files) {\n              let reader = new FileReader();\n              reader.onload = (e: any) => {\n                this.urls.push(e.target.result);\n              }\n              reader.readAsDataURL(file);\n            }\n          }\n          console.log(this.urls);\n          console.log(data.target.files.length);\n          for(var i=0; i<data.target.files.length; i++)\n          {\n              this.selectedFile.push(data.target.files[i]);\n          }\n \n          console.log(this.selectedFile);\n \n         //  setTimeout(() => {\n         //    this.Insert_Image();\n         //  }, 500);\n    }\n \n \n    deleteDocument(index)\n    {\n        this.urls.splice(index, 1);\n        this.selectedFile.splice(index, 1);\n    }\n\n\n    onSelectAllHandler(roleId, isChecked) {\n\n\n          console.log(this.salesNetworkData);\n\n           console.log(roleId, isChecked);\n           for (let index = 0; index < this.salesNetworkData.length; index++) {\n\n               if (this.salesNetworkData[index].roleId == roleId) {\n\n                    for (let userIndex = 0; userIndex < this.salesNetworkData[index].roleDataArr.length; userIndex++) {\n\n                         this.salesNetworkData[index].roleDataArr[userIndex].checked = isChecked;\n\n                         this.saveNetworkData(this.salesNetworkData[index].roleDataArr[userIndex].userId, roleId, this.salesNetworkData[index].roleDataArr[userIndex].userName, isChecked);\n                \n                    }\n                      \n               }\n           }\n    }\n\n\n    saveAnnouncementDetail() {\n\n\n             let segmentRequired = false;\n\n             for (let index = 0; index < this.userRolesArr.length; index++) {\n\n                  if(this.userRolesArr[index].userTypeId == 2) {\n                       segmentRequired = true;\n                  }\n             }\n\n             console.log(segmentRequired, this.data.segment);\n\n             if (segmentRequired && this.data.segment && this.data.segment.length == 0) {\n                  this.isSegmentRequired = true;\n                  $('#segment').focus();\n                  return;\n             }\n         \n            const annoucmentDocumentData = [];\n        \n            for(var i=0; i<this.selectedFile.length; i++)\n            {\n                this.documentData=new FormData;\n                this.documentData.action=1;\n                this.documentData.binaryData=this.urls[i];\n                this.documentData.documentType=1;\n                this.documentData.documentName=this.data.subject;\n                this.documentData.referenceId=0;\n                this.documentData.fileName=\"Document\"+i+\".pdf\",this.selectedFile[i];\n                this.documentData.iconName = \"DocumentIcon\"+i+\".pdf\",this.selectedFile[i];\n\n                console.log(this.documentData);\n\n                annoucmentDocumentData[i] = JSON.parse(JSON.stringify(this.documentData));\n            }\n\n            console.log(annoucmentDocumentData);\n\n            this.loader = true;\n            this.button=true;\n\n            console.log(this.salesNetworkSelectedData);\n\n            this.db.fetchData(\n            {\n                'announcementId': 0,\n                'message': this.data.message,\n                'subject': this.data.subject,\n                'sendSMS': this.data.isSMSChecked,\n                'sendEmail': this.data.isEmailChecked,\n                'readBy': 0,\n                'readPending': 0,\n                'sentTo': 0,\n                'announcementToRoles': this.salesNetworkSelectedData,\n                'documents': annoucmentDocumentData,\n                'isActive': true,\n\n            }, 'announcement/add').subscribe((response: any) => {\n\n                console.log(response);\n                this.loader=false;\n                this.toast.openSucess('Announcement Saved Sucessfully!', '');\n                this.router.navigate(['/annoucement-list'])\n            });\n    }\n\n\n    active: any = {};\n    toggleSearch(key, action)\n    {\n        console.log(action);\n        console.log(key);\n        if (action === 'open')\n        {\n           this.active[key] = true;\n  \n           $('#'+key).focus();\n        }\n  \n        if (action === 'close')\n        {\n           this.active[key] = false;\n        }\n  \n        console.log(this.active);\n    }\n\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  \\n    <div class=\\\"middle-container\\\">\\n      <div class=\\\"page-heading\\\">\\n        <img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"h-icon\\\">\\n        <div class=\\\"heading-text\\\">\\n          <h2>Announcement / Notice</h2>\\n          <p>Create New Notice For all Users</p>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && (data.isSMSChecked || data.isEmailChecked) &&  salesNetworkSelectedData.length > 0 && saveAnnouncementDetail()\\\"  #f=\\\"ngForm\\\" novalidate>\\n\\n    <div class=\\\"container-outer\\\">\\n      <!-- <app-master-tab></app-master-tab>\\n      <div class=\\\"container tab-container\\\" > -->\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>ANNOUNCEMENT / NOTICE </h2>\\n                \\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              \\n              <mat-divider class=\\\"left-right-15 mt10\\\"></mat-divider>\\n              \\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col s12 pr0 pl0\\\">\\n                    <div class=\\\"user-type\\\">\\n                      <section class=\\\"example-section\\\">\\n\\n                        <span *ngFor=\\\"let list of userRolesArr\\\">\\n                          <mat-checkbox *ngIf=\\\"list.userTypeId==2\\\" [(ngModel)]=\\\"list.checked\\\" (change)=\\\"roleSelectedChange(list)\\\" name=\\\"{{list.roleName}}\\\" class=\\\"example-margin\\\" color=\\\"accent\\\">{{list.roleName}}</mat-checkbox>\\n                       </span>\\n                      </section>\\n                    </div>\\n                  </div>\\n                </div>\\n            \\n            \\n                <div class=\\\"row mt15\\\">\\n                  <div class=\\\"col s4\\\">\\n                    <div class=\\\"territory-info\\\">\\n\\n                      <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.state==true}\\\">\\n                        <h2>STATE</h2>\\n\\n                        <!-- <mat-checkbox class=\\\"fix-check\\\" [(ngModel)]=\\\"checkState\\\">&nbsp;</mat-checkbox> -->\\n                        <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('state','open')\\\"  matRipple>search</i>\\n\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"data.stateSearch\\\" name=\\\"stateSearch\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                        <i class=\\\"material-icons close-icon\\\" (click)=\\\"data.stateSearch='';toggleterritory('state','close')\\\" matRipple>clear</i>\\n                      </div>\\n\\n                      <div class=\\\"cs-checkbox\\\">\\n\\n                        <div class=\\\"checkbox-outer\\\">\\n                          <section class=\\\"checkbox-inner\\\">\\n                            <ng-container *ngFor=\\\"let state of states | myfilter:{src: 'state', search: data.stateSearch}; let i=index\\\">    \\n                              <mat-checkbox class=\\\"check-list\\\"  (change)=\\\"getDistrictList(state,stateval[i])\\\"  [(ngModel)]=\\\"stateval[i]\\\"  name=\\\"stateVal\\\"  value=\\\"{{state}}\\\">{{state}}</mat-checkbox>\\n                            </ng-container>\\n                          </section>\\n                        </div>\\n\\n                        <!-- <div class=\\\"botm-pdr\\\">\\n                          <div class=\\\"botm-content\\\" [ngClass]=\\\"{'active':active.addone==true}\\\">\\n                            <a mat-button (click)=\\\"toggleterritory('addone','open')\\\">add new</a>\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter state\\\" class=\\\"botm-input\\\" name=\\\"state\\\" [(ngModel)]=\\\"territory_form.state\\\" required>\\n                            <a class=\\\"add-input\\\" matRipple >save</a>\\n                          </div>\\n                        </div> -->\\n\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s4\\\">\\n                    <div class=\\\"territory-info\\\">\\n\\n                      <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.district==true}\\\">\\n                        <h2>DISTRICTS</h2>\\n\\n                        <!-- <mat-checkbox class=\\\"fix-check\\\"  [(ngModel)]=\\\"checkDistrict\\\">&nbsp;</mat-checkbox> -->\\n\\n                        <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('district','open')\\\"  matRipple>search</i>\\n\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"data.districtSearch\\\" name=\\\"districtSearch\\\"  placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n\\n                        <i class=\\\"material-icons close-icon\\\" (click)=\\\"data.districtSearch='';toggleterritory('district','close')\\\" matRipple>clear</i>\\n                      </div>\\n\\n                      <div class=\\\"cs-checkbox\\\">\\n\\n                        <div class=\\\"checkbox-outer\\\">\\n                          <section class=\\\"checkbox-inner\\\">\\n                              <ng-container *ngFor= \\\"let dist of districts\\\">\\n                                  <div style=\\\"text-align:center;padding: 5px;background:#eee;color: #111;\\\">{{dist.stateName}}</div>   \\n                                  \\n                                  <!-- (change)=\\\"getAreaList(dist.stateName,distr.districtName,distr.checked)\\\" -->\\n\\n                                  <mat-checkbox class=\\\"check-list\\\" *ngFor= \\\"let distr of dist.distrcits | myfilter:{src: 'district', search: data.districtSearch};let j=index\\\" [(ngModel)]=\\\"distr.checked\\\" name=\\\"district\\\"  value=\\\"{{distr.districtName}}\\\">{{distr.districtName}}</mat-checkbox>                                       \\n                                </ng-container>\\n                          </section>\\n                        </div>\\n                        \\n                        <!-- <div class=\\\"botm-pdr\\\" >\\n                          <div class=\\\"botm-content\\\" [ngClass]=\\\"{'active':active.addtwo==true}\\\">\\n                            <a mat-button (click)=\\\"toggleterritory('addtwo','open')\\\">add new</a>\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter districts\\\" name=\\\"districts\\\"  class=\\\"botm-input\\\" required>\\n                            <a class=\\\"add-input\\\" matRipple >save</a>\\n                          </div>\\n                        </div> -->\\n\\n                      </div>\\n\\n                    </div>\\n                  </div> \\n                  \\n                  \\n                  <div class=\\\"col s4\\\">\\n                    <div class=\\\"territory-info\\\">\\n\\n                      <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.pincode==true}\\\">\\n                        <h2>Sales Network</h2>\\n\\n                        <!-- <mat-checkbox class=\\\"fix-check\\\">&nbsp;</mat-checkbox>\\n                        <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('pincode','open')\\\"  matRipple>search</i>\\n                        <input type=\\\"text\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                        <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('pincode','close')\\\" matRipple>clear</i> -->\\n\\n                      </div>\\n\\n                      <div class=\\\"cs-checkbox\\\">\\n\\n                        <div class=\\\"checkbox-outer\\\">\\n                          <section class=\\\"checkbox-inner\\\">\\n\\n                              <ng-container >\\n                                  <ng-container>\\n\\n                                  <span *ngFor=\\\"let list of salesNetworkData\\\">\\n\\n                                     <div style=\\\"text-align:center;padding: 5px;background:#eee;color: #111;\\\">{{list.roleName}}</div>\\n\\n                                     <mat-checkbox [(ngModel)]=\\\"row.checked\\\" *ngFor=\\\"let row of list.roleDataArr\\\" value=\\\"{{row.userId}}\\\" (change) = \\\"saveNetworkData(row.userId, list.roleId, row.userName, row.checked)\\\" name=\\\"{{row.userName}}\\\"  class=\\\"check-list\\\">{{row.userName}}</mat-checkbox>\\n\\n                                  </span>\\n\\n                                  </ng-container>\\n                              </ng-container>\\n\\n                           <!-- <ng-container *ngFor=\\\"let city of cities;let i=index;\\\" >\\n                              <ng-container *ngFor=\\\"let ct of city.citiesnpins;let j=index;\\\"><div style=\\\"text-align:center;padding: 5px;background:#eee;color: #111;\\\">{{ct.cityName}}</div>\\n                                <mat-checkbox class=\\\"check-list\\\" *ngFor=\\\"let area of ct.areas;let i=index;\\\">{{area.pincode}}</mat-checkbox>\\n                              </ng-container>\\n                          </ng-container> -->\\n\\n                          </section>\\n                        </div>\\n\\n                        <!-- <div class=\\\"botm-pdr\\\">\\n                          <div class=\\\"botm-content\\\" [ngClass]=\\\"{'active':active.addthree==true}\\\"> -->\\n                            <!-- <a mat-button (click)=\\\"toggleterritory('addthree','open')\\\">add new</a>\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Pincode\\\" name=\\\"pincode\\\" [(ngModel)]=\\\"territory_form.pincode\\\" class=\\\"botm-input\\\" required>\\n                            <a class=\\\"add-input\\\" matRipple >save</a> -->\\n      \\n                              <!-- <mat-form-field class=\\\"botm-select\\\">\\n                                <select matNativeControl required>\\n                                  <option value=\\\"volvo\\\">Faridabad</option>\\n                                  <option value=\\\"saab\\\">Gurugram</option>\\n                                  <option value=\\\"mercedes\\\">Rewari</option>\\n                                  <option value=\\\"audi\\\">Panipat</option>\\n                                </select>\\n                              </mat-form-field>\\n                          </div>\\n                        </div> -->\\n\\n                      </div>\\n\\n                    </div>\\n                  </div> \\n                </div>\\n\\n                <mat-error *ngIf=\\\"f.submitted && !salesNetworkSelectedData.length\\\" class=\\\"invalid-feedback\\\">\\n                    <mat-error *ngIf=\\\"f.submitted && !salesNetworkSelectedData.length\\\">Choose Sales Network!</mat-error>\\n                </mat-error>\\n              \\n              <!-- <div class=\\\"row\\\">\\n                <div class=\\\"col s12\\\">\\n                  <div class=\\\"editor\\\"> -->\\n                    <!-- <img src=\\\"assets/img/editor.jpg\\\" class=\\\"wp100 mt15\\\"> -->\\n\\n                    <!-- <mat-form-field class=\\\"cs-input wp100 h-input\\\">\\n                        <textarea matInput placeholder=\\\"Description\\\" required></textarea>\\n                    </mat-form-field>\\n\\n                  </div>\\n                </div>\\n              </div> -->\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col s12\\\">\\n                  <div class=\\\"from-fields\\\">\\n                 <div class=\\\"control-field\\\">\\n                  <mat-form-field class=\\\"cs-input wp100 h-input\\\">\\n                      <textarea matInput [(ngModel)]=\\\"data.subject\\\" placeholder=\\\"Subject\\\" name=\\\"subject\\\" #subject=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && subject.invalid }\\\" required></textarea>\\n                  </mat-form-field>\\n\\n                  <mat-error *ngIf=\\\"f.submitted && subject.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"subject.errors.required\\\">Subject required</mat-error>\\n                    </mat-error>\\n                  <!-- <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"description.errors.required\\\">Description is required</mat-error>\\n                    </mat-error> -->\\n                  </div>\\n                </div>\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col s12\\\">\\n                    <div class=\\\"from-fields\\\">\\n                   <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input wp100 h-input\\\">\\n                        <textarea matInput [(ngModel)]=\\\"data.message\\\" placeholder=\\\"Description\\\" name=\\\"message\\\" #message=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && message.invalid }\\\" required></textarea>\\n                    </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && message.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"message.errors.required\\\">Description required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  </div>\\n                </div>\\n              \\n              <mat-divider class=\\\"left-right-15 mt10 mb10\\\"></mat-divider>\\n              <div class=\\\"cs-heading\\\">\\n                <h2>ACTION</h2>\\n              </div>\\n              <mat-divider class=\\\"left-right-15 mt10\\\"></mat-divider>\\n              \\n              <div class=\\\"row\\\">\\n                <div class=\\\"col s12\\\">\\n                  <div class=\\\"select-one\\\">\\n                    <section class=\\\"check-list\\\">\\n                      <mat-checkbox [(ngModel)]=\\\"data.isSMSChecked\\\" name=\\\"smsChecked\\\" class=\\\"select-check\\\">SMS</mat-checkbox>\\n                      <mat-checkbox [(ngModel)]=\\\"data.isEmailChecked\\\" \\n                      name=\\\"emailChecked\\\" class=\\\"select-check\\\">EMAIL</mat-checkbox>\\n                    </section>\\n\\n                    <mat-error *ngIf=\\\"f.submitted && !data.isSMSChecked && !data.isEmailChecked\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"f.submitted && !data.isSMSChecked && !data.isEmailChecked\\\">Choose atleast one Option!</mat-error>\\n                    </mat-error>\\n\\n                  </div>\\n                </div>\\n              </div>\\n              \\n            </div>\\n          </div>\\n          \\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\">Save</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      <!-- </div> -->\\n    </div>\\n\\n   </form>\\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport {MatDialog } from '@angular/material';\n\n \n@Component({\n  selector: 'app-annoucement-detail',\n  templateUrl: './annoucement-detail.component.html',\n \n})\nexport class AnnoucementDetailComponent implements OnInit {\n  territory_form:any={};\n  statelist:any=[];\n  states:any=[];\n  st:any;\n  districts:any=[];\n  cities:any=[];\n  city:any=[];\n  stateval:any=[];\n  districtval:any=[];\n  checkState:any;\n  checkDistrict:any;\n  annoucementDetails:any=[];\n  data:any = {};\n\n  showDistributorList:any = false;\n  showRetailerList:any = false;\n  showSalesList:any = false;\n\n  salesNetworkData:any = [];\n\n  salesNetworkSelectedData:any = [];\n\n  userRolesArr:any = [];\n\n  loader: boolean;\n   id:any;\n  constructor(public db: ConstantService,\n    public router:Router,public toast:SnackBarOverview, public route:ActivatedRoute, public dialog: MatDialog,public msg:DialogComponent) {\n        this.getUserTypeRoles();\n        this.route.params.subscribe(params=>{\n                    console.log(params);\n                    this.id = params.id;\n                    console.log(this.id);\n                    if(this.id){\n                      this.annoucementdetail();\n                    }else{\n                    }\n                  });\n        this.data.isSMSChecked = false;\n        this.data.isEmailChecked = false;\n        this.db.fileData('', 'state/list/').subscribe((response)=>{\n            console.log(response);\n            this.statelist = response;\n            this.states = this.statelist.data;\n            console.log(this.states);\n        });\n        \n  }\n\n  ngOnInit() {\n\n  \n\n  }\n\n \n  getUserTypeRoles() {\n\n        this.loader = true;\n        this.db.fileData( '' , 'usertype/list').subscribe((response:any)=>{\n            console.log(response);\n             this.loader = false;\n\n             console.log(response.length);\n\n             for (let index = 0; index < response.data.length; index++) {\n\n                 console.log('hello');\n\n                  for (let index1 = 0; index1 < response.data[index].roles.length; index1++) {\n\n                      const typeRoles = response.data[index].roles[index1];\n                      this.userRolesArr.push({userTypeId: response.data[index].userTypeId,\n                                              roleId: typeRoles.roleId,\n                                              roleName: typeRoles.roleName });\n                  }\n             }\n\n             console.log(this.userRolesArr);\n        });\n  }\n  annoucementdetail(){\n      this.loader=true;\n    this.db.fetchData({\n      \"announcementId\": this.id},'announcement/list').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        this.annoucementDetails=response['data'][0];\n        console.log(this.annoucementDetails);\n        this.data.subject=this.annoucementDetails.subject;\n        this.data.isSMSChecked = this.annoucementDetails.sendSMS;\n        this.data.isEmailChecked = this.annoucementDetails.sendEmail;\n        for(let i=0;i<this.annoucementDetails.announcementToRoles.length;i++){\n           this.annoucementDetails.announcementToRoles[i].checked=true;\n           this.roleSelectedChange(this.annoucementDetails.announcementToRoles[i]);\n           console.log( this.annoucementDetails.announcementToRoles[i]);\n           \n               let userRoleIndex=this.userRolesArr.findIndex(x=>x.roleId==this.annoucementDetails.announcementToRoles[i].roleId);\n               console.log(userRoleIndex);\n               this.userRolesArr[userRoleIndex].checked=true;\n          \n         \n        }\n    });\n}\n  getDistrictList(state,stateval) {\n\n    \n      this.st =Array(state);\n      console.log(stateval);\n      if(stateval === true) {\n        this.loader=true;\n\n            this.db.fetchData(this.st,'district/list').subscribe((response:any)=>{\n\n                console.log(response);\n                this.loader=false;\n                this.districts.push(response.data[0]);\n                console.log(this.districts);     \n            });\n\n      } else {\n\n          const x = this.districts.findIndex(items => items.stateName === state);\n          this.districts.splice(x, 1);\n      }\n\n  }\n\n\n  getAreaList(stateName,districtName,districtval)\n  {\n        console.log(districtval);\n      \n        console.log(stateName); \n        console.log(districtName);    \n        if(districtval==true) {\n            this.loader=true;\n            this.db.fetchData(Array({\"stateName\":stateName,\"distrcits\":Array({\"districtName\":districtName})}),'city/list').subscribe((response:any)=>{\n\n                console.log(response);\n                this.loader=false;\n                this.cities.push({ \"stateName\":stateName,\"distrcits\":districtName,\"citiesnpins\":response.data[0].distrcits[0].cities});\n                console.log(this.cities);\n                this.city=this.cities[0]\n                console.log(this.city);      \n            });\n\n      } else {\n          var x = this.cities.findIndex(items => items.distrcits === districtName);\n          this.cities.splice(x, 1);\n      }\n  }\n\n\n    active:any = {};\n    toggleterritory(key,action)\n    {\n            console.log(action);\n            console.log(key);\n            \n            if(action == 'open')\n            { this.active[key] = true; }\n            if(action == 'close')\n            { this.active[key] = false;}\n\n            console.log(this.active);\n    }\n\n\n    roleSelectedChange(roleSelected) {\n\n          console.log(roleSelected);\n\n          if (roleSelected.checked === true) {\n\n                this.loader = true;\n                this.db.fetchData(\n                {\n                    'userType': roleSelected.userTypeId,\n                    'role': roleSelected.roleId,\n                    'currentPage': 1,\n                    'pageSize': 50,\n                    'totalRecords': 50\n\n                }, 'user/list').subscribe((response:any) => {\n\n                    console.log(response);\n                    this.loader = false;\n\n                    this.salesNetworkData.push({roleId: roleSelected.roleId, roleName: roleSelected.roleName, roleDataArr: []});\n\n                    const lastIndex = this.salesNetworkData.length - 1;\n\n                    console.log(this.salesNetworkData);\n\n                    if (response.data) {\n\n                        for (let index = 0; index < response.data.length; index++) {\n\n                            this.salesNetworkData[lastIndex].roleDataArr.push({userId: response.data[index].userId, userName: response.data[index].userName});\n                        }\n                    }\n                });\n          }\n\n          if (roleSelected.checked === false) {\n\n               const itemIndex = this.salesNetworkData.findIndex(salesRow => salesRow.roleId === roleSelected.roleId);\n\n               this.salesNetworkData.splice(itemIndex, 1);\n\n               this.salesNetworkSelectedData = this.salesNetworkSelectedData.filter(selectedRow=> selectedRow.roleId !== roleSelected.roleId);\n\n               console.log(this.salesNetworkSelectedData);\n          }\n\n          console.log(this.salesNetworkData);\n    }\n\n    saveNetworkData(userId, roleId, userName, isChecked) {\n\n        console.log(isChecked);\n\n        if (isChecked === false) {\n\n             const rowIndex = this.salesNetworkSelectedData.findIndex(userRow => userRow.id === userId);\n             this.salesNetworkSelectedData.splice(rowIndex, 1);\n        }\n\n        if (isChecked === true) {\n            this.salesNetworkSelectedData.push({roleId: roleId, userId: userId, userName: userName, isRead: true, readOn: '2019-02-16T09:57:00.905Z'});\n        }\n\n        console.log(this.salesNetworkSelectedData);\n    }\n\n\n    saveAnnouncementDetail() {\n\n            this.loader = true;\n\n            this.db.fetchData(\n            {\n                'announcementId': 0,\n                'message': this.data.message,\n                'subject': this.data.subject,\n                'sendSMS': this.data.isSMSChecked,\n                'sendEmail': this.data.isEmailChecked,\n                'readBy': 0,\n                'readPending': 0,\n                'sentTo': 0,\n                'announcementToRoles': this.salesNetworkSelectedData,\n                'isActive': true,\n\n            }, 'announcement/add').subscribe((response: any) => {\n\n                console.log(response);\n                this.loader=false;\n                this.toast.openSucess('Announcement Saved Sucessfully!', '');\n                this.router.navigate(['/annoucement-list'])\n            });\n    }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/announcement.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Announcement</h2>\\n        <p>Total SMS Count : <span>{{totalSMSCount}}</span></p>\\n      </div>\\n    </div>\\n    <div  *ngIf=\\\"filter.subject || filter.message\\\" class=\\\"filter-container left-auto\\\">\\n      <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n        <button mat-button >CLEAR FILTER</button>\\n      </div>\\n    </div>\\n    <!-- <div class=\\\"show-value left-auto\\\">\\n      <p>Lorem ipsum, dolor sit amet</p>\\n    </div> -->\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th  class=\\\"w180\\\">Subject</th>\\n                    <th class=\\\"w250\\\">Messege</th>\\n                    <th *ngIf=\\\"userType==1\\\" >Role</th>\\n                    <th *ngIf=\\\"userType==1\\\" class=\\\"w80 text-center\\\">Read</th>\\n                    <th *ngIf=\\\"userType==1\\\" class=\\\"w90 text-center\\\">Unread</th>\\n                    <th *ngIf=\\\"userType==1\\\" class=\\\"w120 text-center\\\">Total Users</th>\\n                    <!-- <th class=\\\"w100\\\">Document</th> -->\\n                    <th class=\\\"w110\\\">Send By</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"table-head bdrt\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th  class=\\\"w180\\\">\\n                      <div class=\\\"th-search-acmt\\\" [ngClass]=\\\"{ 'clear-feilds' : removesubject == true}\\\">\\n                        <mat-form-field>\\n                          <input type=\\\"text\\\"  name=\\\"subject\\\" [(ngModel)]=\\\"filter.subject\\\" (ngModelChange)=\\\"subjectList()\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\n                          <mat-autocomplete #auto1=\\\"matAutocomplete\\\" >\\n                            <mat-option *ngFor=\\\"let subject of subjectlist\\\" (click)=\\\"subjectFilter()\\\" value=\\\"{{subject.subject}}\\\">{{subject.subject}}</mat-option>\\n                          </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removesubjectfilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                        </mat-form-field> \\n                      </div>\\n                    </th>\\n                    <th class=\\\"w250\\\">\\n                      <div class=\\\"th-search-acmt\\\" [ngClass]=\\\"{ 'clear-feilds' : removemessage== true}\\\">\\n                        <mat-form-field>\\n                          <input type=\\\"text\\\"  name=\\\"message\\\" [(ngModel)]=\\\"filter.message\\\" (ngModelChange)=\\\"messageList()\\\" matInput [matAutocomplete]=\\\"auto2\\\">\\n                          <mat-autocomplete #auto2=\\\"matAutocomplete\\\" >\\n                            <mat-option *ngFor=\\\"let message of messagelist\\\" (click)=\\\"messageFilter()\\\" value=\\\"{{message.message}}\\\">{{message.message}}</mat-option>\\n                          </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removemessagefilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                        </mat-form-field> \\n                      </div>\\n                    </th>\\n                    <th *ngIf=\\\"userType==1\\\">&nbsp;</th>\\n                    <th *ngIf=\\\"userType==1\\\" class=\\\"w80 text-center\\\">&nbsp;</th>\\n                    <th *ngIf=\\\"userType==1\\\" class=\\\"w90 text-center\\\">&nbsp;</th>\\n                    <th *ngIf=\\\"userType==1\\\" class=\\\"w120 text-center\\\">&nbsp;</th>\\n                    \\n                    <!-- <th *ngIf=\\\"userType==1\\\" class=\\\"w100\\\">&nbsp;</th> -->\\n                    <th class=\\\"w110\\\">&nbsp;</th>\\n                    \\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor='let announcement of announcementlist;let i=index ' [ngClass]=\\\"{'download' : announcement.documents && announcement.documents.length>0}\\\">\\n                    <td class=\\\"w30\\\">{{i+1}}</td>\\n                    <td class=\\\"w180\\\">{{announcement.subject}}</td>\\n                    <td class=\\\"w250 one-line\\\"   (click)=\\\"readMassage(announcement.message,announcement.announcementId)\\\"> <span [innerHTML]=\\\"announcement.message\\\"></span> <a class=\\\"more-text\\\">Read more</a></td>\\n                    <td *ngIf=\\\"userType==1\\\">  \\n                      <div class=\\\"tags\\\"> \\n                        <ul>\\n                          <li *ngFor=\\\"let role of announcement.announcementToRoles | unique;let j=index\\\"><span>{{role.rolename}}</span></li>\\n                        </ul>\\n                      </div>\\n                      <!-- <div *ngFor=\\\"let role of announcement.announcementToRoles;let j=index\\\"><span>{{role.userName}}--({{role.rolename}})</span></div> -->\\n                    </td>\\n                    \\n                    \\n                    \\n                    \\n                    <td *ngIf=\\\"userType==1\\\" class=\\\"w80 text-center read pointer\\\" matRipple (click)=\\\"announcement.readBy!='0' ? checkRead(announcement.announcementToRoles,'read') : ''\\\">\\n                      <!-- <a class=\\\"link-btn\\\" (click)=\\\"checkRead(announcement.announcementToRoles,'read')\\\">{{announcement.readBy}}</a> -->\\n                      <a class=\\\"action-forward\\\"  >{{announcement.readBy}} <i class=\\\"material-icons\\\">arrow_forward_ios</i> </a>\\n                    </td>\\n                    \\n                    <td *ngIf=\\\"userType==1\\\" class=\\\"w90 text-center unread pointer\\\" matRipple (click)=\\\"announcement.readPending!='0' ? checkRead(announcement.announcementToRoles,'unread') : ''\\\">\\n                      <a class=\\\"action-forward\\\"  >{{announcement.readPending}}<i class=\\\"material-icons\\\">arrow_forward_ios</i> </a>\\n                    </td>\\n                    \\n                    <td *ngIf=\\\"userType==1\\\" class=\\\"w120 text-center total pointer \\\" matRipple (click)=\\\"announcement.sentTo!='0' ? checkRead(announcement.announcementToRoles,'all') : ''\\\">\\n                      <a class=\\\"action-forward\\\"  >{{announcement.sentTo}}<i class=\\\"material-icons\\\">arrow_forward_ios</i> </a>\\n                    </td>\\n                    \\n                    <!-- <td class=\\\"w70 text-center green-clr\\\">{{announcement.readBy}}</td>\\n                      <td class=\\\"w80 text-center red-clr\\\">{{announcement.readPending}}</td> -->\\n                      <!-- <td class=\\\"w100 text-center blue-clr\\\" >\\n                        <a *ngIf=\\\"announcement.documents && announcement.documents[0]\\\" class=\\\"link-btn underline\\\" href=\\\"{{dburl}}download/document/{{announcement.documents[0].documentId}}\\\">Download</a>\\n                      </td> -->\\n                      <td class=\\\"w110\\\">{{announcement.actionsms}} {{announcement.actionemail}}\\n                        <div class=\\\"action-btns\\\">\\n                          <a mat-button class=\\\"view\\\" *ngIf=\\\"announcement.documents && announcement.documents[0]\\\" href=\\\"{{dburl}}download/document/{{announcement.documents[0].documentId}}\\\"><i class=\\\"material-icons\\\">cloud_download</i></a>\\n                          <button *ngIf=\\\"userRole==1\\\" mat-button class=\\\"delete\\\" (click)=\\\"deleteAnnouncement(announcement.announcementId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n              \\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n          <div class=\\\"outer\\\">\\n            <div class=\\\"iinear\\\">\\n              <div class=\\\"figure\\\" matRipple>\\n                <div class=\\\"header\\\">\\n                  <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                </div>\\n                \\n                <div class=\\\"description\\\">\\n                \\n                  <div class=\\\"img\\\">\\n                    <i class=\\\"material-icons\\\">error_outline</i>\\n                  </div>\\n                  <div class=\\\"psc\\\">\\n                    <p>data not available</p>\\n                 \\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"user.data.role == 1 && user.data.superAdmin\\\" class=\\\"fixed-multibtn-botm\\\">\\n      <ul>\\n        <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-annoucement\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n      </ul>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { DialogComponent } from 'src/app/dialog';\nimport { MatDialog } from '@angular/material';\nimport { ReadMassageComponent } from '../read-massage/read-massage.component';\nimport { ReadPopupComponent } from '../read-popup/read-popup.component';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-annoucement-list',\n  templateUrl: './annoucement-list.component.html',\n  animations: [slideToTop()]\n\n})\nexport class AnnoucementListComponent implements OnInit {\nuserlist:any=[];\nloader:boolean;\nrolelists:any=[];\nremovesubject:boolean=false;\nremovemessage:boolean=false;\nrolelistsystem1:any=[];\nrolelistsales1:any=[];\nsubjectlist:any=[];\nrolelistclient1:any=[];\nmessagelist\ndiv:any=false;\nfilter:any={};\nuser:any={}\nuserType:any;\nuserId:any;\nuserRole:any;\nannouncementlist:any=[];\ntotalSMSCount:any;\n\n  dburl:any = '';\n  \n  constructor(public db:ConstantService,public dialog:DialogComponent,public popupDialog: MatDialog) { \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    if(this.userRole==1)\n    {\n      this.announcement({\"currentPage\":1,\"pageSize\":50});\n    }\n    else{\n      if(this.userId)\n      {\n        this.announcement({\"currentPage\":1,\"pageSize\":50,\"userId\":this.userId});\n      }\n    }\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.userlist=response['data'];\n    });\n  }\n\n  ngOnInit() {\n\n       this.dburl = this.db.dburl;\n       this.getSMSCount();\n  }\n\n\n  getSMSCount() {\n\n     \n      this.db.fileData('', 'getsmscount').subscribe((response)=>{\n\n           console.log(response);\n\n           if(response && response['data']) {\n              this.totalSMSCount = response['data'];\n           } else {\n               this.totalSMSCount = 0;\n           }\n      });\n       \n  }\n\n  downloadFile()\n  {\n      console.log(\"function\");\n      this.db.excelFileData({},'pwnload').subscribe(result=> {  saveAs(result, 'YourFileName.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n  \n      });\n  }\n\n\n  distinctArray:any=[]\n  rolelist(){\n    this.loader=true;\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.loader=false\n      this.rolelists=response['data'];\n      let filterrolesales= this.rolelists.filter(x => x.userTypeId==2);\n      this.rolelistsales1=filterrolesales[0].roles;\n      let filterrolesystem= this.rolelists.filter(x => x.userTypeId==1);\n      this.rolelistsystem1=filterrolesystem[0].roles;\n      let filterroleclient= this.rolelists.filter(x => x.userTypeId==3);\n      this.rolelistclient1=filterroleclient[0].roles;\n      for(let i=0;i<this.rolelistsales1.length;i++){\n        this.rolelistsystem1.push(this.rolelistsales1[i]);\n      }\n      for(let i=0;i<this.rolelistclient1.length;i++){\n        this.rolelistsystem1.push(this.rolelistclient1[i]);\n      }\n      console.log(this.rolelistsales1);\n      console.log(this.rolelistsystem1);\n      for(let i=0;i<this.announcementlist.length;i++){\n       for(let j=0;j<this.announcementlist[i].announcementToRoles.length;j++){\n         let annoucementrole=this.rolelistsystem1.filter(x=>x.roleId==this.announcementlist[i].announcementToRoles[j].roleId)\n         console.log(annoucementrole);\n         this.announcementlist[i].announcementToRoles[j].rolename=annoucementrole[0].roleName;\n        \n       }\n      }\n    });\n  }\n  clearfilter(){\n    this.removesubject=false;\n    this.removemessage=false;\n    this.filter={};\n    this.announcement({\"currentPage\":1,\"pageSize\":50});\n  }\n  announcement(val){\n    this.loader=true;\n    this.db.fetchData(val,'announcement/list').subscribe((response)=>{\n      console.log(response);\n      console.log('hello');\n      \n      this.loader=false;\n      if(response['status']=='Success')\n      {\n        this.announcementlist = response['data'];\n      }\n      if(response['status']=='Failed')\n      {\n        this.div=true;\n        this.announcementlist =[];\n      }\n      console.log(this.announcementlist);\n      this.rolelist();\n      for(let i=0;i<this.announcementlist.length;i++)\n      {\n          console.log(this.announcementlist[i].sendSMS);\n          if(this.announcementlist[i].sendSMS==true)\n          {\n            console.log('hello')\n           this.announcementlist[i].actionsms=\"SMS\";\n          }\n          else{\n           this.announcementlist[i].actionsms=\"\";\n          }\n          if(this.announcementlist[i].sendEmail==true)\n          {\n           this.announcementlist[i].actionemail=\"Email\";\n          }\n          else{\n           this.announcementlist[i].actionemail=\"\";\n          }\n      }\n    });\n  }\n\n\n  readMassage(massage,id)\n  {\n\n    if(this.userRole !=1)\n    {\n      this.db.fileData(\"\",\"announcement/markread/\"+id+\"/\"+this.userId).subscribe((result)=>{\n        console.log(result);\n      })\n    }\n    const dialogRef = this.popupDialog.open(ReadMassageComponent, {\n      width: '600px',\n         data:{\n          massage\n         }});\n        dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n      console.log('The dialog was closed');\n      });\n  }\n\n  checkRead(User,status)\n  {\n    console.log(status);\n    const dialogRef = this.popupDialog.open(ReadPopupComponent, {\n      width: '768px',\n         data:{\n          User,\n          status\n         }});\n        dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n      console.log('The dialog was closed');\n      });\n  }\n  subjectList(){\n    this.db.fetchData({ \"subject\":this.filter.subject},'announcement/list').subscribe((response)=>{\n      console.log(response);\n        this.subjectlist=response['data']});\n  }\n  subjectFilter(){\n    console.log(this.filter.subject);\n    this.announcement({ \"currentPage\":1,\n      \"pageSize\": 50,\"subject\":this.filter.subject});\n      this.removesubject=true;\n  }\n  removesubjectfilter(){\n    this.filter.subject='';\n    this.announcement({ \"currentPage\": 1,\n    \"pageSize\": 50,\"subject\":this.filter.subject,\"message\":this.filter.message});\n    this.removesubject=false;\n  }\n  messageList(){\n    this.db.fetchData({ \"message\":this.filter.message},'announcement/list').subscribe((response)=>{\n      console.log(response);\n        this.messagelist=response['data']});\n  }\n  messageFilter(){\n    console.log(this.filter.segment,this.filter.message);\n    this.announcement({ \"currentPage\":1,\n      \"pageSize\": 50,\"subject\":this.filter.subject,\"message\":this.filter.message});\n      this.removemessage=true;\n  }\n  removemessagefilter(){\n    this.filter.message='';\n    this.announcement({ \"currentPage\": 1,\n    \"pageSize\": 50,\"subject\":this.filter.subject,\"message\":this.filter.message});\n    this.removemessage=false;\n  }\n\n  deleteAnnouncement(id)\n  {\n    this.dialog.delete('Announcement  !').then((result) => {\n      if(result)\n      {\n      console.log(id);\n      this.db.fileData(\"\",\"/announcement/delete/\"+id).subscribe((result)=>{\n        console.log(result);\n      if(result['status']==\"Success\")\n      {\n        this.announcement({\"currentPage\":1,\"pageSize\":50});\n      }\n      })\n      }})\n  }\n}\n ","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as _ from 'lodash'; \r\n\r\n@Pipe({\r\n  name: 'unique',\r\n  pure: false\r\n})\r\n\r\nexport class UniquePipe implements PipeTransform {\r\n    transform(value: any): any{\r\n        if(value!== undefined && value!== null){\r\n            return _.uniqBy(value, 'rolename');\r\n        }\r\n        return value;\r\n    }\r\n}","module.exports = \"\\n<div class=\\\"edit-modal\\\">\\n  <mat-dialog-content  style=\\\"overflow-x: hidden !important;\\\">\\n    <p class=\\\"heading\\\">Message Description</p>\\n    <div class=\\\"col s12\\\">\\n      <div class=\\\"pragraph\\\">\\n        <p [innerHTML]=\\\"massage\\\">\\n         \\n        </p>\\n      </div>\\n    </div>\\n    \\n  </mat-dialog-content>\\n  <mat-dialog-actions align=\\\"end\\\">\\n    <button mat-raised-button color=\\\"warn\\\"[mat-dialog-close]=\\\"false\\\" cdkFocusInitial>Close</button>\\n  </mat-dialog-actions>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fubm91Y2VtZW50L3JlYWQtbWFzc2FnZS9yZWFkLW1hc3NhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-read-massage',\n  templateUrl: './read-massage.component.html',\n  styleUrls: ['./read-massage.component.scss']\n})\nexport class ReadMassageComponent implements OnInit {\n\n  massage:any;\n  constructor(@Inject(MAT_DIALOG_DATA)public data) { \n    console.log(data);\n    this.massage=data.massage;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n    <p class=\\\"heading\\\">USER INFORMATION</p>\\n    <mat-dialog-content class=\\\"mat-typography\\\">\\n        <div class=\\\"cs-table mt15 left-right-15\\\">\\n            <div class=\\\"table-head\\\">\\n                <table>\\n                    <tr>\\n                        <th class=\\\"w230\\\">Name</th>\\n                        <th class=\\\"w130\\\">Role</th>\\n                        <th>Status</th>\\n                    </tr>\\n                </table>\\n            </div>\\n            <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                    <!-- <table>\\n                        <span >\\n                            <tr >\\n                                <td>{{list.announcementTo}}</td>\\n                                <td  class=\\\"w130\\\">{{list.rolename}}</td>\\n                                <td  *ngIf=\\\"list.isRead==true\\\"  class=\\\"w150\\\">Read</td>\\n                                <td *ngIf=\\\"list.isRead==false\\\"class=\\\"w150\\\">Unread</td>\\n                            </tr>\\n                            <tr *ngIf=\\\"list.isRead==false && status=='unread' \\\">\\n                                <td>{{list.announcementTo}}</td>\\n                                <td  class=\\\"w130\\\">{{list.rolename}}</td>\\n                                <td  *ngIf=\\\"list.isRead==true\\\"  class=\\\"w150\\\">Read</td>\\n                                <td *ngIf=\\\"list.isRead==false\\\"class=\\\"w150\\\">Unread</td>\\n                            </tr>\\n                            \\n                        </span>\\n                    </table> -->\\n                    <table *ngIf=\\\"status=='all' \\\">\\n                        <tr *ngFor=\\\"let list of user\\\">\\n                            <td class=\\\"w230\\\">{{list.announcementTo}}</td>\\n                            <td  class=\\\"w130\\\">{{list.rolename}}</td>\\n                            <td  *ngIf=\\\"list.isRead==true\\\" >Read</td>\\n                            <td *ngIf=\\\"list.isRead==false\\\">Unread</td>\\n                        </tr>\\n                    </table>\\n                    <table *ngIf=\\\"status=='read' \\\">\\n                        <ng-container *ngFor=\\\"let list of user\\\">\\n                            <tr *ngIf=\\\"list.isRead==true\\\" >\\n                                <td  class=\\\"w230\\\">{{list.announcementTo}}</td>\\n                                <td  class=\\\"w130\\\">{{list.rolename}}</td>\\n                                <td  *ngIf=\\\"list.isRead==true\\\" >Read</td>\\n                                <td *ngIf=\\\"list.isRead==false\\\">Unread</td>\\n                            </tr>\\n                        </ng-container>\\n                    </table>\\n                    <table *ngIf=\\\"status=='unread' \\\">\\n                        <ng-container *ngFor=\\\"let list of user\\\">\\n                            <tr *ngIf=\\\"list.isRead==false \\\" >\\n                                <td  class=\\\"w230\\\">{{list.announcementTo}}</td>\\n                                <td  class=\\\"w130\\\">{{list.rolename}}</td>\\n                                <td  *ngIf=\\\"list.isRead==true\\\">Read</td>\\n                                <td *ngIf=\\\"list.isRead==false\\\">Unread</td>\\n                            </tr>\\n                        </ng-container>\\n                        \\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </mat-dialog-content>\\n    <mat-dialog-actions align=\\\"end\\\">\\n        <button mat-button [mat-dialog-close]=\\\"false\\\" mat-raised-button color=\\\"warn\\\" >CLOSE</button>\\n    </mat-dialog-actions>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fubm91Y2VtZW50L3JlYWQtcG9wdXAvcmVhZC1wb3B1cC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-read-popup',\n  templateUrl: './read-popup.component.html',\n  styleUrls: ['./read-popup.component.scss']\n})\nexport class ReadPopupComponent implements OnInit {\n\n  user:any=[];\n  status:any;\n  constructor(@Inject(MAT_DIALOG_DATA)public data) {\n    console.log(data);\n    this.user=data.User;\n    this.status=data.status;\n   }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductListComponent } from './product/product-list/product-list.component';\nimport { ProductDetailComponent } from './product/product-detail/product-detail.component';\nimport { UserAddComponent } from './user/user-add/user-add.component';\nimport { SaleUserListComponent } from './user/sale-user-list/sale-user-list.component';\nimport { SaleUserDetailComponent } from './user/sale-user-detail/sale-user-detail.component';\nimport { SystemUserListComponent } from './user/system-user-list/system-user-list.component';\nimport { SystemUserDetailComponent } from './user/system-user-detail/system-user-detail.component';\nimport { TerritoryAddComponent } from './territory/territory-add/territory-add.component';\nimport { TerritoryListComponent } from './territory/territory-list/territory-list.component';\nimport { AddGiftComponent } from './pop_and_gift/add-gift/add-gift.component';\nimport { GiftListComponent } from './pop_and_gift/gift-list/gift-list.component';\nimport { AddLeaveRulesComponent } from './leave-and-holiday/add-leave-rules/add-leave-rules.component';\nimport { AddHolidayComponent } from './leave-and-holiday/add-holiday/add-holiday.component';\nimport { LeaveRuleListComponent } from './leave-and-holiday/leave-rule-list/leave-rule-list.component';\nimport { HolidayListComponent } from './leave-and-holiday/holiday-list/holiday-list.component';\nimport { AddAnnoucementComponent } from './annoucement/add-annoucement/add-annoucement.component';\nimport { AnnoucementListComponent } from './annoucement/annoucement-list/annoucement-list.component';\nimport { AddDistributionComponent } from './distribution/add-distribution/add-distribution.component';\n// import { DistributionListComponent } from './distribution/distribution-list/distribution-list.component';\nimport { DistributionDetailComponent } from './distribution/distribution-detail/distribution-detail.component';\nimport { AddLeadComponent } from './lead/add-lead/add-lead.component';\nimport { LeadListComponent } from './lead/lead-list/lead-list.component';\nimport { GiftDeatilComponent } from './pop_and_gift/gift-deatil/gift-deatil.component';\nimport { LeadDetailComponent } from './lead/lead-detail/lead-detail.component';\nimport { DistributionListComponent } from './distribution/distributor-list/distribution-list.component';\nimport { RetailerListComponent } from './distribution/retailer-list/retailer-list.component';\nimport { WholesalerListComponent } from './distribution/wholesaler-list/wholesaler-list.component';\nimport { EngineListComponent } from './distribution/engine-list/engine-list.component';\nimport { MechanicListComponent } from './distribution/mechanic-list/mechanic-list.component';\nimport { AddTaskComponent } from './task/add-task/add-task.component';\nimport { TaskListComponent } from './task/task-list/task-list.component';\nimport { AuthGuardLog }    from './auth-guard-log.service';\nimport { AuthGuard }    from './session.service';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport {  AssigntaskComponent } from './task/assigntask/assigntask.component';\nimport { AddFollowupComponent } from './followup/add-followup/add-followup.component';\nimport { FollowupListComponent } from './followup/followup-list/followup-list.component';\nimport { TaskDetailComponent } from './task/task-detail/task-detail.component';\nimport { AddOrderComponent } from './order/add-order/add-order.component';\nimport { OrderListComponent } from './order/order-list/order-list.component';\nimport { OrderDetailComponent } from './order/order-detail/order-detail.component';\nimport { CheckinComponent } from './checkin/checkin-list/checkin-list.component';\n\nimport { AddActivityComponent } from './activity/add-activity/add-activity.component';\nimport { AddTravelComponent } from './travel/add-travel/add-travel.component';\nimport { ListTravelComponent } from './travel/list-travel/list-travel.component';\nimport { DetailTravelComponent } from './travel/detail-travel/detail-travel.component';\nimport { AddExpenseComponent } from './expense/add-expense/add-expense.component';\nimport { ExpenseListComponent } from './expense/expense-list/expense-list.component';\nimport { ExpenseDetailComponent } from './expense/expense-detail/expense-detail.component';\nimport { DetailByDateComponent } from './expense/detail-by-date/detail-by-date.component';\nimport { ConcernListComponent } from './customer-concern/concern-list/concern-list.component';\nimport { AddConcernComponent } from './customer-concern/add-concern/add-concern.component';\nimport { ConcernDetailComponent } from './customer-concern/concern-detail/concern-detail.component';\nimport { AllFollowupListComponent } from './followup/all-followup-list/all-followup-list.component';\nimport { EditOrderComponent } from './order/edit-order/edit-order.component';\nimport { DraftDetailComponent } from './customer-concern/draft-detail/draft-detail.component';\nimport { RejectLeadComponent } from './reject-lead/reject-lead.component';\n// import { UpdateConcernComponent } from './customer-concern/update-concern/update-concern.component';s\nimport { AddSchemeComponent } from './scheme/add-scheme/add-scheme.component';\nimport { LeaveApplyAddComponent } from './leave-apply/leave-apply-add/leave-apply-add.component';\nimport { LeaveApplyListComponent } from './leave-apply/leave-apply-list/leave-apply-list.component';\nimport { SchemeListComponent } from './scheme/scheme-list/scheme-list.component';\nimport { SchemeDetailComponent } from './scheme/scheme-detail/scheme-detail.component';\nimport { CheckinDetailComponent } from './checkin/checkin-detail/checkin-detail.component';\n\nimport { AllowanceComponent } from './allowance/allowance.component';\nimport { AddLeaveComponent } from './leave/add-leave/add-leave.component';\nimport { LeaveDetailComponent } from './leave/leave-detail/leave-detail.component';\nimport { LeaveListComponent } from './leave/leave-list/leave-list.component';\nimport { PopAndGiftDistributorListComponent } from './pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component';\nimport { PopAndGiftDistributorAddComponent } from './pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component';\nimport { LeaveRuleDetailComponent } from './leave-and-holiday/leave-rule-detail/leave-rule-detail.component';\nimport { EditleaveComponent } from './leave/editleave/editleave.component';\nimport { EditOutStationComponent } from './expense/edit-out-station/edit-out-station.component';\nimport { EditmiscComponent } from './expense/editmisc/editmisc.component';\nimport { EditLocalExpenseComponent } from './expense/edit-local-expense/edit-local-expense.component';\nimport { EditSalesPormotionComponent } from './expense/edit-sales-pormotion/edit-sales-pormotion.component';\nimport { EversionDetailComponent } from './pop_and_gift/eversion-detail/eversion-detail.component';\nimport { VendorAddComponent } from './vendor/vendor-add/vendor-add.component';\nimport { VendorListComponent } from './vendor/vendor-list/vendor-list.component';\nimport { VendorDetailComponent } from './vendor/vendor-detail/vendor-detail.component';\nimport { QrCodeDetailComponent } from './vendor/qr-code-detail/qr-code-detail.component';\n\nconst routes: Routes = [\n  { path: \"\", component: LoginComponent, canActivate:[AuthGuardLog]},\n  { path: \"dashboard\", component: DashboardComponent, canActivate:[AuthGuard]},\n  { path: \"add-task\", component: AddTaskComponent, canActivate:[AuthGuard]},\n  { path: \"assigntask/:id\", component: AssigntaskComponent, canActivate:[AuthGuard]},\n  { path: \"task-list\", component: TaskListComponent, canActivate:[AuthGuard]},\n  { path: \"product-list\", component: ProductListComponent,canActivate:[AuthGuard]},\n  { path: \"product-detail/:id\", component:  ProductDetailComponent, canActivate:[AuthGuard]},\n  { path: \"user-add\", component: UserAddComponent, canActivate:[AuthGuard]},\n  { path: \"sale-user-list\", component: SaleUserListComponent, canActivate:[AuthGuard] },\n  { path: \"sale-user-detail/:id\", component: SaleUserDetailComponent,canActivate:[AuthGuard]  },\n  { path: \"system-user-list\", component: SystemUserListComponent, canActivate:[AuthGuard] },\n  { path: \"system-user-detail/:id\", component: SystemUserDetailComponent, canActivate:[AuthGuard] },\n  { path: \"territory-add/:id\", component: TerritoryAddComponent,  canActivate:[AuthGuard]},\n  { path: \"territory-list\", component: TerritoryListComponent, canActivate:[AuthGuard] },\n  { path: \"pop_and_gift\", component: AddGiftComponent,canActivate:[AuthGuard] },\n  { path: \"gift-list\", component: GiftListComponent,  canActivate:[AuthGuard]},\n  { path: \"add-leave-rules/:id\", component: AddLeaveRulesComponent, canActivate:[AuthGuard] },\n  { path: \"add-holiday\", component: AddHolidayComponent, canActivate:[AuthGuard] },\n  { path: \"leave-rule-list\", component: LeaveRuleListComponent,  canActivate:[AuthGuard]},\n  { path: \"holiday-list\", component: HolidayListComponent, canActivate:[AuthGuard]},\n  { path: \"add-annoucement\", component: AddAnnoucementComponent, canActivate:[AuthGuard] },\n  { path: \"annoucement-list\", component: AnnoucementListComponent, canActivate:[AuthGuard] },\n  { path: \"add-distribution\", component: AddDistributionComponent, canActivate:[AuthGuard] },\n  { path: \"distribution-list\", component: DistributionListComponent,  canActivate:[AuthGuard]},\n  { path: \"distribution-detail/:id\", component: DistributionDetailComponent, canActivate:[AuthGuard] },\n  { path: \"add-lead\", component: AddLeadComponent, canActivate:[AuthGuard] },\n  { path: \"lead-list\", component: LeadListComponent, canActivate:[AuthGuard] },\n  { path: \"gift-deatil/:id\", component: GiftDeatilComponent,canActivate:[AuthGuard]  },\n  { path: \"lead-detail/:id\", component: LeadDetailComponent,canActivate:[AuthGuard] },\n  { path: \"retailer-list\", component: RetailerListComponent, canActivate:[AuthGuard] },\n  { path: \"wholesaler-list\", component: WholesalerListComponent,canActivate:[AuthGuard]  },\n  { path: \"engine-list\", component: EngineListComponent,canActivate:[AuthGuard]  },\n  { path: \"mechanic-list\", component: MechanicListComponent,canActivate:[AuthGuard]  },\n  { path: \"add-followup/:id\", component: AddFollowupComponent, canActivate:[AuthGuard]  },\n  { path: \"followup-list\", component: FollowupListComponent, canActivate:[AuthGuard]  },\n  { path: \"task-detail/:id\", component: TaskDetailComponent, canActivate:[AuthGuard]  },\n  { path: \"checkin-list\", component: CheckinComponent, canActivate:[AuthGuard]  },\n  { path: \"add-order\", component: AddOrderComponent, canActivate:[AuthGuard]  },\n  { path: \"order-list\", component: OrderListComponent, canActivate:[AuthGuard]  },\n  { path: \"order-detail/:id\", component: OrderDetailComponent, canActivate:[AuthGuard]  },\n  { path: \"edit-order/:id\", component: EditOrderComponent, canActivate:[AuthGuard]  },\n  { path: \"add-activity\", component: AddActivityComponent, canActivate:[AuthGuard]  },\n  { path: \"add-travel\", component: AddTravelComponent, canActivate:[AuthGuard]  },\n  { path: \"list-travel\", component: ListTravelComponent, canActivate:[AuthGuard]  },\n  { path: \"detail-travel/:id\", component: DetailTravelComponent, canActivate:[AuthGuard]  },\n  { path: \"add-expense\", component: AddExpenseComponent, canActivate:[AuthGuard]  },\n  { path: \"expense-list\", component: ExpenseListComponent, canActivate:[AuthGuard]  },\n  { path: \"expense-detail/:id\", component: ExpenseDetailComponent, canActivate:[AuthGuard]  },\n  { path: \"detail-by-date/:id\", component: DetailByDateComponent, canActivate:[AuthGuard]  },\n  { path: \"concern-list\", component: ConcernListComponent, canActivate:[AuthGuard]  },\n  { path: \"add-concern\", component: AddConcernComponent, canActivate:[AuthGuard]  },\n  { path: \"concern-detail/:id\", component: ConcernDetailComponent, canActivate:[AuthGuard]  },\n  { path: \"all-followup-list/:id\", component: AllFollowupListComponent, canActivate:[AuthGuard]  },\n  { path: \"draft-detail/:id\", component: DraftDetailComponent, canActivate:[AuthGuard]  },\n  { path: \"reject-lead\", component: RejectLeadComponent, canActivate:[AuthGuard]  },\n  { path: \"add-scheme\", component: AddSchemeComponent, canActivate:[AuthGuard]  },\n  { path: \"leave-apply\", component: LeaveApplyAddComponent, canActivate:[AuthGuard]  },\n  { path: \"leave-apply-list\", component: LeaveApplyListComponent, canActivate:[AuthGuard]  },\n  { path: \"scheme-list\", component: SchemeListComponent, canActivate:[AuthGuard]  },\n  { path: \"scheme-detail/:id\", component: SchemeDetailComponent, canActivate:[AuthGuard]  },\n  // { path: \"scheme-detail\", component: SchemeDetailComponent},\n  { path: \"checkin-detail/:id\", component: CheckinDetailComponent, canActivate:[AuthGuard]  },\n  { path: \"checkin-detail/:id/:date\", component: CheckinDetailComponent, canActivate:[AuthGuard]  },\n  \n  { path: \"add-leave\", component: AddLeaveComponent, canActivate:[AuthGuard]  },\n  { path: \"leave-detail/:id\", component: LeaveDetailComponent, canActivate:[AuthGuard]  },\n  { path: \"leave-list\", component: LeaveListComponent, canActivate:[AuthGuard]  },\n  // { path: \"update-concern\", component: UpdateConcernComponent, canActivate:[AuthGuard]  },\n  \n  { path: \"allowance\", component: AllowanceComponent, canActivate:[AuthGuard]},\n  { path: \"pop-and-gift-distributor-list\", component: PopAndGiftDistributorListComponent, canActivate:[AuthGuard] },\n  { path: \"pop-and-gift-distributor-add\", component: PopAndGiftDistributorAddComponent, canActivate:[AuthGuard] },\n  { path: \"leave-rule-detail/:id\", component: LeaveRuleDetailComponent, canActivate:[AuthGuard] },\n  { path: \"editleave/:id\", component: EditleaveComponent, canActivate:[AuthGuard] },\n  { path: \"edit-out-station/:id\", component: EditOutStationComponent, canActivate:[AuthGuard] },\n  { path: \"editmisc/:id\", component: EditmiscComponent, canActivate:[AuthGuard] },\n  { path: \"edit-local-expense/:id\", component: EditLocalExpenseComponent, canActivate:[AuthGuard] },\n  { path: \"edit-sales-pormotion/:id\", component: EditSalesPormotionComponent, canActivate:[AuthGuard] },\n  { path: \"eversion-detail/:id\", component: EversionDetailComponent, canActivate:[AuthGuard] },\n  { path: \"vendor-add\", component: VendorAddComponent, canActivate:[AuthGuard] },\n  { path: \"vendor-list\", component: VendorListComponent, canActivate:[AuthGuard] },\n  { path: \"vendor-detail/:id\", component: VendorDetailComponent, canActivate:[AuthGuard] },\n  { path: \"qr-code-detail\", component: QrCodeDetailComponent, canActivate:[AuthGuard] },\n  \n];\n\n@NgModule({\n  \n  \n  imports: [\n    RouterModule.forRoot(routes),\n    \n    \n  ],\n  exports: [\n    // AuthGuardLog,\n    // AuthGuard,\n    RouterModule]\n  })\n  export class AppRoutingModule { }\n  ","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!-- <app-login></app-login> -->\\n<!-- <app-header ></app-header>\\n<app-navigation ></app-navigation>\\n<app-footer ></app-footer> -->\\n<app-header *ngIf=\\\"service.can_active\\\"></app-header>\\n<app-navigation *ngIf=\\\"service.can_active\\\"></app-navigation>\\n<app-footer *ngIf=\\\"service.can_active\\\"></app-footer>\\n<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport * as moment from 'moment';\nimport { ConstantService } from 'src/app/constant.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'kenshin';\n  constructor(public service: ConstantService,) { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\nimport { routerTransition } from './router-animation/router-animation.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { MasterTabComponent } from './master-tab/master-tab/master-tab.component';\nimport { MasterTabListComponent } from './master-tab-list/master-tab-list/master-tab-list.component';\nimport { ProductListComponent } from './product/product-list/product-list.component';\nimport { ProductDetailComponent } from './product/product-detail/product-detail.component';\nimport { UserAddComponent } from './user/user-add/user-add.component';\nimport { SaleUserListComponent } from './user/sale-user-list/sale-user-list.component';\nimport { SaleUserDetailComponent } from './user/sale-user-detail/sale-user-detail.component';\nimport { SystemUserListComponent } from './user/system-user-list/system-user-list.component';\nimport { SystemUserDetailComponent } from './user/system-user-detail/system-user-detail.component';\nimport { TerritoryAddComponent } from './territory/territory-add/territory-add.component';\nimport { TerritoryListComponent } from './territory/territory-list/territory-list.component';\nimport { AddGiftComponent } from './pop_and_gift/add-gift/add-gift.component';\nimport { GiftListComponent } from './pop_and_gift/gift-list/gift-list.component';\nimport {GiftModalComponent}from './pop_and_gift/gift-modal/gift-modal.component';\nimport { AddLeaveRulesComponent } from './leave-and-holiday/add-leave-rules/add-leave-rules.component';\nimport { AddHolidayComponent } from './leave-and-holiday/add-holiday/add-holiday.component';\nimport { LeaveRuleListComponent } from './leave-and-holiday/leave-rule-list/leave-rule-list.component';\nimport { HolidayListComponent } from './leave-and-holiday/holiday-list/holiday-list.component';\nimport { FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '../../node_modules/@angular/common/http';\nimport { AddAnnoucementComponent } from './annoucement/add-annoucement/add-annoucement.component';\nimport { AnnoucementListComponent } from './annoucement/annoucement-list/annoucement-list.component';\nimport { AddressModalComponent } from './user/address-modal/address-modal.component';\nimport {SystemModalComponent}from './user/system-modal/system-modal.component';\nimport { EmailModalComponent } from './user/email-modal/email-modal.component';\nimport { ProductModalComponent } from './product/product-modal/product-modal.component';\nimport { AddDistributionComponent } from './distribution/add-distribution/add-distribution.component';\nimport { DistributionListComponent } from './distribution/distributor-list/distribution-list.component';\nimport { MyFilterPipe } from './shared/pipes/my-filter.pipe';\n// import { UniquePipe } from './shared/pipes/unique-filter.pipe';\n\nimport { AddDiscountComponent } from './discount/add-discount/add-discount.component';\nimport { DiscountListComponent } from './discount/discount-list/discount-list.component';\nimport { DistributionDetailComponent } from './distribution/distribution-detail/distribution-detail.component';\nimport { DistributionOrderListComponent } from './distribution/distribution-order-list/distribution-order-list.component';\nimport { AddLeadComponent } from './lead/add-lead/add-lead.component';\nimport { LeadListComponent } from './lead/lead-list/lead-list.component';\nimport { GiftDeatilComponent } from './pop_and_gift/gift-deatil/gift-deatil.component';\nimport { LeadDetailComponent } from './lead/lead-detail/lead-detail.component';\nimport { RetailerListComponent } from './distribution/retailer-list/retailer-list.component';\nimport { WholesalerListComponent } from './distribution/wholesaler-list/wholesaler-list.component';\nimport { MechanicListComponent } from './distribution/mechanic-list/mechanic-list.component';\nimport { EngineListComponent } from './distribution/engine-list/engine-list.component';\nimport { AddTaskComponent } from './task/add-task/add-task.component';\nimport { TaskListComponent } from './task/task-list/task-list.component';\nimport {  AssigntaskComponent } from './task/assigntask/assigntask.component';\nimport { AuthGuardLog }    from './auth-guard-log.service';\nimport { AuthGuard }    from './session.service';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AddFollowupComponent } from './followup/add-followup/add-followup.component';\nimport { FollowupListComponent } from './followup/followup-list/followup-list.component';\nimport { TaskDetailComponent } from './task/task-detail/task-detail.component';\nimport { UpdateNetworkComponent } from './distribution/update-network/update-network.component';\nimport { UpdateNetworkAddressComponent } from './distribution/update-network-address/update-network-address.component';\nimport { AddOrderComponent } from './order/add-order/add-order.component';\nimport { OrderListComponent } from './order/order-list/order-list.component';\nimport { OrderDetailComponent } from './order/order-detail/order-detail.component';\nimport { CheckinComponent } from './checkin/checkin-list/checkin-list.component';\nimport { AddActivityComponent } from './activity/add-activity/add-activity.component';\nimport { UpdateLeadComponent } from './lead/update-lead/update-lead.component';\nimport { AddTravelComponent } from './travel/add-travel/add-travel.component';\nimport { ListTravelComponent } from './travel/list-travel/list-travel.component';\nimport { DetailTravelComponent } from './travel/detail-travel/detail-travel.component';\nimport { UpdateTravelComponent } from './travel/update-travel/update-travel.component';\nimport { AddExpenseComponent } from './expense/add-expense/add-expense.component';\nimport { ExpenseListComponent } from './expense/expense-list/expense-list.component';\nimport { ExpenseDetailComponent } from './expense/expense-detail/expense-detail.component';\nimport { DetailByDateComponent } from './expense/detail-by-date/detail-by-date.component';\nimport { AnnoucementDetailComponent } from './annoucement/annoucement-detail/annoucement-detail.component';\nimport { TerritoryDetailComponent } from './territory/territory-detail/territory-detail.component';\nimport { ListOrderComponent } from './order/list-order/list-order.component';\nimport { ConcernListComponent } from './customer-concern/concern-list/concern-list.component';\nimport { AddConcernComponent } from './customer-concern/add-concern/add-concern.component';\nimport { ConcernDetailComponent } from './customer-concern/concern-detail/concern-detail.component';\nimport { DetailorderlistComponent } from './order/detailorderlist/detailorderlist.component';\nimport { AllFollowupListComponent } from './followup/all-followup-list/all-followup-list.component';\nimport { EditOrderComponent } from './order/edit-order/edit-order.component';\nimport { OtherAddressComponent } from './order/other-address/other-address.component';\nimport { ReadMassageComponent } from './annoucement/read-massage/read-massage.component';\nimport { ReadPopupComponent } from './annoucement/read-popup/read-popup.component';\nimport { UniquePipe } from './annoucement/annoucement-list/unique-filter.pipe';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n// import { LocalStorageService }  from './local-storage.Service';\nimport { DraftDetailComponent } from './customer-concern/draft-detail/draft-detail.component';\nimport { UpdateConcernComponent } from './customer-concern/update-concern/update-concern.component';\n// import {NgxScrollToFirstInvalidModule} from '@ismaestro/ngx-scroll-to-first-invalid';\n// import { FileSaverModule } from 'ngx-filesaver';\n\nimport {NgxScrollToFirstInvalidModule} from '@ismaestro/ngx-scroll-to-first-invalid';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { PlaceModalComponent } from './territory/place-modal/place-modal.component';\nimport { NgxEditorModule } from 'ngx-editor';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { RejectLeadComponent } from './reject-lead/reject-lead.component';\nimport { AddSchemeComponent } from './scheme/add-scheme/add-scheme.component';\nimport { LeaveApplyAddComponent } from './leave-apply/leave-apply-add/leave-apply-add.component';\nimport { LeaveApplyListComponent } from './leave-apply/leave-apply-list/leave-apply-list.component';\nimport { SchemeListComponent } from './scheme/scheme-list/scheme-list.component';\nimport { SchemeDetailComponent } from './scheme/scheme-detail/scheme-detail.component';\nimport { EditSchemeComponent } from './scheme/edit-scheme/edit-scheme.component';\nimport { CheckinDetailComponent } from './checkin/checkin-detail/checkin-detail.component';\nimport { AllowanceComponent } from './allowance/allowance.component';\nimport { DocumentEndImageComponent } from './distribution/document-end-image/document-end-image.component';\nimport { CitiesModalComponent } from './cities-modal/cities-modal.component';\nimport { AddLeaveComponent } from './leave/add-leave/add-leave.component';\nimport { LeaveDetailComponent } from './leave/leave-detail/leave-detail.component';\nimport { LeaveListComponent } from './leave/leave-list/leave-list.component';\nimport { SchemepopupComponent } from './order/schemepopup/schemepopup.component';\nimport { UpdateStatusComponent } from './customer-concern/update-status/update-status.component';\nimport { EditdateSchemeComponent } from './scheme/editdate-scheme/editdate-scheme.component';\n\nimport { VideoModalComponent } from './pop_and_gift/video-modal/video-modal.component';\nimport { WalletDetailModalComponent } from './pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component';\nimport { PopAndGiftDistributorListComponent } from './pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component';\nimport { PopAndGiftDistributorAddComponent } from './pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component';\nimport { LeaveRuleDetailComponent } from './leave-and-holiday/leave-rule-detail/leave-rule-detail.component';\nimport { StatusModalComponent } from './pop_and_gift-distributor/status-modal/status-modal.component';\nimport { DatePipe } from '@angular/common';\nimport { EditleaveComponent } from './leave/editleave/editleave.component';\nimport { AddDistributorComponent } from './scheme/add-distributor/add-distributor.component';\nimport { PendingOrderComponent } from './order/pending-order/pending-order.component';\nimport { AddOnDetailComponent } from './travel/add-on-detail/add-on-detail.component';\nimport { EditOutStationComponent } from './expense/edit-out-station/edit-out-station.component';\nimport { EditmiscComponent } from './expense/editmisc/editmisc.component';\nimport { EditSalesPormotionComponent } from './expense/edit-sales-pormotion/edit-sales-pormotion.component';\nimport { EditLocalExpenseComponent } from './expense/edit-local-expense/edit-local-expense.component';\nimport { RemarkModalComponent } from './checkin/remark-modal/remark-modal.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ImageModalComponent } from './customer-concern/image-modal/image-modal.component';\nimport { EversionDetailComponent } from './pop_and_gift/eversion-detail/eversion-detail.component';\nimport { VendorAddComponent } from './vendor/vendor-add/vendor-add.component';\nimport { VendorListComponent } from './vendor/vendor-list/vendor-list.component';\nimport { VendorDetailComponent } from './vendor/vendor-detail/vendor-detail.component';\n// import { PurchaseOrderAddComponent } from './purchase-order/purchase-order-add/purchase-order-add.component';\n// import { PurchaseOrderListComponent } from './purchase-order/purchase-order-list/purchase-order-list.component';\n// import { PurchaseOrderDetailComponent } from './purchase-order/purchase-order-detail/purchase-order-detail.component';\nimport { QrCodeDetailComponent } from './vendor/qr-code-detail/qr-code-detail.component';\nimport { VendorUpdateComponent } from './vendor/vendor-update/vendor-update.component';\nimport { EditmodelComponent } from './product/editmodel/editmodel.component';\nimport { RemainingLeaveComponent } from './leave/remaining-leave/remaining-leave.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavigationComponent,\n    // AuthGuardLog,\n    // AuthGuard,\n    TaskListComponent,\n    AddTaskComponent,\n    MasterTabComponent,\n    ProductListComponent,\n    MasterTabListComponent,\n    ProductDetailComponent,\n    UserAddComponent,\n    SaleUserListComponent,\n    SaleUserDetailComponent,\n    SystemUserListComponent,\n    SystemUserDetailComponent,\n    SystemModalComponent,\n    TerritoryAddComponent,\n    TerritoryListComponent,\n    AddGiftComponent,\n    GiftListComponent,\n    AddLeaveRulesComponent,\n    AddHolidayComponent,\n    LeaveRuleListComponent,\n    HolidayListComponent,\n    AddAnnoucementComponent,\n    AnnoucementListComponent,\n    AddressModalComponent,\n    EmailModalComponent,\n    ProductModalComponent,\n    AddDistributionComponent,\n    DistributionListComponent,\n    AddDiscountComponent,\n    DiscountListComponent,\n    DistributionDetailComponent,\n    DistributionOrderListComponent,\n    MyFilterPipe,\n    UniquePipe,\n    AddLeadComponent,\n    LeadListComponent,\n    GiftDeatilComponent,\n    LeadDetailComponent,\n    RetailerListComponent,\n    EngineListComponent,\n    WholesalerListComponent,\n    MechanicListComponent,\n    DashboardComponent,\n    AssigntaskComponent,\n    GiftModalComponent,\n    AddFollowupComponent,\n    FollowupListComponent,\n    TaskDetailComponent,\n    UpdateNetworkComponent,\n    UpdateNetworkAddressComponent,\n    AddOrderComponent,\n    OrderListComponent,\n    OrderDetailComponent,\n    CheckinComponent,\n    AddActivityComponent,\n    UpdateLeadComponent,\n    AddTravelComponent,\n    ListTravelComponent,\n    DetailTravelComponent,\n    UpdateTravelComponent,\n    AddExpenseComponent,\n    ExpenseListComponent,\n    ExpenseDetailComponent,\n    DetailByDateComponent,\n    AnnoucementDetailComponent,\n    TerritoryDetailComponent,\n    ListOrderComponent,\n    ConcernListComponent,\n    AddConcernComponent,\n    ConcernDetailComponent,\n    DetailorderlistComponent,\n    AllFollowupListComponent,\n    EditOrderComponent,\n    OtherAddressComponent,\n    ReadMassageComponent,\n    ReadPopupComponent,\n    DraftDetailComponent,\n    UpdateConcernComponent,\n    PlaceModalComponent,\n    RejectLeadComponent,\n    AddSchemeComponent,\n    LeaveApplyAddComponent,\n    LeaveApplyListComponent,\n    SchemeListComponent,\n    SchemeDetailComponent,\n    EditSchemeComponent,\n    CheckinDetailComponent,\n    AllowanceComponent,\n    DocumentEndImageComponent,\n    CitiesModalComponent,\n    AddLeaveComponent,\n    LeaveDetailComponent,\n    LeaveListComponent,\n    SchemepopupComponent,\n    UpdateStatusComponent,\n    EditdateSchemeComponent,\n    VideoModalComponent,\n    WalletDetailModalComponent,\n    PopAndGiftDistributorListComponent,\n    PopAndGiftDistributorAddComponent,\n    LeaveRuleDetailComponent,\n    StatusModalComponent,\n    EditleaveComponent,\n    AddDistributorComponent,\n    PendingOrderComponent,\n    AddOnDetailComponent,\n    EditOutStationComponent,\n    EditmiscComponent,\n    EditSalesPormotionComponent,\n    EditLocalExpenseComponent,\n    RemarkModalComponent,\n    ImageModalComponent,\n    EversionDetailComponent,\n    VendorAddComponent,\n    VendorListComponent,\n    VendorDetailComponent,\n    QrCodeDetailComponent,\n    VendorUpdateComponent,\n    EditmodelComponent,\n    RemainingLeaveComponent\n    \n    \n  ],\n  imports: [\n    BrowserModule,\n    InfiniteScrollModule,\n    // FileSaverModule,\n    // NgxScrollToFirstInvalidModule,\n    AppRoutingModule,\n    NgxMaterialTimepickerModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    FormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    NgxScrollToFirstInvalidModule,\n    NgxEditorModule,\n    AngularFontAwesomeModule,\n    TooltipModule.forRoot()\n  ],\n  \n  entryComponents:[\n    StatusModalComponent,\n    AddressModalComponent,\n    SystemModalComponent,\n    SchemepopupComponent,\n    EmailModalComponent,\n    UpdateNetworkComponent,\n    ProductModalComponent,\n    GiftModalComponent,\n    UpdateNetworkAddressComponent,\n    UpdateLeadComponent,\n    UpdateTravelComponent,\n    ListOrderComponent,\n    DetailorderlistComponent,\n    OtherAddressComponent,\n    ReadMassageComponent,\n    ReadPopupComponent,\n    UpdateConcernComponent,\n    PlaceModalComponent,\n    RejectLeadComponent,\n    EditSchemeComponent,\n    DocumentEndImageComponent,\n    CitiesModalComponent,\n    EditdateSchemeComponent,\n    AddDistributorComponent,\n    PendingOrderComponent,\n    AddOnDetailComponent,\n    VideoModalComponent,\n    RemarkModalComponent,\n    ImageModalComponent,\n    EditmodelComponent,\n    RemainingLeaveComponent,\n    WalletDetailModalComponent\n  ],\n  \n  providers: [\n    AuthGuardLog,\n    // LocalStorageService,\n    AuthGuard,\n    DatePipe\n  ],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router,RouterModule,Routes, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { sessionStorage }  from './local-storage.service';\nimport { ConstantService } from 'src/app/constant.service';\n\n@Injectable()\nexport class AuthGuardLog implements CanActivate {\n  \n   users:any = [];\n   constructor(private router: Router,public ses: sessionStorage, public service: ConstantService) { }\n\n \n\n   canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n            this.ses.getSe().subscribe(\n              data => {\n               this.users = data;\n               console.log(this.users);\n               },\n               error => {\n                  console.log('error');\n\n                  });\n\n\n      if (this.users.st_log) {\n        console.log(this.users);\n          if(state.url != '/')   {          \n            //this.router.navigate([state.url]);\n          }else{\n            this.router.navigate(['dashboard']);\n\n          }\n          this.service.can_active = '1';\n           return false;\n\n       }else{\n            this.service.can_active = '';\n            return true;\n       }\n      \n    \n\n\n      }\n\n}\nexport class AuthGuardLogService { }\n","module.exports = \"<form>\\n  <div class=\\\"main-container\\\">\\n    <div *ngIf=\\\"loader\\\"> \\n      <div class=\\\"cs-loader\\\">\\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n      </div>\\n    </div>\\n    <div class=\\\"middle-container\\\">\\n      <div class=\\\"page-heading\\\">\\n        <!-- <img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"h-icon\\\"> -->\\n        <div class=\\\"heading-text bc-space\\\"><strong>CHECKIN DETAIL</strong> \\n          <p>{{checkin_detail.length}}</p> \\n          <h2>{{checkInUser}}</h2>\\n          <div class=\\\"back-btn\\\" >\\n            <a mat-button routerLink=\\\"/checkin-list\\\" routerLinkActive=\\\"active\\\" ><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"left-auto\\\" *ngIf=\\\"userId==checkin_id && !checkin_detail[0].remarkSecondary\\\">\\n        <div class=\\\"cs-btn text-right \\\">\\n          <div class=\\\"in-btn\\\">\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"openDialog('activityReamrk')\\\">Add Remark</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"container-outer\\\" >\\n      <div class=\\\"container\\\" >\\n        \\n        <div class=\\\"row\\\" >\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box padding0 mb15\\\" *ngFor=\\\"let checkindetail of checkin_detail;let i = index\\\">\\n              <div class=\\\"cs-heading\\\" style=\\\"margin: 0px;\\\">\\n                <h2>{{i+1}}. Basic Information</h2>\\n              </div>\\n              <div class=\\\"ds-from-fields scroll scroll350\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s12 padding0\\\">\\n                    <div class=\\\"details-info\\\">\\n                      <div class=\\\"basic-details\\\">\\n                        <div class=\\\"col s12 cs-figure padding0\\\">\\n                          <ul>\\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Created Date</span>\\n                                  <p> {{checkindetail.createdOn | date:'d, MMMM , y'}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Type</span>\\n                                  <p>{{checkindetail.activityModuleName}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Company Name</span>\\n                                  <p  *ngIf=\\\"checkindetail.activityModule==1\\\">{{checkindetail.establishment}}</p>\\n                                  <p  *ngIf=\\\"checkindetail.referenceId==0\\\">{{checkindetail.establishmentName}}</p>\\n                                  <p *ngIf=\\\"checkindetail.activityModule!=1\\\">{{checkindetail.leadEstablishment}} </p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>CheckInTime</span>\\n                                  <p>{{checkindetail.checkInTime|date:'d, MMMM , y, h:mm:ss a'}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>CheckOutTime</span>\\n                                  <p>{{checkindetail.checkOutTime|date :'d, MMMM , y, h:mm:ss a'}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Check In Duration</span>\\n                                  <p>{{checkindetail.checkinDuration}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Visit Objective </span>\\n                                  <p>{{checkindetail.objectivesOfVisitName}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li *ngIf=\\\"checkindetail.objectivesOfVisitName=='Others'\\\">\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Other Objective </span>\\n                                  <p>{{checkindetail.otherObjective}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                          </ul>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"sprate-box pt0\\\">\\n                      <div class=\\\"cs-heading\\\">\\n                        <h2>Basic Information</h2>\\n                      </div>\\n                      <div class=\\\"from-fields\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s12 padding0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input\\\">\\n                                <input matInput placeholder=\\\"Location\\\" name=\\\"location\\\" value=\\\"{{checkindetail.location}}\\\" readonly>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s12 padding0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input\\\">\\n                                <textarea matInput placeholder=\\\"Remarks\\\"  name=\\\"remarks\\\" value=\\\"{{checkindetail.remarks}}\\\" class=\\\"h100\\\" [readonly]=\\\"true\\\"></textarea>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s8 pr0\\\" *ngIf=\\\"checkindetail.isFollowUp==true\\\">\\n                    <div class=\\\"sprate-box padding0\\\" >\\n                      <div class=\\\"full-address\\\">\\n                        <div class=\\\"top-heading\\\">\\n                          <h2>Follow-ups</h2>\\n                        </div>\\n                        <div class=\\\"cs-table\\\">\\n                          <div class=\\\"table-head\\\">\\n                            <table>\\n                              <tr>\\n                                <th class=\\\"w100\\\"> date</th>\\n                                <th class=\\\"w170\\\">Follow-up type</th>\\n                                <th >Remarks</th>\\n                                <th class=\\\"w100\\\">Status</th>\\n                              </tr>\\n                            </table>\\n                          </div>\\n                          <div class=\\\"table-container\\\">\\n                            <div class=\\\"table-content none-shadow\\\">\\n                              <table>\\n                                <tr *ngFor=\\\"let check of checkindetail.activityFollowUps\\\">\\n                                  <td class=\\\"w100\\\">{{check.followUpDate|date:'d MMM y'}}</td>\\n                                  <td class=\\\"w170\\\">\\n                                    <span *ngIf=\\\"check.followUpType==1\\\">Call</span>\\n                                    <span *ngIf=\\\"check.followUpType==2\\\">Meeting</span>\\n                                    <span *ngIf=\\\"check.followUpType==3\\\">Email</span>\\n                                    <span *ngIf=\\\"check.followUpType==5\\\">Other</span>\\n                                  </td>\\n                                  <td>{{check.remarks}}</td>\\n                                  <td class=\\\"w100\\\"><span *ngIf=\\\"check.isClosed==true\\\">Closed</span><span *ngIf=\\\"check.isClosed==false\\\">Open</span></td>\\n                                </tr>\\n                              </table>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\" *ngIf=\\\"checkindetail.isFollowUp==false && checkindetail.nextFollowUpType==5\\\">\\n                    <div class=\\\"sprate-box padding0\\\" >\\n                      <div class=\\\"full-address\\\">\\n                        <div class=\\\"top-heading\\\">\\n                          <h2>Follow-ups</h2>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                          <span>\\n                            <strong>OTHER</strong>\\n                          </span>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"row mt15\\\" *ngIf=\\\"checkindetail.remarkSecondary\\\">\\n                  <div class=\\\"col s12 padding0\\\">\\n                    <div class=\\\"details-info\\\">\\n                      <div class=\\\"basic-details none-shadow padding0\\\">\\n                        <div class=\\\"col s12 cs-figure padding0\\\">\\n                          <ul>\\n                            <li style=\\\"border: 1px solid #B29D9D;\\\">\\n                              <p><strong>Remark:</strong><br>{{checkindetail.remarkSecondary}}</p>\\n                            </li>\\n                          </ul>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n<div  class=\\\"fixed-multibtn-botm\\\">\\n  <ul>\\n    <li ><a  matTooltip=\\\"Download Product Sheet\\\" (click)=\\\"exportAsXLSX()\\\" matRipple><i class=\\\"material-icons\\\">cloud_download</i></a></li>\\n  </ul>\\n</div>\\n\\n<div class=\\\"h100\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { sessionStorage } from 'src/app/local-storage.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { RemarkModalComponent } from '../remark-modal/remark-modal.component';\nimport * as moment from 'moment';\nimport { DialogComponent } from 'src/app/dialog';\nimport { IfStmt } from '@angular/compiler';\n@Component({\n  selector: 'app-checkin-detail',\n  templateUrl: './checkin-detail.component.html',\n})\nexport class CheckinDetailComponent implements OnInit {\ncheckin_id:any;\nloader:boolean=false;\ncheckin_detail:any=[];\nrolelists:any=[];\nsales:any=[];\nfollowupdetail:any=[];\ncheckin_date:any;\nuserdata:any=[];\nuserId:any;\ncheckInUser:any;\n  constructor(public db:ConstantService,public router:Router,public user:sessionStorage, public route:ActivatedRoute, public dialog: MatDialog,public confirm:DialogComponent) { \n    this.route.params.subscribe(params=>{\n      this.userdata=this.user['user']['data'];\n      this.userId=this.userdata['userid'];\n      console.log(this.userId);\n\n\n      console.log(params);\n      this.checkin_id = params.id;\n      this.checkin_date = params.date;\n      console.log(this.checkin_id);\n      console.log(this.checkin_date);\n      if(params)\n      {\n\n        this.checkInDetail();\n      }\n     });\n  }\n  ngOnInit() {\n  }\n\n\n  openDialog(check){\n    console.log(check);\n    let checkin_data:any=[];\n    checkin_data={'id':this.checkin_id,'type':check};\n    const dialogRef = this.dialog.open(RemarkModalComponent,{width : '500px' ,data:checkin_data});\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      this.checkInDetail();\n    });\n  }\n\n  checkInDetail(){\n    if(this.checkin_date){\n      console.log(\"check activity by date\");\n      console.log(this.checkin_date);\n      console.log(this.checkin_id);\n      this.loader=true;\n      let value={'userId':this.checkin_id,'checkInDate':this.checkin_date,'currentPage':1,'pageSize':500};\n      console.log(value);\n      \n      this.db.fetchData(value,'activity/list').subscribe((response)=>{\n        console.log(response);\n        if(response['status']==\"Success\"){\n        this.loader=false;\n      this.checkin_detail=response[\"data\"];\n      for(let i=0;i<this.checkin_detail.length;i++)\n      {\n        this.checkin_detail[i].checkinDuration=moment.utc(moment.duration(moment(this.checkin_detail[i].checkOutTime).diff(moment(this.checkin_detail[i].checkInTime))).asMilliseconds()).format('HH:mm')\n      }\n      this.checkInUser=this.checkin_detail[0].userName;\n      this.convertXLSXArray();\n    }else{\n      this.checkin_detail=[];\n    }\n      this.rolelist();\n    });\n\n    }else{\n      console.log(\"check activity by only id\");\n      console.log(this.checkin_id);\n     this.loader=true;\n    this.db.fileData(this.checkin_id,'activity/detail/').subscribe((response)=>{\n      console.log(response);\n      if(response['status']==\"Success\")\n      {\n      this.loader=false;\n       this.checkin_detail[0]=response[\"data\"];\n\n       this.checkin_detail[0].checkinDuration=moment.utc(moment.duration(moment(this.checkin_detail[0].checkOutTime).diff(moment(this.checkin_detail[0].checkInTime))).asMilliseconds()).format('HH:mm')\n      //  for(let i=0;i<this.checkin_detail.length;i++)\n      //  {\n      //  }\n      }\n      else\n      {\n        this.checkin_detail=[];\n      }\n    this.rolelist();\n  });\n    }\n  }\n  rolelist()\n  {\n  this.db.fileData('','usertype/list').subscribe((response)=>{\n  console.log(response);\n  this.rolelists=response['data'];\n  let salespersons= this.rolelists.filter(x => x.userTypeId==2);\n  this.sales=salespersons[0].roles;\n  console.log(this.sales);\n    // let index=this.sales.findIndex(x=>x.roleId==this.checkin_detail.userRole);\n    // this.checkin_detail.roleName=this.sales[index].roleName;\n\n  });\n  }\n\n  xLXSArray:any=[];\n  convertXLSXArray()\n  {\n    for(let i=0;i<this.checkin_detail.length;i++)\n    {\n        this.xLXSArray.push({\n        'Created Date':moment(this.checkin_detail[i].createdOn).format('DD-MM-YYYY'),\n        'Check-In Date':moment(this.checkin_detail[i].checkInTime).format('DD-MM-YYYY'),\n        'Check In Time':moment(this.checkin_detail[i].checkInTime).format('HH:mm'),\n        'Check Out Time':moment(this.checkin_detail[i].checkOutTime).format('HH:mm'),\n        'Check-In Duration':moment.utc(moment.duration(moment(this.checkin_detail[i].checkOutTime).diff(moment(this.checkin_detail[i].checkInTime))).asMilliseconds()).format('HH:mm'),\n        'Activity Type':this.checkin_detail[i].activityModuleName,\n        'User Name':this.checkin_detail[i].userName,\n        'Company Name':this.checkin_detail[i].establishment,\n        'Visit Objective':this.checkin_detail[i].objectivesOfVisitName,\n        'Location':this.checkin_detail[i].location,\n        'Remarks':this.checkin_detail[i].remarks,\n        'FollowUp':(this.checkin_detail[i].isFollowUp==true?'YES':'NO'),\n      })\n      if(this.checkin_detail[i].isFollowUp==true)\n      {\n        this.xLXSArray[i]['FollowUp Date']=moment(this.checkin_detail[i].activityFollowUps[0].followUpDate).format('DD-MM-YYYY'),\n        this.xLXSArray[i]['FollowUp Type']=this.checkin_detail[i].activityFollowUps[0].followUpTypeName,\n        this.xLXSArray[i]['FollowUp Remarks']=this.checkin_detail[i].activityFollowUps[0].remarks,\n        this.xLXSArray[i]['FollowUp Status']=(this.checkin_detail[i].activityFollowUps[0].isClosed==true?'Close':'Open')\n      }\n\n\n\n\n    }\n  }\n  exportAsXLSX():void {\n    console.log(this.xLXSArray);\n    this.db.exportAsExcelFile(this.xLXSArray, 'DVR SHEET');\n  }\n}\n","module.exports = \"<div *ngIf=\\\"loader\\\"> \\n  <div class=\\\"cs-loader\\\">\\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n  </div>\\n</div>\\n<div class=\\\"main-container\\\">\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/activity.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text flex-heading\\\">\\n        <div class=\\\"content\\\">\\n          <h2>DVRs</h2>\\n          <p>Total DVR {{checkInList.length}}</p>\\n        </div>\\n        <div class=\\\"item-filter ml15\\\" *ngIf=\\\"userRole!=10 && userRole!=1\\\">\\n          <mat-form-field class=\\\"wp100\\\">\\n            <mat-select  name=\\\"checkin\\\" [(ngModel)]=\\\"checkList\\\"  >\\n              <mat-option (click)=\\\"checkin_list()\\\" [value]=1>My Check-In</mat-option>\\n              <mat-option (click)=\\\"checkin_list()\\\" [value]=2>My Junior's Check-In</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        \\n        <div class=\\\"item-filter flex-item-filter\\\">\\n          <div class=\\\"multi-all-select top-multi-select w250\\\" style=\\\"background: #f5f5f5\\\">\\n            <ng-multiselect-dropdown\\n            [placeholder]=\\\"'Select User'\\\"\\n            [data]=\\\"userList\\\"\\n            name=\\\"userNames\\\"\\n            #userNames=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"data.userNames\\\"\\n            [settings]=\\\"dropdownSettings\\\"\\n            >\\n          </ng-multiselect-dropdown>\\n        </div>\\n        \\n        <mat-form-field class=\\\"date-filter ml10\\\">\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Date From\\\" (dateChange)=\\\"maxDate()\\\" [max]=\\\"currentDate\\\" name=\\\"fromCheckInDate\\\" [(ngModel)]=\\\"data.fromCheckInDate\\\" readonly>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker1></mat-datepicker>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"date-filter\\\">\\n          <input matInput [matDatepicker]=\\\"one\\\" placeholder=\\\"Date To\\\" [min]=\\\"data.fromCheckInDate\\\" [max]=\\\"dvrMaxDate\\\" name=\\\"toCheckInDate\\\" [(ngModel)]=\\\"data.toCheckInDate\\\" readonly>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"one\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #one></mat-datepicker>\\n        </mat-form-field>\\n        \\n        <div class=\\\"cs-btn\\\">\\n          <div class=\\\"in-btn\\\">\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"getMultiUserArray()\\\" class=\\\"h35-btn\\\">Go</button>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n    \\n  </div>\\n  <!-- <div class=\\\"row\\\">\\n    <div class=\\\"col s8\\\">\\n      <div class=\\\"form-fields\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s4 pl0\\\">\\n            <div class=\\\"multi-all-select\\\">\\n              <label>Distributor</label>\\n              <ng-multiselect-dropdown\\n              [placeholder]=\\\"'Select User'\\\"\\n              [data]=\\\"userList\\\"\\n              name=\\\"user\\\"\\n              [settings]=\\\"dropdownSettings\\\"\\n              (onSelect)=\\\"selectedDistributor(schemeDistributors.schemeDistributors)\\\"\\n              (onSelectAll)=\\\"selectedDistributor($event)\\\"\\n              (onDeSelect)=\\\"selectedDistributor(schemeDistributors.schemeDistributors)\\\"\\n              (onDeSelectAll)=\\\"selectedDistributor($event)\\\"\\n              >\\n            </ng-multiselect-dropdown>\\n          </div>\\n        </div>\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n              <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Check In From\\\" name=\\\"validFrom\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s4 pr0\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n              <input matInput [matDatepicker]=\\\"pickers\\\" placeholder=\\\"Check In To\\\" name=\\\"validTill\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"pickers\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #pickers></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n<div  *ngIf=\\\"filter.companyname || filter.role || filter.module || filter.userName || filter.date || data.userNames\\\" class=\\\"filter-container left-auto\\\">\\n  <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n    <button mat-button >CLEAR FILTER</button>\\n  </div>\\n</div>\\n</div>\\n\\n<div class=\\\"container-outer pt0\\\">\\n  <div class=\\\"container\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"cs-table left-right-20\\\">\\n          <div class=\\\"sticky-head\\\">\\n            <div class=\\\"table-head\\\">\\n              <table>\\n                <tr>\\n                  <th  class=\\\"w150\\\">Check-In Date</th>\\n                  <th  class=\\\"w140\\\">Sales User</th>\\n                  <th  class=\\\"w140\\\">Role</th>\\n                  <th *ngIf=\\\"userRole==1\\\" class=\\\"w140\\\">No. of Check-In</th>\\n                  <th *ngIf=\\\"userRole!=1\\\" >Company Name</th>\\n                  <th class=\\\"w110\\\" *ngIf=\\\"userRole!=1\\\">Type</th>\\n                  <th  class=\\\"w180\\\" *ngIf=\\\"userRole!=1\\\">Check-In Time</th>\\n                  <th  class=\\\"w180\\\" *ngIf=\\\"userRole!=1\\\">Check-Out Time</th>\\n                  <!-- <th  class=\\\"w150\\\">Obejective Of Visit</th> -->\\n                </tr>\\n              </table>\\n            </div>\\n            <div class=\\\"table-head bdrt\\\">\\n              <table>\\n                <tr>\\n                  <th class=\\\"w150\\\"><div class=\\\"th-search padding0\\\" >\\n                    <mat-form-field class=\\\"wp100 toggle-date-picker\\\">\\n                      <input matInput [matDatepicker]=\\\"picker\\\" (dateChange)=\\\"checkin_list()\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"filter.date\\\"  readonly>\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker  #picker></mat-datepicker>\\n                    </mat-form-field>\\n                  </div>\\n                </th>\\n                <th *ngIf=\\\"userRole==1\\\" class=\\\"w140\\\"><div class=\\\"th-search\\\"  [ngClass]=\\\"{ 'clear-feilds' : removename == true}\\\">\\n                  <input type=\\\"text\\\" (keyup)=\\\"checkin_list()\\\" name=\\\"userName\\\" #userName=\\\"ngModel\\\" [(ngModel)]=\\\"filter.userName\\\"  placeholder=\\\"Search....\\\">\\n                  <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\"removenamefilter()\\\"></a>\\n                </div>\\n              </th>\\n              <th *ngIf=\\\"userRole!=1\\\" class=\\\"w140\\\">&nbsp;</th>\\n              <th *ngIf=\\\"userRole!=1\\\" class=\\\"w140\\\">&nbsp;</th>\\n              <th *ngIf=\\\"userRole==1\\\" class=\\\"w140\\\">\\n                <div class=\\\"th-search\\\" >\\n                  <select class=\\\"pr0\\\" (change)=\\\"checkin_list()\\\" name=\\\"module\\\" #module=\\\"ngModel\\\" [(ngModel)]=\\\"filter.role\\\">\\n                    <option [value]=\\\"0\\\">All</option>\\n                    <option [value]=\\\"role.roleId\\\" *ngFor=\\\"let role of sales\\\">{{role.roleName}}</option>\\n                  </select>\\n                </div>\\n              </th>\\n              <!-- <th class=\\\"w140\\\">&nbsp;</th> -->\\n              <th *ngIf=\\\"userRole!=1\\\">\\n                <div class=\\\"th-search\\\"  [ngClass]=\\\"{ 'clear-feilds' : removename == true}\\\">\\n                  <input type=\\\"text\\\" (keyup)=\\\"checkin_list()\\\" name=\\\"companyname\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.companyname\\\"  placeholder=\\\"Search....\\\">\\n                  <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\"removenamefilter()\\\"></a>\\n                </div>\\n                \\n              </th>\\n              <th class=\\\"w110\\\" *ngIf=\\\"userRole!=1\\\">\\n                <div class=\\\"th-search\\\" >\\n                  <select class=\\\"pr0\\\" (change)=\\\"checkin_list()\\\" name=\\\"module\\\" #module=\\\"ngModel\\\" [(ngModel)]=\\\"filter.module\\\">\\n                    <option value=\\\"0\\\">All</option>\\n                    <option value=\\\"1\\\">Distributor</option>\\n                    <option value=\\\"2\\\">Wholesaler</option>\\n                    <option value=\\\"3\\\">Retailer</option>\\n                    <option value=\\\"4\\\">Reconditioner</option>\\n                    <option value=\\\"5\\\">Mechanic</option>\\n                  </select>\\n                </div>\\n              </th>\\n              <th class=\\\"w180\\\" *ngIf=\\\"userRole!=1\\\">&nbsp;</th>\\n              <th class=\\\"w180\\\" *ngIf=\\\"userRole!=1\\\">&nbsp;</th>\\n              <th class=\\\"w140\\\" *ngIf=\\\"userRole==1\\\">&nbsp;</th>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"table-container\\\">\\n        <div class=\\\"table-content\\\">\\n          <table>\\n            <tr *ngFor=\\\"let checkin of checkInList\\\">  \\n              <td *ngIf=\\\"userRole!=1\\\" class=\\\"w150\\\">{{checkin.checkInTime|date :'d, MMMM , y'}}</td>\\n              <td *ngIf=\\\"userRole==1\\\" class=\\\"w150\\\">{{checkin.activity[0].checkInTime|date :'d, MMMM , y'}}</td>\\n              <td  class=\\\"w140\\\">{{checkin.userName}}</td>\\n              <td  class=\\\"w140\\\">{{checkin.roleName}}</td>\\n              <td *ngIf=\\\"userRole==1\\\" class=\\\"w140\\\">{{checkin.count}}\\n                <div class=\\\"action-btns\\\">\\n                  <a mat-button class=\\\"view\\\" mat-button routerLink=\\\"/checkin-detail/{{checkin.userId}}/{{checkin.activity[0].checkInTime|date:'y-MM-d'}}\\\" routerLinkActive=\\\"active\\\"  ><i class=\\\"material-icons\\\">remove_red_eye</i> View</a></div>\\n                </td>\\n                <td *ngIf=\\\"userRole!=1\\\"><a  class=\\\"link-btn\\\" mat-button routerLink=\\\"/checkin-detail/{{checkin.activityId}}\\\" routerLinkActive=\\\"active\\\" ><span *ngIf=\\\"checkin.referenceId!=0\\\">{{checkin.establishment}}</span><span *ngIf=\\\"checkin.referenceId!=0\\\">{{checkin.establishmentName}}</span></a></td>\\n                <td class=\\\"w110\\\" *ngIf=\\\"userRole!=1\\\">{{checkin.activityModuleName}}</td>\\n                <td  class=\\\"w180\\\" *ngIf=\\\"userRole!=1\\\">\\n                  {{checkin.checkInTime|date :'d, MMMM , y, h:mm:ss a'}}\\n                </td>\\n                <td class=\\\"w180\\\" *ngIf=\\\"userRole!=1\\\">{{checkin.checkOutTime|date :'d, MMMM , y, h:mm:ss a'}}\\n                  <div class=\\\"action-btns\\\">\\n                    <a mat-button *ngIf=\\\"userRole!=1\\\" class=\\\"view\\\" mat-button routerLink=\\\"/checkin-detail/{{checkin.activityId}}\\\" routerLinkActive=\\\"active\\\"  ><i class=\\\"material-icons\\\"  >remove_red_eye</i> View</a>\\n                  </div>\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n  <div class=\\\"outer\\\">\\n    <div class=\\\"iinear\\\">\\n      <div class=\\\"figure\\\" matRipple>\\n        <div class=\\\"header\\\">\\n          <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n        </div>\\n        \\n        <div class=\\\"description\\\">\\n          <div class=\\\"img\\\">\\n            <i class=\\\"material-icons\\\">error_outline</i>\\n          </div>\\n          <div class=\\\"psc\\\">\\n            <p>data not available</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<div  class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Download Product Sheet\\\" matRipple (click)=\\\"exportAsXLSX()\\\"><i class=\\\"material-icons\\\">cloud_download</i></a></li>\\n      <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-activity\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\n// import * as moment from 'moment';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { sessionStorage } from 'src/app/local-storage.service';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-checkin-list',\n  templateUrl: './checkin-list.component.html',\n})\nexport class CheckinComponent implements OnInit {\n  checkInList:any=[];\n  loader:boolean;\n  name:any;\n  filter:any={};\n  date:any;\n  userType:any;\n  removename:boolean=false;\n  userId;\n  rolelists:any=[];\n  module:any;\n  role:any;\n  sales:any=[];\n  userdata:any[];\n  div:any=false;\n  checkList:any;\n  userRole:any;\n  data:any={};\n  dropdownSettings:any={};\n  currentDate:any = new Date().toJSON().split('T')[0];\n  constructor(public db:ConstantService,public user:sessionStorage) { \n    this.userdata=this.user['user']['data'];\n    this.userType=this.userdata['userType'];\n    this.userId=this.userdata['userId'];\n    this.userRole=this.userdata['role']\n    console.log(this.userdata);\n    this.checkList=1;\n    if(this.userdata)\n    {\n      this.getUserList();\n      this.checkin_list();\n    }\n  }\n  \n  \n  ngOnInit() {\n\n    this.dropdownSettings = {\n      \n      idField: 'userId',\n      textField: 'userName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n  }\n\nuserList:any=[];\n  getUserList()\n  {\n    this.loader=true;\n    this.db.fetchData({currentPage:1,pageSize:500,userType:2},\"user/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.userList=result['data'];\n      }\n    })\n  }\n  \n  requesData:any={};\n  rolelist()\n  {\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.rolelists=response['data'];\n      let salespersons= this.rolelists.filter(x => x.userTypeId==2);\n      this.sales=salespersons[0].roles;\n      console.log(this.sales);\n      console.log(this.checkInList.length);\n      for(let i=0;i<this.checkInList.length;i++){\n        let index=this.sales.findIndex(x=>x.roleId==this.checkInList[i].userRole);  \n        console.log(index);\n        if(index==-1){\n          this.checkInList[i].roleName=\"\";   \n        }\n        else{\n          this.checkInList[i].roleName=this.sales[index].roleName;\n        }\n      }\n    });\n  }\n  \n  clearfilter(){\n    this.filter={};\n    this.filter.date=undefined;\n    this.createddate=undefined;\n    this.data={};\n    this.checkin_list();\n  }\n  removenamefilter(){\n    console.log(\"hii\");\n    this.filter.companyname=\"\";\n    this.checkin_list();\n  }\n  datechangedbyadmin:any;\n  createddate:any;\n  checkin_list()\n  {\n    \n    this.div=false;\n    if(this.filter.date) \n    {\n      this.createddate=moment(this.filter.date).format('YYYY-MM-DD');\n    }\n    else\n    {\n      this.createddate=undefined\n    } \n    console.log(this.filter.date,this.createddate);\n    this.name=this.filter.companyname;\n    this.role=this.filter.role;\n    this.module=this.filter.module;\n    if(this.name){\n      this.removename=true\n    }\n    else{\n      this.removename=false;\n    }\n    this.loader=true;\n    if(this.userType==1)\n    {\n      this.requesData={'checkInDate':this.createddate,'userName':this.filter.userName,\"userRole\":this.role,\"networkEstablishment\":this.name,\"activityModule\":this.module, \"currentPage\": 1,\n      \"pageSize\": 500}\n      this.db.fetchData(this.requesData,'activity/grouplist').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        \n        if(response['status']=='Success')\n        {\n          this.div=false;\n          this.checkInList=response['data'];\n          this.convertXLSXArray();\n        }\n        if(response['status']=='Failed')\n        {\n          this.checkInList=[];\n          this.div=true;\n        }\n      });\n    }\n    else{\n      this.requesData={'createdOn':this.createddate,\"userRole\":this.role,\"networkEstablishment\":this.name,\"activityModule\":this.module, \"currentPage\": 1,\n      \"pageSize\": 500}\n      if(this.checkList==1)\n      {\n        this.requesData.userId=this.userId\n      }\n      this.db.fetchData(this.requesData,'activity/list').subscribe((response)=>{\n        console.log(response)\n        this.loader=false\n        if(response['status']=='Success')\n        {\n          this.checkInList=response['data'];\n\n          if(this.checkList==2)\n          {\n            const checkinArray=this.checkInList.filter(row=>row.userId!=this.userId)\n            this.checkInList=checkinArray;\n          }\n          this.div=false;\n        }\n        if(response['status']=='Failed')\n        {\n          this.checkInList=[];\n          this.div=true;\n        }\n      });\n    }\n  }\n\n  dvrMaxDate\n  maxDate()\n  {\n\n    let diffrence;\n    diffrence=(moment(this.currentDate).diff(moment(this.data.fromCheckInDate),\"days\"))+1;\n    console.log(diffrence);\n    if(diffrence<30)\n    {\n      this.dvrMaxDate=this.currentDate;\n    }\n    else{\n      var myDate= moment(this.data.fromCheckInDate, \"YYYY-MM-DD\").add(30, 'days');\n      this.dvrMaxDate=moment(myDate[\"_d\"]).format('YYYY-MM-DD');\n    }\n    console.log(this.dvrMaxDate);\n  }\n\n  getMultiUserArray()\n  {\n    this.div=false;\n    this.checkInList=[];\n    console.log(this.data);\n    this.loader=true;\n    const filterArray={userNames:[],toCheckInDate:moment(this.data.toCheckInDate).format('YYYY-MM-DD'),fromCheckInDate:moment(this.data.fromCheckInDate).format('YYYY-MM-DD'),currentPage:1,pageSize:500};\n    for(let i=0;i<this.data.userNames.length;i++)\n    {\n      filterArray.userNames.push(this.data.userNames[i].userName);\n    }\n    this.db.fetchData(filterArray,'activity/grouplist').subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.checkInList=result['data'];\n        this.convertXLSXArray();\n      }\n      if(result['status']=='Failed')\n        {\n          this.checkInList=[];\n          this.div=true;\n        }\n    })\n    \n  }\n\n   xLXSArray:any=[];\n  convertXLSXArray()\n  {\n\n    let userName = '';\n    let p=0\n    for(let j=0;j<this.checkInList.length;j++)\n    {\n      \n      for(let i=0;i<this.checkInList[j].activity.length;i++)\n      {\n\n          let visibleName = ''\n          if(userName != this.checkInList[j].activity[i].userName) {\n              visibleName = this.checkInList[j].activity[i].userName;\n              userName = this.checkInList[j].activity[i].userName;\n          } \n\n          this.xLXSArray.push({\n          'Person Name':visibleName,\n          'Created Date':moment(this.checkInList[j].activity[i].createdOn).format('DD-MM-YYYY'),\n          'Check-In Date':moment(this.checkInList[j].activity[i].checkInTime).format('DD-MM-YYYY'),\n          'Check In Time':moment(this.checkInList[j].activity[i].checkInTime).format('HH:mm'),\n          'Check Out Time':moment(this.checkInList[j].activity[i].checkOutTime).format('HH:mm'),\n          'Check-In Duration':moment.utc(moment.duration(moment(this.checkInList[j].activity[i].checkOutTime).diff(moment(this.checkInList[j].activity[i].checkInTime))).asMilliseconds()).format('HH:mm'),\n          'Activity Type':this.checkInList[j].activity[i].activityModuleName,\n          'Company Name':this.checkInList[j].activity[i].establishment,\n          'Visit Objective':this.checkInList[j].activity[i].objectivesOfVisitName,\n          'Location':this.checkInList[j].activity[i].location,\n          'Remarks':this.checkInList[j].activity[i].isFollowUp==true?'YES':'NO'\n        })\n        if(this.checkInList[j].activity[i].isFollowUp==true)\n        {\n          this.xLXSArray[p]['FollowUp Date']=moment(this.checkInList[j].activity[i].activityFollowUps[0].followUpDate).format('DD-MM-YYYY'),\n          this.xLXSArray[p]['FollowUp Type']=this.checkInList[j].activity[i].activityFollowUps[0].followUpTypeName,\n          this.xLXSArray[p]['FollowUp Remarks']=this.checkInList[j].activity[i].activityFollowUps[0].remarks,\n          this.xLXSArray[p]['FollowUp Status']=(this.checkInList[j].activity[i].activityFollowUps[0].isClosed==true?'Close':'Open')\n        }\n        p++;\n      }\n    }\n  }\n  exportAsXLSX():void {\n    console.log(this.xLXSArray);\n    this.db.exportAsExcelFile(this.xLXSArray, 'DVR SHEET');\n  }\n}\n  \n","module.exports = \"<div class=\\\"edit-modal\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updateactivity()\\\"  #f=\\\"ngForm\\\" novalidate>\\n        <div *ngIf=\\\"loader\\\"> \\n            <div class=\\\"cs-loader\\\">\\n              <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n            </div>\\n          </div>\\n  <mat-dialog-content class=\\\"mat-typography pl15 pr15\\\" style=\\\"overflow-x: hidden !important;\\\">\\n      <p class=\\\"heading\\\">Update Remark</p>\\n      <div class=\\\"from-fields\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                <textarea matInput placeholder=\\\"Remark\\\" name=\\\"remarkSecondary\\\" #remarkSecondary=\\\"ngModel\\\" [(ngModel)]=\\\"update_data.remarkSecondary\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && remarkSecondary.invalid }\\\" class=\\\"h170\\\"></textarea>\\n              </mat-form-field>\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!remarkSecondary.valid && remarkSecondary.touched\\\">\\n                Please Enter Remark..\\n            </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </mat-dialog-content>\\n  <mat-dialog-actions align=\\\"end\\\">\\n      <button mat-raised-button color=\\\"accent\\\">Update</button>\\n      <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Close</button>\\n  </mat-dialog-actions>\\n</form>\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-remark-modal',\n  templateUrl: './remark-modal.component.html'\n})\nexport class RemarkModalComponent implements OnInit {\n  checkinId:any=[];\n  loader:any=false;\n  update_data:any={};\n  constructor(public toast:SnackBarOverview,public router:Router,public dialogRef: MatDialogRef<RemarkModalComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService)\n  {console.log(data);\n    this.checkinId=this.data;\n\n    console.log(this.checkinId);\n  }\n  ngOnInit() {\n  }\n  updateactivity(){\n    if(this.checkinId.type=='activityReamrk'){\n      this.update_data.activityId=this.checkinId.id;\n      console.log(this.update_data);\n    this.loader=true;\n      this.db.fetchData(this.update_data,'activityremark/update').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        if(response['status']==\"Success\")\n          {\n            console.log(this.update_data.activityId);\n            this.toast.openSucess('Updated successfully','');\n            this.router.navigate(['checkin-detail/'+this.update_data.activityId]);\n            this.dialogRef.close();\n          }\n          else\n          {\n            this.toast.openError('Something went wrong Please Try Again!!','');\n          }\n       \n      });\n    }\n  }\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n  \\n      <!-- <div *ngIf=\\\"loader\\\"> \\n          <div class=\\\"cs-loader\\\">\\n              <mat-spinner class=\\\"loader\\\"></mat-spinner> \\n          </div>\\n      </div> -->\\n      \\n      <div  mat-dialog-content>\\n          <p class=\\\"heading\\\">A+ Cities</p>\\n          <div class=\\\" from-fields mt15\\\">\\n            <mat-chip-list>\\n              <mat-chip>Mumbai</mat-chip>\\n              <mat-chip>Hyderabad</mat-chip>\\n              <mat-chip>Delhi</mat-chip>\\n              <mat-chip>Chennai</mat-chip>\\n              <mat-chip>Bangalore</mat-chip>\\n              <mat-chip>Kolkata</mat-chip>\\n              <mat-chip>Pune</mat-chip>\\n            </mat-chip-list>\\n          </div>\\n      </div>\\n      \\n      <div mat-dialog-actions>\\n          <button mat-raised-button  color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n          <!-- <button mat-raised-button color=\\\"accent\\\">Save</button> -->\\n      </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cities-modal',\n  templateUrl: './cities-modal.component.html'\n})\nexport class CitiesModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\n// import { Injectable } from '@angular/core';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConstantService {\n  // dburl:string = 'http://13.234.72.162/api/';\n  dburl:string = 'http://13.234.72.162:8084/api/';\n  \n  constructor(public http: HttpClient) { }\n  header: any = new HttpHeaders();\n  can_active:string = '';\n  loading:any;  \n  navigate_type:any='';\n  datauser:any={};\n  user:any = [];\n  token_data:string='';\n  tokenInfo:any;\n  \n  data:any=[];\n  \n  \n  \n  public exportAsExcelFile(json: any[], excelFileName: string): void {\n    \n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\n    console.log('worksheet',worksheet);\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    // const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n  }\n  \n  private saveAsExcelFile(buffer: any, fileName: string): void {\n    const data: Blob = new Blob([buffer], {\n      type: EXCEL_TYPE\n    });\n    FileSaver.saveAs(data, fileName + EXCEL_EXTENSION);\n  }\n  \n  login(request_data:any,fn:any)\n  {\n    console.log(request_data);\n    this.header.append('Content-Type', 'application/json');\n    console.log(request_data);\n    return this.http.post( this.dburl+fn,request_data,{headers:this.header});\n  }\n  \n  fetchData(request_data:any,fn:any){\n    this.count_list();\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    this.token_data = this.user.data.token;\n    console.log(this.token_data);\n    let header = new HttpHeaders();\n    console.log(request_data);\n    header=header.append('Authorization', 'Bearer ' + this.token_data);\n    \n    console.log( this.dburl);\n    header=header.append('Content-Type',\"application/json\");\n    return this.http.post( this.dburl+fn,JSON.stringify(request_data),{headers: header});\n  }\n  \n  fileData(request_data:any,fn:any){\n    this.count_list();\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    this.token_data = this.user.data.token;\n    console.log(this.token_data);\n    let header = new HttpHeaders();\n    header=header.append('Content-Type', 'application/json');\n    header=header.append('Authorization', 'Bearer ' + this.token_data);\n    console.log(request_data);\n    return this.http.get( this.dburl+fn+request_data, {headers:header});\n  }\n  \n  putData(request_data:any,fn:any){\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    this.token_data = this.user.data.token;\n    console.log(this.token_data);\n    let header = new HttpHeaders();\n    header=header.append('Content-Type', 'application/json');\n    header=header.append('Authorization', 'Bearer ' + this.token_data);\n    console.log(request_data);\n    return this.http.put( this.dburl+fn, JSON.stringify(request_data), {headers:header});\n  }\n  \n  setData(value)\n  {\n    this.data=value;\n  }\n  \n  getData()\n  {\n    return this.data;\n  }\n  \n  DownloadFileData(request_data:any,fn:any){\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    this.token_data = this.user.data.token;\n    console.log(this.token_data);\n    let header = new HttpHeaders();\n    console.log(request_data);\n    header=header.append('Authorization', 'Bearer ' + this.token_data);\n    header=header.append('Content-Type',\"application/json\");\n    return this.http.post( this.dburl+fn,JSON.stringify(request_data),{headers: header});\n  }\n  \n  excelFileData(request_data:any,fn:any) {\n    \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    this.token_data = this.user.data.token;\n    console.log(this.token_data);\n    let header = new HttpHeaders();\n    console.log(request_data);\n    header=header.append('Authorization', 'Bearer ' + this.token_data);\n    header=header.append('Content-Type', 'application/json');\n    return this.http.post( this.dburl + fn, JSON.stringify(request_data), {headers: header, responseType: 'blob'});\n  }\n  \n  downloadProductData(request_data:any,fn:any) {\n    \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    this.token_data = this.user.data.token;\n    console.log(this.token_data);\n    let header = new HttpHeaders();\n    console.log(request_data);\n    header=header.append('Authorization', 'Bearer ' + this.token_data);\n    header=header.append('Content-Type', 'application/json');\n    return this.http.get( this.dburl + fn, {headers: header, responseType: 'blob'});\n  }\n\n  counterArray:any={};\n  distributorCount:any=0;\n  leadCount:any=0\n  count_list(){\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    this.token_data = this.user.data.token;\n    console.log(this.token_data);\n    let header = new HttpHeaders();\n    header=header.append('Content-Type', 'application/json');\n    header=header.append('Authorization', 'Bearer ' + this.token_data);\n    this.http.get( this.dburl+\"dashboard/count\"+'', {headers:header}).subscribe( r =>{\n      console.log(r);\n      if(r['status']=='Success')\n      {\n        this.counterArray=r['data'];\n        console.log(this.distributorCount);\n        if(this.counterArray.networkCount.length!=0)\n        {\n          this.distributorCount=this.counterArray.networkCount[0].total;\n        }\n        if(this.counterArray.leadCount.length!=0)\n        {\n          this.leadCount=this.counterArray.leadCount[0].statusCount;\n        }\n      \n      }\n    });\n    \n    // return this.counterArray;\n  }\n\n  \n  \n  \n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n    <div *ngIf=\\\"loader\\\"> \\n        <div class=\\\"cs-loader\\\">\\n          <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n        </div>\\n     </div>\\n    <div class=\\\"middle-container\\\">\\n        <div class=\\\"page-heading\\\">\\n            <img src=\\\"assets/img/concern.svg\\\" class=\\\"h-icon\\\">\\n            <div class=\\\"heading-text\\\">\\n                <h2>Customer Concern</h2>\\n                <p>Add New Concern</p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"container-outer\\\">\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\"  #f=\\\"ngForm\\\" novalidate >\\n            <div class=\\\"container\\\" >\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col s12\\\">\\n                        <div class=\\\"sprate-box pt0\\\">\\n                            <div class=\\\"cs-heading\\\">\\n                                <h2>CONCERN TYPE</h2>\\n                                <span class=\\\"required\\\">Indicates Required Fields ( <sup>*</sup> )</span>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col s6 [pr0\\\" *ngIf=\\\"user.data.userType=='2'\\\">\\n                                    <div class=\\\"from-fields\\\">\\n                                        <div class=\\\"control-field\\\">\\n                                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                                <mat-select placeholder=\\\"Select Distributor\\\" name=\\\"distributor\\\" [(ngModel)]=\\\"concern_form.distributor\\\"  #distributor=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && distributor.invalid }\\\" required>\\n                                                    <mat-option *ngFor=\\\"let distributor of distributorList;let i=index\\\" (click)=\\\"get_network()\\\" [value]=\\\"distributor.networkId\\\">\\n                                                        {{distributor.establishment}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                            <mat-error *ngIf=\\\"f.submitted && distributor.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                                <mat-error *ngIf=\\\"distributor.errors.required\\\">distributor is required</mat-error>\\n                                            </mat-error>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col s6 pl0\\\">\\n                                    <div class=\\\"from-fields\\\">\\n                                        <div class=\\\"control-field\\\">\\n                                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                                <mat-select placeholder=\\\"Claim Type\\\" name=\\\"claim_type\\\" [(ngModel)]=\\\"concern_form.claim_type\\\"  #claim_type=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && claim_type.invalid }\\\" required>\\n                                                    <mat-option (click)=\\\"check()\\\" value=\\\"1\\\">\\n                                                        Product\\n                                                    </mat-option>\\n                                                    <mat-option value=\\\"2\\\">\\n                                                        Other\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                            <mat-error *ngIf=\\\"f.submitted && claim_type.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                                <mat-error *ngIf=\\\"claim_type.errors.required\\\">Role is required</mat-error>\\n                                            </mat-error>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div *ngIf=\\\"concern_form.claim_type=='1'\\\" class=\\\"from-fields col s6 [pr0\\\">\\n                                    <div class=\\\"control-field\\\">\\n                                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                            <mat-select placeholder=\\\"Product Type\\\" (onChange)=\\\"productCheck()\\\" name=\\\"product_type\\\" [(ngModel)]=\\\"concern_form.product_type\\\"  #product_type=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && product_type.invalid }\\\" required>\\n                                                <mat-option (click)=\\\"productCheck()\\\"  value=\\\"1\\\">\\n                                                    Pre-Fitment\\n                                                </mat-option>\\n                                                <mat-option  (click)=\\\"productCheck()\\\" value=\\\"2\\\">\\n                                                    Post-Fitment\\n                                                </mat-option>\\n                                            </mat-select>\\n                                        </mat-form-field>\\n                                        <mat-error *ngIf=\\\"f.submitted && product_type.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <mat-error *ngIf=\\\"product_type.errors.required\\\">Role is required</mat-error>\\n                                        </mat-error>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"sprate-box pt0 mt15\\\" *ngIf=\\\"concern_form.claim_type == '2'\\\">\\n                            <!-- Other Claim Section Start -->\\n                            <div >\\n                                <div class=\\\"cs-heading\\\">\\n                                    <h2>BASIC INFORMATION</h2>\\n                                </div>\\n                                <form  (ngSubmit)=\\\"f.form.valid &&  onSubmit(3)\\\" #f=\\\"ngForm\\\" novalidate>\\n                                    <div class=\\\"from-fields\\\">\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col s8 pl0\\\">\\n                                                <div class=\\\"control-field\\\">\\n                                                    <mat-form-field class=\\\"cs-input wp100 h-input infix-bodr8\\\">\\n                                                        <textarea class=\\\"h150\\\" matInput placeholder=\\\"Description\\\"  name=\\\"description\\\" [(ngModel)]=\\\"other_form.description\\\"  #description=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && description.invalid }\\\" required></textarea>\\n                                                    </mat-form-field>\\n                                                    <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                                        <mat-error *ngIf=\\\"description.errors.required\\\">Description is required</mat-error>\\n                                                    </mat-error>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col s4 pr0\\\">\\n                                                <div class=\\\"territory-info mt15\\\">\\n                                                    <div class=\\\"head\\\" >\\n                                                        <h2>Assign SalesRoles</h2>\\n                                                    </div>\\n                                                    <div class=\\\"cs-checkbox\\\">\\n                                                        <div class=\\\"checkbox-outer auto-height-scroll\\\">\\n                                                            <section class=\\\"checkbox-inner\\\" >\\n                                                                <ng-container  *ngFor=\\\"let role of rolelistsales1;let index=index\\\"   aria-required=\\\"true\\\">\\n                                                                    <mat-checkbox class=\\\"check-list\\\" (change)=\\\"select_role(role.roleId,index,role.isAssign)\\\" name=\\\"{{role.roleId}}\\\" [(ngModel)]=\\\"role.isAssign\\\"  value=\\\"{{role.roleId}}\\\" >{{role.roleName}}</mat-checkbox>\\n                                                                </ng-container>\\n                                                            </section>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                <mat-error *ngIf=\\\"f.submitted && !isAssignCheck\\\">Assign to required</mat-error>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col s12\\\">\\n                                            <div class=\\\"cs-btn text-right mt15\\\">\\n                                                <div class=\\\"in-btn\\\">\\n                                                    <button *ngIf=\\\"concern_form.claim_type==2\\\" mat-raised-button color=\\\"accent\\\" [disabled]=\\\"concern_form.isProceed==false || concern_form.info==false\\\">Submit</button>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </form>\\n                            </div>\\n                            <!-- Other Claim Section End -->\\n                        </div>\\n                        \\n                        \\n                        <!-- Product Type Claim Section Start -->\\n                        <div class=\\\"sprate-box mt15 pt0\\\"  style=\\\"overflow: inherit;\\\"  *ngIf=\\\"concern_form.product_type\\\">\\n                            <!-- T&C section Start -->\\n                            <form #d=\\\"ngForm\\\" (ngSubmit)=\\\"proceed()\\\">\\n                                <div *ngIf=\\\"(concern_form.product_type == '1'||concern_form.product_type == '2') && concern_form.claim_type == '1' && !concern_form.isProceed\\\">\\n                                    <div class=\\\"cs-heading\\\">\\n                                        <h2>T&C<span *ngIf=\\\"concern_form.product_type == '1'\\\"> Pre-Fitment </span> <span *ngIf=\\\"concern_form.product_type == '2'\\\"> Post-Fitment </span> </h2>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col s6 pr10\\\">\\n                                            <div class=\\\"sprate-box flat-sprate\\\">\\n                                                <div *ngIf=\\\"concern_form.product_type == '1'\\\">\\n                                                    <div class=\\\"term-heading\\\"> Pre-Fitment:</div>\\n                                                    <ul class=\\\"terms-condition\\\">\\n                                                        <li>Kenshin original parts.</li>\\n                                                        <li>Product packing should be intact.</li>\\n                                                        <li>Product should not have been used after being fit on the vehicle.</li>\\n                                                        <li>Parts</li>\\n                                                    </ul>\\n                                                </div>\\n                                                <div  *ngIf=\\\"concern_form.product_type == '2'\\\">\\n                                                    \\n                                                    <div class=\\\"term-heading\\\">Post-Fitment:</div>\\n                                                    <ul class=\\\"terms-condition\\\">\\n                                                        <li>Kenshin original part.</li>\\n                                                        <li>Product should be fitted.</li>\\n                                                        <li>Product should have been used after being fitted on the vehicle.</li>\\n                                                        <li>Product should use only for its intended function.</li>\\n                                                    </ul>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row mt20\\\">\\n                                        <div class=\\\"col s6\\\">\\n                                            <mat-checkbox class=\\\"read-done\\\" name=\\\"isCheck\\\" [(ngModel)]=\\\"concern_form.isCheck\\\" >I have read T&C</mat-checkbox>\\n                                        </div>\\n                                        \\n                                        <div class=\\\"col s6\\\">\\n                                            <div class=\\\"cs-btn fixedd text-right\\\">\\n                                                <div class=\\\"in-btn\\\">\\n                                                    <button mat-raised-button color=\\\"accent\\\"  [disabled]=\\\"!concern_form.isCheck\\\">Proceed</button>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    \\n                                </div>\\n                            </form>\\n                            <!-- T&C section End -->\\n                            \\n                            <!-- Product Claim Section Start-->\\n                            <form #p=\\\"ngForm\\\" (ngSubmit)=\\\"p.valid\\\">\\n                                <div *ngIf=\\\"concern_form.product_type && concern_form.claim_type == '1' && concern_form.isProceed==true;\\\">\\n                                    <div class=\\\"cs-heading\\\">\\n                                        <h2 *ngIf=\\\"concern_form.product_type==1\\\">Pre-Fitment Claim</h2>\\n                                        <h2 *ngIf=\\\"concern_form.product_type==2\\\">Post-Fitment Claim</h2>\\n                                    </div>\\n                                    <div class=\\\"row mt15\\\">\\n                                        <div  class=\\\"col s4 pl0\\\">\\n                                            <div class=\\\"multi-all-select\\\">\\n                                                <label>Segment</label>\\n                                                <ng-multiselect-dropdown\\n                                                [placeholder]=\\\"'Select Segment'\\\"\\n                                                [data]=\\\"segmentList\\\"\\n                                                [(ngModel)]=\\\"data.segment\\\"\\n                                                name=\\\"segment\\\"\\n                                                #segment=\\\"ngModel\\\"\\n                                                [settings]=\\\"dropdownSettings1\\\"\\n                                                (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                                                >\\n                                                \\n                                            </ng-multiselect-dropdown>\\n                                        </div>\\n                                    </div>                           \\n                                    <div class=\\\"col s4\\\">\\n                                        <div class=\\\"multi-all-select\\\">\\n                                            <label>Category</label>\\n                                            <ng-multiselect-dropdown\\n                                            [placeholder]=\\\"'Select Category'\\\"\\n                                            [data]=\\\"categorylist\\\"\\n                                            [(ngModel)]=\\\"data.category\\\"\\n                                            name=\\\"category\\\"\\n                                            #category=\\\"ngModel\\\"\\n                                            [settings]=\\\"dropdownSettings2\\\"\\n                                            (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                                            >\\n                                        </ng-multiselect-dropdown>\\n                                    </div>\\n                                </div>                                \\n                                <div   class=\\\"col s4 pr0\\\">\\n                                    <div class=\\\"multi-all-select\\\">\\n                                        <label>Product Name</label>\\n                                        <ng-multiselect-dropdown\\n                                        [placeholder]=\\\"'Select Product'\\\"\\n                                        (onDeSelect)=\\\"onItemDeSelect($event,data.segment,data.category,data.product)\\\"\\n                                        [data]=\\\"product_list\\\"\\n                                        [(ngModel)]=\\\"data.product\\\"\\n                                        name=\\\"product\\\"\\n                                        #product=\\\"ngModel\\\"\\n                                        [settings]=\\\"dropdownSettings3\\\"\\n                                        (onSelect)=\\\"getCartProductList($event,data.segment,data.category,data.product)\\\">\\n                                    </ng-multiselect-dropdown>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"productlist && productlist.length > 0\\\" class=\\\"col s12 padding0\\\">\\n                            <div class=\\\"heading-bg left-right-15 mt15\\\">\\n                                <h2>PRODUCT INFORMATION</h2>\\n                            </div>\\n                            <div class=\\\"cs-table left-right-15\\\">\\n                                <div class=\\\"table-head\\\"   [ngClass]=\\\"{ 'pr28' : productlist.length>6 }\\\">\\n                                    <table>\\n                                        <tr>\\n                                            <th class=\\\"w40\\\">&nbsp;</th>\\n                                            <th>Part Number</th>\\n                                            <th class=\\\"w130\\\">Product Name</th>\\n                                            <th class=\\\"w130\\\">Application No</th>\\n                                            <th class=\\\"w100\\\">Image</th>\\n                                            <th class=\\\"w60 text-center\\\">Qty <span>*</span></th>\\n                                            <th class=\\\"w110\\\">MFG Date. <span *ngIf='concern_form.product_type==1'>*</span></th>\\n                                            <th class=\\\"w120\\\">Invoice No.<span *ngIf='concern_form.product_type==1'>*</span></th>\\n                                            <th class=\\\"w70 text-right\\\">Rate</th>\\n                                            <th class=\\\"w80 text-right\\\">Amount</th>\\n                                            <th class=\\\"w80 text-center\\\">Action</th>\\n                                            \\n                                            \\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                \\n                                \\n                                <div class=\\\"table-head bdrt\\\" [ngClass]=\\\"{ 'pr28' : productlist.length>6 }\\\" >\\n                                    <table>\\n                                        <tr>\\n                                            <th class=\\\"w40\\\">&nbsp;</th>\\n                                            <th>\\n                                                <div class=\\\"th-search-acmt\\\">\\n                                                    <mat-form-field>\\n                                                        <input type=\\\"text\\\"  name=\\\"search\\\" [(ngModel)]=\\\"productName.search\\\" (input)=\\\"productSearchByNumber()\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\n                                                        <mat-autocomplete #auto1=\\\"matAutocomplete\\\" >\\n                                                        </mat-autocomplete>\\n                                                    </mat-form-field> \\n                                                </div>\\n                                            </th>\\n                                            <th class=\\\"w130\\\">&nbsp; </th>\\n                                            <th class=\\\"w130\\\">&nbsp; </th>\\n                                            <th class=\\\"w100\\\">&nbsp;</th>\\n                                            <th class=\\\"w60\\\">&nbsp;</th>\\n                                            <th class=\\\"w110\\\">&nbsp;</th>\\n                                            <th class=\\\"w120\\\">&nbsp;</th>\\n                                            <th class=\\\"w70\\\">&nbsp;</th>\\n                                            <th class=\\\"w80\\\">&nbsp;</th>\\n                                            <th class=\\\"w80\\\">&nbsp;</th>\\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                \\n                                <div class=\\\"table-container height-scroll\\\">\\n                                    <div class=\\\"table-content none-shadow\\\">\\n                                        <table>\\n                                            <tr *ngFor=\\\"let product of productlist;let index=index\\\">\\n                                                <td class=\\\"w40\\\"><span *ngIf='product.qty'><mat-checkbox name=\\\"{{check+index}}\\\" [(ngModel)]=\\\"product.datacheck\\\"  (change)=\\\"select(product,index)\\\" >&nbsp; </mat-checkbox></span></td>\\n                                                <td>{{product.partNumber}}</td>\\n                                                <td class=\\\"w130\\\">{{product.productName}}</td>\\n                                                <td class=\\\"w130\\\">EF5678</td>\\n                                                <td class=\\\"w100\\\">\\n                                                    <a class=\\\"link-btn\\\" *ngIf=\\\"!product.isImage\\\">\\n                                                        <label class=\\\"cs-file\\\">\\n                                                            Add Image\\n                                                            <input type=\\\"file\\\" (change)=\\\"insertImage($event,product.productName,index)\\\" style=\\\"display: none;\\\">\\n                                                        </label>\\n                                                    </a>\\n                                                    <a *ngIf=\\\"product.isImage\\\" class=\\\"link-btn\\\" (click)=\\\"openImageDialog(index)\\\"> View Image </a>\\n                                                </td>\\n                                                <td class=\\\"w60 text-center\\\" >\\n                                                    <div class=\\\"td-input\\\">\\n                                                        <input type=\\\"number\\\" (input)=\\\"calculateAmount(product.qty,index)\\\"  (keyup.enter)=\\\"addCart(product,index)\\\" name=\\\"qty\\\" #qty=\\\"ngModel\\\" [(ngModel)]=\\\"product.qty\\\" [value]=\\\"product.qty\\\" required min=\\\"1\\\" >\\n                                                    </div>\\n                                                    <p *ngIf='isCart==true && product.datacheck==true && product.qty==\\\"\\\"'>required</p>\\n                                                </td>\\n                                                <!--Pre-Fitment Field-->\\n                                                <td class=\\\"w110\\\" *ngIf='concern_form.product_type==1'>\\n                                                    <div class=\\\"td-input\\\" style=\\\"display: flex; align-items: center;\\\">\\n                                                        <input matInput [matDatepicker]=\\\"picker\\\"   placeholder=\\\"Date\\\" name=\\\"{{date+index}}\\\" [(ngModel)]=\\\"product.date\\\"  #date=\\\"ngModel\\\"   [max]=\\\"maxDateValue\\\" required>\\n                                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                        <mat-datepicker #picker></mat-datepicker>\\n                                                    </div>\\n                                                    <p *ngIf='isCart&&!product.date&&product.datacheck'>required</p>\\n                                                </td>\\n                                                <td class=\\\"w120\\\" *ngIf='concern_form.product_type==1'> \\n                                                    <div class=\\\"td-input\\\">\\n                                                        <input type=\\\"text\\\"    (keyup.enter)=\\\"addCart(product,index)\\\" name=\\\"{{invoice+index}}\\\" #invoice=\\\"ngModel\\\" [(ngModel)]=\\\"product.invoice\\\" required>\\n                                                    </div>\\n                                                    <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p>\\n                                                </td>\\n                                                \\n                                                <td class=\\\"w140\\\" *ngIf='concern_form.product_type==2'>\\n                                                    <div class=\\\"td-input\\\" style=\\\"display: flex; align-items: center;\\\">\\n                                                        <input matInput [matDatepicker]=\\\"picker\\\"   placeholder=\\\"Choose a date\\\" name=\\\"{{date+index}}\\\" [(ngModel)]=\\\"product.date\\\"  #date=\\\"ngModel\\\"   [max]=\\\"maxDateValue\\\" required>\\n                                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                        <mat-datepicker #picker></mat-datepicker>\\n                                                    </div>\\n                                                </td>\\n                                                <td class=\\\"w120\\\" *ngIf='concern_form.product_type==2'> \\n                                                    <div class=\\\"td-input\\\">\\n                                                        <input type=\\\"text\\\"    (keyup.enter)=\\\"addCart(product,index)\\\" name=\\\"{{invoice+index}}\\\" #invoice=\\\"ngModel\\\" [(ngModel)]=\\\"product.invoice\\\" required>\\n                                                    </div>\\n                                                    \\n                                                </td>\\n                                                \\n                                                <!--Post-Fitment Field-->\\n                                                <td class=\\\"w70 text-right\\\">&#8377; {{product.priceUnit}}</td>\\n                                                <td class=\\\"w80 text-right\\\">&#8377; {{product.amount}}</td>\\n                                                <td class=\\\"w80\\\">\\n                                                    <div class=\\\"action-btns default-action\\\">\\n                                                        <a *ngIf=\\\"product.qty!=''\\\" mat-button matTooltip=\\\"Save\\\" class=\\\"edit\\\" (click)=\\\"addCart(product,index)\\\"><i class=\\\"material-icons\\\">save</i></a>\\n                                                    </div>\\n                                                </td>\\n                                                \\n                                                \\n                                                \\n                                            </tr>\\n                                        </table>\\n                                    </div>\\n                                    <div class=\\\"data-not-available\\\" *ngIf=\\\"productlist.length==0\\\">\\n                                        <div class=\\\"outer\\\">\\n                                            <div class=\\\"iinear\\\">\\n                                                <div class=\\\"figure\\\" matRipple>\\n                                                    <div class=\\\"header\\\">\\n                                                        <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                                    </div>\\n                                                    \\n                                                    <div class=\\\"description\\\">\\n                                                        <div class=\\\"cs-heading\\\">\\n                                                            <h2>No Item</h2>\\n                                                        </div>\\n                                                        <div class=\\\"img\\\">\\n                                                            <i class=\\\"material-icons\\\">error_outline</i>\\n                                                        </div>\\n                                                        <div class=\\\"psc\\\">\\n                                                            <p>data not available</p>\\n                                                            \\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\\"add\\\" class=\\\"cs-btn mt20 text-right\\\">\\n                                <div class=\\\"in-btn\\\">\\n                                    <button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"addProduct('checkk')\\\" >Add to Cart</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"tmp_array && tmp_array.length > 0\\\" class=\\\"col s12 padding0\\\">\\n                            <div class=\\\"heading-bg left-right-15 mt15\\\">\\n                                <h2>Product In Cart</h2>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"cs-table left-right-15\\\">\\n                                    <div class=\\\"table-head\\\">\\n                                        <table>\\n                                            <tr>\\n                                                <th>Category</th>\\n                                                <th class=\\\"w150 text-center\\\">Total Item</th>\\n                                                <th class=\\\"w150 text-center\\\">Total Quantity</th>\\n                                                <th class=\\\"w150 text-right\\\">Amount</th>\\n                                                <!-- <th class=\\\"w80\\\">Action</th> -->\\n                                            </tr>\\n                                        </table>\\n                                    </div>\\n                                    <div class=\\\"table-container\\\">\\n                                        <div class=\\\"table-content none-shadow\\\">\\n                                            <table>\\n                                                <tr *ngFor=\\\"let concern of tmp_array;let i=index\\\">\\n                                                    <td><a mat-button class=\\\"link-btn\\\" (click)=\\\"productDetail(concern.category)\\\" >{{concern.category}}</a></td>\\n                                                    <td class=\\\"w150 text-center\\\">{{concern.totalItem}}</td>\\n                                                    <td class=\\\"w150 text-center\\\">{{concern.qty}}</td>\\n                                                    <td class=\\\"w150 text-right\\\"> &#x20B9; {{concern.amount}}</td>\\n                                                </tr>\\n                                            </table>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n                <!-- ProductClaim Section End -->\\n                \\n            </div>\\n            <div class=\\\"col s12\\\">\\n                <div class=\\\"cs-btn mt32 text-right\\\">\\n                    <div class=\\\"in-btn\\\">\\n                        <button   *ngIf=\\\"tmp_array.length!=0\\\" mat-raised-button color=\\\"accent\\\"  type=\\\"button\\\" (click)=\\\"onSubmit(1)\\\" >Save as draft</button>\\n                        <button  *ngIf=\\\"tmp_array.length!=0 &&user.data.userType==3\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"onSubmit(2)\\\">Submit</button>\\n                        <button  *ngIf=\\\"tmp_array.length!=0 &&user.data.userType==2\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"onSubmit(3)\\\">Forward To Distributor</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</form>\\n</div>\\n</div>\"","import { Component, OnInit, Renderer2  } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { UpdateConcernComponent } from '../update-concern/update-concern.component';\nimport { UpdateStatusComponent } from '../update-status/update-status.component';\nimport {MatDialog} from '@angular/material';\nimport { ImageModalComponent } from '../image-modal/image-modal.component';\n\n// import { userInfo } from 'os';\n\n\n\n@Component({\n  selector: 'app-add-concern',\n  templateUrl: './add-concern.component.html',\n})\nexport class AddConcernComponent implements OnInit {\n  user:any={}\n  concern_form:any={};\n  userId:any;\n  msg:any;\n  selectedFile:any=[];\n  concernReviews:any=[];\n  other_form:any={};\n  prefitmentlist:any=[];\n  pre_fitment:any={};\n  post_fitment:any={};\n  action=\"1\";\n  tmp_list:any=[];\n  concernData:any=[];\n  tmp_list1:any=[];\n  name:any;\n  segmentList:any=[];\n  finel_Array:any=[];\n  categorylist:any=[];\n  message:any;\n  tmp_segmentList:any=[];\n  product_list:any=[];\n  partnumberlist:any=[];\n  partnumberlist1:any=[];\n  removeproductname:boolean;\n  rolelists:any=[];\n  tmp_array:any=[];\n  role:any=[];\n  isSave:boolean;\n  maxDateValue:any;\n  productlist:any=[];\n  isAssignCheck:boolean=true;\n  loader:boolean;\n  producttmpList:any=[];\n  cartProductList:any=[];\n  concernDetail:any=[]\n  data:any={};\n  distributorasmList:any=[];\n  distributorList:any=[];\n  rolelistsales1:any=[];\n  tmp_categoryList:any=[];\n  dropdownSettings1:any = {};\n dropdownSettings2:any = {};\n dropdownSettings3:any = {};\n  constructor(public db:ConstantService,\n    public router:Router, \n    public route:ActivatedRoute,\n    public toast:SnackBarOverview,\n    public dialog: MatDialog,\n    public alrt:DialogComponent\n     ) {\n     this.user = JSON.parse(localStorage.getItem('user')) || [];\n     console.log(this.user);\n     if(this.user.data.userType==2){\n     this.distributorList=this.user['data']['salesUser']['userNetworks'];\n     console.log(this.distributorList);\n     }\n\n     else{\n      this.userId = this.user['data']['distributerNetwork']['networkId'];\n      console.log(this.user['data']['distributerNetwork']['networkId']);\n     }\n     \n    }\n  ngOnInit() {\n  \n    this.dropdownSettings1 = {\n      singleSelection: true,\n      closeDropDownOnSelection:true,\n      idField: 'segmentCode',\n      textField: 'segment',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings2 = {\n      closeDropDownOnSelection:true,\n      singleSelection: true,\n      idField: 'value',\n      textField: 'text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings3 = {\n      singleSelection: false,\n      idField: 'productName',\n      textField: 'productName',\n      enableCheckAll:false,\n      // selectAllText: 'Select All',\n      // unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };  \n  this.maxDateValue=new Date();\n  this.isSave=true;\n    this.segment_list();\n    this.category_list();\n   \n    this.concern_form.info=false;\n  }\n  salesNetworkTerritories:any=[];\n  get_network(){\n    console.log(this.concern_form.distributor);\n    this.userId=this.concern_form.distributor;\n    console.log( this.userId);\n    if(this.user.data.userType=='2'){\n    this.db.fetchData({'networkId': this.concern_form.distributor},\"network/list\").subscribe((response)=>{\n    console.log(response['data'][0]['networkTerritories']);\n    this.salesNetworkTerritories=response['data'][0]['networkTerritories']\n    console.log(this.salesNetworkTerritories);\n    this.check();\n    })\n  }\n  }\n  productCheck(){\n    this.concern_form.isProceed=false;\n    this.concern_form.isCheck=false;\n    this.concern_form.info=false;\n    this.productlist=[];\n    this.tmp_array=[];\n    this.concernDetail=[];\n    this.data.product=[];\n    this.data.segment=[];\n    this.data.category=[];\n    console.log(this.concern_form);\n  }\n  proceed(){\n  \n    this.concern_form.isProceed=true\n    console.log(this.concern_form);\n    \n  }\n  roles:any=[];\n  territoryIds:any=[];\n  check(){\n    console.log(\"success\");\n    console.log(this.concern_form);\n    if(this.concern_form.claim_type=='2'){\n      this.loader=true;\n      this.concern_form.info=true;\n      console.log(this.user);\n      if(this.user.data.userType==2){\n        for(let i=0;i<this.salesNetworkTerritories.length;i++){\n          this.territoryIds.push(this.salesNetworkTerritories[i].territoryId)\n          }\n      }\n      else{\n        for(let i=0;i<this.user.data.distributerNetwork.networkTerritories.length;i++){\n          this.territoryIds.push(this.user.data.distributerNetwork.networkTerritories[i].territoryId)\n          }\n      }\n     \n      var s=this.territoryIds.join(\"&territoryIds=\")\n      var data=\"?territoryIds=\"+s;\n      console.log(this.territoryIds);\n      console.log(data);\n      this.db.fetchData({},'territory/salesusers'+data).subscribe((response)=>\n      {console.log(response);\n        this.roles=response['data']\n        this.loader=false;\n        let index= this.roles.findIndex(x => x.role==6);\n        if(index!=-1){\n          this.rolelistsales1.push({\"roleId\":6,\"roleName\":\"National Manager\"})\n        }\n        let index1= this.roles.findIndex(x => x.role==7);\n        if(index1!=-1){\n          this.rolelistsales1.push({\"roleId\":7,\"roleName\":\"Regional Manager\"})\n        }\n        let index2= this.roles.findIndex(x => x.role==8);\n        if(index2!=-1){\n          this.rolelistsales1.push({\"roleId\":8,\"roleName\":\"Area Manager\"})\n        }\n        let index3= this.roles.findIndex(x => x.role==10);\n        if(index3!=-1){\n          this.rolelistsales1.push({\"roleId\":10,\"roleName\":\"Territory Incharge\"})\n        }\n      console.log(this.rolelistsales1);\n      for(let i=0;i<this.rolelistsales1.length;i++){\n        if(this.rolelistsales1[i].roleId==this.user.data.role){\n          this.rolelistsales1[i].isAssign=true;\n          this.select_role(this.rolelistsales1[i].roleId,i, this.rolelistsales1[i].isAssign);\n        }\n        else{\n          this.rolelistsales1[i].isAssign=false;\n        }\n      }\n      })\n   \n       \n    }\n    else\n    this.concern_form.info=false;\n  }\n  segment_list(){\n\n    console.log('hello');\n    if(this.user.data.userType==3){\n      this.segmentList=this.user['data']['distributerNetwork']['networkSegments'];\n      this.tmp_segmentList=this.segmentList;\n      console.log(this.segmentList);\n    }\n    else{\n      this.segmentList=this.user['data']['salesUser']['staffSegments'];\n      this.tmp_segmentList=this.segmentList;\n      console.log(this.segmentList);\n    }\n    \n   }  \n   category_list(){\n     this.loader=true;\n    this.db.fileData('','category/list/').subscribe((response)=>{\n      this.categorylist=response['data'];\n      this.tmp_categoryList=this.categorylist;\n      console.log(response);\n      this.loader=false;\n    });\n  } \n  catsearch:any=[];\n  tmp_cat:any=[];\n  categorySearch()\n  {\n    this.categorylist=[];\n    for(var i=0;i<this.tmp_categoryList.length; i++)\n      {\n        this.catsearch.search=this.catsearch.search.toLowerCase();\n        this.tmp_cat=this.tmp_categoryList[i]['text'].toLowerCase();\n        if(this.tmp_cat.includes(this.catsearch.search))\n        {\n          this.categorylist.push(this.tmp_categoryList[i]);\n        }     \n      }    \n  }\n\n\n tmpproduct_list:any=[];\n productList(segment,category)\n  {\n     this.data.product=[];\n    this.product_list=[];\n    console.log(segment,category);\n    let selectedSegment=\"\";\n    let selectedCategory=\"\";\n    if(segment!=null || category!=null){\n      if(segment!=null && category!=null){\n        selectedCategory=category[0];\n        selectedSegment=segment[0];\n        }\n        else if(segment!=null){\n        selectedSegment=segment[0];\n        }\n        else if(category!=null){\n           selectedCategory=category[0];\n\n        }\n    }\n    this.productlist=[];\n    this.loader=true;\n    console.log(this.data);\n    \n\n      this.db.fetchData({\"segmentCode\":selectedSegment,\"categoryCode\": selectedCategory,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n      console.log(result);\n      setTimeout (() => {\n        this.loader=false;\n    }, 700);\n      if(result)\n      {\n        this.producttmpList=result['data'];\n        this.product_list=[];\n        console.log(this.producttmpList);\n        for(let i=0;i<this.producttmpList.length;i++){\n         let index=this.product_list.findIndex(x=>x.productName==this.producttmpList[i].productName);\n         console.log(index);\n           if(index==-1){\n           this.product_list.push(this.producttmpList[i]);\n         }\n      }\n      console.log(this.product_list);\n      \n      this.tmpproduct_list=this.product_list;\n      }\n      })\n        \n  }\n  subsegsearch:any=[];\n  tmp_subseg:any=[];\n  subSegmentSearch()\n  {\n    this.product_list=[];\n    for(var i=0;i<this.tmpproduct_list.length; i++)\n      {\n        this.subsegsearch.search=this.subsegsearch.search.toLowerCase();\n        this.tmp_subseg=this.tmpproduct_list[i]['productName'].toLowerCase();\n        if(this.tmp_subseg.includes(this.subsegsearch.search))\n        {\n          this.product_list.push(this.tmpproduct_list[i]);\n        }     \n      }    \n  }\n  onItemDeSelect(event,segment,category,productName){\n    console.log(event,segment,category,productName);\n    console.log(event,productName);\n    for(let i=0;i<this.tmpProductList.length;i++){\n      if(this.tmpProductList[i].productName==event){\n        this.tmpProductList.splice(i,1);\n      }\n    }\nconsole.log(this.tmpProductList);\n\n  }\n  tmpProductList:any=[];\n    getCartProductList(event,segment,category,productname)\n    {\n      console.log(event,segment,category,productname);\n    \n      let selectedCategory=\"\";\n      let selectedSegment=\"\";\n      let selectedproduct=\"\";\n      if(segment!=null || category!=null || productname!=null){\n        if(segment!=null && category!=null && productname!=null){\n          console.log(\"hii\");\n          \n          selectedCategory=category[0];\n           selectedSegment=segment[0];\n           selectedproduct=productname[productname.length-1]\n        }\n        else if(segment!=null && productname){\n        selectedSegment=segment[0];\n        selectedproduct=productname[productname.length-1]\n        }\n        else if(productname!=null && productname){\n        selectedCategory=category[0];\n        selectedproduct=productname[productname.length-1]\n        }\n      }\n        this.loader=true;\n      console.log( selectedCategory,\n        selectedSegment,\n        selectedproduct);\n      this.db.fetchData({\"segmentCode\":selectedSegment,\"categoryCode\":selectedCategory,\"productName\":selectedproduct,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.cartProductList=result['data'];\n          for(let i=0;i<this.cartProductList.length;i++)\n          {\n            this.cartProductList[i].qty='';\n            this.cartProductList[i].amount=0;\n            this.cartProductList[i].isImage=false;\n            this.cartProductList[i].document='';\n           \n          }\n          this.productlist=this.productlist.concat(this.cartProductList);\n          this.tmpProductList=this.productlist;\n          for(let i=0;i<this.tmpProductList.length;i++){\n          this.tmpProductList[i].priceUnit=this.tmpProductList[i]['mrp'];this.tmpProductList[i].priceUnit=this.tmpProductList[i]['mrp']\n          this.tmpProductList[i].isImage=false;\n        }\n          console.log(this.tmpProductList);\n          \n        }\n      })\n      \n    }\n    add:boolean=false;\n    calculateAmount(qty,i)\n    {\n      this.add=false;\n      this.isedit=false;\n      console.log(qty,i);\n      \n      if(qty>0){\n        this.productlist[i].datacheck=true;\n        this.productlist[i].qty=qty;\n        this.productlist[i].amount=parseInt(this.productlist[i]['priceUnit'])*parseInt(qty);\n        this.add=true;\n      }\n      else{\n        this.alrt.error(\"Qty should be greater than 0\");\n        this.productlist[i].datacheck=false;\n        this.productlist[i].qty.value='';\n        this.productlist[i].amount=0;\n        console.log(this.productlist[i].qty);\n        \n      }\n      console.log(this.productlist);\n      \n      \n    }\n    select(product,index){\n      console.log(product.datacheck); \n      if(product.datacheck==false){\n        product.invoice='';\n        product.date='';\n        product.qty='';\n      }\n      let checkdata=this.productlist.findIndex(x=>x.datacheck==true)\n      if(checkdata==-1){\n       this.add=false;\n      }\n\n    }\n    cartArray:any=[];\n   \n   \n  addCart(product,index)\n  {\n \n   this.isCart=true;\n  this.isSave=false;\n  console.log(product,index);\n if(this.concern_form.product_type==1){\n\n \n  if(product.qty && product.invoice && product.date) {\n    if(this.tmp_array.length==0){\n      this.tmp_array.push({document:product['document'],productName: product['productName'],category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date'],natureOfComplaint:product['natureOfComplaint'],concernProductStatus:product['concernProductStatus']});\n      this.concernDetail.push({document:product['document'],productName: product['productName'],category: product['category'],productId:product['productId'],priceUnit:product['priceUnit'],qty:product['qty'],amount:product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount'],natureOfComplaint:product['natureOfComplaint'],concernProductStatus:product['concernProductStatus']});\n       }\n       else{\n        const idIndex=this.concernDetail.findIndex(row => row.productId==product.productId)\n        console.log(idIndex);\n        \n     \n          if(idIndex != -1)\n          {\n            console.log('check');\n           const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n           console.log(itemIndex);\n           if(itemIndex != -1)\n           {\n                \n          this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)-parseInt(this.concernDetail[idIndex].tmpqty);\n          this.tmp_array[itemIndex].amount=parseInt(this.tmp_array[itemIndex].amount)-parseInt(this.concernDetail[idIndex].tmpamount);\n          this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)+parseInt(product.qty);\n          this.tmp_array[itemIndex].amount=parseInt(product.amount)+parseInt(this.tmp_array[itemIndex].amount);\n           }\n           this.concernDetail[idIndex]['qty']=parseInt(product.qty);\n           this.concernDetail[idIndex]['tmpqty']=parseInt(product.qty);\n           this.concernDetail[idIndex]['amount']=parseInt(product.amount);\n           this.concernDetail[idIndex]['tmpamount']=parseInt(product.amount);\n          }\n          if(idIndex === -1)\n          {\n            this.concernDetail.push({document:product['document'],productName: product['productName'],category: product['category'],\"productId\":product.productId,\"qty\":product.qty,\"priceUnit\":product.priceUnit,\"amount\":product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpamount:product['amount'],tmpqty:product['qty'],natureOfComplaint:product['natureOfComplaint'],concernProductStatus:product['concernProductStatus']});\n            const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n           if(itemIndex === -1) {\n            this.tmp_array.push({document:product['document'],productName: product['productName'],category: product['category'],qty:product['qty'],amount:product['amount'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount'],natureOfComplaint:product['natureOfComplaint'],concernProductStatus:product['concernProductStatus']});\n           }\n           else {\n             console.log('checkccc');\n             \n            this.tmp_array[itemIndex].qty=parseInt(product['qty'])+parseInt(this.tmp_array[itemIndex].qty);\n            this.tmp_array[itemIndex].amount=parseInt(product['amount'])+parseInt(this.tmp_array[itemIndex].amount);\n          }\n          }\n}\nconsole.log(this.concernDetail);\nif(this.tmp_array){\n  this.concern_form.info=true;\n  console.log(this.concern_form);\n  \n     }\n     console.log(this.tmpCartArray);\n     if(!this.isedit){\n     this.productlist[index].datacheck=false;\n     if(this.productlist[index].datacheck==false)\n      {\n        this.productlist[index].qty='';\n        this.productlist[index].invoice='';\n        this.productlist[index].date='';\n        this.productlist[index].amount=0;\n        this.toast.openSucess('Concern added successfully To Cart','');\n     \n       \n    }\n    else\n    {\n       this.toast.openError('Something Went Wrong Please Try Again!!','');\n    }\n  }\n     \n  for(let i=0;i<this.tmp_array.length;i++){\n    this.tmp_array[i].totalItem=0;\n    for(let j=0;j<this.concernDetail.length;j++){\n    if(this.tmp_array[i].category==this.concernDetail[j].category){\n      this.tmp_array[i].totalItem=  this.tmp_array[i].totalItem+1;\n    }\n    }\n  }\n  console.log( this.tmp_array);\n  \n   }\n   else{\n     this.alrt.error(\"Fields are Empty Please Fill Them First\");\n     console.log(product);\n   }\n   let checkdata=this.productlist.findIndex(x=>x.datacheck==true)\n   if(checkdata==-1){\n    this.add=false;\n   }\n  }\n  else {\n  \n    if(product.qty){\n      if(this.tmp_array.length==0){\n        this.tmp_array.push({document:product['document'],productName: product['productName'],category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date'],natureOfComplaint:product['natureOfComplaint'],concernProductStatus:product['concernProductStatus']});\n        this.concernDetail.push({document:product['document'],productName: product['productName'],category: product['category'],productId:product['productId'],priceUnit:product['priceUnit'],qty:product['qty'],amount:product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount'],natureOfComplaint:product['natureOfComplaint'],concernProductStatus:product['concernProductStatus']});\n         }\n         else{\n          const idIndex=this.concernDetail.findIndex(row => row.productId==product.productId)\n          console.log(idIndex);\n          \n       \n            if(idIndex != -1)\n            {\n              console.log('check');\n              \n             console.log(this.finel_Array[idIndex]);\n             const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n             console.log(itemIndex);\n             if(itemIndex != -1)\n             {\n                  \n            this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)-parseInt(this.concernDetail[idIndex].tmpqty);\n            this.tmp_array[itemIndex].amount=parseInt(this.tmp_array[itemIndex].amount)-parseInt(this.concernDetail[idIndex].tmpamount);\n            console.log(this.concernDetail[idIndex]);\n            \n            this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)+parseInt(product.qty);\n           \n            this.tmp_array[itemIndex].amount=parseInt(product.amount)+parseInt(this.tmp_array[itemIndex].amount);\n          \n            console.log(this.tmp_array[itemIndex]);\n             }\n             this.concernDetail[idIndex]['qty']=parseInt(product.qty);\n             this.concernDetail[idIndex]['amount']=parseInt(product.amount);\n            }\n            if(idIndex === -1)\n            {\n              this.concernDetail.push({document:product['document'],productName: product['productName'],category: product['category'],\"productId\":product.productId,\"qty\":product.qty,\"priceUnit\":product.priceUnit,\"amount\":product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpamount:product['amount'],tmpqty:product['qty'],natureOfComplaint:product['natureOfComplaint'],concernProductStatus:product['concernProductStatus']});\n              const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n             if(itemIndex === -1) {\n              this.tmp_array.push({document:product['document'],productName: product['productName'],category: product['category'],qty:product['qty'],amount:product['amount'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount'],natureOfComplaint:product['natureOfComplaint'],concernProductStatus:product['concernProductStatus']});\n             }\n             else {\n               console.log('checkccc');\n               \n              this.tmp_array[itemIndex].qty=parseInt(product['qty'])+parseInt(this.tmp_array[itemIndex].qty);\n              this.tmp_array[itemIndex].amount=parseInt(product['amount'])+parseInt(this.tmp_array[itemIndex].amount);\n            }\n            }\n  }\n  console.log(this.concernDetail);\n  if(this.tmp_array){\n    this.concern_form.info=true;\n    console.log(this.concern_form);\n    \n       }\n       this.productlist[index].datacheck=false;\n       if(this.productlist[index].datacheck==false)\n        {\n          this.productlist[index].qty='';\n          this.productlist[index].invoice='';\n          this.productlist[index].date='';\n          this.toast.openSucess('Concern added successfully To Cart','');\n       \n         \n      }\n      else\n      {\n         this.toast.openError('Something Went Wrong Please Try Again!!','');\n      }\n       for(let i=0;i<this.tmp_array.length;i++){\n    this.tmp_array[i].totalItem=0;\n    for(let j=0;j<this.concernDetail.length;j++){\n    if(this.tmp_array[i].category==this.concernDetail[j].category){\n      this.tmp_array[i].totalItem=  this.tmp_array[i].totalItem+1;\n    }\n    }\n  }\n  console.log( this.tmp_array);\n       \n     }\n     else{\n       this.alrt.error(\"Fields are Empty Please Fill Them First\");\n       \n       \n     }\n     let checkdata=this.productlist.findIndex(x=>x.datacheck==true)\n     if(checkdata==-1){\n      this.add=false;\n     }\n  }\n}\nisCart:boolean=false;\npartnoArray:any=[];\nstr2:any;\naddProduct(kk)\n{\n  this.partnoArray=[];\n  console.log(kk);\n  this.isedit=false;\n  this.isCart=true;\n  console.log(this.isCart);\n  \n  if(this.concern_form.product_type==1){\n for(let i=0;i<this.productlist.length;i++){\n\n   if(this.productlist[i].datacheck==true){\n     console.log('hii');\n     \n    this.cartArray.push(this.productlist[i]);\n    if(this.productlist[i].qty&&this.productlist[i].invoice&&this.productlist[i].date){\n      this.addCart(this.productlist[i],i);\n    }\n    else{\n      console.log('test');\n      this.partnoArray.push(this.productlist[i].partNumber)\n      console.log(this.productlist[i]);\n      console.log(this.cartArray[i]);\n    }\n }\n }  \n console.log(this.partnoArray);\n console.log(this.productlist);\n if(this.partnoArray.length){\n  this.alrt.error(\"Field are Empty Please Fill Them First\");\n }\n    \n \n}\nelse{\n  for(let i=0;i<this.productlist.length;i++){\n \n    if(this.productlist[i].datacheck==true){\n      console.log('hii');\n      \n     this.cartArray.push(this.productlist[i]);\n     if(this.productlist[i].qty){\n       this.addCart(this.productlist[i],i);\n     }\n     else{\n       console.log('test');\n       this.partnoArray.push(this.productlist[i].partNumber)\n     }\n  }\n  }  \n  console.log(this.partnoArray);\n  \n  if(this.partnoArray.length){\n   this.alrt.error(\"field are Empty Please Fill Them First\");\n  }\n     \n   console.log(this.cartArray);\n}\n}\n\n\ntemp:any=false;\n  removeFromCart(index)\n  {\n    this.temp=false;\n\n    this.alrt.delete(\"Product\").then((result)=>{\n      if(result)\n      {\n     \n        console.log(this.tmp_array[index]['category']);\n        this.concernDetail = this.concernDetail.filter(row => row.category != this.tmp_array[index]['category']);\n        this.temp=true;\n      }\n      if(this.temp)\n      {\n        this.tmp_array.splice(index,1);\n\n      }\n    })\n  }\n  addStatus(product,index){\n    console.log(\"hii\");\n    const dialogRef = this.dialog.open(UpdateStatusComponent, {\n      width: '1600px',\n         data:{\n           product:product,\n            index:index\n         }});\n         dialogRef.afterClosed().subscribe(result => {\n          console.log(result);\n        console.log('The dialog was closed');\n        console.log(product);\n      });\n  }\n\n  urls:any=[];\n  documentData:any=[];\n  insertImage(data,productName,index)\n  {\n    this.urls=[];\n    this.documentData=[];\n    this.selectedFile=[];\n    this.name=productName;\n    let files = data.target.files;\n\n        if (files) {\n          for (let file of files) {\n            let reader = new FileReader();\n            reader.onload = (e: any) => {\n              this.urls.push(e.target.result);\n            }\n            reader.readAsDataURL(file);\n          }\n        }\n\n        console.log(this.urls);\n\n\n        setTimeout(() => {\n\n          console.log(this.urls[0]);\n          console.log(data.target.files.length);\n          for(var i=0; i<data.target.files.length; i++)\n          {\n              this.selectedFile.push(data.target.files[i]);\n          }\n\n          console.log(this.urls[0]);\n  \n          console.log(this.urls[0],this.selectedFile[0]);\n          this.concernData=new FormData;\n          this.concernData.action=1;\n          this.concernData.binaryData=this.urls[0];\n          this.concernData.documentType=3;\n          this.concernData.documentName=this.name;\n          this.concernData.referenceId=0;\n          this.concernData.fileName=\"image\"+i+\".jpg\", this.selectedFile[0];\n          console.log(this.urls);\n    \n          this.productlist[index].isImage=true;  \n          this.documentData.push({\n            \n              \"documentType\": this.concernData.documentType,\n              \"documentName\":this.concernData.documentName,\n              \"fileName\":   this.concernData.fileName,\n              \"referenceId\":   this.concernData.referenceId,\n              \"iconName\":   this.concernData.fileName,\n              \"binaryData\":  this.concernData.binaryData,\n              \"action\":  this.concernData.action\n          })\n\n          this.productlist[index].document=this.documentData[0];\n          console.log(this.productlist[index].document);\n        }, 1000);\n       \n  \n}\n  \n  openImageDialog(index): void {\n    const dialogRef = this.dialog.open(ImageModalComponent, {\n      width: '500px',\n      data:{\n       concernStatus:0,\n       document:this.productlist[index].document.binaryData\n      } \n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if(result==true){\n        console.log('The dialog was closed');\n      }\n      else{\n        console.log('The dialog was closed');\n        this.selectedFile=[];\n        this.urls=[];\n        this.productlist[index].document={};\n        this.productlist[index].isImage=false;\n      }\n    \n    });\n  }\n  tmpCartArray:any=[];\n  isedit:boolean=false;\nproductDetail(category)\n{\n  const dialogRef = this.dialog.open(UpdateConcernComponent, {\n    width: '1600px',\n       data:{\n         product:this.concernDetail,\n          category,\n          concern:this.concern_form\n       }});\n      dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      this.isedit=true;\n    console.log('The dialog was closed');\n    this.tmpCartArray=this.db.getData();\n    console.log(this.tmpCartArray);\n    if(this.tmpCartArray)\n    {\n      this.tmp_array=[];\n      this.concernDetail=[];\n      this.showInCart(this.tmpCartArray);\n    }\n  });\n}\ntmp:any=false;\nshowInCart(orderArray:any=[])\n{\n  console.log(orderArray);\n  for(let i=0;i<orderArray.length;i++)\n  {\n    this.addCart(orderArray[i],i);\n    orderArray[i].datacheck=true;\n  }\n  console.log(this.tmp_array);\n}\n \n    productName:any=[];\n    tmp_pro:any=[];\n    productSearchByNumber()\n    {\n      console.log(\"hello\");\n      \n      this.productlist=[];\n      for(var i=0;i<this.tmpProductList.length; i++)\n        {\n          this.productName.search=this.productName.search.toLowerCase();\n          this.tmp_pro=this.tmpProductList[i]['partNumber'].toLowerCase();\n          if(this.tmp_pro.includes(this.productName.search))\n          {\n            this.productlist.push(this.tmpProductList[i]);\n          }     \n        }\n    }\n cartList:any=[];\n \n\n partno_list(){\n   this.loader=true;\n   if(this.concern_form.product_type==1){\n  this.db.fetchData({ \"currentPage\": 1,\n   \"pageSize\": 50,  \"segmentCode\":this.pre_fitment.segment,\"categoryCode\":this.pre_fitment.category,},'product/list').subscribe((response)=>{\n    this.partnumberlist=response['data'];\n   console.log(this.partnumberlist);\n   this.loader=false;\n  });\n}\nelse{\n  this.db.fetchData({ \"currentPage\": 1,\n  \"pageSize\": 50,  \"segmentCode\":this.post_fitment.segment,\"categoryCode\":this.post_fitment.category,},'product/list').subscribe((response)=>{\n   this.partnumberlist1=response['data'];\n  console.log(this.partnumberlist1);\n  this.loader=false;\n });\n}\n} \n\n\n  select_role(value,index,event)\n  {\n    console.log(event);\n    \n    if(event)\n    {\n      this.isAssignCheck=true;\n      this.role.push(value);\n      console.log(this.role);\n   }\n    else\n    {\n      console.log(index);\n      console.log(this.role[0]);\n      \n          for( var j=0;j<this.rolelistsales1.length;j++)\n          {\n            if(this.rolelistsales1[index]['roleId']==this.role[j])\n            {\n              this.role.splice(j,1);\n            }\n          }\n          console.log(this.role);\n    }\n  }\n  active:any = {};\n  toggleterritory(key,action)\n  {\n    console.log(action);\n    console.log(key);\n    \n    if(action == 'open')\n    { this.active[key] = true; }\n    if(action == 'close')\n    { this.active[key] = false;}\n\n    console.log(this.active);\n  }\n  segsearch:any=[];\n  tmp_seg:any=[];\n  segmentSearch()\n  {\n    this.segmentList=[];\n    for(var i=0;i<this.tmp_segmentList.length; i++)\n      {\n        this.segsearch.search=this.segsearch.search.toLowerCase();\n        this.tmp_seg=this.tmp_segmentList[i]['text'].toLowerCase();\n        if(this.tmp_seg.includes(this.segsearch.search))\n        {\n          this.segmentList.push(this.tmp_segmentList[i]);\n        }     \n      }    \n\n  }\n  productConcernsModel:any=[];\n  productConcernType:any;\n  verified:any;\n  onSubmit(status) {\n\n     console.log(status);\n\n     if(this.concern_form.claim_type==2) {\n\n              this.isAssignCheck=false;\n              for(let i=0;i<this.rolelistsales1.length;i++) {\n\n                    console.log(this.rolelistsales1[i].isAssign);\n                    \n                    if(this.rolelistsales1[i].isAssign){\n                      this.isAssignCheck=true;\n                    }\n              }\n\n              console.log(this.isAssignCheck);\n              if(!this.isAssignCheck)\n              {\n            \n                return;\n              }\n              this.db.fetchData({ \"concernStatus\": status, \"concernType\": this.concern_form.claim_type, \"raisedByNetworkId\": this.userId,  \"concernDetails\": this.other_form.description,\"concernRolesModel\":this.role},'concern/add').subscribe((response)=>{\n                \n                    console.log(response)\n                    // this.message=response['message'];\n                    this.loader=false;\n                    if(response['status']==\"Success\")\n                    {\n                        this.toast.openSucess('Concern added successfully','');\n                        this.router.navigate(['/concern-list']);\n                       \n                    }\n                    else\n                    {\n                        this.toast.openError('Something Went Wrong Please Try Again!!','');\n                    };\n              })\n    }\n\n    if(this.concern_form.claim_type==1) {\n\n          if(this.concern_form.product_type==1) {\n             this.productConcernType=1;\n          } else {\n            this.productConcernType=2;\n          }\n\n          if(this.user.data.userType==3) {\n            this.verified=false;\n         } else {\n          this.verified=true;\n         }\n\n          console.log(this.tmp_array);\n          if(this.tmp_array.length!=0) {\n              this.loader=true;\n              console.log(this.concernDetail.length);\n              if(this.user.data.userType==2){\n              for(let i=0;i<this.concernDetail.length;i++) {\n\n                    console.log(this.concernDetail[i]);\n                    \n                    this.productConcernsModel.push( {\n                        \"segmentCode\":this.concernDetail[i].segment,\n                        \"category\":this.concernDetail[i].category,\n                        \"partNumber\": this.concernDetail[i].partNumber,\n                        \"qunatity\":this.concernDetail[i].qty,\n                        \"rate\": this.concernDetail[i].priceUnit,\n                        \"productId\": this.concernDetail[i].productId,\n                        \"netAmount\":this.concernDetail[i].amount,\n                        \"mfgDate\": this.concernDetail[i].date,\n                        \"rejectedQuantity\": 0,\n                        \"document\":this.concernDetail[i].document,\n                        \"acceptedQuantity\":this.concernDetail[i].qty,\n                        \"invoiceNumber\": this.concernDetail[i].invoice,\n                        \"verified\": this.verified\n                    })\n              }\n\n            }\n            else{\n              for(let i=0;i<this.concernDetail.length;i++) {\n\n              console.log(this.concernDetail[i]);\n                    \n              this.productConcernsModel.push( {\n                  \"segmentCode\":this.concernDetail[i].segment,\n                  \"category\":this.concernDetail[i].category,\n                  \"partNumber\": this.concernDetail[i].partNumber,\n                  \"qunatity\":this.concernDetail[i].qty,\n                  \"rate\": this.concernDetail[i].priceUnit,\n                  \"productId\": this.concernDetail[i].productId,\n                  \"netAmount\":this.concernDetail[i].amount,\n                  \"mfgDate\": this.concernDetail[i].date,\n                  \"document\":this.concernDetail[i].document,\n                  \"invoiceNumber\": this.concernDetail[i].invoice,\n                  \"verified\": this.verified\n              })\n            }\n            }\n              console.log(this.productConcernsModel);\n                \n              this.db.fetchData({  \"productConcernType\":this.productConcernType, \"concernStatus\": status,\"concernType\": this.concern_form.claim_type, \"raisedByNetworkId\": this.userId, \n              \"productConcernsModel\": this.productConcernsModel},'concern/add').subscribe((response)=>{\n                \n                    console.log(response)\n                    // this.message=response['status'];\n                    this.loader=false;\n                    if(response['status']==\"Success\")\n                    {\n                           this.toast.openSucess('Concern added successfully','');\n                             this.router.navigate(['/concern-list']);\n                        if(status == 1) {\n                             localStorage.setItem('concernListType', 'Draft');\n                        }\n                        if(status == 2) {\n                          localStorage.setItem('concernListType', 'Submit');\n                     }\n                     if(status == 3) {\n                      localStorage.setItem('concernListType', 'Forward');\n                 }\n                    }\n                    else\n                    {\n                        this.toast.openError('Something Went Wrong Please Try Again!!','');\n                    };\n              })\n          \n          } else {\n\n               this.alrt.error(\"Please Select Some Product\");\n          }\n     }\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/concern-list\\\" routerLinkActive=\\\"active\\\" (click)=\\\"navigateList()\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{categorydetail.networkEstablishment}}<a style=\\\"font-size: 12px; color: #123dd6; margin-left: 10px; text-decoration: underline;\\\"  class=\\\"name\\\" routerLink=\\\"/distribution-detail/{{categorydetail.raisedByNetworkId}}\\\" routerLinkActive=\\\"active\\\">View Detail</a></h2>\\n        <p>Distributor</p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"details-info\\\">\\n                <div class=\\\"basic-details\\\">\\n                  <div class=\\\"col s12 cs-figure padding0\\\">\\n                    <ul>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>Concern Date</span>\\n                            <p> {{categorydetail.createdOn | date:'d, MMMM , y'}}</p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>Created by</span>\\n                            <p>{{categorydetail.createdByName}}</p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                      <li *ngIf=\\\"categorydetail.claimNo\\\">\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>Concern Number</span>\\n                            <p>{{categorydetail.claimNo}}</p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                      <li>\\n                          <div class=\\\"outer\\\">\\n                            <div class=\\\"inner\\\">\\n                              <span>Concern Type</span>\\n                              <p>{{categorydetail.concernTypeName}}</p>\\n                            </div>\\n                          </div>\\n                        </li>\\n                        <li>\\n                          <div class=\\\"outer\\\">\\n                            <div class=\\\"inner\\\">\\n                              <span>Status</span>\\n                              <p *ngIf=\\\"categorydetail.concernStatus== '2'\\\">UNDER VERIFICATION</p>\\n                              <p *ngIf=\\\"categorydetail.concernStatus== '3'\\\">WAITING FOR DISTRIBUTOR APPROVAL</p>\\n                              <p *ngIf=\\\"categorydetail.concernStatus== '4'\\\">Proceed For Approvel</p>\\n                              <p *ngIf=\\\"categorydetail.concernStatus== '5'\\\">Approved</p>\\n                              <p *ngIf=\\\"categorydetail.concernStatus== '6'\\\">Rejected</p>\\n                              <p *ngIf=\\\"categorydetail.concernStatus== '7'\\\">Transporter Deatail</p>\\n                            </div>\\n                          </div>\\n                        </li> \\n                   \\n                    </ul>\\n\\n                    <ul class=\\\"mt15\\\">\\n                        <li>\\n                            <div class=\\\"outer\\\">\\n                              <div class=\\\"inner\\\">\\n                                <span>Total Item</span>\\n                                <p>{{totalItem}}</p>\\n                              </div>\\n                            </div>\\n                          </li>\\n                          <li>\\n                            <div class=\\\"outer\\\">\\n                              <div class=\\\"inner\\\">\\n                                <span>Total Qty</span>\\n                                <p>{{categorydetail.totalQty}}</p>\\n                              </div>\\n                            </div>\\n                          </li>\\n                          <li *ngIf=\\\"categorydetail.concernType==1\\\">\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Product Type</span>\\n                                  <p>{{categorydetail.productConcernTypeName}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                         \\n                          <li>\\n                            <div class=\\\"outer\\\">\\n                              <div class=\\\"inner\\\">\\n                                <span>Total Amount</span>\\n                                <p>{{categorydetail.totalAmount}}</p>\\n                              </div>\\n                            </div>\\n                          </li>\\n                          <li *ngIf=\\\"user.data.userType==3\\\">\\n                            <div class=\\\"outer\\\">\\n                              <div class=\\\"inner\\\">\\n                                <span>Assigned Sales</span>\\n                                <p><span *ngFor=\\\"let sales of user.data.distributerNetwork.networkSalesUsers\\\">{{sales.salesUserName}}</span></p>\\n                              </div>\\n                            </div>\\n                          </li>\\n                    </ul>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <!-- <div class=\\\"sprate-box mb15 pt0\\\" *ngIf=\\\"categorydetail.concernType==1 && user.data.userType==2\\\">\\n              <div *ngIf=\\\"isStatus&&user.data.userType==2\\\"  class=\\\"cs-heading\\\">\\n                  <h2>Status</h2>\\n                </div>\\n                <div class=\\\"row\\\" *ngIf='user.data.userType==2'>\\n                    <form  (ngSubmit)=\\\"d.form.valid && updateStatus()\\\" #d=\\\"ngForm\\\" novalidate>\\n                      <div *ngIf=\\\"isStatus\\\" class=\\\"from-fields col s6 pl0\\\"> \\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input\\\">\\n                            <mat-select placeholder=\\\"Select Status\\\" name=\\\"status\\\" [(ngModel)]=\\\"categorydetail.status\\\" #status=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : status.invalid }\\\" required>\\n                              <mat-option  [value]=2>Approved</mat-option>\\n                              <mat-option  [value]=3>Rejected</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"d.submitted && status.invalid \\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"status.errors.required\\\">status is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                        \\n                      </div>\\n                      <div *ngIf=\\\"isStatus\\\" class=\\\"col s6 from-fields pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input\\\">\\n                            <input  placeholder=\\\"Nature Of Problem\\\" matInput name=\\\"problem\\\" #problem=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.problem\\\"  [ngClass]=\\\"{'has-error' : problem.invalid }\\\" required>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"d.submitted && problem.invalid \\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"problem.errors.required\\\">problem is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s12 padding0\\\">\\n                          <div  *ngIf=\\\"isStatus\\\" class=\\\"cs-btn fixedd mt32 text-right\\\">\\n                            <div class=\\\"in-btn\\\">\\n                              <button  mat-raised-button color=\\\"accent\\\">Status</button>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </form>\\n                  </div>\\n          </div> -->\\n\\n\\n\\n\\n          \\n          <!-- <a mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\"><i class=\\\"material-icons\\\">edit</i></a> -->\\n          \\n          <div class=\\\"sprate-box   padding0\\\" *ngIf=\\\"categorydetail.concernType==1\\\">\\n            <div class=\\\"top-heading\\\">\\n              <h2>Item List</h2>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"cs-table\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table> \\n                    <tr>\\n                      <th class=\\\"padding0\\\">\\n                        <table>\\n                          <tr>\\n                            <th>Category</th>\\n                            <th class=\\\"w110 text-center\\\">Total Item</th>\\n                            <th class=\\\"w110 text-center\\\">Total QTY.</th>\\n                            <th class=\\\"w130 text-right\\\">Amount</th>\\n                            <!-- <th class=\\\"w150\\\">Action</th> -->\\n                          </tr>\\n                        </table>\\n                      </th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                \\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content none-shadow\\\">\\n                    <table>\\n                      <tr  *ngFor=\\\"let concerns of tmp_array;let i=index\\\" >\\n                        <td class=\\\"padding0\\\">\\n                          <table>\\n                            <tr>\\n                              <td><a mat-button class=\\\"link-btn\\\" (click)=\\\"Show_Item(concerns.category,i)\\\" >{{concerns.category}}</a></td>\\n                              <td class=\\\"w110 text-center\\\">{{categorydetail.productConcerns.length}}</td>\\n                              <td class=\\\"w110 text-center\\\">{{concerns.qty}}</td>\\n                              <td class=\\\"w130 text-right\\\">&#x20B9; {{concerns.amount}}</td>\\n                              <!-- <td class=\\\"w150\\\"><a class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons red-clr\\\"(click)=\\\"removeFromCart(i)\\\">delete_forever</i></a></td> -->\\n                            </tr>\\n                          </table>\\n                          <table class=\\\"multi-table\\\"  *ngIf='isItem==true&&isIndex==i'>\\n                            <tr>\\n                              <!-- <td class=\\\"w40\\\">&nbsp;</td> -->\\n                              <td class=\\\"w100\\\">Part No.</td>\\n                              <td class=\\\"w60\\\">Segment</td>\\n                              <td class=\\\"w100\\\">Invoice</td>\\n                              <td class=\\\"w80\\\">MFG Date</td>\\n                              <td class=\\\"w60\\\"> Claim Qty</td>\\n                              <td class=\\\"w60\\\">SAccept Qty</td>\\n                              <td class=\\\"w60\\\" >SReject Qty</td>\\n                              <td *ngIf=\\\"categorydetail.concernStatus>6\\\" class=\\\"w60\\\">WhAccept Qty</td>\\n                              <td *ngIf=\\\"categorydetail.concernStatus>6\\\" class=\\\"w60\\\" >WhReject Qty</td>\\n                              <td class=\\\"w70 text-right\\\">Rate</td>\\n                              <td class=\\\"w80 text-right\\\">Amount</td>\\n                              <th class=\\\"w80\\\">Image</th>\\n                              <td>Sales Remark</td>\\n                              <td>Dealer Remark</td>\\n                              <td *ngIf=\\\"categorydetail.concernStatus>6\\\" >Wholesaler Remark</td>\\n                              <!-- <td class=\\\"w100\\\">Status</td>\\n                              <td>Nature Of Problem</td> -->\\n                            </tr>\\n                            <tr [hidden]=\\\"product.category != concerns.category\\\" *ngFor=\\\"let product of tmp_detail; let i=index\\\">\\n                              <!-- <td><mat-checkbox  name=\\\"{{check+i}}\\\" [(ngModel)]=\\\"product.datacheck\\\" (change)=\\\"checkkk()\\\" >&nbsp; </mat-checkbox></td> -->\\n                              <td class=\\\"w100\\\">{{product.partNumber}}</td>\\n                              <td>{{product.segment}}</td>\\n                              <td>{{product.invoice}}</td>\\n                              <td>{{product.date|date:'d MMM y'}}</td>\\n                              <td>{{product.qty}}</td>\\n                              <td>\\n                                <div class=\\\"td-input\\\" *ngIf=\\\"categorydetail.concernStatus==2 && user.data.userType==2\\\">\\n                                    <input type=\\\"text\\\" (input)=\\\"calculateAmount(product.acceptqty,i)\\\"  name=\\\"acceptqty\\\" #acceptqty=\\\"ngModel\\\" [(ngModel)]=\\\"product.acceptqty\\\" [value]=\\\"product.acceptqty\\\" (keypress)=\\\"MobileNumber($event)\\\" required >\\n                                </div>\\n                                <div *ngIf=\\\"categorydetail.concernStatus!=2\\\">{{product.acceptqty}}</div>\\n                                <div *ngIf=\\\"categorydetail.concernStatus==2 && user.data.userType==3\\\">{{product.acceptqty}}</div>\\n                               \\n                               \\n                                <!-- <p *ngIf='isCart==true && product.datacheck==true && product.qty==\\\"\\\"'>required</p> -->\\n                            </td>\\n                            <td>{{product.rejectqty}}</td>\\n                            <td *ngIf=\\\"categorydetail.concernStatus>6\\\" > \\n                                <div class=\\\"td-input\\\"  *ngIf=\\\"categorydetail.concernStatus==7 && user.data.role==16\\\">\\n                                    <input type=\\\"text\\\" (input)=\\\"calculateAmountWH(product.whacceptqty,i)\\\"  name=\\\"whacceptqty\\\" #whacceptqty=\\\"ngModel\\\" [(ngModel)]=\\\"product.whacceptqty\\\" [value]=\\\"product.whacceptqty\\\" (keypress)=\\\"MobileNumber($event)\\\" required >\\n                                </div>\\n                                <div *ngIf=\\\"categorydetail.concernStatus>7\\\">{{product.acceptqty}}</div>\\n                            </td>\\n                             <td *ngIf=\\\"categorydetail.concernStatus>6\\\" >{{product.whrejectqty}}</td>\\n                              <td class=\\\"text-right\\\">&#x20B9; {{product.price}}</td>\\n                              <td class=\\\"text-right\\\">&#x20B9; {{product.amount}}</td>\\n                              <td class=\\\"w80\\\">\\n                                <a *ngIf=\\\"product.isImage\\\" class=\\\"link-btn\\\" (click)=\\\"openImageDialog(i)\\\"> View Image </a>\\n                              </td>\\n                          <td > \\n                            <div class=\\\"td-input\\\" *ngIf=\\\"categorydetail.concernStatus==2 && user.data.userType==2\\\">\\n                                <textarea type=\\\"text\\\"   name=\\\"{{salesremark+index}}\\\" #salesremark=\\\"ngModel\\\" [(ngModel)]=\\\"product.salesremark\\\" required></textarea>\\n                            </div>\\n                            <div class=\\\"td-input\\\" *ngIf=\\\"categorydetail.concernStatus!=2\\\">\\n                                <textarea type=\\\"text\\\"   name=\\\"{{salesremark+index}}\\\" #salesremark=\\\"ngModel\\\" [(ngModel)]=\\\"product.salesremark\\\" required readonly></textarea>\\n                            </div>\\n                            <div class=\\\"td-input\\\" *ngIf=\\\"categorydetail.concernStatus==2 && user.data.userType==3\\\">\\n                              <textarea type=\\\"text\\\"   name=\\\"{{salesremark+index}}\\\" #salesremark=\\\"ngModel\\\" [(ngModel)]=\\\"product.salesremark\\\" required readonly></textarea>\\n                          </div>\\n                            <!-- <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p> -->\\n                        </td>\\n                        <td> \\n                          <div class=\\\"td-input\\\">\\n                              <textarea type=\\\"text\\\"   name=\\\"{{dealerremark+index}}\\\" #dealerremark=\\\"ngModel\\\" [(ngModel)]=\\\"product.dealerremark\\\" required readonly></textarea>\\n                          </div>\\n                         \\n                      </td>\\n                      <td *ngIf=\\\"categorydetail.concernStatus>6\\\" > \\n                        <div class=\\\"td-input\\\"  *ngIf=\\\"categorydetail.concernStatus==7 && user.data.role==16\\\">\\n                            <textarea type=\\\"text\\\"   name=\\\"{{whremark+index}}\\\" #whremark=\\\"ngModel\\\" [(ngModel)]=\\\"product.whremark\\\" required ></textarea>\\n                        </div>\\n                        <div class=\\\"td-input\\\"  *ngIf=\\\"categorydetail.concernStatus>7\\\">\\n                            <textarea type=\\\"text\\\"   name=\\\"{{whremark+index}}\\\" #whremark=\\\"ngModel\\\" [(ngModel)]=\\\"product.whremark\\\" required readonly></textarea>\\n                        </div>\\n                       \\n                    </td>\\n                              <!-- <td>{{product.statusName}}</td>\\n                              <td>{{product.natureOfProblem}}</td> -->\\n                            </tr>\\n                          </table>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n              \\n            </div>\\n          </div>\\n          <div class=\\\"row\\\"  *ngIf=\\\"categorydetail.concernType==1\\\">\\n            <div class=\\\"col s12 padding0\\\" >\\n              <div class=\\\"cs-btn  mt15 text-right\\\">\\n                <div class=\\\"in-btn\\\" >\\n                  <ng-container *ngIf='user.data.userType==2'>\\n                      <button  *ngIf=\\\"categorydetail.concernStatus==2\\\"  mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(2)\\\" >save</button>\\n                  </ng-container>\\n                  <button  *ngIf=\\\"user.data.userType==2 && isForward  && categorydetail.concernStatus==2\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(3)\\\" >Forward To Distributer</button>\\n                  <button  *ngIf=\\\"user.data.userType==2 && user.data.salesUser.concernApprovalAccess==true && (isProceed||categorydetail.concernStatus==4) && categorydetail.concernStatus!=5 && categorydetail.concernStatus!=3 && categorydetail.concernStatus!=6\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(5)\\\" >Generate Concern</button>\\n                  <!-- <button  *ngIf=\\\"user.data.userType==2 && user.data.salesUser.concernApprovalAccess==true && categorydetail.concernStatus==4\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(5)\\\" >Generate Concern</button> -->\\n                  <button  *ngIf=\\\"user.data.userType==2 && user.data.salesUser.concernApprovalAccess==true && categorydetail.concernStatus==4\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(6)\\\" >Reject</button>\\n                  <button  *ngIf=\\\"user.data.userType==2 && isProceed && user.data.salesUser.concernApprovalAccess==false  && categorydetail.concernStatus!=4 && categorydetail.concernStatus!=5 && categorydetail.concernStatus!=6 && categorydetail.concernStatus!=7 &&  categorydetail.concernStatus!=8 &&  categorydetail.concernStatus!=9\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(4)\\\" >Proceed for APPROVAL</button>\\n                  <!-- <button  *ngIf=\\\"user.data.userType==2 && isProceed && user.data.salesUser.concernApprovalAccess==false && categorydetail.concernStatus==2\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(4)\\\" >Proceed for APPROVAL</button> -->\\n                  <button  *ngIf=\\\"categorydetail.concernStatus==7 && user.data.role==16\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(7)\\\" >Save</button>\\n                  <button  *ngIf=\\\"isWHForward && categorydetail.concernStatus==7 && user.data.role==16\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(8)\\\" >Forward To Finance</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n      \\n          \\n          <div class=\\\"sprate-box mt15 padding0\\\"  *ngIf=\\\"categorydetail.concernType==1&&categorydetail.concernStatus>4\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>Transporter Detail</h2>\\n              </div>\\n              <a  *ngIf=\\\"this.user.data.role==12 && categorydetail.concernStatus==5\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\" ><i class=\\\"material-icons\\\" (click)=\\\"edit()\\\">edit</i></a>\\n              <div class=\\\"cs-table\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table>\\n                    <tr>\\n                      <th>Transporter Name</th>\\n                      <th class=\\\"w140\\\">Mode of Transport</th>\\n                      <th class=\\\"w140\\\">No. of Boxes</th>\\n                      <th class=\\\"w150\\\">LR No.</th>\\n                      <th class=\\\"w140\\\">E-way bill No.</th>\\n                      <th class=\\\"w140\\\" *ngIf=\\\"isEdit==true\\\">Upload Document</th>\\n                      <th class=\\\"w140\\\" *ngIf=\\\"categorydetail.transportDocument\\\">Download Document</th>\\n                      <th class=\\\"w100\\\">&nbsp;</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                <form  (ngSubmit)=\\\"f.form.valid && updateTransport() || setFocus(f.form)\\\" #f=\\\"ngForm\\\" novalidate>\\n                  <div class=\\\"table-container\\\">\\n                    <div class=\\\"table-content none-shadow\\\">\\n                      <table>\\n                        <tr *ngIf='categorydetail.transporterName||isEdit'>\\n                          <td><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.transporterName}}</span>\\n                            \\n                            <div class=\\\"td-input\\\" *ngIf=\\\"isEdit==true\\\">\\n                              <input type=\\\"text\\\" name=\\\"transporterName\\\" #transporterName=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.transporterName\\\" [ngClass]=\\\"{'has-error' : transporterName.invalid }\\\" required>\\n                              \\n                              <mat-error *ngIf=\\\"f.submitted && transporterName.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"transporterName.errors.required\\\">required</mat-error>\\n                              </mat-error>\\n                            </div>\\n                            \\n                          </td>\\n                          <td class=\\\"w140\\\"><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.modeOfTransport}}</span>\\n                            <div class=\\\"td-input\\\" *ngIf=\\\"isEdit==true\\\" >\\n                              <input type=\\\"text\\\" name=\\\"modeOfTransport\\\" #modeOfTransport=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.modeOfTransport\\\"  [ngClass]=\\\"{'has-error' : modeOfTransport.invalid }\\\" required>\\n                              <mat-error *ngIf=\\\"f.submitted && modeOfTransport.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"modeOfTransport.errors.required\\\">required</mat-error>\\n                              </mat-error>\\n                              \\n                            </div>\\n                          </td>\\n                          <td class=\\\"w140\\\"><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.numberOfBoxes}}</span>\\n                            <div class=\\\"td-input\\\"  *ngIf=\\\"isEdit==true\\\">\\n                              \\n                              <input type=\\\"text\\\" name=\\\"numberOfBoxes\\\" #numberOfBoxes=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.numberOfBoxes\\\" [ngClass]=\\\"{'has-error' : numberOfBoxes.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\"  required>\\n                              \\n                              <mat-error *ngIf=\\\"f.submitted && numberOfBoxes.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"numberOfBoxes.errors.required\\\">required</mat-error>\\n                              </mat-error>\\n                              \\n                            </div>\\n                          </td>\\n                          <td class=\\\"w150\\\"><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.lrNumber}}</span>\\n                            <div class=\\\"td-input\\\"  *ngIf=\\\"isEdit==true\\\" >\\n                              <input type=\\\"text\\\"  name=\\\"lrNumber\\\" #lrNumber=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.lrNumber\\\" [ngClass]=\\\"{'has-error' : lrNumber.invalid }\\\" required>\\n                              <mat-error *ngIf=\\\"f.submitted && lrNumber.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"lrNumber.errors.required\\\">required</mat-error>\\n                              </mat-error>\\n                            </div>\\n                          </td>\\n                          <td class=\\\"w140\\\"><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.eWayBillNumber}}</span>\\n                            <div class=\\\"td-input\\\" *ngIf=\\\"isEdit==true\\\">\\n                              <input type=\\\"text\\\"  name=\\\"eWayBillNumber\\\" #eWayBillNumber=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.eWayBillNumber\\\" [ngClass]=\\\"{'has-error' : eWayBillNumber.invalid }\\\" required>\\n                              <mat-error *ngIf=\\\"f.submitted && eWayBillNumber.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"eWayBillNumber.errors.required\\\">required</mat-error>\\n                              </mat-error>\\n                            </div>\\n                          </td>\\n                          <td class=\\\"w140\\\" *ngIf=\\\"isEdit==true\\\">\\n                            <label>\\n                              <input (change)=\\\"insertDocument($event)\\\" style=\\\"display: none;\\\" type=\\\"file\\\">\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"innear\\\">\\n                                  <i class=\\\"material-icons upload-ic\\\">cloud_upload</i>\\n                                  <p>Add Document</p>\\n                                </div>\\n                              </div>\\n                            </label>\\n                            <p *ngIf=\\\"selectedFile && selectedFile[0] && isEdit==true\\\" >{{selectedFile[0].name}}</p>\\n                      </td>\\n                      <td class=\\\"w140\\\"  *ngIf=\\\"categorydetail.transportDocument\\\">\\n                        <ul>\\n                          <li><a matTooltip=\\\"Download Document\\\" matRipple  href=\\\"{{dburl}}download/document/{{categorydetail.transportDocument.documentId}}\\\"><i class=\\\"material-icons\\\">cloud_download</i></a></li>\\n                        </ul>\\n                      </td>\\n                          <td class=\\\"w100 text-center\\\">\\n                            <button  mat-raised-button color=\\\"accent\\\"  *ngIf=\\\"isEdit==true\\\"  >Update</button>\\n                           \\n                          </td>\\n                        </tr>\\n                      </table>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n          </div> \\n\\n\\n          <div class=\\\"sprate-box mt15 padding0\\\" *ngIf=\\\"categorydetail.concernStatus>7\\\">\\n              <div class=\\\"full-address\\\">\\n                <div class=\\\"top-heading\\\">\\n                  <h2>Finance Detail</h2>\\n                </div>\\n                <form *ngIf=\\\"!(categorydetail.concernStatus==8 && user.data.role==16)\\\" (ngSubmit)=\\\"d.form.valid && updateFinance()\\\" #d=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"from-fields padding15\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input wp100  infix-bodr\\\">\\n                                    <input *ngIf=\\\"categorydetail.concernStatus==8\\\" matInput placeholder=\\\"Credit Note\\\" name=\\\"creditnote\\\" #creditnote=\\\"ngModel\\\" [(ngModel)]=\\\"finance.creditnote\\\" [value]=\\\"finance.creditnote\\\" (keypress)=\\\"MobileNumber($event)\\\" required >\\n                                    <input *ngIf=\\\"categorydetail.concernStatus>8\\\" matInput placeholder=\\\"Credit Note\\\" name=\\\"creditNote\\\" #creditNote=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.creditNote\\\" [value]=\\\"categorydetail.creditNote\\\" (keypress)=\\\"MobileNumber($event)\\\" required readonly>\\n                                </mat-form-field>\\n                               \\n                                <mat-error *ngIf=\\\"d.submitted && creditnote.invalid && categorydetail.concernStatus==8 \\\" class=\\\"invalid-feedback\\\">\\n                                    <mat-error *ngIf=\\\"creditnote.errors.required\\\">required</mat-error>\\n                                  </mat-error>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col s6 pr0\\\">\\n                            <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input wp100  infix-bodr\\\">\\n                                    <textarea  *ngIf=\\\"categorydetail.concernStatus==8\\\" class=\\\"h150\\\" matInput placeholder=\\\"Finance Remark\\\" name=\\\"fmremark\\\" #fmremark=\\\"ngModel\\\" [(ngModel)]=\\\"finance.fmremark\\\" [value]=\\\"finance.fmremark\\\" ></textarea>\\n                                    <textarea *ngIf=\\\"categorydetail.concernStatus>8\\\" class=\\\"h150\\\" matInput placeholder=\\\"Finance Remark\\\" name=\\\"fmRemarks\\\" #fmRemarks=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.fmRemarks\\\" [value]=\\\"categorydetail.fmRemarks\\\" readonly></textarea>\\n                                </mat-form-field>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"categorydetail.concernStatus==8\\\">\\n                        <div class=\\\"col s12 padding0\\\">\\n                            <div  class=\\\"cs-btn fixedd mt15 text-right\\\">\\n                              <div class=\\\"in-btn\\\">\\n                                <button mat-raised-button color=\\\"accent\\\" >Save</button>\\n                              </div>\\n                            </div>\\n                          </div>\\n                    </div>\\n                </div>\\n                </form>\\n              </div>\\n            </div> \\n\\n          <div class=\\\"sprate-box pt0 mt15\\\" *ngIf=\\\"categorydetail.concernType==2\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>Other Type Detail</h2>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s8 pl0\\\">\\n                <div class=\\\"from-fields\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input wp100 h-input infix-bodr8\\\">\\n                      <textarea matInput   name=\\\"concernDetails\\\" #concernDetails=\\\"ngModel\\\"  [(ngModel)]=\\\"categorydetail.concernDetails\\\" readonly class=\\\"h200\\\"></textarea>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col s4 pr0\\\">\\n                <div class=\\\"territory-info mt12\\\">\\n                  <div class=\\\"head\\\">\\n                    <h2>SalesRole</h2>\\n                  </div>\\n                  <div class=\\\"cs-checkbox\\\">\\n                    <div class=\\\"checkbox-outer auto-height-scroll\\\">\\n                      <section class=\\\"checkbox-inner  bodr0\\\">\\n                        <mat-checkbox *ngFor=\\\"let role of categorydetail.concernRoles\\\"  class=\\\"check-list bg-none check-none check-none check-hover check-none\\\" style=\\\"cursor: unset;\\\">\\n                          <div class=\\\"name-outer\\\">\\n                            <div class=\\\"outer\\\">\\n                              <div class=\\\"inner\\\">\\n                                <div class=\\\"name-inner\\\">\\n                                    <span *ngIf=\\\"role.role==6\\\">N</span>\\n                                    <span *ngIf=\\\"role.role==7\\\">R</span>\\n                                    <span *ngIf=\\\"role.role==8\\\">A</span>\\n                                    <span *ngIf=\\\"role.role==10\\\">T</span>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"text-box\\\">\\n                            <h2><span *ngIf=\\\"role.role==6\\\">National Manager</span><span *ngIf=\\\"role.role==7\\\">Regional Manager</span><span *ngIf=\\\"role.role==8\\\">Area Manager</span><span *ngIf=\\\"role.role==10\\\">Territory Incharge</span></h2>\\n                          </div>\\n                        </mat-checkbox>\\n                      \\n                      </section>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col s12 padding0\\\">\\n                <div  class=\\\"cs-btn fixedd mt15 text-right\\\">\\n                  <div class=\\\"in-btn\\\">\\n                    <button *ngIf='user.data.role==1 && categorydetail.concernStatus>4' mat-raised-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"processed()\\\" >Close</button>\\n                  </div>\\n                </div>\\n              </div>\\n        </div>\\n        </div>  \\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n\\n<div class=\\\"h50\\\"></div>\\n\\n\"","import { Component, OnInit , ViewChild, ElementRef, Inject, PLATFORM_ID } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport {MatDialog} from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport { UpdateConcernComponent } from '../update-concern/update-concern.component';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ImageModalComponent } from '../image-modal/image-modal.component';\n\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-concern-detail',\n  templateUrl: './concern-detail.component.html',\n \n})\nexport class ConcernDetailComponent implements OnInit {\n    id:any;\n    concernReviews:any=[];\n    concernDetail:any=[];\n    draftDetail:any=[];\n    user:any={}\n    isForward:any=false;\n    concern_form:any={};\n    userId:any;\n    msg:any;\n    isProceed:any=true;\n    other_form:any={};\n    prefitmentlist:any=[];\n    pre_fitment:any={};\n    post_fitment:any={};\n    tmp_list:any=[];\n    tmp_list1:any=[];\n    segmentList:any=[];\n    finel_Array:any=[];\n    categorylist:any=[];\n    message:any;\n    tmp_segmentList:any=[];\n    product_list:any=[];\n    partnumberlist:any=[];\n    partnumberlist1:any=[];\n    removeproductname:boolean;\n    rolelists:any=[];\n    tmp_array:any=[];\n    role:any=[];\n    isSave:boolean;\n    itemList:any=[];\n    productlist:any=[];\n    isAssignCheck:boolean=true;\n    loader:boolean;\n    cartProductList:any=[];\n    categorydetail:any=[]\n    data:any={};\n    rolelistsales1:any=[];\n    tmp_categoryList:any=[];\n  constructor(\n    public db:ConstantService,\n    public router:Router, \n    public route:ActivatedRoute,\n    public toast:SnackBarOverview,\n    public dialog: MatDialog,\n    public alrt:DialogComponent,\n    @Inject(PLATFORM_ID) private platformId: Object) {\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.route.params.subscribe(params=>{\n      console.log(params);\n      this.id = params.id;\n      console.log(this.id);\n      this.concern_detail();\n    });\n   }\n   dburl:any = '';\n  ngOnInit() {\n    this.dburl=this.db.dburl;\n    this.concern_form.product_type=1\n  }\n  navigateList(){\n    if(this.categorydetail.concernStatus == 2) {\n      localStorage.setItem('concernListType', 'Submit');\n      this.router.navigate(['/concern-list']);\n     }\n   if(this.categorydetail.concernStatus == 3) {\n      localStorage.setItem('concernListType', 'Forward');\n      this.router.navigate(['/concern-list']);\n     }\n    if(this.categorydetail.concernStatus == 4) {\n      localStorage.setItem('concernListType', 'Approval');\n      this.router.navigate(['/concern-list']);\n     }\n     if(this.categorydetail.concernStatus == 5) {\n      localStorage.setItem('concernListType', 'Approved');\n      this.router.navigate(['/concern-list']);\n     }\n     if(this.categorydetail.concernStatus == 6) {\n      localStorage.setItem('concernListType', 'Rejected');\n      this.router.navigate(['/concern-list']);\n     }\n     if(this.categorydetail.concernStatus == 7) {\n      localStorage.setItem('concernListType', 'Document');\n      this.router.navigate(['/concern-list']);\n     }\n     if(this.categorydetail.concernStatus == 8) {\n      localStorage.setItem('concernListType', 'WH');\n      this.router.navigate(['/concern-list']);\n     }\n     if(this.categorydetail.concernStatus == 9) {\n      localStorage.setItem('concernListType', 'FM');\n      this.router.navigate(['/concern-list']);\n     }\n    \n  }\n  isWHForward:any;\n  calculateAmountWH(whacceptqty,i){\n    this.isProceed=true;\n    console.log(whacceptqty,i) \n    if(whacceptqty>=0){\n      if(whacceptqty==''){\n        whacceptqty=0;\n      }\n      if(this.tmp_detail[i].qty>=whacceptqty){\n      this.tmp_detail[i].whrejectqty=parseInt(this.tmp_detail[i]['qty'])-parseInt(whacceptqty);\n      console.log( this.tmp_detail[i].whrejectqty) \n      }\n      else{\n        this.alrt.error(\"WHAccept Qty should be less than or Equal to calim Qty\");\n        this.tmp_detail[i].whrejectqty='';\n        this.tmp_detail[i].whacceptqty=0;\n        console.log( this.tmp_detail[i].whacceptqty);\n      }\n    }\n    else{\n      this.alrt.error(\"Qty should be 0 or greater than 0 \");\n      this.tmp_detail[i].whrejectqty='';\n      this.tmp_detail[i].whacceptqty=0;\n    }\n    for(let i=0;i<this.tmp_detail.length;i++){\n      if(this.tmp_detail[i].whacceptqty!=null){\n        this.isWHForward=true;\n      }\n      else{\n        this.isWHForward=false;\n        break;\n      }\n\n    }\n    console.log(this.isWHForward);\n   \n  }\n  calculateAmount(acceptqty,i)\n  {\n    this.isProceed=true;\n    console.log(acceptqty,i) \n    if(acceptqty>=0){\n      if(acceptqty==''){\n        acceptqty=0;\n      }\n      if(this.tmp_detail[i].qty>=acceptqty){\n      this.tmp_detail[i].amount=parseInt(this.tmp_detail[i]['price'])*parseInt(acceptqty);\n      this.tmp_detail[i].rejectqty=parseInt(this.tmp_detail[i]['qty'])-parseInt(acceptqty);\n      console.log( this.tmp_detail[i].rejectqty) \n      }\n      else{\n        this.alrt.error(\"Accept Qty should be less than or Equal to calim Qty\");\n        this.tmp_detail[i].rejectqty='';\n        this.tmp_detail[i].acceptqty=0;\n        this.tmp_detail[i].amount=0;\n        console.log( this.tmp_detail[i].acceptqty);\n      }\n    }\n    else{\n      this.alrt.error(\"Qty should be 0 or greater than 0 \");\n      this.tmp_detail[i].rejectqty='';\n      this.tmp_detail[i].acceptqty=0;\n      this.tmp_detail[i].amount=0;\n      console.log( this.tmp_detail[i].amount);\n    }\n    \n    for(let i=0;i<this.tmp_detail.length;i++){\n      if(this.tmp_detail[i].acceptqty!=null){\n        this.isForward=true;\n      }\n      else{\n        this.isForward=false;\n        break;\n      }\n\n    }\n    console.log(this.isForward);\n    for(let i=0;i<this.tmp_detail.length;i++){\n      if(this.tmp_detail[i].acceptqty!=this.tmp_detail[i].qty){\n        this.isProceed=false;\n      }\n    }\n   \n  }\n  tmp_detail:any=[];\n  totalItem:any;\n concern_detail(){\n  this.loader=true;\n  this.db.fetchData( {concernId:this.id},'concern/list').subscribe((response)=>{\n      console.log(response);\n      this.categorydetail=response['data'][0];\n      console.log(this.categorydetail);\n      this.loader=false;\n      this.totalItem=this.categorydetail.productConcerns.length;\n      console.log(this.totalItem);\n      \n      for(let i=0;i<this.categorydetail.productConcerns.length;i++){\n    \n        this.tmp_detail.push({\"productConcernId\":this.categorydetail.productConcerns[i]['productConcernId'],\"document\":this.categorydetail.productConcerns[i]['document'],\"whrejectqty\":this.categorydetail.productConcerns[i]['whRejectedQuantity'],\"whacceptqty\":this.categorydetail.productConcerns[i]['whAcceptedQuantity'],\"whremark\":this.categorydetail.productConcerns[i]['whRemarks'],\"rejectqty\":this.categorydetail.productConcerns[i]['rejectedQuantity'],\"acceptqty\":this.categorydetail.productConcerns[i]['acceptedQuantity'],\"dealerremark\":this.categorydetail.productConcerns[i]['networkRemarks'],\"salesremark\":this.categorydetail.productConcerns[i]['salesRemarks'],\"natureOfProblem\":this.categorydetail.productConcerns[i]['natureOfComplaint'],partNumber:this.categorydetail.productConcerns[i]['partNumber'],productId:this.categorydetail.productConcerns[i]['productId'],concernId:this.categorydetail.productConcerns[i]['concernId'],price:this.categorydetail.productConcerns[i]['rate'],segment: this.categorydetail.productConcerns[i]['segmentCode'],category: this.categorydetail.productConcerns[i]['category'],qty:this.categorydetail.productConcerns[i]['qunatity'],amount:this.categorydetail.productConcerns[i]['netAmount'],tmpqty:this.categorydetail.productConcerns[i]['qunatity'],tmpamount:this.categorydetail.productConcerns[i]['netAmount'],invoice:this.categorydetail.productConcerns[i]['invoiceNumber'],date:this.categorydetail.productConcerns[i]['mfgDate'],application: this.categorydetail.productConcerns[i]['application']})\n      \n        if(this.categorydetail.productConcerns[i].qunatity!=this.categorydetail.productConcerns[i].acceptedQuantity)\n       {\n         this.isProceed=false;\n       }\n      }\n      console.log(this.tmp_detail);\n      for(let i=0;i<this.categorydetail.productConcerns.length;i++){\n      \n        if(this.categorydetail.productConcerns[i].acceptedQuantity!=null){\n          this.isForward=true;\n        }\n        else{\n          this.isForward=false;\n          break;\n        }\n  \n      }\n      console.log(this.isForward);\n      \n      for(let i=0;i<this.categorydetail.productConcerns.length;i++){\n        if(this.categorydetail.productConcerns[i].document){\n          this.tmp_detail[i].isImage=true;\n          console.log(\"hii\");\n          \n        }\n       this.addCart(this.tmp_detail[i],i);\n      }\n      this.categorydetail.totalQty=0;\n\n      this.categorydetail.totalAmount=0;\n\n      for(let i=0;i<this.categorydetail.productConcerns.length;i++) {\n        if(this.categorydetail.concernType==1){\n             \n                console.log(this.categorydetail.productConcerns[i].netAmount, this.categorydetail.productConcerns[i].qunatity);\n                this.categorydetail.totalQty= this.categorydetail.totalQty+this.categorydetail.productConcerns[i].qunatity;\n                this.categorydetail.totalAmount= this.categorydetail.totalAmount+this.categorydetail.productConcerns[i].netAmount;\n        }\n  }\n    })\n }\n addCart(product,index)\n {\n  console.log(product);\nif(this.concern_form.product_type==1){\n if(product.qty){\n   if(this.tmp_array.length==0){\n     this.tmp_array.push({category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date']});\n     this.concernDetail.push({ \"whrejectqty\":product['whrejectqty'],\"whacceptqty\":product['whacceptqty'],\"whremark\":product['whremark'],\"productConcernId\":product['productConcernId'],category: product['category'],productId:product['productId'],price:product['price'],qty:product['qty'],amount:product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount']});\n      }\n      else{\n      //  const idIndex=this.concernDetail.findIndex(row => row.productId==product.productId)\n       const idIndex=-1;\n       console.log(idIndex);\n       \n    \n         if(idIndex != -1)\n         {\n           console.log('check');\n           \n           \n          const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n          console.log(itemIndex);\n          if(itemIndex != -1)\n          {\n               \n         this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)-parseInt(this.concernDetail[idIndex].tmpqty);\n         this.tmp_array[itemIndex].amount=parseInt(this.tmp_array[itemIndex].amount)-parseInt(this.concernDetail[idIndex].tmpamount);\n         this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)+parseInt(product.qty);\n         this.tmp_array[itemIndex].amount=parseInt(product.amount)+parseInt(this.tmp_array[itemIndex].amount);\n          }\n          this.concernDetail[idIndex]['qty']=parseInt(product.qty);\n          this.concernDetail[idIndex]['tmpqty']=parseInt(product.qty);\n          this.concernDetail[idIndex]['amount']=parseInt(product.amount);\n          this.concernDetail[idIndex]['tmpamount']=parseInt(product.amount);\n         }\n         if(idIndex === -1)\n         {\n           this.concernDetail.push({ \"whrejectqty\":product['whrejectqty'],\"whacceptqty\":product['whacceptqty'],\"whremark\":product['whremark'],\"productConcernId\":product['productConcernId'],category: product['category'],\"productId\":product.productId,\"qty\":product.qty,\"price\":product.price,\"amount\":product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpamount:product['amount'],tmpqty:product['qty'],});\n           const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n          if(itemIndex === -1) {\n           this.tmp_array.push({category: product['category'],qty:product['qty'],amount:product['amount'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount'],});\n          }\n          else {\n            console.log('checkccc');\n            \n           this.tmp_array[itemIndex].qty=parseInt(product['qty'])+parseInt(this.tmp_array[itemIndex].qty);\n           this.tmp_array[itemIndex].amount=parseInt(product['amount'])+parseInt(this.tmp_array[itemIndex].amount);\n         }\n         }\n}\nconsole.log(this.tmp_array);\nconsole.log(this.concernDetail);\nif(this.tmp_array){\n this.concern_form.info=true;\n console.log(this.concern_form);\n \n    }\n\n  }\n  else{\n    this.alrt.error(\"Some Fields are Empty Please Fill Them First\");\n  }\n }\n else {\n   if(product.qty){\n     if(this.tmp_array.length==0){\n       this.tmp_array.push({category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date'],statusName:product['statusName'],natureOfProblem:product['natureOfComplaint']});\n       this.concernDetail.push({ \"whrejectqty\":product['whrejectqty'],\"whacceptqty\":product['whacceptqty'],\"whremark\":product['whremark'],\"productConcernId\":product['productConcernId'],category: product['category'],productId:product['productId'],price:product['price'],qty:product['qty'],amount:product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount'],statusName:product['statusName'],natureOfProblem:product['natureOfComplaint']});\n        }\n        else{\n         const idIndex=this.concernDetail.findIndex(row => row.productId==product.productId)\n         console.log(idIndex);\n         \n      \n           if(idIndex != -1)\n           {\n             console.log('check');\n             \n            console.log(this.finel_Array[idIndex]);\n          \n            const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n            console.log(itemIndex);\n            if(itemIndex != -1)\n            {\n                 \n           this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)-parseInt(this.concernDetail[idIndex].tmpqty);\n           this.tmp_array[itemIndex].amount=parseInt(this.tmp_array[itemIndex].amount)-parseInt(this.concernDetail[idIndex].tmpamount);\n           console.log(this.concernDetail[idIndex]);\n           \n           this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)+parseInt(product.qty);\n          \n           this.tmp_array[itemIndex].amount=parseInt(product.amount)+parseInt(this.tmp_array[itemIndex].amount);\n         \n           console.log(this.tmp_array[itemIndex]);\n            }\n            this.concernDetail[idIndex]['qty']=parseInt(product.qty);\n            this.concernDetail[idIndex]['amount']=parseInt(product.amount);\n           }\n           if(idIndex === -1)\n           {\n             this.concernDetail.push({\"whrejectqty\":product['whrejectqty'],\"whacceptqty\":product['whacceptqty'],\"whremark\":product['whremark'],\"productConcernId\":product['productConcernId'],category: product['category'],\"productId\":product.productId,\"qty\":product.qty,\"price\":product.price,\"amount\":product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpamount:product['amount'],tmpqty:product['qty'],statusName:product['statusName'],natureOfProblem:product['natureOfComplaint']});\n             const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n            if(itemIndex === -1) {\n             this.tmp_array.push({category: product['category'],qty:product['qty'],amount:product['amount'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount'],statusName:product['statusName'],natureOfProblem:product['natureOfComplaint']});\n            }\n            else {\n              console.log('checkccc');\n              \n             this.tmp_array[itemIndex].qty=parseInt(product['qty'])+parseInt(this.tmp_array[itemIndex].qty);\n             this.tmp_array[itemIndex].amount=parseInt(product['amount'])+parseInt(this.tmp_array[itemIndex].amount);\n           }\n           }\n }\n console.log(this.tmp_array);\n console.log(this.concernDetail);\n if(this.tmp_array){\n   this.concern_form.info=true;\n   console.log(this.concern_form);\n   \n      }\n\n      \n    }\n    else{\n      this.alrt.error(\"Some Fields are Empty Please Fill Them First\");\n    }\n }\n}\nisCart:boolean=false;\npartnoArray:any=[];\nstr2:any;\ncartArray:any=[];\nisStatus:boolean=false;\n\naddProduct(kk)\n{\n  console.log(kk);\n  \n  this.isCart=true;\n  if(this.concern_form.product_type==1){\n for(let i=0;i<this.productlist.length;i++){\n   if(this.productlist[i].datacheck==true){\n     console.log('hii');\n     \n    this.cartArray.push(this.productlist[i]);\n    if(this.productlist[i].qty&&this.productlist[i].invoice&&this.productlist[i].date){\n      this.addCart(this.productlist[i],i);\n    }\n    else{\n      console.log('test');\n      this.partnoArray.push(this.productlist[i].partNumber)\n    }\n }\n }  \n console.log(this.partnoArray);\n \n if(this.partnoArray.length){\n  this.alrt.error(\"Some field are Empty Please Fill Them First\");\n }\n    \n  console.log(this.cartArray);\n}\nelse{\n  for(let i=0;i<this.productlist.length;i++){\n    if(this.productlist[i].datacheck==true){\n      console.log('hii');\n      \n     this.cartArray.push(this.productlist[i]);\n     if(this.productlist[i].qty){\n       this.addCart(this.productlist[i],i);\n     }\n     else{\n       console.log('test');\n       this.partnoArray.push(this.productlist[i].partNumber)\n     }\n  }\n  }  \n  console.log(this.partnoArray);\n  \n  if(this.partnoArray.length){\n   this.alrt.error(\"Some field are Empty Please Fill Them First\");\n  }\n     \n   console.log(this.cartArray);\n}\n}\ntemp:any=false;\n  removeFromCart(index)\n  {\n    this.temp=false;\n\n    this.alrt.delete(\"Product\").then((result)=>{\n      if(result)\n      {\n     \n        console.log(this.tmp_array[index]['category']);\n        this.concernDetail = this.concernDetail.filter(row => row.category != this.tmp_array[index]['category']);\n        this.temp=true;\n      }\n      if(this.temp)\n      {\n        this.tmp_array.splice(index,1);\n\n      }\n    })\n  }\n  isItem:boolean=false;\n  isIndex:any=-1;\n  Show_Item(category,index){\n    console.log(this.tmp_detail);\n    for(let i=0;i<this.tmp_detail.length;i++){\n    this.tmp_detail[i].datacheck=false;\n    }\n    if(this.isIndex!=index){\n      this.isItem=true;\n      this.itemList=[];\n    }\n    else{\n      this.isItem=!this.isItem;\n     \n    }\n    if(this.isItem){\n      this.isIndex=index;\n     for(let i=0;i<this.tmp_detail.length;i++){\n      if(category === this.tmp_detail[i]['category'])\n      {\n        this.itemList.push(this.tmp_detail[i])\n     \n      }\n    }\n  }\n  else{\n    this.itemList=[];\n  }\n  \n\n  }\n  urls:any=[];\n  \n  openImageDialog(index): void {\n    console.log(index);\n    \n   console.log(this.tmp_detail[index]);\n   \n    const dialogRef = this.dialog.open(ImageModalComponent, {\n      width: '500px',\n      data: {\n        document:this.tmp_detail[index].document,\n        concernStatus:this.categorydetail.concernStatus\n      }\n    });\n  }\n  productDetail(category)\n  {\n    const dialogRef = this.dialog.open(UpdateConcernComponent, {\n      width: '1600px',\n         data:{\n           product:this.concernDetail,\n            category,\n            id:this.id,\n            concern:this.concern_form\n         }});\n        dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n      console.log('The dialog was closed');\n      let tmpCartArray=this.db.getData();\n      console.log(tmpCartArray);\n      if(tmpCartArray)\n      {\n        this.tmp_array=[];\n        this.concernDetail=[];\n        this.showInCart(tmpCartArray);\n      }\n    });\n  }\n  tmp:any=false;\n  showInCart(orderArray:any=[])\n  {\n    console.log(orderArray);\n    for(let i=0;i<orderArray.length;i++)\n    {\n      this.addCart(orderArray[i],i);\n    }\n    console.log(this.tmp_array);\n  }\n  isEdit:boolean=false;\n  edit(){\n   this.isEdit=true;\n   console.log('isEdit',this.isEdit);\n   \n  }\n  selectedFile:any=[];\n  urlss:any=[];\n  insertDocument(data)\n  {\n\n         this.urlss = [];\n         this.selectedFile = [];\n\n        let files = data.target.files;\n        if (files) {\n          for (let file of files) {\n            let reader = new FileReader();\n            reader.onload = (e: any) => {\n              this.urlss.push(e.target.result);\n            }\n            reader.readAsDataURL(file);\n          }\n        }\n        console.log(this.urlss);\n        console.log(data.target.files.length);\n        for(var i=0; i<data.target.files.length; i++)\n        {\n            this.selectedFile.push(data.target.files[i]);\n        }\n\n        console.log(this.selectedFile);\n\n    \n  }\n  tmp_transport:any=[];\n  documentData:any={}\n  updateTransport(){\n    for(var i=0; i<this.selectedFile.length; i++)\n    {\n        this.documentData.action=1;\n        this.documentData.binaryData=this.urlss[i];\n        this.documentData.documentType=1;\n        this.documentData.documentName=this.selectedFile[i].name;\n        this.documentData.referenceId=0;\n        this.documentData.fileName=\"Document\"+i+\".pdf\",this.selectedFile[i];\n        this.documentData.iconName = \"DocumentIcon\"+i+\".pdf\",this.selectedFile[i];\n\n        console.log(this.documentData);\n\n    }\n\n    console.log('hii');\n    this.loader=true;\n    this.db.fetchData({\n      \"concernId\": this.id,\n      \"transporterName\": this.categorydetail.transporterName,\n      \"modeOfTransport\": this.categorydetail.modeOfTransport,\n      \"numberOfBoxes\": this.categorydetail.numberOfBoxes,\n      \"lrNumber\":  this.categorydetail.lrNumber,\n      \"document\":this.documentData,\n      \"eWayBillNumber\": this.categorydetail.eWayBillNumber\n    },'concern/transport').subscribe((response)=>{\n      console.log(response);\n      this.message=response['message'];\n      this.loader=false;\n      this.isEdit=false;\n      if(this.message==\"Transport Details updated successfully\")\n      {\n           this.concern_detail();\n           this.toast.openSucess('Transport Details updated successfully','');\n        \n      }\n      else\n      {\n          this.toast.openError('Something Went Wrong Please Try Again!!','');\n      };\n    })\n  }\n  \n \n  whuserId:any;\n  fmuserId:any;\n  productConcernsModel:any=[];\n  isTrue:boolean=false;\n  submit(status){\n    this.loader=true;    \n   if(status==2){\n    for(let i=0;i<this.tmp_detail.length;i++){\n      this.tmp_detail[i].verified=false;\n    }\n   }\n   else{\n    for(let i=0;i<this.tmp_detail.length;i++){\n      this.tmp_detail[i].verified=true;\n    }\n   }\n   if(this.user.data.role==16){\n     this.whuserId=this.user.data.userId;\n   }\n  else if(this.user.data.role==17){\n    this.fmuserId=this.user.data.userId;\n  }\n    if(this.categorydetail.concernType==1){\n      console.log(this.tmp_detail);\n      for(let i=0;i<this.tmp_detail.length;i++){\n        this.productConcernsModel.push(\n        {  \n        \"whVerifiedBy\": this.whuserId,\n        \"fmVerifiedBy\": this.fmuserId,\n        \"productConcernId\":this.tmp_detail[i].productConcernId,\n        \"concernId\": this.tmp_detail[i].concernId,\n        \"productId\":this.tmp_detail[i].productId,\n        \"segmentCode\":this.tmp_detail[i].segment,\n        \"category\":this.tmp_detail[i].category,\n        \"partNumber\":this.tmp_detail[i].partNumber,\n        \"application\": this.tmp_detail[i].application,\n        \"mfgDate\": this.tmp_detail[i].date,\n        \"invoiceNumber\": this.tmp_detail[i].invoice,\n        \"qunatity\":  this.tmp_detail[i].qty,\n        \"acceptedQuantity\": this.tmp_detail[i].acceptqty,\n        \"rejectedQuantity\": this.tmp_detail[i].rejectqty,\n        \"networkRemarks\":  this.tmp_detail[i].dealerremark,\n        \"salesRemarks\":  this.tmp_detail[i].salesremark,\n        \"whAcceptedQuantity\": this.tmp_detail[i].whacceptqty,\n        \"whRejectedQuantity\": this.tmp_detail[i].whrejectqty,\n        \"whRemarks\":this.tmp_detail[i].whremark,\n        \"rate\":  this.tmp_detail[i].price,\n        \"document\":this.tmp_detail[i].document,\n        \"netAmount\":  this.tmp_detail[i].amount, \n        \"verified\": this.tmp_detail[i].verified})\n       \n      }\n    this.db.fetchData({\"concernId\":this.id,\n    \"concernType\": this.categorydetail.concernType,\n    \"raisedByNetworkId\": this.categorydetail.raisedByNetworkId,\n    \"concernStatus\": status,\n    \"productConcernType\": this.categorydetail.productConcernType,\"productConcernsModel\":this.productConcernsModel},'concern/update').subscribe((response)=>{console.log(response);\n      this.message=response['message'];\n      this.loader=false;\n      if(this.message==\"Concern updated successfully\")\n      {\n      \n           this.toast.openSucess('Customer Concern status change successfully','');\n           if(status == 3) {\n            localStorage.setItem('concernListType', 'Forward');\n            this.router.navigate(['/concern-list']);\n           }\n           if(status == 4) {\n            localStorage.setItem('concernListType', 'Approval');\n            this.router.navigate(['/concern-list']);\n           }\n           if(status == 5) {\n            localStorage.setItem('concernListType', 'Approved');\n            this.router.navigate(['/concern-list']);\n           }\n           if(status == 6) {\n            localStorage.setItem('concernListType', 'Rejected');\n            this.router.navigate(['/concern-list']);\n           }\n           if(status == 7) {\n            localStorage.setItem('concernListType', 'Document');\n            this.router.navigate(['/concern-list']);\n           }\n           if(status == 8) {\n            localStorage.setItem('concernListType', 'WH');\n            this.router.navigate(['/concern-list']);\n           }\n\n      }\n      else\n      {\n          this.toast.openError('Something Went Wrong Please Try Again!!','');\n      };\n      for(let i=0;i<this.itemList.length;i++){\n        this.itemList[i].datacheck=false;\n        console.log(this.itemList[i].datacheck);\n      }\n    })\n  }\n    else{\n      this.concernReviews.push({\"concernId\": this.id ,\n      \"natureOfComplaint\": this.categorydetail.problem,\n      \"concernProductStatus\":this.categorydetail.status})\n      this.db.fetchData({\"concernId\": this.id,\"concernReviews\":this.concernReviews},'concern/review').subscribe((response)=>{console.log(response);\n        this.message=response['message'];\n        this.loader=false;\n        if(this.message==\"Concern updated successfully\")\n        {\n         \n             this.toast.openSucess('Customer Concern Updated Sucessfully','');\n          \n        }\n        else\n        {\n            this.toast.openError('Something Went Wrong Please Try Again!!','');\n        };\n      })\n     } \n  }\n  finance:any={};\n  updateFinance(){\n    console.log(this.finance);\n    this.db.fetchData({\n      \"concernId\": this.id,\n      \"fmVerifiedBy\": this.user.data.userId,\n      \"fmRemarks\": this.finance.fmremark,\n      \"creditNote\":this.finance.creditnote\n    },'concern/creditnote').subscribe((response)=>{console.log(response);\n      if(response['message']==\"Concern updated successfully\")\n      {\n        localStorage.setItem('concernListType', 'FM');\n        this.router.navigate(['/concern-list']);\n       }\n       else\n        {\n            this.toast.openError('Something Went Wrong Please Try Again!!','');\n        };\n    })\n  }\n  setFocus(form) {\n    console.log(\"hii\");\n    \n    for (var key in form.controls)\n     {\n      if (form.controls.hasOwnProperty(key)) {\n        if(form.controls[key].status=='INVALID')\n        {\n          if (isPlatformBrowser(this.platformId)) {\n                    $('#'+key).focus();\n                  }\n                  break;\n        }\n          console.log(key + \" -> \" + form.controls[key].status);\n      }\n  }\n    \n  }\n  MobileNumber(event: any) \n  {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n   processed(){\n    this.alrt.confirmation('Concern Status').then((result) => {\n      if(result)\n      {\n      console.log(this.id);\n      this.db.fetchData('','concern/processed'+'?concernId='+this.id).subscribe((response)=>{console.log(response);\n      })\n      }})\n   \n   }\n \n \n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\" style=\\\"min-width: auto;\\\">\\n      <img src=\\\"assets/img/concern.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Concern </h2>\\n        <p>Total {{concernList.length}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"tabs right-tab\\\">\\n      <ul>\\n        <!-- <li  *ngIf='user.data.userType==1'><a  [ngClass]=\\\"{'active':concernActive==true}\\\" (click)=\\\"concern_list('')\\\">Concern</a></li> -->\\n        <li *ngIf='user.data.userType==3'><a  [ngClass]=\\\"{'active':draftActive==true}\\\" (click)=\\\"concern_list(1)\\\">DRAFT</a></li>\\n        <li *ngIf='user.data.userType==3'><a [ngClass]=\\\"{'active':underActive==true}\\\" (click)=\\\"concern_list(2)\\\">UNDER VERIFICATION</a></li>\\n        <li  *ngIf='user.data.userType==3'><a [ngClass]=\\\"{'active':waitActive==true}\\\"  (click)=\\\"concern_list(3)\\\">WAITING FOR  APPROVAL</a></li>\\n        <li  *ngIf='user.data.userType==3'><a  [ngClass]=\\\"{'active':concernNumber==true}\\\" (click)=\\\"concern_list(4)\\\">WAITING FOR CONCERN NO.</a></li>\\n        <li *ngIf='user.data.userType==3'><a   [ngClass]=\\\"{'active':concernActive==true}\\\" (click)=\\\"concern_list(5)\\\">APPROVED</a></li>\\n        <li *ngIf='user.data.userType==3'><a [ngClass]=\\\"{'active':rejectActive==true}\\\"  (click)=\\\"concern_list(6)\\\">REJECTED</a></li>\\n        <li *ngIf='user.data.userType==2'><a [ngClass]=\\\"{'active':draftActive==true}\\\"  (click)=\\\"concern_list(1)\\\">DRAFT</a></li>\\n        <li  *ngIf='user.data.userType==2'><a  [ngClass]=\\\"{'active':underActive==true}\\\"  (click)=\\\"concern_list(2)\\\">PENDING VERIFICATION</a></li>\\n        <li  *ngIf='user.data.userType==2'><a [ngClass]=\\\"{'active':waitActive==true}\\\" (click)=\\\"concern_list(3)\\\">WAITING FOR APPROVAL</a></li>\\n        <li  *ngIf='user.data.userType==2'><a [ngClass]=\\\"{'active':concernNumber==true}\\\"  (click)=\\\"concern_list(4)\\\">WAITING FOR CONCERN NO.</a></li>\\n        <li *ngIf='user.data.userType==2'><a [ngClass]=\\\"{'active':concernActive==true}\\\" (click)=\\\"concern_list(5)\\\">APPROVED</a></li>\\n        <li  *ngIf='user.data.userType==2'><a  [ngClass]=\\\"{'active':rejectActive==true}\\\"  (click)=\\\"concern_list(6)\\\">REJECTED</a></li>\\n        <li  *ngIf='user.data.role==16'><a  [ngClass]=\\\"{'active':whPending==true}\\\"  (click)=\\\"concern_list(7)\\\">PENDING VERIFICATION</a></li>\\n        <li  *ngIf='user.data.role==16'><a  [ngClass]=\\\"{'active':whVerified==true}\\\"  (click)=\\\"concern_list(8)\\\">WAREHOUSE VERIFIED</a></li>\\n        <li  *ngIf='user.data.role==16'><a  [ngClass]=\\\"{'active':fmVerified==true}\\\"  (click)=\\\"concern_list(9)\\\">FINANCE VERIFIED</a></li>\\n        <li  *ngIf='user.data.role==17'><a  [ngClass]=\\\"{'active':whVerified==true}\\\"  (click)=\\\"concern_list(8)\\\">PENDING VERIFICATION</a></li>\\n        <li  *ngIf='user.data.role==17'><a  [ngClass]=\\\"{'active':fmVerified==true}\\\"  (click)=\\\"concern_list(9)\\\">FINANCE VERIFIED</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12 padding0\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head\\\">\\n                <table>\\n                  <tr >\\n                    <th class=\\\"w100\\\">Date</th>\\n                    <th class=\\\"w170\\\" *ngIf=\\\"status!=1\\\">CreatedBy </th>\\n                    <th *ngIf=\\\"user.data.userType!=3\\\">Company Name</th>\\n                    <th *ngIf=\\\"user.data.userType==1 || status==5\\\">Concern Number</th>\\n                    <th class=\\\"w140\\\">Concern Type</th>\\n                    <th class=\\\"w60 text-center\\\">Total Item</th>\\n                    <th class=\\\"w60 text-center\\\">Total Qty</th>\\n                    <th class=\\\"w80 text-right\\\">Amount</th>\\n                    <th class=\\\"w110\\\" *ngIf=\\\"(status==5 || status==7||status==8 || status==9) && (user.data.userType==3 ||user.data.userType==2 || user.data.userType==1)\\\">Status</th>\\n                    <th class=\\\"w80\\\" *ngIf=\\\"user.data.role==1\\\">Status</th>\\n                    <th class=\\\"w140\\\" *ngIf=\\\"status!=5 &&status!=7&&status!=8 &&status!=9 &&status!=1 && user.data.userType==3\\\">Assigned Sales</th>\\n                    <th class=\\\"w120 text-center\\\">Action</th>\\n                    <!-- <th class=\\\"w130\\\">&nbsp;</th> -->\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let concerns of tmp_concern\\\">\\n                    <td class=\\\"w100\\\">{{concerns.createdOn|date:'d MMM y'}}</td>\\n                    <td class=\\\"w170\\\" *ngIf=\\\"status!=1\\\">{{concerns.createdByName}}</td>\\n                    <td *ngIf=\\\"user.data.userType!=3\\\">{{concerns.networkEstablishment}}</td>\\n                    <td *ngIf=\\\"status==5 || user.data.userType==1\\\">\\n                      <a mat-button class=\\\"link-btn\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                        {{concerns.claimNo}}\\n                      </a>\\n                    </td>\\n                    \\n                    <td class=\\\"w140\\\">{{concerns.concernTypeName}}<span *ngIf=\\\"concerns.productConcernType==1\\\">/Pre-Fitment</span><span *ngIf=\\\"concerns.productConcernType==2\\\">/Post-Fitment</span></td>\\n                    <td class=\\\"w60 text-center\\\"><span *ngIf='concerns.concernTypeName==\\\"Product\\\"'>{{concerns.productConcerns.length}}</span><span *ngIf='concerns.concernTypeName==\\\"Other\\\"'>1</span></td>\\n                    <td class=\\\"w60 text-center\\\">{{concerns.totalQty}}</td>\\n                    <td class=\\\"w80 text-right\\\" >&#x20B9; {{concerns.totalAmount}}</td>\\n                    <!-- <td class=\\\"w150\\\"></td> -->\\n                    <td class=\\\"w110\\\" *ngIf=\\\"(status==5||status==7||status==8 ||status==9)&&(user.data.userType==3 ||user.data.userType==2 ||user.data.userType==1)\\\" >\\n                     <span *ngIf=\\\"concerns.concernStatus==5\\\">Approved</span>\\n                     <span *ngIf=\\\"concerns.concernStatus==7\\\">Document Updated</span>\\n                     <span *ngIf=\\\"concerns.concernStatus==8\\\">WareHouse Verified</span>\\n                     <span *ngIf=\\\"concerns.concernStatus==9\\\">Finace Verified</span>\\n                    </td>\\n                    <td class=\\\"w80\\\" *ngIf=\\\"user.data.role==1\\\" >\\n                      <span *ngIf=\\\"concerns.concernStatus==5\\\">Approved</span>\\n                      <span *ngIf=\\\"concerns.concernStatus==7\\\">Document Updated</span>\\n                      <span *ngIf=\\\"concerns.concernStatus==8\\\">WareHouse Verified</span>\\n                      <span *ngIf=\\\"concerns.concernStatus==9\\\">Finace Verified</span>\\n                     </td>\\n                    <td class=\\\"w140\\\" *ngIf=\\\"status!=5 &&status!=7&&status!=8 &&status!=9 && status!=1 && user.data.userType==3\\\" >\\n                      <span *ngFor=\\\"let sales of user.data.distributerNetwork.networkSalesUsers\\\">{{sales.salesUserName}}</span>\\n                    </td>\\n                    \\n                    <td class=\\\"w120\\\" >\\n                      <div class=\\\"action-btns default-action\\\" style=\\\"right: auto;\\\"> \\n                        <!-- <a *ngIf='status==3' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                          <i class=\\\"material-icons\\\">remove_red_eye</i> View</a> -->\\n                          \\n                          <a *ngIf='status==1' mat-button class=\\\"view\\\" routerLink=\\\"/draft-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                            <a *ngIf='status==5 && user.data.userType==3' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                              <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                              <a *ngIf='status==2 && user.data.userType==3' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                              <a *ngIf='status==3 && user.data.userType==3' mat-button class=\\\"view\\\" routerLink=\\\"/draft-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                                <a *ngIf='status==4 && user.data.userType==3' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                  <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                                  <a *ngIf='status==6 && user.data.userType==3' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                    <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                              <a *ngIf='status==2 && user.data.userType==2' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                                <a *ngIf='status==3 && user.data.userType==2' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                  <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                                <a *ngIf='status==4 && user.data.userType==2' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                  <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                                  <a *ngIf='(status==5||status==7||status==8||status==9) && user.data.userType==2' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                    <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                                    <a *ngIf='status==6 && user.data.userType==2' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                      <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                                      <a *ngIf='user.data.userType==1' mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                        <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n\\n                                        <a *ngIf='status==1'(click)=\\\"delete_concern(concerns.concernId)\\\" mat-button class=\\\"delete\\\">\\n                                          <i class=\\\"material-icons\\\">delete</i>Delete </a>\\n                              </div>    \\n                              \\n                              <!-- <a *ngIf='status==3' class=\\\"link-btn underline\\\" mat-button routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                View</a>\\n                                \\n                                <a *ngIf='status==1' class=\\\"link-btn underline\\\" mat-button  routerLink=\\\"/draft-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                  View</a>\\n                                  \\n                                  \\n                                  <a *ngIf='status==2 && user.data.userType==3' class=\\\"link-btn underline\\\" mat-button  routerLink=\\\"/draft-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                    View</a>\\n                                    \\n                                    \\n                                    <a *ngIf='status==2 && user.data.userType==2' class=\\\"link-btn underline\\\" mat-button routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                      View</a> -->\\n                                      \\n                                    </td>\\n                                    \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"iinear\\\">\\n                          <div class=\\\"figure\\\" matRipple>\\n                            <div class=\\\"header\\\">\\n                              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                            </div>\\n                            \\n                            <div class=\\\"description\\\">\\n                              <!-- <div class=\\\"cs-heading\\\">\\n                                <h2>No Complain List</h2>\\n                              </div> -->\\n                              <div class=\\\"img\\\">\\n                                <i class=\\\"material-icons\\\">error_outline</i>\\n                              </div>\\n                              <div class=\\\"psc\\\">\\n                                <p>data not available</p>\\n                                <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"fixed-multibtn-botm\\\" *ngIf='((user.data.userType==3) ||  (user.data.userType==2))'>\\n                    <ul>\\n                      <li><a matTooltip=\\\"Add New\\\" matRipple><i class=\\\"material-icons\\\" routerLink=\\\"/add-concern\\\" routerLinkActive=\\\"active\\\" >add</i></a></li>\\n                    </ul>\\n                  </div>\\n                  \\n                </div>\\n                \\n                <div class=\\\"h50\\\"></div>\"","\nimport { Component, OnInit, Renderer2  } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport {MatDialog} from '@angular/material';\nimport { DialogComponent } from 'src/app/dialog';\n// import { userInfo } from 'os';\n// import { userInfo } from 'os';\n@Component({\n  selector: 'app-concern-list',\n  templateUrl: './concern-list.component.html'\n})\nexport class ConcernListComponent implements OnInit {\nconcernList:any=[];\nstatus:any;\nuser:any=[];\nuserId:any;\nwhPending:boolean=false;\nwhVerified:boolean=false;\nfmVerified:boolean=false;\ndraftActive:boolean=false;\nconcernActive:boolean=false;\nrejectActive:boolean=false;\nunderActive:boolean=false;\nwaitActive:boolean=false;\nconcernNumber:boolean=false;\ntmp_concern:any=[];\nloader:any=false\ndiv:any=false;\n  constructor(public db:ConstantService,public router:Router,public dialog:DialogComponent,public route:ActivatedRoute,public toast:SnackBarOverview,public dia:MatDialog\n  ) {\n        this.user = JSON.parse(localStorage.getItem('user')) || [];\n        console.log(this.user);\n        this.userId = this.user.data.userId;\n\n\n        const concernListType = localStorage.getItem('concernListType') || '';\n        console.log(concernListType);  \n        \n      if(this.user.data.userType==2 && concernListType==\"\"){\n           console.log(\"sales\"); \n           this.concern_list(2);\n         }  \n      else if(this.user.data.userType==3 && concernListType==\"\"){\n          console.log(\"Dist\"); \n          this.concern_list(1);\n        }  \n    \n        else if(this.user.data.role==16 && concernListType==\"\"){\n          this.concern_list(7);\n        }  \n        else if(this.user.data.role==17 && concernListType==\"\"){\n          this.concern_list(8);\n        }  \n        else if(this.user.data.userType==1 && concernListType==\"\"){\n          console.log(\"admin\"); \n          this.concern_list(20);\n        }  \n      else if (concernListType == 'Draft') {\n          this.concern_list(1);\n          localStorage.removeItem('concernListType');\n                } \n      else if (concernListType == 'Submit') {\n          this.concern_list(2);\n          localStorage.removeItem('concernListType');\n                  } \n      else if (concernListType == 'Forward') {\n          this.concern_list(3);\n          localStorage.removeItem('concernListType');\n                } \n      else if (concernListType == 'Approval') {\n        this.concern_list(4);\n        localStorage.removeItem('concernListType');\n             } \n    else if (concernListType == 'Approved') {\n      this.concern_list(5);\n      localStorage.removeItem('concernListType');\n      } \n  else if (concernListType == 'Rejected') {\n    this.concern_list(6);\n    localStorage.removeItem('concernListType');\n} \nelse if (concernListType == 'Document'&& (this.user.data.userType==3 || this.user.data.userType==2)) {\n  this.concern_list(5);\n  localStorage.removeItem('concernListType');\n } \n else if (concernListType == 'Document' && this.user.data.userType==1) {\n  this.concern_list(7);\n  localStorage.removeItem('concernListType');\n } \n else if (concernListType == 'WH'&& this.user.data.userType==1) {\n  this.concern_list(8);\n  localStorage.removeItem('concernListType');\n } \n else if (concernListType == 'WH'&& (this.user.data.userType==3 || this.user.data.userType==2)) {\n  this.concern_list(5);\n  localStorage.removeItem('concernListType');\n } \n else if (concernListType == 'FM' && this.user.data.userType==1) {\n  this.concern_list(9);\n  localStorage.removeItem('concernListType');\n } \n else if (concernListType == 'FM'&& (this.user.data.userType==3 || this.user.data.userType==2)) {\n  this.concern_list(5);\n  localStorage.removeItem('concernListType');\n } \n    \n  }\n\n\n  ngOnInit() {\n\n  }\n  concernStatuses:any=[];\n  msg:any;\n  message:any;\n  concern_list(status){\n    this.concernStatuses=[];\n    this.status=status;\n    this.loader=true;\n    this.div=false;\n    this.tmp_concern = [];\n\n    console.log(status);\n    if(status==1){\n      this.whPending=false;\n      this.status=status;\n      this.tmp_concern=[];\n      this.rejectActive=false;\n      this.waitActive=false;\n      this.underActive=false;\n      this.concernActive=false;\n      this.concernNumber=false;\n      this.whVerified=false;\n      this.fmVerified=false;\n      console.log(this.draftActive);\n      \n       this.concernStatuses.push(status);\n          this.db.fetchData( {\"createdBy\":this.userId,\"currentPage\": 1,  \"concernStatuses\": this.concernStatuses,\n          \"pageSize\": 500},'concern/list').subscribe((response)=>{\n\n            console.log(response)\n            this.draftActive=true;\n            this.loader=false;\n            if(response['status']=='Success')\n            {\n          \n              this.div=false;\n                  this.concernList=response['data'];\n                  this.tmp_concern=this.concernList;\n                  for(let i=0;i<this.tmp_concern.length;i++){\n                    this.tmp_concern[i].totalQty=0;\n                    this.tmp_concern[i].totalAmount=0;\n                    if(this.tmp_concern[i].concernType==1){\n                    for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                      console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                      this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                      this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                    }\n                  }\n                  }\n            }\n\n\n            if(response['status']=='Failed')\n            {\n                  this.div=true;\n                  this.concernList=[];\n                  this.tmp_concern=this.concernList;\n            }\n\n            console.log(this.concernList);\n            console.log(this.tmp_concern);\n        })\n\n} else if(status==2) {\n    this.status=status;\n     this.tmp_concern=[];\n     this.whPending=false;\n     this.whVerified=false;\n     this.fmVerified=false;\n       this.waitActive=false;\n       this.rejectActive=false;\n       this.draftActive=false;\n       this.concernActive=false;\n        this.concernNumber=false;\n        console.log(this.underActive);\n        this.loader=true;\n        this.concernStatuses.push(status)\n        this.db.fetchData( {\"currentPage\": 1,\"concernStatuses\": this.concernStatuses,\n        \"pageSize\": 500},'concern/list').subscribe((response)=>{\n\n              console.log(response)\n              this.underActive=true;\n              this.loader=false;\n              if(response['status']=='Success')\n              { \n                \n                        this.div=false;\n                        this.concernList=response['data'];\n                        this.tmp_concern=this.concernList\n                        console.log(this.concernList);\n                        console.log(this.tmp_concern);\n\n                        for(let i=0;i<this.tmp_concern.length;i++) {\n\n                              this.tmp_concern[i].totalQty=0;\n\n                              this.tmp_concern[i].totalAmount=0;\n\n                              if(this.tmp_concern[i].concernType==1){\n                                    for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                                      console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                                      this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                                      this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                                    }\n                              }\n                        }\n              }\n\n              if(response['status']=='Failed')\n              {\n                  this.div=true;\n                  this.concernList=[];\n                  this.tmp_concern=this.concernList\n              }\n            console.log(this.concernList);\n            console.log(this.tmp_concern);\n      })\n\n  }\n  else if(status==3) {\n    this.status=status;\n    this.tmp_concern=[];\n    this.whPending=false;\n    this.whVerified=false;\n    this.fmVerified=false;\n    this.underActive=false;\n    this.rejectActive=false;\n    this.draftActive=false;\n    this.concernActive=false;\n    this.concernNumber=false;\n    this.waitActive=true;\n    this.loader=true;\n \n    this.concernStatuses.push(status)\n    this.db.fetchData( {\"currentPage\": 1,\n    \"pageSize\": 500,\"concernStatuses\": this.concernStatuses},'concern/list').subscribe((response)=>{\n\n          console.log(response)\n          this.loader=false;\n          if(response['status']=='Success')\n          { \n            \n                    this.div=false;\n                    this.concernList=response['data'];\n                    this.tmp_concern=this.concernList\n                    console.log(this.concernList);\n                    console.log(this.tmp_concern);\n\n                    for(let i=0;i<this.tmp_concern.length;i++) {\n\n                          this.tmp_concern[i].totalQty=0;\n\n                          this.tmp_concern[i].totalAmount=0;\n\n                          if(this.tmp_concern[i].concernType==1){\n                                for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                                  console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                                  this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                                  this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                                }\n                          }\n                    }\n          }\n\n          if(response['status']=='Failed')\n          {\n              this.div=true;\n              this.concernList=[];\n              this.tmp_concern=this.concernList\n          }\n        console.log(this.concernList);\n        console.log(this.tmp_concern);\n  })\n\n}\n  else if(status==4) {\n    this.status=status;\n    this.tmp_concern=[];\n    this.whPending=false;\n    this.underActive=false;\n    this.rejectActive=false;\n    this.draftActive=false;\n    this.concernActive=false;\n    this.whVerified=false;\n    this.fmVerified=false;\n       this.waitActive=false;\n       this.concernNumber=true;\n    this.loader=true;\n    this.concernStatuses.push(status)\n    this.db.fetchData( {\"currentPage\": 1,\"concernStatuses\": this.concernStatuses,\n    \"pageSize\": 500},'concern/list').subscribe((response)=>{\n\n          console.log(response)\n          this.loader=false;\n          if(response['status']=='Success')\n          { \n            \n                    this.div=false;\n                    this.concernList=response['data'];\n                    this.tmp_concern=this.concernList\n                    console.log(this.concernList);\n                    console.log(this.tmp_concern);\n\n                    for(let i=0;i<this.tmp_concern.length;i++) {\n\n                          this.tmp_concern[i].totalQty=0;\n\n                          this.tmp_concern[i].totalAmount=0;\n\n                          if(this.tmp_concern[i].concernType==1){\n                                for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                                  console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                                  this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                                  this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                                }\n                          }\n                    }\n          }\n\n          if(response['status']=='Failed')\n          {\n              this.div=true;\n              this.concernList=[];\n              this.tmp_concern=this.concernList\n          }\n        console.log(this.concernList);\n        console.log(this.tmp_concern);\n  })\n\n}\nelse if(status==5) {\n  this.status=status;\n  this.tmp_concern=[];\n  this.whPending=false;\n  this.rejectActive=false;\n  this.waitActive=false;\n  this.underActive=false;\n  this.draftActive=false;\n  this.concernNumber=false;\n  this.concernActive=true;\n  this.whVerified=false;\n  this.fmVerified=false;\n  this.loader=true;\n \n  this.concernStatuses=[5,7,8,9]\n  this.db.fetchData( {\"currentPage\": 1,\"concernStatuses\": this.concernStatuses,\n  \"pageSize\": 500},'concern/list').subscribe((response)=>{\n\n        console.log(response)\n        this.loader=false;\n        if(response['status']=='Success')\n        { \n          \n                  this.div=false;\n                  this.concernList=response['data'];\n                  this.tmp_concern=this.concernList\n                  console.log(this.concernList);\n                  console.log(this.tmp_concern);\n\n                  for(let i=0;i<this.tmp_concern.length;i++) {\n\n                        this.tmp_concern[i].totalQty=0;\n\n                        this.tmp_concern[i].totalAmount=0;\n\n                        if(this.tmp_concern[i].concernType==1){\n                              for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                                console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                                this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                                this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                              }\n                        }\n                  }\n        }\n\n        if(response['status']=='Failed')\n        {\n            this.div=true;\n            this.concernList=[];\n            this.tmp_concern=this.concernList\n        }\n      console.log(this.concernList);\n      console.log(this.tmp_concern);\n})\n\n}\nelse if(status==6) {\n  this.status=status;\n  this.tmp_concern=[];\n  this.whPending=false;\n  this.whVerified=false;\n  this.fmVerified=false;\n  this.waitActive=false;\n  this.underActive=false;\n  this.draftActive=false;\n  this.concernActive=false;\n  this.concernNumber=false;\n  this.rejectActive=true;\n\n  this.loader=true;\n  this.concernStatuses.push(status)\n  this.db.fetchData( {\"currentPage\": 1,\"concernStatuses\": this.concernStatuses,\n  \"pageSize\": 500},'concern/list').subscribe((response)=>{\n\n        console.log(response)\n        this.loader=false;\n        if(response['status']=='Success')\n        { \n          \n                  this.div=false;\n                  this.concernList=response['data'];\n                  this.tmp_concern=this.concernList\n                  console.log(this.concernList);\n                  console.log(this.tmp_concern);\n\n                  for(let i=0;i<this.tmp_concern.length;i++) {\n\n                        this.tmp_concern[i].totalQty=0;\n\n                        this.tmp_concern[i].totalAmount=0;\n\n                        if(this.tmp_concern[i].concernType==1){\n                              for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                                console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                                this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                                this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                              }\n                        }\n                  }\n        }\n\n        if(response['status']=='Failed')\n        {\n            this.div=true;\n            this.concernList=[];\n            this.tmp_concern=this.concernList\n        }\n      console.log(this.concernList);\n      console.log(this.tmp_concern);\n})\n\n}\nelse if(status==7)  {\n  this.tmp_concern=[];\n \n  this.whVerified=false;\n  this.fmVerified=false;\n  this.rejectActive=false;\n  this.waitActive=false;\n  this.draftActive=false;\n  this.concernActive=false;\n  this.concernNumber=false;\n  this.underActive=false;\n  this.whPending=true;\n  this.loader=true;\n  this.concernStatuses.push(status);\n \n  this.db.fetchData( {\"currentPage\": 1,\"concernStatuses\": this.concernStatuses,\n  \"pageSize\": 500},'concern/list').subscribe((response)=>{\n\n        console.log(response)\n        this.loader=false;\n        if(response['status']=='Success')\n        { \n          \n                  this.div=false;\n                  this.concernList=response['data'];\n                  this.tmp_concern=this.concernList\n                  console.log(this.concernList);\n                  console.log(this.tmp_concern);\n\n                  for(let i=0;i<this.tmp_concern.length;i++) {\n\n                        this.tmp_concern[i].totalQty=0;\n\n                        this.tmp_concern[i].totalAmount=0;\n\n                        if(this.tmp_concern[i].concernType==1){\n                              for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                                console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                                this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                                this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                              }\n                        }\n                  }\n        }\n\n        if(response['status']=='Failed')\n        {\n            this.div=true;\n            this.concernList=[];\n            this.tmp_concern=this.concernList\n        }\n      console.log(this.concernList);\n      console.log(this.tmp_concern);\n})\n\n}\nelse if(status==8)  {\n  this.tmp_concern=[];\n  this.whVerified=true;\n  this.whPending=false;;\n  this.fmVerified=false;\n  this.rejectActive=false;\n  this.waitActive=false;\n  this.underActive=false;\n  this.draftActive=false;\n  this.concernActive=false;\n  this.concernNumber=false;\n  this.loader=true;\n  this.concernStatuses.push(status);\n \n  this.db.fetchData( {\"currentPage\": 1,\"concernStatuses\": this.concernStatuses,\n  \"pageSize\": 500},'concern/list').subscribe((response)=>{\n\n        console.log(response)\n        this.loader=false;\n        if(response['status']=='Success')\n        { \n          \n                  this.div=false;\n                  this.concernList=response['data'];\n                  this.tmp_concern=this.concernList\n                  console.log(this.concernList);\n                  console.log(this.tmp_concern);\n\n                  for(let i=0;i<this.tmp_concern.length;i++) {\n\n                        this.tmp_concern[i].totalQty=0;\n\n                        this.tmp_concern[i].totalAmount=0;\n\n                        if(this.tmp_concern[i].concernType==1){\n                              for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                                console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                                this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                                this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                              }\n                        }\n                  }\n        }\n\n        if(response['status']=='Failed')\n        {\n            this.div=true;\n            this.concernList=[];\n            this.tmp_concern=this.concernList\n        }\n      console.log(this.concernList);\n      console.log(this.tmp_concern);\n})\n\n}\nelse if(status==9)  {\n  this.tmp_concern=[];\n  this.whVerified=false;\n  this.fmVerified=true;\n  this.rejectActive=false;\n  this.waitActive=false;\n  this.underActive=false;\n  this.draftActive=false;\n  this.concernActive=false;\n  this.whPending=false;\n  this.concernNumber=false;\n  this.loader=true;\n  this.concernStatuses.push(status);\n \n  this.db.fetchData( {\"currentPage\": 1,\"concernStatuses\": this.concernStatuses,\n  \"pageSize\": 500},'concern/list').subscribe((response)=>{\n\n        console.log(response)\n        this.loader=false;\n        if(response['status']=='Success')\n        { \n          \n                  this.div=false;\n                  this.concernList=response['data'];\n                  this.tmp_concern=this.concernList\n                  console.log(this.concernList);\n                  console.log(this.tmp_concern);\n\n                  for(let i=0;i<this.tmp_concern.length;i++) {\n\n                        this.tmp_concern[i].totalQty=0;\n\n                        this.tmp_concern[i].totalAmount=0;\n\n                        if(this.tmp_concern[i].concernType==1){\n                              for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                                console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                                this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                                this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                              }\n                        }\n                  }\n        }\n\n        if(response['status']=='Failed')\n        {\n            this.div=true;\n            this.concernList=[];\n            this.tmp_concern=this.concernList\n        }\n      console.log(this.concernList);\n      console.log(this.tmp_concern);\n})\n\n}\nelse if(status==20){\n  this.tmp_concern=[];\n  this.whVerified=false;\n  this.fmVerified=false;\n  this.rejectActive=false;\n  this.waitActive=false;\n  this.underActive=false;\n  this.draftActive=false;\n  this.concernActive=false;\n  this.whPending=false;\n  this.concernNumber=false;\n  this.loader=true;\n  this.concernStatuses=[5,6,7,8,9]\n  this.db.fetchData( {\"currentPage\": 1,\"concernStatuses\": this.concernStatuses,\n  \"pageSize\": 500},'concern/list').subscribe((response)=>{\n\n        console.log(response)\n        this.loader=false;\n        if(response['status']=='Success')\n        { \n          \n                  this.div=false;\n                  this.concernList=response['data'];\n                  this.tmp_concern=this.concernList\n                  console.log(this.concernList);\n                  console.log(this.tmp_concern);\n\n                  for(let i=0;i<this.tmp_concern.length;i++) {\n\n                        this.tmp_concern[i].totalQty=0;\n\n                        this.tmp_concern[i].totalAmount=0;\n\n                        if(this.tmp_concern[i].concernType==1){\n                              for(let j=0;j<this.tmp_concern[i].productConcerns.length;j++){\n                                console.log(this.tmp_concern[i].productConcerns[j].netAmount, this.tmp_concern[i].productConcerns[j].qunatity);\n                                this.tmp_concern[i].totalQty= this.tmp_concern[i].totalQty+this.tmp_concern[i].productConcerns[j].qunatity;\n                                this.tmp_concern[i].totalAmount= this.tmp_concern[i].totalAmount+this.tmp_concern[i].productConcerns[j].netAmount;\n                              }\n                        }\n                  }\n        }\n\n        if(response['status']=='Failed')\n        {\n            this.div=true;\n            this.concernList=[];\n            this.tmp_concern=this.concernList\n        }\n      console.log(this.concernList);\n      console.log(this.tmp_concern);\n})\n\n}\n  }\n  \n  delete_concern(id){\n    console.log(id);\n    this.msg=\"Concern\"\n    this.dialog.delete(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.db.fileData(id,'concern/delete/').subscribe((response)=>{\n            console.log(response);\n            this.message=response['message'];\n            if(this.message=\"Concern removed successfully\")\n            {\n              this.toast.openSucess('Concern removed successfully','');\n            }\n            else{\n              this.toast.openError('Something Went Wrong Please Try Again!!','');\n            }\n            this.concern_list(1);\n          });\n      }\n    });\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\"  *ngIf=\\\"draftDetail.concernStatus==3\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n        <div class=\\\"middle-container\\\">\\n          <div class=\\\"page-heading\\\">\\n            <div class=\\\"heading-text bc-space\\\">\\n              <div class=\\\"back-btn\\\">\\n                <a mat-button routerLink=\\\"/concern-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n              </div>\\n              <h2>{{categorydetail.networkEstablishment}}<a style=\\\"font-size: 12px; color: #123dd6; margin-left: 10px; text-decoration: underline;\\\"  class=\\\"name\\\" routerLink=\\\"/distribution-detail/{{categorydetail.raisedByNetworkId}}\\\" routerLinkActive=\\\"active\\\">View Detail</a></h2>\\n              <p>Distributor</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"container-outer\\\">\\n          <div class=\\\"container\\\" >\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col s12\\\">\\n                    <div class=\\\"details-info\\\">\\n                      <div class=\\\"basic-details\\\">\\n                        <div class=\\\"col s12 cs-figure padding0\\\">\\n                          <ul>\\n                            <li style=\\\"width: 210px; min-width: 210px;\\\">\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Concern Date</span>\\n                                  <p> {{categorydetail.createdOn | date:'d, MMMM , y'}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Created by</span>\\n                                  <p>{{categorydetail.createdByName}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li *ngIf=\\\"categorydetail.claimNo\\\">\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Concern Number</span>\\n                                  <p>{{categorydetail.claimNo}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li>\\n                                <div class=\\\"outer\\\">\\n                                  <div class=\\\"inner\\\">\\n                                    <span>Concern Type</span>\\n                                    <p>{{categorydetail.concernTypeName}}</p>\\n                                  </div>\\n                                </div>\\n                              </li>\\n                              <li>\\n                                <div class=\\\"outer\\\">\\n                                  <div class=\\\"inner\\\">\\n                                    <span>Status</span>\\n                                    <p *ngIf=\\\"categorydetail.concernStatus== '2'\\\">UNDER VERIFICATION</p>\\n                                    <p *ngIf=\\\"categorydetail.concernStatus== '3'\\\">WAITING FOR DISTRIBUTOR APPROVAL</p>\\n                                    <p *ngIf=\\\"categorydetail.concernStatus== '4'\\\">Proceed For Approvel</p>\\n                                    <p *ngIf=\\\"categorydetail.concernStatus== '5'\\\">Approved</p>\\n                                    <p *ngIf=\\\"categorydetail.concernStatus== '6'\\\">Rejected</p>\\n                                    <p *ngIf=\\\"categorydetail.concernStatus== '7'\\\">Transporter Deatail</p>\\n                                  </div>\\n                                </div>\\n                              </li> \\n                            \\n                          </ul>\\n\\n                          <ul class=\\\"mt15\\\">\\n                              <li>\\n                                  <div class=\\\"outer\\\">\\n                                    <div class=\\\"inner\\\">\\n                                      <span>Total Item</span>\\n                                      <p>{{totalItems}}</p>\\n                                    </div>\\n                                  </div>\\n                                  </li>\\n                              \\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Total Qty</span>\\n                                  <p>{{categorydetail.totalQty}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li *ngIf=\\\"categorydetail.concernType==1\\\">\\n                                <div class=\\\"outer\\\">\\n                                  <div class=\\\"inner\\\">\\n                                    <span>Product Type</span>\\n                                    <p>{{categorydetail.productConcernTypeName}}</p>\\n                                  </div>\\n                                </div>\\n                              </li>\\n                           \\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Total Amount</span>\\n                                  <p>{{categorydetail.totalAmount}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li *ngIf=\\\"user.data.userType==3\\\">\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Assigned Sales</span>\\n                                  <p><span *ngFor=\\\"let sales of user.data.distributerNetwork.networkSalesUsers\\\">{{sales.salesUserName}}</span></p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                          </ul>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"sprate-box pt0\\\">   \\n                <div class=\\\"row pt15 pb15\\\"  >\\n                  <div  class=\\\"col s4 empty\\\">\\n                      <div class=\\\"multi-all-select\\\">\\n                          <label>Segment</label>\\n                          <ng-multiselect-dropdown\\n                          [placeholder]=\\\"'Select Segment'\\\"\\n                          [data]=\\\"segmentList\\\"\\n                          [(ngModel)]=\\\"data.segment\\\"\\n                          name=\\\"segment\\\"\\n                          #segment=\\\"ngModel\\\"\\n                          [settings]=\\\"dropdownSettings1\\\"\\n                          (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                          >\\n                          \\n                      </ng-multiselect-dropdown>\\n                  </div>\\n              </div>\\n              <div class=\\\"col s4 empty\\\">\\n                  <div class=\\\"multi-all-select\\\">\\n                      <label>Category</label>\\n                      <ng-multiselect-dropdown\\n                      [placeholder]=\\\"'Select Category'\\\"\\n                      [data]=\\\"categorylist\\\"\\n                      [(ngModel)]=\\\"data.category\\\"\\n                      name=\\\"category\\\"\\n                      #category=\\\"ngModel\\\"\\n                      [settings]=\\\"dropdownSettings2\\\"\\n                      (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                      >\\n                  </ng-multiselect-dropdown>\\n              </div>\\n          </div>     \\n          <div   class=\\\"col s4 empty\\\">\\n              <div class=\\\"multi-all-select\\\">\\n                  <label>Product Name</label>\\n                  <ng-multiselect-dropdown\\n                  [placeholder]=\\\"'Select Product'\\\"\\n                  (onDeSelect)=\\\"onItemDeSelect($event,data.segment,data.category,data.product)\\\"\\n                  [data]=\\\"product_list\\\"\\n                  [(ngModel)]=\\\"data.product\\\"\\n                  name=\\\"product\\\"\\n                  #product=\\\"ngModel\\\"\\n                  [settings]=\\\"dropdownSettings3\\\"\\n                  (onSelect)=\\\"getCartProductList($event,data.segment,data.category,data.product)\\\">\\n              </ng-multiselect-dropdown>\\n          </div>\\n      </div>  \\n     </div>\\n     <div  *ngIf=\\\"productlist && productlist.length > 0\\\" class=\\\"col s12 padding0\\\">\\n      <div class=\\\"heading-bg left-right-15\\\">\\n          <h2>PRODUCT INFORMATION</h2>\\n      </div>\\n      \\n      \\n      <div class=\\\"cs-table left-right-15\\\">\\n          <div class=\\\"table-head\\\" [ngClass]=\\\"{ 'pr28' : productlist.length>6 }\\\" >\\n              \\n              <table>\\n                  <tr>\\n                                  \\n                   \\n                      <th class=\\\"w40\\\">&nbsp;</th>\\n                      <th>Part Number</th>\\n                      <th class=\\\"w130\\\">Product Name</th>\\n                      <th class=\\\"w130\\\">Application No</th>\\n                      <th class=\\\"w100\\\">Image</th>\\n                      <th class=\\\"w60 text-center\\\">Qty<span>*</span></th>\\n                      <th class=\\\"w110\\\">MFG Date.<span *ngIf='draftDetail.productConcernType==1'>*</span></th>\\n                      <th class=\\\"w120\\\">Invoice No.<span *ngIf='draftDetail.productConcernType==1'>*</span></th>\\n                      <th class=\\\"w70 text-right\\\">Rate</th>\\n                      <th class=\\\"w80 text-right\\\">Amount</th>\\n                      <th class=\\\"w80\\\">Action</th>\\n                  </tr>\\n              </table>\\n          </div>\\n          \\n          \\n          <div class=\\\"table-head bdrt\\\" [ngClass]=\\\"{ 'pr28' : productlist.length>6 }\\\" >\\n              <table>\\n                  <tr>\\n                      <th class=\\\"w40\\\"></th>\\n                      <th>\\n                          <div class=\\\"th-search-acmt\\\">\\n                              <mat-form-field>\\n                                  <input type=\\\"text\\\"  name=\\\"search\\\" [(ngModel)]=\\\"productName.search\\\" (input)=\\\"productSearchByNumber()\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\n                                  <mat-autocomplete #auto1=\\\"matAutocomplete\\\" >\\n                                      \\n                                  </mat-autocomplete>\\n                                  \\n                              </mat-form-field> \\n                          </div>\\n                      </th>\\n                      <th class=\\\"w130\\\">&nbsp; </th>\\n                      <th class=\\\"w130\\\">&nbsp; </th>\\n                      <th class=\\\"w100\\\">&nbsp;</th>\\n                      <th class=\\\"w60\\\">&nbsp;</th>\\n                      <th class=\\\"w110\\\">&nbsp;</th>\\n                      <th class=\\\"w120\\\">&nbsp;</th>\\n                      <th class=\\\"w70\\\">&nbsp;</th>\\n                      <th class=\\\"w80\\\">&nbsp;</th>\\n                      <th class=\\\"w80\\\">&nbsp;</th>\\n                  </tr>\\n              </table>\\n          </div>\\n          \\n          <div class=\\\"table-container height-scroll\\\">\\n              <div class=\\\"table-content shadow-none\\\">\\n                  <table>\\n                      <tr *ngFor=\\\"let product of productlist;let index=index\\\">\\n                          <td class=\\\"w40\\\"><span *ngIf='product.qty'><mat-checkbox name=\\\"{{check+index}}\\\" [(ngModel)]=\\\"product.datacheck\\\"  (change)=\\\"select(product,index)\\\" >&nbsp; </mat-checkbox></span></td>\\n                          <td >{{product.partNumber}}</td>\\n                          <td class=\\\"w130\\\">{{product.productName}}</td>\\n                          <td class=\\\"w130\\\">EF5678</td>\\n                          <td class=\\\"w100\\\">\\n                            <a class=\\\"link-btn\\\" *ngIf=\\\"!product.isImage\\\">\\n                                <label class=\\\"cs-file\\\">\\n                                    Add Image\\n                                    <input type=\\\"file\\\" (change)=\\\"insertImage($event,product.productName,index)\\\" style=\\\"display: none;\\\">\\n                                </label>\\n                            </a>\\n                            <a *ngIf=\\\"product.isImage\\\" class=\\\"link-btn\\\" (click)=\\\"openImageDialog(index)\\\"> View Image </a>\\n                        </td>\\n                          <td class=\\\"w60 text-center\\\" >\\n                              <div class=\\\"td-input\\\">\\n                                  <input type=\\\"number\\\" (input)=\\\"calculateAmount(product.qty,index)\\\"  (keyup.enter)=\\\"addProduct('checkIndividual')\\\" name=\\\"qty\\\" #qty=\\\"ngModel\\\" [(ngModel)]=\\\"product.qty\\\" [value]=\\\"product.qty\\\" required min=\\\"1\\\" >\\n                              </div>\\n                              <p *ngIf='isCart==true && product.datacheck==true && product.qty==\\\"\\\"'>required</p>\\n                          </td>\\n                          <!--Pre-Fitment Field-->\\n                          <td class=\\\"w110\\\" *ngIf='draftDetail.productConcernType==1'>\\n                              <div class=\\\"td-input\\\" style=\\\"display: flex; align-items: center;\\\">\\n                                  <input matInput [matDatepicker]=\\\"picker\\\"   placeholder=\\\"Choose a date\\\" name=\\\"{{date+index}}\\\" [(ngModel)]=\\\"product.date\\\"  #date=\\\"ngModel\\\"   [max]=\\\"maxDateValue\\\" required>\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #picker></mat-datepicker>\\n                              </div>\\n                              <p *ngIf='isCart&&!product.date&&product.datacheck'>required</p>\\n                          </td>\\n                          <td class=\\\"w120\\\" *ngIf='draftDetail.productConcernType==1'> \\n                              <div class=\\\"td-input\\\">\\n                                  <input type=\\\"text\\\"    (keyup.enter)=\\\"addProduct('checkIndividual')\\\" name=\\\"{{invoice+index}}\\\" #invoice=\\\"ngModel\\\" [(ngModel)]=\\\"product.invoice\\\" required>\\n                              </div>\\n                              <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p>\\n                          </td>\\n                          \\n                          <!--Pre-Fitment Field-->\\n                          <!--Post-Fitment Field-->\\n                          <td class=\\\"w110\\\" *ngIf='draftDetail.productConcernType==2'>\\n                              <div class=\\\"td-input\\\" style=\\\"display: flex; align-items: center;\\\">\\n                                  <input matInput [matDatepicker]=\\\"picker\\\"   placeholder=\\\"Choose a date\\\" name=\\\"{{date+index}}\\\" [(ngModel)]=\\\"product.date\\\"  #date=\\\"ngModel\\\"   [max]=\\\"maxDateValue\\\" required>\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #picker></mat-datepicker>\\n                              </div>\\n                          </td>\\n                          <td class=\\\"w120\\\" *ngIf='draftDetail.productConcernType==2'> \\n                              <div class=\\\"td-input\\\">\\n                                  <input type=\\\"text\\\"    (keyup.enter)=\\\"addProduct('checkIndividual')\\\" name=\\\"{{invoice+index}}\\\" #invoice=\\\"ngModel\\\" [(ngModel)]=\\\"product.invoice\\\" required>\\n                              </div>\\n                              \\n                          </td>\\n                          \\n                          <!--Post-Fitment Field-->\\n                          <td class=\\\"w70 text-right\\\">&#8377; {{product.priceUnit}}</td>\\n                          <td class=\\\"w80 text-right\\\">&#8377; {{product.amount}}</td>\\n                          <td class=\\\"w80\\\">\\n                              <a *ngIf=\\\"product.qty!=''\\\"class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons green-clr\\\"(click)=\\\"addProduct('checkIndividual')\\\">save</i></a>\\n                          </td>\\n                          \\n                      </tr>\\n                  </table>\\n              </div>\\n              <div class=\\\"data-not-available\\\" *ngIf=\\\"productlist.length==0\\\">\\n                  <div class=\\\"outer\\\">\\n                      <div class=\\\"iinear\\\">\\n                          <div class=\\\"figure\\\" matRipple>\\n                              <div class=\\\"header\\\">\\n                                  <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                              </div>\\n                              \\n                              <div class=\\\"description\\\">\\n                                  <div class=\\\"cs-heading\\\">\\n                                      <h2>No Product</h2>\\n                                  </div>\\n                                  <div class=\\\"img\\\">\\n                                      <i class=\\\"material-icons\\\">error_outline</i>\\n                                  </div>\\n                                  <div class=\\\"psc\\\">\\n                                      <p>data not available</p>\\n                                      \\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n      <div *ngIf=\\\"add\\\" class=\\\"cs-btn mt20 text-right\\\">\\n          <div class=\\\"in-btn\\\">\\n              <button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\"  (click)=\\\"addProduct('checkk')\\\" >Add to Cart</button>\\n          </div>\\n      </div>\\n  </div>\\n   \\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s12\\\">\\n                <div class=\\\"sprate-box   padding0\\\" *ngIf=\\\"categorydetail.concernType==1\\\">\\n                  <div class=\\\"top-heading\\\">\\n                    <h2>Item List</h2>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"cs-table\\\">\\n                      <div class=\\\"table-head\\\">\\n                        <table> \\n                          <tr>\\n                            <th class=\\\"padding0\\\">\\n                              <table>\\n                                <tr>\\n                                  <th>Category</th>\\n                                  <th class=\\\"w110 text-center\\\">Total Items</th>\\n                                  <th class=\\\"w110 text-center\\\">Total QTY.</th>\\n                                  <th class=\\\"w130 text-right\\\">Amount</th>\\n                                </tr>\\n                              </table>\\n                            </th>\\n                          </tr>\\n                        </table>\\n                      </div>\\n                      \\n                      <div class=\\\"table-container\\\">\\n                        <div class=\\\"table-content none-shadow\\\">\\n                          <table>\\n                            <tr  *ngFor=\\\"let concerns of tmp_array;let i=index\\\" >\\n                              <td class=\\\"padding0\\\">\\n                                <table>\\n                                  <tr>\\n                                    <td><a mat-button class=\\\"link-btn\\\" (click)=\\\"Show_Item(concerns.category,i)\\\" >{{concerns.category}}</a></td>\\n                                    <td class=\\\"w110 text-center\\\">{{concerns.qty}}</td>\\n                                    <td class=\\\"w110 text-center\\\">{{concerns.totalItem}}</td>\\n                                    <td class=\\\"w130 text-right\\\">&#x20B9; {{concerns.amount}}</td>\\n                                  </tr>\\n                                </table>\\n                                <table class=\\\"multi-table\\\"  *ngIf='isItem==true&&isIndex==i'>\\n                                  <tr>\\n                                    <!-- <td class=\\\"w40\\\">&nbsp;</td> -->\\n                                    <td>Part No.</td>\\n                                    <td class=\\\"w80\\\">Segment</td>\\n                                    <td class=\\\"w120\\\">Invoice</td>\\n                                    <td class=\\\"w100\\\">MFG Date</td>\\n                                    <td class=\\\"w60\\\"> Claim Qty</td>\\n                                    <td class=\\\"w60\\\" >Accept Qty</td>\\n                                    <td class=\\\"w60\\\" >Reject Qty</td>\\n                                    <td class=\\\"w80 text-right\\\">Rate</td>\\n                                    <td class=\\\"w80 text-right\\\">Amount</td>\\n                                    <th class=\\\"w100\\\">Image</th>\\n                                    <td>Sales Remark</td>\\n                                    <td>Distributor Remark</td>\\n                                  </tr>\\n                                  <tr [hidden]=\\\"product.category != concerns.category\\\" *ngFor=\\\"let product of tmp_detail; let i=index\\\" [ngClass]=\\\"{ 'distributer' :!product.verified}\\\">\\n                                    <!-- <td><mat-checkbox  name=\\\"{{check+i}}\\\" [(ngModel)]=\\\"product.datacheck\\\" (change)=\\\"checkkk()\\\" >&nbsp; </mat-checkbox></td> -->\\n                                    <td>{{product.partNumber}}</td>\\n                                    <td>{{product.segment}}</td>\\n                                    <td>{{product.invoice}}</td>\\n                                    <td>{{product.date|date:'d MMM y'}}</td>\\n                                    <td>{{product.qty}}</td>\\n                                    <td>\\n                                      <div class=\\\"td-input\\\" *ngIf=\\\"categorydetail.concernStatus==2\\\">\\n                                          <input type=\\\"text\\\" (input)=\\\"calculateAmount(product.acceptqty,i)\\\"  name=\\\"acceptqty\\\" #acceptqty=\\\"ngModel\\\" [(ngModel)]=\\\"product.acceptqty\\\" [value]=\\\"product.acceptqty\\\" (keypress)=\\\"MobileNumber($event)\\\" required >\\n                                      </div>\\n                                      <div *ngIf=\\\"categorydetail.concernStatus!=2\\\">{{product.acceptqty}}</div>\\n                                  \\n                                      <!-- <p *ngIf='isCart==true && product.datacheck==true && product.qty==\\\"\\\"'>required</p> -->\\n                                  </td>\\n                                  <td>{{product.rejectqty}}</td>\\n                                    <td class=\\\"text-right\\\">&#x20B9; {{product.priceUnit}}</td>\\n                                    <td class=\\\"text-right\\\">&#x20B9; {{product.amount}}</td>\\n                                    <td class=\\\"w100\\\">\\n                                      <a *ngIf=\\\"product.verified\\\" class=\\\"link-btn\\\" (click)=\\\"openImageDialog1(i)\\\"> View Image </a>\\n                                      <a *ngIf=\\\"!product.verified\\\" class=\\\"link-btn\\\" (click)=\\\"openImageDialog(i)\\\"> View Image </a>\\n                                  </td>\\n                                <td> \\n                                  <div class=\\\"td-input\\\" *ngIf=\\\"categorydetail.concernStatus==2\\\">\\n                                      <textarea type=\\\"text\\\"   name=\\\"{{salesremark+index}}\\\" #salesremark=\\\"ngModel\\\" [(ngModel)]=\\\"product.salesremark\\\" required></textarea>\\n                                  </div>\\n                                  <div class=\\\"td-input\\\" *ngIf=\\\"categorydetail.concernStatus!=2\\\">\\n                                      <textarea type=\\\"text\\\"   name=\\\"{{salesremark+index}}\\\" #salesremark=\\\"ngModel\\\" [(ngModel)]=\\\"product.salesremark\\\" required readonly></textarea>\\n                                  </div>\\n                                  <!-- <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p> -->\\n                              </td>\\n                              <td> \\n                                    <div class=\\\"td-input\\\">\\n                                        <textarea type=\\\"text\\\"   name=\\\"{{dealerremark+index}}\\\" (input)=\\\"remark()\\\" #dealerremark=\\\"ngModel\\\" [(ngModel)]=\\\"product.dealerremark\\\" required ></textarea>\\n                                    </div>\\n                                </td>\\n                                    <!-- <td>{{product.statusName}}</td>\\n                                    <td>{{product.natureOfProblem}}</td> -->\\n                                  </tr>\\n                                </table>\\n                              </td>\\n                            </tr>\\n                          </table>\\n                        </div>\\n                      </div>\\n                      \\n                    </div>\\n                    \\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\"  >\\n                  <div class=\\\"col s12 padding0\\\" >\\n                    <div class=\\\"cs-btn  mt15 text-right\\\">\\n                      <div class=\\\"in-btn\\\" *ngIf=\\\"categorydetail.concernType==1\\\">\\n                        <button  *ngIf=\\\"user.data.userType==2 && isForward && !isProceed && categorydetail.concernStatus==2\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(3)\\\" >Forward To Distributer</button>\\n                        <button  *ngIf=\\\"user.data.userType==3 &&categorydetail.concernStatus==3 &&  isResubmit==false\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(4)\\\" >Proceed</button>\\n                        <button  *ngIf=\\\"user.data.userType==3 && categorydetail.concernStatus==3 && (isResubmit || isRemark)\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(2)\\\" >Submit For Varification</button>\\n                        <button  *ngIf=\\\"user.data.userType==2 && user.data.salesUser.concernApprovalAccess==true && categorydetail.concernStatus==2\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(5)\\\" >Generate Concern</button>\\n                        <button  *ngIf=\\\"user.data.userType==2 && isProceed && user.data.salesUser.concernApprovalAccess==false && categorydetail.concernStatus==2\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"submit(4)\\\" >Proceed for APPROVAL</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <!-- <div class=\\\"row\\\"  *ngIf=\\\"categorydetail.concernType==1\\\">\\n                \\n                </div> -->\\n                \\n                <div class=\\\"sprate-box mt15 padding0\\\"  *ngIf=\\\"categorydetail.concernType==1&&categorydetail.concernStatus>4\\\">\\n                  <div class=\\\"full-address\\\">\\n                    <div class=\\\"top-heading\\\">\\n                      <h2>Transporter Detail</h2>\\n                    </div>\\n                    <a  *ngIf=\\\"this.user.data.role==12 && categorydetail.concernStatus>4\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\" ><i class=\\\"material-icons\\\" (click)=\\\"edit()\\\">edit</i></a>\\n                    <div class=\\\"cs-table\\\">\\n                      <div class=\\\"table-head\\\">\\n                        <table>\\n                          <tr>\\n                            <th>Transporter Name</th>\\n                            <th class=\\\"w140\\\">Mode of Transport</th>\\n                            <th class=\\\"w140\\\">No. of Boxes</th>\\n                            <th class=\\\"w150\\\">LR No.</th>\\n                            <th class=\\\"w140\\\">E-way bill No.</th>\\n                            <th class=\\\"w100\\\">&nbsp;</th>\\n                          </tr>\\n                        </table>\\n                      </div>\\n                      <form  (ngSubmit)=\\\"f.form.valid && updateTransport() || setFocus(f.form)\\\" #f=\\\"ngForm\\\" novalidate>\\n                        <div class=\\\"table-container\\\">\\n                          <div class=\\\"table-content none-shadow\\\">\\n                            <table>\\n                              <tr *ngIf='categorydetail.transporterName||isEdit'>\\n                                <td><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.transporterName}}</span>\\n                                  \\n                                  <div class=\\\"td-input\\\" *ngIf=\\\"isEdit==true\\\">\\n                                    <input type=\\\"text\\\" name=\\\"transporterName\\\" #transporterName=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.transporterName\\\" [ngClass]=\\\"{'has-error' : transporterName.invalid }\\\" required>\\n                                    \\n                                    <mat-error *ngIf=\\\"f.submitted && transporterName.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                      <mat-error *ngIf=\\\"transporterName.errors.required\\\">required</mat-error>\\n                                    </mat-error>\\n                                  </div>\\n                                  \\n                                  <!-- <div class=\\\"td-input\\\" *ngIf=\\\"isEdit==true\\\" >\\n                                    <mat-form-field class=\\\"cs-input\\\">\\n                                      <input type=\\\"text\\\"  matInput  name=\\\"transporterName\\\" #transporterName=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.transporterName\\\" [ngClass]=\\\"{'has-error' : transporterName.invalid }\\\" required>\\n                                    </mat-form-field>\\n                                    <mat-error *ngIf=\\\"f.submitted && transporterName.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                      <mat-error *ngIf=\\\"transporterName.errors.required\\\">Transporter Name required</mat-error>\\n                                    </mat-error>\\n                                    \\n                                  </div> -->\\n                                </td>\\n                                <td class=\\\"w140\\\"><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.modeOfTransport}}</span>\\n                                  <div class=\\\"td-input\\\" *ngIf=\\\"isEdit==true\\\" >\\n                                    <input type=\\\"text\\\" name=\\\"modeOfTransport\\\" #modeOfTransport=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.modeOfTransport\\\"  [ngClass]=\\\"{'has-error' : modeOfTransport.invalid }\\\" required>\\n                                    <!-- <mat-form-field class=\\\"cs-input\\\">\\n                                      <input type=\\\"text\\\" matInput name=\\\"modeOfTransport\\\" #modeOfTransport=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.modeOfTransport\\\"  [ngClass]=\\\"{'has-error' : modeOfTransport.invalid }\\\" required>\\n                                    </mat-form-field> -->\\n                                    <mat-error *ngIf=\\\"f.submitted && modeOfTransport.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                      <mat-error *ngIf=\\\"modeOfTransport.errors.required\\\">required</mat-error>\\n                                    </mat-error>\\n                                    \\n                                  </div>\\n                                </td>\\n                                <td class=\\\"w140\\\"><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.numberOfBoxes}}</span>\\n                                  <div class=\\\"td-input\\\"  *ngIf=\\\"isEdit==true\\\">\\n                                    <!-- <mat-form-field class=\\\"cs-input\\\">\\n                                      <input type=\\\"text\\\" matInput  name=\\\"numberOfBoxes\\\" #numberOfBoxes=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.numberOfBoxes\\\" [ngClass]=\\\"{'has-error' : numberOfBoxes.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\"  required>\\n                                    </mat-form-field> -->\\n                                    <input type=\\\"text\\\" name=\\\"numberOfBoxes\\\" #numberOfBoxes=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.numberOfBoxes\\\" [ngClass]=\\\"{'has-error' : numberOfBoxes.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\"  required>\\n                                    \\n                                    <mat-error *ngIf=\\\"f.submitted && numberOfBoxes.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                      <mat-error *ngIf=\\\"numberOfBoxes.errors.required\\\">required</mat-error>\\n                                    </mat-error>\\n                                    \\n                                  </div>\\n                                </td>\\n                                <td class=\\\"w150\\\"><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.lrNumber}}</span>\\n                                  <div class=\\\"td-input\\\"  *ngIf=\\\"isEdit==true\\\" >\\n                                    <input type=\\\"text\\\"  name=\\\"lrNumber\\\" #lrNumber=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.lrNumber\\\" [ngClass]=\\\"{'has-error' : lrNumber.invalid }\\\" required>\\n                                    <mat-error *ngIf=\\\"f.submitted && lrNumber.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                      <mat-error *ngIf=\\\"lrNumber.errors.required\\\">required</mat-error>\\n                                    </mat-error>\\n                                  </div>\\n                                </td>\\n                                <td class=\\\"w140\\\"><span *ngIf=\\\"isEdit==false\\\">{{categorydetail.eWayBillNumber}}</span>\\n                                  <div class=\\\"td-input\\\" *ngIf=\\\"isEdit==true\\\">\\n                                    <input type=\\\"text\\\"  name=\\\"eWayBillNumber\\\" #eWayBillNumber=\\\"ngModel\\\" [(ngModel)]=\\\"categorydetail.eWayBillNumber\\\" [ngClass]=\\\"{'has-error' : eWayBillNumber.invalid }\\\" required>\\n                                    <mat-error *ngIf=\\\"f.submitted && eWayBillNumber.invalid \\\" class=\\\"invalid-feedback\\\">\\n                                      <mat-error *ngIf=\\\"eWayBillNumber.errors.required\\\">required</mat-error>\\n                                    </mat-error>\\n                                  </div>\\n                                </td>\\n                                <td class=\\\"w100 text-center\\\">\\n                                  <button  mat-raised-button color=\\\"accent\\\"  *ngIf=\\\"isEdit==true\\\"  >Update</button>\\n                                  <!-- <a class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons red-clr\\\"  *ngIf=\\\"isEdit==false\\\" (click)=\\\"edit()\\\">edit</i></a> -->\\n                                  <!-- <a class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons red-clr\\\"  *ngIf=\\\"isEdit==true\\\" (click)=\\\"updateTransport()\\\">save</i></a> -->\\n                                  <!-- <a class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons red-clr\\\" (click)=\\\"remove(product.productId,i)\\\">delete_forever</i></a> -->\\n                                </td>\\n                              </tr>\\n                            </table>\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"sprate-box pt0\\\" *ngIf=\\\"categorydetail.concernType==2\\\">\\n                  <div class=\\\"cs-heading\\\">\\n                    <h2>Other Type Detail</h2>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col s8 pl0\\\">\\n                      <div class=\\\"from-fields\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input wp100 h-input infix-bodr8\\\">\\n                            <textarea matInput   name=\\\"concernDetails\\\" #concernDetails=\\\"ngModel\\\"  [(ngModel)]=\\\"categorydetail.concernDetails\\\" readonly class=\\\"h200\\\"></textarea>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4 pr0\\\">\\n                      <div class=\\\"territory-info mt12\\\">\\n                        <div class=\\\"head\\\">\\n                          <h2>SalesRole</h2>\\n                        </div>\\n                        <div class=\\\"cs-checkbox\\\">\\n                          <div class=\\\"checkbox-outer auto-height-scroll\\\">\\n                            <section class=\\\"checkbox-inner  bodr0\\\">\\n                              <mat-checkbox *ngFor=\\\"let role of categorydetail.concernRoles\\\"  class=\\\"check-list bg-none check-none check-none check-hover check-none\\\" style=\\\"cursor: unset;\\\">\\n                                <div class=\\\"name-outer\\\">\\n                                  <div class=\\\"outer\\\">\\n                                    <div class=\\\"inner\\\">\\n                                      <div class=\\\"name-inner\\\">\\n                                          <span *ngIf=\\\"role.role==6\\\">N</span>\\n                                          <span *ngIf=\\\"role.role==7\\\">R</span>\\n                                          <span *ngIf=\\\"role.role==8\\\">A</span>\\n                                          <span *ngIf=\\\"role.role==10\\\">T</span>\\n                                      </div>\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"text-box\\\">\\n                                  <h2><span *ngIf=\\\"role.role==6\\\">National Manager</span><span *ngIf=\\\"role.role==7\\\">Regional Manager</span><span *ngIf=\\\"role.role==8\\\">Area Manager</span><span *ngIf=\\\"role.role==10\\\">Territory Incharge</span></h2>\\n                                </div>\\n                              </mat-checkbox>\\n                            \\n                            </section>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"col s12 padding0\\\">\\n                  <div  class=\\\"cs-btn fixedd mt15 text-right\\\">\\n                    <div class=\\\"in-btn\\\">\\n                      <button *ngIf='user.data.userType==1' mat-raised-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"processed()\\\" >Close</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>  \\n            </div>\\n  </div>\\n          </div>\\n        </div>\\n        \\n      </div>\\n      \\n<div *ngIf=\\\"draftDetail.concernStatus!=3\\\" class=\\\"main-container\\\">\\n    <div *ngIf=\\\"loader\\\"> \\n        <div class=\\\"cs-loader\\\">\\n          <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n        </div>\\n   </div>\\n    <div class=\\\"container-outer\\\">\\n        <div class=\\\"container\\\" >\\n            <div class=\\\"row\\\">\\n                    <div class=\\\"sprate-box pt0 mt15\\\" *ngIf=\\\"draftDetail.concernType== '2'\\\">\\n                            <!-- Other Claim Section Start -->\\n                            <div >\\n                                <div class=\\\"cs-heading\\\">\\n                                    <h2>BASIC INFORMATION</h2>\\n                                </div>\\n                                <form  (ngSubmit)=\\\"f.form.valid &&  onSubmit(3)\\\" #f=\\\"ngForm\\\" novalidate>\\n                                    <div class=\\\"from-fields\\\">\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col s8 pl0\\\">\\n                                                <div class=\\\"control-field\\\">\\n                                                    <mat-form-field class=\\\"cs-input wp100 h-input infix-bodr8\\\">\\n                                                        <textarea class=\\\"h150\\\" matInput placeholder=\\\"Description\\\"  name=\\\"description\\\" [(ngModel)]=\\\"other_form.description\\\"  #description=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && description.invalid }\\\" required></textarea>\\n                                                    </mat-form-field>\\n                                                    <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                                        <mat-error *ngIf=\\\"description.errors.required\\\">Description is required</mat-error>\\n                                                    </mat-error>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col s4 pr0\\\">\\n                                                <div class=\\\"territory-info mt15\\\">\\n                                                    <div class=\\\"head\\\" >\\n                                                        <h2>Assign SalesRoles</h2>\\n                                                    </div>\\n                                                    <div class=\\\"cs-checkbox\\\">\\n                                                        <div class=\\\"checkbox-outer auto-height-scroll\\\">\\n                                                            <section class=\\\"checkbox-inner\\\" >\\n                                                                <ng-container  *ngFor=\\\"let role of rolelistsales1;let index=index\\\"   aria-required=\\\"true\\\">\\n                                                                    <mat-checkbox class=\\\"check-list\\\" (change)=\\\"select_role(role.roleId,index,role.isAssign)\\\" name=\\\"{{role.roleId}}\\\" [(ngModel)]=\\\"role.isAssign\\\"  value=\\\"{{role.roleId}}\\\" >{{role.roleName}}</mat-checkbox>\\n                                                                </ng-container>\\n                                                            </section>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                <mat-error *ngIf=\\\"f.submitted && !isAssignCheck\\\">Assign to required</mat-error>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col s12\\\">\\n                                            <div class=\\\"cs-btn text-right mt15\\\">\\n                                                <div class=\\\"in-btn\\\">\\n                                                    <button *ngIf=\\\"concern_form.claim_type==2\\\" mat-raised-button color=\\\"accent\\\" [disabled]=\\\"concern_form.isProceed==false || concern_form.info==false\\\">Submit</button>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </form>\\n                            </div>\\n                            <!-- Other Claim Section End -->\\n                        </div>\\n                <div class=\\\"col s12\\\" *ngIf=\\\"draftDetail.concernType== '1'\\\">\\n                    <div class=\\\"sprate-box pt0\\\">                     \\n                        <form #p=\\\"ngForm\\\" (ngSubmit)=\\\"p.valid\\\">\\n                            <div>\\n                                <div class=\\\"cs-heading\\\">\\n                                    <h2 *ngIf=\\\"draftDetail.productConcernType==1\\\">Pre-Fitment Claim</h2>\\n                                    <h2 *ngIf=\\\"draftDetail.productConcernType==2\\\">Post-Fitment Claim</h2>\\n                                </div>\\n                                <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\"  #f=\\\"ngForm\\\" novalidate >\\n                                    <!-- <div class=\\\"row\\\">\\n                                        <div class=\\\"col s6\\\" *ngIf=\\\"user.data.userType=='2'\\\">\\n                                            <div class=\\\"from-fields\\\">\\n                                                <div class=\\\"control-field\\\">\\n                                                    \\n                                                    <mat-form-field class=\\\"cs-input\\\">\\n                                                        <input type=\\\"text\\\" matInput  name=\\\"networkEstablishment\\\"  [(ngModel)]=\\\"draftDetail.networkEstablishment\\\" readonly>\\n                                                    </mat-form-field>\\n                                                    \\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div> -->\\n                                    <div class=\\\"row mt15\\\" *ngIf=\\\"user.data.userType==2\\\">\\n                                        <div class=\\\"col s4\\\">\\n                                            <div class=\\\"details-info flat\\\">\\n                                                <div class=\\\"basic-details flat\\\">\\n                                                    <div class=\\\"profile-info\\\">\\n                                                        <ul>\\n                                                            <li>\\n                                                                <div class=\\\"cs-box\\\">\\n                                                                    <img src=\\\"assets/img/company.svg\\\" class=\\\"fix-img\\\">\\n                                                                    <span>Comapny Name</span>\\n                                                                    <p>{{draftDetail.networkEstablishment}}</p>\\n                                                                </div>\\n                                                            </li>\\n                                                        </ul>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </form>\\n                                <div class=\\\"row mt15\\\"  >\\n                                    <div  class=\\\"col s4 empty\\\">\\n                                        <div class=\\\"multi-all-select\\\">\\n                                            <label>Segment</label>\\n                                            <ng-multiselect-dropdown\\n                                            [placeholder]=\\\"'Select Segment'\\\"\\n                                            [data]=\\\"segmentList\\\"\\n                                            [(ngModel)]=\\\"data.segment\\\"\\n                                            name=\\\"segment\\\"\\n                                            #segment=\\\"ngModel\\\"\\n                                            [settings]=\\\"dropdownSettings1\\\"\\n                                            (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                                            >\\n                                            \\n                                        </ng-multiselect-dropdown>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col s4 empty\\\">\\n                                    <div class=\\\"multi-all-select\\\">\\n                                        <label>Category</label>\\n                                        <ng-multiselect-dropdown\\n                                        [placeholder]=\\\"'Select Category'\\\"\\n                                        [data]=\\\"categorylist\\\"\\n                                        [(ngModel)]=\\\"data.category\\\"\\n                                        name=\\\"category\\\"\\n                                        #category=\\\"ngModel\\\"\\n                                        [settings]=\\\"dropdownSettings2\\\"\\n                                        (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                                        >\\n                                    </ng-multiselect-dropdown>\\n                                </div>\\n                            </div>     \\n                            <div   class=\\\"col s4 empty\\\">\\n                                <div class=\\\"multi-all-select\\\">\\n                                    <label>Product Name</label>\\n                                    <ng-multiselect-dropdown\\n                                    [placeholder]=\\\"'Select Product'\\\"\\n                                    (onDeSelect)=\\\"onItemDeSelect($event,data.segment,data.category,data.product)\\\"\\n                                    [data]=\\\"product_list\\\"\\n                                    [(ngModel)]=\\\"data.product\\\"\\n                                    name=\\\"product\\\"\\n                                    #product=\\\"ngModel\\\"\\n                                    [settings]=\\\"dropdownSettings3\\\"\\n                                    (onSelect)=\\\"getCartProductList($event,data.segment,data.category,data.product)\\\">\\n                                </ng-multiselect-dropdown>\\n                            </div>\\n                        </div>  \\n                    </div>\\n                    <div  *ngIf=\\\"productlist && productlist.length > 0\\\" class=\\\"col s12 padding0\\\">\\n                        <div class=\\\"heading-bg left-right-15\\\">\\n                            <h2>PRODUCT INFORMATION</h2>\\n                        </div>\\n                        \\n                        \\n                        <div class=\\\"cs-table left-right-15\\\">\\n                            <div class=\\\"table-head\\\" [ngClass]=\\\"{ 'pr28' : productlist.length>6 }\\\" >\\n                                \\n                                <table>\\n                                    <tr>\\n                                        \\n                                        \\n                                        <th class=\\\"w40\\\">&nbsp;</th>\\n                                        <th>Part Number</th>\\n                                        <th class=\\\"w130\\\">Product Name</th>\\n                                        <th class=\\\"w130\\\">Application No</th>\\n                                        <th class=\\\"w100\\\">Image</th>\\n                                        <th class=\\\"w60 text-center\\\">Qty<span>*</span></th>\\n                                        <th class=\\\"w110\\\">MFG Date.<span *ngIf='draftDetail.productConcernType==1'>*</span></th>\\n                                        <th class=\\\"w120\\\">Invoice No.<span *ngIf='draftDetail.productConcernType==1'>*</span></th>\\n                                        <th class=\\\"w70 text-right\\\">Rate</th>\\n                                        <th class=\\\"w80 text-right\\\">Amount</th>\\n                                        <th class=\\\"w80\\\">Action</th>\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                            \\n                            \\n                            <div class=\\\"table-head bdrt\\\" [ngClass]=\\\"{ 'pr28' : productlist.length>6 }\\\" >\\n                                <table>\\n                                    <tr>\\n                                        <th class=\\\"w40\\\"></th>\\n                                        <th>\\n                                            <div class=\\\"th-search-acmt\\\">\\n                                                <mat-form-field>\\n                                                    <input type=\\\"text\\\"  name=\\\"search\\\" [(ngModel)]=\\\"productName.search\\\" (input)=\\\"productSearchByNumber()\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\n                                                    <mat-autocomplete #auto1=\\\"matAutocomplete\\\" >\\n                                                        \\n                                                    </mat-autocomplete>\\n                                                    \\n                                                </mat-form-field> \\n                                            </div>\\n                                        </th>\\n                                        <th class=\\\"w130\\\">&nbsp; </th>\\n                                        <th class=\\\"w130\\\">&nbsp; </th>\\n                                        <th class=\\\"w100\\\">&nbsp;</th>\\n                                        <th class=\\\"w60\\\">&nbsp;</th>\\n                                        <th class=\\\"w110\\\">&nbsp;</th>\\n                                        <th class=\\\"w120\\\">&nbsp;</th>\\n                                        <th class=\\\"w70\\\">&nbsp;</th>\\n                                        <th class=\\\"w80\\\">&nbsp;</th>\\n                                        <th class=\\\"w80\\\">&nbsp;</th>\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                            \\n                            <div class=\\\"table-container height-scroll\\\">\\n                                <div class=\\\"table-content shadow-none\\\">\\n                                    <table>\\n                                        <tr *ngFor=\\\"let product of productlist;let index=index\\\">\\n                                            <td class=\\\"w40\\\"><span *ngIf='product.qty'><mat-checkbox name=\\\"{{check+index}}\\\" [(ngModel)]=\\\"product.datacheck\\\"  (change)=\\\"select(product,index)\\\" >&nbsp; </mat-checkbox></span></td>\\n                                            <td >{{product.partNumber}}</td>\\n                                            <td class=\\\"w130\\\">{{product.productName}}</td>\\n                                            <td class=\\\"w130\\\">EF5678</td>\\n                                            <td class=\\\"w100\\\">\\n                                              <a class=\\\"link-btn\\\" *ngIf=\\\"!product.isImage\\\">\\n                                                  <label class=\\\"cs-file\\\">\\n                                                      Add Image\\n                                                      <input type=\\\"file\\\" (change)=\\\"insertImage($event,product.productName,index)\\\" style=\\\"display: none;\\\">\\n                                                  </label>\\n                                              </a>\\n                                              <a *ngIf=\\\"product.isImage\\\" class=\\\"link-btn\\\" (click)=\\\"openImageDialog(index)\\\"> View Image </a>\\n                                          </td>\\n                                            <td class=\\\"w60 text-center\\\" >\\n                                                <div class=\\\"td-input\\\">\\n                                                    <input type=\\\"number\\\" (input)=\\\"calculateAmount(product.qty,index)\\\"  (keyup.enter)=\\\"addProduct('checkIndividual')\\\" name=\\\"qty\\\" #qty=\\\"ngModel\\\" [(ngModel)]=\\\"product.qty\\\" [value]=\\\"product.qty\\\" required min=\\\"1\\\" >\\n                                                </div>\\n                                                <p *ngIf='isCart==true && product.datacheck==true && product.qty==\\\"\\\"'>required</p>\\n                                            </td>\\n                                            <!--Pre-Fitment Field-->\\n                                            <td class=\\\"w110\\\" *ngIf='draftDetail.productConcernType==1'>\\n                                                <div class=\\\"td-input\\\" style=\\\"display: flex; align-items: center;\\\">\\n                                                    <input matInput [matDatepicker]=\\\"picker\\\"   placeholder=\\\"Choose a date\\\" name=\\\"{{date+index}}\\\" [(ngModel)]=\\\"product.date\\\"  #date=\\\"ngModel\\\"   [max]=\\\"maxDateValue\\\" required>\\n                                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                    <mat-datepicker #picker></mat-datepicker>\\n                                                </div>\\n                                                <p *ngIf='isCart&&!product.date&&product.datacheck'>required</p>\\n                                            </td>\\n                                            <td class=\\\"w120\\\" *ngIf='draftDetail.productConcernType==1'> \\n                                                <div class=\\\"td-input\\\">\\n                                                    <input type=\\\"text\\\"    (keyup.enter)=\\\"addProduct('checkIndividual')\\\" name=\\\"{{invoice+index}}\\\" #invoice=\\\"ngModel\\\" [(ngModel)]=\\\"product.invoice\\\" required>\\n                                                </div>\\n                                                <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p>\\n                                            </td>\\n                                            \\n                                            <!--Pre-Fitment Field-->\\n                                            <!--Post-Fitment Field-->\\n                                            <td class=\\\"w110\\\" *ngIf='draftDetail.productConcernType==2'>\\n                                                <div class=\\\"td-input\\\" style=\\\"display: flex; align-items: center;\\\">\\n                                                    <input matInput [matDatepicker]=\\\"picker\\\"   placeholder=\\\"Choose a date\\\" name=\\\"{{date+index}}\\\" [(ngModel)]=\\\"product.date\\\"  #date=\\\"ngModel\\\"   [max]=\\\"maxDateValue\\\" required>\\n                                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                    <mat-datepicker #picker></mat-datepicker>\\n                                                </div>\\n                                            </td>\\n                                            <td class=\\\"w120\\\" *ngIf='draftDetail.productConcernType==2'> \\n                                                <div class=\\\"td-input\\\">\\n                                                    <input type=\\\"text\\\"    (keyup.enter)=\\\"addProduct('checkIndividual')\\\" name=\\\"{{invoice+index}}\\\" #invoice=\\\"ngModel\\\" [(ngModel)]=\\\"product.invoice\\\" required>\\n                                                </div>\\n                                                \\n                                            </td>\\n                                            \\n                                            <!--Post-Fitment Field-->\\n                                            <td class=\\\"w70 text-right\\\">&#8377; {{product.priceUnit}}</td>\\n                                            <td class=\\\"w80 text-right\\\">&#8377; {{product.amount}}</td>\\n                                            <td class=\\\"w80\\\">\\n                                                <a *ngIf=\\\"product.qty!=''\\\" class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons green-clr\\\"(click)=\\\"addProduct('checkIndividual')\\\">save</i></a>\\n                                            </td>\\n                                            \\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                <div class=\\\"data-not-available\\\" *ngIf=\\\"productlist.length==0\\\">\\n                                    <div class=\\\"outer\\\">\\n                                        <div class=\\\"iinear\\\">\\n                                            <div class=\\\"figure\\\" matRipple>\\n                                                <div class=\\\"header\\\">\\n                                                    <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                                </div>\\n                                                \\n                                                <div class=\\\"description\\\">\\n                                                    <div class=\\\"cs-heading\\\">\\n                                                        <h2>No Product</h2>\\n                                                    </div>\\n                                                    <div class=\\\"img\\\">\\n                                                        <i class=\\\"material-icons\\\">error_outline</i>\\n                                                    </div>\\n                                                    <div class=\\\"psc\\\">\\n                                                        <p>data not available</p>\\n                                                        \\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"add\\\" class=\\\"cs-btn mt20 text-right\\\">\\n                            <div class=\\\"in-btn\\\">\\n                                <button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\"  (click)=\\\"addProduct('checkk')\\\" >Add to Cart</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col s12 padding0\\\">\\n                        <div class=\\\"heading-bg left-right-15 mt15\\\">\\n                            <h2>Product In Cart</h2>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"cs-table left-right-15\\\">\\n                                <div class=\\\"table-head\\\">\\n                                    <table>\\n                                        <tr>\\n                                            <th>Category</th>\\n                                            <th class=\\\"w110\\\">Total Item</th>\\n                                            <th class=\\\"w100\\\">Total QTY.</th>\\n                                            <th class=\\\"w110 text-right\\\">Amount</th>\\n                                            <!-- <th class=\\\"w100 text-center\\\">Action</th> -->\\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                <div class=\\\"table-container\\\">\\n                                    <div class=\\\"table-content shadow-none\\\">\\n                                        <table>\\n                                            <tr *ngFor=\\\"let order of tmp_array;let i=index\\\">\\n                                                <td><a mat-button class=\\\"link-btn\\\" (click)=\\\"productDetail(order.category)\\\" >{{order.category}}</a></td>\\n                                                <td class=\\\"w110 text-center\\\">{{order.totalItem}}</td>\\n                                                <td class=\\\"w100\\\">{{order.qty}}</td>\\n                                                <td class=\\\"w110 text-right\\\">{{order.amount}}</td>\\n                                                <!-- <td class=\\\"w100 text-center\\\">\\n                                                    <a  *ngIf=\\\"order.status=='1' || draftDetail.concernStatus!=2 \\\"  class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons red-clr\\\"(click)=\\\"removeFromCart(i)\\\">delete_sweep</i></a>\\n                                                </td> -->\\n                                                \\n                                            </tr>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                                \\n                            </div>\\n                        </div>\\n                        \\n                    </div>\\n                    \\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"col s12\\\">\\n        <div class=\\\"cs-btn mt32 text-right\\\">\\n            <div class=\\\"in-btn\\\">\\n                <button   *ngIf=\\\"tmp_array.length!=0 && draftDetail.concernStatus!=2 &&draftDetail.concernStatus!=3\\\" mat-raised-button color=\\\"accent\\\"  type=\\\"button\\\" (click)=\\\"onSubmit(1)\\\" >Save As draft</button>\\n                <button  *ngIf=\\\"tmp_array.length!=0 &&user.data.userType==3 && draftDetail.concernStatus!=3\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"onSubmit(2)\\\">Submit</button>\\n                <button  *ngIf=\\\"tmp_array.length!=0 &&user.data.userType==2 &&draftDetail.concernStatus!=3\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"onSubmit(3)\\\">Forward To Distributor</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n</div>\\n</div>\"","import { Component, OnInit, Renderer2  } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { ImageModalComponent } from '../image-modal/image-modal.component';\nimport { UpdateConcernComponent } from '../update-concern/update-concern.component';\nimport {MatDialog} from '@angular/material';\nimport * as moment from 'moment';\n// import { userInfo } from 'os';\n// import { userInfo } from 'os';\n// import { userInfo } from 'os';\n// import { userInfo } from 'os';\n@Component({\n  selector: 'app-draft-detail',\n  templateUrl: './draft-detail.component.html',\n\n})\nexport class DraftDetailComponent implements OnInit {\n  id:any;\n  draftDetail:any=[];\n  user:any={}\n  concern_form:any={};\n  userId:any;\n  msg:any;\n  other_form:any={};\n  prefitmentlist:any=[];\n  pre_fitment:any={};\n  post_fitment:any={};\n  tmp_list:any=[];\n  tmp_list1:any=[];\n  segmentList:any=[];\n  finel_Array:any=[];\n  categorylist:any=[];\n  message:any;\n  tmp_segmentList:any=[];\n  product_list:any=[];\n  partnumberlist:any=[];\n  partnumberlist1:any=[];\n  removeproductname:boolean;\n  tmp_detail:any=[];\n  rolelists:any=[];\n  tmp_array:any=[];\n  producttmpList:any=[];\n  role:any=[];\n  isSave:boolean;\n  productlist:any=[];\n  isAssignCheck:boolean=true;\n  loader:boolean;\n  totalItem:any;\n  totalItems:any;\n  idIndex:any;\n  maxDateValue:any;\n  cartProductList:any=[];\n  concernDetail:any=[]\n  data:any={};\n  categorydetail:any=[];\n  // concernStatus1:any=3;\n  isDraft:boolean=false;\n  rolelistsales1:any=[];\n  distributorList:any=[];\n  tmp_categoryList:any=[];\n  dropdownSettings1:any = {};\n  dropdownSettings2:any = {};\n  dropdownSettings3:any = {};\n  constructor(public db:ConstantService,\n    public router:Router, \n    public route:ActivatedRoute,\n    public toast:SnackBarOverview,\n    public dialog: MatDialog,\n    public alrt:DialogComponent\n     ) {\n      this.route.params.subscribe(params=>{\n        console.log(params);\n        this.id = params.id;\n        console.log(this.id);\n        this.draft_detail();\n      });\n     this.user = JSON.parse(localStorage.getItem('user')) || [];\n     console.log(this.user);\n     if(this.user.data.userType==2){\n      this.distributorList=this.user['data']['salesUser']['staffWithJuniors']['salesUserNetworks'];\n      console.log(this.distributorList);\n      }\n      else{\n       this.userId = this.user['data']['distributerNetwork']['networkId'];\n       console.log(this.user['data']['distributerNetwork']['networkId']);\n     \n      }\n    }\n  \n  ngOnInit() {\n    this.isSave=true;\n    this.segment_list();\n    this.category_list();\n    console.log(this.user.data.userType,this.draftDetail.concernStatus);\n    this.concern_form.info=false;\n    this.dropdownSettings1 = {\n      singleSelection: true,\n      closeDropDownOnSelection:true,\n      idField: 'segmentCode',\n      textField: 'segment',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings2 = {\n      closeDropDownOnSelection:true,\n      singleSelection: true,\n      idField: 'value',\n      textField: 'text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings3 = {\n      singleSelection: false,\n      idField: 'productName',\n      textField: 'productName',\n      enableCheckAll:false,\n      allowSearchFilter: true,\n      maxHeight: 197\n    };  \n    this.maxDateValue=new Date();\n  \n  }\n  tmp_draft:any=[];\n  draft_detail(){\n    console.log(this.id);\n  this.loader=true;\n    this.db.fetchData( {concernId:this.id},'concern/list').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        this.draftDetail=response['data'][0];\n        this.totalItems=this.draftDetail.productConcerns.length;\n        this.userId=response['data'][0]['raisedByNetworkId'];\n        this.proceed();\n        this.productCheck();\n        this.check();\n        if(this.user.data.userType==3&&this.draftDetail.concernStatus==3){\n            this.concern_detail();\n        }else{\n          console.log(this.draftDetail);\n          for(let i=0;i<this.draftDetail.productConcerns.length;i++){\n            this.tmp_draft.push({document:this.draftDetail.productConcerns[i]['document'],productConcernId:this.draftDetail.productConcerns[i]['productConcernId'],natureOfComplaint:this.draftDetail.productConcerns[i]['natureOfComplaint'],statusUpdatedOn:this.draftDetail.productConcerns[i]['statusUpdatedOn'],status:this.draftDetail.productConcerns[i]['status'],statusUpdatedByUser:this.draftDetail.productConcerns[i]['statusUpdatedByUser'],productName: this.draftDetail.productConcerns[i]['productName'],partNumber:this.draftDetail.productConcerns[i]['partNumber'],productId:this.draftDetail.productConcerns[i]['productId'],priceUnit:this.draftDetail.productConcerns[i]['rate'],segment: this.draftDetail.productConcerns[i]['segmentCode'],category: this.draftDetail.productConcerns[i]['category'],qty:this.draftDetail.productConcerns[i]['qunatity'],amount:this.draftDetail.productConcerns[i]['netAmount'],tmpqty:this.draftDetail.productConcerns[i]['qunatity'],tmpamount:this.draftDetail.productConcerns[i]['netAmount'],invoice:this.draftDetail.productConcerns[i]['invoiceNumber'],date:this.draftDetail.productConcerns[i]['mfgDate'],application: this.draftDetail.productConcerns[i]['application'],isDealerItem:false})\n          }\n          console.log(this.tmp_draft);\n          for(let i=0;i<this.draftDetail.productConcerns.length;i++){\n            this.isDraft=true;\n           this.addCart(this.tmp_draft[i],i);\n         \n          }\n        } \n      })\n   }\n   resubmit(){\n     console.log('hii');\n     \n   }\n  productCheck(){\n    this.concern_form.isProceed=false;\n    this.concern_form.isCheck=false;\n    this.concern_form.info=false;\n    this.productlist=[];\n    this.tmp_array=[];\n    this.concernDetail=[];\n    console.log(this.concern_form);\n  }\n  proceed(){\n    this.isSave=false;\n    this.concern_form.isProceed=true;\n    this.concern_form.isCheck=false;\n    console.log(this.concern_form);\n    \n  }\n  check(){\n    console.log(\"success\");\n    console.log(this.concern_form);\n    if(this.draftDetail.concernType=='2'){\n      this.concern_form.info=true;\n    }\n    else\n    this.concern_form.info=false;\n  }\n  segment_list(){\n    this.loader=true;\n    console.log('hello');\n    if(this.user.data.userType==3){\n      this.segmentList=this.user['data']['distributerNetwork']['networkSegments'];\n      this.tmp_segmentList=this.segmentList;\n      console.log(this.segmentList);\n    }\n    else{\n      this.segmentList=this.user['data']['salesUser']['staffSegments'];\n      this.tmp_segmentList=this.segmentList;\n      console.log(this.segmentList);\n    }\n   }  \n   category_list(){\n     this.loader=true;\n    this.db.fileData('','category/list/').subscribe((response)=>{\n      this.categorylist=response['data'];\n      this.tmp_categoryList=this.categorylist;\n      console.log(response);\n      this.loader=false;\n    });\n  } \n  catsearch:any=[];\n  tmp_cat:any=[];\n  categorySearch()\n  {\n    this.categorylist=[];\n    for(var i=0;i<this.tmp_categoryList.length; i++)\n      {\n        this.catsearch.search=this.catsearch.search.toLowerCase();\n        this.tmp_cat=this.tmp_categoryList[i]['text'].toLowerCase();\n        if(this.tmp_cat.includes(this.catsearch.search))\n        {\n          this.categorylist.push(this.tmp_categoryList[i]);\n        }     \n      }    \n  }\n\n  onItemDeSelect(event,segment,category,productName){\n    console.log(event,segment,category,productName);\n    console.log(event,productName);\n    for(let i=0;i<this.tmpProductList.length;i++){\n      if(this.tmpProductList[i].productName==event){\n        this.tmpProductList.splice(i,1);\n      }\n    }\nconsole.log(this.tmpProductList);\n\n  }\n tmpproduct_list:any=[];\n productList(segment,category)\n  {\n    this.data.product=[];\n    let selectedSegment=\"\";\n    let selectedCategory=\"\";\n    if(segment!=null || category!=null){\n      if(segment!=null && category!=null){\n        selectedCategory=category[0];\n        selectedSegment=segment[0];\n        }\n        else if(segment!=null){\n        selectedSegment=segment[0];\n        }\n        else if(category!=null){\n           selectedCategory=category[0];\n\n        }\n    }\n    this.productlist=[];\n    this.loader=true;\n    console.log(this.data);\n      this.db.fetchData({\"segmentCode\": selectedSegment,\"categoryCode\": selectedCategory,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n      console.log(result);\n      setTimeout (() => {\n        this.loader=false;\n        \n    }, 700);\n      if(result)\n      {\n        this.producttmpList=result['data'];\n        this.product_list=[];\n        console.log(this.producttmpList);\n        for(let i=0;i<this.producttmpList.length;i++){\n         let index=this.product_list.findIndex(x=>x.productName==this.producttmpList[i].productName);\n         console.log(index);\n           if(index==-1){\n           this.product_list.push(this.producttmpList[i]);\n         }\n      }\n      this.tmpproduct_list=this.product_list;\n      }\n      })\n        \n  }\n  subsegsearch:any=[];\n  tmp_subseg:any=[];\n  subSegmentSearch()\n  {\n    this.product_list=[];\n    for(var i=0;i<this.tmpproduct_list.length; i++)\n      {\n        this.subsegsearch.search=this.subsegsearch.search.toLowerCase();\n        this.tmp_subseg=this.tmpproduct_list[i]['productName'].toLowerCase();\n        if(this.tmp_subseg.includes(this.subsegsearch.search))\n        {\n          this.product_list.push(this.tmpproduct_list[i]);\n        }     \n      }    \n  }\n  \n  tmpProductList:any=[];\n    getCartProductList(event,segment,category,productname)\n    {\n      console.log(event,segment,category,productname);\n      let selectedCategory=\"\";\n      let selectedSegment=\"\";\n      let selectedproduct=\"\";\n      if(segment!=null || category!=null || productname!=null){\n        if(segment!=null && category!=null && productname!=null){\n          console.log(\"hii\");\n          \n          selectedCategory=category[0];\n           selectedSegment=segment[0];\n           selectedproduct=productname[productname.length-1]\n        }\n        else if(segment!=null && productname){\n        selectedSegment=segment[0];\n        selectedproduct=productname[productname.length-1]\n        }\n        else if(productname!=null && productname){\n        selectedCategory=category[0];\n        selectedproduct=productname[productname.length-1]\n        }\n      }\n        this.loader=true;\n      console.log(segment,category,productname);\n      this.db.fetchData({\"segmentCode\":selectedSegment,\"categoryCode\":selectedCategory,\"productName\":selectedproduct,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.cartProductList=result['data'];\n          for(let i=0;i<this.cartProductList.length;i++)\n          {\n            this.cartProductList[i].qty='';\n            this.cartProductList[i].amount=0; \n            this.cartProductList.isImage=false;\n            this.cartProductList.document='';\n          }\n          this.productlist=this.productlist.concat(this.cartProductList);\n          this.tmpProductList=this.productlist;\n          this.tmpProductList=this.productlist;\n          for(let i=0;i<this.tmpProductList.length;i++){\n          this.tmpProductList[i].priceUnit=this.tmpProductList[i]['mrp'];\n          this.tmpProductList.isImage=false;\n          }\n          console.log(this.tmpProductList);\n        }\n      })\n      \n    }\n    add:boolean=false;\n    calculateAmount(qty,i)\n    {\n      this.add=false;\n      console.log(qty,i);\n      this.isDraft=false;\n      if(qty>0){\n        this.productlist[i].datacheck=true;\n        this.productlist[i].qty=qty;\n        this.productlist[i].amount=parseInt(this.productlist[i]['priceUnit'])*parseInt(qty);\n        this.add=true;\n      }\n      else{\n        this.alrt.error(\"Qty should be greater than 0\");\n        this.productlist[i].datacheck=false;\n        this.productlist[i].qty.value='';\n        this.productlist[i].amount=0;\n        console.log(this.productlist[i].qty);\n        \n      }\n      console.log(this.productlist);\n      \n      \n    }\n    select(product,index){\n      console.log(product.datacheck); \n      if(product.datacheck==false){\n        product.invoice='';\n        product.date='';\n        product.qty='';\n      }\n      let checkdata=this.productlist.findIndex(x=>x.datacheck==true)\n      if(checkdata==-1){\n       this.add=false;\n      }\n\n    }\n    // cartArray:any=[];\n\n    selectedFile:any=[];\n    name:any;\n    urls:any=[];\n    documentData:any=[];\n    concernData:any;\n    insertImage(data,productName,index)\n    {\n      this.urls=[];\n      this.documentData=[];\n      this.selectedFile=[];\n      this.name=productName;\n      let files = data.target.files;\n  \n          if (files) {\n            for (let file of files) {\n              let reader = new FileReader();\n              reader.onload = (e: any) => {\n                this.urls.push(e.target.result);\n              }\n              reader.readAsDataURL(file);\n            }\n          }\n  \n          console.log(this.urls);\n  \n  \n          setTimeout(() => {\n  \n            console.log(this.urls[0]);\n            console.log(data.target.files.length);\n            for(var i=0; i<data.target.files.length; i++)\n            {\n                this.selectedFile.push(data.target.files[i]);\n            }\n  \n            console.log(this.urls[0]);\n    \n            console.log(this.urls[0],this.selectedFile[0]);\n            this.concernData=new FormData;\n            this.concernData.action=1;\n            this.concernData.binaryData=this.urls[0];\n            this.concernData.documentType=3;\n            this.concernData.documentName=this.name;\n            this.concernData.referenceId=0;\n            this.concernData.fileName=\"image\"+i+\".jpg\", this.selectedFile[0];\n            console.log(this.urls);\n      \n            this.productlist[index].isImage=true;  \n            this.documentData.push({\n              \n                \"documentType\": this.concernData.documentType,\n                \"documentName\":this.concernData.documentName,\n                \"fileName\":   this.concernData.fileName,\n                \"referenceId\":   this.concernData.referenceId,\n                \"iconName\":   this.concernData.fileName,\n                \"binaryData\":  this.concernData.binaryData,\n                \"action\":  this.concernData.action\n            })\n  \n            this.productlist[index].document=this.documentData[0];\n            console.log(this.productlist[index].document);\n          }, 1000);\n         \n    \n  }\n  doc:any;\n  openImageDialog(index): void {\n    console.log(\"hello\");\n    if(this.draftDetail.concernStatus==1){\n      this.doc=this.productlist[index].document.binaryData\n    }\n    else{\n      this.doc=this.tmp_detail[index].document.binaryData\n    }\n    const dialogRef = this.dialog.open(ImageModalComponent, {\n      width: '500px',\n      data:{\n      concernStatus:0,\n      document: this.doc\n      } \n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if(result==true){\n        console.log('The dialog was closed');\n      }\n      else{\n        console.log('The dialog was closed');\n        this.selectedFile=[];\n        this.urls=[];\n        this.productlist[index].document='';\n        this.productlist[index].isImage=false;\n      }\n    \n    });\n  }\n    openImageDialog1(index): void {\n      console.log(index);\n      \n      const dialogRef = this.dialog.open(ImageModalComponent, {\n        width: '500px',\n        data:{\n        concernStatus:this.categorydetail.concernStatus,\n        document:this.tmp_detail[index].document\n        } \n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n        if(result==true){\n          console.log('The dialog was closed');\n        }\n        else{\n          console.log('The dialog was closed');\n          this.selectedFile=[];\n          this.urls=[];\n          this.productlist[index].document={};\n          this.productlist[index].isImage=false;\n        }\n      \n      });\n    }\n  addCart(product,index)\n  {\n  \n    this.isCart=true;\n   console.log(product);\n if(this.draftDetail.productConcernType==1){\n  if(product.qty && product.invoice && product.date){\n    if(this.tmp_array.length==0){\n      console.log(\"hii test0\");\n         this.tmp_array.push({productConcernId:product['productConcernId'],document:product['document'],natureOfComplaint:product['natureOfComplaint'],statusUpdatedOn:product['statusUpdatedOn'],status:product['status'],statusUpdatedByUser:product['statusUpdatedByUser'],isDealerItem:product['isDealerItem'],productName: product['productName'],category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date']});\n         this.tmp_detail.push({productConcernId:product['productConcernId'],document:product['document'],\"acceptqty\":product['acceptqty'],\"rejectqty\":product['rejectqty'],\"dealerremark\":product['dealerremark'],\"salesremark\":product['salesremark'],\"natureOfProblem\":product['natureOfProblem'],partNumber:product['partNumber'],productId:product['productId'],concernId:product['concernId'],priceUnit:product['priceUnit'],segment:product['segment'],category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date'],application:product['application'],verified:product['verified']})\n         this.concernDetail.push({productConcernId:product['productConcernId'],document:product['document'],natureOfComplaint:product['natureOfComplaint'],statusUpdatedOn:product['statusUpdatedOn'],status:product['status'],statusUpdatedByUser:product['statusUpdatedByUser'],isDealerItem:product['isDealerItem'],productName: product['productName'],category: product['category'],productId:product['productId'],priceUnit:product['priceUnit'],qty:product['qty'],amount:product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount']});\n       }\n       else{\n        console.log(this.draftDetail.concernStatus,this.user.data.userType,product.verified);\n         if(this.draftDetail.concernStatus=='3' && this.user.data.userType=='3'){\n        if(this.draftDetail.concernStatus=='3' && this.user.data.userType=='3' && !product.verified){\n          console.log(\"hii test1\");\n          console.log(this.tmp_detail);\n          this.idIndex=this.tmp_detail.findIndex(row => row.productId==product.productId && !row.verified);\n          console.log(this.idIndex);\n     }\n         else{\n      \n            console.log(\"hii test3\");\n            // this.idIndex=this.tmp_detail.findIndex(row => row.productId==product.productId);\n            this.idIndex=-1;\n             \n         }\n        }\n        else{\n           this.idIndex=this.concernDetail.findIndex(row => row.productId==product.productId);\n        }\n\n        console.log(this.idIndex);\n        \n     \n          if(this.idIndex != '-1')\n          {\n            console.log('check');\n           const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n           console.log(itemIndex);\n           if(itemIndex != -1)\n           {\n            console.log(this.tmp_array[itemIndex].qty,this.concernDetail[this.idIndex].tmpqty)\n          this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)-parseInt(this.concernDetail[this.idIndex].tmpqty);\n          this.tmp_array[itemIndex].amount=parseInt(this.tmp_array[itemIndex].amount)-parseInt(this.concernDetail[this.idIndex].tmpamount);\n          this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)+parseInt(product.qty);\n          this.tmp_array[itemIndex].amount=parseInt(product.amount)+parseInt(this.tmp_array[itemIndex].amount);\n           }\n           this.concernDetail[this.idIndex]['qty']=parseInt(product.qty);\n           this.concernDetail[this.idIndex]['tmpqty']=parseInt(product.qty);\n           this.concernDetail[this.idIndex]['amount']=parseInt(product.amount);\n           this.concernDetail[this.idIndex]['tmpamount']=parseInt(product.amount);\n           if(product.document!=''){\n             if(this.concernDetail[this.idIndex].document!=null){\n             this.db.fetchData( [{\n              \"documentId\": this.concernDetail[this.idIndex].document.documentId,\n              \"action\": 2,\n              \"fileName\": this.concernDetail[this.idIndex].document.fileName,\n            }],'document/update').subscribe((response)=>{console.log(response);\n              this.concernDetail[this.idIndex]['document']=product['document'];\n            })\n             }\n             else{\n              this.concernDetail[this.idIndex]['document']=product['document'];\n             }\n           }\n         \n           this.tmp_detail[this.idIndex]['qty']=parseInt(product.qty);\n           this.tmp_detail[this.idIndex]['tmpqty']=parseInt(product.qty);\n           this.tmp_detail[this.idIndex]['amount']=parseInt(product.amount);\n           this.tmp_detail[this.idIndex]['tmpamount']=parseInt(product.amount);\n          }\n          if(this.idIndex == '-1')\n          {\n            console.log(\"hii -1\");\n            this.tmp_detail.push({productConcernId:product['productConcernId'],document:product['document'],\"acceptqty\":product['acceptqty'],\"rejectqty\":product['rejectqty'],\"dealerremark\":product['dealerremark'],\"salesremark\":product['salesremark'],\"natureOfProblem\":product['natureOfProblem'],partNumber:product['partNumber'],productId:product['productId'],concernId:product['concernId'],priceUnit:product['priceUnit'],segment:product['segment'],category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date'],application:product['application'],verified:product['verified']})\n            this.concernDetail.push({productConcernId:product['productConcernId'],document:product['document'],natureOfComplaint:product['natureOfComplaint'],statusUpdatedOn:product['statusUpdatedOn'],status:product['status'],statusUpdatedByUser:product['statusUpdatedByUser'],isDealerItem:product['isDealerItem'],productName: product['productName'],category: product['category'],\"productId\":product.productId,\"qty\":product.qty,\"priceUnit\":product.priceUnit,\"amount\":product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpamount:product['amount'],tmpqty:product['qty'],});\n            const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n           if(itemIndex === -1) {\n            this.tmp_array.push({document:product['document'],natureOfComplaint:product['natureOfComplaint'],statusUpdatedOn:product['statusUpdatedOn'],status:product['status'],statusUpdatedByUser:product['statusUpdatedByUser'],isDealerItem:product['isDealerItem'],productName: product['productName'],category: product['category'],qty:product['qty'],amount:product['amount'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount'],});\n           }\n           else {\n             console.log('checkccc');\n             \n            this.tmp_array[itemIndex].qty=parseInt(product['qty'])+parseInt(this.tmp_array[itemIndex].qty);\n            this.tmp_array[itemIndex].amount=parseInt(product['amount'])+parseInt(this.tmp_array[itemIndex].amount);\n          }\n          }\n}\nconsole.log(this.tmp_array);\nconsole.log(this.concernDetail);\nif(this.tmp_array){\n  this.concern_form.info=true;\n  console.log(this.concern_form);\n  \n     }\n     console.log(this.isDraft);\n     if(!this.isDraft){\n       console.log(\"pre\");\n     this.productlist[index].datacheck=false;\n     if(this.productlist[index].datacheck==false)\n      {\n        this.productlist[index].qty='';\n        this.productlist[index].invoice='';\n        this.productlist[index].amount=0;\n        this.productlist[index].date='';\n        this.toast.openSucess('Concern added successfully To Cart','');\n     \n       \n    }\n    else\n    {\n       this.toast.openError('Something Went Wrong Please Try Again!!','');\n    }\n     \n  }\n  for(let i=0;i<this.tmp_array.length;i++){\n    this.tmp_array[i].totalItem=0;\n    for(let j=0;j<this.concernDetail.length;j++){\n    if(this.tmp_array[i].category==this.concernDetail[j].category){\n      this.tmp_array[i].totalItem=  this.tmp_array[i].totalItem+1;\n    }\n    }\n  }\n  console.log( this.tmp_array);\n   }\n   else{\n     this.alrt.error(\"Some Fields are Empty Please Fill Them First\");\n   }\n   let checkdata=this.productlist.findIndex(x=>x.datacheck==true)\n     if(checkdata==-1){\n      this.add=false;\n     }\n  }\n  else {\n    if(product.qty){\n      if(this.tmp_array.length==0){\n        this.tmp_array.push({productConcernId:product['productConcernId'],document:product['document'],natureOfComplaint:product['natureOfComplaint'],statusUpdatedOn:product['statusUpdatedOn'],status:product['status'],statusUpdatedByUser:product['statusUpdatedByUser'],isDealerItem:product['isDealerItem'],productName: product['productName'],category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date']});\n        this.tmp_detail.push({productConcernId:product['productConcernId'],document:product['document'],\"acceptqty\":product['acceptqty'],\"rejectqty\":product['rejectqty'],\"dealerremark\":product['dealerremark'],\"salesremark\":product['salesremark'],\"natureOfProblem\":product['natureOfProblem'],partNumber:product['partNumber'],productId:product['productId'],concernId:product['concernId'],priceUnit:product['priceUnit'],segment:product['segment'],category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date'],application:product['application'],verified:product['verified']})\n        this.concernDetail.push({productConcernId:product['productConcernId'],document:product['document'],natureOfComplaint:product['natureOfComplaint'],statusUpdatedOn:product['statusUpdatedOn'],status:product['status'],statusUpdatedByUser:product['statusUpdatedByUser'],isDealerItem:product['isDealerItem'],productName: product['productName'],category: product['category'],productId:product['productId'],priceUnit:product['priceUnit'],qty:product['qty'],amount:product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount']});\n         }\n         else{\n          console.log(this.draftDetail.concernStatus,this.user.data.userType,product.verified);\n           if(this.draftDetail.concernStatus=='3' && this.user.data.userType=='3'){\n          if(this.draftDetail.concernStatus=='3' && this.user.data.userType=='3' && !product.verified){\n            console.log(\"hii test1\");\n            console.log(this.tmp_detail);\n            this.idIndex=this.tmp_detail.findIndex(row => row.productId==product.productId && !row.verified);\n            console.log(this.idIndex);\n       }\n           else{\n        \n              console.log(\"hii test3\");\n              this.idIndex=this.tmp_detail.findIndex(row => row.productId==product.productId);\n               \n           }\n          }\n          else{\n             this.idIndex=this.concernDetail.findIndex(row => row.productId==product.productId);\n          }\n  \n          console.log(this.idIndex);\n          \n       \n            if(this.idIndex != '-1')\n            {\n              console.log('check');\n             const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n             console.log(itemIndex);\n             if(itemIndex != -1)\n             {\n              console.log(this.tmp_array[itemIndex].qty,this.concernDetail[this.idIndex].tmpqty)\n            this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)-parseInt(this.concernDetail[this.idIndex].tmpqty);\n            this.tmp_array[itemIndex].amount=parseInt(this.tmp_array[itemIndex].amount)-parseInt(this.concernDetail[this.idIndex].tmpamount);\n            this.tmp_array[itemIndex].qty=parseInt(this.tmp_array[itemIndex].qty)+parseInt(product.qty);\n            this.tmp_array[itemIndex].amount=parseInt(product.amount)+parseInt(this.tmp_array[itemIndex].amount);\n             }\n             this.concernDetail[this.idIndex]['qty']=parseInt(product.qty);\n             this.concernDetail[this.idIndex]['tmpqty']=parseInt(product.qty);\n             this.concernDetail[this.idIndex]['amount']=parseInt(product.amount);\n             this.concernDetail[this.idIndex]['tmpamount']=parseInt(product.amount);\n             this.concernDetail[this.idIndex]['document']=product.document;\n             this.tmp_detail[this.idIndex]['qty']=parseInt(product.qty);\n             this.tmp_detail[this.idIndex]['tmpqty']=parseInt(product.qty);\n             this.tmp_detail[this.idIndex]['amount']=parseInt(product.amount);\n             this.tmp_detail[this.idIndex]['tmpamount']=parseInt(product.amount);\n            }\n            if(this.idIndex == '-1')\n            {\n              console.log(\"hii -1\");\n              this.tmp_detail.push({productConcernId:product['productConcernId'],document:product['document'],\"acceptqty\":product['acceptqty'],\"rejectqty\":product['rejectqty'],\"dealerremark\":product['dealerremark'],\"salesremark\":product['salesremark'],\"natureOfProblem\":product['natureOfProblem'],partNumber:product['partNumber'],productId:product['productId'],concernId:product['concernId'],priceUnit:product['priceUnit'],segment:product['segment'],category: product['category'],qty:product['qty'],amount:product['amount'],tmpqty:product['qty'],tmpamount:product['amount'],invoice:product['invoice'],date:product['date'],application:product['application'],verified:product['verified']})\n              this.concernDetail.push({productConcernId:product['productConcernId'],document:product['document'],natureOfComplaint:product['natureOfComplaint'],statusUpdatedOn:product['statusUpdatedOn'],status:product['status'],statusUpdatedByUser:product['statusUpdatedByUser'],isDealerItem:product['isDealerItem'],productName: product['productName'],category: product['category'],\"productId\":product.productId,\"qty\":product.qty,\"priceUnit\":product.priceUnit,\"amount\":product['amount'],partNumber:product['partNumber'],segment:product['segment'],invoice:product['invoice'],date:product['date'],tmpamount:product['amount'],tmpqty:product['qty'],});\n              const itemIndex = this.tmp_array.findIndex(row => row.category == product['category']);\n             if(itemIndex === -1) {\n              this.tmp_array.push({document:product['document'],natureOfComplaint:product['natureOfComplaint'],statusUpdatedOn:product['statusUpdatedOn'],status:product['status'],statusUpdatedByUser:product['statusUpdatedByUser'],isDealerItem:product['isDealerItem'],productName: product['productName'],category: product['category'],qty:product['qty'],amount:product['amount'],invoice:product['invoice'],date:product['date'],tmpqty:product['qty'],tmpamount:product['amount'],});\n             }\n             else {\n               console.log('checkccc');\n               \n              this.tmp_array[itemIndex].qty=parseInt(product['qty'])+parseInt(this.tmp_array[itemIndex].qty);\n              this.tmp_array[itemIndex].amount=parseInt(product['amount'])+parseInt(this.tmp_array[itemIndex].amount);\n            }\n            }\n  }\n  console.log(this.concernDetail);\n  if(this.tmp_array){\n    this.concern_form.info=true;\n    console.log(this.concern_form);\n    \n       }\n       console.log(this.isDraft);\n       if(!this.isDraft){\n        console.log(\"post\");\n       this.productlist[index].datacheck=false;\n       if(this.productlist[index].datacheck==false)\n        {\n          this.productlist[index].qty='';\n          this.productlist[index].invoice='';\n          this.productlist[index].date='';\n          this.productlist[index].amount=0;\n          this.toast.openSucess('Concern updated successfully','');\n       \n         \n      }\n      else\n      {\n         this.toast.openError('Something Went Wrong Please Try Again!!','');\n      }\n    }\n    for(let i=0;i<this.tmp_array.length;i++){\n      this.tmp_array[i].totalItem=0;\n      for(let j=0;j<this.concernDetail.length;j++){\n      if(this.tmp_array[i].category==this.concernDetail[j].category){\n        this.tmp_array[i].totalItem=  this.tmp_array[i].totalItem+1;\n      }\n      }\n    }\n    console.log( this.tmp_array);\n     }\n     else{\n       this.alrt.error(\"Some Fields are Empty Please Fill Them First\");\n     }\n     let checkdata=this.productlist.findIndex(x=>x.datacheck==true)\n     if(checkdata==-1){\n      this.add=false;\n     }\n  }\n  for(let i=0;i<this.tmp_detail.length;i++){\n    if(this.tmp_detail[i].document){\n      this.tmp_detail[i].isImage=true\n    }\n  }\n}\nisCart:boolean=false;\nisProceed:any=true;\nisResubmit:any=false;\npartnoArray:any=[];\nstr2:any;\nisRemark:any=false;\nremark(){\n  this.isRemark=false;\n  this.isProceed=false;\nfor(let i=0;i<this.tmp_detail.length;i++){\n  if(this.tmp_detail[i].dealerremark!=''){\n    this.isRemark=true;\n    this.isProceed=true;\n  }\n}\n}\naddProduct(kk)\n{\n  this.partnoArray=[];\n  console.log(kk);\n \n  this.isCart=true;\n  if(this.draftDetail.productConcernType==1){\n for(let i=0;i<this.productlist.length;i++){\n   if(this.productlist[i].datacheck==true){\n     console.log('hii');\n      // this.cartArray.push(this.productlist[i]);\n      console.log(i,this.productlist[i].qty,this.productlist[i].invoice,this.productlist[i].date);\n      \n     if(this.productlist[i].qty && this.productlist[i].invoice && this.productlist[i].date){\n      this.isProceed=false;\n      this.isResubmit=true;\n\n      console.log(i,this.productlist[i].qty,this.productlist[i].invoice,this.productlist[i].date);\n\n      if(this.draftDetail.concernStatus=='3' && this.user.data.userType=='3'){\n\n      console.log(i,this.productlist[i].qty,this.productlist[i].invoice,this.productlist[i].date);\n\n        console.log(this.productlist[i]);\n        console.log(\"check condition\");\n      this.productlist[i].isDealerItem=true;\n      this.productlist[i].verified=false;\n      }\n      console.log(this.productlist[i]);\n\n      const cartArr = JSON.parse(JSON.stringify(this.productlist[i]));\n      this.addCart(cartArr,i);\n    }\n    else{\n      console.log('test');\n      this.partnoArray.push(this.productlist[i].partNumber)\n    }\n }\n }  \n console.log(this.partnoArray);\n \n if(this.partnoArray.length){\n  this.alrt.error(\"Some field are Empty Please Fill Them First\");\n }\n    \n  // console.log(this.cartArray);\n}\nelse{\n  for(let i=0;i<this.productlist.length;i++){\n    if(this.productlist[i].datacheck==true){\n      console.log('hii');\n    //  this.cartArray.push(this.productlist[i]);\n     if(this.productlist[i].qty){\n     \n        this.isProceed=false;\n        this.isResubmit=true;\n  \n        console.log(i,this.productlist[i].qty,this.productlist[i].invoice,this.productlist[i].date);\n  \n        if(this.draftDetail.concernStatus=='3' && this.user.data.userType=='3'){\n  \n        console.log(i,this.productlist[i].qty,this.productlist[i].invoice,this.productlist[i].date);\n  \n          console.log(this.productlist[i]);\n          console.log(\"check condition\");\n        this.productlist[i].isDealerItem=true;\n        this.productlist[i].verified=false;\n        }\n        console.log(this.productlist[i]);\n  \n        const cartArr = JSON.parse(JSON.stringify(this.productlist[i]));\n        this.addCart(cartArr,i);\n      }\n     else{\n       console.log('test');\n       this.partnoArray.push(this.productlist[i].partNumber)\n     }\n  }\n  }  \n  console.log(this.partnoArray);\n  \n  if(this.partnoArray.length){\n   this.alrt.error(\"Some field are Empty Please Fill Them First\");\n  }\n     \n  //  console.log(this.cartArray);\n}\n}\n\n\ntemp:any=false;\n  removeFromCart(index)\n  {\n    this.temp=false;\n\n    this.alrt.delete(\"Product\").then((result)=>{\n      if(result)\n      {\n     \n        console.log(this.tmp_array[index]['category']);\n        this.concernDetail = this.concernDetail.filter(row => row.category != this.tmp_array[index]['category']);\n        this.temp=true;\n      }\n      if(this.temp)\n      {\n        this.tmp_array.splice(index,1);\n\n      }\n    })\n  }\n\nproductDetail(category)\n{\n  this.concern_form.product_type=this.draftDetail.productConcernType;\n  const dialogRef = this.dialog.open(UpdateConcernComponent, {\n    width: '1024px',\n       data:{\n         product:this.concernDetail,\n          category,\n          concern:this.concern_form,\n          concernStatus:this.draftDetail.concernStatus\n       }});\n      dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n       this.isDraft=true;\n    console.log('The dialog was closed');\n    let tmpCartArray=this.db.getData();\n    console.log(tmpCartArray);\n    if(tmpCartArray)\n    {\n      this.tmp_array=[];\n      this.concernDetail=[];\n      this.showInCart(tmpCartArray);\n    }\n  });\n}\ntmp:any=false;\nshowInCart(orderArray:any=[])\n{\n  console.log(orderArray);\n  for(let i=0;i<orderArray.length;i++)\n  {\n    orderArray[i].isDealerItem=true;\n    console.log(orderArray);\n    this.addCart(orderArray[i],i);\n  }\n  console.log(this.tmp_array);\n}\n \n    productName:any=[];\n    tmp_pro:any=[];\n    productSearchByNumber()\n    {\n      console.log(\"hello\");\n      \n      this.productlist=[];\n      for(var i=0;i<this.tmpProductList.length; i++)\n        {\n          this.productName.search=this.productName.search.toLowerCase();\n          this.tmp_pro=this.tmpProductList[i]['partNumber'].toLowerCase();\n          if(this.tmp_pro.includes(this.productName.search))\n          {\n            this.productlist.push(this.tmpProductList[i]);\n          }     \n        }\n    }\n cartList:any=[];\n \n\n partno_list(){\n   this.loader=true;\n   if(this.draftDetail.productConcernType==1){\n  this.db.fetchData({ \"currentPage\": 1,\n   \"pageSize\": 50,  \"segmentCode\":this.pre_fitment.segment,\"categoryCode\":this.pre_fitment.category,},'product/list').subscribe((response)=>{\n    this.partnumberlist=response['data'];\n   console.log(this.partnumberlist);\n   this.loader=false;\n  });\n}\nelse{\n  this.db.fetchData({ \"currentPage\": 1,\n  \"pageSize\": 50,  \"segmentCode\":this.post_fitment.segment,\"categoryCode\":this.post_fitment.category,},'product/list').subscribe((response)=>{\n   this.partnumberlist1=response['data'];\n  console.log(this.partnumberlist1);\n  this.loader=false;\n });\n}\n} \n  rolelist(){\n    this.loader=true;\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.rolelists=response['data'];\n      let filterrolesales= this.rolelists.filter(x => x.userTypeId==2);\n      this.rolelistsales1=filterrolesales[0].roles;\n      console.log(this.rolelistsales1);\n    });\n  }\n \n  \n  select_role(value,index,event)\n  {\n    if(event.checked)\n    {\n      this.isAssignCheck=true;\n      this.role.push(value);\n      console.log(this.role);\n   }\n    else\n    {\n      console.log(index);\n      console.log(this.role[0]);\n      \n          for( var j=0;j<this.rolelistsales1.length;j++)\n          {\n            if(this.rolelistsales1[index]['roleId']==this.role[j])\n            {\n              this.role.splice(j,1);\n            }\n          }\n          console.log(this.role);\n    }\n  }\n  active:any = {};\n  toggleterritory(key,action)\n  {\n    console.log(action);\n    console.log(key);\n    \n    if(action == 'open')\n    { this.active[key] = true; }\n    if(action == 'close')\n    { this.active[key] = false;}\n\n    console.log(this.active);\n  }\n  segsearch:any=[];\n  tmp_seg:any=[];\n  segmentSearch()\n  {\n    this.segmentList=[];\n    for(var i=0;i<this.tmp_segmentList.length; i++)\n      {\n        this.segsearch.search=this.segsearch.search.toLowerCase();\n        this.tmp_seg=this.tmp_segmentList[i]['text'].toLowerCase();\n        if(this.tmp_seg.includes(this.segsearch.search))\n        {\n          this.segmentList.push(this.tmp_segmentList[i]);\n        }     \n      }    \n\n  }\n  productConcernType:any;\n  verified:any;\n  productConcernsModel:any=[];\n  onSubmit(status){\n    console.log(this.concernDetail);\n    \n    if(this.user.data.userType==3) {\n      this.verified=false;\n   } else {\n    this.verified=true;\n   }\n    if(this.draftDetail.concernType==1){\n      if(this.draftDetail.productConcernType==1){\n        this.productConcernType=1;\n      }\n      else{\n        this.productConcernType=2;\n      }\n      console.log(this.tmp_array);\n      if(this.tmp_array.length!=0){\n        this.loader=true;\n          console.log(this.concernDetail.length);\n            if(this.user.data.userType==2){\n          for(let i=0;i<this.concernDetail.length;i++){\n            console.log(this.concernDetail[i]);\n            \n            this.productConcernsModel.push( {\n              \"productConcernId\":this.concernDetail[i].productConcernId,\n              \"concernId\":this.draftDetail.concernId,\n              \"segmentCode\":this.concernDetail[i].segment,\n              \"category\":this.concernDetail[i].category,\n              \"partNumber\": this.concernDetail[i].partNumber,\n              \"qunatity\":this.concernDetail[i].qty,\n              \"rejectedQuantity\": 0,\n              \"rate\": this.concernDetail[i].priceUnit,\n              \"productId\": this.concernDetail[i].productId,\n              \"netAmount\":this.concernDetail[i].amount,\n              \"mfgDate\": this.concernDetail[i].date,\n              \"acceptedQuantity\":this.concernDetail[i].qty,\n              \"document\":this.concernDetail[i].document,\n              \"invoiceNumber\": this.concernDetail[i].invoice,\n              \"verified\": this.verified\n            })\n         \n\n          }\n        }\n        else{\n          for(let i=0;i<this.concernDetail.length;i++){\n            console.log(this.concernDetail[i]);\n          this.productConcernsModel.push( {\n            \"productConcernId\":this.concernDetail[i].productConcernId,\n            \"concernId\": this.draftDetail.concernId,\n            \"segmentCode\":this.concernDetail[i].segment,\n            \"category\":this.concernDetail[i].category,\n            \"partNumber\": this.concernDetail[i].partNumber,\n            \"document\":this.concernDetail[i].document,\n            \"qunatity\":this.concernDetail[i].qty,\n            \"rate\": this.concernDetail[i].priceUnit,\n            \"productId\": this.concernDetail[i].productId,\n            \"netAmount\":this.concernDetail[i].amount,\n            \"mfgDate\": this.concernDetail[i].date,\n            \"invoiceNumber\": this.concernDetail[i].invoice,\n            \"verified\": this.verified\n        })\n      }\n     }\n            console.log(this.productConcernsModel);\n          this.db.fetchData({  \"concernId\":this.draftDetail.concernId, \"productConcernType\":this.productConcernType,\"concernStatus\": status,\"concernType\": this.draftDetail.concernType, \"raisedByNetworkId\": this.userId, \n           \"productConcernsModel\": this.productConcernsModel},'concern/update').subscribe((response)=>{console.log(response)\n            this.message=response['message'];\n            this.loader=false;\n            if(this.message==\"Concern updated successfully\")\n            {\n                 this.toast.openSucess('Concern updated successfully','');\n                 if(status == 1) {\n                  localStorage.setItem('concernListType', 'Draft');\n                  this.router.navigate(['/concern-list']);\n                 }\n                 if(status == 2) {\n                  localStorage.setItem('concernListType', 'Submit');\n                  this.router.navigate(['/concern-list']);\n                 }\n                 if(status == 3) {\n                  localStorage.setItem('concernListType', 'Forward');\n                  this.router.navigate(['/concern-list']);\n                 }\n            }\n            else\n            {\n                this.toast.openError('Something Went Wrong Please Try Again!!','');\n            };\n          })\n     \n      }\n    else{\n      this.alrt.error(\"Please Select Some Product\");\n    }\n    \n    }\n}\nsubmit(status){\n  this.loader=true;\n  console.log(status);\n  \n  for(let i=0;i<this.tmp_detail.length;i++){\n    this.productConcernsModel.push(\n    {  \n    \"productConcernId\": this.tmp_detail[i].productConcernId,\n    \"concernId\": this.tmp_detail[i].concernId,\n    \"productId\":this.tmp_detail[i].productId,\n    \"segmentCode\":this.tmp_detail[i].segment,\n    \"category\":this.tmp_detail[i].category,\n    \"partNumber\":this.tmp_detail[i].partNumber,\n    \"application\": this.tmp_detail[i].application,\n    \"mfgDate\": this.tmp_detail[i].date,\n    \"invoiceNumber\": this.tmp_detail[i].invoice,\n    \"qunatity\":  this.tmp_detail[i].qty,\n    \"acceptedQuantity\": this.tmp_detail[i].acceptqty,\n    \"rejectedQuantity\": this.tmp_detail[i].rejectqty,\n    \"networkRemarks\": this.tmp_detail[i].dealerremark,\n    \"salesRemarks\":  this.tmp_detail[i].salesremark,\n    \"rate\":  this.tmp_detail[i].priceUnit,\n    \"document\":this.tmp_detail[i].document,\n    \"netAmount\":  this.tmp_detail[i].amount, \n    \"verified\": this.tmp_detail[i].verified})\n   \n  }\n  this.db.fetchData({\"concernId\":this.id,\n  \"concernType\": this.categorydetail.concernType,\n  \"raisedByNetworkId\": this.categorydetail.raisedByNetworkId,\n  \"concernStatus\": status,\n  \"productConcernType\": this.categorydetail.productConcernType,\"productConcernsModel\":this.productConcernsModel},'concern/update').subscribe((response)=>{console.log(response);\n    this.message=response['message'];\n    this.loader=false;\n    if(this.message==\"Concern updated successfully\")\n    {\n      \n      if(status == 2) {\n        localStorage.setItem('concernListType', 'Submit');\n        this.router.navigate(['/concern-list']);\n       }\n       if(status == 3) {\n        localStorage.setItem('concernListType', 'Forward');\n        this.router.navigate(['/concern-list']);\n       }\n       if(status == 4) {\n        localStorage.setItem('concernListType', 'Approval');\n        this.router.navigate(['/concern-list']);\n       }\n       if(status == 5) {\n        localStorage.setItem('concernListType', 'Approved');\n        this.router.navigate(['/concern-list']);\n       }\n         this.toast.openSucess('Customer Concern status change successfully','');\n    }\n    else\n    {\n        this.toast.openError('Something Went Wrong Please Try Again!!','');\n    }\n  })\n}\ncat_detail:any=[];\nconcern_detail(){\n  this.isDraft=true;\n  this.loader=true;\n  this.db.fetchData( {concernId:this.id},'concern/list').subscribe((response)=>{\n      console.log(response);\n      this.categorydetail=response['data'][0];\n      this.totalItem=this.categorydetail.productConcerns.length;\n      console.log(this.totalItem);\n      console.log(this.categorydetail);\n      this.loader=false;\n      for(let i=0;i<this.categorydetail.productConcerns.length;i++){\n    \n        this.cat_detail.push({\"productConcernId\":this.categorydetail.productConcerns[i].productConcernId,\"document\":this.categorydetail.productConcerns[i]['document'],\"dealerremark\":this.categorydetail.productConcerns[i]['networkRemarks'],\"salesremark\":this.categorydetail.productConcerns[i]['salesRemarks'],\"natureOfProblem\":this.categorydetail.productConcerns[i]['natureOfComplaint'],partNumber:this.categorydetail.productConcerns[i]['partNumber'],productId:this.categorydetail.productConcerns[i]['productId'],concernId:this.categorydetail.productConcerns[i]['concernId'],priceUnit:this.categorydetail.productConcerns[i]['rate'],segment: this.categorydetail.productConcerns[i]['segmentCode'],category: this.categorydetail.productConcerns[i]['category'],qty:this.categorydetail.productConcerns[i]['qunatity'],amount:this.categorydetail.productConcerns[i]['netAmount'],tmpqty:this.categorydetail.productConcerns[i]['qunatity'],tmpamount:this.categorydetail.productConcerns[i]['netAmount'],invoice:this.categorydetail.productConcerns[i]['invoiceNumber'],date:this.categorydetail.productConcerns[i]['mfgDate'],application: this.categorydetail.productConcerns[i]['application'],verified: this.categorydetail.productConcerns[i]['verified']})\n        if(this.categorydetail.productConcerns[i].rejectedQuantity==0 && this.categorydetail.productConcerns[i]['acceptedQuantity']==0){\n          this.cat_detail[i].rejectqty='';\n          this.cat_detail[i]['acceptqty']='';\n         }\n         else{\n          this.cat_detail[i].rejectqty=this.categorydetail.productConcerns[i]['rejectedQuantity'];\n          this.cat_detail[i]['acceptqty']=this.categorydetail.productConcerns[i]['acceptedQuantity']; \n         }\n      }\n      console.log(this.cat_detail);\n      \n      for(let i=0;i<this.cat_detail.length;i++){\n        console.log(this.cat_detail[i]);\n       this.addCart(this.cat_detail[i],i);\n      }\n      this.categorydetail.totalQty=0;\n\n      this.categorydetail.totalAmount=0;\n\n      for(let i=0;i<this.categorydetail.productConcerns.length;i++) {\n      \n        \n        if(this.categorydetail.concernType==1){\n          console.log('hii');\n                console.log(this.categorydetail.productConcerns[i].netAmount, this.categorydetail.productConcerns[i].qunatity);\n                this.categorydetail.totalQty= this.categorydetail.totalQty+this.categorydetail.productConcerns[i].qunatity;\n                this.categorydetail.totalAmount= this.categorydetail.totalAmount+this.categorydetail.productConcerns[i].netAmount;\n        }\n\n  }\n    })\n }\n itemList:any=[];\n isItem:boolean=false;\n isIndex:any=-1;\n Show_Item(category,index){\n  console.log(this.tmp_detail);\n  for(let i=0;i<this.tmp_detail.length;i++){\n  this.tmp_detail[i].datacheck=false;\n  }\n  if(this.isIndex!=index){\n    this.isItem=true;\n    this.itemList=[];\n  }\n  else{\n    this.isItem=!this.isItem;\n   \n  }\n  if(this.isItem){\n    this.isIndex=index;\n   for(let i=0;i<this.tmp_detail.length;i++){\n    if(category === this.tmp_detail[i]['category'])\n    {\n      this.itemList.push(this.tmp_detail[i])\n   \n    }\n  }\n  console.log(this.itemList);\n  \n}\nelse{\n  this.itemList=[];\n}\n\n\n}\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n  <mat-dialog-content class=\\\"mat-typography\\\" style=\\\"overflow: inherit;\\\">\\n      <p class=\\\"heading\\\">PRODUCT INFORMATION</p>\\n      <div class=\\\"col s12 padding0\\\" *ngFor=\\\"let urlData of urls;let i=index\\\">\\n        <div class=\\\"cs-image\\\">\\n          <img *ngIf=\\\"data.concernStatus==0\\\" src={{urlData}} >\\n          <img *ngIf=\\\"data.concernStatus!=0\\\"  src=\\\"{{api+urlData.documentId+'/'+'1'}}\\\">\\n          <div *ngIf=\\\"data.concernStatus==0\\\" class=\\\"overlay\\\">\\n            <a class=\\\"del-btn\\\" (click)=\\\"deleteimg(i)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n          </div>\\n        </div>\\n      </div>\\n  </mat-dialog-content>\\n  <mat-dialog-actions align=\\\"end\\\">\\n      <!-- <button mat-button  >Update</button> -->\\n      <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]=\\\"true\\\" >Close</button>\\n  </mat-dialog-actions>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\n@Component({\n  selector: 'app-image-modal',\n  templateUrl: './image-modal.component.html'\n})\nexport class ImageModalComponent implements OnInit {\nurls:any=[];\nurl:any;\nrequest:any;\napi:any;\nconcernStatus:any;\ndocument:any;\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public dialog:MatDialog,public toast:SnackBarOverview,public service:ConstantService,public confirm:DialogComponent) {\n     console.log(data); \n \n    }\n   \n    deleteimg(index)\n    {\n          this.urls.splice(index, 1);\n          this.dialog.closeAll();\n    }\n  ngOnInit() {\n    this.url=this.service.dburl;\n    this.request='download/document/';\n    this.api=this.url+this.request;\n    console.log(this.api);\n    this.urls.push(this.data.document);\n    console.log(this.urls);\n  }\n\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n    <p class=\\\"heading\\\">PRODUCT INFORMATION</p>\\n    <div *ngIf=\\\"isView==false\\\" class=\\\"modal-img\\\">\\n        <div class=\\\"modal-img-in ds-none\\\" >\\n                <img src=\\\"\\\">\\n                <a class=\\\"del-btn\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"isView==true\\\" class=\\\"modal-img\\\">\\n            <div class=\\\"modal-img-in ds-block\\\" >\\n                    <img *ngIf=\\\"isAlready\\\" src=\\\"{{api+docId+'/'+'1'}}\\\">\\n                    <img *ngIf=\\\"!isAlready\\\" src=\\\"{{urlData}}\\\">\\n                    <a class=\\\"del-btn\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n            </div>\\n        </div>\\n    <mat-dialog-content class=\\\"mat-typography pl15 pr15\\\" style=\\\"overflow-x: hidden !important;\\\">\\n        <div class=\\\"col s12 padding0\\\">\\n            <div class=\\\"cs-table left-right-15\\\">\\n                <div class=\\\"table-head\\\">\\n                    <table>\\n                        <tr>\\n                            <th class=\\\"w100\\\">Part Number</th>\\n                            <th class=\\\"w90\\\">Category</th>\\n                            <th  class=\\\"w90\\\">Segment</th>\\n                            <th  class=\\\"w90\\\">Product Name</th>\\n                            <th class=\\\"w70\\\">QTY</th>\\n                            <th class=\\\"w140\\\">MFG Date</th>\\n                            <th class=\\\"w100\\\">Invoice</th>\\n                            <th class=\\\"w80 text-right\\\">Rate</th>\\n                            <th class=\\\"w100 text-right\\\">Amount</th>\\n                            <th class=\\\"w100 text-right\\\">Image</th>\\n                            <th class=\\\"w100\\\">Action</th>\\n                        </tr>\\n                    </table>\\n                </div>\\n                <div class=\\\"table-container\\\">\\n                    <div class=\\\"table-content\\\">\\n                        <table>\\n                            <tr *ngFor=\\\"let product of productList; let i=index\\\" [ngClass]=\\\"{ 'distributer' : product.status==1}\\\">\\n                                <td class=\\\"w100\\\">{{product.partNumber}}</td>\\n                                <td class=\\\"w90\\\">{{product.category}}</td>\\n                                <td  class=\\\"w90\\\">{{product.segment}}</td>\\n                                <td class=\\\"w90\\\">{{product.productName}}</td>\\n                                <td class=\\\"w70\\\">\\n                                    <div class=\\\"td-input\\\" >\\n                                        <input type=\\\"number\\\" (input)=\\\"calculateAmount(product.qty,i,product.productId)\\\"  name=\\\"qty\\\" #qty=\\\"ngModel\\\" [(ngModel)]=\\\"product.qty\\\">\\n                                    </div>\\n                                    <p *ngIf='!product.qty'>required</p>\\n                                </td>\\n                                <!-- Pre-Fitment Field -->\\n                                <td class=\\\"w140\\\" *ngIf='concern.product_type==1'>\\n                                    <div class=\\\"td-input\\\" style=\\\"display: flex; align-items: center;\\\">\\n                                        <input matInput [matDatepicker]=\\\"picker\\\"  (dateInput)=\\\"calculateAmount(product.qty,i,product.productId)\\\"  placeholder=\\\"Choose a date\\\"  name=\\\"{{date+index}}\\\" [(ngModel)]=\\\"product.date\\\"  #date=\\\"ngModel\\\"  [max]=\\\"maxDateValue\\\"  required>\\n                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                        <mat-datepicker #picker></mat-datepicker>\\n                                    </div>\\n                                    <p *ngIf='!product.date'>required</p>\\n                                </td>\\n                                <td class=\\\"w100\\\" *ngIf='concern.product_type==1'> \\n                                    <div class=\\\"td-input\\\">\\n                                        <input type=\\\"text\\\"    name=\\\"{{invoice+index}}\\\" #invoice=\\\"ngModel\\\" [(ngModel)]=\\\"product.invoice\\\" (input)=\\\"calculateAmount(product.qty,i,product.productId)\\\"  required>\\n                                    </div>\\n                                    <p *ngIf='!product.invoice'>required</p>\\n                                </td>\\n                                \\n                                <!--Pre-Fitment Field-->\\n                                <!--Post-Fitment Field-->\\n                                <td class=\\\"w140\\\" *ngIf='concern.product_type==2'>\\n                                    <div class=\\\"td-input\\\" style=\\\"display: flex; align-items: center;\\\">\\n                                        <input matInput [matDatepicker]=\\\"picker\\\"  (dateInput)=\\\"calculateAmount(product.qty,i,product.productId)\\\"  placeholder=\\\"Choose a date\\\" name=\\\"{{date+index}}\\\" [(ngModel)]=\\\"product.date\\\"  #date=\\\"ngModel\\\"  [max]=\\\"maxDateValue\\\" required>\\n                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                        <mat-datepicker #picker></mat-datepicker>\\n                                    </div>\\n                                </td>\\n                                <td class=\\\"w100\\\" *ngIf='concern.product_type==2'> \\n                                    <div class=\\\"td-input\\\">\\n                                        <input type=\\\"text\\\"    (keyup.enter)=\\\"addCart(product,index)\\\" (input)=\\\"calculateAmount(product.qty,i,product.productId)\\\"  name=\\\"{{invoice+index}}\\\" #invoice=\\\"ngModel\\\" [(ngModel)]=\\\"product.invoice\\\" required>\\n                                    </div>\\n                                    \\n                                </td>\\n                                \\n                                \\n                                <!--Post-Fitment Field -->\\n                                <td class=\\\"w80 text-right\\\">&#8377; {{product.priceUnit}}</td>\\n                                <td class=\\\"w100 text-right\\\">&#8377; {{product.amount}}</td>\\n                                <td class=\\\"w100 text-right\\\">   <a *ngIf=\\\"product.document!=null\\\" class=\\\"link-btn\\\" (click)=\\\"showImage(i)\\\"> View Image </a></td>\\n                                <td class=\\\"w100 text-center\\\">\\n                                    <div class=\\\"action-btns default-action\\\" style=\\\"right: 0;\\\"> \\n                                        <a  *ngIf=\\\"product.status=='1' || concernStatus!=2 \\\" class=\\\"edit\\\" mat-button  matTooltip=\\\"Save\\\"><i class=\\\"material-icons green-clr\\\" (click)=\\\"saveProduct(product,i)\\\">save</i></a>\\n                                        <a  *ngIf=\\\"product.status=='1'|| concernStatus!=2 \\\" class=\\\"delete\\\"  matTooltip=\\\"Delete\\\" mat-button><i class=\\\"material-icons red-clr\\\" (click)=\\\"remove(product.productId,i)\\\">delete_sweep</i></a>\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </mat-dialog-content>\\n    <mat-dialog-actions align=\\\"end\\\">\\n        <!-- <button mat-button  >Update</button> -->\\n        <button mat-raised-button color=\\\"warn\\\"  (click)=\\\" saveUpdate()\\\" >Close</button>\\n    </mat-dialog-actions>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\n@Component({\n  selector: 'app-update-concern',\n  templateUrl: './update-concern.component.html',\n})\nexport class UpdateConcernComponent implements OnInit {\n  productList:any=[];\n  concern:any=[];\n  tmp_productList:any=[];\n  finalProductList:any=[];\n  sales:any={};\n  category:any;\n  maxDateValue:any;\n  id:any;\n  url:any;\n  request:any;\n  api:any;\n  concernStatus:any;\n  user:any={};\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public dialog:MatDialog,public toast:SnackBarOverview,public service:ConstantService,public confirm:DialogComponent) { \n    console.log(data);\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.concernStatus=data['concernStatus']\n    this.category=data['category'];\n    this.tmp_productList=data['product'];\n    this.finalProductList=data['product'];\n    this.concern=data['concern'];\n    this.id=data['id'];\n  \n    this.get_detail();\n    console.log(this.concernStatus);\n  }\n  ngOnInit() {\n    \n    this.maxDateValue=new Date();\n  }\n  isView:boolean=false;\n  docId:any;\n  urlData:any;\n  isAlready:boolean=false;\n  showImage(index){\n    this.isAlready=false;\n    this.isView=true;\n    this.url=this.service.dburl;\n    this.request='download/document/';\n    this.api=this.url+this.request;\n    if(this.productList[index].document.binaryData!=null){\n      this.isAlready=false;\n      this.urlData=this.productList[index].document.binaryData;\n    }\n    else{\n      this.docId=this.productList[index].document.documentId;\n      this.isAlready=true;\n      console.log(this.docId,this.productList[index]);   \n    }\n  \n  }\n  get_detail(){\n    console.log(this.data);\n    console.log(this.tmp_productList);\n    \n    for(let i=0;i<this.tmp_productList.length;i++){\n      if(this.category === this.tmp_productList[i]['category'])\n      {\n        this.productList.push(\n   { \"amount\":this.tmp_productList[i].amount,\n    \"category\": this.tmp_productList[i].category,\n    \"date\": this.tmp_productList[i].date,\n    \"invoice\": this.tmp_productList[i].invoice,\n    \"partNumber\": this.tmp_productList[i].partNumber,\n    \"priceUnit\":this.tmp_productList[i].priceUnit,\n    \"productId\":this.tmp_productList[i].productId,\n    \"qty\":this.tmp_productList[i].qty,\n    \"segment\":this.tmp_productList[i].segment,\n    \"tmpamount\":this.tmp_productList[i].tmpamount,\n    \"tmpqty\":this.tmp_productList[i].tmpqty,\n    \"productName\":this.tmp_productList[i].productName,\n    \"isDealerItem\":this.tmp_productList[i].isDealerItem,\n    \"document\":this.tmp_productList[i].document,\n    \"natureOfComplaint\": this.tmp_productList[i].natureOfComplaint,\n    \"status\":this.tmp_productList[i].status,\n    \"statusUpdatedByUser\": this.tmp_productList[i].statusUpdatedByUser,\n    \"statusUpdatedOn\": this.tmp_productList[i].statusUpdatedOn\n        }\n        )\n     \n      }\n    \n    }\n    console.log(this.productList);\n    this.service.setData(this.tmp_productList);\n    \n  }\n\nprice:any;\namount:any;\n  calculateAmount(qty,i,id)\n  {\n    console.log(this.data);\n    console.log(this.productList,i);\n    if(parseInt(this.productList[i].priceUnit)>0)\n   {\n    this.price=this.productList[i].priceUnit;\n    this.amount=parseInt(qty)*parseInt(this.productList[i]['priceUnit']);\n   }\n     \n      \n  }\n  remove(id,index)\n  {\n    console.log(id,index);\n    \n    this.confirm.delete(\"product\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.productList.splice(index,1)\n        for(let i=0;i<this.tmp_productList.length;i++)\n        {\n          if(this.tmp_productList[i]['productId']==id)\n          {\n            this.tmp_productList.splice(i,1);\n          }\n        }\n        if(this.tmp_productList.length==0){\n          this.dialog.closeAll();\n        }\n      }\n    });\n   \n  }\n  saveUpdate()\n  {\n    console.log(\"save\");\n    console.log(this.tmp_productList);\n    \n    this.service.setData(this.tmp_productList);\n    this.dialog.closeAll();\n  }\n  saveProduct(product,i)\n  {\n    \n    if(this.concern.product_type==1){\n    if(product.qty&&product.invoice&&product.date)\n   {\n    this.productList[i].priceUnit=this.price;\n    this.productList[i].amount=this.amount;\n    let index=this.tmp_productList.findIndex(x=>x.productId==product.productId)\n    console.log(index);\n    this.tmp_productList[index].priceUnit=this.productList[i].priceUnit;\n    this.tmp_productList[index].amount=this.productList[i].amount;\n    this.tmp_productList[index].qty=this.productList[i].qty;\n    this.tmp_productList[index].invoice=this.productList[i].invoice;\n    this.tmp_productList[index].date=this.productList[i].date;\n    this.toast.openSucess('Updated Sucessfully!!','');\n    console.log(this.productList);\n    console.log(this.tmp_productList[i].qty);\n    \n  }\n  else{\n   \n     this.toast.openError('Please Enter Empty Fields!!','');\n     this.service.setData(this.tmp_productList);\n  }\n}\nelse{\n  if(product.qty)\n  {\n    this.productList[i].priceUnit=this.price;\n    this.productList[i].amount=this.amount;\n    this.tmp_productList[i].priceUnit=this.productList[i].priceUnit;\n    this.tmp_productList[i].amount=this.productList[i].amount;\n    this.tmp_productList[i].qty=this.productList[i].qty;\n    this.toast.openSucess('Updated Sucessfully!!','');\n    console.log(this.productList);\n   this.toast.openSucess('Updated Sucessfully!!','');\n }\n else{\n  \n    this.toast.openError('Please Enter Empty Fields!!','');\n    this.service.setData(this.tmp_productList);\n }\n}\n\n}\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n    <div *ngIf=\\\"loader\\\"> \\n      <mat-spinner class=\\\"loader\\\"></mat-spinner> \\n    </div>\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" novalidate>\\n    <div mat-dialog-content>\\n      \\n      <p class=\\\"heading\\\">Update Address</p>\\n      <div class=\\\"from-fields\\\">\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s4\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                <mat-select placeholder=\\\"Status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" [(ngModel)]=\\\"concernStatus.status\\\"  [ngClass]=\\\"{ 'is-invalid': f.submitted && status.invalid }\\\" required>\\n                  <mat-option   value=\\\"2\\\">Approved</mat-option>\\n                  <mat-option  value=\\\"3\\\">Rejected</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-error *ngIf=\\\"f.submitted && status.invalid\\\" class=\\\"invalid-feedback\\\">\\n                  <mat-error *ngIf=\\\"status.errors.required\\\">Status is required</mat-error>\\n                </mat-error>\\n            </div>\\n          </div>\\n          <div class=\\\"col s\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input infix-bodr8\\\" >\\n                <textarea  class=\\\"h90\\\" matInput placeholder=\\\"Nature Of Problem\\\" name=\\\"problem\\\" #problem=\\\"ngModel\\\" [(ngModel)]=\\\"concernStatus.problem\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && problem.invalid }\\\" required></textarea>\\n              </mat-form-field>\\n              <mat-error *ngIf=\\\"f.submitted && problem.invalid\\\" class=\\\"invalid-feedback\\\">\\n                  <mat-error *ngIf=\\\"problem.errors.required\\\">Nature Of Problem is required</mat-error>\\n                </mat-error>\\n            </div>\\n          </div>\\n      </div>\\n    </div>\\n    \\n    <div mat-dialog-actions>\\n      <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n      <ng-container>\\n        <button mat-raised-button color=\\\"accent\\\">Save</button>\\n      </ng-container>\\n    </div>\\n  </div>\\n</form>\\n  </div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog,MatDialogRef } from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\n@Component({\n  selector: 'app-update-status',\n  templateUrl: './update-status.component.html',\n})\nexport class UpdateStatusComponent implements OnInit {\n   concernStatus:any={};\n   product:any={};\n   productlist:any=[];\n   index:any;\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public dialog:MatDialog,public dialogRef: MatDialogRef<UpdateStatusComponent>,public toast:SnackBarOverview,public service:ConstantService,public confirm:DialogComponent) { \n     console.log(data);\n     if(data.product){\n       console.log(\"hii product\");\n       \n     this.product=data.product;\n     this.concernStatus.status=this.product.concernProductStatus;\n     this.concernStatus.problem=this.product.natureOfComplaint;\n     this.index=data.index;\n     }\n     else{\n      console.log(\"hii productlist test\");\n     this.productlist=data.productlist;\n     }\n     }\n\n  ngOnInit() {\n  \n  }\n  onSubmit(){\n    console.log(this.index);\n    if(this.productlist.length!=0){\n      if(this.concernStatus.status&&this.concernStatus.problem){\n        for(let i=0;i<this.productlist.length;i++){\n          if(this.productlist[i].datacheck==true){\n            console.log(\"hello list\");\n            \n        this.productlist[i].concernProductStatus=this.concernStatus.status;\n        this.productlist[i].natureOfComplaint=this.concernStatus.problem;\n          }\n        }\n        console.log(this.productlist);\n         this.dialogRef.close();\n        }\n    }\n    else{\n    if(this.concernStatus.status&&this.concernStatus.problem){\n    this.product.concernProductStatus=this.concernStatus.status;\n    this.product.natureOfComplaint=this.concernStatus.problem;\n    console.log(this.product);\n     this.dialogRef.close();\n    }\n  }\n \n   \n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n\\t<div class=\\\"dashboard-thumbnail\\\">\\n\\t\\t<div class=\\\"dashboard-area\\\">\\n\\t\\t\\t<div class=\\\"dashboard-content green-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-dis\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{counterArray.orderCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Total Order</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"dashboard-content yellow-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-dis\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{distributorCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Distributer</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"dashboard-content blue-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-task\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{counterArray.taskCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Total Task</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"dashboard-content orange-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-lead\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{leadCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Total Leads</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"dashboard-area\\\">\\n\\t\\t\\t<div class=\\\"dashboard-content yellow-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-dis\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{counterArray.followUpCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Today Follow ups</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"dashboard-content blue-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-task\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{counterArray.concernCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Total Customer Concern</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"dashboard-content orange-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-lead\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{counterArray.travelPlanCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Total Travel Plan</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"dashboard-content blue-bg\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"count-bg-task\\\">&nbsp;</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t\\t<h2>{{counterArray.expenseCount}}</h2>\\n\\t\\t\\t\\t\\t\\t<p>Total Expense</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"dashboard-area\\\">\\n\\t\\t\\t\\t<div class=\\\"dashboard-content blue-bg\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"count-bg-task\\\">&nbsp;</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h2>{{counterArray.popOrderCount}}</h2>\\n\\t\\t\\t\\t\\t\\t\\t<p>Total Pop & Gift Order</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"dashboard-content yellow-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-dis\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{counterArray.announcementCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Total Announcement</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"dashboard-content blue-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-task\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{counterArray.activityCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Total Activity</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"dashboard-content orange-bg\\\">\\n\\t\\t\\t\\t<div class=\\\"box \\\">\\n\\t\\t\\t\\t\\t<span class=\\\"count-bg-lead\\\">&nbsp;</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"text-box\\\">\\n\\t\\t\\t\\t\\t<h2>{{counterArray.popCount}}</h2>\\n\\t\\t\\t\\t\\t<p>Total Pop & Gift</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<div class=\\\"current-revenue mrb20\\\">\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","module.exports = \".orange-txt {\\n  color: #ffce54; }\\n\\n.green-txt {\\n  color: #00cc71; }\\n\\n.red-txt {\\n  color: #ff4c4c; }\\n\\n.blue-txt {\\n  color: #00acea; }\\n\\n.dark-blue-txt {\\n  color: #45748c; }\\n\\n.purple-txt {\\n  color: #ac92ec; }\\n\\n.yellow-txt {\\n  color: #ffce54; }\\n\\n.teal-green {\\n  color: #71c4d1; }\\n\\n.pink-txt {\\n  color: #e34d88; }\\n\\n.ul-clear:after, .dashboard-thumbnail:after, .dashboard-thumbnail .dashboard-area:after {\\n  display: table;\\n  content: \\\"\\\";\\n  clear: both; }\\n\\n.green-bg {\\n  background: #10c888 !important; }\\n\\n.yellow-bg {\\n  background: #fdbe09 !important; }\\n\\n.blue-bg {\\n  background: #0095d8 !important; }\\n\\n.orange-bg {\\n  background: #f18806 !important; }\\n\\n.dashboard-thumbnail {\\n  padding: 20px 30px; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content {\\n    float: left;\\n    margin-right: 2%;\\n    margin-bottom: 2%;\\n    width: 23.5%;\\n    display: flex;\\n    box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.1);\\n    background: #fff;\\n    border-radius: 4px;\\n    position: relative;\\n    padding: 10px;\\n    align-items: center; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content:nth-child(4n) {\\n      margin-right: 0; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content .box {\\n      width: 60px;\\n      min-width: 60px;\\n      height: 60px;\\n      border-radius: 4px;\\n      position: inherit;\\n      top: inherit;\\n      left: inherit;\\n      display: flex;\\n      align-items: center;\\n      background: #fff; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content .box span {\\n        width: 35px;\\n        height: 35px;\\n        border-radius: 100%;\\n        font-size: 25px;\\n        font-weight: 500;\\n        color: #11c888;\\n        display: block;\\n        text-align: center;\\n        line-height: 35px;\\n        text-align: center;\\n        background: #fff;\\n        margin: 0 auto; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content .box span.count-bg-dis {\\n          -webkit-mask-image: url('distribution_icon.svg');\\n          -webkit-mask-size: 90%;\\n          -webkit-mask-repeat: no-repeat;\\n          background: #fdbe09; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content .box span.count-bg-task {\\n          -webkit-mask-image: url('task.svg');\\n          -webkit-mask-size: 90%;\\n          -webkit-mask-repeat: no-repeat;\\n          background: #0095d8; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content .box span.count-bg-lead {\\n          -webkit-mask-image: url('leads_icon.svg');\\n          -webkit-mask-size: 90%;\\n          -webkit-mask-repeat: no-repeat;\\n          background: #f18806; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content .text-box {\\n      width: 100%;\\n      height: 100%;\\n      padding-left: 0px;\\n      text-align: center; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content .text-box p {\\n        font-size: 13px;\\n        color: #fff; }\\n\\n.dashboard-thumbnail .dashboard-area .dashboard-content .text-box h2 {\\n        font-size: 22px;\\n        color: #fff;\\n        font-weight: 500;\\n        line-height: 28px; }\\n\\n.current-revenue {\\n  display: flex; }\\n\\n.current-revenue .grap {\\n    width: 100%; }\\n\\n.current-revenue .month-revenue {\\n    width: 500px;\\n    box-shadow: 0px 3px 6px 0px #ccc;\\n    position: relative; }\\n\\n.current-revenue .month-revenue h2 {\\n      font-size: 17px;\\n      color: #fff;\\n      font-weight: 500;\\n      letter-spacing: 2px;\\n      padding: 10px; }\\n\\n.current-revenue .month-revenue h2.blue-heading {\\n        background: #02a2fa; }\\n\\n.current-revenue .month-revenue h2.red-heading {\\n        background: #ed3737; }\\n\\n.current-revenue .month-revenue span {\\n      width: 30px;\\n      height: 30px;\\n      border-radius: 100%;\\n      font-size: 14px;\\n      font-weight: 500;\\n      color: #02a2fa;\\n      display: block;\\n      text-align: center;\\n      line-height: 30px;\\n      text-align: center;\\n      background: #fff;\\n      position: absolute;\\n      top: 4px;\\n      right: 10px; }\\n\\n.current-revenue .month-revenue .revenue-table {\\n      border: 1px #ccc solid;\\n      border-bottom: 0px; }\\n\\n.current-revenue .month-revenue .revenue-table .table-header {\\n        background: #f5f5f5;\\n        padding-right: 4px; }\\n\\n.current-revenue .month-revenue .revenue-table .table-header table tr th {\\n          font-size: 14px;\\n          padding: 8px;\\n          font-weight: 500; }\\n\\n.current-revenue .month-revenue .revenue-table .table-body {\\n        background: #fff; }\\n\\n.current-revenue .month-revenue .revenue-table .table-body table tr td {\\n          font-size: 14px;\\n          padding: 8px;\\n          cursor: pointer; }\\n\\n.current-revenue .month-revenue .revenue-table .table-body table tr td:last-child {\\n            text-align: right; }\\n\\n.current-revenue .month-revenue .revenue-table .height385 {\\n        max-height: 385px;\\n        min-height: 385px;\\n        overflow: auto; }\\n\\n.text .jqx-chart-legend-text {\\n  display: none !important; }\\n\\n.db-heading h2 {\\n  font-size: 21px;\\n  background: #4398d1;\\n  padding: 5px;\\n  margin-bottom: 15px;\\n  color: #fff; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../constant.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(public service:ConstantService) {\n    this.count_list();\n   }\n\n  ngOnInit() {\n  }\n\n  counterArray:any={}\n  distributorCount:any=0\n  leadCount:any=0\n  count_list(){\nconsole.log(\"service\");\n\n    this.service.fileData(\"\",\"dashboard/count\").subscribe( r =>{\n      console.log(r);\n      if(r['status']=='Success')\n      {\n        this.counterArray=r['data'];\n        console.log(this.distributorCount);\n        if(this.counterArray.networkCount.length!=0)\n        {\n          this.distributorCount=this.counterArray.networkCount[0].total\n        }\n        if(this.counterArray.leadCount.length!=0)\n        {\n          this.leadCount=this.counterArray.leadCount[0].statusCount;\n        }\n      \n      }\n    });\n    \n    // return this.counterArray;\n  }\n  \n}\n","import { OnInit, Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n@Injectable({ providedIn: 'root' })\r\n\r\n\r\nexport class DialogComponent implements OnInit {\r\n  \r\n  constructor() { }\r\n  \r\n  ngOnInit() {\r\n  } \r\n  \r\n  confirmation(msg:any){\r\n    return Swal.fire({\r\n    title: 'Are you sure?',\r\n    text: '',\r\n    type: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes, do it!',\r\n    cancelButtonText: 'No, keep it'\r\n    }).then((result) => {\r\n    if (result.value) {\r\n    return true;\r\n    // For more information about handling dismissals please visit\r\n    // https://sweetalert2.github.io/#handling-dismissals\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n    Swal.fire(\r\n    'Cancelled',\r\n    'Your '+ msg +' data is not modfied :)',\r\n    'error'\r\n    )\r\n    return false;\r\n    }\r\n    })\r\n    }\r\n\r\n\r\n  delete(msg){\r\n    return Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'You will not be able to recover this '+msg,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      cancelButtonText: 'No, keep it'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        return true;\r\n        // For more information about handling dismissals please visit\r\n        // https://sweetalert2.github.io/#handling-dismissals\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your '+ msg +' is safe &#x263A;',\r\n          'error'\r\n          )\r\n          return false;\r\n          \r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    downloadConfirm(msg){\r\n      return Swal.fire({\r\n        title: 'Do you want to download '+msg+' ?',\r\n        text: '',\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Download it!',\r\n        cancelButtonText: 'No'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          return true;\r\n          // For more information about handling dismissals please visit\r\n          // https://sweetalert2.github.io/#handling-dismissals\r\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n          Swal.fire(\r\n            'Cancelled',\r\n            '',\r\n            'error'\r\n            )\r\n            return false;\r\n            \r\n          }\r\n        })\r\n      }\r\n\r\n\r\n    convert(msg){\r\n      return Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'You will not be able to recover this '+msg,\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, do it!',\r\n        cancelButtonText: 'No, keep it'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          return true;\r\n          // For more information about handling dismissals please visit\r\n          // https://sweetalert2.github.io/#handling-dismissals\r\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n          Swal.fire(\r\n            'Cancelled',\r\n            'Your '+ msg +' is not convert &#x263A;',\r\n            'error'\r\n            )\r\n            return false;\r\n            \r\n          }\r\n        })\r\n      }\r\n    \r\n      success(){\r\n        Swal.fire({\r\n          position: 'center',\r\n          type: 'success',\r\n          title: 'Your work has been saved',\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        })\r\n        }\r\n\r\n\r\n      leadSaveSuccess() {\r\n\r\n            Swal.fire({\r\n                position: 'center',\r\n                type: 'success',\r\n                title: 'Lead Saved Successfully!',\r\n                showConfirmButton: true\r\n            })\r\n      }\r\n      \r\n      error(msg:any) {\r\n\r\n          Swal.fire({\r\n            type: 'error',\r\n            title: 'Oops...',\r\n            text: msg,\r\n            // footer: '<a href>Why do I have this issue?</a>'\r\n          })\r\n      }\r\n      \r\n      alertWarning(text)\r\n      {\r\n          Swal.fire(text);\r\n      }\r\n\r\n\r\n      followup(msg){\r\n\r\n            return Swal.fire({\r\n            \r\n                title: 'Follow-Up',\r\n                \r\n                text: 'Do You Want To Create Next '+msg,\r\n                \r\n                type: 'warning',\r\n                \r\n                showCancelButton: true,\r\n                \r\n                confirmButtonText: 'Yes, Create it!',\r\n                \r\n                cancelButtonText: 'No, Leave it' })\r\n                \r\n                .then((result) => {if (result.value) {return true;\r\n                \r\n                } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                \r\n                  Swal.fire('Closed','Your '+ msg +' is closed &#x263A;','error' );\r\n                  return false; \r\n                }\r\n            })\r\n        \r\n        }\r\n      \r\n    }","module.exports = \"<div class=\\\"main-container\\\" [@routerTransition]> \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Discount</h2>\\n        <p>Add New Discount Master</p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container-outer\\\">\\n  <app-master-tab></app-master-tab>\\n  <div class=\\\"container tab-container\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"sprate-box pb0\\\">\\n          <div class=\\\"cs-heading\\\">\\n            <h2>USER TYPE</h2>\\n            <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n          </div>\\n          <mat-divider class=\\\"left-right-15 mt10\\\"></mat-divider>\\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12 pr0 pl0\\\">\\n              <div class=\\\"user-type\\\">\\n                <section class=\\\"example-section\\\">\\n                  <mat-checkbox class=\\\"example-margin\\\" color=\\\"accent\\\">CATEGORY</mat-checkbox>\\n                  <mat-checkbox class=\\\"example-margin\\\" color=\\\"accent\\\">BRAND</mat-checkbox>\\n                  <mat-checkbox class=\\\"example-margin\\\" color=\\\"accent\\\">FLAT DISCOUNT</mat-checkbox>\\n                </section>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          \\n          <div class=\\\"row mb0\\\">\\n            <div class=\\\"col s12 padding0\\\">\\n              <div class=\\\"cs-table left-right-20\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table>\\n                    <tr>\\n                      <th>Category\\n                        <div class=\\\"th-search\\\">\\n                          <input type=\\\"text\\\" placeholder=\\\"Search....\\\" class=\\\"w300\\\">\\n                          <i class=\\\"material-icons search-icon\\\">search</i>\\n                        </div>\\n                      </th>\\n                      <th class=\\\"w150\\\">Distributor (%)</th>\\n                      <th class=\\\"w150\\\">Retailer (%)</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                \\n                <div class=\\\"table-container pb0\\\">\\n                  <div class=\\\"table-content none-shadow\\\">\\n                    <table>\\n                      <tr>\\n                        <td>Example XYZ</td>\\n                        <td class=\\\"w150\\\">\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                        <td class=\\\"w150\\\">\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Example XYZ</td>\\n                        <td >\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                        <td class=\\\"w150\\\">\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Example XYZ</td>\\n                        <td >\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                        <td class=\\\"w150\\\">\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Example XYZ</td>\\n                        <td >\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                        <td class=\\\"w150\\\">\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Example XYZ</td>\\n                        <td >\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                        <td class=\\\"w150\\\">\\n                          <div class=\\\"td-input\\\">\\n                            <input type=\\\"text\\\">\\n                          </div>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                          <td>Example XYZ</td>\\n                          <td >\\n                            <div class=\\\"td-input\\\">\\n                              <input type=\\\"text\\\">\\n                            </div>\\n                          </td>\\n                          <td class=\\\"w150\\\">\\n                            <div class=\\\"td-input\\\">\\n                              <input type=\\\"text\\\">\\n                            </div>\\n                          </td>\\n                        </tr>\\n                    </table>\\n                  </div>\\n\\n                  <table class=\\\"discount-table\\\">\\n                      <tr>\\n                        <td>&nbsp;</td>\\n                        <td class=\\\"w150\\\"><input type=\\\"text\\\" placeholder=\\\"Discount\\\"></td>\\n                        <td class=\\\"w150\\\"><input type=\\\"text\\\" placeholder=\\\"Discount\\\"></td>\\n                      </tr>\\n                    </table>      \\n                </div>\\n\\n\\n               \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n          <div class=\\\"in-btn\\\">\\n            <button mat-raised-button color=\\\"accent\\\">Save</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n</div>\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\n\n@Component({\n  selector: 'app-add-discount',\n  templateUrl: './add-discount.component.html',\n  animations: [slideToTop()]\n})\nexport class AddDiscountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\" [@routerTransition]>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Discount</h2>\\n        <p>Add New Discount Master</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"container-outer\\\">\\n  <app-master-tab-list></app-master-tab-list>\\n  \\n  <div class=\\\"container tab-container\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"cs-table left-right-20\\\">\\n          <div class=\\\"table-head\\\">\\n            <table class=\\\"sno-border\\\">\\n              <tr>\\n                <th class=\\\"w30\\\">&nbsp;</th>\\n                <th>Category</th>\\n                <th class=\\\"w200 text-center\\\">Distributor (%)</th>\\n                <th class=\\\"w200 text-center\\\">Retailer(%)</th>\\n              </tr>\\n            </table>\\n          </div>\\n          \\n          <div class=\\\"table-container\\\">\\n            <div class=\\\"table-content\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr>\\n                  <td class=\\\"w30\\\">1</td>\\n                  <td>Category XYZ ABC 1</td>\\n                  <td class=\\\"w200 text-center\\\">12</td>\\n                  <td class=\\\"w200 text-center\\\">10</td>\\n                </tr>\\n                <tr>\\n                  <td>2</td>\\n                  <td>Category XYZ ABC 1</td>\\n                  <td class=\\\"text-center\\\">12</td>\\n                  <td class=\\\"text-center\\\">10</td>\\n                </tr>\\n                <tr>\\n                  <td>3</td>\\n                  <td>Category XYZ ABC 1</td>\\n                  <td class=\\\"text-center\\\">12</td>\\n                  <td class=\\\"text-center\\\">10</td>\\n                </tr>\\n                <tr>\\n                  <td>4</td>\\n                  <td>Category XYZ ABC 1</td>\\n                  <td class=\\\"text-center\\\">12</td>\\n                  <td class=\\\"text-center\\\">10</td>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\n\n@Component({\n  selector: 'app-discount-list',\n  templateUrl: './discount-list.component.html',\n  animations: [slideToTop()]\n})\nexport class DiscountListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.valid && p.valid && onSubmit()\\\">\\n  <div class=\\\"main-container\\\" >\\n    <div *ngIf=\\\"loader\\\"> \\n      <div class=\\\"cs-loader\\\">\\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n      </div>\\n    </div>\\n    <div class=\\\"middle-container\\\">\\n      <div class=\\\"page-heading\\\">\\n        <img src=\\\"assets/img/distribution_icon.svg \\\" class=\\\"h-icon\\\">\\n        <div class=\\\"heading-text\\\">\\n          <h2>Distribution network</h2>\\n          <p>Add New Network</p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>BASIC INFORMATION</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s8 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Company Name\\\" id=\\\"establishment\\\" #establishment=\\\"ngModel\\\" name=\\\"establishment\\\" #establishment=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : establishment.invalid } \\\" [(ngModel)]=\\\"distribution_form.establishment\\\" required>\\n                      </mat-form-field>\\n                      \\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && establishment.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"establishment.errors.required\\\">Company Name is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                    \\n                  </div>\\n                  <div class=\\\"col s4  pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Distributor Code\\\" id=\\\"networkCode\\\"  name=\\\"distCode\\\" #networkCode=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : networkCode.invalid } \\\" [(ngModel)]=\\\"distribution_form.networkCode\\\" required>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && networkCode.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"networkCode.errors.required\\\">Distributor Code is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"GST No.\\\" #gst=\\\"ngModel\\\" id=\\\"gst\\\" name=\\\"gst\\\" [(ngModel)]=\\\"distribution_form.gst\\\"  minlength=\\\"15\\\" maxlength=\\\"15\\\" min=\\\"0\\\" required>\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"gst.invalid && gst.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error >GST No. Must be 15 Digit</mat-error>\\n                      </mat-error>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && gst.invalid && !gst.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"gst.errors.required\\\">GST No. is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 \\\">\\n                    <div class=\\\"control-field\\\"> \\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Pan No.\\\" #pan=\\\"ngModel\\\" id=\\\"pan\\\" name=\\\"pan\\\" [(ngModel)]=\\\"distribution_form.pan\\\"  minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" required>\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && pan.invalid && pan.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error>Pan No. must be 10 digit!</mat-error>\\n                      </mat-error>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && pan.invalid && !pan.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"pan.errors.required\\\">Pan No. is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date Of Commencement\\\"   #date=\\\"ngModel\\\" id=\\\"dateOfCommencement\\\" #dateOfCommencement=\\\"ngModel\\\" name=\\\"dateOfCommencement\\\"  [(ngModel)]=\\\"distribution_form.dateOfCommencement\\\" [max]=\\\"currentDate\\\" readonly>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                      </mat-form-field>\\n                      \\n                      <!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!dateOfCommencement.valid && dateOfCommencement.touched\\\">\\n                        Date Of Commencement is required\\n                      </div>\\n                      <mat-error *ngIf=\\\"f.submitted && dateOfCommencement.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"dateOfCommencement.errors.required\\\">Date Of Commencement is required</mat-error>\\n                      </mat-error> -->\\n                    </div>\\n                  </div>\\n                </div>\\n\\n\\n                <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col s4 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"Source\\\" matNativeControl name=\\\"source\\\" id=\\\"source\\\" #source=\\\"ngModel\\\" [(ngModel)]=\\\"distribution_form.source\\\"  [ngClass]=\\\"{'has-error' : source.invalid }\\\">\\n                              <mat-option value=\\\"\\\" disabled>Select Source</mat-option>\\n                              <mat-option value=\\\"1\\\">SOCIAL</mat-option>\\n                              <mat-option value=\\\"5\\\">CALL</mat-option>\\n                              <mat-option value=\\\"2\\\">DIRECT</mat-option>\\n                              <mat-option value=\\\"3\\\">WALK-IN</mat-option>\\n                              <mat-option value=\\\"4\\\">REFERRAL</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          \\n                        </div>\\n                      </div>\\n\\n                  </div>\\n\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Applicant INFORMATION</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Name Of Applicant\\\" id=\\\"nameOfApplicant\\\" #nameOfApplicant=\\\"ngModel\\\" name=\\\"nameOfApplicant\\\"  [(ngModel)]=\\\"distribution_form.nameOfApplicant\\\" required >\\n                      </mat-form-field>\\n                      \\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && nameOfApplicant.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"nameOfApplicant.errors.required\\\">Applicant Name is required</mat-error>\\n                      </mat-error>\\n                      \\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 \\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Mobile\\\" #mobile=\\\"ngModel\\\" id=\\\"mobile\\\" name=\\\"mobile\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" [(ngModel)]=\\\"distribution_form.mobile\\\" required>\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && mobile.invalid && mobile.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error >mobile must be 10 digit</mat-error>\\n                      </mat-error>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && mobile.invalid && !mobile.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"mobile.errors.required\\\">mobile is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" [(ngModel)]=\\\"distribution_form.email\\\" required >\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && email.invalid && email.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error>Email is invalid</mat-error>\\n                      </mat-error>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && email.invalid && !email.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"email.errors.required\\\">Email is required</mat-error>\\n                      </mat-error>\\n                      \\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  \\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Landline\\\" #landline=\\\"ngModel\\\" id=\\\"landline\\\" name=\\\"landline\\\" minlength=\\\"6\\\" maxlength=\\\"13\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" [(ngModel)]=\\\"distribution_form.landline\\\">\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && landline.invalid && landline.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error>Landline is must be atleast 6 digit</mat-error>\\n                      </mat-error>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && landline.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"landline.errors.required\\\">Landline is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 \\\">\\n                    <div class=\\\"control-field\\\">\\n                      <!-- <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput type=\\\"date\\\" placeholder=\\\"Date Of Birth\\\" id=\\\"dateOfBirth\\\" #dateOfBirth=\\\"ngModel\\\" name=\\\"dateOfBirth\\\" min=\\\"0\\\"  [(ngModel)]=\\\"distribution_form.dateOfBirth\\\" >\\n                      </mat-form-field> -->\\n                      \\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput [matDatepicker]=\\\"pickerone\\\" placeholder=\\\"Date Of Birth\\\"   #date=\\\"ngModel\\\"id=\\\"dateOfBirth\\\" #dateOfBirth=\\\"ngModel\\\" name=\\\"dateOfBirth\\\" min=\\\"0\\\"  [(ngModel)]=\\\"distribution_form.dateOfBirth\\\" [max]=\\\"currentDate\\\" readonly>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"pickerone\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #pickerone></mat-datepicker>\\n                      </mat-form-field>\\n                      <!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!dateOfBirth.valid && dateOfBirth.touched\\\">\\n                        Date Of Birth is required\\n                      </div>\\n                      <mat-error *ngIf=\\\"f.submitted && dateOfBirth.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"dateOfBirth.errors.required\\\">Date Of Birth is required</mat-error>\\n                      </mat-error> -->\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <!-- <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput type=\\\"date\\\" placeholder=\\\"Date Of Marriage\\\" id=\\\"dateOfMarriage\\\" #dateOfMarriage=\\\"ngModel\\\" name=\\\"dateOfMarriage\\\" [(ngModel)]=\\\"distribution_form.dateOfMarriage\\\" >\\n                      </mat-form-field> -->\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput [matDatepicker]=\\\"pickertwo\\\" placeholder=\\\"Date Of Marriage\\\"   #date=\\\"ngModel\\\" id=\\\"dateOfMarriage\\\" #dateOfMarriage=\\\"ngModel\\\" name=\\\"dateOfMarriage\\\" [(ngModel)]=\\\"distribution_form.dateOfMarriage\\\" [max]=\\\"currentDate\\\" >\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"pickertwo\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #pickertwo></mat-datepicker>\\n                      </mat-form-field>\\n                      \\n                      <!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!dateOfMarriage.valid && dateOfMarriage.touched\\\">\\n                        Date Of Marriage is required...\\n                      </div>\\n                      <mat-error *ngIf=\\\"f.submitted && dateOfMarriage.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"dateOfMarriage.errors.required\\\">Date Of Marriage is required</mat-error>\\n                      </mat-error> -->\\n                    </div>\\n                  </div>\\n                  \\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box pt0 mt15\\\" >\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Target INFORMATION</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  \\n                  <div class=\\\"col s4 \\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <mat-select placeholder=\\\"Select year\\\" name=\\\"financialYear\\\" id=\\\"financialYear\\\" [(ngModel)]=\\\"distribution_form.financialYear\\\" #financialYear=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && financialYear.invalid }\\\" required>\\n                          <mat-option value=\\\"2019-2020\\\"  >2019-2020</mat-option>\\n                          <mat-option value=\\\"2020-2021\\\"  >2020-2021</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && financialYear.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"financialYear.errors.required\\\">Financial Year is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Yearly Target\\\" type=\\\"number\\\" id=\\\"targetLimit\\\"  #targetLimit=\\\"ngModel\\\" name=\\\"targetLimit\\\" #targetLimit=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : targetLimit.invalid } \\\" [(ngModel)]=\\\"distribution_form.targetLimit\\\" required>\\n                      </mat-form-field>\\n                      \\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && targetLimit.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"targetLimit.errors.required\\\">Yearly Target is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  \\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>CONTACT PERSON INFORMATION</h2>\\n              </div>\\n              <form #p=\\\"ngForm\\\" (ngSubmit)=\\\"p.valid && add_contact()\\\" novalidate>\\n                <div class=\\\"from-fields\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col s4 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" (keypress)=\\\"namecheck($event)\\\" [(ngModel)]=\\\"distribution_form.name\\\" required=\\\"{{distribution_form.mobile1 ? true : false}}\\\" [ngClass]=\\\"{'has-error' : name.invalid } \\\">\\n                        </mat-form-field>\\n                        \\n                        <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"name.errors.required\\\">Contact person is required</mat-error>\\n                        </mat-error>\\n                        \\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Mobile No. 1\\\" name=\\\"mobile1\\\" id=\\\"mobile1\\\" #mobile1=\\\"ngModel\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" [(ngModel)]=\\\"distribution_form.mobile1\\\" required=\\\"{{distribution_form.name ? true : false}}\\\" [ngClass]=\\\"{'has-error' : mobile1.invalid } \\\">\\n                        </mat-form-field>\\n                        \\n                        <mat-error *ngIf=\\\"f.submitted && !mobile1.valid && !mobile1.touched\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"mobile1.errors.required\\\">Mobile No 1 is required</mat-error>\\n                        </mat-error>\\n                        \\n                        <mat-error *ngIf=\\\"(f.submitted || p.submitted) && !mobile1.valid  && mobile1.touched\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error>Mobile No Must be 10 digit</mat-error>\\n                        </mat-error>\\n                        \\n                        \\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4 pr0\\\">\\n                      <div class=\\\"control-field pr80\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Mobile No. 2\\\" name=\\\"mobile2\\\"  #mobile2 = \\\"ngModel\\\" id=\\\"mobile2\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" [(ngModel)]=\\\"distribution_form.mobile2\\\" [ngClass]=\\\"{'has-error' : mobile2.invalid } \\\">\\n                        </mat-form-field>\\n                        \\n                        <mat-error *ngIf=\\\"f.submitted && mobile2.invalid && !mobile2.touched\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"mobile2.errors.required\\\">Mobile No is required</mat-error>\\n                        </mat-error>\\n                        \\n                        <mat-error *ngIf=\\\"f.submitted && mobile2.invalid && mobile2.touched\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error>Mobile No must be 10 digit!</mat-error>\\n                        </mat-error>\\n                        \\n                        \\n                        <div class=\\\"plus-btn\\\" style=\\\"top: 12px;\\\">\\n                          <button [disabled]=\\\"!distribution_form.name || !distribution_form.mobile1\\\" mat-raised-button color=\\\"accent\\\">\\n                            \\n                            <i class=\\\"material-icons\\\">add</i>\\n                          </button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n\\n              <div *ngIf=\\\"distribution_form.networkContacts.length>0\\\" class=\\\"row mt15\\\">\\n                <div class=\\\"col s12 padding0\\\">\\n                  <div class=\\\"cs-table left-right-20\\\">\\n                    <div class=\\\"table-head\\\">\\n                      <table>\\n                        <tr>\\n                          <th>Name</th>\\n                          <th class=\\\"w200\\\">Mobile1</th>\\n                          <th class=\\\"w200 bdr0\\\">Mobile2</th>\\n                          <th class=\\\"w130\\\">&nbsp;</th>\\n                        </tr>\\n                      </table>\\n                    </div>\\n                    <div class=\\\"table-container\\\">\\n                      <div class=\\\"table-content none-shadow\\\">\\n                        <table>\\n                          <tr  *ngFor=\\\"let contact of distribution_form.networkContacts;let i=index\\\">\\n                            <td>{{contact.name}}</td>\\n                            <td class=\\\"w200\\\">{{contact.mobile1}}</td>\\n                            <td class=\\\"w200\\\">{{contact.mobile2}}</td>\\n                            <td class=\\\"w130\\\">\\n                              <a mat-button class=\\\"del-btn\\\" (click)=\\\"removeContact(index)\\\">Delete</a>\\n                            </td>\\n                          </tr>\\n                        </table>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>ADDRESS INFORMATION</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <textarea matInput placeholder=\\\"Street\\\" name=\\\"street\\\" id=\\\"street\\\" #street=\\\"ngModel\\\" [(ngModel)]=\\\"distribution_form.street\\\" class=\\\"h100\\\"></textarea>\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s6 pr0\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"State\\\" name=\\\"state\\\" id=\\\"state\\\" [(ngModel)]=\\\"distribution_form.state\\\"  #state=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && state.invalid }\\\" required>\\n                              <mat-option  (click)=\\\"get_district()\\\" *ngFor='let state of statelist' value=\\\"{{state}}\\\">{{state}}</mat-option>  \\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && state.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"state.errors.required\\\">State is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"District\\\" name=\\\"district\\\" id=\\\"district\\\" [(ngModel)]=\\\"distribution_form.district\\\"  #district=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && district.invalid }\\\" required >\\n                              <mat-option (click)=\\\"get_city()\\\"  value=\\\"{{district.districtName}}\\\" *ngFor=\\\"let district of district1\\\">{{district.districtName}}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && district.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"district.errors.required\\\"> District is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"City\\\" (keyup.enter)=\\\"get_pincode(city.stateMasterId)\\\" id=\\\"city\\\" name=\\\"city\\\" [(ngModel)]=\\\"distribution_form.city\\\" #city=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && city.invalid }\\\" required >\\n                              <mat-option (click)=\\\"get_pincode(city.stateMasterId)\\\" *ngFor=\\\"let city of cities\\\"  value=\\\"{{city.cityName}}\\\">{{city.cityName}}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && city.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"city.errors.required\\\"> City is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"Pincode\\\"  name=\\\"pin\\\" id=\\\"pin\\\" [(ngModel)]=\\\"distribution_form.pin\\\"  #pin=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && pin.invalid }\\\" required>\\n                              <mat-option (click)=\\\"get_sales_terrtory(distribution_form.pin)\\\" *ngFor=\\\"let pin of areas\\\"  value=\\\"{{pin}}\\\">{{pin}}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && pin.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"pin.errors.required\\\"> Pincode is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    \\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            \\n            <div *ngIf=\\\"distribution_form.pin\\\" class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>\\n                  SHIPPING ADDRESS\\n                </h2>\\n              </div>\\n              <div class=\\\"same-as\\\">\\n                <mat-checkbox (change)=\\\"sameAsAddress($event)\\\"></mat-checkbox>Shipping Address same as Address\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <textarea matInput placeholder=\\\"Street\\\" name=\\\"shippingStreet\\\"  id=\\\"shippingStreet\\\" [(ngModel)]=\\\"networkShippings.street\\\" #shippingStreet=\\\"ngModel\\\" class=\\\"h220\\\"></textarea>\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s6 pr0\\\">\\n                      <div class=\\\"row\\\">\\n                          <div class=\\\"col s6\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"shop no\\\" #shippingoffice=\\\"ngModel\\\" name=\\\"shippingoffice\\\" id=\\\"shippingoffice\\\"  [(ngModel)]=\\\"networkShippings.office\\\" required>\\n                              </mat-form-field>\\n                              \\n                              <mat-error *ngIf=\\\"f.submitted && shippingoffice.invalid && shippingoffice.touched\\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"shippingoffice.errors.required\\\">Office No is invalid</mat-error>\\n                              </mat-error>\\n                              \\n                              <mat-error *ngIf=\\\"f.submitted && shippingoffice.invalid && !shippingoffice.touched\\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"shippingoffice.errors.required\\\">Office No is required</mat-error>\\n                              </mat-error>\\n                            </div>\\n                          </div>\\n                        </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Email\\\" #shippingEmail=\\\"ngModel\\\" name=\\\"shippingEmail\\\" id=\\\"shippingEmail\\\"  pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" [(ngModel)]=\\\"networkShippings.email\\\" required>\\n                          </mat-form-field>\\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && shippingEmail.invalid && shippingEmail.touched\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"shippingEmail.errors.required\\\">Email is invalid</mat-error>\\n                          </mat-error>\\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && shippingEmail.invalid && !shippingEmail.touched\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"shippingEmail.errors.required\\\">Email is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Landline\\\" #shippingLandline=\\\"ngModel\\\" name=\\\"shippingLandline\\\" id=\\\"shippingLandline\\\" minlength=\\\"6\\\" maxlength=\\\"13\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" [(ngModel)]=\\\"networkShippings.landline\\\">\\n                          </mat-form-field>\\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && shippingLandline.invalid && shippingLandline.touched\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error>Landline must be atleast 6 digit</mat-error>\\n                          </mat-error>\\n                          \\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && shippingLandline.invalid && !shippingLandline.touched\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"shippingLandline.errors.required\\\">Landline is required</mat-error>\\n                          </mat-error>\\n                          \\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Fax\\\" id=\\\"fax\\\" #fax=\\\"ngModel\\\" name=\\\"landline\\\" minlength=\\\"10\\\" maxlength=\\\"13\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" [(ngModel)]=\\\"networkShippings.fax\\\">\\n                          </mat-form-field>\\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && fax.invalid && fax.touched\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"shippingLandline.errors.required\\\">Enter Valid FAX No</mat-error>\\n                          </mat-error>\\n                          \\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Mobile\\\" #shippingMobile1=\\\"ngModel\\\" name=\\\"shippingMobile1\\\" id=\\\"shippingMobile1\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" [(ngModel)]=\\\"networkShippings.mobile\\\" required>\\n                          </mat-form-field>\\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && shippingMobile1.invalid && shippingMobile1.touched\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error>mobile must be 10 digit</mat-error>\\n                          </mat-error>\\n                          \\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && shippingMobile1.invalid && !shippingMobile1.touched\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"shippingMobile1.errors.required\\\">mobile is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"State\\\" id=\\\"Shipingstate\\\" name=\\\"Shipingstate\\\" [(ngModel)]=\\\"networkShippings.state\\\"  #Shipingstate=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Shipingstate.invalid }\\\" required>\\n                              <mat-option  (click)=\\\"getShippingDistrict(networkShippings.state)\\\" *ngFor='let state of shippingState' value=\\\"{{state}}\\\">{{state}}</mat-option>  \\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && Shipingstate.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"Shipingstate.errors.required\\\">State is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"District\\\" id=\\\"Shippingdistrict\\\" name=\\\"Shippingdistrict\\\" [(ngModel)]=\\\"networkShippings.district\\\"  #Shippingdistrict=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Shippingdistrict.invalid }\\\" required >\\n                              <mat-option (click)=\\\"getShippingCity(networkShippings.state,networkShippings.district)\\\"  value=\\\"{{district.districtName}}\\\" *ngFor=\\\"let district of shippingDistrict\\\">{{district.districtName}}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && Shippingdistrict.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"Shippingdistrict.errors.required\\\"> District is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div> \\n                    </div>\\n                    \\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"City\\\" id=\\\"Shippingcity\\\" name=\\\"Shippingcity\\\" [(ngModel)]=\\\"networkShippings.city\\\" #Shippingcity=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Shippingcity.invalid }\\\" required >\\n                              <mat-option (click)=\\\"getShippingPin(city.stateMasterId)\\\" *ngFor=\\\"let city of shippingCity\\\"  value=\\\"{{city.cityName}}\\\">{{city.cityName}}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && Shippingcity.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"Shippingcity.errors.required\\\"> City is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"Pincode\\\" id=\\\"Shippingpin\\\" name=\\\"Shippingpin\\\" [(ngModel)]=\\\"networkShippings.pin\\\"  #Shippingpin=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Shippingpin.invalid }\\\" required>\\n                              <mat-option *ngFor=\\\"let pin of shippingPin\\\"  value={{pin}}>{{pin}}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && Shippingpin.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"Shippingpin.errors.required\\\"> Pincode is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n          <div *ngIf=\\\"distribution_form.pin\\\" class=\\\"sprate-box pt0 mt15\\\">\\n\\n              <div class=\\\"cs-heading\\\">\\n                <h2>\\n                  ASSIGN INFORMATION\\n                </h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n\\n                <div class=\\\"col s4 pl0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select placeholder=\\\"Select Segment\\\" id=\\\"segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"distribution_form.segment\\\" #segment=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && segment.invalid }\\\" multiple required>\\n                        <mat-option value=\\\"{{segment.text}}\\\"  *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && segment.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"segment.errors.required\\\">Segment is required</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n\\n                <!-- <div *ngIf=\\\"distribution_form.segment\\\" class=\\\"col s4\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select placeholder=\\\"Territory\\\" id=\\\"tid\\\" name=\\\"tid\\\" [(ngModel)]=\\\"distribution_form.tid\\\"  #tid=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && tid.invalid }\\\" multiple>\\n                        <mat-option (click)=\\\"rolelist1()\\\" *ngFor=\\\"let saleslist of saleslist;let index=index\\\"  value=\\\"{{saleslist.territoryID}}\\\" >{{saleslist.territoryName}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && tid.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"tid.errors.required\\\"> Territory is required</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"distribution_form.segment\\\" class=\\\"col s4\\\">\\n                    <div class=\\\"control-field\\\">\\n                       <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"Select Role Type\\\" id=\\\"salesuserrole\\\" name=\\\"salesuserrole\\\" [(ngModel)]=\\\"distribution_form.salesuserrole\\\"  #salesuserrole=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && salesuserrole.invalid }\\\"  required >\\n                          <mat-option (click)=\\\"get_sales_user(distribution_form.tid,$event.checked,index)\\\" *ngFor=\\\"let user of AllUserList \\\" value={{user.roleId}}>{{user.roleName}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && salesuserrole.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"salesuserrole.errors.required\\\">Sales User Role is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                \\n                <div *ngIf=\\\"distribution_form.segment\\\" class=\\\"col s4 pr0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select placeholder=\\\"Select SalesUser\\\"  name=\\\"salesUsers\\\" id=\\\"salesUsers\\\" [(ngModel)]=\\\"distribution_form.salesUsers\\\"  #salesUsers=\\\"ngModel\\\" multiple>\\n                        <mat-option *ngFor=\\\"let sales of sales_user_data;let i=index\\\" value=\\\"{{sales.userId}}\\\">{{sales.userName}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div> -->\\n\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>\\n                  BANK DEATIL\\n                </h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"col s4 pl0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <input matInput placeholder=\\\"Bank Name\\\" id=\\\"bankName\\\" #bankName=\\\"ngModel\\\" name=\\\"bankName\\\"  [(ngModel)]=\\\"distribution_form.bankName\\\" required >\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!bankName.valid && bankName.touched\\\">\\n                      Bank Name is required\\n                    </div>\\n                    <mat-error *ngIf=\\\"f.submitted && bankName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"bankName.errors.required\\\">Bank Name is required</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n                <div class=\\\"col s4 \\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <input matInput placeholder=\\\"Account Number\\\" id=\\\"accountNumber\\\" #accountNumber=\\\"ngModel\\\" name=\\\"accountNumber\\\" minlength=\\\"10\\\" maxlength=\\\"14\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" [(ngModel)]=\\\"distribution_form.accountNumber\\\" required>\\n                    </mat-form-field>\\n                    \\n                    <mat-error *ngIf=\\\"f.submitted && accountNumber.invalid && accountNumber.touched\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error>Account Number must be atleast 10 digit</mat-error>\\n                    </mat-error>\\n                    \\n                    <mat-error *ngIf=\\\"f.submitted && accountNumber.invalid && !accountNumber.touched\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"accountNumber.errors.required\\\">Account Number is required</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n                <div class=\\\"col s4 pr0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <input matInput placeholder=\\\"IFSC Code\\\" id=\\\"ifscCode\\\" #ifscCode=\\\"ngModel\\\" minlength=\\\"11\\\" maxlength=\\\"11\\\" name=\\\"ifscCode\\\"  [(ngModel)]=\\\"distribution_form.ifscCode\\\" required>\\n                    </mat-form-field>\\n                    \\n                    <mat-error *ngIf=\\\"f.submitted && ifscCode.invalid && ifscCode.touched\\\"  class=\\\"invalid-feedback\\\">\\n                      <mat-error>IFSC Code Must be 11 digit</mat-error>\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"f.submitted && ifscCode.invalid && !ifscCode.touched\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"ifscCode.errors.required\\\">IFSC Code is required</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"setFocus(f.form, p.form)\\\" >Save</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n<div class=\\\"h50\\\"></div>\\n\\n\\n\"","import { Component, OnInit, Renderer2 ,PLATFORM_ID, Inject} from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport * as $ from 'jquery';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-add-distribution',\n  templateUrl: './add-distribution.component.html',\n  animations: [slideToTop()]\n})\nexport class AddDistributionComponent implements OnInit {\ndistribution_form:any={};\nleadstatemasteroid:any;\nnetworkContacts:any=[];\nstatelist:any=[];\nst:any=[];\nsalesUser:any=[];\nmessage:any=[];\ndistrictlist:any=[];\nsaleslist:any=[];\nterritoryId:any;\ndistrict1:any=[];\ncitylist:any=[];\ndistricts1:any=[];\ncities:any=[];\ndistricts2:any=[];\ncities1:any=[];\nareas:any=[];\nloader:any=false;\nrolelists:any;\nclient1:any=[];\nsegmentlist:any=[];\nchecked:any;\nnetworkSegments:any=[];\nnetworkShippings:any={};\nshippingState:any=[];\nshippingDistrict:any=[];\nshippingCity:any=[];\nshippingPin:any=[];\nleadId:any={};\nleaddetail:any={};\n\nbirthMinDate:any;\nbirthMaxDate:any;\ncurrentDate:any;\n\nisShippingAddressSame:any = '';\n  constructor(public db:ConstantService,\n              public toast:SnackBarOverview,\n              public router:Router,\n              private renderer: Renderer2,\n              public msg:DialogComponent,@Inject(PLATFORM_ID) private platformId: Object) {\n                this.networkShippings.country='India';\n                this.get_state();\n                this.getshippingState();\n                this.renderer.removeClass(document.body, 'nav-active');\n                this.leadId= JSON.parse(localStorage.getItem('leadId')) || [];\n                localStorage.setItem('leadId', JSON.stringify(''));\n                console.log(this.leadId);\n                this.distribution_form.networkContacts = [];\n                this.currentDate = new Date();\n  }\n\n\n\n  ngOnInit() {\n    this.distribution_form.role=12;\n    this.rolelist();\n    this.segment_list();\n    console.log(this.leadId.referenceId);\n    if(this.leadId.referenceId){\n      this.show_details();\n    }\n  }\n\n  leadsegment:any=[];\n  show_details(){\n    this.loader=true;\n    this.db.fileData(this.leadId.referenceId,'lead/detail/').subscribe((response)=>{\n    console.log(response);\n    this.leaddetail=response['data'];\n    console.log(this.leaddetail);\n    this.distribution_form.establishment=this.leaddetail.establishment;\n    this.distribution_form.street=this.leaddetail.street;\n    this.distribution_form.mobile=this.leaddetail.mobile;\n    this.distribution_form.email=this.leaddetail.email;\n    this.distribution_form.landline=this.leaddetail.landline;\n    this.distribution_form.networkContacts=this.leaddetail.leadContacts;\n    this.distribution_form.state=this.leaddetail.state;\n    this.distribution_form.city=this.leaddetail.city;\n    this.distribution_form.district=this.leaddetail.district;\n    this.distribution_form.pin=this.leaddetail.pin;\n    this.distribution_form.source=this.leaddetail.source;\n  console.log(this.leaddetail.leadSegments);\n    for(var t=0;t<this.leaddetail.leadSegments.length;t++){\n      console.log(this.leaddetail.leadSegments[t].segment)\n      this.leadsegment.push(this.leaddetail.leadSegments[t].segment);\n      }\n      console.log(this.leadsegment);\n      this.distribution_form.segment=this.leadsegment;\n      console.log(this.distribution_form.sgment);\n    setTimeout(() => {\n      this.get_district();\n    this.get_city();\n    }, 1000);\n    setTimeout(() => {\n      this.get_sales_terrtory(this.distribution_form.pin)\n    }, 900);\n    \n    });\n  }\n\n\n\n  setFocus(form, contactForm) {\n      for (var key in form.controls)\n      {\n          if (form.controls.hasOwnProperty(key)) {\n              if(form.controls[key].status=='INVALID')\n              {\n                if (isPlatformBrowser(this.platformId)) {\n                          $('#'+key).focus();\n                        }\n                        return true;\n              }\n              console.log(key + \" -> \" + form.controls[key].status);\n          }\n      }\n      \n      console.log(contactForm.controls);\n      for (var key in contactForm.controls)\n      {\n          if (contactForm.controls.hasOwnProperty(key)) {\n            if(contactForm.controls[key].status=='INVALID')\n            {\n                if (isPlatformBrowser(this.platformId)) {\n                        console.log(key);\n                        $('#'+key).focus();\n                        $(window).scrollTop(150);\n                }\n                console.log(key);\n                return true;\n            }\n              console.log(key + \" -> \" + contactForm.controls[key].status);\n          }\n      }\n  }\n\n\n\n  rolelist(){\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.rolelists=response['data'];\n      let cllient= this.rolelists.filter(x => x.userTypeId==3);\n      this.client1=cllient[0].roles;\n      console.log(this.client1);\n    });\n  }\n\n\n\n  segment_list(){\n    this.db.fileData('','segment/list/').subscribe((response)=>{\n      console.log(response);\n      this.segmentlist=response['data'];\n\n    });\n  }\n\n\n  shipping:any=[];\n  onSubmit() {\n      this.loader=true;\n      if(this.distribution_form.salesUsers) {\n            for(var i=0;i < this.distribution_form.salesUsers.length;i++) {\n                for(var j=0;j < this.sales_user_data.length;j++) {\n                    if(this.distribution_form.salesUsers[i]==this.sales_user_data[j].userId){\n                        this.salesUser.push({'salesUserId':this.sales_user_data[i].userId,'territoryId':this.sales_user_data[i].territoryId,'salesUserName':this.sales_user_data[i].userName,'salesUserRole':this.sales_user_data[i].role});\n                    }\n                }\n            }\n      }\n\n      console.log(this.salesUser);\n      console.log('hello');\n\n      for(let i=0;i<this.distribution_form.segment.length;i++) {\n\n           this.networkSegments.push( {\"segmentCode\": this.distribution_form.segment[i],\n          \"segment\": this.distribution_form.segment[i]});\n      }\n\n\n        if(this.distribution_form.name) {\n\n            if(!this.distribution_form.mobile2 || this.distribution_form.mobile2 == null) {\n               this.distribution_form.mobile2 = '';\n            }\n\n            this.distribution_form.networkContacts.push({name:this.distribution_form.name,mobile1:this.distribution_form.mobile1,mobile2:this.distribution_form.mobile2});\n        }\n\n\n      this.shipping.push(this.networkShippings);\n      this.distribution_form.salesUsers=this.salesUser;\n      this.distribution_form.networkSegments=this.networkSegments;\n      this.distribution_form.country=\"India\";\n      this.distribution_form.networkShippings=this.shipping;\n      console.log(this.distribution_form);\n      console.log(this.distribution_form.salesUsers);\n\n      const distributionData = JSON.parse(JSON.stringify(this.distribution_form));\n      delete distributionData['financialYear'];\n      delete distributionData['targetLimit'];\n\n     this.db.fetchData(distributionData,'network/add').subscribe((response)=>\n     {\n            console.log(response)\n            this.networkSegments=[];\n            if(response['status']==\"Success\")\n            {\n                if(response['data']) {\n                      let sanddata={'financialYear':this.distribution_form.financialYear,'networkId':response['data'],'targetLimit':this.distribution_form.targetLimit};\n                      console.log(sanddata);\n                      this.db.fetchData(sanddata,'network/limit/add').subscribe((resp)=>{\n                           console.log(resp);\n                           this.loader=false;\n                           this.toast.openSucess('Distributor Network added successfully','');\n                           this.router.navigate(['/distribution-list']);\n                      })\n                }\n                console.log(this.leadId.taskId);\n                if(this.leadId.taskId){\n                  this.leadId.leadConverted=true;\n                  let value={\"taskId\":this.leadId.taskId,\"userId\":this.leadId.userId,\"taskStatus\":2,\"leadConverted\":this.leadId.leadConverted,\"referenceId\":this.leadId.referenceId,'taskType':this.leadId.taskType};\n                  this.db.fetchData(value,\"task/update\").subscribe((result)=>{\n                 console.log(result);\n                 if(result['status']=='Success')\n                  {\n                    setTimeout(() => {\n                      this.toast.openSucess('Task Closed Successfully','');\n                    }, 1000);\n                    \n                    }\n                  })\n             }\n            }\n            else\n            {\n                  this.loader=false;\n                  this.distribution_form.name=\"\";\n                  this.distribution_form.mobile1=\"\";\n                  this.distribution_form.mobile2=\"\";\n                  this.msg.error(response['message']);\n            };\n     })\n}\n\n\n\nremoveContact(index)\n{\n  this.distribution_form.networkContacts.splice(index,1);\n}\n\n\n\nadd_contact(){\n\n      if(this.distribution_form.mobile2==null)\n      {\n          this.distribution_form.mobile2=0;\n      }\n\n      this.distribution_form.networkContacts.push({name:this.distribution_form.name,mobile1:this.distribution_form.mobile1,mobile2:this.distribution_form.mobile2});\n\n      console.log(this.distribution_form.networkContacts);\n\n      this.distribution_form.country=\"India\";\n      this.distribution_form.name=\"\";\n      this.distribution_form.mobile1=\"\";\n      this.distribution_form.mobile2=\"\";\n}\n\n\n\nterritoryList:any=[];\nget_sales(pin){\n  this.loader=true;\n  console.log(pin);\n  console.log('hello');\n  this.db.fileData(pin,'territorybypin/').subscribe((response)=>{\n    console.log(response);\n    this.loader=false\n    if(response['status']=='Success')\n    {\n      this.territoryId=response['data'];\n      console.log(this.territoryId);\n      const territoryIDs = [];\n      for (let index = 0; index < this.territoryId.length; index++){\n           territoryIDs.push(this.territoryId[index].territoryId);\n      }\n      console.log(territoryIDs);\n      this.loader=true;\n    }\n  })\n}\n\n\n\n\n\n\nsales_user_data:any=[];\nget_sales_user(data,event,index){\n  this.sales_user_data=[];\n  console.log(data);\n  console.log(event);\n  console.log(index);\n console.log(this.distribution_form.salesuserrole);\n  this.db.fetchData({},'territory/salesusers?territoryIds='+data).subscribe((response)=>{\n        console.log(response);\n        let tempuserdata=response['data'];\n\n        const role=tempuserdata.filter(x=>x.role==this.distribution_form.salesuserrole)\n        if(role.length!=0)\n        {\n          console.log(role);\n          this.sales_user_data=role;\n        }\n        // else{\n        //   const role=tempuserdata.filter(x=>x.role==8)\n        //   if(role.length!=0)\n        //   {\n        //     console.log(role);\n        //     this.sales_user_data=role;\n        //   }\n        //   else\n        //   {\n        //       const role=tempuserdata.filter(x=>x.role==7)\n        //       if(role.length!=0)\n        //       {\n        //         console.log(role);\n        //         this.sales_user_data=role;\n        //       }\n        //       else{\n        //         const role=tempuserdata.filter(x=>x.role==6)\n        //       if(role.length!=0)\n        //       {\n        //         console.log(role);\n        //         this.sales_user_data=role;\n        //       }\n        //       }\n        //   }\n        // }\n      })\n    console.log(this.sales_user_data);\n}\n\n\nrolelists1:any=[];\nAllUserList:any=[]\nrolelist1() {\n  this.loader=true;\n  this.db.fileData('','usertype/list').subscribe((response)=>{\n        console.log(response);\n        this.rolelists1=response['data'];\n        this.loader=false;\n        let filterrolelead= this.rolelists1.filter(x => x.userTypeId==2);\n          this.AllUserList=filterrolelead[0].roles;\n          console.log(this.AllUserList);\n      });\n    }\n\n    // userList(role){\n    //   console.log(role);\n    //   const rolee=this.saleslist.filter(x=>x.role==role);\n    //             this.territoryList = [];\n    //             if(role.length != 0)\n    //             {\n    //                 console.log(rolee);\n    //                 this.territoryList = rolee;\n    //             }\n    //   }\n\n\n\n  get_sales_terrtory(pin){\n    if(!pin){\n      pin=this.distribution_form.pin;\n    }\n    console.log(this.distribution_form.segment);\n    this.db.fetchData({'pinCode':pin,\"segments\":this.distribution_form.segment },'territory/list').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        this.saleslist =response['data'];\n        // this.saleslist=response['data'][0]['salesUsers'];\n        console.log(this.saleslist);\n })\n}\n\n\nMobileNumber(event: any) \n  {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n   namecheck(event: any) \n  {\n    const pattern = /[A-Z\\+\\a-z\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n\n\n\n\nget_state(){\n  console.log(\"stats runnning.....\");\n  this.loader=true;\n  this.db.fileData('','state/list/').subscribe((response)=>{\n    console.log(response);\n    this.loader=false;\n    this.statelist=response['data'];\n    this.shippingState=response['data'];\n  });\n}\n\n\n\n\nget_district(){\n  this.loader=true;\n  console.log(\"district running....\");\n  \n  //  this.distribution_form.district='';\n  //  this.distribution_form.pin='';\n  //  this.distribution_form.city='';\n  console.log(this.distribution_form.state);\n  this.st=Array(this.distribution_form.state)\n  this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n    this.loader=false;\n    console.log(response);\n    this.districtlist=response['data'];\n    this.district1=this.districtlist[0].distrcits;\n    this.shippingDistrict=response['data'][0].distrcits;\n    console.log(this.district1);\n  });\n}\n\n\n\nget_city() {\n  this.loader=true;\n  console.log(this.distribution_form.state);\n  console.log(this.distribution_form.district);\n  console.log(\"city runniyng..\");\n  this.db.fetchData(Array({\"stateName\":this.distribution_form.state,\"distrcits\":Array({\"districtName\":this.distribution_form.district})}),'city/list').subscribe((response)=>{\n    console.log(response);\n    this.loader=false\n    this.citylist=response['data'];\n    this.districts1=this.citylist[0].distrcits;\n    // this.shippingCity=response['data'][0].cities;\n    this.cities=this.districts1[0].cities;\n    this.shippingCity= JSON.parse(JSON.stringify(this.cities)); \n    console.log(this.cities);\n    let statemasterdata=[];\n    statemasterdata=this.cities.filter(x => x.cityName==this.distribution_form.city);\n    console.log(statemasterdata);\n    this.leadstatemasteroid=statemasterdata[0]['stateMasterId'];\n    console.log(this.leadstatemasteroid);\n      this.get_pincode(this.leadstatemasteroid);\n  });\n}\n\n\n\nget_pincode(stateMasterId){\n  this.loader=true;\n  console.log(stateMasterId);\n  let cityarray=[];\n    cityarray[0]=stateMasterId;\n  // this.loader=true;\n  // this.distribution_form.pin='';\n  // console.log(this.distribution_form.state,this.distribution_form.district,this.distribution_form.city);\n  this.db.fetchData({'stateMasterIds':cityarray,},'city/pincodes').subscribe((response)=>{\n    console.log(response);\n    this.loader=false\n    this.citylist=response['data'];\n    // this.districts2=this.citylist[0].distrcits;\n    // this.cities1=this.districts2[0].cities;\n    // let filterpincode= this.cities1.filter(x => x.cityName==this.distribution_form.city);\n    this.areas=response['data'][0].pinCodes;\n    this.shippingPin=this.areas;\n    console.log( this.areas);\n    console.log(this.cities1);\n  });\n}\n\n\n\ngetshippingState()\n{\n  this.loader=true;\n  this.db.fileData('','state/list/').subscribe((response)=>{\n    console.log(response);\n    this.loader=false;\n    this.shippingState=response['data'];\n  });\n}\n\n\ngetShippingDistrict(state)\n{\n  this.st=Array(state)\n  this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n    this.loader=false;\n    console.log(response);\n    this.shippingDistrict=response['data'][0].distrcits;\n    console.log(this.district1);\n  });\n}\n\n\n\ngetShippingCity(state,district)\n{\n  this.db.fetchData(Array({\"stateName\":state,\"distrcits\":Array({'districtName':district})}),'city/list').subscribe((response)=>{\n    console.log(response);\n    this.loader=false\n    this.shippingCity=response['data'][0].distrcits[0].cities;\n    console.log(this.shippingCity);\n  });\n}\n\n\n\ngetShippingPin(stateMasterId)\n{\n  this.loader=true;\n  console.log(stateMasterId);\n  let cityarray=[];\n    cityarray[0]=stateMasterId;\n  this.db.fetchData({'stateMasterIds':cityarray},'city/pincodes').subscribe((response)=>{\n    console.log(response);\n    this.loader=false\n    this.shippingPin=response['data'][0]['pinCodes'];\n    // this.districts2=this.citylist[0].distrcits;\n    // this.cities1=this.districts2[0].cities;\n    // let filterpincode= this.cities1.filter(x => x.cityName==this.networkShippings.city);\n    // this.shippingPin=filterpincode[0].pinCodes;\n  });\n}\n\n\n\nsameAsAddress(event)\n{\n    console.log(event);\n    if(event.checked)\n    {\n        this.isShippingAddressSame = 'Yes';\n        this.networkShippings.state=this.distribution_form.state;\n        this.networkShippings.district=this.distribution_form.district;\n        this.networkShippings.pin=this.distribution_form.pin;\n        console.log(this.distribution_form.city);\n        console.log(\"check city of address\");\n        this.networkShippings.city=this.distribution_form.city;\n        this.networkShippings.street=this.distribution_form.street;\n    } else {\n        this.isShippingAddressSame = 'No';\n        this.networkShippings.state=''\n        this.networkShippings.district=''\n        this.networkShippings.pin=''\n        this.networkShippings.city=''\n        this.networkShippings.street=''\n    }\n}\n\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/distribution-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{networkUserDetail.establishment}}</h2>\\n        <p class=\\\"light\\\"*ngIf=\\\"networkUserDetail.role=='13'\\\">Retailer</p>\\n        <p class=\\\"light\\\" *ngIf=\\\"networkUserDetail.role=='12'\\\">Distributor</p>\\n        <p class=\\\"light\\\"*ngIf=\\\"networkUserDetail.role=='11'\\\">Whole saler</p>\\n        <p class=\\\"light\\\" *ngIf=\\\"networkUserDetail.role=='14'\\\">Engine Reconditiner</p>\\n        <p class=\\\"light\\\"*ngIf=\\\"networkUserDetail.role=='15'\\\">Mechanic</p>\\n      </div>\\n    </div>\\n    \\n    <div *ngIf=\\\"userType=='1' || userType=='2'\\\" class=\\\"left-auto\\\" style=\\\"display: flex;\\\">\\n      <div class=\\\"tabs right-tab\\\">\\n        <ul>\\n          <li><a class=\\\"{{currentActiveTab==1 ? 'tab-active' : ''}}\\\" (click)='currentActiveTab=1' routerLinkActive=\\\"active\\\">Details</a></li>\\n          <li><a  class=\\\"{{currentActiveTab==2 ? 'tab-active' : ''}}\\\" (click)='currentActiveTab=2 ; order_list()' routerLinkActive=\\\"active\\\">Order</a></li>\\n          <li><a class=\\\"{{currentActiveTab==3 ? 'tab-active' : ''}}\\\" (click)=\\\"currentActiveTab=3; concern_list(3)\\\" routerLinkActive=\\\"active\\\">Concern</a></li>\\n          <li><a class=\\\"{{currentActiveTab==5 ? 'tab-active' : ''}}\\\" (click)='currentActiveTab=5' routerLinkActive=\\\"active\\\">Pop & Gift</a></li>\\n          <li><a class=\\\"{{currentActiveTab==4 ? 'tab-active' : ''}}\\\" (click)='currentActiveTab=4; documentList()' routerLinkActive=\\\"active\\\">Image & Document</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n\\n      <div *ngIf=\\\"currentActiveTab==1\\\" class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"profile-info\\\">\\n                <ul>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/distribution_code.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Distribution Code</span>\\n                      <p>{{networkUserDetail.networkCode}}</p>\\n                      <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" (click)=\\\"openEmail('networkCode')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/gst.svg\\\" class=\\\"fix-img\\\">\\n                      <span>GST Number</span>\\n                      <p>{{networkUserDetail.gst}}</p>\\n                      <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\"  (click)=\\\"openEmail('gst')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/pan-card.svg\\\" class=\\\"fix-img\\\">\\n                      <span>PAN Number</span>\\n                      <p>{{networkUserDetail.pan}}</p>\\n                      <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\"  (click)=\\\"openEmail('pan')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n              \\n              <div class=\\\"profile-info mt15\\\">\\n                <ul>\\n                    <li>\\n                        <div class=\\\"cs-box\\\">\\n                          <img src=\\\"assets/img/applicant.svg\\\" class=\\\"fix-img\\\">\\n                          <span>Applicant Name </span>\\n                          <p>{{networkUserDetail.nameOfApplicant}}</p>\\n                          <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\"  (click)=\\\"openEmail('nameOfApplicant')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                        </div>\\n                      </li>\\n\\n                      <li>\\n                        <div class=\\\"cs-box\\\">\\n                          <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\">\\n                          <span> Mobile</span>\\n                          <p>{{networkUserDetail.mobile}}</p>\\n                          <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\"  (click)=\\\"openEmail('mobile')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                        </div>\\n                      </li>\\n\\n                      <li>\\n                          <div class=\\\"cs-box\\\">\\n                            <img src=\\\"assets/img/gmail.svg\\\" class=\\\"fix-img\\\">\\n                            <span>Email</span>\\n                            <p>{{networkUserDetail.email}}</p>\\n                            <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" (click)=\\\"openEmail('email')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                          </div>\\n                        </li>\\n                </ul>\\n              </div>\\n              \\n              <div class=\\\"profile-info mt15\\\">\\n                <ul>\\n\\n                     <li>\\n                        <div class=\\\"cs-box\\\">\\n                          <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\">\\n                          <span>Landline</span>\\n                          <p>{{networkUserDetail.landline}}</p>\\n                          <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" (click)=\\\"openEmail('landline')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                        </div>\\n                      </li>\\n\\n                      <li>\\n                          <div class=\\\"cs-box\\\">\\n                            <img src=\\\"assets/img/calendar.svg\\\" class=\\\"fix-img\\\">\\n                            <span>Date Of Commencement</span>\\n                            <p *ngIf=\\\"networkUserDetail.dateOfCommencement != '0001-01-01T00:00:00'\\\">{{networkUserDetail.dateOfCommencement | date: 'dd-MMM-yyyy'}}</p>\\n                            <p *ngIf=\\\"networkUserDetail.dateOfCommencement == '0001-01-01T00:00:00'\\\" >---</p>\\n                            <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\"  (click)=\\\"openEmail('dates')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                          </div>\\n                      </li>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/calendar.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Date Of Birth</span>\\n                      <p *ngIf=\\\"networkUserDetail.dateOfBirth != '0001-01-01T00:00:00'\\\">{{networkUserDetail.dateOfBirth | date: 'dd-MMM-yyyy'}}</p>\\n                      <p *ngIf=\\\"networkUserDetail.dateOfBirth == '0001-01-01T00:00:00'\\\" >---</p>\\n                      <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" (click)=\\\"openEmail('dates')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n\\n              <div class=\\\"profile-info mt15\\\">\\n                  <ul>\\n                      <li>\\n                          <div class=\\\"cs-box\\\">\\n                            <img src=\\\"assets/img/calendar.svg\\\" class=\\\"fix-img\\\">\\n                            <span>Date Of Marriage</span>\\n                            <p *ngIf=\\\"networkUserDetail.dateOfMarriage != '0001-01-01T00:00:00'\\\" >{{networkUserDetail.dateOfMarriage | date: 'dd-MMM-yyyy'}}</p>\\n                            <p *ngIf=\\\"networkUserDetail.dateOfMarriage == '0001-01-01T00:00:00'\\\" >---</p>\\n                            <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\"  (click)=\\\"openEmail('dates')\\\" matRipple matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                          </div>\\n                        </li>\\n                        <li>\\n                            <div class=\\\"cs-box\\\">\\n                              <img src=\\\"assets/img/gst.svg\\\" class=\\\"fix-img\\\">\\n                              <span>Source</span>\\n                              <p>{{networkUserDetail.sourceName ? networkUserDetail.sourceName : '--'}}</p>\\n                              <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('source')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                         </div>\\n                      </li>\\n                  </ul>\\n                </div>\\n              <mat-divider class=\\\"mt15 mb15\\\"></mat-divider>\\n              <div class=\\\"col s8 pl0\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s12 pl0 cs-figure\\\">\\n                    <h2>CREDIT LIMIT</h2>\\n                    <ul>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>Total Limit</span>\\n                            <p>{{networkUserDetail.creditLimit| currency: 'INR':true}}</p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>Used</span>\\n                            <p *ngIf=\\\"networkUserDetail.creditUsed\\\">{{networkUserDetail.creditUsed| currency: 'INR':true}}</p>\\n                            <p *ngIf=\\\"!networkUserDetail.creditUsed\\\">--</p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                    </ul>\\n                  </div>\\n                  \\n                  <div *ngIf=\\\"networkUserDetail.networkLimits?.length==1\\\" class=\\\"col s12 mt15 pl0 cs-figure\\\">\\n                    <h2>YEARLY TARGETS  \\n                      <a *ngIf=\\\"this.role==1\\\" mat-button class=\\\"figure-edit\\\" matTooltip=\\\"Add Target\\\" color=\\\"accent\\\" (click)=\\\"openEmail('addlimit')\\\" style=\\\"top: 24px;\\\"><i class=\\\"material-icons\\\">add</i></a>\\n                    </h2>\\n                    <ul *ngFor=\\\"let limit of networkUserDetail.networkLimits;let i=index\\\">\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>YEAR</span>\\n                            <p>{{limit.financialYear}}</p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>TARGET</span>\\n                            <p>&#x20B9; {{limit.targetLimit}}</p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>ACHEIVED</span>\\n                            <p>&#x20B9; {{limit.targetAchieved}}</p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                    </ul>\\n                  </div>\\n                  <div *ngIf=\\\"networkUserDetail.networkLimits?.length>1\\\" class=\\\"col s12 mt15 pl0\\\">\\n                      <div class=\\\"target-table\\\">\\n                          <a  class=\\\"figure-edit\\\" matTooltip=\\\"Add Target\\\" (click)=\\\"openEmail('addlimit')\\\"><i class=\\\"material-icons\\\">add</i></a>\\n                        <table>\\n                          <thead>\\n                              <tr>\\n                                  <th>YEAR</th>\\n                                  <th>TARGET</th>\\n                                  <th>ACHEIVED</th>\\n                                </tr>\\n                          </thead>\\n                          <tbody>\\n                              <tr *ngFor=\\\"let limit of networkUserDetail.networkLimits;let i=index\\\">\\n                                  <td>{{limit.financialYear}}</td>\\n                                  <td>&#x20B9; {{limit.targetLimit}}</td>\\n                                  <td>&#x20B9; {{limit.targetAchieved}}</td>\\n                                </tr>\\n                          </tbody>\\n                        </table>\\n                      </div>\\n                    </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col s4  pr0\\\">\\n                <div class=\\\"sprate-box flat-sprate\\\" style=\\\"border: 1px solid #ccc;\\\">\\n                  <div class=\\\"cs-logs\\\">\\n                    <div class=\\\"top-heading\\\">\\n                      <h2>ACCOUNT INFO</h2>\\n                    </div>\\n                    <div class=\\\"logs-outer\\\">\\n                      <div class=\\\"logs-list\\\" style=\\\"overflow: inherit;\\\">\\n                        <div class=\\\"account-details\\\">\\n                          <ul>\\n                            <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <div class=\\\"cs-account\\\">\\n                                    <p>User Name</p>\\n                                    <h5>{{networkUserDetail.email}}</h5>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </li>\\n                            <li *ngIf=\\\"this.role==1\\\" class=\\\"active\\\" style=\\\"padding-top: 0px !important; padding-bottom: 0px !important;\\\">\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <div class=\\\"cs-account\\\">\\n                                    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updatepassword()\\\"  #f=\\\"ngForm\\\" novalidate>\\n                                      <div class=\\\"from-fields\\\">\\n                                        <div class=\\\"control-field pr80\\\">\\n                                          <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                            <input matInput type=\\\"text\\\" placeholder=\\\"Change password\\\" name=\\\"password\\\" [(ngModel)]=\\\"account_form.password\\\" #password=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required>\\n                                          </mat-form-field>\\n                                          <mat-error *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <mat-error *ngIf=\\\"password.errors.required\\\">Password is required</mat-error>\\n                                          </mat-error>\\n                                        </div>\\n                                      </div>\\n                                      <button mat-raised-button color=\\\"accent\\\" class=\\\"material-icons pass-icon\\\">Save</button>\\n                                    </form>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </li>\\n                          </ul>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==1\\\">\\n        <div class=\\\"col s6\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div  class=\\\"top-heading left-right-15\\\">\\n              <h2>ASSIGNED INFORMATION</h2>\\n              <a *ngIf=\\\"this.role==1\\\" (click)=\\\"editAssignedDiv=true;\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n            </div>\\n            \\n            <div *ngIf=\\\"!editAssignedDiv\\\" class=\\\"row mt15\\\">\\n\\n                <div  class=\\\"col s6  pl0\\\">\\n                    <div class=\\\"territory-info\\\">\\n                      <div class=\\\"head\\\" >\\n                        <h2>Segment</h2>\\n                      </div>\\n                      \\n                      <div *ngIf=\\\"networkUserDetail.networkSegments?.length==0\\\" class=\\\"not-data\\\">\\n                        <div class=\\\"inner-data\\\">\\n                          <p>No Data</p>\\n                        </div>\\n                      </div>\\n                      \\n                      <div *ngIf=\\\"networkUserDetail.networkSegments?.length>0\\\" class=\\\"cs-checkbox\\\">\\n                        <div class=\\\"checkbox-outer\\\" >\\n                          <section class=\\\"checkbox-inner bodr0\\\" >\\n                            <mat-checkbox *ngFor=\\\"let list of networkUserDetail.networkSegments\\\" class=\\\"check-list bg-none check-none check-none check-none check-none\\\">\\n                              <div class=\\\"name-outer\\\">\\n                                <div class=\\\"outer\\\">\\n                                  <div class=\\\"inner\\\">\\n                                    <div class=\\\"name-inner\\\">\\n                                      S\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"text-box\\\">\\n                                <h2>{{list.segment}}</h2>\\n                              </div>\\n                            </mat-checkbox>\\n                          </section>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n              \\n              <div class=\\\"col s6 pr0\\\">\\n                <div class=\\\"territory-info\\\">\\n                  <div class=\\\"head\\\">\\n                    <h2>Sales User</h2>\\n                  </div>\\n                  \\n                  <div *ngIf=\\\"networkUserDetail.networkSalesUsers?.length==0\\\" class=\\\"not-data\\\">\\n                    <div class=\\\"inner-data\\\">\\n                      <p>No Data</p>\\n                    </div>\\n                  </div>\\n                  \\n                  <div *ngIf=\\\"networkUserDetail.networkSalesUsers?.length>0\\\" class=\\\"cs-checkbox\\\">\\n                    <div class=\\\"checkbox-outer\\\" >\\n                      <section class=\\\"checkbox-inner bodr0\\\" >\\n                        <mat-checkbox *ngFor=\\\"let list of networkUserDetail.networkSalesUsers\\\" class=\\\"check-list bg-none check-none check-none check-hover check-none\\\">\\n                          <a>\\n                            <div class=\\\"name-outer\\\">\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <div class=\\\"name-inner\\\">\\n                                    {{list.salesUserName[0]}}\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"text-box\\\">\\n                              <h2>{{list.salesUserName}}</h2>\\n                              <p>{{list.salesUserRoleName}}</p>\\n                            </div>\\n                          </a>\\n                        </mat-checkbox>\\n                      </section>  \\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n            </div>\\n            \\n            \\n            <div *ngIf=\\\"editAssignedDiv\\\" class=\\\"row mt15\\\">\\n\\n                <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"territory-info\\\">\\n                      <div class=\\\"head\\\">\\n                        <h2>SEGMENT</h2>\\n                      </div>\\n                      <div class=\\\"cs-checkbox\\\">\\n                        <div class=\\\"checkbox-outer\\\">\\n                          <section class=\\\"checkbox-inner\\\" >\\n                            <ng-container *ngFor='let segment of segmentlist;let i=index' aria-required=\\\"true\\\">\\n                              <mat-checkbox class=\\\"check-list\\\" value=\\\"{{segment.text}}\\\" [(ngModel)]='segment.check' (change)=\\\"select_segments(segment.text,i,$event)\\\">{{segment.text}}</mat-checkbox>\\n                            </ng-container>\\n                          </section>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <!-- <div class=\\\"row\\\">\\n                      <div class=\\\"col s12\\\">\\n                        <div class=\\\"cs-btn text-right padding15\\\">\\n                          <div class=\\\"in-btn\\\">\\n                            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"updateSegment()\\\">Update Segment</button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div> -->\\n              </div>\\n              <div class=\\\"col s6 pr0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <mat-select placeholder=\\\"Select Role Type\\\" formControlName=\\\"role\\\" required >\\n                        <mat-option (click)=\\\"userList(user.roleId)\\\" *ngFor=\\\"let user of AllUserList \\\" value={{user.roleId}}>{{user.roleName}}</mat-option>\\n                        <!-- <mat-option (click)=\\\"oherUserDiv()\\\" value=null>Other</mat-option> -->\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"submitted && e.role.errors\\\" >Sales User Type required</mat-error>\\n                  </div>\\n                </div>\\n\\n\\n              <div class=\\\"col s6 pr0\\\">\\n                <div class=\\\"territory-info\\\">\\n                  <div class=\\\"head\\\">\\n                    <h2>SALES USER</h2>\\n                  </div>\\n                  <div class=\\\"cs-checkbox\\\">\\n                    <div class=\\\"checkbox-outer padding0\\\">\\n                      <section class=\\\"checkbox-inner\\\" >\\n                        <ng-container *ngFor=\\\"let sales of territoryList;let i=index\\\" aria-required=\\\"true\\\">\\n                          <mat-checkbox class=\\\"check-list\\\" (change)=\\\"select_sales(sales.userId,i,$event,sales.territoryId,sales.userName,sales.role)\\\" [(ngModel)]='sales.check' value=\\\"{{sales.userId}}\\\">{{sales.userName}}</mat-checkbox>\\n                          <!-- <mat-checkbox *ngIf=\\\"sales.role!=10\\\" class=\\\"check-list\\\" value=\\\"{{sales.userId}}\\\" disabled>{{sales.userName}}</mat-checkbox> -->\\n                        </ng-container>\\n                        \\n                      </section>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <!-- <div class=\\\"row\\\">\\n                  <div class=\\\"col s12\\\">\\n                    <div class=\\\"cs-btn text-right padding15\\\">\\n                      <div class=\\\"in-btn\\\">\\n                        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"updateSales()\\\">Update Sales</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div> -->\\n              </div>\\n              \\n              \\n              \\n              <div class=\\\"row mt15\\\">\\n                <div class=\\\"col s12\\\">\\n                  <div class=\\\"cs-btn mt15 text-right\\\">\\n                    <button mat-raised-button color=\\\"warn\\\" class=\\\"mr15\\\" (click)=\\\"editAssignedDiv=false\\\">Cancel</button>\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"updateSales()\\\" style=\\\"color:#fff;\\\">Update</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"col s6\\\">\\n          <div class=\\\"sprate-box  padding0\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>CONTACT PERSONS</h2>\\n              </div>\\n              <a *ngIf=\\\"this.role==1\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\" (click)=\\\"openEmail('contact')\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n              <div class=\\\"cs-table\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table>\\n                    <tr>\\n                      <th>Name</th>\\n                      <th class=\\\"w170\\\">Mobile No. 1</th>\\n                      <th class=\\\"w170\\\">Mobile No. 2</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content none-shadow\\\">\\n                    <table>\\n                      <tr *ngFor=\\\"let person of networkUserDetail.networkContacts\\\">\\n                        <td>{{person.name}}</td>\\n                        <td class=\\\"w170\\\">{{person.mobile1}}</td>\\n                        <td class=\\\"w170\\\">{{person.mobile2}}</td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"sprate-box padding0 mt15\\\" *ngIf=\\\"currentActiveTab==1\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>ADDRESS</h2>\\n              </div>\\n              <a *ngIf=\\\"this.role==1\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" (click)=\\\"openDialog()\\\" color=\\\"accent\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n              <div class=\\\"ds-from-fields\\\">\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>State</p>\\n                    <p>{{networkUserDetail.state}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>District</p>\\n                    <p>{{networkUserDetail.district}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>City</p>\\n                    <p>{{networkUserDetail.city}}</p>\\n                  </div>\\n                  <div class=\\\"static-info w100\\\" style=\\\"min-width: 100px;\\\">\\n                    <p>Pincode</p>\\n                    <p>{{networkUserDetail.pin}}</p>\\n                  </div>\\n                </div>\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>address</p>\\n                    <p>{{ networkUserDetail.street!='' && networkUserDetail.street!=null ? networkUserDetail.street:'--'}}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==1\\\">\\n        <div class=\\\"col s12 padding0\\\">\\n          <div class=\\\"sprate-box padding0 mt15\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>SHIPPING ADDRESS</h2>\\n                <div class=\\\"cs-btn right-btn mr20\\\">\\n                    <div class=\\\"in-btn\\\">\\n                      <a *ngIf=\\\"this.role==1\\\" mat-raised-button color=\\\"accent\\\"  matTooltip=\\\"Add Address\\\" (click)=\\\"addAddress(networkUserDetail.networkId)\\\"><i class=\\\"material-icons\\\">add</i> Shipping Address</a>\\n                    </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"ds-from-fields scroll\\\">\\n\\n\\n                <div *ngFor=\\\"let list of networkUserDetail.shippingAddresses; let i = index\\\" class=\\\"address-blog\\\">\\n\\n                  <a *ngIf=\\\"this.role==1\\\" (click)=\\\"removeShippingAddress(i, list.shippingAddressId)\\\" class=\\\"figure-edit\\\" matTooltip=\\\"Edit Date\\\" matTooltip=\\\"delete\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n\\n                  <div class=\\\"cs-row\\\">\\n                    <div class=\\\"static-info\\\">\\n                      <p>Office</p>\\n                      <p>{{list?.office}}</p>\\n                    </div>\\n                    <div class=\\\"static-info\\\">\\n                      <p>Landline</p>\\n                      <p>{{list.landline}}</p>\\n                    </div>\\n                    <div class=\\\"static-info\\\">\\n                      <p>Mobile</p>\\n                      <p>{{list.mobile}}</p>\\n                    </div>\\n                    <div class=\\\"static-info\\\" >\\n                      <p>Fax</p>\\n                      <p>{{list.fax}}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"cs-row\\\">\\n                    <div class=\\\"static-info\\\">\\n                      <p>Address</p>\\n                      <p>{{list.street}}, {{list.city}}, {{list.district}} – {{list.pin}}, {{list.state}} (INDIA)</p>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n\\n                <div class=\\\"sprate-box mt15 padding0\\\" >\\n                  <div class=\\\"full-address\\\">\\n                    <div class=\\\"top-heading\\\">\\n                      <h2>Bank Details</h2>\\n                    </div>\\n                    <a *ngIf=\\\"this.role==1\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\" (click)=\\\"openEmail('bank')\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n                    <div class=\\\"cs-table\\\" *ngIf=\\\"networkUserDetail.bankName\\\">\\n                      <div class=\\\"table-head\\\">\\n                        <table>\\n                          <tr>\\n                            <th>Bank Name</th>\\n                            <th class=\\\"w170\\\">Account Number</th>\\n                            <th class=\\\"w170\\\">IFSC CODE</th>\\n                          </tr>\\n                        </table>\\n                      </div>\\n                      <div class=\\\"table-container\\\">\\n                        <div class=\\\"table-content none-shadow\\\">\\n                          <table>\\n                            <tr>\\n                              <td>{{networkUserDetail.bankName}}</td>\\n                              <td class=\\\"w170\\\">{{networkUserDetail.accountNumber}}</td>\\n                              <td class=\\\"w170\\\">{{networkUserDetail.ifscCode}}</td>\\n                            </tr>\\n                          </table>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            \\n            <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==2\\\">\\n              <div class=\\\"col s12\\\">\\n                <div class=\\\"cs-table left-right-20\\\">\\n                  <div class=\\\"table-head tab-sticky-head\\\">\\n                    <table class=\\\"sno-border\\\"> \\n                      <tr>\\n                        <th class=\\\"w30\\\">&nbsp;</th>\\n                        <th class=\\\"w170\\\"> Date</th>\\n                        <th >Created By</th>\\n                        <th class=\\\"w170\\\"> Order No</th>\\n                        <th class=\\\"w70 text-center\\\">QTY.</th>\\n                        <th class=\\\"w120 text-right\\\">Amount</th>\\n                        <th class=\\\"w180\\\"> Distributor's Status</th>\\n                        <th  class=\\\"w140\\\"> Company Status</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"table-container\\\">\\n                    <div class=\\\"table-content\\\">\\n                      <table class=\\\"sno-border\\\">\\n                        <tr *ngFor=\\\"let order of orderlist; let index = index\\\">\\n                          <td class=\\\"w30\\\">{{index+1}}</td>\\n                          <td class=\\\"w170\\\">{{order.createdOn |date :'EEEE, MMMM d, y'}}</td>\\n                          <td >{{order.userName}}</td>\\n                          <td  class=\\\"w170\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/order-detail/{{order.orderId}}\\\" routerLinkActive=\\\"active\\\" >{{order.orderNumber}}</a></td>\\n                          <td class=\\\"w70 text-center\\\">{{order.quantity}}</td>\\n                          <td class=\\\"w120 text-right\\\">{{order.amount | currency: 'INR':true}}</td>\\n                          <td *ngIf=\\\"cartActive==''\\\" class=\\\"w180\\\">\\n                            <span class=\\\"text-center blue-clr\\\" *ngIf=\\\"order.dealerStatus=='1'\\\">Draft</span>\\n                            <span class=\\\"text-center yellow-clr\\\" *ngIf=\\\"order.dealerStatus=='2'\\\">Pending</span>\\n                            <span class=\\\"text-center green-clr\\\" *ngIf=\\\"order.dealerStatus=='3'\\\">Approved</span>\\n                          </td>\\n                          <td *ngIf=\\\"cartActive==''\\\" class=\\\"w140\\\">\\n                            <span class=\\\"text-center yellow-clr\\\" *ngIf=\\\"order.companyStatus=='1'\\\">Pending</span>\\n                            <span class=\\\"text-center green-clr\\\" *ngIf=\\\"order.companyStatus=='2'\\\">Approved</span>\\n                            <span class=\\\"text-center red-clr\\\" *ngIf=\\\"order.companyStatus=='3'\\\">Hold</span>\\n                          </td>\\n                          \\n                        </tr>\\n                      </table>\\n                    </div>\\n                  </div>\\n                  \\n                </div>\\n                <div class=\\\"data-not-available\\\" *ngIf=\\\"div\\\">\\n                  <div class=\\\"outer\\\">\\n                    <div class=\\\"iinear\\\">\\n                      <div class=\\\"figure\\\" matRipple>\\n                        <div class=\\\"header\\\">\\n                          <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                        </div>\\n                        \\n                        <div class=\\\"description\\\">\\n                          <div class=\\\"cs-heading\\\">\\n                            <!-- <h2 *ngIf=\\\"cartActive=='active'\\\">Nothing In Draft</h2> -->\\n                            <h2 *ngIf=\\\"orderActive=='active'\\\">No Order List</h2>\\n                            \\n                          </div>\\n                          <div class=\\\"img\\\">\\n                            <i class=\\\"material-icons\\\">error_outline</i>\\n                          </div>\\n                          <div class=\\\"psc\\\">\\n                            <p>data not available</p>\\n                            <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n\\n            <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==3\\\">\\n\\n              <div class=\\\"col s12 padding0\\\">\\n                <div class=\\\"cs-table left-right-20\\\">\\n                  <div class=\\\"table-head\\\">\\n                    <table>\\n                      <tr >\\n                        <th class=\\\"w150\\\">Concern Date</th>\\n                        <th>Company Name</th>\\n                        <th>Concern Number</th>\\n                        <th class=\\\"w150\\\">Concern Type</th>\\n                        <th class=\\\"w150 text-center\\\">Total Item</th>\\n                        <th class=\\\"w150\\\">Concern Status</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"table-container\\\">\\n                    <div class=\\\"table-content\\\">\\n                      <table>\\n                        <tr *ngFor=\\\"let concerns of tmp_concern_list\\\">\\n                          <td class=\\\"w150\\\">{{concerns.createdOn|date:'d MMM y'}}</td>\\n                          <td><a  class=\\\"link-btn\\\" mat-button routerLink=\\\"/concern-detail/{{concerns.concernId}}\\\" routerLinkActive=\\\"active\\\">{{concerns.networkEstablishment}}</a></td>\\n                          <td>{{concerns.claimNo}}</td>\\n                          <td class=\\\"w150\\\">{{concerns.concernTypeName}}</td>\\n                          <td class=\\\"w150 text-center\\\"><span >{{concerns.productConcerns.length}}</span><span *ngIf='concerns.concernTypeName==\\\"Other\\\"'>1</span></td>\\n                          <td class=\\\"w150\\\">{{concerns.concernStatusName}}</td>\\n                        </tr>\\n                      </table>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n                  <div class=\\\"outer\\\">\\n                    <div class=\\\"iinear\\\">\\n                      <div class=\\\"figure\\\" matRipple>\\n                        <div class=\\\"header\\\">\\n                          <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                        </div>\\n                        \\n                        <div class=\\\"description\\\">\\n                          <div class=\\\"cs-heading\\\">\\n                          </div>\\n                          <div class=\\\"img\\\">\\n                            <i class=\\\"material-icons\\\">error_outline</i>\\n                          </div>\\n                          <div class=\\\"psc\\\">\\n                            <p>data not available</p>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n            <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==4\\\">\\n\\n                <div class=\\\"col s12 padding0\\\">\\n                  <div class=\\\"cs-table left-right-20\\\">\\n                    <div class=\\\"table-head\\\">\\n                      <table>\\n                        <tr >\\n                          <th class=\\\"w150\\\">Date</th>\\n                          <th>Created By</th>\\n                          <th>Document Name</th>\\n                          <th class=\\\"w150 text-center\\\">Document</th>\\n                          <th class=\\\"w150\\\">Action</th>\\n                        </tr>\\n                      </table>\\n                    </div>\\n                    <div class=\\\"table-container\\\">\\n                      <div class=\\\"table-content\\\">\\n                        <table>\\n                         <tr *ngFor=\\\"let list of documentListData\\\">\\n\\n                            <td class=\\\"w150\\\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\\n\\n                            <td>{{list.createdByName}}</td>\\n\\n                            <td>{{list.documentName}}</td>\\n\\n                            <td class=\\\"w150 text-center\\\"> <a mat-button class=\\\"view\\\" href=\\\"{{dburl}}download/document/{{list.documentId}}\\\"><i class=\\\"material-icons\\\">cloud_download</i></a> </td>\\n\\n                            <td class=\\\"w150\\\">\\n                                <div class=\\\"action-btns default-action\\\">\\n                                   <!-- <a mat-button class=\\\"edit\\\"><i class=\\\"material-icons\\\">add</i></a>  -->\\n                                    <button mat-button class=\\\"delete\\\"  (click)=\\\"deleteNetworkDocument(1)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button> \\n                              </div> \\n                            </td> \\n\\n                           </tr> \\n                        </table>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <div *ngIf=\\\"documentListData?.length==0 && !loader\\\" class=\\\"data-not-available\\\" >\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"iinear\\\">\\n                        <div class=\\\"figure\\\" matRipple>\\n                          <div class=\\\"header\\\">\\n                            <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                          </div>\\n                          \\n                          <div class=\\\"description\\\">\\n                            <div class=\\\"cs-heading\\\">\\n                            </div>\\n                            <div class=\\\"img\\\">\\n                              <i class=\\\"material-icons\\\">error_outline</i>\\n                            </div>\\n                            <div class=\\\"psc\\\">\\n                              <p>data not available</p>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n\\n              <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==5\\\">\\n\\n                  <div class=\\\"col s12 padding0\\\">\\n                    <div class=\\\"cs-table left-right-20\\\">\\n                      <div class=\\\"table-head\\\">\\n                        <table>\\n                          <tr >\\n                            <th class=\\\"w150\\\">Date</th>\\n                            <th class=\\\"w150\\\">Created By</th>\\n                            <th>Gift Name</th>\\n                            <th>Qty</th>\\n                            <th class=\\\"w150\\\">Image</th>\\n                          </tr>\\n                        </table>\\n                      </div>\\n                      <div class=\\\"table-container\\\">\\n                        <div class=\\\"table-content\\\">\\n                          <table>\\n                            \\n                          </table>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"data-not-available\\\" >\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"iinear\\\">\\n                          <div class=\\\"figure\\\" matRipple>\\n                            <div class=\\\"header\\\">\\n                              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                            </div>\\n                            \\n                            <div class=\\\"description\\\">\\n                              <div class=\\\"cs-heading\\\">\\n                              </div>\\n                              <div class=\\\"img\\\">\\n                                <i class=\\\"material-icons\\\">error_outline</i>\\n                              </div>\\n                              <div class=\\\"psc\\\">\\n                                <p>data not available</p>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"fixed-multibtn-botm\\\">\\n                    <ul>\\n                      <li><a  matTooltip=\\\"Add New\\\" matRipple (click)=\\\"openDialogone(networkUserDetail.networkId)\\\"><i class=\\\"material-icons\\\" >add</i></a></li>\\n                    </ul>\\n                  </div>\\n        </div>\\n      </div>\\n      <div class=\\\"h50\\\"></div>\\n      \\n      \"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport {MatDialog} from '@angular/material';\nimport { UpdateNetworkComponent } from '../update-network/update-network.component';\nimport { UpdateNetworkAddressComponent } from '../update-network-address/update-network-address.component';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { Router } from '@angular/router';\nimport { OtherAddressComponent } from 'src/app/order/other-address/other-address.component';\nimport { DialogComponent } from 'src/app/dialog';\nimport { DocumentEndImageComponent } from '../document-end-image/document-end-image.component';\n@Component({\n  selector: 'app-distribution-detail',\n  templateUrl: './distribution-detail.component.html',\n  animations: [slideToTop()]\n})\n\n\nexport class DistributionDetailComponent implements OnInit {\n  id:any;\n  concernActive:any='';\n  detailActive:any='';\n  orderActive:any='';\n  message:any;\n  IsActive:any=1;\n  tmp_list:any=[];\n  userdata:any=[];\n  role:any;\n  div:any=false;\n  orderlist:any=[];\n  msg:any=[];\n  cartActive:any='';\n  contact_person:any=[];\n  territoryId:any;\n  action=\"1\";\n  name:any;\n  documentData:any=[]\n  networkUpdateActions:any=[];\n  saleslist:any=[];\n  account_form:any={};\n  networkUserDetail:any=[];\n  salesUsersegment:any=[];\n  concernList:any=[];\n  segmentlist:any=[];\n  senddata:any;\n  status:any;\n  index:any;\n  selectedFile:any=[];\n  // networkSegments:any=[];\n  salesUser:any=[];\n  loader:any=false;\n  territoryList:any=[];\n\n  editAssignedDiv:any = false;\n  segmentUpdateActions:any = '';\n\n  currentActiveTab:any = '';\n\n  documentListData:any = [];\n  dburl:any = '';\n\n  userType:any;\n\n  constructor(public router:Router,public toast:SnackBarOverview,public user:sessionStorage,public route:ActivatedRoute,public service:ConstantService,public dialog: MatDialog,public dia:DialogComponent) {\n    this.route.params.subscribe(params=>{\n      console.log(params);\n      this.id = params.id;\n      console.log(this.id);\n      this.userdata=this.user['user']['data'];\n      this.role=this.userdata['role'];\n\n      this.userType = this.userdata['userType'];\n    });\n\n      setTimeout(() => {\n        \n      }, 1000);\n   }\n\n\n\n  ngOnInit() {\n    this.show_details();\n\n    this.dburl = this.service.dburl;\n    setTimeout(() => {\n     \n    }, 500);\n  }\n  urls:any=[];\n  insertDocument(data)\n    {\n          let files = data.target.files;\n          if (files) {\n            for (let file of files) {\n              let reader = new FileReader();\n              reader.onload = (e: any) => {\n                this.urls.push(e.target.result);\n              }\n              reader.readAsDataURL(file);\n            }\n          }\n          console.log(this.urls);\n          console.log(data.target.files.length);\n          for(var i=0; i<data.target.files.length; i++)\n          {\n              this.selectedFile.push(data.target.files[i]);\n          }\n \n          console.log(this.selectedFile);\n \n          setTimeout(() => {\n            this.Insert_Image();\n          }, 500);\n    }\n    \n  data:any = {};\n    productdata:any=[];\n    Insert_Image()\n    {\n      for(var i=0; i<this.selectedFile.length; i++)\n      {\n        console.log(this.selectedFile[i]);\n        \n          this.documentData=new FormData;\n          this.documentData.action=1;\n          this.documentData.binaryData=this.urls[i];\n          this.documentData.documentType=1;\n          this.documentData.documentName=this.selectedFile[i].name;\n          this.documentData.referenceId=this.id;\n          this.documentData.fileName=\"Document\"+i+\".pdf\",this.selectedFile[i];\n          this.documentData.iconName = \"DocumentIcon\"+i+\".pdf\",this.selectedFile[i];\n\n          console.log(this.documentData);\n\n      }\n      let value=[];\n      value[0]=this.documentData;\n  \n            this.service.fetchData(value,\"document/update\").subscribe((resp)=>\n            {\n                console.log(resp);\n                if(resp)\n                {\n                    this.loader=false;\n                    this.selectedFile=[];\n                    this.toast.openSucess('Document Added Sucessfully','');\n                  \n                }\n            });\n    }\n\n  show_details(){\n    this.loader=true;\n    this.detailActive=true\n      this.service.fetchData({'networkId': this.id},\"network/list\").subscribe((result=>{\n\n            console.log(result);\n            this.networkUserDetail=result['data'][0];\n            console.log(this.networkUserDetail);\n            this.loader=false;\n            this.rolelist();\n            this.segment_list();\n            this.get_sales(1, '');\n            setTimeout(() => {\n              this.currentActiveTab = 1;\n            }, 200);\n      }))\n  }\n\n  order_list(){\n    this.loader=true;\n    this.orderActive=true ;\n    console.log(this.userdata['userType']);\n    if(this.userdata['userType']==3){\n      this.senddata={\"networkId\":this.id,\"currentPage\": 1,\"pageSize\": 50};\n    }else if(this.userdata['userType']==2){\n      this.senddata={\"networkId\":this.id,\"currentPage\": 1,\"pageSize\": 50};\n    }else{\n      this.senddata={\"networkId\":this.id,\"currentPage\": 1,\"pageSize\": 50};\n    }\n    this.service.fetchData(this.senddata,'order/list').subscribe((response)=>{\n      console.log(response);\n      if(response['status']=='Success')\n      {\n        this.orderlist = response['data'];\n      }else{\n        this.div=true;\n      }\n      console.log(this.orderlist);\n      \n      this.loader=false;\n    });\n  }\n  tmp_concern_list:any=[];\n  concern_list(status){\n    this.status=status;\n    this.concernActive=true;\n    this.loader=true;\n    this.service.fetchData( {\"currentPage\": 1,'networkId':this.id,\n    \"pageSize\": 500},'concern/list').subscribe((response)=>{\n      console.log(response)\n      this.loader=false;\n      if(response['status']=='Success')\n      {\n        this.concernList=response['data'];\n        for(var i=0;i<this.concernList.length;i++){\n          if(this.concernList[i].claimNo!=''){\n            this.tmp_concern_list.push(this.concernList[i]);\n          }\n        }\n        this.loader=false;\n      }\n      if(response['status']=='Failed')\n      {\n        this.div=true;\n        this.loader=false;\n        this.concernList=[];\n      }\n    console.log(this.concernList);\n  })\n}\n\ndocumentList() {\n\n      this.loader=true;\n      this.service.fileData('','network/document/'+this.id).subscribe((response)=>{\n\n        console.log(response)\n        this.loader=false;\n        this.documentListData = response['data'];\n\n        console.log(this.documentListData);\n    })\n  }\n\n\n  select_sales(value,index,event,territoryId,userName,role) {\n\n        // if(event.checked)\n        // { \n          \n        //      this.salesUser.push({'salesUserId':value,'networkId':this.networkUserDetail.networkId,'territoryId':territoryId,'salesUserName':userName,'salesUserRole':role});\n\n        //      console.log(this.salesUser);\n\n        // } else {\n               \n               // console.log(index);\n               // console.log(this.salesUser[index]);\n                // if(this.salesUser[index]['salesUserId'])\n                // {this.salesUser.splice(index,1);}\n                // console.log(this.salesUser);\n      //  }\n  }\n\n\n  updateSales() {\n\n    this.networkUpdateActions={\"salesUsersModified\":true};\n\n\n    const salesUsers = [];\n    for (let index = 0; index < this.territoryList.length; index++) {\n         if(this.territoryList[index].check) {\n\n            salesUsers.push({'salesUserId':this.territoryList[index].userId,'networkId':this.networkUserDetail.networkId,'territoryId': this.territoryList[index].territoryId,'salesUserName':this.territoryList[index].userName,'salesUserRole':this.territoryList[index].role});\n         }\n    }\n\n\n    this.segmentUpdateActions={\"segmentsModified\":true};\n    console.log(this.salesUsersegment);\n\n    const segmentSelected = [];\n    for (let index = 0; index < this.segmentlist.length; index++) {\n          \n         if(this.segmentlist[index].check) {\n\n             segmentSelected.push({networkId: this.networkUserDetail.networkId,segmentCode: this.segmentlist[index].text, segment: this.segmentlist[index].value})\n         }\n    }\n\n    if(segmentSelected.length == 0) {\n       this.toast.openError('No Segment Selected!!','');\n       return;\n    }\n\n\n    this.loader = true;\n\n    this.service.fetchData({'networkUpdateActions':this.networkUpdateActions,'networkId': this.networkUserDetail.networkId, 'salesUsers': salesUsers},'network/assignto/update').subscribe((response)=>{\n\n            console.log(response);\n\n            this.message=response['message'];\n            // if(this.message==\"Network Sales Users Updated\")\n            // {\n        \n            // } else { \n            //     this.toast.openError('Something went wrong Please Try Again!!','');\n            // }\n\n            this.service.fetchData({'networkUpdateActions':this.segmentUpdateActions,'networkId':this.networkUserDetail.networkId,\"networkSegments\":segmentSelected,\n\n              },'network/update').subscribe((response)=>{\n\n                  console.log(response);\n                  this.message=response['message'];\n\n                  this.loader = false;\n\n                  if(this.message)\n                  {\n                      this.toast.openSucess('Updated successfully','');\n                      this.editAssignedDiv = false;\n                      this.show_details();\n                      // this.router.navigate(['/distribution-detail/'+this.networkUserDetail.networkId]) \n                  } else {\n                      this.toast.openError('Something went wrong Please Try Again!!','');\n                  }\n            });\n\n\n      });\n\n\n  }\n\n  updateSegment() {\n\n    this.networkUpdateActions={\"segmentsModified\":true};\n    console.log(this.salesUsersegment);\n    this.service.fetchData({'networkUpdateActions':this.networkUpdateActions,'networkId':this.networkUserDetail.networkId,\"networkSegments\":this.salesUsersegment,\n      },'network/update').subscribe((response)=>{\n        console.log(response);\n        this.message=response['message'];\n        if(this.message)\n        {this.toast.openSucess('Updated successfully','');\n          this.router.navigate(['/distribution-detail/'+this.networkUserDetail.networkId]) \n        }else{this.toast.openError('Something went wrong Please Try Again!!','');}});\n\n  }\n\n\n  openDialog(){\n    console.log(this.networkUserDetail);\n    const dialogRef = this.dialog.open(UpdateNetworkAddressComponent,{data:this.networkUserDetail});\n    dialogRef.afterClosed().subscribe(result =>{\n      console.log(result);\n      this.saleslist=[];\n      this.show_details();\n    });\n  }\n\n\n  segment_list() {\n\n      this.service.fileData('','segment/list/').subscribe((response)=>{\n\n              console.log(response);\n              this.segmentlist=response['data'];\n\n          \n              // for(let i=0;i<this.networkUserDetail.networkSegments.length;i++) {\n              //       this.salesUsersegment.push(this.networkUserDetail.networkSegments[i]);\n              // }\n\n              for(let i=0;i<this.segmentlist.length;i++) {\n\n                  const indexExist = this.networkUserDetail.networkSegments.findIndex(row => row.segment == this.segmentlist[i].text);\n\n                  if(indexExist != -1) {\n                      this.segmentlist[i].check=true;\n                  }\n\n                  // for(let j=0;j<this.salesUsersegment.length;j++){\n                  //     if(this.salesUsersegment[j].segmentCode==this.segmentlist[i].value){\n                  //         this.segmentlist[i].check=true;\n                  //     }\n                  // }\n              }\n      });\n  }\n\n\n  get_sales(src, srcData) {\n\n      let territoryStr = '';\n\n      if(src == 1) {\n\n            for (let index = 0; index < this.networkUserDetail.networkTerritories.length; index++) {\n      \n                //  territoryIds.push(this.networkUserDetail.networkTerritories[index]['territoryId']);\n                if(index == 0) {\n                    territoryStr += '?territoryIds='+this.networkUserDetail.networkTerritories[index]['territoryId'];\n                } else {\n                    territoryStr += '&territoryIds='+this.networkUserDetail.networkTerritories[index]['territoryId'];\n                }\n              }\n\n      } else {\n\n          territoryStr = srcData;\n      }\n\n\n      console.log(territoryStr);\n\n      if(territoryStr) {\n\n          this.loader=true;\n          console.log('hello');\n    \n          this.service.fetchData('', 'territory/salesusers' + territoryStr).subscribe((response)=>{\n    \n                console.log(response);\n                this.loader=false;\n                this.saleslist=response['data'];\n    \n                console.log(this.saleslist);\n                // const role=this.saleslist.filter(x=>x.role==10);\n                // this.territoryList = [];\n                // if(role.length != 0)\n                // {\n                //     console.log(role);\n                //     this.territoryList = role;\n    \n                // } else {\n    \n                //       const role = this.saleslist.filter(x=>x.role==8)\n                //       if(role.length!=0)\n                //       {\n                //           console.log(role);\n                //           this.territoryList=role;\n                //       } else {\n    \n                //           const role=this.saleslist.filter(x=>x.role==7);\n    \n                //           if(role.length!=0) {\n    \n                //               console.log(role);\n                //               this.territoryList=role;\n                //           } else {\n                //                 const role=this.saleslist.filter(x=>x.role==6)\n                //                 if(role.length!=0){\n                //                   console.log(role);\n                //                   this.territoryList=role;\n                //                 }\n                //           }\n                //       }\n                //   }\n    \n                  // console.log(this.saleslist);\n    \n                  // for(let i=0;i<this.networkUserDetail.networkSalesUsers.length;i++){\n                  //       // this.salesUser.push(this.networkUserDetail.networkSalesUsers[i]);\n                  // }\n    \n                  // for(let i=0;i<this.territoryList.length;i++)  {\n    \n                  //     const indexExist = this.networkUserDetail.networkSalesUsers.findIndex(row => row.salesUserId == this.territoryList[i].userId);\n    \n                  //     if(indexExist != -1) {\n                  //       this.territoryList[i].check=true;\n                  //     }\n                  // }\n            })\n      }\n  }\n\n\n  rolelists:any=[];\n  AllUserList:any=[]\n  rolelist() {\n    this.loader=true;\n    this.service.fileData('','usertype/list').subscribe((response)=>{\n          console.log(response);\n          this.rolelists=response['data'];\n          this.loader=false;\n          let filterrolelead= this.rolelists.filter(x => x.userTypeId==2);\n            this.AllUserList=filterrolelead[0].roles;\n            console.log(this.AllUserList);\n        });\n      }\n     \n\n\n      userList(role){\n      console.log(role);\n      const rolee=this.saleslist.filter(x=>x.role==role);\n                this.territoryList = [];\n                if(role.length != 0)\n                {\n                    console.log(rolee);\n                    this.territoryList = rolee;\n                }\n                for(let i=0;i<this.networkUserDetail.networkSalesUsers.length;i++){\n                  // this.salesUser.push(this.networkUserDetail.networkSalesUsers[i]);\n            }\n\n            for(let i=0;i<this.territoryList.length;i++)  {\n\n                const indexExist = this.networkUserDetail.networkSalesUsers.findIndex(row => row.salesUserId == this.territoryList[i].userId);\n\n                if(indexExist != -1) {\n                  this.territoryList[i].check=true;\n                }\n            }\n     \n      }\n    \n\n  get_network_terrtory(segmentSelected) {\n\n      this.loader = true;\n\n      this.service.fetchData({'pinCode':this.networkUserDetail.pin, 'segments': segmentSelected },'territory/list').subscribe((response)=>{\n\n                console.log(response);\n                this.loader=false;\n                this.saleslist =response['data'];\n\n                let territoryStr = '';\n\n                if(response['data']) {\n\n                    for (let index = 0; index < response['data'].length; index++) {\n\n                        if(index == 0) {\n                            territoryStr += '?territoryIds='+response['data'][index]['territoryID'];\n                        } else {\n                            territoryStr += '&territoryIds='+response['data'][index]['territoryID'];\n                        }\n                    }\n                }\n\n                this.get_sales(2, territoryStr);\n\n                console.log(territoryStr);\n              // this.saleslist=response['data'][0]['salesUsers'];\n            \n      })\n  }\n\n\n\n  select_segments(value,index,event) {\n\n\n        const segmentSelected = [];\n        for (let index1 = 0; index1 < this.segmentlist.length; index1++) {\n\n            if(this.segmentlist[index1].check) {\n                segmentSelected.push(this.segmentlist[index1].text);\n            }\n        }\n\n        console.log(segmentSelected);\n\n        if(segmentSelected.length == 0) {\n\n             this.territoryList = [];\n\n        } else {\n\n            this.get_network_terrtory(segmentSelected); \n\n        }\n\n  }\n\n\n  openEmail(check) {\n    this.networkUserDetail.type=check;\n    console.log(check);\n    console.log(\"chech assign user update\");\n    const dialogRef = this.dialog.open(UpdateNetworkComponent,{width : '1000px' ,data:this.networkUserDetail});\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      this.saleslist=[];\n      this.show_details();\n    });\n  }\n\n  editlimit(check,index){\n    this.networkUserDetail.networkLimits[index].type=check;\n    console.log(index);\n    console.log(check);\n    console.log(\"chech assign user update\");\n    const dialogRef = this.dialog.open(UpdateNetworkComponent,{width : '1000px' ,data:this.networkUserDetail.networkLimits[index]});\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      this.saleslist=[];\n      this.show_details();\n    });\n\n  }\n\n\n  updatepassword(){\n    console.log('pass');\n    this.service.fetchData({\"userId\": this.networkUserDetail.userId,\"password\":this.account_form.password},'account/changepassword')\n    .subscribe((response)=>{ console.log(response)\n      this.message=response['message'];\n      console.log(this.message);\n      if(this.message==\"Your password has been changed successfully!\")\n      {\n        this.toast.openSucess('Your password has been changed successfully!','');\n      }else{\n        this.toast.openError('Something Went Wrong Please Try Again!!','');\n      }\n    });\n  }\n\n\n  addAddress(id){\n    const dialogRef = this.dialog.open(OtherAddressComponent,{\n      width: '1600px',\n         data:{\n           id\n           }});\n         dialogRef.afterClosed().subscribe(result => {\n          console.log(result);\n        console.log('The dialog was closed');\n        this.show_details();\n      });\n  }\n\n\n  openDialogone(id): void {\n    const dialogRef = this.dialog.open(DocumentEndImageComponent, {\n    width: '768px',\n    data: {id}\n    });\n    \n    dialogRef.afterClosed().subscribe(result => {\n\n         this.documentList();\n    });\n    }\n\n  removeShippingAddress(index,id){\n    console.log(this.networkUserDetail.shippingAddresses[index]);\n    console.log(id);\n    this.dia.delete(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n          this.service.fileData(id,'shippingaddress/delete/').subscribe((response)=>{\n            console.log(response);\n            this.message=response['message'];\n            if(this.message)\n            {\n              \n                this.toast.openSucess('Deleted successfully','');\n                this.router.navigate(['/distribution-detail/'+this.networkUserDetail.networkId]);\n                this.networkUserDetail.shippingAddresses.splice(index,1);\n            }else{\n                this.toast.openError('Something went wrong Please Try Again!!','');\n              \n            }\n        });\n      }\n    });\n  }\n\n\n\n  deleteNetworkDocument(index) {\n\n\n\n\n  }\n\n\n}","module.exports = \"<div class=\\\"main-container\\\" [@routerTransition]>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>Punit</h2>\\n        <p class=\\\"light\\\">Retailer</p>\\n      </div>\\n    </div>\\n    <div class=\\\"tabs right-tab\\\">\\n      <ul>\\n        <li><a routerLink=\\\"/distribution-detail\\\" routerLinkActive=\\\"active\\\">DETAIL</a></li>\\n        <li><a>IMAGE & DOCUMENTS</a></li>\\n        <li><a routerLink=\\\"/distribution-order-list\\\" routerLinkActive=\\\"active\\\">ORDERS</a></li>\\n        <li><a>POP & GIFT</a></li>\\n        <li><a>PAYMASTER</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table>\\n                <tr>\\n                  <th class=\\\"w200\\\">Created By & Date</th>\\n                  <th class=\\\"w150\\\">Order ID</th>\\n                  <th>Product Description</th>\\n                  <th class=\\\"w150 text-right\\\">Order Value</th>\\n                  <th class=\\\"w100 text-center\\\">Status</th>\\n                </tr>\\n              </table>\\n            </div>\\n\\n           \\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr>\\n                    <td class=\\\"w200\\\">2 Jan 2018 / Rahul Dubey</td>\\n                    <td class=\\\"w150\\\"><a class=\\\"link-btn\\\" mat-button>#AB58472</a></td>\\n                    <td>Product Description</td>\\n                    <td class=\\\"w150 text-right\\\">25000</td>\\n                    <td class=\\\"w100 text-center green-clr\\\">DELIVERED</td>\\n                  </tr>\\n                  <tr>\\n                    <td>2 Jan 2018 / Rahul Dubey</td>\\n                    <td><a class=\\\"link-btn\\\" mat-button>#AB58472</a></td>\\n                    <td>Product Description</td>\\n                    <td class=\\\"text-right\\\">25000</td>\\n                    <td class=\\\"text-center red-clr\\\">PENDING</td>\\n                  </tr>\\n                  <tr>\\n                    <td>2 Jan 2018 / Rahul Dubey</td>\\n                    <td><a class=\\\"link-btn\\\" mat-button>#AB58472</a></td>\\n                    <td>Product Description</td>\\n                    <td class=\\\"text-right\\\">25000</td>\\n                    <td class=\\\"text-center green-clr\\\">DELIVERED</td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>2 Jan 2018 / Rahul Dubey</td>\\n                    <td><a class=\\\"link-btn\\\" mat-button>#AB58472</a></td>\\n                    <td>Product Description</td>\\n                    <td class=\\\"text-right\\\">25000</td>\\n                    <td class=\\\"text-center red-clr\\\">PENDING</td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>2 Jan 2018 / Rahul Dubey</td>\\n                    <td><a class=\\\"link-btn\\\" mat-button>#AB58472</a></td>\\n                    <td>Product Description</td>\\n                    <td class=\\\"text-right\\\">25000</td>\\n                    <td class=\\\"text-center red-clr\\\">PENDING</td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    <td>2 Jan 2018 / Rahul Dubey</td>\\n                    <td><a class=\\\"link-btn\\\" mat-button>#AB58472</a></td>\\n                    <td>Product Description</td>\\n                    <td class=\\\"text-right\\\">25000</td>\\n                    <td class=\\\"text-center green-clr\\\">DELIVERED</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\n\n@Component({\n  selector: 'app-distribution-order-list',\n  templateUrl: './distribution-order-list.component.html',\n  animations: [slideToTop()]\n\n})\nexport class DistributionOrderListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/task.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Distributor</h2>\\n        <p>Total Distributor<span *ngIf='distributionList'>{{distributionList.length}}</span><span *ngIf='!distributionList'>0</span></p>\\n      </div>\\n    </div>\\n    <div class=\\\"left-auto dflex\\\">\\n      <div *ngIf=\\\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment || filter.state\\\" class=\\\"filter-container left-auto\\\">\\n        <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n          <button mat-button >CLEAR FILTER</button>\\n        </div>\\n      </div>\\n    </div>\\n    \\n  </div>\\n  <!-- <div class=\\\"middle-container padding0\\\">\\n    <div class=\\\"master-heading\\\">\\n      <div class=\\\"vl-info\\\">\\n        <ul>\\n          <li><p>Total Distributor : <span *ngIf='distributionList'>{{distributionList.length}}</span><span *ngIf='!distributionList'>0</span></p></li>\\n          </ul>\\n        </div>\\n      \\n          <div *ngIf=\\\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment || filter.state\\\" class=\\\"filter-container left-auto\\\">\\n              <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n                <button mat-button >CLEAR FILTER</button>\\n              </div>\\n            </div>\\n\\n\\n        </div>\\n      </div> -->\\n      \\n      <div class=\\\"container-outer pt0\\\">\\n        <div class=\\\"container\\\" >\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-table left-right-20\\\">\\n                <div class=\\\"sticky-head\\\">\\n                  <div class=\\\"table-head\\\">\\n                    <table>\\n                      <tr>\\n                        <th class=\\\"w100\\\">Date</th>\\n                        <th class=\\\"w190\\\">Company Name</th>\\n                        <th class=\\\"w190\\\">Applicant Name</th>\\n                        <th class=\\\"w110\\\"> Mobile</th>\\n                        <!-- <th class=\\\"w100 text-right\\\"> Target</th>\\n                        <th class=\\\"w110 text-right\\\"> Credit Limit</th> -->\\n                        <th class=\\\"w120\\\">Segments</th>\\n                        <th>Address</th>\\n                        <th class=\\\"w60\\\" *ngIf=\\\"role==1\\\">Action</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"table-head bdrt\\\">\\n                    <form>\\n                      <table>\\n                        <tr>\\n                          <th class=\\\"w100\\\">\\n                            <div class=\\\"th-search-acmt fix-date\\\">\\n                            </div>\\n                          </th>\\n                          <th class=\\\"w190\\\">\\n                            <div class=\\\"th-search\\\">\\n                              <input type=\\\"text\\\" (keyup)=\\\"distribution_list()\\\" name=\\\"companyname\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.companyname\\\" placeholder=\\\"Search....\\\">\\n                              \\n                            </div>\\n                          </th>\\n                          <th class=\\\"w190\\\">\\n                            <div class=\\\"th-search\\\">\\n                              <input type=\\\"text\\\" (keyup)=\\\"distribution_list()\\\" name=\\\"nameOfApplicant\\\" #nameOfApplicant=\\\"ngModel\\\" [(ngModel)]=\\\"filter.nameOfApplicant\\\" placeholder=\\\"Search....\\\">\\n                              \\n                            </div>\\n                          </th>\\n                          <th class=\\\"w110\\\">\\n                            <div class=\\\"th-search\\\">\\n                              <input type=\\\"text\\\" (keyup)=\\\"distribution_list()\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"filter.mobile\\\" placeholder=\\\"Search....\\\">\\n                              \\n                            </div>\\n                          </th>\\n                          <!-- <th class=\\\"w100\\\">&nbsp;</th>\\n                          <th class=\\\"w110\\\">&nbsp;</th> -->\\n                          <th  class=\\\"w120\\\">\\n                            <div class=\\\"th-search\\\">\\n                              <mat-select placeholder=\\\"Select\\\" id=\\\"segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"filter.segment\\\" #segment=\\\"ngModel\\\"  multiple>\\n                                <mat-option value=\\\"{{segment.text}}\\\" (click)=\\\"distribution_list()\\\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\\n                              </mat-select>\\n                            </div>\\n                          </th>\\n                          <!-- <th *ngIf=\\\"role==1\\\"></th> -->\\n                          <th >\\n                            <div class=\\\"th-search\\\">\\n                              <mat-select placeholder=\\\"Select State\\\" id=\\\"state\\\" name=\\\"state\\\" [(ngModel)]=\\\"filter.state\\\" #state=\\\"ngModel\\\">\\n                                <mat-option value=\\\"\\\" (click)=\\\"distribution_list()\\\" selected>All</mat-option>\\n                                <mat-option value=\\\"{{stat}}\\\" (click)=\\\"distribution_list()\\\" *ngFor='let stat of statelist'>{{stat}}</mat-option>\\n                              </mat-select>\\n                            </div>\\n                          </th>\\n                          \\n                          <th  class=\\\"w60\\\">&nbsp;</th>\\n                        </tr>\\n                      </table>\\n                    </form>\\n                  </div>\\n                </div>\\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content\\\">\\n                    <table>\\n                      <tr *ngFor=\\\"let retailer of distributionList\\\">\\n                        <td class=\\\"w100\\\">{{retailer.createdOn|date:'d MMM y'}}</td>\\n                        <td class=\\\"w190\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/distribution-detail/{{retailer.networkId}}\\\" routerLinkActive=\\\"active\\\">{{retailer.establishment}}</a></td>\\n                        <td class=\\\"w190\\\">{{retailer.nameOfApplicant}}</td>\\n                        <td class=\\\"w110\\\">{{retailer.mobile}}</td>\\n                        <!-- <td class=\\\"w100 text-right\\\">&#x20B9; {{retailer.targetLimit}}</td>\\n                        <td class=\\\"w110 text-right\\\">&#x20B9; {{retailer.creditLimit}}</td> -->\\n                        <!-- <td > <span *ngFor=\\\"let segments of retailer.networkSegments\\\">{{segments.segmentCode}},</span></td> -->\\n                        <td  class=\\\"w120\\\"><ng-container *ngFor=\\\"let segments of retailer.networkSegments\\\"><span>{{segments.segmentCode}},</span></ng-container></td>\\n                        <!-- <td *ngIf=\\\"role==1\\\" class=\\\"w250\\\">\\n                          <div class=\\\"tags\\\"> \\n                            <ul>\\n                              <li  *ngFor=\\\"let sales of retailer.networkSalesUsers\\\"><span>{{sales.salesUserName}}</span></li>\\n                            </ul>\\n                          </div>\\n                        </td> -->\\n                        <td>{{retailer.state}}</td>\\n                        <td *ngIf=\\\"this.role==1\\\" class=\\\"w60\\\">\\n                          <div class=\\\"action-btns default-action\\\">\\n                            <!-- <a mat-button class=\\\"edit\\\"><i class=\\\"material-icons\\\">add</i></a> -->\\n                            <button mat-button class=\\\"delete\\\"  (click)=\\\"delete_network(retailer.networkId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n          <div class=\\\"outer\\\">\\n            <div class=\\\"iinear\\\">\\n              <div class=\\\"figure\\\" matRipple>\\n                <div class=\\\"header\\\">\\n                  <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                </div>\\n                \\n                <div class=\\\"description\\\">\\n                  <div class=\\\"img\\\">\\n                    <i class=\\\"material-icons\\\">error_outline</i>\\n                  </div>\\n                  <div class=\\\"psc\\\">\\n                    <p>data not available</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"userType==1\\\" class=\\\"fixed-multibtn-botm\\\">\\n        <ul>\\n          <li><a  matTooltip=\\\"Add New\\\" matRipple><i class=\\\"material-icons\\\" routerLink=\\\"/add-distribution\\\" routerLinkActive=\\\"active\\\">add</i></a></li>\\n        </ul>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { sessionStorage }  from '../../local-storage.service';\n\n@Component({\n  selector: 'app-distribution-list',\n  templateUrl: './distribution-list.component.html',\n  animations: [slideToTop()]\n\n})\n\nexport class DistributionListComponent implements OnInit {\n// filter:any={};\ntmp_distributorlist:any=[];\ndistributionList:any=[];\nloader:boolean;\nmsg:any=[];\nsenddata:any;\nuserdata:any=[];\nnameOfApplicant:any;\nsegmentlist:any=[];\nmessage:any=[];\nrole:any;\nname:any;\nstatelist:any=[];\nfilter:any={};\nmobile:any;\ndiv:boolean=false;\nuserType:any;\n\n  constructor(public db:ConstantService,public user:sessionStorage, public route:ActivatedRoute, public toast:SnackBarOverview,public dialog:DialogComponent) {\n    this.userdata=this.user['user']['data'];\n    this.role=this.userdata['role'];\n    this.userType=this.userdata['userType'];\n   }\n\n  ngOnInit() {\n      this.distribution_list();\n  }\n\n\n  \n  refreshlist(){\n    this.distribution_list();\n    this.toast.openSucess('Refreshed successfully!','');\n  }\n\n\nclearfilter() {\n\n    this.filter = {};\n\n    this.distribution_list();\n}\n\n\n\n\ndistribution_list() {\n\n        console.log(this.filter.segment);\n        this.loader=true;\n        this.name=this.filter.companyname;\n        this.nameOfApplicant=this.filter.nameOfApplicant;\n        this.mobile=this.filter.mobile;\n        if(this.userdata['userType']!=1) {\n\n              this.senddata = {\"segments\":this.filter.segment,'state':this.filter.state,\"nameOfApplicant\":this.nameOfApplicant,\"isActive\":true,\"mobile\":this.mobile,\"contactName\":this.filter.contact,\"establishment\":this.name,\"salesUserId\":this.userdata['userId'],\"role\":12,\"currentPage\": 1,\"pageSize\": 50};\n\n              \n              this.db.fetchData(this.senddata,'mynetwork/detail').subscribe((response)=>\n              {\n                    console.log(response)\n                 \n                    if(response['status']==\"Success\")\n                    {\n                      this.distributionList=response['data'];\n                      console.log(this.distributionList);\n                    }\n                    else\n                    {\n                      this.distributionList=[];\n                      this.div=true;\n                    }\n                    setTimeout(() => {\n                      this.loader=false;\n\n                      this.segment_list();\n                      this.get_state();\n\n                    }, 500);\n                   \n\n              });\n\n\n        } else {\n\n\n              this.senddata={\"segments\":this.filter.segment,\"isActive\":true,'state':this.filter.state,\"nameOfApplicant\":this.nameOfApplicant,\"currentPage\":1,\n                \"pageSize\":100,\"mobile\":this.mobile,\"establishment\":this.name,\"role\":12,\"contactName\":this.filter.contact};\n\n              this.db.fetchData(this.senddata,'network/list').subscribe((response)=>\n              {\n                    console.log(response)\n                    if(response['status']==\"Success\")\n                    {\n                      this.distributionList=response['data'];\n                      console.log(this.distributionList);\n                    }\n                    else\n                    {\n                      this.distributionList=[];\n                      this.div=true;\n                    }\n                    console.log(this.distributionList);\n                    setTimeout(() => {\n                      this.loader=false;\n\n                      this.segment_list();\n                      this.get_state();\n\n                    }, 500);\n\n              });\n        }\n}\n\n\nget_state(){\n  this.loader=true;\n  this.db.fileData('','state/list/').subscribe((response)=>{\n    console.log(response);\n    this.loader=false;\n    this.statelist=response['data'];\n    // this.shippingState=response['data'];\n  });\n}\n\n\n\ndelete_network(id){\n  console.log(id);\n  this.msg=\"Network\"\n  this.dialog.delete(this.msg).then((result) => {\n    console.log(result);\n    if(result)\n    {\n      this.db.fileData(id,'network/delete/').subscribe((response)=>{\n          console.log(response);\n          this.message=response['message'];\n          if(this.message==\"Network removed successfully\")\n          {\n            this.toast.openSucess('Network removed successfully','');\n          }\n          else{\n            this.toast.openError('Something Went Wrong Please Try Again!!','');\n          }\n          this.distribution_list() \n        });\n    }\n  });\n}\n\n\nsegment_list(){\n  this.db.fileData('','segment/list/').subscribe((response)=>{\n    console.log(response);\n    this.segmentlist=response['data'];\n  });\n}\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n  <!-- <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <mat-spinner class=\\\"loader\\\"></mat-spinner> \\n    </div>\\n  </div> -->\\n\\n  <div *ngIf=\\\"loader\\\">\\n      <div class=\\\"cs-loader\\\">\\n        <mat-spinner class=\\\"loader\\\"></mat-spinner> \\n      </div>\\n  </div>\\n  \\n  <div mat-dialog-content>\\n    <p class=\\\"heading\\\">Document & Image </p>\\n    <div class=\\\" from-fields\\\">\\n      <div class=\\\"control-field\\\">\\n        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n          <input matInput [(ngModel)]=\\\"formData.title\\\" placeholder=\\\"Tittle\\\">\\n        </mat-form-field>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!formData.title\\\">\\n            Document Name Missing!\\n        </div>\\n\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formData.title && formData.title.length<4\\\">\\n            Document Name Must be atleast 4 Letters!\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12 padding0\\\">\\n          <div class=\\\"upload-excel mt15\\\">\\n            <label>\\n              <input (change)=\\\"insertDocument($event)\\\" style=\\\"display: none;\\\" type=\\\"file\\\">\\n              <div class=\\\"outer\\\">\\n                <div class=\\\"innear\\\">\\n                  <i class=\\\"material-icons upload-ic\\\">cloud_upload</i>\\n                  <p>Add Document</p>\\n                </div>\\n              </div>\\n            </label>\\n            <span class=\\\"file-format\\\">PDF, Image format Attach!</span>\\n          </div>\\n          <p class=\\\"file-name\\\">{{selectedFile ? selectedFile[0].name : ''}}</p>\\n        </div>\\n      </div>\\n      \\n      <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col s12 padding0\\\">\\n          <div class=\\\"cs-file-multiple sm-file scroll\\\">\\n            <ul class=\\\"mt15\\\">\\n              <li *ngFor=\\\"let urlData of urls;let i=index\\\">\\n                <label>\\n                  <img src=\\\"{{urlData}}\\\">\\n                  <a (click)=\\\"deleteimg(i)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                </label>\\n              </li>\\n              <li>\\n                <div class=\\\"cs-file\\\">\\n                  <label>\\n                      <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\">\\n                      <p>Upload Images</p>\\n                  </label>\\n                </div>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div> -->\\n\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!urls || urls.length==0\\\">\\n         Please Upload Image!\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n\\n  \\n  <div mat-dialog-actions>\\n    <button mat-raised-button  color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n    <button (click)=\\\"saveNetworkDocument()\\\" mat-raised-button color=\\\"accent\\\">Save</button>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9kb2N1bWVudC1lbmQtaW1hZ2UvZG9jdW1lbnQtZW5kLWltYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit,Inject } from '@angular/core';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { ConstantService } from '../../constant.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\n\n@Component({\n  selector: 'app-document-end-image',\n  templateUrl: './document-end-image.component.html',\n  styleUrls: ['./document-end-image.component.scss']\n})\nexport class DocumentEndImageComponent implements OnInit {\n\n\n  loader:boolean;\n\n  selectedFile:any=[];\n  formData:any = {};\n  networkData:any = {};\n\n  constructor(public db: ConstantService, public toast:SnackBarOverview, public dialogRef: MatDialogRef<DocumentEndImageComponent>,@Inject(MAT_DIALOG_DATA) public data:any) {\n\n        this.networkData = data;\n        console.log(data);\n   }\n\n    ngOnInit() {\n\n      this.selectedFile=[];\n      this.urls=[];\n    }\n\n    saveNetworkDocument() {\n\n\n        if(!this.formData.title || this.formData.title.length < 4) {\n            return;\n        }\n\n        if(!this.urls || this.urls.length==0) {\n\n            return;\n        }\n\n        let documentData = {};\n\n        documentData = new FormData;\n        documentData['action']=1;\n        documentData['binaryData']=this.urls[this.urls.length - 1];\n        documentData['documentType']=6;\n        documentData['documentName'] = this.selectedFile[0].name;\n        documentData['referenceId']=this.networkData.id;\n        this.loader=true;\n\n        for(var i=0; i<this.selectedFile.length; i++)\n        {\n\n            if(this.selectedFile[i].type == 'application/pdf') {\n              documentData['fileName'] = \"document\"+i+\".pdf\",this.selectedFile[i];\n            } else {\n              documentData['fileName'] = \"document\"+i+\".jpg\",this.selectedFile[i];\n            }\n        }\n\n        console.log(documentData);\n        let value=[];\n        value[0]=documentData;\n        console.log(value);\n\n        this.db.fetchData(value,\"document/update\").subscribe((resp)=>\n        {\n              console.log(resp);\n              if(resp)\n              {\n                  this.loader=false;\n                  this.toast.openSucess('Image Added Sucessfully','');\n                  this.dialogRef.close();\n                \n              }\n        });\n\n    }\n\n    urls:any=[];\n    insertDocument(data)\n    {\n            this.selectedFile=[];\n            this.urls=[];\n            const files = data.target.files;\n            if (files) {\n\n                for (const file of files) {\n\n                    const reader = new FileReader();\n\n                    reader.onload = (e: any) => {\n                      this.urls.push(e.target.result);\n                    }\n\n                    reader.readAsDataURL(file);\n                }\n            }\n\n            console.log(this.urls);\n            console.log(data.target.files.length);\n\n            for(var i=0; i<data.target.files.length; i++)\n            {\n                this.selectedFile.push(data.target.files[i]);\n            }\n\n            console.log(this.selectedFile);\n\n            console.log(this.urls);\n    }\n\n\n    deleteimg(index)\n    {\n        this.urls.splice(index, 1);\n        this.selectedFile.splice(index, 1);\n          \n    }\n\n\n\n}\n","module.exports = \"<div *ngIf=\\\"loader\\\"> \\n  <div class=\\\"cs-loader\\\">\\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n  </div>\\n</div>\\n<div class=\\\"main-container\\\" >\\n  <div class=\\\"middle-container padding0\\\">\\n    <div class=\\\"master-heading\\\">\\n      <div class=\\\"vl-info\\\">\\n        <ul>\\n          <li><p>Total Engine : <span *ngIf='wholeSalerList'>{{wholeSalerList.length}}</span><span *ngIf='!wholeSalerList'>0</span></p></li>\\n          <!-- <li><p>Active : <span class=\\\"green-clr\\\">15</span></p></li>\\n            <li><p>Deactive : <span class=\\\"yellow-clr\\\">25</span></p></li>\\n            <li class=\\\"af-none\\\"><p class=\\\"pl30\\\"><img src=\\\"assets/img/filter.svg\\\" class=\\\"icon\\\"><span>FILTER</span></p></li> -->\\n          </ul>\\n        </div>\\n        <!-- <div class=\\\"top-pagination m-right-data\\\">\\n          <ul>\\n            <li class=\\\"refresh-area af-none\\\">\\n              <a class=\\\"refresh-btn\\\" mat-raised-button (click)=\\\"refreshlist()\\\" matTooltip=\\\"Refresh\\\"><i class=\\\"material-icons\\\"> refresh</i></a>\\n            </li>\\n            <li><p>Pages 2 of 6</p></li>\\n              <li><button mat-button class=\\\"left-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_left</i></button></li>\\n              <li><input type=\\\"text\\\" placeholder=\\\"GO TO\\\"></li>\\n              <li><button mat-button class=\\\"right-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_right</i></button></li>\\n            </ul>\\n          </div> -->\\n          <div *ngIf=\\\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment\\\" class=\\\"filter-container left-auto\\\">\\n            <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n              <button mat-button >CLEAR FILTER</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"container-outer\\\">\\n        <div class=\\\"container\\\" >\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-table left-right-20\\\">\\n                <div class=\\\"sticky-head-flat\\\">\\n                  <div class=\\\"table-head\\\">\\n                    <table>\\n                      <tr>\\n                        <th class=\\\"w100\\\">Date</th>\\n                        <th class=\\\"w190\\\">Name</th>\\n                        <th class=\\\"w190\\\">Applicant Name</th>\\n                        <th class=\\\"w110\\\"> Mobile</th>\\n                        <!-- <th class=\\\"w100 text-right\\\"> Target</th>\\n                        <th class=\\\"w110 text-right\\\"> Credit Limit</th> -->\\n                        <th class=\\\"w120\\\">Segments</th>\\n                        <!-- <th *ngIf=\\\"role==1\\\" class=\\\"w250\\\">Assign To</th> -->\\n                        <th>Address</th>\\n                        <th class=\\\"w60\\\" *ngIf=\\\"role==1\\\">Action</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"table-head bdrt\\\">\\n                    <table>\\n                      <tr>\\n                        <th class=\\\"w100\\\"></th>\\n                        <th class=\\\"w190\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <input type=\\\"text\\\" (keyup)=\\\"Whole_saler_list()\\\" name=\\\"companyname\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.companyname\\\" placeholder=\\\"Search....\\\">\\n                            \\n                          </div>\\n                        </th>\\n                        <th class=\\\"w190\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <input type=\\\"text\\\" (keyup)=\\\"Whole_saler_list()\\\" name=\\\"nameOfApplicant\\\" #nameOfApplicant=\\\"ngModel\\\" [(ngModel)]=\\\"filter.nameOfApplicant\\\" placeholder=\\\"Search....\\\">\\n                            \\n                          </div>\\n                        </th>\\n                        <th class=\\\"w110\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <input type=\\\"text\\\" (keyup)=\\\"Whole_saler_list()\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"filter.mobile\\\" placeholder=\\\"Search....\\\">\\n                            \\n                          </div>\\n                        </th>\\n                        <!-- <th class=\\\"w100\\\"></th>\\n                        <th class=\\\"w110\\\"></th> -->\\n                        <th class=\\\"w120\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <mat-select placeholder=\\\"Select\\\" id=\\\"segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"filter.segment\\\" #segment=\\\"ngModel\\\"  multiple>\\n                              <mat-option value=\\\"{{segment.text}}\\\" (click)=\\\"Whole_saler_list()\\\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\\n                            </mat-select>\\n                          </div>\\n                        </th>\\n                        <th *ngIf=\\\"role==1\\\"></th>\\n                        <!-- <th>&nbsp;</th> -->\\n                        <th *ngIf=\\\"role==1\\\" class=\\\"w60\\\">&nbsp;</th>\\n                        <!-- <th *ngIf=\\\"role==1\\\" class=\\\"w250\\\">&nbsp;</th> -->\\n                        <!-- <th>&nbsp;</th> -->\\n                        <!-- <th *ngIf=\\\"role==1\\\" class=\\\"w250\\\">&nbsp;</th> -->\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content\\\">\\n                    <table>\\n                      <tr *ngFor=\\\"let retailer of wholeSalerList\\\">\\n                        <td class=\\\"w100\\\">{{retailer.createdOn|date:'d MMM y'}}</td>\\n                        <td class=\\\"w190\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/distribution-detail/{{retailer.networkId}}\\\" routerLinkActive=\\\"active\\\">{{retailer.establishment}}</a></td>\\n                        <td class=\\\"w190\\\">{{retailer.nameOfApplicant}}</td>\\n                        <td class=\\\"w110\\\">{{retailer.mobile}}</td>\\n                        <!-- <td class=\\\"w100 text-right\\\">&#x20B9; {{retailer.targetLimit}}</td>\\n                        <td class=\\\"w110 text-right\\\">&#x20B9; {{retailer.creditLimit}}</td> -->\\n                        <td class=\\\"w120\\\"><ng-container *ngFor=\\\"let segments of retailer.networkSegments\\\"><span>{{segments.segmentCode}},</span></ng-container></td>\\n                        <!-- <td *ngIf=\\\"role==1\\\" class=\\\"w250\\\">\\n                          <div class=\\\"tags\\\"> \\n                            <ul>\\n                              <li  *ngFor=\\\"let sales of retailer.networkSalesUsers\\\"><span>{{sales.salesUserName}}</span></li>\\n                            </ul>\\n                          </div>\\n                        </td> -->\\n                        <td>{{retailer.state}}</td>\\n                        <!-- <td  class=\\\"w190 text-right\\\">RS. 25000</td> -->\\n                        <!-- <td *ngIf=\\\"this.role==1\\\" class=\\\"w100 text-center\\\">\\n                          <mat-slide-toggle class=\\\"switch-toggle\\\" color=\\\"warn\\\"  [(ngModel)]='retailer.isActive' >&nbsp;</mat-slide-toggle>\\n                        </td> -->\\n                        <td *ngIf=\\\"this.role==1\\\" class=\\\"w60\\\">\\n                          <div class=\\\"action-btns default-action\\\">\\n                            <!-- <a mat-button class=\\\"edit\\\"><i class=\\\"material-icons\\\">add</i></a> -->\\n                            <button mat-button class=\\\"delete\\\"  (click)=\\\"delete_network(retailer.networkId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n          <div class=\\\"outer\\\">\\n            <div class=\\\"iinear\\\">\\n              <div class=\\\"figure\\\" matRipple>\\n                <div class=\\\"header\\\">\\n                  <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                </div>\\n                \\n                <div class=\\\"description\\\">\\n                  <div class=\\\"img\\\">\\n                    <i class=\\\"material-icons\\\">error_outline</i>\\n                  </div>\\n                  <div class=\\\"psc\\\">\\n                    <p>data not available</p>\\n                    <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n    \\n    <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-engine-list',\n  templateUrl: './engine-list.component.html',\n  animations: [slideToTop()]\n})\nexport class EngineListComponent implements OnInit {\n  senddata:any;\n  userdata:any=[];\n  wholeSalerList:any=[];\n  tmp_wholesalerlist:any=[];\n  segmentlist:any=[];\n  msg:any;\n  message:any;\n  nameOfApplicant:any;\n  loader:boolean;\n  role:any;\n  name:any;\nfilter:any={};\nmobile:any;\ndiv:any=false;\n  constructor(public user:sessionStorage,public toast:SnackBarOverview,public db:ConstantService,public dialog:DialogComponent) { \n    this.userdata=this.user['user']['data'];\n    this.role=this.userdata['role'];\n  }\n  ngOnInit() {\n    this.Whole_saler_list();\n    this.segment_list();\n  }\n  refreshlist(){\n    this.Whole_saler_list();\n   \n    this.toast.openSucess('Refreshed successfully!','');\n  }\n  clearfilter() {\n\n    this.filter = {};\n\n    this. Whole_saler_list();\n}\n\n\n  Whole_saler_list(){\n    this.name=this.filter.companyname;\n    this.nameOfApplicant=this.filter.nameOfApplicant;\n  this.mobile=this.filter.mobile;\n    this.loader=true;\n    this.div=false;\n    if(this.userdata['userType']!=1){\n      this.senddata={\"isActive\":true,\"segments\":this.filter.segment,\"nameOfApplicant\":this.nameOfApplicant,\"contactName\":this.filter.contact,\"mobile\":this.mobile,\"establishment\":this.name,\"salesUserId\":this.userdata['userId'], \"role\":'14'};\n      this.db.fetchData(this.senddata,'mynetwork/detail').subscribe((response)=>\n    {\n      console.log(response)\n      if(response['status']==\"Success\")\n      {\n        this.wholeSalerList=response['data'];\n      }\n      else\n      {\n        this.wholeSalerList=[];\n        this.div=true;\n      }\n      console.log(this.wholeSalerList);\n      this.loader=false;\n    });\n    }else{\n      this.senddata={\"isActive\":true,\"segments\":this.filter.segment,\"nameOfApplicant\":this.nameOfApplicant,\"contactName\":this.filter.contact,\"mobile\":this.mobile,\"establishment\":this.name,\"role\":'14'};\n      this.db.fetchData(this.senddata,'network/list').subscribe((response)=>\n    {\n      console.log(response)\n      if(response['status']==\"Success\")\n      {\n        this.wholeSalerList=response['data'];\n      }\n      else\n      {\n        this.wholeSalerList=[];\n        this.div=true;\n      }\n      console.log(this.wholeSalerList);\n      this.loader=false;\n    });\n    }\n  }\n\n  delete_network(id){\n    console.log(id);\n    this.msg=\"Network\"\n    this.dialog.delete(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.db.fileData(id,'network/delete/').subscribe((response)=>{\n            console.log(response);\n            this.message=response['message'];\n            if(this.message=\"Network removed successfully\")\n            {\n              this.toast.openSucess('Network removed successfully','');\n            }\n            else{\n              this.toast.openError('Something Went Wrong Please Try Again!!','');\n            }\n            this.Whole_saler_list() \n          });\n      }\n    });\n  }\n\n\n\n  segment_list(){\n    this.db.fileData('','segment/list/').subscribe((response)=>{\n      console.log(response);\n      this.segmentlist=response['data'];\n    });\n  }\n}\n","module.exports = \"<div *ngIf=\\\"loader\\\"> \\n  <div class=\\\"cs-loader\\\">\\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n  </div>\\n</div>\\n<div class=\\\"main-container\\\" >\\n  <div class=\\\"middle-container padding0\\\">\\n    <div class=\\\"master-heading\\\">\\n      <div class=\\\"vl-info\\\">\\n        <ul>\\n          <li><p>Total Mechanic : <span *ngIf='wholeSalerList'>{{wholeSalerList.length}}</span><span *ngIf='!wholeSalerList'>0</span></p></li>\\n          <!-- <li><p>Active : <span class=\\\"green-clr\\\">15</span></p></li>\\n            <li><p>Deactive : <span class=\\\"yellow-clr\\\">25</span></p></li>\\n            <li class=\\\"af-none\\\"><p class=\\\"pl30\\\"><img src=\\\"assets/img/filter.svg\\\" class=\\\"icon\\\"><span>FILTER</span></p></li> -->\\n          </ul>\\n        </div>\\n        <!-- <div class=\\\"top-pagination m-right-data\\\">\\n          <ul>\\n            <li class=\\\"refresh-area af-none\\\">\\n              <a class=\\\"refresh-btn\\\" mat-raised-button (click)=\\\"refreshlist()\\\" matTooltip=\\\"Refresh\\\"><i class=\\\"material-icons\\\"> refresh</i></a>\\n            </li>\\n            <li><p>Pages 2 of 6</p></li>\\n            <li><button mat-button class=\\\"left-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_left</i></button></li>\\n            <li><input type=\\\"text\\\" placeholder=\\\"GO TO\\\"></li>\\n            <li><button mat-button class=\\\"right-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_right</i></button></li>\\n          </ul>\\n        </div> -->\\n        <div *ngIf=\\\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment\\\" class=\\\"filter-container left-auto\\\">\\n          <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n            <button mat-button >CLEAR FILTER</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"sticky-head-flat\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table>\\n                    <tr>\\n                      <th class=\\\"w100\\\">Date</th>\\n                      <th class=\\\"w190\\\">Name</th>\\n                      <th class=\\\"w190\\\">Applicant Name</th>\\n                      <th class=\\\"w110\\\"> Mobile</th>\\n                      <!-- <th class=\\\"w100 text-right\\\"> Target</th>\\n                      <th class=\\\"w110 text-right\\\"> Credit Limit</th> -->\\n                      <th class=\\\"w120\\\">Segments</th>\\n                      <!-- <th *ngIf=\\\"role==1\\\" class=\\\"w250\\\">Assign To</th> -->\\n                      <th>Address</th>\\n                      <th class=\\\"w60\\\" *ngIf=\\\"role==1\\\">Action</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                <div class=\\\"table-head bdrt\\\">\\n                  <table>\\n                    <tr>\\n                      <th class=\\\"w100\\\">\\n                        \\n                      </th>\\n                      <th class=\\\"w190\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <input type=\\\"text\\\" (keyup)=\\\"Whole_saler_list()\\\" name=\\\"companyname\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.companyname\\\" placeholder=\\\"Search....\\\">\\n                          \\n                        </div>\\n                      </th>\\n                      <th class=\\\"w190\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <input type=\\\"text\\\" (keyup)=\\\"Whole_saler_list()\\\" name=\\\"nameOfApplicant\\\" #nameOfApplicant=\\\"ngModel\\\" [(ngModel)]=\\\"filter.nameOfApplicant\\\" placeholder=\\\"Search....\\\">\\n                          \\n                        </div>\\n                      </th>\\n                      <th class=\\\"w110\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <input type=\\\"text\\\" (keyup)=\\\"Whole_saler_list()\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"filter.mobile\\\" placeholder=\\\"Search....\\\">\\n                          \\n                        </div>\\n                      </th>\\n                      <!-- <th class=\\\"w100\\\"></th>\\n                      <th class=\\\"w110\\\"></th> -->\\n                      <th class=\\\"w120\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <mat-select placeholder=\\\"Select\\\" id=\\\"segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"filter.segment\\\" #segment=\\\"ngModel\\\"  multiple>\\n                            <mat-option value=\\\"{{segment.text}}\\\" (click)=\\\"Whole_saler_list()\\\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\\n                          </mat-select>\\n                        </div>\\n                      </th>\\n                      <th *ngIf=\\\"role==1\\\"></th>\\n                      <!-- <th>&nbsp;</th> -->\\n                      <th class=\\\"w60\\\" *ngIf=\\\"role==1\\\">&nbsp;</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let retailer of wholeSalerList\\\">\\n                      <td class=\\\"w100\\\">{{retailer.createdOn|date:'d MMM y'}}</td>\\n                      <td class=\\\"w190\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/distribution-detail/{{retailer.networkId}}\\\" routerLinkActive=\\\"active\\\">{{retailer.establishment}}</a></td>\\n                      <td class=\\\"w190\\\">{{retailer.nameOfApplicant}}</td>\\n                      <td class=\\\"w110\\\">{{retailer.mobile}}</td>\\n                      <!-- <td class=\\\"w100 text-right\\\">&#x20B9; {{retailer.targetLimit}}</td>\\n                      <td class=\\\"w110 text-right\\\">&#x20B9; {{retailer.creditLimit}}</td> -->\\n                      <td class=\\\"w120\\\"><ng-container  *ngFor=\\\"let segments of retailer.networkSegments\\\"><span>{{segments.segmentCode}},</span><br></ng-container></td>\\n                      <!-- <td *ngIf=\\\"role==1\\\" class=\\\"w250\\\">\\n                        <div class=\\\"tags\\\"> \\n                          <ul>\\n                            <li  *ngFor=\\\"let sales of retailer.networkSalesUsers\\\"><span>{{sales.salesUserName}}</span></li>\\n                          </ul>\\n                        </div>\\n                      </td> -->\\n                      <td>{{retailer.state}}</td>\\n                      <td *ngIf=\\\"this.role==1\\\" class=\\\"w60\\\">\\n                        <div class=\\\"action-btns default-action\\\">\\n                          <!-- <a mat-button class=\\\"edit\\\"><i class=\\\"material-icons\\\">add</i></a> -->\\n                          <button mat-button class=\\\"delete\\\"  (click)=\\\"delete_network(retailer.networkId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n        <div class=\\\"outer\\\">\\n          <div class=\\\"iinear\\\">\\n            <div class=\\\"figure\\\" matRipple>\\n              <div class=\\\"header\\\">\\n                <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n              </div>\\n              \\n              <div class=\\\"description\\\">\\n                <div class=\\\"img\\\">\\n                  <i class=\\\"material-icons\\\">error_outline</i>\\n                </div>\\n                <div class=\\\"psc\\\">\\n                  <p>data not available</p>\\n                  <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\n@Component({\n  selector: 'app-mechanic-list',\n  templateUrl: './mechanic-list.component.html',\n  animations: [slideToTop()]\n})\nexport class MechanicListComponent implements OnInit {\n  senddata:any;\n  userdata:any=[];\n  wholeSalerList:any=[];\n  tmp_wholesalerlist:any=[];\n  loader:boolean;\n  msg:any;\n  message:any;\n  role:any;\n  nameOfApplicant:any;\n  segmentlist:any=[];\n  name:any;\nfilter:any={};\ndiv:any=false;\nmobile:any;\n  constructor(public user:sessionStorage,public toast:SnackBarOverview,public db:ConstantService,public dialog:DialogComponent) { \n    this.userdata=this.user['user']['data'];\n    this.role=this.userdata['role'];\n  }\n\n  ngOnInit() {\n    this.Whole_saler_list();\n    this.segment_list();\n  }\n  refreshlist(){\n    this.Whole_saler_list();\n    this.toast.openSucess('Refreshed successfully!','');\n  }\n  segment_list(){\n    this.db.fileData('','segment/list/').subscribe((response)=>{\n      console.log(response);\n      this.segmentlist=response['data'];\n    });\n  }\n\n  delete_network(id){\n    console.log(id);\n    this.msg=\"Network\"\n    this.dialog.delete(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.db.fileData(id,'network/delete/').subscribe((response)=>{\n            console.log(response);\n            this.message=response['message'];\n            if(this.message=\"Network removed successfully\")\n            {\n              this.toast.openSucess('Network removed successfully','');\n            }\n            else{\n              this.toast.openError('Something Went Wrong Please Try Again!!','');\n            }\n            this.Whole_saler_list() \n          });\n      }\n    });\n  }\n\n  clearfilter() {\n\n    this.filter = {};\n\n    this. Whole_saler_list();\n}\n\n  Whole_saler_list(){\n    this.div=false;\n    this.name=this.filter.companyname;\n  this.mobile=this.filter.mobile;\n  this.nameOfApplicant=this.filter.nameOfApplicant;\n    this.loader=true;\n    if(this.userdata['userType']!=1){\n      this.senddata={ \"isActive\":true,\"segments\":this.filter.segment,\"nameOfApplicant\":this.nameOfApplicant,\"contactName\":this.filter.contact,\"mobile\":this.mobile,\"establishment\":this.name,\"salesUserId\":this.userdata['userId'],\"role\":'15'};\n      this.db.fetchData(this.senddata,'mynetwork/detail').subscribe((response)=>\n    {\n      console.log(response)\n      if(response['status']==\"Success\")\n      {\n        this.wholeSalerList=response['data'];\n      }\n      if(response['status']==\"Failed\")\n      {\n        this.div=true\n      }\n      console.log(this.wholeSalerList);\n      this.loader=false;\n    });\n    }else{\n      this.senddata={ \"isActive\":true,\"segments\":this.filter.segment,\"nameOfApplicant\":this.nameOfApplicant,\"contactName\":this.filter.contact,\"mobile\":this.mobile,\"establishment\":this.name,\"role\":'15'};\n      this.db.fetchData(this.senddata,'network/list').subscribe((response)=>\n    {\n      console.log(response)\n      if(response['status']==\"Success\")\n      {\n        this.wholeSalerList=response['data'];\n      }\n      if(response['status']==\"Failed\")\n      {\n        this.div=true\n      }\n      console.log(this.wholeSalerList);\n      this.loader=false;\n    });\n    }\n    \n  }\n}\n","module.exports = \"<div *ngIf=\\\"loader\\\"> \\n  <div class=\\\"cs-loader\\\">\\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n  </div>\\n</div>\\n<div class=\\\"main-container\\\">\\n  <div class=\\\"middle-container padding0\\\">\\n    <div class=\\\"master-heading\\\">\\n      <div class=\\\"vl-info\\\">\\n        <ul>\\n          <li><p>Total Retailer : <span >{{retaileList.length}}</span><span *ngIf='!retaileList'>0</span></p></li>\\n          <!-- <li><p>Active : <span class=\\\"green-clr\\\">15</span></p></li>\\n            <li><p>Deactive : <span class=\\\"yellow-clr\\\">25</span></p></li>\\n            <li class=\\\"af-none\\\"><p class=\\\"pl30\\\"><img src=\\\"assets/img/filter.svg\\\" class=\\\"icon\\\"><span>FILTER</span></p></li> -->\\n          </ul>\\n        </div>\\n        <!-- <div class=\\\"top-pagination m-right-data\\\">\\n          <ul>\\n            <li class=\\\"refresh-area af-none\\\">\\n              <a class=\\\"refresh-btn\\\" mat-raised-button (click)=\\\"refreshlist()\\\" matTooltip=\\\"Refresh\\\"><i class=\\\"material-icons\\\"> refresh</i></a>\\n            </li>\\n            <li><p>Pages 2 of 6</p></li>\\n            <li><button mat-button class=\\\"left-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_left</i></button></li>\\n            <li><input type=\\\"text\\\" placeholder=\\\"GO TO\\\"></li>\\n            <li><button mat-button class=\\\"right-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_right</i></button></li>\\n          </ul>\\n        </div> -->\\n        <div *ngIf=\\\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment\\\" class=\\\"filter-container left-auto\\\">\\n          <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n            <button mat-button >CLEAR FILTER</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head sticky-first\\\">\\n                <table>\\n                  <tr>\\n                    <th class=\\\"w100\\\">Date</th>\\n                    <th class=\\\"w190\\\">Company Name</th>\\n                    <th class=\\\"w190\\\">Applicant Name</th>\\n                    <th class=\\\"w110\\\"> Mobile</th>\\n                    <!-- <th class=\\\"w100 text-right\\\"> Target</th>\\n                      <th class=\\\"w110 text-right\\\"> Credit Limit</th> -->\\n                      <th class=\\\"w120\\\">Segments</th>\\n                      <!-- <th *ngIf=\\\"role==1\\\" class=\\\"w250\\\">Assign To</th> -->\\n                      <th>Address</th>\\n                      <th class=\\\"w60\\\" *ngIf=\\\"role==1\\\">Action</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                <div class=\\\"table-head bdrt sticky-second\\\" >\\n                  <table>\\n                    <tr>\\n                      <th class=\\\"w100\\\">        \\n                      </th>\\n                      <th class=\\\"w190\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <input type=\\\"text\\\" (keyup)=\\\"retailer_list()\\\" name=\\\"companyname\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.companyname\\\" placeholder=\\\"Search....\\\">\\n                          \\n                        </div>\\n                      </th>\\n                      <th class=\\\"w190\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <input type=\\\"text\\\" (keyup)=\\\"retailer_list()\\\" name=\\\"nameOfApplicant\\\" #nameOfApplicant=\\\"ngModel\\\" [(ngModel)]=\\\"filter.nameOfApplicant\\\" placeholder=\\\"Search....\\\">\\n                          \\n                        </div>\\n                      </th>\\n                      <th class=\\\"w110\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <input type=\\\"text\\\" (keyup)=\\\"retailer_list()\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"filter.mobile\\\" placeholder=\\\"Search....\\\">\\n                          \\n                        </div>\\n                      </th>\\n                      <!-- <th class=\\\"w100\\\"></th>\\n                        <th class=\\\"w110\\\"></th> -->\\n                        <th class=\\\"w120\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <mat-select placeholder=\\\"Select\\\" id=\\\"segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"filter.segment\\\" #segment=\\\"ngModel\\\"  multiple>\\n                              <mat-option value=\\\"{{segment.text}}\\\" (click)=\\\"retailer_list()\\\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\\n                            </mat-select>\\n                          </div>\\n                        </th>\\n                        <th *ngIf=\\\"role==1\\\"></th>\\n                        <!-- <th>&nbsp;</th> -->\\n                        <th class=\\\"w60\\\" *ngIf=\\\"role==1\\\">&nbsp;</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                  \\n                  <div class=\\\"table-container\\\">\\n                    <div class=\\\"table-content\\\">\\n                      <table>\\n                        <tr *ngFor=\\\"let retailer of retaileList\\\">\\n                          <td class=\\\"w100\\\">{{retailer.createdOn|date:'d MMM y'}}</td>\\n                          <td class=\\\"w190\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/distribution-detail/{{retailer.networkId}}\\\" routerLinkActive=\\\"active\\\">{{retailer.establishment}}</a></td>\\n                          <td class=\\\"w190\\\">{{retailer.nameOfApplicant}}</td>\\n                          <td class=\\\"w110\\\">{{retailer.mobile}}</td>\\n                          <!-- <td class=\\\"w100\\\">&#x20B9; {{retailer.targetLimit}}</td>\\n                            <td class=\\\"w110\\\">&#x20B9; {{retailer.creditLimit}}</td> -->\\n                            <td class=\\\"w120\\\"><ng-container *ngFor=\\\"let segments of retailer.networkSegments\\\"><span>{{segments.segmentCode}},</span><br></ng-container></td>\\n                            <!-- <td *ngIf=\\\"role==1\\\" class=\\\"w250\\\">\\n                              <div class=\\\"tags\\\"> \\n                                <ul>\\n                                  <li  *ngFor=\\\"let sales of retailer.networkSalesUsers\\\"><span>{{sales.salesUserName}}</span></li>\\n                                </ul>\\n                              </div>\\n                            </td> -->\\n                            <td>{{retailer.state}}</td>\\n                            <td *ngIf=\\\"this.role==1\\\" class=\\\"w60\\\">\\n                              <div class=\\\"action-btns default-action\\\">\\n                                <!-- <a mat-button class=\\\"edit\\\"><i class=\\\"material-icons\\\">add</i></a> -->\\n                                <button mat-button class=\\\"delete\\\"  (click)=\\\"delete_network(retailer.networkId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button>\\n                              </div>\\n                            </td>\\n                          </tr>\\n                        </table>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n              <div class=\\\"outer\\\">\\n                <div class=\\\"iinear\\\">\\n                  <div class=\\\"figure\\\" matRipple>\\n                    <div class=\\\"header\\\">\\n                      <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                    </div>\\n                    \\n                    <div class=\\\"description\\\">\\n                      <div class=\\\"img\\\">\\n                        <i class=\\\"material-icons\\\">error_outline</i>\\n                      </div>\\n                      <div class=\\\"psc\\\">\\n                        <p>data not available</p>\\n                        <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>\\n        \\n        <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-retailer-list',\n  templateUrl: './retailer-list.component.html',\n  animations: [slideToTop()]\n  // styleUrls: ['./retailer-list.component.scss']\n})\nexport class RetailerListComponent implements OnInit {\n  senddata:any;\n  userdata:any=[];\n  retaileList:any=[];\n  tmp_retailer_list:any=[];\nloader:boolean;\nmsg:any;\n  message:any;\nsegmentlist:any=[];\nnameOfApplicant:any;\nrole:any\nname:any;\nfilter:any={};\ndiv:any=false;\nmobile:any;\n  constructor(public user:sessionStorage,public toast:SnackBarOverview,public db:ConstantService,public dialog:DialogComponent) { \n    this.userdata=this.user['user']['data'];\n    this.role=this.userdata['role'];\n  }\n\n  ngOnInit() {\n    this.retailer_list();\n    this.segment_list();\n  }\n  refreshlist(){\n    this.retailer_list();\n    this.toast.openSucess('Refreshed successfully!','');\n  }\n\n  segment_list(){\n    this.db.fileData('','segment/list/').subscribe((response)=>{\n      console.log(response);\n      this.segmentlist=response['data'];\n    });\n  }\n  delete_network(id){\n    console.log(id);\n    this.msg=\"Network\"\n    this.dialog.delete(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.db.fileData(id,'network/delete/').subscribe((response)=>{\n            console.log(response);\n            this.message=response['message'];\n            if(this.message=\"Network removed successfully\")\n            {\n              this.toast.openSucess('Network removed successfully','');\n            }\n            else{\n              this.toast.openError('Something Went Wrong Please Try Again!!','');\n            }\n            this.retailer_list() \n          });\n      }\n    });\n  }\n\n  clearfilter() {\n\n    this.filter = {};\n\n    this. retailer_list();\n}\n\n\n  retailer_list(){\n    this.div=false;\n    this.loader=true;\n    this.name=this.filter.companyname;\n    this.nameOfApplicant=this.filter.nameOfApplicant;\n    this.mobile=this.filter.mobile;\n    if(this.userdata['userType']!=1){\n      this.senddata={\"isActive\":true,\"segments\":this.filter.segment,\"nameOfApplicant\":this.nameOfApplicant,\"contactName\":this.filter.contact,\"mobile\":this.mobile,\"establishment\":this.name,\"salesUserId\":this.userdata['userId'],\"role\": 13};\n      this.db.fetchData(this.senddata,'mynetwork/detail').subscribe((response)=>\n    {\n      console.log(response)\n      if(response['status']=='Success')\n      {\n        this.retaileList=response['data'];\n      }\n      else\n      {\n        this.retaileList=[];\n        this.div=true;\n      }\n      console.log(this.retaileList);\n      this.loader=false;\n    });\n    }else{\n      this.senddata={\"isActive\":true,\"segments\":this.filter.segment,\"nameOfApplicant\":this.nameOfApplicant,\"contactName\":this.filter.contact,\"mobile\":this.mobile,\"establishment\":this.name,\"role\": 13};\n      this.db.fetchData(this.senddata,'network/list').subscribe((response)=>\n    {\n      console.log(response)\n      if(response['status']=='Success')\n      {\n        this.retaileList=response['data'];\n\n      }\n      else\n      {\n        this.retaileList=[];\n        this.div=true;\n      }\n      console.log(this.retaileList);\n      this.loader=false;\n    });\n    }\n    \n  }\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div mat-dialog-content>\\n  <p class=\\\"heading\\\">Update Address</p>\\n  <div class=\\\"from-fields\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <mat-select placeholder=\\\"State\\\" name=\\\"state\\\" [(ngModel)]=\\\"networkUserDetail.state\\\" >\\n                  <mat-option (click)=\\\"get_district()\\\"  *ngFor=\\\"let state of statelist\\\" value=\\\"{{state}}\\\">{{state}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <mat-select placeholder=\\\"District\\\"   name=\\\"district\\\" [(ngModel)]=\\\"networkUserDetail.district\\\" >\\n                  <mat-option (click)=\\\"get_city()\\\"  *ngFor=\\\"let district of district1\\\" value=\\\"{{district.districtName}}\\\">{{district.districtName}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <mat-select placeholder=\\\"City\\\"  name=\\\"city\\\" [(ngModel)]=\\\"networkUserDetail.city\\\" >\\n                  <mat-option   *ngFor=\\\"let city of cities\\\" (click)=\\\" stateId=city.stateMasterId ;get_pincode()\\\" value=\\\"{{city.cityName}}\\\">{{city.cityName}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <mat-select placeholder=\\\"Pin\\\"  name=\\\"pin\\\" [(ngModel)]=\\\"networkUserDetail.pin\\\" >\\n                <mat-option *ngFor=\\\"let pin of areas\\\" value=\\\"{{pin}}\\\">{{pin}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"row mb15\\\">\\n      <div class=\\\"col s12\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\" >\\n                <textarea matInput placeholder=\\\"Address\\\" name=\\\"street\\\" [(ngModel)]=\\\"networkUserDetail.street\\\" class=\\\"h100\\\"></textarea>\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n  </div>\\n\\n  <div mat-dialog-actions>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">Cancel</button>\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"update_salesuser()\\\">Save</button>\\n  </div>\\n\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi91cGRhdGUtbmV0d29yay1hZGRyZXNzL3VwZGF0ZS1uZXR3b3JrLWFkZHJlc3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-update-network-address',\n  templateUrl: './update-network-address.component.html',\n  styleUrls: ['./update-network-address.component.scss']\n})\nexport class UpdateNetworkAddressComponent implements OnInit {\n  networkUserDetail:any;\n  statelist:any;\n  citylist:any;\n  st:any;\n  areas:any=[];\n  statecode:any=[];\n  networkUpdateActions:any=[];\n  district1:any;\n  cities:any;\n  statemasterid:any;\n  stateId:any;\n  districtlist:any;\n  districts1:any;\nmessage:any;\nloader:any;\n  constructor( public toast: SnackBarOverview,public router:Router,public dialogRef: MatDialogRef<UpdateNetworkAddressComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService) {\n    \n    this.networkUserDetail=this.data;\n    // this.networkUserDetail.state=this.data.state;\n    // this.networkUserDetail.district=this.data.district;\n    // this.networkUserDetail.city=this.data.city;\n    // this.networkUserDetail.street=this.data.street;\n    console.log(this.networkUserDetail);\n    this.get_state();\n    this.get_district();\n    this.get_city();\n   }\n\n  ngOnInit() {\n  }\n\n  get_state(){\n    this.db.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.statelist=response['data'];  \n      console.log(this.statelist);\n        this.get_district();\n    });\n  }\n  get_district(){\n    console.log(this.networkUserDetail.state);\n    this.st=Array(this.networkUserDetail.state)\n    this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n      console.log(response);\n      this.districtlist=response['data'];\n      this.district1=this.districtlist[0].distrcits;\n    });\n  this.get_city()\n  }\n\n\n  get_city(){\n    console.log(this.networkUserDetail.state,this.networkUserDetail.district);\n    console.log(this.networkUserDetail.district);\n    this.db.fetchData(Array({\"stateName\":this.networkUserDetail.state,\"distrcits\":Array({\"districtName\":this.networkUserDetail.district})}),'city/list').subscribe((response)=>{\n      console.log(response);\n      this.citylist=response['data'];\n      this.districts1=this.citylist[0].distrcits;\n      this.cities=this.districts1[0].cities;\n      console.log(this.cities);\n      this.statecode= this.cities.filter(x => x.cityName==this.data.city);\n      console.log(this.statecode);\n      this.statemasterid=this.statecode[0].stateMasterId;\n    });\n    this.get_pincode();\n  }\n\n\n  get_pincode(){\n    console.log(\"check function\");\n    let cityarray=[];\n    if(this.stateId){\n      console.log(this.stateId);\n      cityarray[0]=this.stateId;\n    }else{\n    console.log(this.statemasterid);\n    cityarray[0]=this.statemasterid;\n    }\n    console.log(cityarray);\n    this.db.fetchData({'stateMasterIds':cityarray},'city/pincodes').subscribe((response)=>{\n      console.log(response);\n      this.areas=response['data'][0]['pinCodes'];\n      console.log( this.areas);\n    });\n  }\n  \n  update_salesuser(){\n    this.loader=true;\n    console.log(this.data);\n    this.networkUpdateActions={'basicInfoModified':true};\n   this.db.fetchData({\"networkUpdateActions\":this.networkUpdateActions,\n     \"networkId\": this.data.networkId,\n   \"street\": this.networkUserDetail.street,\n   \"state\": this.networkUserDetail.state,\n   \"district\":this.networkUserDetail.district,\n   \"city\":this.networkUserDetail.city,\n   \"pin\": this.networkUserDetail.pin},'network/update').subscribe((response)=>{\n     console.log(response)\n     this.loader=false;\n     this.message=response['message'];\n    if(this.message==\"Distributor Network Updated Successfully\")\n    {\n      this.toast.openSucess('Address updated successfully','');\n      this.router.navigate(['/distribution-detail/'+this.data.networkId]);\n    }\n    else\n    {\n      this.toast.openError('Something went wrong Please Try Again!!','');\n    }\n  });\n    this.dialogRef.close();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updateMobileEmail()\\\"  #f=\\\"ngForm\\\" novalidate>\\n        <div *ngIf=\\\"loader\\\"> \\n            <div class=\\\"cs-loader\\\">\\n              <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n            </div>\\n          </div>\\n        \\n        <div *ngIf=\\\"networkUserDetail.type=='email'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Email</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput placeholder=\\\"Email-ID\\\" name=\\\"email\\\" value=\\\"email\\\" [(ngModel)]=\\\"networkUserDetail.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n                        Please Enter Valid Email!\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"networkUserDetail.type=='networkCode'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Network Code</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput placeholder=\\\"Network Code\\\" name=\\\"networkCode\\\" value=\\\"networkCode\\\" [(ngModel)]=\\\"networkUserDetail.networkCode\\\" #networkCode=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && networkCode.invalid }\\\" required>\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!networkCode.valid && networkCode.touched\\\">\\n                        Please Enter Network Code!\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"networkUserDetail.type=='dates'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Dates</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"row\\\">\\n\\n                <div class=\\\"col s4 control-field\\\">\\n                        <!-- <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input input matInput type=\\\"date\\\" placeholder=\\\"Commencement Date\\\" name=\\\"dateOfCommencement\\\" [(ngModel)]=\\\"dateArray.dateOfCommencement\\\" #dateOfCommencement=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && dateOfCommencement.invalid }\\\" required>\\n                        </mat-form-field> -->\\n                        <mat-form-field class=\\\"cs-input\\\">\\n                            <input matInput [matDatepicker]=\\\"pickertwo\\\" placeholder=\\\"Commencement Date\\\" name=\\\"dateOfCommencement\\\" [(ngModel)]=\\\"dateArray.dateOfCommencement\\\" #dateOfCommencement=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && dateOfCommencement.invalid }\\\" required>\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"pickertwo\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #pickertwo></mat-datepicker>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!dateOfCommencement.valid && dateOfCommencement.touched\\\">\\n                            Please Enter Commencement Date!\\n                        </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"col s4 control-field\\\">\\n                        <!-- <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input input matInput type=\\\"date\\\" placeholder=\\\"Date Of Birth\\\" name=\\\"dateOfBirth\\\" [(ngModel)]=\\\"dateArray.dateOfBirth\\\" #dateOfBirth=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && dateOfBirth.invalid }\\\" required>\\n                        </mat-form-field> -->\\n                        \\n                        <mat-form-field class=\\\"cs-input\\\">\\n                            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date Of Birth\\\" name=\\\"dateOfBirth\\\" [(ngModel)]=\\\"dateArray.dateOfBirth\\\" #dateOfBirth=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && dateOfBirth.invalid }\\\" required>\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #picker></mat-datepicker>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!dateOfBirth.valid && dateOfBirth.touched\\\">\\n                            Please Enter Birth Date!\\n                        </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s4 control-field\\\">\\n                        <!-- <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input input matInput type=\\\"date\\\" placeholder=\\\"Date Of Marriage\\\" name=\\\"dateOfMarriage\\\"  [(ngModel)]=\\\"dateArray.dateOfMarriage\\\" #dateOfMarriage=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && dateOfMarriage.invalid }\\\" required>\\n                        </mat-form-field> -->\\n                        \\n                        <mat-form-field class=\\\"cs-input\\\">\\n                            <input matInput [matDatepicker]=\\\"pickerone\\\" placeholder=\\\"Date Of Marriage\\\" name=\\\"dateOfMarriage\\\"  [(ngModel)]=\\\"dateArray.dateOfMarriage\\\" #dateOfMarriage=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && dateOfMarriage.invalid }\\\" required>\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"pickerone\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #pickerone></mat-datepicker>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!dateOfMarriage.valid && dateOfMarriage.touched\\\">\\n                            Please Enter Marriage Date!\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"networkUserDetail.type=='bank'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Bank Details</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col s4 control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input matInput placeholder=\\\"Bank Name\\\" name=\\\"bankName\\\" value=\\\"bankName\\\" [(ngModel)]=\\\"networkUserDetail.bankName\\\" #bankName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && bankName.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!bankName.valid && bankName.touched\\\">\\n                            Please Enter Bank Name.\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col s4 control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input matInput placeholder=\\\"Account Number\\\" name=\\\"accountNumber\\\" value=\\\"accountNumber\\\"  minlength=\\\"10\\\" maxlength=\\\"14\\\" min=\\\"0\\\" [(ngModel)]=\\\"networkUserDetail.accountNumber\\\" #accountNumber=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && accountNumber.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!accountNumber.valid && accountNumber.touched\\\">\\n                            Please Enter Account Number.\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col s4 control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input matInput placeholder=\\\"IFSC Code\\\" name=\\\"ifscCode\\\" value=\\\"ifscCode\\\" [(ngModel)]=\\\"networkUserDetail.ifscCode\\\" minlength=\\\"11\\\" maxlength=\\\"11\\\" #ifscCode=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && ifscCode.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!ifscCode.valid && ifscCode.touched\\\">\\n                            Please Enter IFSC Code.\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"networkUserDetail.type=='gst'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update GST</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput placeholder=\\\"GST\\\" name=\\\"gst\\\" value=\\\"gst\\\" [(ngModel)]=\\\"networkUserDetail.gst\\\" #gst=\\\"ngModel\\\" minlength=\\\"15\\\" maxlength=\\\"15\\\" min=\\\"0\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && gst.invalid }\\\" required>\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!gst.valid && gst.touched\\\">\\n                        Please Enter 15 Digit GST\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"networkUserDetail.type=='pan'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update PAN</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput placeholder=\\\"PAN\\\" name=\\\"pan\\\" value=\\\"pan\\\" [(ngModel)]=\\\"networkUserDetail.pan\\\" #pan=\\\"ngModel\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && pan.invalid }\\\" required>\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!pan.valid && pan.touched\\\">\\n                        Please Enter 10 Digit Valid PAN....\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"networkUserDetail.type=='mobile'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Mobile</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput type=\\\"text\\\"  maxlength=\\\"10\\\"  placeholder=\\\"Mobile\\\" name=\\\"mobile\\\"   value=\\\"mobile\\\" [(ngModel)]=\\\"networkUserDetail.mobile\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" #mobile=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobile.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\" required>\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!mobile.valid && mobile.touched\\\">\\n                        Please Enter Valid Mobile\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"networkUserDetail.type=='taskremarks'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n                <p class=\\\"heading\\\">Update Remark</p>\\n                <div class=\\\" from-fields\\\">\\n                    <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input matInput placeholder=\\\"Remark\\\" name=\\\"remarks\\\" value=\\\"remarks\\\" [(ngModel)]=\\\"networkUserDetail.remarks\\\" #remarks=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && remarks.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!remarks.valid && remarks.touched\\\">\\n                            Please Enter remarks !\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        <div *ngIf=\\\"networkUserDetail.type=='landline'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n                <p class=\\\"heading\\\">Update Landline</p>\\n                <div class=\\\" from-fields\\\">\\n                    <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input matInput type=\\\"text\\\"  maxlength=\\\"10\\\"  placeholder=\\\"Landline\\\" name=\\\"landline\\\"   value=\\\"landline\\\" [(ngModel)]=\\\"networkUserDetail.landline\\\"  minlength=\\\"6\\\" maxlength=\\\"13\\\" #landline=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && landline.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"landline.invalid && landline.touched\\\">\\n                                Landline is must be atleast 6 digit\\n                            </div>\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"landline.invalid && landline.errors.required\\\">\\n                                    Landline is required\\n                            </div>\\n                    </div>\\n                </div>\\n       </div>\\n        \\n        <div *ngIf=\\\"networkUserDetail.type=='nameOfApplicant'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Name Of Applicant</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Name Of Applicant\\\" name=\\\"nameOfApplicant\\\"   value=\\\"nameOfApplicant\\\" [(ngModel)]=\\\"networkUserDetail.nameOfApplicant\\\" #nameOfApplicant=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && nameOfApplicant.invalid }\\\" required>\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!nameOfApplicant.valid && nameOfApplicant.touched\\\">\\n                        Please Enter Name Of Applicant.\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"networkUserDetail.type=='addlimit'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Add Target</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col s6 control-field\\\">\\n                        <mat-form-field class=\\\"cs-input\\\">\\n                            <mat-select placeholder=\\\"Select year\\\" name=\\\"financialYear\\\" id=\\\"financialYear\\\" [(ngModel)]=\\\"networkUserDetail.financialYear\\\" #financialYear=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && financialYear.invalid }\\\" required>\\n                                <mat-option value=\\\"2019-2020\\\"  >2019-2020</mat-option>\\n                                <mat-option value=\\\"2020-2021\\\"  >2020-2021</mat-option>\\n                                <mat-option value=\\\"2021-2022\\\"  >2021-2022</mat-option>\\n                                <mat-option value=\\\"2022-2023\\\"  >2022-2023</mat-option>\\n                                <mat-option value=\\\"2023-2024\\\"  >2023-2024</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && financialYear.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"financialYear.errors.required\\\">Financial Year is required</mat-error>\\n                        </mat-error>\\n                    </div>\\n                    \\n                    <div class=\\\"col s6 control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input matInput type=\\\"text\\\" placeholder=\\\"Target\\\" name=\\\"targetLimit\\\"   value=\\\"targetLimit\\\" [(ngModel)]=\\\"networkUserDetail.targetLimit\\\" #targetLimit=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && targetLimit.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!targetLimit.valid && targetLimit.touched\\\">\\n                            Please Enter Target....\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"networkUserDetail.type=='editlimit'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Target</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col s6 control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input matInput type=\\\"text\\\" placeholder=\\\"Financial Year\\\" name=\\\"financialYear\\\"  readonly value=\\\"financialYear\\\" [(ngModel)]=\\\"networkUserDetail.financialYear\\\" #financialYear=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && financialYear.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && financialYear.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"financialYear.errors.required\\\">Financial Year is required</mat-error>\\n                        </mat-error>\\n                    </div>\\n                    <div class=\\\"col s6 control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input matInput type=\\\"text\\\" placeholder=\\\"Target\\\" name=\\\"targetLimit\\\"   value=\\\"targetLimit\\\" [(ngModel)]=\\\"networkUserDetail.targetLimit\\\" #targetLimit=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && targetLimit.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!targetLimit.valid && targetLimit.touched\\\">\\n                            Please Enter Target!\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"data.type=='assign'\\\" mat-dialog-content>\\n            <p class=\\\"heading\\\">Update Sales</p>\\n            <mat-form-field class=\\\"cs-input\\\">\\n                <mat-select placeholder=\\\"Select Sales\\\" name=\\\"sales\\\" [(ngModel)]=\\\"data.sales\\\" multiple>\\n                    <mat-option *ngFor='let sales of saleslist' value=\\\"{{sales.userId}}\\\" >{{sales.userName}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </div> \\n\\n        <div *ngIf=\\\"data.type=='source'\\\" mat-dialog-content>\\n            <p class=\\\"heading\\\">Update Source</p>\\n            <mat-form-field class=\\\"cs-input\\\">\\n                <mat-select placeholder=\\\"Source\\\" matNativeControl name=\\\"source\\\" id=\\\"source\\\" #source=\\\"ngModel\\\" [(ngModel)]=\\\"networkUserDetail.source\\\"  [ngClass]=\\\"{'has-error' : source.invalid }\\\">\\n                    <mat-option [value]=\\\"\\\" disabled>Select Source</mat-option>\\n                    <mat-option [value]=\\\"1\\\">SOCIAL</mat-option>\\n                    <mat-option [value]=\\\"5\\\">CALL</mat-option>\\n                    <mat-option [value]=\\\"2\\\">DIRECT</mat-option>\\n                    <mat-option [value]=\\\"3\\\">WALK-IN</mat-option>\\n                    <mat-option [value]=\\\"4\\\">REFERRAL</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </div> \\n        \\n        <div *ngIf=\\\"data.type=='contact'\\\" mat-dialog-content>\\n            <p class=\\\"heading\\\">Update Contact</p>\\n            <div class=\\\"from-fields\\\">\\n                <form #p=\\\"ngForm\\\" (ngSubmit)=\\\"p.valid && addContactPerson()\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col s4 \\\">\\n                            <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input\\\">\\n                                    <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"contact_person.name\\\" (keypress)=\\\"namecheck($event)\\\" >\\n                                </mat-form-field>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col s4\\\">\\n                            <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input\\\">\\n                                    <input matInput placeholder=\\\"Mobile No. 1\\\" name=\\\"mobile1\\\" #mobile1=\\\"ngModel\\\" [(ngModel)]=\\\"contact_person.mobile1\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\">\\n                                </mat-form-field>\\n                                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!mobile1.valid && mobile1.touched\\\">\\n                                    Contact no is Invalid...\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col s4 \\\">\\n                            <div class=\\\"control-field pr80\\\">\\n                                <mat-form-field class=\\\"cs-input\\\">\\n                                    <input matInput placeholder=\\\"Mobile No. 2\\\"  name=\\\"mobile2\\\" #mobile2=\\\"ngModel\\\" [(ngModel)]=\\\"contact_person.mobile2\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" >\\n                                </mat-form-field>\\n                                <div class=\\\"plus-btn\\\">\\n                                    <button mat-raised-button color=\\\"accent\\\">\\n                                        <i class=\\\"material-icons\\\" >add</i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"row mt15\\\">\\n                <div class=\\\"col s12 padding0\\\">\\n                    <div class=\\\"cs-table left-right-20\\\">\\n                        <div class=\\\"table-head\\\">\\n                            <table>\\n                                <tr>\\n                                    <th>Name</th>\\n                                    <th class=\\\"w200\\\">Mobile No. 1</th>\\n                                    <th class=\\\"w200 bdr0\\\">Mobile No. 2</th>\\n                                    <th class=\\\"w130\\\">&nbsp;</th>\\n                                </tr>\\n                            </table>\\n                        </div>\\n                        <div class=\\\"table-container\\\">\\n                            <div class=\\\"table-content\\\">\\n                                <table>\\n                                    <tr *ngFor=\\\"let value of tmp_list;let index=index\\\">\\n                                        <td>{{value.name}}</td>\\n                                        <td class=\\\"w200\\\">{{value.mobile1}}</td>\\n                                        <td class=\\\"w200\\\">{{value.mobile2}}</td>\\n                                        <td class=\\\"w130\\\">\\n                                            <a mat-button class=\\\"del-btn\\\" (click)=\\\"removeContact(index)\\\">Delete</a>\\n                                        </td>\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div mat-dialog-actions>\\n            <button mat-raised-button  color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n            <button mat-raised-button color=\\\"accent\\\">Save</button>\\n        </div>\\n    </form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi91cGRhdGUtbmV0d29yay91cGRhdGUtbmV0d29yay5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-update-network',\n  templateUrl: './update-network.component.html',\n  styleUrls: ['./update-network.component.scss']\n})\n\nexport class UpdateNetworkComponent implements OnInit {\n  message:any;\n  loader:any;\n  territoryId:any;\n  contact_person:any={};\n  tmp_list:any=[];\n  networkUpdateActions:any=[];\n  networkUserDetail:any;\n  saleslist:any=[];\n  dateArray:any={};\n\n  constructor(public toast:SnackBarOverview,public router:Router,public dialogRef: MatDialogRef<UpdateNetworkComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService)\n  {\n        console.log(data);\n        this.networkUserDetail=this.data;\n\n        console.log(this.networkUserDetail);\n        this.tmp_list=this.networkUserDetail.networkContacts;\n        console.log(this.networkUserDetail)\n        console.log(this.networkUserDetail.financialYear);\n        console.log(this.networkUserDetail.targetLimit);\n        console.log(this.networkUserDetail.networkId);\n        this.dateArray={'dateOfBirth':moment(this.networkUserDetail.dateOfBirth).format('YYYY-MM-DD'),'dateOfMarriage':moment(this.networkUserDetail.dateOfMarriage).format('YYYY-MM-DD'),'dateOfCommencement':moment(this.networkUserDetail.dateOfCommencement).format('YYYY-MM-DD')};\n        \n        console.log(this.dateArray);\n  }\n\n\n  ngOnInit() {\n  }\n\n\n\n\n  MobileNumber(event: any) \n  {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n\n\n\n   addContactPerson()\n  {\n    if(!this.contact_person.mobile2){\n      this.contact_person.mobile2='';\n    }\n    this.tmp_list.push(this.contact_person);\n    this.contact_person={};\n    console.log(this.tmp_list);\n  }\n\n  removeContact(index)\n  {\n     this.tmp_list.splice(index,1);\n  }\n\n  namecheck(event: any) \n  {\n    const pattern = /[A-Z\\+\\a-z\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n\nupdate_data:any={};\n  updateMobileEmail(){\n    if(this.networkUserDetail.type=='email'){\n      this.update_data.email=this.networkUserDetail.email;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n    else if(this.networkUserDetail.type=='networkCode'){\n      this.update_data.networkCode=this.networkUserDetail.networkCode;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n\n    else if(this.networkUserDetail.type=='source'){\n      this.update_data.source=this.networkUserDetail.source;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n\n    else if(this.networkUserDetail.type=='mobile'){\n      this.update_data.mobile=this.networkUserDetail.mobile;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n\n    else if(this.networkUserDetail.type=='landline'){\n      this.update_data.landline=this.networkUserDetail.landline;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n\n    else if(this.networkUserDetail.type=='gst'){\n      this.update_data.gst=this.networkUserDetail.gst;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n    else if(this.networkUserDetail.type=='pan'){\n      this.update_data.pan=this.networkUserDetail.pan;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n    else if(this.networkUserDetail.type=='bank'){\n      this.update_data.bankName=this.networkUserDetail.bankName;\n      this.update_data.accountNumber=this.networkUserDetail.accountNumber;\n      this.update_data.ifscCode=this.networkUserDetail.ifscCode;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n    else if(this.networkUserDetail.type=='nameOfApplicant'){\n      this.update_data.nameOfApplicant=this.networkUserDetail.nameOfApplicant;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n    else if(this.networkUserDetail.type=='dates'){\n\n      \n      this.update_data.dateOfBirth=moment(this.dateArray.dateOfBirth).format('YYYY-MM-DD') ;\n      this.update_data.dateOfMarriage=moment(this.dateArray.dateOfMarriage).format('YYYY-MM-DD');\n      this.update_data.dateOfCommencement=moment(this.dateArray.dateOfCommencement).format('YYYY-MM-DD');\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'basicInfoModified':true};\n      console.log(this.update_data);\n    }\n    else if(this.networkUserDetail.type=='contact'){\n      this.update_data.networkContacts=this.tmp_list;\n      this.update_data.networkId=this.data.networkId;\n      this.update_data.networkUpdateActions={'contactsModified':true};\n      console.log(this.update_data);\n    }\n    \n      console.log(this.data.sales);\n\n      this.loader = true;\n      this.db.fetchData(this.update_data,'network/update').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        this.message=response['message'];\n        if(this.message==\"Distributor Network Updated Successfully\")\n        {\n          this.toast.openSucess('Updated successfully','');\n          this.router.navigate(['/distribution-detail/'+this.data.networkId]) \n        }\n        else\n        {\n          this.toast.openError('Something went wrong Please Try Again!!','');\n        }\n        this.dialogRef.close();\n      });\n\n    if(this.networkUserDetail.type=='addlimit'){\n        this.update_data.targetLimit=this.networkUserDetail.targetLimit;\n        this.update_data.financialYear=this.networkUserDetail.financialYear;\n        this.update_data.networkId=this.data.networkId;\n        this.update_data.networkUpdateActions={'contactsModified':true};\n        console.log(this.update_data);\n        console.log(this.data.sales);\n        this.db.fetchData(this.update_data,'network/limit/add').subscribe((response)=>{\n          console.log(response);\n          this.loader=false;\n          this.message=response['message'];\n          if(this.message==\"Network limit added successfully\")\n          {\n            this.toast.openSucess('Updated successfully','');\n            this.router.navigate(['/distribution-detail/'+this.data.networkId]) \n          }\n          else\n          {\n            this.toast.openError('Something went wrong Please Try Again!!','');\n          }\n          this.dialogRef.close();\n        });\n      }\n\n      if(this.networkUserDetail.type=='editlimit'){\n        console.log(this.networkUserDetail.type);\n        console.log(this.networkUserDetail.limitIndex);\n        console.log(\"data recieved at update limit\");\n        this.update_data.targetLimit=this.networkUserDetail.targetLimit;\n        this.update_data.financialYear=this.networkUserDetail.financialYear;\n        this.update_data.networkId=this.data.networkId;\n        this.update_data.networkUpdateActions={'contactsModified':true};\n        console.log(this.update_data);\n        console.log(this.data.sales);\n        this.db.fetchData(this.update_data,'network/limit/update').subscribe((response)=>{\n          console.log(response);\n          this.loader=false;\n          this.message=response['message'];\n          if(this.message==\"Network limit added successfully\")\n          {\n            this.toast.openSucess('Updated successfully','');\n            this.router.navigate(['/distribution-detail/'+this.data.networkId]) \n          }\n          else\n          {\n            this.toast.openError('Something went wrong Please Try Again!!','');\n          }\n          this.dialogRef.close();\n        });\n      }\n\n\n      if(this.networkUserDetail.type=='taskremarks'){\n        console.log(this.networkUserDetail.type);\n        console.log(this.networkUserDetail.remarks);\n       \n        this.update_data.remarks=this.networkUserDetail.remarks;\n        this.update_data.taskId=this.networkUserDetail.taskId;\n        this.update_data.taskDetailId=this.networkUserDetail.taskDetailId;;\n        console.log(this.update_data);\n        this.db.fetchData(this.update_data,'taskdetail/update').subscribe((response)=>{\n          console.log(response);\n          this.loader=false;\n          if(response['status']==\"Success\")\n          {\n            this.toast.openSucess('Updated successfully','');\n          }\n          else\n          {\n            this.toast.openError('Something went wrong Please Try Again!!','');\n          }\n          this.dialogRef.close();\n        });\n      }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"loader\\\"> \\n  <div class=\\\"cs-loader\\\">\\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n  </div>\\n</div>\\n<div class=\\\"main-container\\\" >\\n  <div class=\\\"middle-container padding0\\\">\\n    <div class=\\\"master-heading\\\">\\n      <div class=\\\"vl-info\\\">\\n        <ul>\\n          <li><p>Total Wholesaler : <span *ngIf='wholeSalerList'>{{wholeSalerList.length}}</span><span *ngIf='!wholeSalerList'>0</span></p></li>\\n          <!-- <li><p>Active : <span class=\\\"green-clr\\\">15</span></p></li>\\n            <li><p>Deactive : <span class=\\\"yellow-clr\\\">25</span></p></li>\\n            <li class=\\\"af-none\\\"><p class=\\\"pl30\\\"><img src=\\\"assets/img/filter.svg\\\" class=\\\"icon\\\"><span>FILTER</span></p></li> -->\\n          </ul>\\n        </div>\\n        <!-- <div class=\\\"top-pagination m-right-data\\\">\\n          <ul>\\n            <li class=\\\"refresh-area af-none\\\">\\n              <a class=\\\"refresh-btn\\\" mat-raised-button (click)=\\\"refreshlist()\\\" matTooltip=\\\"Refresh\\\"><i class=\\\"material-icons\\\"> refresh</i></a>\\n            </li>\\n            <li><p>Pages 2 of 6</p></li>\\n              <li><button mat-button class=\\\"left-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_left</i></button></li>\\n              <li><input type=\\\"text\\\" placeholder=\\\"GO TO\\\"></li>\\n              <li><button mat-button class=\\\"right-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_right</i></button></li>\\n            </ul>\\n          </div> -->\\n          <div *ngIf=\\\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment\\\" class=\\\"filter-container left-auto\\\">\\n            <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n              <button mat-button >CLEAR FILTER</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"container-outer\\\">\\n        <div class=\\\"container\\\" >\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-table left-right-20\\\">\\n                <div class=\\\"sticky-head-flat\\\">\\n                  <div class=\\\"table-head\\\">\\n                    <table>\\n                      <tr>\\n                        <th class=\\\"w100\\\">Date</th>\\n                        <th class=\\\"w190\\\">Company Name</th>\\n                        <th class=\\\"w190\\\">Applicant Name</th>\\n                        <th class=\\\"w110\\\"> Mobile</th>\\n                        <!-- <th class=\\\"w100 text-right\\\"> Target</th>\\n                        <th class=\\\"w110 text-right\\\"> Credit Limit</th> -->\\n                        <th class=\\\"w120\\\">Segments</th>\\n                        <!-- <th *ngIf=\\\"role==1\\\" class=\\\"w250\\\">Assign To</th> -->\\n                        <th>Address</th>\\n                        <th class=\\\"w60\\\" *ngIf=\\\"role==1\\\">Action</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"table-head bdrt\\\">\\n                    <table>\\n                      <tr>\\n                        <th class=\\\"w100\\\">\\n                        </th>\\n                        <th class=\\\"w190\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <input type=\\\"text\\\" (keyup)=\\\"Whole_saler_list()\\\" name=\\\"companyname\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.companyname\\\" placeholder=\\\"Search....\\\">\\n                           \\n                          </div>\\n                        </th>\\n                        <th class=\\\"w190\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <input type=\\\"text\\\" (keyup)=\\\"Whole_saler_list()\\\" name=\\\"nameOfApplicant\\\" #nameOfApplicant=\\\"ngModel\\\" [(ngModel)]=\\\"filter.nameOfApplicant\\\" placeholder=\\\"Search....\\\">\\n                           \\n                          </div>\\n                        </th>\\n                        <th class=\\\"w110\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <input type=\\\"text\\\" (keyup)=\\\"Whole_saler_list()\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"filter.mobile\\\" placeholder=\\\"Search....\\\">\\n                           \\n                          </div>\\n                        </th>\\n                        <!-- <th class=\\\"w100\\\"></th>\\n                        <th class=\\\"w110\\\"></th> -->\\n                        <th class=\\\"w120\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <mat-select placeholder=\\\"Select\\\" id=\\\"segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"filter.segment\\\" #segment=\\\"ngModel\\\"  multiple>\\n                              <mat-option value=\\\"{{segment.text}}\\\" (click)=\\\"Whole_saler_list()\\\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\\n                            </mat-select>\\n                          </div>\\n                        </th>\\n                        <th *ngIf=\\\"role==1\\\"></th>\\n                        <!-- <th>&nbsp;</th> -->\\n                        <th class=\\\"w60\\\" *ngIf=\\\"role==1\\\">&nbsp;</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content\\\">\\n                    <table>\\n                      <tr *ngFor=\\\"let retailer of wholeSalerList\\\">\\n                        <td class=\\\"w100\\\">{{retailer.createdOn|date:'d MMM y'}}</td>\\n                        <td class=\\\"w190\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/distribution-detail/{{retailer.networkId}}\\\" routerLinkActive=\\\"active\\\">{{retailer.establishment}}</a></td>\\n                        <td class=\\\"w190\\\">{{retailer.nameOfApplicant}}</td>\\n                        <td class=\\\"w110\\\">{{retailer.mobile}}</td>\\n                        <!-- <td class=\\\"w100 text-right\\\">&#x20B9; {{retailer.targetLimit}}</td>\\n                        <td class=\\\"w110 text-right\\\">&#x20B9; {{retailer.creditLimit}}</td> -->\\n                        <td class=\\\"w120\\\"><ng-container *ngFor=\\\"let segments of retailer.networkSegments\\\"><span>{{segments.segmentCode}},</span><br></ng-container></td>\\n                        <!-- <td *ngIf=\\\"role==1\\\" class=\\\"w250\\\">\\n                          <div class=\\\"tags\\\"> \\n                            <ul>\\n                              <li  *ngFor=\\\"let sales of retailer.networkSalesUsers\\\"><span>{{sales.salesUserName}}</span></li>\\n                            </ul>\\n                          </div>\\n                        </td> -->\\n                        <td>{{retailer.state}}</td>\\n                        <td *ngIf=\\\"this.role==1\\\" class=\\\"w60\\\">\\n                          <div class=\\\"action-btns default-action\\\">\\n                            <!-- <a mat-button class=\\\"edit\\\"><i class=\\\"material-icons\\\">add</i></a> -->\\n                            <button mat-button class=\\\"delete\\\"  (click)=\\\"delete_network(retailer.networkId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n          <div class=\\\"outer\\\">\\n            <div class=\\\"iinear\\\">\\n              <div class=\\\"figure\\\" matRipple>\\n                <div class=\\\"header\\\">\\n                  <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                </div>\\n                \\n                <div class=\\\"description\\\">\\n                  <div class=\\\"img\\\">\\n                    <i class=\\\"material-icons\\\">error_outline</i>\\n                  </div>\\n                  <div class=\\\"psc\\\">\\n                    <p>data not available</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n    \\n    <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-wholesaler-list',\n  templateUrl: './wholesaler-list.component.html',\n  animations: [slideToTop()]\n})\nexport class WholesalerListComponent implements OnInit {\n  senddata:any;\n  userdata:any=[];\n  msg:any;\n  message:any;\n  wholeSalerList:any=[];\n  segmentlist:any=[];\n  tmp_wholesalerlist:any=[];\n  nameOfApplicant:any;\n  loader:boolean;\n  role:any\n  name:any;\nfilter:any={};\nmobile:any;\ndiv:any=false;\n  constructor(public user:sessionStorage,public toast:SnackBarOverview,public db:ConstantService,public dialog:DialogComponent) { \n    this.userdata=this.user['user']['data'];\n    this.role=this.userdata['role'];\n  }\n\n  ngOnInit() {\n    this.Whole_saler_list();\n    this.segment_list();\n  }\n  refreshlist(){\n    this.Whole_saler_list();\n    this.toast.openSucess('Refreshed successfully!','');\n  }\n\n  segment_list(){\n    this.db.fileData('','segment/list/').subscribe((response)=>{\n      console.log(response);\n      this.segmentlist=response['data'];\n    });\n  }\n  Whole_saler_list(){\n    this.div=false;\n    this.name=this.filter.companyname;\n    this.nameOfApplicant=this.filter.nameOfApplicant;\n    this.mobile=this.filter.mobile;\n    this.loader=true;\n    if(this.userdata['userType']!=1){\n      this.senddata={\"isActive\":true,\"segments\":this.filter.segment,\"nameOfApplicant\":this.nameOfApplicant,\"contactName\":this.filter.contact,\"mobile\":this.mobile,\"establishment\":this.name,\"salesUserId\":this.userdata['userId'],\"role\":'11'};\n      this.db.fetchData(this.senddata,'mynetwork/detail').subscribe((response)=>\n    {\n      console.log(response)\n      if(response['status']==\"Success\")\n      {\n        this.wholeSalerList=response['data'];\n      }\n      else\n      {\n        this.wholeSalerList=[];\n        this.div=true;\n      }\n      console.log(this.wholeSalerList);\n      this.loader=false;\n    });\n    }else{\n      this.senddata={\"isActive\":true,\"segments\":this.filter.segment,\"nameOfApplicant\":this.nameOfApplicant,\"contactName\":this.filter.contact,\"mobile\":this.mobile,\"establishment\":this.name,\"role\":'11'};\n      this.db.fetchData(this.senddata,'network/list').subscribe((response)=>\n    {\n      console.log(response)\n      if(response['status']==\"Success\")\n      {\n        this.wholeSalerList=response['data'];\n      }\n      else\n      {\n        this.wholeSalerList=[];\n        this.div=true;\n      }\n      console.log(this.wholeSalerList);\n      this.loader=false;\n    });\n    }\n  }\n\n\nclearfilter() {\n\n    this.filter = {};\n\n    this. Whole_saler_list();\n}\n\n\n  delete_network(id){\n    console.log(id);\n    this.msg=\"Network\"\n    this.dialog.delete(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.db.fileData(id,'network/delete/').subscribe((response)=>{\n            console.log(response);\n            this.message=response['message'];\n            if(this.message=\"Network removed successfully\")\n            {\n              this.toast.openSucess('Network removed successfully','');\n            }\n            else{\n              this.toast.openError('Something Went Wrong Please Try Again!!','');\n            }\n            this.Whole_saler_list() \n          });\n      }\n    });\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Expense</h2>\\n        <p>Add Expense</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer\\\" >\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"sprate-box pt0 mb15\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>USER EXPENSE</h2>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s12 padding0\\\">\\n                <div class=\\\"select-one\\\">\\n                  <mat-radio-group (change)=\\\"openExpenseForm()\\\" #form=\\\"ngModel\\\" [(ngModel)]=\\\"expenseForm.form\\\" required>\\n                    <mat-radio-button value=2>Outstation Travel</mat-radio-button>\\n                    <mat-radio-button value=3>Sales Promotion Activity</mat-radio-button>\\n                    <mat-radio-button value=4>Misc Exp</mat-radio-button>\\n                    <mat-radio-button value=1>Local Conveyance</mat-radio-button>\\n                  </mat-radio-group>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"expenseForm.form && seniorList.length!=0\\\" class=\\\"row\\\">\\n        <div class=\\\"col s6 pl0\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n              <mat-select placeholder=\\\"Select Senior For Approval\\\" name=\\\"expenseSanctioner\\\" #expenseSanctioner=\\\"ngModel\\\" id=\\\"expenseSanctioner\\\" [(ngModel)]=\\\"expenseForm.expenseSanctioner\\\"  required >\\n                <mat-option *ngFor=\\\"let senior of seniorList\\\" value={{senior.userId}}>{{senior.userName}}</mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"expenseSanctioner.errors.required\\\">Purpose Of Visit required</mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div> -->\\n      <form *ngIf=\\\"expenseForm.form==1\\\" (ngSubmit)=\\\"f.form.valid && LocalConvenseExpense() || setFocus(f.form)\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"cs-bill\\\" >\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sprate-box pt0\\\">\\n                <div class=\\\"cs-heading\\\">\\n                  <h2> BASIC INFORMATION</h2>\\n                </div>\\n                <div class=\\\"from-fields\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col s4 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <mat-select placeholder=\\\"Select Senior For Approval\\\" name=\\\"expenseSanctioner\\\" #expenseSanctioner=\\\"ngModel\\\" id=\\\"expenseSanctioner\\\" [(ngModel)]=\\\"localConvense.expenseSanctioner\\\"  required >\\n                            <mat-option *ngFor=\\\"let senior of seniorList\\\" value={{senior.userId}}>{{senior.userName}}</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && expenseSanctioner.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"expenseSanctioner.errors.required\\\">Approver is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"collaps flat-collaps\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      TRAVEL ENTITLEMENT\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      \\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput [matDatepicker]=\\\"days\\\" [max]='currentDate' readonly placeholder=\\\"Date Of Visit\\\" name=\\\"visitDate\\\" #visitDate=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.visitDate\\\" >\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"days\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #days></mat-datepicker>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"From\\\" name=\\\"from\\\" #from=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.from\\\" >\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"To\\\" name=\\\"to\\\" #to=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.to\\\" >\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <mat-select placeholder=\\\"Type of Mode\\\" name=\\\"modeType\\\" #modeType=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.modeType\\\" >\\n                                    <mat-option *ngIf=\\\"allowanceList.length!=0 && (allowanceList.selfCarPerKM!=0 ||allowanceList.selfBikePerKM!=0 )\\\" (click)=\\\"readonlyValue(localHQExpense.modeType)\\\" value=1>SELF VEHICLE</mat-option>\\n                                    <mat-option (click)=\\\"readonlyValue(localHQExpense.modeType)\\\" value=2>PUBLIC TRANSPORT</mat-option>\\n                                  </mat-select>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <mat-select placeholder=\\\"Mode Of Travel\\\" name=\\\"mode\\\" #mode=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.mode\\\" >\\n                                    <mat-option value=10 *ngIf=\\\"localHQExpense.modeType==2\\\">AUTO</mat-option>\\n                                    <mat-option value=1 *ngIf=\\\"localHQExpense.modeType==2\\\">BUS</mat-option>\\n                                    <mat-option value=6 *ngIf=\\\"localHQExpense.modeType==2\\\">AC TAXI</mat-option>\\n                                    <mat-option value=7 *ngIf=\\\"localHQExpense.modeType==2\\\">NON-AC TAXI </mat-option>\\n                                    <mat-option value=5 *ngIf=\\\"localHQExpense.modeType==2\\\">METRO </mat-option>\\n                                    <mat-option value=9 *ngIf=\\\"localHQExpense.modeType==1 && allowanceList.selfCarPerKM!=0\\\">CAR</mat-option>\\n                                    <mat-option value=8 *ngIf=\\\"localHQExpense.modeType==1 && allowanceList.selfBikePerKM!=0\\\">BIKE </mat-option>\\n                                    \\n                                  </mat-select>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div *ngIf=\\\"localHQExpense.modeType==1\\\" class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Vehicle No\\\" type=\\\"text\\\" name=\\\"vehicleNumber\\\" #vehicleNumber=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.vehicleNumber\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div  class=\\\"row\\\">\\n                            <div *ngIf=\\\"localHQExpense.modeType==1\\\" class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"KMs Covered\\\" type=\\\"number\\\" (input)=\\\"calculateAmount(localHQExpense.mode,localHQExpense.distanceKMS)\\\" name=\\\"distanceKMS\\\" #distanceKMS=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.distanceKMS\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Amount\\\" type=\\\"number\\\" name=\\\"amount\\\" #amount=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.amount\\\" readonly={{readonlyArea}} >\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Other Exp.\\\" type=\\\"number\\\" name=\\\"otherExpense\\\" #otherExpense=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.otherExpense\\\" >\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h165\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.remarks\\\"></textarea>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s12 padding0 mt15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!localHQExpense.remarks || !localHQExpense.visitDate|| !localHQExpense.from || !localHQExpense.to ||!localHQExpense.mode ||!localHQExpense.modeType  \\\" (click)=\\\"addToLocalConvenseList()\\\" type=\\\"button\\\">Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          \\n          \\n          <div *ngIf=\\\"localConveyances.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr>\\n                    <th class=\\\"w160\\\">Date Of Visit</th>\\n                    <th class=\\\"w110\\\">From</th>\\n                    <th class=\\\"w110\\\">To</th>\\n                    <th class=\\\"w150\\\">Modal Of Type</th>\\n                    <th class=\\\"w150\\\">Modal Of Travel</th>\\n                    <th class=\\\"w130\\\">KMs Covered</th>\\n                    <th class=\\\"w110 text-right\\\">Amount</th>\\n                    <th class=\\\"w110 text-right\\\">Other Exp.</th>\\n                    <th>Remark</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let Localexpense of localConveyances;let index=index\\\">\\n                      <td class=\\\"w160\\\"> {{Localexpense.visitDate |date:'EEEE, MMMM d, y'}}</td>\\n                      <td class=\\\"w110\\\">{{Localexpense.from}}</td>\\n                      <td class=\\\"w110\\\">{{Localexpense.to}}</td>\\n                      <td class=\\\"w150\\\">\\n                          <span *ngIf=\\\"Localexpense.modeType==1\\\">SELF</span>\\n                          <span *ngIf=\\\"Localexpense.modeType==2\\\">PUBLIC TRANSPORT</span>\\n                          <span *ngIf=\\\"Localexpense.mode==10\\\">AUTO</span>\\n                          <span *ngIf=\\\"Localexpense.mode==1\\\">BUS</span>\\n                          <span *ngIf=\\\"Localexpense.mode==6\\\">AC-TAXI</span>\\n                          <span *ngIf=\\\"Localexpense.mode==7\\\">NON AC-TAXI</span>\\n                          <span *ngIf=\\\"Localexpense.mode==5\\\">METRO</span>\\n                          <span *ngIf=\\\"Localexpense.mode==9\\\">CAR</span>\\n                          <span *ngIf=\\\"Localexpense.mode==8\\\">BIKE</span>\\n                      </td>\\n                      <td class=\\\"w130 \\\">{{Localexpense.distanceKMS}}</td>\\n                      <td class=\\\"w110 text-right\\\"> &#x20B9; {{Localexpense.amount}}</td>\\n                      <td class=\\\"w130 text-right\\\"> &#x20B9; {{Localexpense.otherExpense}}</td>\\n                      <td>{{Localexpense.remarks}}\\n                        <div class=\\\"action-btns\\\">\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"removeLocalConvenseList(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n              \\n            </div>\\n          </div>\\n          <div class=\\\"row mt15\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-file-multiple scroll\\\">\\n                <ul>\\n                  <li class=\\\"w110 pr10\\\" *ngFor=\\\"let urlData of urls;let i=index\\\">\\n                    <label>\\n                        <img *ngIf=\\\"selectedFile[i].type=='image/jpeg'\\\" src=\\\"{{urlData}}\\\">\\n                        <img  *ngIf=\\\"selectedFile[i].type=='application/pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                      <a (click)=\\\"deleteimg(i)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                    </label>\\n                  </li>\\n                  <li class=\\\"w110 pr10\\\">\\n                    <div class=\\\"cs-file wp100\\\">\\n                      <label>\\n                        <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\" multiple>\\n                        <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                      </label>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sm-table\\\">\\n                <table>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Local Travel Expense</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">&#x20B9; {{localExp}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Other Type Expense</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">&#x20B9; {{otherLocalExp}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Total</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">&#x20B9; {{totalLocalExp}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-btn mt15 text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"localConvense.status=1\\\" >Save as Draft</button>\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"localConvense.status=2\\\">Save For Approval</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </form>\\n      \\n      <form *ngIf=\\\"expenseForm.form==2\\\" (ngSubmit)=\\\"f1.form.valid && outTravelExpense()|| setFocus(f1.form)\\\" #f1=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"cs-bill\\\"  >\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sprate-box pt0\\\">\\n                <div class=\\\"cs-heading\\\">\\n                  <h2> BASIC INFORMATION {{f1.form.valid}}</h2>\\n                </div>\\n                <div class=\\\"from-fields\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Purpose Of Visit\\\" type=\\\"text\\\" id=\\\"purposeOfVisit\\\" name=\\\"purposeOfVisit\\\" #purposeOfVisit=\\\"ngModel\\\" [(ngModel)]=\\\"OutStationExpense.purposeOfVisit\\\"  [ngClass]=\\\"{'has-error' : purposeOfVisit.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f1.submitted && purposeOfVisit.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"purposeOfVisit.errors.required\\\">Purpose Of Visit required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"ADVANCE AMOUNT\\\" type=\\\"number\\\" id=\\\"advanceAmount\\\" name=\\\"advanceAmount\\\" #advanceAmount=\\\"ngModel\\\" [(ngModel)]=\\\"OutStationExpense.advanceAmount\\\"  [ngClass]=\\\"{'has-error' : advanceAmount.invalid }\\\" required>\\n                          <!--  -->\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f1.submitted && advanceAmount.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"advanceAmount.errors.required\\\">Advance Amount is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <mat-select placeholder=\\\"Select Senior For Approval\\\" name=\\\"expenseSanctioner\\\" #expenseSanctioner=\\\"ngModel\\\" id=\\\"expenseSanctioner\\\" [(ngModel)]=\\\"OutStationExpense.expenseSanctioner\\\"  required >\\n                            <mat-option *ngFor=\\\"let senior of seniorList\\\" value={{senior.userId}}>{{senior.userName}}</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f1.submitted && expenseSanctioner.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"expenseSanctioner.errors.required\\\">Approver is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"collaps flat-collaps mt15\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      TRAVEL ENTITLEMENT\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <mat-select placeholder=\\\"Mode Of Travel\\\" name=\\\"modeOfTravel\\\" #modeOfTravel=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.modeOfTravel\\\" >\\n                                <mat-option value=1>BUS</mat-option>\\n                                <mat-option value=2>TRAIN</mat-option>\\n                                <mat-option value=3>AIRLINE</mat-option>\\n                                <mat-option value=5>TAXI </mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s6\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <mat-select placeholder=\\\"Class\\\" name=\\\"class\\\" #class=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.class\\\">\\n                                <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='AC Buses' *ngIf=\\\"journyExpense.modeOfTravel==1\\\" >AC Buses </mat-option>\\n                                <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='Non - AC Buses' *ngIf=\\\"journyExpense.modeOfTravel==1\\\">Non - AC Buses</mat-option>\\n                                <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='2A' *ngIf=\\\"journyExpense.modeOfTravel==2\\\">2A</mat-option>\\n                                <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='3A' *ngIf=\\\"journyExpense.modeOfTravel==2\\\">3A</mat-option>\\n                                <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='SL' *ngIf=\\\"journyExpense.modeOfTravel==2\\\">SL</mat-option>\\n                                <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='Economy Class' *ngIf=\\\"journyExpense.modeOfTravel==3\\\">Economy Class </mat-option>\\n                                <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='Private' *ngIf=\\\"journyExpense.modeOfTravel==5\\\">Private</mat-option>\\n                                <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='Shared' *ngIf=\\\"journyExpense.modeOfTravel==5\\\">Shared</mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s4\\\" *ngIf=\\\"modeError==1\\\">\\n                        You Are Not Eligable for This Type of Mode\\n                      </div>\\n                      <div >\\n                        <div class=\\\"row mb0\\\">\\n                          <div class=\\\"col s12 pl0\\\">\\n                            <div class=\\\"heading-bg mb0 mt15 mrl24\\\">\\n                              <h2>DEPARTURE</h2>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s4 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput [matDatepicker]=\\\"nine\\\"  readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"departureDate\\\" #departureDate=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.departureDate\\\">\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"nine\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #nine></mat-datepicker>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s4\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Station\\\" name=\\\"departureStation\\\" #departureStation=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.departureStation\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"col s4\\\">\\n                            <!-- <div class=\\\"control-field mt14\\\">\\n                              <div class=\\\"cs-input\\\">\\n                                <input [owlDateTimeTrigger]=\\\"dt5\\\" [owlDateTime]=\\\"dt5\\\" placeholder=\\\"Time\\\" name=\\\"departureTime\\\" #departureTime=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.departureTime\\\">\\n                                <owl-date-time [pickerType]=\\\"'timer'\\\" #dt5></owl-date-time>\\n                              </div>\\n                            </div> -->\\n                            <div class=\\\"control-field mt14\\\">\\n                              <div class=\\\"cs-input\\\">\\n                                <!-- required -->\\n                                <input placeholder=\\\"Check In Time\\\" #departureTime=\\\"ngModel\\\" name=\\\"departureTime\\\" [(ngModel)]=\\\"journyExpense.departureTime\\\" id=\\\"departureTime\\\" [format]=\\\"12\\\" [ngxTimepicker]=\\\"default\\\"  readonly >\\n                              </div>\\n                            </div>\\n                            <ngx-material-timepicker #default></ngx-material-timepicker>\\n                            \\n                          </div>\\n                        </div>\\n                        \\n                        \\n                        <div class=\\\"row mb0\\\">\\n                          <div class=\\\"col s12 pl0\\\">\\n                            <div class=\\\"heading-bg  mb0 mt15\\\">\\n                              <h2>ARRIVAL</h2>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s4\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput [matDatepicker]=\\\"elevn\\\" readonly [min]=\\\"journyExpense.departureDate\\\" [max]=\\\"currentDate\\\" placeholder=\\\"Date\\\" name=\\\"arrivalDate\\\" #arrivalDate=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.arrivalDate\\\">\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"elevn\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #elevn></mat-datepicker>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s4\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Station\\\" name=\\\"arrivalStation\\\" #arrivalStation=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.arrivalStation\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"col s4\\\">\\n                            <!-- <div class=\\\"control-field\\\">\\n                              <div class=\\\"cs-input mt14\\\">\\n                                <input [owlDateTimeTrigger]=\\\"dt4\\\" [owlDateTime]=\\\"dt4\\\" placeholder=\\\"Time\\\" name=\\\"arrivalTime\\\" #arrivalTime=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.arrivalTime\\\">\\n                                <owl-date-time [pickerType]=\\\"'timer'\\\" #dt4></owl-date-time>\\n                              </div>\\n                            </div> -->\\n                            <div class=\\\"control-field mt14\\\">\\n                              <div class=\\\"cs-input\\\">\\n                                <!-- required -->\\n                                <input placeholder=\\\"Check Out Time\\\" #arrivalTime=\\\"ngModel\\\" name=\\\"arrivalTime\\\" [(ngModel)]=\\\"journyExpense.arrivalTime\\\"  id=\\\"arrivalTime\\\" [format]=\\\"12\\\" [ngxTimepicker]=\\\"default1\\\" readonly >\\n                              </div>\\n                            </div>\\n                            <ngx-material-timepicker #default1></ngx-material-timepicker>\\n                            \\n                          </div>\\n                        </div>\\n                        \\n                        <mat-divider class=\\\"left-right-15 mt15\\\"></mat-divider>\\n                        <div class=\\\"row\\\">\\n                          <div *ngIf=\\\"journyExpense.mode!=4\\\" class=\\\"col s4 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Detail Ticket No\\\" name=\\\"ticketNo\\\" #ticketNo=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.ticketNo\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s4 \\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Amount\\\" name=\\\"amount\\\" #amount=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.amount\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div  *ngIf=\\\"journyExpense.mode!=4\\\" class=\\\"col s12 mt15 mb15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!journyExpense.departureDate||!journyExpense.departureStation|| !journyExpense.departureTime||!journyExpense.arrivalStation||!journyExpense.arrivalDate||!journyExpense.arrivalTime||!journyExpense.modeOfTravel||!journyExpense.ticketNo||!journyExpense.amount||!journyExpense.class\\\" (click)=\\\"addToOutTravelExpense()\\\">Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          \\n          <div *ngIf=\\\"tmpJournyExpense.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr>\\n                    <th class=\\\"text-center\\\">BUS/RAIL/AIR FARE</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div  class=\\\"table-head  bdrt\\\">\\n                <table> \\n                  <tr >\\n                    <th class=\\\"padding0 pt10 text-center\\\">\\n                      DEPARTURE\\n                      <table class=\\\"inner-table bdrt mt10\\\">\\n                        <tr>\\n                          <th class=\\\"text-center\\\">Date</th>\\n                          <th class=\\\"text-center\\\">Station</th>\\n                          <th class=\\\"text-center\\\">Time</th>\\n                        </tr>\\n                      </table>\\n                    </th>\\n                    <th class=\\\"padding0 pt10 text-center\\\">\\n                      ARRIVAL\\n                      <table class=\\\"inner-table bdrt mt10\\\">\\n                        <tr>\\n                          <th class=\\\"text-center\\\">Date</th>\\n                          <th class=\\\"text-center\\\">Station</th>\\n                          <th class=\\\"text-center\\\">Time</th>\\n                        </tr>\\n                      </table>\\n                    </th>\\n                    <th class=\\\"w150 text-center\\\">Class & Mode Of Travel</th>\\n                    <th class=\\\"w100 text-center\\\">Status</th>\\n                    <th class=\\\"w150\\\">Deatil Of Ticket No. / K.M. (PVT. VEHICLE)</th>\\n                    <th class=\\\"w100 text-right\\\">Amount</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let journy of tmpJournyExpense;let index=index\\\">\\n                      <td class=\\\"padding0\\\">\\n                        <table class=\\\"inner-table\\\">\\n                          <tr>\\n                            <td class=\\\"text-center\\\">{{journy.departureDate |date:'EEEE, MMMM d, y'}}</td>\\n                            <td class=\\\"text-center\\\">{{journy.departureStation}}</td>\\n                            <td class=\\\"text-center\\\">{{journy.departureTime }}</td>\\n                          </tr>\\n                        </table>\\n                      </td>\\n                      <td class=\\\"padding0\\\">\\n                        <table class=\\\"inner-table\\\">\\n                          <tr>\\n                            <td class=\\\"text-center\\\">{{journy.arrivalDate|date:'EEEE, MMMM d, y'}}</td>\\n                            <td class=\\\"text-center\\\">{{journy.arrivalStation}}</td>\\n                            <td class=\\\"text-center\\\">{{journy.arrivalTime }}</td>\\n                          </tr>\\n                        </table>\\n                      </td>\\n                      <td class=\\\"w170 text-center\\\">\\n                        <span *ngIf=\\\"journy.modeOfTravel==1\\\"> BUS /</span>\\n                        <span *ngIf=\\\"journy.modeOfTravel==2\\\"> TRAIN /</span>\\n                        <span *ngIf=\\\"journy.modeOfTravel==3\\\"> AIRLINE /</span>\\n                        <span *ngIf=\\\"journy.modeOfTravel==5\\\"> TEXI /</span>\\n                        <span >{{journy.class}}</span></td>\\n\\n                      <td class=\\\"w100 approved\\\">Allow</td>\\n                      <td *ngIf=\\\"journy.distanceKMS==null\\\" class=\\\"w150\\\">{{journy.ticketNo}}</td>\\n                      <td class=\\\"w100 text-right\\\">&#x20B9; {{journy.amount}}\\n                        <div class=\\\"action-btns\\\">\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutTravelExpense(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                    \\n                    <tr class=\\\"active-col\\\">\\n                      <td class=\\\"padding0\\\">\\n                        <table class=\\\"inner-table\\\">\\n                          <tr>\\n                            <td>&nbsp;</td>\\n                            <td>&nbsp;</td>\\n                            <td>&nbsp;</td>\\n                          </tr>\\n                        </table>\\n                      </td>\\n                      <td class=\\\"padding0\\\">\\n                        <table class=\\\"inner-table\\\">\\n                          <tr>\\n                            <td>&nbsp;</td>\\n                            <td>&nbsp;</td>\\n                            <td>&nbsp;</td>\\n                          </tr>\\n                        </table>\\n                      </td>\\n                      <td class=\\\"w150 text-center\\\">&nbsp;</td>\\n                      <td class=\\\"w150 text-center\\\">&nbsp;</td>\\n                      <td class=\\\"w100\\\">Total</td>\\n                      <td class=\\\"w100 text-right\\\">&#x20B9; {{totalOutTravelExp}}</td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          \\n          \\n          <div class=\\\"collaps flat-collaps mt15\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      HOTEL\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input type=\\\"text\\\" placeholder=\\\"City\\\" aria-label=\\\"city\\\"  name=\\\"city\\\" [(ngModel)]=\\\"Arraycity.city\\\" (input)=\\\"cityList(Arraycity.city)\\\" matInput  [matAutocomplete]=\\\"city\\\">\\n                                  <mat-autocomplete #city=\\\"matAutocomplete\\\" >\\n                                    <mat-option (click)=\\\"selectedCity(city)\\\" *ngFor=\\\"let city of cityListArray\\\" value=\\\"{{city.city}}\\\">\\n                                      {{city.city}} / {{city.stateName}}\\n                                    </mat-option>\\n                                  </mat-autocomplete>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput [matDatepicker]=\\\"thirteens\\\" readonly [max]='currentDate' placeholder=\\\"Check In Date\\\" name=\\\"checkInDate\\\" #checkInDate=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.checkInDate\\\">\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"thirteens\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #thirteens></mat-datepicker>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput [matDatepicker]=\\\"thirteen\\\" readonly [min]=\\\"outStationHotelExp.checkInDate\\\" [max]='currentDate' placeholder=\\\"Check Out Date\\\" name=\\\"checkOutDate\\\" #checkOutDate=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.checkOutDate\\\">\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"thirteen\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #thirteen></mat-datepicker>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Hotel Name\\\" name=\\\"hotelName\\\" #hotelName=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.hotelName\\\" >\\n                                  <!-- name=\\\"hotelBill\\\" #hotelBill=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.hotelBill\\\" -->\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Amount\\\" (input)=\\\"checkValidAmount(outStationHotelExp.billAmount)\\\"  name=\\\"billAmount\\\" #billAmount=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.billAmount\\\" >\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div *ngIf=\\\"hotelcitydiv==true\\\">\\n                            You Are not eligable for this Amount\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <textarea matInput placeholder=\\\"Remark\\\"name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.remarks\\\" class=\\\"h168\\\"></textarea>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s12 mt15 mb15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!outStationHotelExp.checkInDate ||!outStationHotelExp.checkOutDate ||!outStationHotelExp.billAmount || !outStationHotelExp.hotelName || !outStationHotelExp.city || !outStationHotelExp.remarks\\\" (click)=\\\"outStationHotelExpList()\\\">Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          \\n          \\n          <div *ngIf=\\\"tmpoutStationHotelExp.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr>\\n                    <th class=\\\"w150\\\">City</th>\\n                    <th class=\\\"w120\\\">Check In Date</th>\\n                    <th class=\\\"w135\\\">Check Out Date</th>\\n                    <th class=\\\"w160\\\">Hotel name</th>\\n                    <th class=\\\"w100 text-right\\\">Amount</th>\\n                    <th class=\\\"w100\\\">Status</th>\\n                    <th>Remark</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\" let hotel of tmpoutStationHotelExp;let index=index\\\">\\n                      <td class=\\\"w150\\\">{{hotel.city.city}}</td>\\n                      <td class=\\\"w120\\\">{{hotel.checkInDate|date:'EEEE, MMMM d, y'}}</td>\\n                      <td class=\\\"w135\\\">{{hotel.checkOutDate|date:'EEEE, MMMM d, y'}}</td>\\n                      <td class=\\\"w160\\\">{{hotel.hotelName}}</td>\\n                      <td class=\\\"w100 text-right\\\">&#x20B9; {{hotel.billAmount}}</td>\\n                      <td class=\\\"w100 approved\\\" *ngIf=\\\"hotelCityError==0\\\" >Allow</td>\\n                      <td class=\\\"w100 reject\\\" *ngIf=\\\"hotelCityError==1\\\" >Not Allow</td>\\n                      <td><p>{{hotel.remarks}}</p>\\n                        <div class=\\\"action-btns\\\">\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutStationHotelExpense(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                    \\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          \\n          <div class=\\\"collaps flat-collaps mt15\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      FOOD\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input type=\\\"text\\\" placeholder=\\\"City\\\" aria-label=\\\"city\\\"  name=\\\"city\\\" [(ngModel)]=\\\"Arraycity.city\\\" (input)=\\\"cityList(Arraycity.city)\\\" matInput  [matAutocomplete]=\\\"city1\\\">\\n                                  <mat-autocomplete #city1=\\\"matAutocomplete\\\" >\\n                                    <mat-option (click)=\\\"selectedFoodExpenseCity(city)\\\" *ngFor=\\\"let city of cityListArray\\\" value=\\\"{{city.city}}\\\">\\n                                      {{city.city}} / {{city.stateName}}\\n                                    </mat-option>\\n                                  </mat-autocomplete>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput [matDatepicker]=\\\"thirteenss\\\"  placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [max]=\\\"currentDate\\\" [(ngModel)]=\\\"outStationFoodExp.date\\\">\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"thirteenss\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #thirteenss></mat-datepicker>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Amount\\\" (input)=\\\"checkValidFoodAmount(outStationFoodExp.billAmount)\\\" name=\\\"billAmount\\\" #billAmount=\\\"ngModel\\\" [(ngModel)]=\\\"outStationFoodExp.billAmount\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div *ngIf=\\\"foodCityError==1\\\">\\n                            You are not Eligable for this Amount\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h100\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"outStationFoodExp.remarks\\\" ></textarea>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s12 mt15 mb15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"outStationFoodExpList()\\\" >Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          \\n          <div *ngIf=\\\"tmpoutStationFoodExp.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr>\\n                    <th class=\\\"w200\\\">City</th>\\n                    <th class=\\\"w200\\\">Date</th>\\n                    <th class=\\\"w120\\\">Status</th>\\n                    <th class=\\\"w150 text-right\\\">Amount</th>\\n                    <th>Remark</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let food of tmpoutStationFoodExp;let index=index\\\">\\n                      <td class=\\\"w200\\\">{{food.city}}</td>\\n                      <td class=\\\"w200\\\">{{food.date|date:'EEEE, MMMM d, y'}}</td>\\n                      <td class=\\\"w120 approved\\\" *ngIf=\\\"foodCityError==0\\\">Allow</td>\\n                      <td class=\\\"w120 reject\\\" *ngIf=\\\"foodCityError==1\\\">Not-Allow</td>\\n                      <td class=\\\"w150 text-right\\\">&#x20B9; {{food.billAmount}}</td>\\n                      <td><p>{{food.remarks}}</p>\\n                        <div class=\\\"action-btns\\\">\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutStationFoodExp(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          \\n          <div class=\\\"collaps flat-collaps mt15\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      LOCAL CONVENCE\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s2\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <mat-select placeholder=\\\"Mode Of Travel\\\" name=\\\"modeOfTravel\\\" #modeOfTravel=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.modeOfTravel\\\" >\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=10>AUTO</mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=1>BUS</mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=6>AC TAXI</mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=7>NON-AC TAXI </mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=8>TWO WHEELER </mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=5>METRO </mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>\\n                          <div *ngIf=\\\"localFareError==1\\\">\\n                            You Are Not Allow This Travel Mode\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s2\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <input matInput [matDatepicker]=\\\"fourteen\\\" readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.date\\\"> \\n                              <mat-datepicker-toggle matSuffix [for]=\\\"fourteen\\\"></mat-datepicker-toggle>\\n                              <mat-datepicker #fourteen></mat-datepicker>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s2 \\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <input matInput placeholder=\\\"From\\\" name=\\\"from\\\" #from=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.from\\\" >\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s2 \\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <input matInput placeholder=\\\"To\\\" name=\\\"to\\\" #to=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.to\\\" >\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s2\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <input matInput placeholder=\\\"Fare\\\" name=\\\"fare\\\" #fare=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.fare\\\">\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s2\\\">\\n                          <div class=\\\"cs-btn mt12\\\">\\n                            <div class=\\\"in-btn\\\">\\n                              <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!outStationLocalExp.date||!outStationLocalExp.from||!outStationLocalExp.to||!outStationLocalExp.modeOfTravel||!outStationLocalExp.fare\\\" (click)=\\\"outStationLocalExpList()\\\">Add To List</button>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          \\n          <div *ngIf=\\\"tmpoutStationLocalExp.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr>\\n                    <th class=\\\"w130\\\">Date</th>\\n                    <th class=\\\"w170 text-center\\\">From</th>\\n                    <th class=\\\"w170 text-center\\\">To</th>\\n                    <th class=\\\"w170 text-center\\\">Mode</th>\\n                    \\n                    <th>Fare</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let outLocalTravel of tmpoutStationLocalExp;let index=index \\\">\\n                      <td class=\\\"w130\\\"> {{outLocalTravel.date|date:'EEEE, MMMM d, y'}}</td>\\n                      <td class=\\\"w170 text-center\\\">{{outLocalTravel.from}}</td>\\n                      <td class=\\\"w170 text-center\\\">{{outLocalTravel.to}}</td>\\n                      <td class=\\\"w170 text-center\\\">\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==10\\\">AUTO</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==1\\\">BUS</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==6\\\">AC TEXI</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==7\\\">NON-AC TEXI</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==8\\\">TWO WHEELER</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==5\\\">METRO</span>\\n                      </td>\\n                      <td>&#x20B9; {{outLocalTravel.fare}}\\n                        <div class=\\\"action-btns\\\">\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutStatonLocalExp(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"collaps flat-collaps mt15\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      MISC EXPENSE INFORMATION\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <mat-select placeholder=\\\"Nature of expense\\\" name=\\\"miscActivityType\\\" #miscActivityType=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.miscActivityType\\\" >\\n                                    <mat-option value=\\\"1\\\">Entertainment Expenses</mat-option>\\n                                    <mat-option value=\\\"2\\\">Gift To Dealers</mat-option>\\n                                    <mat-option value=\\\"3\\\">Lunch/Dinner With Team</mat-option>\\n                                    <mat-option value=\\\"4\\\">Training Program</mat-option>\\n                                    <mat-option value=\\\"5\\\">Other</mat-option>\\n                                  </mat-select>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput [matDatepicker]=\\\"five\\\" readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.date\\\" readonly>\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"five\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #five></mat-datepicker>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Place Of Expense\\\" name=\\\"placeOfExpense\\\" #placeOfExpense=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.placeOfExpense\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Name of Beneficiaries\\\" name=\\\"nameOfBeneficiary\\\" #nameOfBeneficiary=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.nameOfBeneficiary\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <!-- <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Reason\\\" name=\\\"reason\\\" #reason=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.reason\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div> -->\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Amount\\\" name=\\\"amount\\\" #total=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.amount\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h165\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.remarks\\\" ></textarea>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        \\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s12 mt15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!outStationMiscExp.miscActivityType ||!outStationMiscExp.date ||!outStationMiscExp.placeOfExpense ||!outStationMiscExp.nameOfBeneficiary ||!outStationMiscExp.amount ||!outStationMiscExp.remarks\\\" (click)=\\\"addOutMiscExpenseList()\\\">Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          \\n          <div *ngIf=\\\"tmpOutTravelMiscExp.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr >\\n                    <th class=\\\"w160\\\">Date</th>\\n                    <th class=\\\"w180\\\">Nature Of Exp.</th>\\n                    <th class=\\\"w170\\\">Beneficiaries Name</th>\\n                    <th class=\\\"w160\\\">Place Of Expense</th>\\n                    <th class=\\\"w100 text-right\\\">Total</th>\\n                    <th>Remark</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let misc of tmpOutTravelMiscExp\\\">\\n                      <td class=\\\"w160\\\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\\n                      <!-- <td class=\\\"w200\\\">{{misc.miscActivityType}}</td> -->\\n                      <td *ngIf=\\\"misc.miscActivityType==1\\\" class=\\\"w180\\\">Entertainment Expenses</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==2\\\" class=\\\"w180\\\">Gift To Dealers</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==3\\\" class=\\\"w180\\\">Lunch/Dinner With Team</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==4\\\" class=\\\"w180\\\">Training Program</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==5\\\" class=\\\"w180\\\"> Other</td>\\n                      <td class=\\\"w170\\\">{{misc.nameOfBeneficiary}}</td>\\n                      <td class=\\\"w160\\\">{{misc.placeOfExpense}}</td>\\n                      <td class=\\\"w100 text-right\\\"> &#x20B9; {{misc.amount}}</td>\\n                      <td> {{misc.remarks}}\\n                        <div class=\\\"action-btns\\\">\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutStationMiscExp(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row mt15\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-file-multiple scroll\\\">\\n                <ul>\\n                  <li class=\\\"w110 pr10\\\" *ngFor=\\\"let urlData of urls;let i=index\\\">\\n                    <label>\\n                        <img *ngIf=\\\"selectedFile[i].type=='image/jpeg'\\\" src=\\\"{{urlData}}\\\">\\n                        <img  *ngIf=\\\"selectedFile[i].type=='application/pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                      <a (click)=\\\"deleteimg(i)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                    </label>\\n                  </li>\\n                  <li class=\\\"w110 pr10\\\">\\n                    <div class=\\\"cs-file wp100\\\">\\n                      <label>\\n                        <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\" multiple>\\n                        <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                      </label>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sm-table\\\">\\n                <table>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">OutStation Travel</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">{{totalOutTravelExp |currency: 'INR':true}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">OutStation Hotel Exp.</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">{{totalOutHotelExp|currency: 'INR':true}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">OutStation LOACL CONVENEC</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">{{totalOutLocalExp|currency: 'INR':true}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">OutStation Food Exp.</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">{{totalOutStationFoodExp |currency: 'INR':true}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">OutStation Misc Exp.</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">{{totalOutMiscExp |currency: 'INR':true}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <mat-divider class=\\\"mt15 mb15\\\"></mat-divider>\\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sm-table\\\">\\n                <table>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">BILL AMOUNT</th>\\n                    <th class=\\\" w30 text-center\\\">:</th>\\n                    <td class=\\\" w120 text-right\\\"> {{totalOutStationExp|currency: 'INR':true}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">ADVANCE</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">{{OutStationExpense.advanceAmount|currency: 'INR':true}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">CLAIM</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\"> {{TotalClaimAmount|currency: 'INR':true}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12 mt15\\\">\\n              <div class=\\\"cs-btn text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button mat-raised-button color=\\\"accent\\\"(click)=\\\"OutStationExpense.status=1\\\" >Save as Draft</button>\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"OutStationExpense.status=2\\\">Subbmit For Approvel</button>\\n                </div>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>\\n      </form>\\n      \\n      <form *ngIf=\\\"expenseForm.form==3\\\" (ngSubmit)=\\\"f2.form.valid && promationExpense()|| setFocus(f2.form)\\\" #f2=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"cs-bill\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sprate-box pt0\\\">\\n                <div class=\\\"cs-heading\\\">\\n                  <h2>BASIC INFORMATION</h2>\\n                </div>\\n                <div class=\\\"from-fields\\\">\\n                  \\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"ADVANCE AMOUNT\\\" type=\\\"number\\\" id=\\\"advanceAmount\\\" name=\\\"advanceAmount\\\" #advanceAmount=\\\"ngModel\\\" [(ngModel)]=\\\"allPromationExpense.advanceAmount\\\"  [ngClass]=\\\"{'has-error' : advanceAmount.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f2.submitted && advanceAmount.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"advanceAmount.errors.required\\\">Purpose Of Visit required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <mat-select placeholder=\\\"Select Senior For Approval\\\" name=\\\"expenseSanctioner\\\" #expenseSanctioner=\\\"ngModel\\\" id=\\\"expenseSanctioner\\\" [(ngModel)]=\\\"allPromationExpense.expenseSanctioner\\\" [ngClass]=\\\"{'has-error' : expenseSanctioner.invalid }\\\" required >\\n                            <mat-option *ngFor=\\\"let senior of seniorList\\\" value={{senior.userId}}>{{senior.userName}}</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f2.submitted && expenseSanctioner.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"expenseSanctioner.errors.required\\\">Advance Amount is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n          </div>\\n          \\n          \\n          \\n          <div class=\\\"collaps flat-collaps mt15\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      SALES PERMOTION ACTIVITY\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\"> \\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s3 pl0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <mat-select placeholder=\\\"Sales Promotion\\\" name=\\\"salesActivityType\\\" #salesActivityType=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.salesActivityType\\\">\\n                                <mat-option value=\\\"1\\\">Mechanic get together</mat-option>\\n                                <mat-option value=\\\"2\\\">Retailer get together</mat-option>\\n                                <mat-option value=\\\"3\\\">van Campaign</mat-option>\\n                                <mat-option value=\\\"4\\\">Stall Campaign</mat-option>\\n                                <mat-option value=\\\"5\\\">Exhibition Participation</mat-option>\\n                                <mat-option value=\\\"6\\\">Signboard</mat-option>\\n                                <mat-option value=\\\"7\\\">Wall/Shop Painting</mat-option>\\n                                <mat-option value=\\\"8\\\">GiveAways</mat-option>\\n                                <mat-option value=\\\"9\\\">Printing Of Lesafelts,banners, posters etc.</mat-option>\\n                                <!-- <mat-option value=\\\"10\\\">Other</mat-option> -->\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s3\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <input matInput [matDatepicker]=\\\"two\\\" readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.date\\\">\\n                              <mat-datepicker-toggle matSuffix [for]=\\\"two\\\"></mat-datepicker-toggle>\\n                              <mat-datepicker #two></mat-datepicker>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s3\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <input matInput placeholder=\\\"Place Of Activity\\\" name=\\\"placeOfActivity\\\" #placeOfActivity=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.placeOfActivity\\\" >\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s3 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <input matInput type=\\\"number\\\" placeholder=\\\"No Of Attendees\\\" name=\\\"noOfAttendees\\\" #noOfAttendees=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.noOfAttendees\\\">\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Rental Expense\\\" type=\\\"number\\\" name=\\\"rentalExpenses\\\" #rentalExpenses=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.rentalExpenses\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Food Expense\\\"  type=\\\"number\\\" name=\\\"foodExpense\\\" #foodExpense=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.foodExpense\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Av Aids Expense\\\"  type=\\\"number\\\" name=\\\"avAidsExpense\\\" #avAidsExpense=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.avAidsExpense\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Gift Expense\\\"  type=\\\"number\\\" name=\\\"giftsExpense\\\" #giftsExpense=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.giftsExpense\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 padding0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Misc Expense\\\"  type=\\\"number\\\" name=\\\"miscExpense\\\" #miscExpense=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.miscExpense\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s6 padding0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Approved Amount\\\"  type=\\\"number\\\" name=\\\"approvedAmount\\\" #approvedAmount=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.approvedAmount\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <textarea matInput placeholder=\\\"Remark\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.remarks\\\" class=\\\"h165\\\"></textarea>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s12 mt15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"addToPromationList()\\\" type=\\\"button\\\">Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          \\n          <div *ngIf=\\\"pExpenseArray.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr>\\n                    <th class=\\\"w160\\\">Date</th>\\n                    <th>Sales Promotion</th>\\n                    <th class=\\\"w90\\\">Place of Activity</th>\\n                    <th class=\\\"w100\\\">No Of Attendees</th>\\n                    <th class=\\\"w100 text-right\\\">Rental Exp.</th>\\n                    <th class=\\\"w100 text-right\\\">Food Exp.</th>\\n                    <th class=\\\"w100 text-right\\\">Av-Aids Exp.</th>\\n                    <th class=\\\"w80 text-right\\\">Gift Exp.</th>\\n                    <th class=\\\"w90 text-right\\\">Misc Exp.</th>\\n                    <th class=\\\"w80 text-right\\\">Total</th>\\n                    <th>Remark</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\" let promation of pExpenseArray;let index=index\\\">\\n                      <td class=\\\"w160\\\"> {{promation.date |date:'EEEE, MMMM d, y'}}</td>\\n                      <!-- <td>{{promation.salesActivityType}}</td> -->\\n                      <td *ngIf=\\\"promation.salesActivityType==1\\\">Mechanic get together</td>\\n                      <td *ngIf=\\\"promation.salesActivityType==2\\\"> Retailer get together</td>\\n                      <td *ngIf=\\\"promation.salesActivityType==3\\\">van Campaign</td>\\n                      <td *ngIf=\\\"promation.salesActivityType==4\\\">Stall Campaign</td>\\n                      <td *ngIf=\\\"promation.salesActivityType==5\\\">Exhibition Participation</td>\\n                      <td *ngIf=\\\"promation.salesActivityType==6\\\">Signboard</td>\\n                      <td *ngIf=\\\"promation.salesActivityType==7\\\">Wall/Shop Painting</td>\\n                      <td *ngIf=\\\"promation.salesActivityType==8\\\">GiveAways</td>\\n                      <td *ngIf=\\\"promation.salesActivityType==9\\\">Printing Of Lesafelts,banners, posters etc.</td>\\n                      <td class=\\\"w90\\\">{{promation.placeOfActivity}}</td>\\n                      <td class=\\\"w100\\\">{{promation.noOfAttendees}}</td>\\n                      <td class=\\\"w100 text-right\\\">&#x20B9; {{promation.rentalExpenses}}</td>\\n                      <td class=\\\"w100 text-right\\\">&#x20B9; {{promation.foodExpense}}</td>\\n                      <td class=\\\"w100 text-right\\\">&#x20B9; {{promation.avAidsExpense}}</td>\\n                      <td class=\\\"w80 text-right\\\"> &#x20B9; {{promation.giftsExpense}}</td>\\n                      <td class=\\\"w90 text-right\\\">&#x20B9; {{promation.miscExpense}}</td>\\n                      <td class=\\\"w80 text-right\\\"> &#x20B9; {{promation.total}}</td>\\n                      <td> {{promation.remarks}}\\n                        <div class=\\\"action-btns\\\">\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"removeSalesPromotionalList(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"row mt15\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-file-multiple scroll\\\">\\n                <ul>\\n                  <li class=\\\"w110 pr10\\\" *ngFor=\\\"let urlData of urls;let i=index\\\">\\n                    <label>\\n                        <img *ngIf=\\\"selectedFile[i].type=='image/jpeg'\\\" src=\\\"{{urlData}}\\\">\\n                        <img  *ngIf=\\\"selectedFile[i].type=='application/pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                      <!-- <img src=\\\"{{urlData}}\\\"> -->\\n                      <a (click)=\\\"deleteimg(i)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                    </label>\\n                  </li>\\n                  <li class=\\\"w110 pr10\\\">\\n                    <div class=\\\"cs-file wp100\\\">\\n                      <label>\\n                        <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\" multiple>\\n                        <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                      </label>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sm-table\\\">\\n                <table>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Total Rental Exp.</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">&#x20B9; {{totalrentalExp}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Total Food Exp.</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">&#x20B9; {{totalfoodExpense}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Total AV Aids Exp.</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">&#x20B9; {{totalavAidsExpense}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Total Gifts Exp.</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">&#x20B9; {{totalgiftsExpense}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Total Misc Exp.</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">&#x20B9; {{totalotherExpense}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Total promational Exp.</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">&#x20B9; {{totalPromationalExp}}</td>\\n                  </tr>\\n                </table>\\n                <table>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Advance Amount </th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">&#x20B9; {{allPromationExpense.advanceAmount}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Claim Amount</th>\\n                    <th class=\\\"text-center\\\">:</th>\\n                    <td class=\\\"text-right\\\">&#x20B9; {{OutStationExpense.claimAmount}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12 mt15\\\">\\n              <div class=\\\"cs-btn text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"allPromationExpense.status=2\\\">Save</button>\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"allPromationExpense.status=1\\\">Save as Draft</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </form>\\n      \\n      <form *ngIf=\\\"expenseForm.form==4\\\" (ngSubmit)=\\\"f3.form.valid && miscExpense()|| setFocus(f3.form)\\\" #f3=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"cs-bill\\\" >\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sprate-box pt0\\\">\\n                <div class=\\\"cs-heading\\\">\\n                  <h2>BASIC INFORMATION</h2>\\n                </div>\\n                <div class=\\\"from-fields\\\">\\n                  \\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col s4 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Purpose Of Visit\\\" type=\\\"text\\\" id=\\\"purposeOfVisit\\\" name=\\\"purposeOfVisit\\\" #purposeOfVisit=\\\"ngModel\\\" [(ngModel)]=\\\"misc_Expense.purposeOfVisit\\\" [ngClass]=\\\"{'has-error' : purposeOfVisit.invalid }\\\"  required >\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f3.submitted && purposeOfVisit.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"purposeOfVisit.errors.required\\\">Purpose of Visit required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"ADVANCE AMOUNT\\\" type=\\\"number\\\" id=\\\"advanceAmount\\\" name=\\\"advanceAmount\\\" #advanceAmount=\\\"ngModel\\\" [(ngModel)]=\\\"misc_Expense.advanceAmount\\\"  [ngClass]=\\\"{'has-error' : advanceAmount.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f3.submitted && advanceAmount.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"advanceAmount.errors.required\\\">Purpose Of Visit required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <mat-select placeholder=\\\"Select Senior For Approval\\\" name=\\\"expenseSanctioner\\\" #expenseSanctioner=\\\"ngModel\\\" id=\\\"expenseSanctioner\\\" [(ngModel)]=\\\"misc_Expense.expenseSanctioner\\\" [ngClass]=\\\"{'has-error' : expenseSanctioner.invalid }\\\" required >\\n                            <mat-option *ngFor=\\\"let senior of seniorList\\\" value={{senior.userId}}>{{senior.userName}}</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f3.submitted && expenseSanctioner.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"expenseSanctioner.errors.required\\\">Advance Amount is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          \\n          \\n          <div class=\\\"collaps flat-collaps mt15\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      MISC EXPENSE INFORMATION\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <mat-select placeholder=\\\"Nature of expense\\\" name=\\\"miscActivityType\\\" #miscActivityType=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.miscActivityType\\\" >\\n                                    <mat-option value=\\\"1\\\">Entertainment Expenses</mat-option>\\n                                    <mat-option value=\\\"2\\\">Gift To Dealers</mat-option>\\n                                    <mat-option value=\\\"3\\\">Lunch/Dinner With Team</mat-option>\\n                                    <mat-option value=\\\"4\\\">Training Program</mat-option>\\n                                    <mat-option value=\\\"5\\\">Other</mat-option>\\n                                  </mat-select>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput [matDatepicker]=\\\"five\\\" readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.date\\\" readonly>\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"five\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #five></mat-datepicker>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Place Of Expense\\\" name=\\\"placeOfExpense\\\" #placeOfExpense=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.placeOfExpense\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Name of Beneficiaries\\\" name=\\\"nameOfBeneficiary\\\" #nameOfBeneficiary=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.nameOfBeneficiary\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Amount\\\" name=\\\"amount\\\" #amount=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.amount\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h165\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.remarks\\\" ></textarea>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        \\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s12 mt15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!miscExpenselist.miscActivityType ||!miscExpenselist.date ||!miscExpenselist.placeOfExpense ||!miscExpenselist.nameOfBeneficiary ||!miscExpenselist.amount ||!miscExpenselist.remarks\\\" (click)=\\\"addToMiscExpenseList()\\\">Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          \\n          <div *ngIf=\\\"msExpArray.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr >\\n                    <th class=\\\"w160\\\">Date</th>\\n                    <th class=\\\"w180\\\">Nature Of Exp.</th>\\n                    <th class=\\\"w170\\\">Beneficiaries Name</th>\\n                    <th class=\\\"w160\\\">Place Of Expense</th>\\n                    <th class=\\\"w100 text-right\\\">amount</th>\\n                    <th>Remark</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let misc of msExpArray;let index=index\\\">\\n                      <td class=\\\"w160\\\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\\n                      <!-- <td class=\\\"w200\\\">{{misc.miscActivityType}}</td> -->\\n                      <td *ngIf=\\\"misc.miscActivityType==1\\\" class=\\\"w180\\\">Entertainment Expenses</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==2\\\" class=\\\"w180\\\">Gift To Dealers</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==3\\\" class=\\\"w180\\\">Lunch/Dinner With Team</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==4\\\" class=\\\"w180\\\">Training Program</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==5\\\" class=\\\"w180\\\"> Other</td>\\n                      <td class=\\\"w170\\\">{{misc.nameOfBeneficiary}}</td>\\n                      <td class=\\\"w160\\\">{{misc.placeOfExpense}}</td>\\n                      <td class=\\\"w100 text-right\\\"> &#x20B9; {{misc.amount}}</td>\\n                      <td> {{misc.remarks}}\\n                        <div class=\\\"action-btns\\\">\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"removeMiscExpenseList(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row mt15\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-file-multiple scroll\\\">\\n                <ul>\\n                  <li class=\\\"w110 pr10\\\" *ngFor=\\\"let urlData of urls;let i=index\\\">\\n                    <label>\\n                        <img *ngIf=\\\"selectedFile[i].type=='image/jpeg'\\\" src=\\\"{{urlData}}\\\">\\n                        <img  *ngIf=\\\"selectedFile[i].type=='application/pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                      <a (click)=\\\"deleteimg(i)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                    </label>\\n                  </li>\\n                  <li class=\\\"w110 pr10\\\">\\n                    <div class=\\\"cs-file wp100\\\">\\n                      <label>\\n                        <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\" multiple>\\n                        <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                      </label>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sm-table\\\">\\n                <table>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Total Misc Exp.</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">&#x20B9; {{totalMiscExp}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Advance Amount</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">&#x20B9; {{misc_Expense.advanceAmount}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">Claim Amount</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">&#x20B9; {{misc_Expense.claimAmount}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-btn mt15 text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"allmiscexpense('1')\\\">Save as Draft</button>\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"allmiscexpense('2')\\\">Save For Approvel</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </form>\\n      \\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvYWRkLWV4cGVuc2UvYWRkLWV4cGVuc2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, ElementRef, Inject, PLATFORM_ID } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router } from '@angular/router';\nimport { iif } from 'rxjs';\nimport * as moment from 'moment';\nimport { IfStmt } from '@angular/compiler';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as $ from 'jquery';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-add-expense',\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.scss']\n})\nexport class AddExpenseComponent implements OnInit {\n  @ViewChild('vehicleNumber') vehicleNumber: ElementRef;\n  data:any={};\n  user:any={};\n  userType:any;\n  userId:any;\n  userRole:any;\n  expenseForm:any={};\n  localConvense:any={};\n  localHQExpense:any={};\n  localConveyances:any=[];\n  userInformation:any={};\n  allPromationExpense:any={};\n  promation_Expense:any={};\n  pExpenseArray:any=[];\n  misc_Expense:any={};\n  miscExpenselist:any={};\n  msExpArray:any=[];\n  OutStationExpense:any={};\n  journyExpense:any={};\n  outStationHotelExp:any={};\n  outStationLocalExp:any={}\n  designation:any;\n  allowanceList:any=[];\n  loader:any=false;\n  outStationMiscExp:any={};\n  currentDate:any = new Date().toJSON().split('T')[0];\n  constructor(private el: ElementRef,public service:ConstantService,public route:Router,public toast:SnackBarOverview,@Inject(PLATFORM_ID) private platformId: Object) { \n    \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    \n    this.journyExpense.mode=2;\n    this.OutStationExpense.claimAmount=0;\n    this.OutStationExpense.advanceAmount=0\n    if(this.userRole!=1)\n    {\n      this.designation=this.user.data.salesUser.designation;\n    }\n    console.log(this.designation);\n    this.misc_Expense.claimAmount=0;\n    this.misc_Expense.advanceAmount=0;\n    this.localHQExpense.otherExpense=0;\n    this.promation_Expense.rentalExpenses=0\n    this.promation_Expense.foodExpense=0\n    this.promation_Expense.avAidsExpense=0\n    this.promation_Expense.giftsExpense=0\n    this.promation_Expense.miscExpense=0\n    this.promation_Expense.approvedAmount=0;\n    this.allPromationExpense.advanceAmount=0;\n    \n    if(this.designation!=0 && this.userRole!=1)\n    {\n      this.getAllowanceList(this.designation);\n    }\n    \n    this.getSeniorList();\n    \n  }\n  \n  ngOnInit() {\n  }\n  seniorList:any=[]\n  getSeniorList()\n  {\n    this.loader=true;\n    this.service.fileData(\"\",\"getseniors/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.seniorList=result['data'];\n      }\n    })\n  }\n  \n  urls:any=[];\n  selectedFile:any=[];\n  insertImage(data)\n  {\n    console.log(data);\n    \n    let files = data.target.files;\n    if (files) {\n      for (let file of files) {\n        let reader = new FileReader();\n        reader.onload = (e: any) => {\n          this.urls.push(e.target.result);\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n    console.log(this.urls);\n    console.log(data.target.files.length);\n    for(var i=0; i<data.target.files.length; i++)\n    {\n      this.selectedFile.push(data.target.files[i]);\n    }\n    \n    console.log(this.selectedFile);\n    \n  }\n  \n  deleteimg(index)\n  {\n    this.urls.splice(index, 1);\n    this.selectedFile.splice(index, 1);\n  }\n  setFocus(form) {\n    for (var key in form.controls)\n    {\n      if (form.controls.hasOwnProperty(key)) {\n        if(form.controls[key].status=='INVALID')\n        {\n          if (isPlatformBrowser(this.platformId)) {\n            $('#'+key).focus();\n          }\n          break;\n        }\n        console.log(key + \" -> \" + form.controls[key].status);\n      }\n    }\n    \n  }\n  \n  \n  getAllowanceList(designation)\n  {\n    this.loader=true\n    this.service.fetchData({designation:designation},\"allowance/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.allowanceList=result['data'][0];\n      }\n      \n    })\n  }\n  cityListArray:any=[]\n  Arraycity:any={}\n  cityList(city)\n  {\n    console.log(city);\n    this.service.fileData(\"\",\"city/list/\"+city).subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.cityListArray=result['data'];\n      }\n    })\n    \n  }\n  \n  hotelCity:any={}\n  selectedCity(city)\n  {\n    this.hotelCity=city;\n    // let value={stateMasterId:city.stateMasterId,city:city.city+'/'+city.stateName+'/'+city.districtName};\n    this.outStationHotelExp.city=city.city+'/'+city.stateName+'/'+city.districtName;\n    this.outStationHotelExp.stateMasterId=city.stateMasterId;\n    \n    console.log(this.outStationHotelExp.city);\n  }\n  \n  selectedFoodExpenseCity(city)\n  {\n    this.hotelCity=city;\n    let value={stateMasterId:city.stateMasterId,city:city.city+'/'+city.stateName+'/'+city.districtName};\n    console.log(value);\n    this.outStationFoodExp.city=city.city+'/'+city.stateName+'/'+city.districtName;\n    this.outStationFoodExp.stateMasterId=city.stateMasterId;\n  }\n  \n  hotelcitydiv:any=false;\n  hotelCityError:any=0;\n  checkValidAmount(amount)\n  {\n    this.hotelCityError=0;\n    this.hotelcitydiv=true;\n    \n    if(this.hotelCity.category=='A')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.lodgingAllowanceA))\n      {\n        this.hotelCityError=1;\n        this.hotelcitydiv=true;\n        \n      }\n    }\n    if(this.hotelCity.category=='B')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.lodgingAllowanceB))\n      {\n        this.hotelcitydiv=true;\n        this.hotelCityError=1\n      }\n    }\n    if(this.hotelCity.category=='C')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.lodgingAllowanceC))\n      {\n        this.hotelcitydiv=true;\n        this.hotelCityError=1\n      }\n    }\n    if(this.hotelCity.category=='A+')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.lodgingAllowanceAPlus))\n      {\n        this.hotelcitydiv=true;\n        this.hotelCityError=1\n      }\n    }\n    console.log(this.hotelCityError);\n    \n  }\n  \n  foodCityError:any=0;\n  checkValidFoodAmount(amount)\n  {\n    this.foodCityError=0;\n    console.log(\"food\");\n    \n    if(this.hotelCity.category=='A')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.foodAllowanceA))\n      {\n        this.foodCityError=1\n      }\n    }\n    if(this.hotelCity.category=='B')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.foodAllowanceA))\n      {\n        this.foodCityError=1\n      }\n    }\n    if(this.hotelCity.category=='C')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.foodAllowanceA))\n      {\n        this.foodCityError=1\n      }\n    }\n    if(this.hotelCity.category=='A+')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.foodAllowanceAPlus))\n      {\n        this.foodCityError=1\n      }\n    }\n    console.log(this.foodCityError);\n  }\n  \n  modeError:any=0;\n  checkValid(modeType)\n  {\n    console.log(modeType);\n    this.modeError=0;\n    if(modeType=='AC Buses')\n    {\n      if(this.allowanceList.travelBusAC==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='Non - AC Buses')\n    {\n      if(this.allowanceList.travelBusNonAC==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='2A')\n    {\n      if(this.allowanceList.travelTrain2A==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='3A')\n    {\n      if(this.allowanceList.travelTrain3A==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='SL')\n    {\n      if(this.allowanceList.travelTrainSL==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='Private')\n    {\n      if(this.allowanceList.travelTaxiPrivate==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='Economy Class')\n    {\n      if(this.allowanceList.travelTaxiShared==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='Shared')\n    {\n      if(this.allowanceList.flightEconomyClass==false)\n      {\n        this.modeError=1;\n      }\n      console.log(this.modeError);\n    }\n    \n  }\n  \n  localFareError:any=0;\n  checkValidLocalFare(modeType)\n  {\n    this.localFareError=0;\n    if(modeType=='1')\n    {\n      if(this.allowanceList.localAuto!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    if(modeType=='2')\n    {\n      if(this.allowanceList.localBus!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    if(modeType=='3')\n    {\n      if(this.allowanceList.localTaxiAC!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    if(modeType=='4')\n    {\n      if(this.allowanceList.localTaxiNonAC!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    if(modeType=='5')\n    {\n      if(this.allowanceList.localTwoWheeler!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    \n  }\n  \n  mylocalexpense(status)\n  {\n    this.localConvense.status=status;\n  }\n  myoutstationexpense(status)\n  {\n    console.log(status);\n    \n    this.OutStationExpense.status=status;\n  }\n  promotionexpense(status)\n  {\n    this.allPromationExpense.status=status;\n  }\n  allmiscexpense(status)\n  {\n    this.misc_Expense.status=status;\n  }\n  \n  outTravelExpense()\n  {\n    this.OutStationExpense.outStationExpense={outStationHotelExp:this.tmpoutStationHotelExp,outStationLocalExp:this.tmpoutStationLocalExp,outStationTravelExp:this.tmpJournyExpense,foodExpenses:this.tmpoutStationFoodExp,miscExpenses:this.tmpOutTravelMiscExp};\n    this.OutStationExpense.userId=this.userId;\n    this.OutStationExpense.department=this.userInformation.userType;\n    this.OutStationExpense.expenseType=this.expenseForm.form;\n    // this.OutStationExpense.expenseSanctioner=this.expenseForm.expenseSanctioner;\n    this.OutStationExpense.claimAmount=this.TotalClaimAmount;\n    this.OutStationExpense.actualExpenseAmount=this.totalOutStationExp;\n    console.log(this.OutStationExpense);\n    \n    this.loader=true\n    this.service.fetchData(this.OutStationExpense,\"expense/add\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.uploadBillAttechment(result['data']);\n        this.toast.openSucess(\"Expense\",\"Added SuccessFully\");\n        this.route.navigate(['/expense-list']);\n      }\n    }) \n  }\n  // uploadBillAttechment(id)\n  // {\n  //   let documentData = {};\n  //   console.log(this.urls);\n    \n  //   let value:any = [];\n\n  //   for(let j=0;j<this.urls.length;j++)\n  //   {  \n  //     documentData = new FormData;\n  //     documentData['action']=1;\n  //     documentData['binaryData']=this.urls[j];\n  //     documentData['documentType']=4;\n  //     documentData['documentName'] = this.selectedFile[0].name;\n  //     documentData['referenceId']=id;\n  //     this.loader=true;\n      \n  //     for(var i=0; i<this.selectedFile.length; i++)\n  //     {\n        \n  //       if(this.selectedFile[i].type == 'application/pdf') {\n  //         documentData['fileName'] = \"document\"+i+\".pdf\",this.selectedFile[i];\n  //       } else {\n  //         documentData['fileName'] = \"document\"+i+\".jpg\",this.selectedFile[i];\n  //       }\n  //     }\n\n  //     value.push(documentData);\n  //   }\n  //   console.log(documentData);\n\n  //   console.log(value);\n    \n  //   this.service.fetchData(value,\"document/update\").subscribe((resp)=>\n  //   {\n  //     console.log(resp);\n  //     if(resp)\n  //     {\n  //       this.loader=false;\n  //       this.toast.openSucess('Document Added Sucessfully','');\n  //     }\n  //   });\n    \n  // }\n  uploadBillAttechment(id)\n  {\n    let documentData = {};\n    console.log(this.urls);\n    \n    let value:any = [];\n    \n    for(let j=0;j<this.urls.length;j++)\n    {  \n      documentData = new FormData;\n      documentData['action']=1;\n      documentData['binaryData']=this.urls[j];\n      documentData['documentType']=4;\n      documentData['documentName'] = this.selectedFile[0].name;\n      documentData['referenceId']=id;\n      if(this.selectedFile[j].type == 'application/pdf') {\n        documentData['fileName'] = \"document\"+j+\".pdf\",this.selectedFile[j];\n      } else {\n        documentData['fileName'] = \"document\"+j+\".jpg\",this.selectedFile[j];\n      }\n        value.push(documentData);\n      // this.loader=true;\n    }\n    \n    this.data.file=value;\n    console.log(this.data);\n    this.loader=true;\n    this.service.fetchData(value, 'document/update').subscribe((resp)=>\n    {\n      console.log(resp);\n      if(resp['status']=='Success')\n      {\n        this.toast.openSucess('Document Added Sucessfully','');\n      }\n    });\n    \n  }\n\n  tmpOutTravelMiscExp:any=[];\n  addOutMiscExpenseList()\n  {\n    this.tmpOutTravelMiscExp.push(this.outStationMiscExp);\n    this.outStationMiscExp={};\n    this.calculateOutMiscExp(this.tmpOutTravelMiscExp);\n  }\n\n  removeOutStationMiscExp(index)\n  {\n    this.tmpOutTravelMiscExp.splice(index,1);\n    this.calculateOutMiscExp(this.tmpOutTravelMiscExp);\n  }\n\n  calculateOutMiscExp(miscExp:any=[])\n  {\n    this.totalOutMiscExp=0;\n    for(let i=0;i<miscExp.length;i++)\n    {\n      this.totalOutMiscExp=parseInt(this.totalOutMiscExp)+parseInt(miscExp[i].amount);\n    }\n    console.log(this.totalOutMiscExp);\n    \n  } \n  \n  totalOutMiscExp:any=0\n  tmpJournyExpense:any=[];\n  addToOutTravelExpense()\n  {\n    console.log(this.journyExpense);\n    this.tmpJournyExpense.push(this.journyExpense)\n    console.log(this.tmpJournyExpense);\n    this.calculateOutTravelExpese(this.tmpJournyExpense);\n    this.journyExpense={};\n  }\n\n  removeOutTravelExpense(index)\n  {\n    this.tmpJournyExpense.splice(index,1);\n    this.calculateOutTravelExpese(this.tmpJournyExpense);\n  }\n\n   \n  tmpoutStationHotelExp:any=[];\n  outStationHotelExpList()\n  {\n    this.tmpoutStationHotelExp.push(this.outStationHotelExp);\n    this.calculateOutHotelExp(this.tmpoutStationHotelExp)\n    this.outStationHotelExp={};\n    this.Arraycity.city='';\n    this.hotelcitydiv=false;\n    \n  }\n\n  removeOutStationHotelExpense(index)\n  {\n    this.tmpoutStationHotelExp.splice(index,1);\n    this.calculateOutHotelExp(this.tmpoutStationHotelExp);\n  }\n  \n  tmpoutStationLocalExp:any=[];\n  outStationLocalExpList()\n  {\n    console.log(this.outStationLocalExp);\n    this.tmpoutStationLocalExp.push(this.outStationLocalExp);\n    console.log(this.tmpoutStationLocalExp);\n    this.calculateOutStationLocalExp(this.tmpoutStationLocalExp)\n    this.outStationLocalExp={};\n  }\n\n  removeOutStatonLocalExp(index)\n  {\n    this.tmpoutStationLocalExp.splice(index,1);\n    this.calculateOutStationLocalExp(this.tmpoutStationLocalExp);\n\n  }\n  \n  outStationFoodExp:any={};\n  tmpoutStationFoodExp:any=[];\n  outStationFoodExpList()\n  {\n    console.log(this.outStationFoodExp);\n    this.tmpoutStationFoodExp.push(this.outStationFoodExp);\n    this.calculateOutStationFood(this.tmpoutStationFoodExp);\n    this.outStationFoodExp={};\n    this.Arraycity.city='';\n  }\n\n  removeOutStationFoodExp(index)\n  {\n    this.tmpoutStationFoodExp.splice(index,1);\n    this.calculateOutStationFood(this.tmpoutStationFoodExp);\n  }\n  \n  totalOutStationFoodExp:any=0\n  calculateOutStationFood(foodExpense)\n  {\n    this.totalOutStationFoodExp=0;\n    for(let i=0;i<foodExpense.length;i++)\n    {\n      this.totalOutStationFoodExp=parseInt(this.totalOutStationFoodExp)+parseInt(foodExpense[i].billAmount)\n    }\n    console.log(this.totalOutStationFoodExp);\n    \n    this.calculateTotalOutStationExp();\n    \n  }\n  \n  totalOutTravelExp:any=0;\n  calculateOutTravelExpese(outTravelExpenseArray)\n  {\n    this.totalOutTravelExp=0;\n    for(let i=0;i<outTravelExpenseArray.length;i++)\n    {\n      this.totalOutTravelExp=parseInt(this.totalOutTravelExp)+parseInt(outTravelExpenseArray[i].amount)\n    }\n    this.calculateTotalOutStationExp();\n  }\n  \n  totalOutHotelExp:any=0;\n  calculateOutHotelExp(outHotelExpArray)\n  {\n    this.totalOutHotelExp=0;\n    for(let i=0;i<outHotelExpArray.length;i++)\n    {\n      this.totalOutHotelExp=parseInt(this.totalOutHotelExp)+parseInt(outHotelExpArray[i].billAmount);\n    }\n    this.calculateTotalOutStationExp();\n  }\n  \n  totalOutLocalExp:any=0;\n  calculateOutStationLocalExp(OutstationTravelExpArray)\n  {\n    this.totalOutLocalExp=0;\n    for(let i=0;i<OutstationTravelExpArray.length;i++)\n    {\n      this.totalOutLocalExp=parseInt(this.totalOutLocalExp)+parseInt(OutstationTravelExpArray[i].fare);\n    }\n    this.calculateTotalOutStationExp();\n  }\n  totalOutStationExp:any=0;\n  TotalClaimAmount:any=0;\n  calculateTotalOutStationExp()\n  {\n    \n    this.totalOutStationExp=parseInt(this.totalOutTravelExp)+parseInt(this.totalOutHotelExp)+parseInt(this.totalOutLocalExp)+parseInt(this.totalOutStationFoodExp)+parseInt(this.totalOutMiscExp);\n    if(parseInt(this.totalOutStationExp)>parseInt(this.OutStationExpense.advanceAmount))\n    {\n      \n      this.TotalClaimAmount=parseInt(this.totalOutStationExp)-parseInt(this.OutStationExpense.advanceAmount);\n    }\n    \n  }\n  LocalConvenseExpense()\n  {\n    this.localConvense.localHQExpense={\"localConveyances\":this.localConveyances};\n    this.localConvense.userId=this.userId;\n    this.localConvense.department=this.userInformation.userType;\n    this.localConvense.expenseType=this.expenseForm.form;\n    this.localConvense.claimAmount=this.totalLocalExp;\n    this.localConvense.actualExpenseAmount=this.totalLocalExp;\n    console.log(this.localConvense);\n    this.loader=true;\n    this.service.fetchData(this.localConvense,\"expense/add\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.uploadBillAttechment(result['data']);\n        this.route.navigate(['/expense-list']);\n        this.toast.openSucess(\"Expense\",\"Added SuccessFully\");\n      }\n    })\n  }\n\n  calculateAmount(mode:any,km:any)\n  {\n    console.log(this.allowanceList);\n    if(mode==9)\n    {\n      this.localHQExpense.amount=parseFloat(this.allowanceList.selfCarPerKM)*parseFloat(km);\n    }\n    if(mode==8)\n    {\n      this.localHQExpense.amount=parseFloat(this.allowanceList.selfBikePerKM)*parseFloat(km);\n\n    }\n    console.log(this.localHQExpense.amount);\n    \n  }\n  readonlyArea=false;\n  readonlyValue(value)\n  {\n    if(value==1)\n    {\n      this.readonlyArea=true\n    }\n    if(value==2)\n    {\n      this.readonlyArea=false;\n    }\n    \n  }\n  addToLocalConvenseList()\n  {\n    console.log(this.localHQExpense);\n    this.localConveyances.push(this.localHQExpense)\n    this.localHQExpense={};\n    this.calculateLocalExpense(this.localConveyances);\n    console.log(this.localConveyances);\n  }\n  \n  removeLocalConvenseList(index)\n  {\n    this.localConveyances.splice(index,1);\n    this.calculateLocalExpense(this.localConveyances);\n  }\n  otherLocalExp:any=0;\n  localExp:any=0;\n  totalLocalExp:any=0;\n  calculateLocalExpense(localExpArray)\n  {\n    this.otherLocalExp=0;\n    this.localExp=0;\n    this.totalLocalExp=0;\n    for(let i=0;i<localExpArray.length;i++)\n    {\n      this.otherLocalExp=parseInt(this.otherLocalExp)+parseInt(localExpArray[i].otherExpense);\n      this.localExp=parseInt(this.localExp)+parseInt(localExpArray[i].amount);\n    }\n    this.totalLocalExp=parseInt(this.otherLocalExp)+parseInt(this.localExp);\n  }\n  \n  promationExpense()\n  {\n    this.allPromationExpense.salesPromotionExpense={\"salesPromotionExps\":this.pExpenseArray};\n    this.allPromationExpense.department=this.userInformation.userType;\n    this.allPromationExpense.userId=this.userId;\n    this.allPromationExpense.expenseType=this.expenseForm.form;\n    this.allPromationExpense.actualExpenseAmount=this.totalPromationalExp;\n    console.log(this.allPromationExpense);\n    this.loader=true\n    this.service.fetchData(this.allPromationExpense,\"expense/add\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.uploadBillAttechment(result['data']);\n        this.route.navigate(['/expense-list']);\n        this.toast.openSucess(\"Expense\",\"Added SuccessFully\");\n        \n      }\n    })\n    \n  }\n  addToPromationList()\n  {\n    this.promation_Expense.total=parseInt(this.promation_Expense.rentalExpenses)+parseInt(this.promation_Expense.foodExpense)+parseInt(this.promation_Expense.avAidsExpense)+parseInt(this.promation_Expense.giftsExpense)+parseInt(this.promation_Expense.miscExpense)+parseInt(this.promation_Expense.approvedAmount);\n    this.pExpenseArray.push(this.promation_Expense);\n    console.log(this.pExpenseArray);\n    this.calculatePromationalExpense(this.pExpenseArray);\n    this.promation_Expense={};\n    this.promation_Expense.rentalExpenses=0;\n    this.promation_Expense.foodExpense=0;\n    this.promation_Expense.avAidsExpense=0;\n    this.promation_Expense.giftsExpense=0;\n    this.promation_Expense.miscExpense=0;\n    this.promation_Expense.approvedAmount=0;\n  }\n\n  removeSalesPromotionalList(index)\n  {\n    this.pExpenseArray.push(index,1);\n    this.calculatePromationalExpense(this.pExpenseArray);\n \n  }\n\n\n  \n  totalrentalExp:any=0;\n  totalfoodExpense:any=0;\n  totalavAidsExpense:any=0;\n  totalgiftsExpense:any=0;\n  totalotherExpense:any=0;\n  totalPromationalExp:any=0;\n  calculatePromationalExpense(promationalExpArray)\n  {\n    this.totalrentalExp=0\n    this.totalfoodExpense=0\n    this.totalavAidsExpense=0\n    this.totalgiftsExpense=0\n    this.totalotherExpense=0\n    this.totalPromationalExp=0\n    for(let i=0;i<promationalExpArray.length;i++)\n    {\n      this.totalrentalExp=parseInt(this.totalrentalExp)+parseInt(promationalExpArray[i].rentalExpenses);\n      this.totalfoodExpense=parseInt(this.totalfoodExpense)+parseInt(promationalExpArray[i].foodExpense);\n      this.totalavAidsExpense=parseInt(this.totalavAidsExpense)+parseInt(promationalExpArray[i].avAidsExpense);\n      this.totalgiftsExpense=parseInt(this.totalgiftsExpense)+parseInt(promationalExpArray[i].giftsExpense);\n      this.totalotherExpense=parseInt(this.totalotherExpense)+parseInt(promationalExpArray[i].miscExpense);\n    }\n    this.totalPromationalExp=parseInt(this.totalrentalExp)+parseInt(this.totalfoodExpense)+parseInt(this.totalavAidsExpense)+parseInt(this.totalgiftsExpense)+parseInt(this.totalotherExpense);\n    if(parseInt(this.totalPromationalExp)>parseInt(this.allPromationExpense.advanceAmount))\n    {this.allPromationExpense.claimAmount=parseInt(this.totalPromationalExp)-parseInt(this.allPromationExpense.advanceAmount)}\n   \n  }\n  \n  miscExpense()\n  {\n    this.misc_Expense.miscExpense={\"miscExp\":this.msExpArray};\n    this.misc_Expense.department=this.userInformation.userType;\n    this.misc_Expense.userId=this.userId;\n    this.misc_Expense.expenseType=this.expenseForm.form;\n    this.misc_Expense.actualExpenseAmount=this.totalMiscExp;\n    console.log(this.misc_Expense);\n    this.loader=true\n    this.service.fetchData(this.misc_Expense,\"expense/add\").subscribe((result)=>{\n      console.log(result);\n      this.loader\n      if(result['status']=='Success')\n      {\n        this.uploadBillAttechment(result['data']);\n        this.route.navigate(['/expense-list']);\n        this.toast.openSucess(\"Expense\",\"Added SuccessFully\");\n        \n      }\n    })\n  }\n  \n  addToMiscExpenseList()\n  {\n    this.msExpArray.push(this.miscExpenselist);\n    this.miscExpenselist={};\n    this.calculateMiscExp(this.msExpArray);\n    console.log(this.msExpArray);\n  }\n\n  removeMiscExpenseList(index)\n  {\n    this.msExpArray.splice(index,1);\n    this.calculateMiscExp(this.msExpArray);\n\n  }\n  \n  totalMiscExp:any=0\n  calculateMiscExp(miscExpenseArray)\n  {\n    this.totalMiscExp=0;\n    this.misc_Expense.claimAmount=0\n    for(let i=0;i<miscExpenseArray.length;i++)\n    {\n      this.totalMiscExp=parseInt(this.totalMiscExp)+parseInt(miscExpenseArray[i].amount);\n    }\n    if(parseInt(this.totalMiscExp)>parseInt(this.misc_Expense.advanceAmount))\n    {\n      this.misc_Expense.claimAmount=parseInt(this.totalMiscExp)-parseInt(this.misc_Expense.advanceAmount)\n    }\n  }\n  \n  openExpenseForm()\n  {\n    if(this.userType==1)\n    {\n      this.userInformation.userName=this.user.data.userName;\n      this.userInformation.userType='System User'\n      if(this.userRole==1)\n      {\n        this.userInformation.role='Admin'\n      }\n      else if(this.userRole==2)\n      {\n        this.userInformation.role='Human Resource'\n      }\n      else if(this.userRole==3)\n      {\n        this.userInformation.role='Accounts'\n      }\n      else if(this.userRole==4)\n      {\n        this.userInformation.role='Marketing Co-ordinator'\n      }\n      else if(this.userRole==5)\n      {\n        this.userInformation.role='Business Head'\n      }\n    }\n    else if(this.userType==2)\n    {\n      this.userInformation.userName=this.user.data.userName;\n      this.userInformation.userType='Sales User'\n      if(this.userRole==6)\n      {\n        this.userInformation.role='National Manager'\n      }\n      else if(this.userRole==7)\n      {\n        this.userInformation.role='Regional Manager'\n      }\n      else if(this.userRole==8)\n      {\n        this.userInformation.role='Area Manager'\n      }\n      else if(this.userRole==9)\n      {\n        this.userInformation.role='Zonal Manger'\n      }\n      else if(this.userRole==10)\n      {\n        this.userInformation.role='Territory Incharge'\n      }\n    }\n    else{\n      \n    }\n    console.log(\"FormOpen\");\n    console.log(this.expenseForm);\n    \n    \n  }\n}\n","module.exports = \"<div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n  <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n</div>\\n\\n<div class=\\\"main-container\\\">\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/expense-list\\\" routerLinkActive=\\\"active\\\" ><i   class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{expenseDetailList.userName}}</h2>\\n      </div>\\n      \\n      <div class=\\\"cs-value\\\">\\n        <h2>Total</h2>\\n        <p class=\\\"light\\\">{{expenseDetailList.actualExpenseAmount |currency: 'INR':true }}</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"col s12 cs-figure\\\">\\n                <ul>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Expense Type</span>\\n                        <p *ngIf=\\\"expenseDetailList.expenseType==1\\\">Local Conveyance</p>\\n                        <p *ngIf=\\\"expenseDetailList.expenseType==2\\\">Outstation Travel</p>\\n                        <p *ngIf=\\\"expenseDetailList.expenseType==3\\\">Sales Promotion</p>\\n                        <p *ngIf=\\\"expenseDetailList.expenseType==4\\\">Misc Exp</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Purpose Of Visit</span>\\n                        <p>{{expenseDetailList.purposeOfVisit}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Date</span>\\n                        <p>{{expenseDetailList.createdOn |date:'EEEE, MMMM d, y'}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>E.C. No</span>\\n                        <p>{{expenseDetailList.ecNumber}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n                \\n                \\n                <ul class=\\\"mt15\\\">\\n                  <li *ngIf=\\\"expenseDetailList.status==5\\\" class=\\\"approved\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Satus</span>\\n                        <p>Approve</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li *ngIf=\\\"expenseDetailList.status==2 || expenseDetailList.status==3\\\" class=\\\"pending\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Satus</span>\\n                        <p>{{expenseDetailList.status==2?'Pending':'Forward For Approval'}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li *ngIf=\\\"expenseDetailList.status==4 || expenseDetailList.status==6\\\" class=\\\"reject\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Satus</span>\\n                        <p>Reject</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li *ngIf=\\\"expenseDetailList.status==1\\\" class=\\\"draft\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Satus</span>\\n                        <p>Draft</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Department</span>\\n                        <p>{{expenseDetailList.department}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li *ngIf=\\\"expenseDetailList.createdBy!=userId && (expenseDetailList.status==2|| expenseDetailList.status==3)\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <div class=\\\"from-fields\\\">\\n                          <div *ngIf=\\\"expenseDetailList.status==2\\\" class=\\\"dflex\\\">\\n                            <div class=\\\"control-field wp100\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <mat-select placeholder=\\\"Select Status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" [(ngModel)]=\\\"data.status\\\" >\\n                                  <mat-option  value=3>Forward For Approval</mat-option>\\n                                  <mat-option  value=4>Reject</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                            </div>\\n                            <div *ngIf=\\\"data.status==3\\\" class=\\\"control-field wp100 ml10\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <mat-select  placeholder=\\\"Select Status\\\" name=\\\"expenseSanctionedBy\\\" #expenseSanctionedBy=\\\"ngModel\\\" [(ngModel)]=\\\"data.expenseSanctionedBy\\\" >\\n                                  <mat-option *ngFor=\\\"let user of financeUserList\\\" value=\\\"{{user.userId}}\\\">{{user.userName}}</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                            </div>\\n                            <div *ngIf=\\\"data.status==4\\\" class=\\\"control-field wp100 ml10\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <input matInput placeholder=\\\"Remark\\\" name=\\\"expenseSanctionRejectedBy\\\" #expenseSanctionRejectedBy=\\\"ngModel\\\" [(ngModel)]=\\\"data.expenseSanctionRejectedBy\\\">\\n                              </mat-form-field>\\n                            </div>\\n                            \\n                            <div *ngIf=\\\"data.status\\\" class=\\\"cs-btn ml10\\\">\\n                              <div class=\\\"in-btn\\\">\\n                                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"statusUpdate()\\\" style=\\\"color: #fff;\\\">Go</button>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div *ngIf=\\\"expenseDetailList.status==3 && userRole==17\\\" class=\\\"dflex\\\">\\n                            <div class=\\\"control-field wp100\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <mat-select placeholder=\\\"Select Status\\\" name=\\\"status\\\" #status=\\\"ngModel\\\" [(ngModel)]=\\\"data.status\\\" >\\n                                  <mat-option value=5>Approve</mat-option>\\n                                  <mat-option value=6>Reject</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                            </div>\\n                            \\n                            <div *ngIf=\\\"data.status==6\\\" class=\\\"control-field wp100 ml10\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <input matInput placeholder=\\\"Remark\\\" name=\\\"expenseApprovedRejectionRemarks\\\" #expenseApprovedRejectionRemarks=\\\"ngModel\\\" [(ngModel)]=\\\"data.expenseApprovedRejectionRemarks\\\">\\n                              </mat-form-field>\\n                            </div>\\n                            \\n                            <div *ngIf=\\\"data.status\\\" class=\\\"cs-btn ml10\\\">\\n                              <div class=\\\"in-btn\\\">\\n                                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"changeStatus()\\\" style=\\\"color: #fff;\\\">Go</button>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n              \\n              \\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div class=\\\"cs-logs\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Expense Bill</h2>\\n              </div>\\n              <div class=\\\"logs-outer padding0\\\">\\n                <div class=\\\"cs-image\\\">\\n                  \\n                  <div *ngIf=\\\"expenseDetailList.documents?.length == 0\\\" class=\\\"not-data mt15 padding0\\\">\\n                    <div class=\\\"inner-data\\\">\\n                      <p>Image not available</p>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"expenseDetailList.documents?.length > 0\\\" class=\\\"vertical-img {{expenseDetailList.documents.length == 2 ? 'double-img' : (expenseDetailList.documents.length > 2 ? 'multiple-img' : '')}}\\\"class=\\\"vertical-img\\\">\\n                    <ul>\\n                      <li *ngFor=\\\"let expenseImage of expenseDetailList.documents;let i=index\\\" class=\\\"overlay-content\\\" >\\n                        <img *ngIf=\\\"expenseImage.extension=='.jpg'\\\" src=\\\"{{api+expenseImage.documentId+'/'+'2'}}\\\">\\n                        <img *ngIf=\\\"expenseImage.extension=='.pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                        <a class=\\\"close dowload\\\" matRipple matTooltip=\\\"Download Bill\\\" href=\\\"{{api+expenseImage.documentId+'/'+'2'}}\\\" ><i class=\\\"material-icons\\\">cloud_download</i></a>\\n                      </ul>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n        \\n        <div *ngIf=\\\"localConveyances.length!=0\\\" class=\\\"row\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>Local Conveyances</h2>\\n            </div>\\n          </div>\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"w200\\\">Date Of Visit</th>\\n                  <th class=\\\"w110\\\">From</th>\\n                  <th class=\\\"w110\\\">To</th>\\n                  <th class=\\\"w150\\\">Type Of mode</th>\\n                  <th class=\\\"w150\\\">Modal Of Travel</th>\\n                  <th class=\\\"w130\\\">KMs Covered</th>\\n                  <th class=\\\"w110 text-right\\\">Amount</th>\\n                  <th class=\\\"w130\\\">Other Expense</th>\\n                  <th>Remark</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let expense of localConveyances\\\">\\n                    <td class=\\\"w200\\\"> {{expense.visitDate |date:'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w110\\\">{{expense.from}}</td>\\n                    <td class=\\\"w110\\\">{{expense.to}}</td>\\n                    <td  class=\\\"w150\\\">\\n                      <span *ngIf=\\\"expense.modeType==1\\\"> SELF</span>\\n                      <span *ngIf=\\\"expense.modeType==2\\\"> PUBLIC TRANSPORT</span>\\n                    </td>\\n                    <td  class=\\\"w150\\\">\\n                      <span *ngIf=\\\"expense.mode==10\\\">AUTO</span>\\n                      <span *ngIf=\\\"expense.mode==1\\\">BUS</span>\\n                      <span *ngIf=\\\"expense.mode==6\\\">AC TEXI</span>\\n                      <span *ngIf=\\\"expense.mode==7\\\">NON-AC TEXI</span>\\n                      <span *ngIf=\\\"expense.mode==5\\\">METRO</span>\\n                      <span *ngIf=\\\"expense.mode==9\\\">CAR</span>\\n                      <span *ngIf=\\\"expense.mode==8\\\">BIKE</span>\\n                    </td>\\n                    <td class=\\\"w130\\\">{{expense.distanceKMS}} KMs</td>\\n                    <td class=\\\"w110 text-right\\\">{{expense.otherExpense|currency: 'INR':true}}</td>\\n                    <td class=\\\"w130\\\"> {{expense.otherExpense|currency: 'INR':true}}</td>\\n                    <td> {{expense.remarks}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>\\n        <div  *ngIf=\\\"salesPromotionExpense.length !=0\\\" class=\\\"row\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"heading-bg mb0\\\">\\n              <h2>Sales Permoton Expenses</h2>\\n            </div>\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"w180\\\">Date</th>\\n                  <th>Activity Type</th>\\n                  <th class=\\\"w100\\\">Place of Activity</th>\\n                  <th class=\\\"w100\\\">No Of Attendees</th>\\n                  <th class=\\\"w110 text-right\\\">Rental Exp.</th>\\n                  <th class=\\\"w100 text-right\\\">Food Exp.</th>\\n                  <th class=\\\"w110 text-right\\\">Av-Aids Exp.</th>\\n                  <th class=\\\"w80 text-right\\\">Gift Exp.</th>\\n                  <th class=\\\"w110 text-right\\\">Misc Exp.</th>\\n                  <th>Remark</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\" let promation of salesPromotionExpense\\\">\\n                    <td class=\\\"w180\\\"> {{promation.date |date:'EEEE, MMMM d, y'}}</td>\\n                    <td *ngIf=\\\"promation.salesActivityType==1\\\">Mechanic get together</td>\\n                    <td *ngIf=\\\"promation.salesActivityType==2\\\"> Retailer get together</td>\\n                    <td *ngIf=\\\"promation.salesActivityType==3\\\">van Campaign</td>\\n                    <td *ngIf=\\\"promation.salesActivityType==4\\\">Stall Campaign</td>\\n                    <td *ngIf=\\\"promation.salesActivityType==5\\\">Exhibition Participation</td>\\n                    <td *ngIf=\\\"promation.salesActivityType==6\\\">Signboard</td>\\n                    <td *ngIf=\\\"promation.salesActivityType==7\\\">Wall/Shop Painting</td>\\n                    <td *ngIf=\\\"promation.salesActivityType==8\\\">GiveAways</td>\\n                    <td *ngIf=\\\"promation.salesActivityType==9\\\">Printing Of Lesafelts,banners, posters etc.</td>\\n                    <td class=\\\"w100\\\">{{promation.placeOfActivity}}</td>\\n                    <td class=\\\"w100\\\">{{promation.noOfAttendees}}</td>\\n                    <td class=\\\"w110 text-right\\\">{{promation.rentalExpenses|currency: 'INR':true}}</td>\\n                    <td class=\\\"w100 text-right\\\"> {{promation.foodExpense|currency: 'INR':true}}</td>\\n                    <td class=\\\"w110 text-right\\\">{{promation.avAidsExpense|currency: 'INR':true}}</td>\\n                    <td class=\\\"w80 text-right\\\">  {{promation.giftsExpense|currency: 'INR':true}}</td>\\n                    <td class=\\\"w110 text-right\\\"> {{promation.miscExpense|currency: 'INR':true}}</td>\\n                    <td> {{promation.remarks}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"miscExpense.length!=0\\\" class=\\\"row\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"heading-bg  mb0\\\">\\n              <h2>Misc Expense</h2>\\n            </div>\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr >\\n                  \\n                  <th class=\\\"w200\\\">Date</th>\\n                  <th class=\\\"w200\\\">Nature Of Exp.</th>\\n                  <th class=\\\"w200\\\">Beneficiaries Name</th>\\n                  <th class=\\\"w200\\\">Place Of Expense</th>\\n                  <th class=\\\"w100 text-right\\\">Amount</th>\\n                  <th>Remark</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let misc of miscExpense\\\">\\n                    <td class=\\\"w200\\\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\\n                    <td *ngIf=\\\"misc.miscActivityType==1\\\" class=\\\"w200\\\">Entertainment Expenses</td>\\n                    <td *ngIf=\\\"misc.miscActivityType==2\\\" class=\\\"w200\\\">Gift To Dealers</td>\\n                    <td *ngIf=\\\"misc.miscActivityType==3\\\" class=\\\"w200\\\">Lunch/Dinner With Team</td>\\n                    <td *ngIf=\\\"misc.miscActivityType==4\\\" class=\\\"w200\\\">Training Program</td>\\n                    <td *ngIf=\\\"misc.miscActivityType==5\\\" class=\\\"w200\\\"> Other</td>\\n                    <td class=\\\"w200\\\">{{misc.nameOfBeneficiary}}</td>\\n                    <td class=\\\"w200\\\">{{misc.placeOfExpense}}</td>\\n                    <td class=\\\"w100 text-right\\\"> &#x20B9; {{misc.amount|currency: 'INR':true}}</td>\\n                    <td> {{misc.remarks}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"outStationExpense.length!=0\\\" class=\\\"row\\\">\\n          <div *ngIf=\\\"outStationExpense.foodExpenses.length!=0\\\" class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"heading-bg  mb0\\\">\\n              <h2>Food Expense</h2>\\n            </div>\\n            \\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"w200\\\">Date Of Visit</th>\\n                  <th class=\\\"w110\\\">City</th>\\n                  <th class=\\\"w150\\\">Bill Amount</th>\\n                  <th class=\\\"w300\\\">Remark</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let foodExpense of outStationExpense.foodExpenses\\\">\\n                    <td class=\\\"w200\\\"> {{foodExpense.date|date:'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w110\\\">{{foodExpense.city}}</td>\\n                    <td class=\\\"w150\\\">{{foodExpense.billAmount}}</td>\\n                    <td class=\\\"w300\\\">{{foodExpense.remarks}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n          </div>\\n          <div *ngIf=\\\"outStationExpense.outStationLocalExp.length!=0\\\" class=\\\"cs-table left-right-20\\\">\\n            \\n            <div class=\\\"heading-bg  mb0\\\">\\n              <h2>Local Expense</h2>\\n            </div>\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"w200\\\">Date Of Visit</th>\\n                  <th class=\\\"w110\\\">From</th>\\n                  <th class=\\\"w110\\\">To</th>\\n                  <th class=\\\"w150\\\">Modal Of Travel</th>\\n                  <th class=\\\"w130\\\">Fare</th>\\n                  \\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let outTravel of outStationExpense.outStationLocalExp\\\">\\n                    <td class=\\\"w200\\\"> {{outTravel.date |date:'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w110\\\">{{outTravel.from}}</td>\\n                    <td class=\\\"w110\\\">{{outTravel.to}}</td>\\n                    <td class=\\\"w150\\\">\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==10\\\">AUTO</span>\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==1\\\">BUS</span>\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==6\\\"> AC TAXI</span>\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==7\\\">NON-AC TAXI</span>\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==8\\\">TWO WHEELER</span>\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==5\\\">METRO</span>\\n                    </td>\\n                    <td class=\\\"w130\\\">{{outTravel.fare}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n          </div>\\n          <div *ngIf=\\\"outStationExpense.outStationTravelExp.length!=0\\\" class=\\\"cs-table left-right-20\\\">\\n            \\n            <div class=\\\"heading-bg  mb0\\\">\\n              <h2>Travel Expense</h2>\\n            </div>\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"w200\\\">Date Of Depature</th>\\n                  <th class=\\\"w150\\\">From</th>\\n                  <th class=\\\"w200\\\">Date of Arrival</th>\\n                  <th class=\\\"w150\\\">TO</th>\\n                  <th class=\\\"w150\\\">Mode of Travel</th>\\n                  <th class=\\\"w130\\\">Class</th>\\n                  \\n                  <th class=\\\"w130\\\">Ticket No</th>\\n                  <th class=\\\"w130 \\\">Amount</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let outTravel of outStationExpense.outStationTravelExp\\\">\\n                    <td class=\\\"w200\\\"> {{outTravel.departureTime |date:'medium'}}</td>\\n                    <td class=\\\"w150\\\">{{outTravel.departureStation}}</td>\\n                    <td class=\\\"w200\\\">{{outTravel.arrivalTime |date:'medium'}}</td>\\n                    <td class=\\\"w150\\\">{{outTravel.arrivalStation}}</td>\\n                    <td class=\\\"w150\\\">\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==1\\\">BUS</span>\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==2\\\">TRAIN</span>\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==3\\\">AIRLINE</span>\\n                      <span *ngIf=\\\"outTravel.modeOfTravel==5\\\">TEXI</span>\\n                    </td>\\n                    <td class=\\\"w130\\\">{{outTravel.class}}</td>\\n                    \\n                    <td class=\\\"w130\\\">{{outTravel.ticketNo}}</td>\\n                    <td class=\\\"w130\\\">{{outTravel.amount}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n          </div>\\n          <div *ngIf=\\\"outStationExpense.outStationHotelExp.length!=0\\\" class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"heading-bg  mb0\\\">\\n              <h2>Hotel Expense</h2>\\n            </div>\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"w200\\\">Check In Date</th>\\n                  <th class=\\\"w200\\\">Check Out Date</th>\\n                  <th class=\\\"w110\\\">City</th>\\n                  <th class=\\\"w150\\\">Hotel Name</th>\\n                  <th class=\\\"w130\\\">Amount</th>\\n                  <th>Remark</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let outTravel of outStationExpense.outStationHotelExp\\\">\\n                    <td class=\\\"w200\\\"> {{outTravel.checkInDate|date:'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w200\\\">{{outTravel.checkOutDate|date:'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w110\\\">{{outTravel.city}}</td>\\n                    <td class=\\\"w150\\\">{{outTravel.hotelName}}</td>\\n                    <td class=\\\"w130\\\">{{outTravel.billAmount}}</td>\\n                    <td >{{outTravel.remarks}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n          </div>\\n          <div *ngIf=\\\"outStationExpense.miscExpenses.length!=0\\\" class=\\\"row\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"heading-bg  mb0\\\">\\n                <h2>Misc Expense</h2>\\n              </div>\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr >\\n                    \\n                    <th class=\\\"w200\\\">Date</th>\\n                    <th class=\\\"w200\\\">Nature Of Exp.</th>\\n                    <th class=\\\"w200\\\">Beneficiaries Name</th>\\n                    <th class=\\\"w200\\\">Place Of Expense</th>\\n                    <th class=\\\"w100 text-right\\\">Amount</th>\\n                    <th>Remark</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let misc of outStationExpense.miscExpense\\\">\\n                      <td class=\\\"w200\\\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==1\\\" class=\\\"w200\\\">Entertainment Expenses</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==2\\\" class=\\\"w200\\\">Gift To Dealers</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==3\\\" class=\\\"w200\\\">Lunch/Dinner With Team</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==4\\\" class=\\\"w200\\\">Training Program</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==5\\\" class=\\\"w200\\\"> Other</td>\\n                      <td class=\\\"w200\\\">{{misc.nameOfBeneficiary}}</td>\\n                      <td class=\\\"w200\\\">{{misc.placeOfExpense}}</td>\\n                      <td class=\\\"w100 text-right\\\"> &#x20B9; {{misc.amount|currency: 'INR':true}}</td>\\n                      <td> {{misc.remarks}}</td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n      </div>\\n    </div>\\n    \\n    <!-- <div class=\\\"fixed-btn\\\">\\n      <a class=\\\"bottom-btn\\\" mat-button routerLink=\\\"/expenseclaim\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n    </div> -->\\n    \\n  </div>\\n  \\n  <div class=\\\"h100\\\"></div>\\n  \\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZGV0YWlsLWJ5LWRhdGUvZGV0YWlsLWJ5LWRhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-detail-by-date',\n  templateUrl: './detail-by-date.component.html',\n  styleUrls: ['./detail-by-date.component.scss']\n})\nexport class DetailByDateComponent implements OnInit {\n\n  expenseId:any;\n  data:any={};\n  date:any;\n  user:any={};\n  userType:any;\n  userId:any;\n  userRole:any;\n  expenseDetailList:any=[];\n  expenseDate:any;\n  loader:any=false;\n  reasonDiv:any=false;\n  localConveyances:any=[];\n  salesPromotionExpense:any=[];\n  outStationExpense:any=[];\n  miscExpense:any=[];\n  statusValue=['Forward For Approval','Reject'];\n  // today=moment().\n  constructor(public route:ActivatedRoute,public service:ConstantService) { \n    this.route.params.subscribe( params => {\n      console.log(params);\n      this.expenseId=params.id;\n      console.log(this.date ,\"&\" , this.expenseId);\n      if(params)\n      {\n          this.getExpenseDetail();\n        }\n      });\n      this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n   \n  }\n\n  ngOnInit() {\n  }\n  url:any;\n  requestfn:any;\n  api:any;\n  getExpenseDetail()\n  {\n    this.loader=true;\n    this.service.fileData(\"\",\"expense/detail/\"+this.expenseId).subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      this.getUserList();\n      if(result['status']=='Success')\n      {\n        this.expenseDetailList=result['data'];\n        console.log(this.expenseDetailList);\n        this.localConveyances=this.expenseDetailList.localHQExpense.localConveyances;\n        this.salesPromotionExpense=this.expenseDetailList.salesPromotionExpense.salesPromotionExps;\n        this.outStationExpense=this.expenseDetailList.outStationExpense;\n        this.miscExpense=this.expenseDetailList.miscExpense.miscExp;\n\n        console.log( this.outStationExpense);\n        this.url = this.service.dburl;\n        this.requestfn = 'download/document/';\n        this.api = this.url+this.requestfn;\n       \n      }\n    })\n  }\n\n  financeUserList:any=[];\n  getUserList()\n  {\n    this.loader=true;\n    this.service.fetchData({role:17, \"currentPage\": 1,\"pageSize\": 50},\"user/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.financeUserList=result['data'];\n      }\n    })\n  }\n\n  // expenseId:any=[];\n  // action(event,id,index)\n  // {\n  //   if(event.checked)\n  //   {\n  //     this.expenseId.push(id);\n  //     console.log(this.expenseId);\n  //   }\n  //   else\n  //   {\n  //     this.expenseId.splice(index,1);\n  //   }\n  // }\n\n  expenseIds:any=[];\n  // updateStatus()\n  // {\n  //   console.log(this.data.status);\n  //   this.expenseIds.push(this.expenseId);\n  //   this.data.userId=this.userId;\n  //   this.data.expenseIds=this.expenseIds;\n  //   console.log(this.data);\n  //   this.service.fetchData(this.data,\"expense/updatestatus\").subscribe((result)=>{\n  //     console.log(result);\n  //     if(result['status']=='Success')\n  //     {\n  //       this.data={};\n  //       this.getExpenseDetail();\n  //     }\n      \n  //   })\n    \n  // }\n\n  changeStatus()\n  {\n    // this.data={};\n    if(this.data.status==6)\n    {\n      this.data.expenseId=this.expenseId;\n      this.data.expenseApprovedRejectedBy=this.userId;\n      this.data.expenseApprovedRejectedOn=moment().format('YYYY-MM-DD')\n\n    }\n    else{\n      this.data.expenseId=this.expenseId;\n      this.data.expenseApprovedBy=this.userId;\n      this.data.expenseApprovedOn=moment().format('YYYY-MM-DD')\n    }\n    this.service.fetchData(this.data,\"expense/approve\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.getExpenseDetail();\n      }\n      \n    })\n  }\n\n  statusUpdate()\n  {\n\n    if(this.data.status==4)\n    {\n      this.data.expenseSanctionRejectedBy=this.userId\n    }\n    this.data.expenseId=this.expenseId\n    // this.data.expenseSanctionedBy=this.userId\n    this.data.expenseSanctionedOn=moment().format('YYYY-MM-DD');\n   console.log(this.data);\n   this.service.fetchData(this.data,\"expense/sanction\").subscribe((result)=>{\n     console.log(result);\n     if(result['status']=='Success')\n     {\n       this.getExpenseDetail()\n     }\n     \n   })\n    \n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n    </div>\\n  \\n<div class=\\\"middle-container\\\">\\n  <div class=\\\"page-heading\\\">\\n    <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"h-icon\\\">\\n    <div class=\\\"heading-text\\\">\\n      <h2>Expense</h2>\\n      <p>Add Expense</p>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"container-outer\\\" >\\n  <div class=\\\"container\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"sprate-box pt0 mb15\\\">\\n          <div class=\\\"cs-heading\\\">\\n            <h2>Local EXPENSE</h2>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <form (ngSubmit)=\\\"f.form.valid && LocalConvenseExpense()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"cs-bill\\\" >\\n        <div class=\\\"collaps flat-collaps mt15\\\">\\n          <div class=\\\"collaps-area\\\">\\n            <mat-accordion>\\n              <mat-expansion-panel>\\n                <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                  <mat-panel-title>\\n                    TRAVEL ENTITLEMENT\\n                  </mat-panel-title>\\n                </mat-expansion-panel-header>\\n                <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      \\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput [matDatepicker]=\\\"days\\\" [max]='currentDate' readonly placeholder=\\\"Date Of Visit\\\" name=\\\"visitDate\\\" #visitDate=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.visitDate\\\" >\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"days\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #days></mat-datepicker>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"From\\\" name=\\\"from\\\" #from=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.from\\\" >\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"To\\\" name=\\\"to\\\" #to=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.to\\\" >\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <mat-select placeholder=\\\"Type of Mode\\\" name=\\\"modeType\\\" #modeType=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.modeType\\\" >\\n                                    <mat-option *ngIf=\\\"allowanceList.length!=0 && (allowanceList.selfCarPerKM!=0 ||allowanceList.selfBikePerKM!=0 )\\\" (click)=\\\"readonlyValue(localHQExpense.modeType)\\\" value=1>SELF VEHICLE</mat-option>\\n                                    <mat-option (click)=\\\"readonlyValue(localHQExpense.modeType)\\\" value=2>PUBLIC TRANSPORT</mat-option>\\n                                  </mat-select>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <mat-select placeholder=\\\"Mode Of Travel\\\" name=\\\"mode\\\" #mode=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.mode\\\" >\\n                                    <mat-option value=10 *ngIf=\\\"localHQExpense.modeType==2\\\">AUTO</mat-option>\\n                                    <mat-option value=1 *ngIf=\\\"localHQExpense.modeType==2\\\">BUS</mat-option>\\n                                    <mat-option value=6 *ngIf=\\\"localHQExpense.modeType==2\\\">AC TAXI</mat-option>\\n                                    <mat-option value=7 *ngIf=\\\"localHQExpense.modeType==2\\\">NON-AC TAXI </mat-option>\\n                                    <mat-option value=5 *ngIf=\\\"localHQExpense.modeType==2\\\">METRO </mat-option>\\n                                    <mat-option value=9 *ngIf=\\\"localHQExpense.modeType==1 && allowanceList.selfCarPerKM!=0\\\">CAR</mat-option>\\n                                    <mat-option value=8 *ngIf=\\\"localHQExpense.modeType==1 && allowanceList.selfBikePerKM!=0\\\">BIKE </mat-option>\\n                                    \\n                                  </mat-select>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div *ngIf=\\\"localHQExpense.modeType==1\\\" class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Vehicle No\\\" type=\\\"text\\\" name=\\\"vehicleNumber\\\" #vehicleNumber=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.vehicleNumber\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div  class=\\\"row\\\">\\n                            <div *ngIf=\\\"localHQExpense.modeType==1\\\" class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"KMs Covered\\\" type=\\\"number\\\" (input)=\\\"calculateAmount(localHQExpense.mode,localHQExpense.distanceKMS)\\\" name=\\\"distanceKMS\\\" #distanceKMS=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.distanceKMS\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Amount\\\" type=\\\"number\\\" name=\\\"amount\\\" #amount=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.amount\\\" readonly={{readonlyArea}} >\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Other Exp.\\\" type=\\\"number\\\" name=\\\"otherExpense\\\" #otherExpense=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.otherExpense\\\" >\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h165\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"localHQExpense.remarks\\\"></textarea>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s12 padding0 mt15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!localHQExpense.remarks || !localHQExpense.visitDate|| !localHQExpense.from || !localHQExpense.to ||!localHQExpense.mode ||!localHQExpense.modeType ||!localHQExpense.otherExpense \\\" (click)=\\\"addToLocalConvenseList()\\\" type=\\\"button\\\">Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n              </mat-expansion-panel>\\n            </mat-accordion>\\n          </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"localConveyances.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr>\\n                    <th class=\\\"w160\\\">Date Of Visit</th>\\n                    <th class=\\\"w110\\\">From</th>\\n                    <th class=\\\"w110\\\">To</th>\\n                    <th class=\\\"w150\\\">Modal Of Type</th>\\n                    <th class=\\\"w150\\\">Modal Of Travel</th>\\n                    <th class=\\\"w130\\\">KMs Covered</th>\\n                    <th class=\\\"w110 text-right\\\">Amount</th>\\n                    <th class=\\\"w110 text-right\\\">Other Exp.</th>\\n                    <th>Remark</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let Localexpense of localConveyances;let index=index\\\">\\n                      <td class=\\\"w160\\\"> {{Localexpense.visitDate |date:'EEEE, MMMM d, y'}}</td>\\n                      <td class=\\\"w110\\\">{{Localexpense.from}}</td>\\n                      <td class=\\\"w110\\\">{{Localexpense.to}}</td>\\n                      <td class=\\\"w150\\\">\\n                          <span *ngIf=\\\"Localexpense.modeType==1\\\">SELF</span>\\n                          <span *ngIf=\\\"Localexpense.modeType==2\\\">PUBLIC TRANSPORT</span>\\n                          <span *ngIf=\\\"Localexpense.mode==10\\\">AUTO</span>\\n                          <span *ngIf=\\\"Localexpense.mode==1\\\">BUS</span>\\n                          <span *ngIf=\\\"Localexpense.mode==6\\\">AC-TAXI</span>\\n                          <span *ngIf=\\\"Localexpense.mode==7\\\">NON AC-TAXI</span>\\n                          <span *ngIf=\\\"Localexpense.mode==5\\\">METRO</span>\\n                          <span *ngIf=\\\"Localexpense.mode==9\\\">CAR</span>\\n                          <span *ngIf=\\\"Localexpense.mode==8\\\">BIKE</span>\\n                      </td>\\n                      <td class=\\\"w130 \\\">{{Localexpense.distanceKMS}}</td>\\n                      <td class=\\\"w110 text-right\\\"> &#x20B9; {{Localexpense.amount}}</td>\\n                      <td class=\\\"w130 text-right\\\"> &#x20B9; {{Localexpense.otherExpense}}</td>\\n                      <td>{{Localexpense.remarks}}\\n                        <div class=\\\"action-btns\\\">\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"removeLocalConvenseList(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n              \\n            </div>\\n          </div>\\n        <div class=\\\"row mt15\\\">\\n          <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-file-multiple scroll\\\">\\n                <ul>\\n                  <li class=\\\"w110 pr10\\\" *ngFor=\\\"let urlData of localExpense.documents;let i=index\\\">\\n                    <label>\\n                        <img *ngIf=\\\"urlData.extension=='.jpg'\\\" src=\\\"{{api+urlData.documentId+'/'+'2'}}\\\">\\n                        <img *ngIf=\\\"urlData.extension=='.pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                      <a (click)=\\\"deleteimg(urlData.documentId,urlData.fileName)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                    </label>\\n                  </li>\\n                  <li class=\\\"w110 pr10\\\">\\n                    <div class=\\\"cs-file wp100\\\">\\n                      <label>\\n                        <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\">\\n                        <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                      </label>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n      </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sm-table\\\">\\n              <table>\\n                <tr>\\n                  <th class=\\\"text-right\\\">Local Travel Expense</th>\\n                  <th class=\\\"w30 text-center\\\">:</th>\\n                  <td class=\\\"w100 text-right\\\">&#x20B9; {{localExp}}</td>\\n                </tr>\\n                <tr>\\n                  <th class=\\\"text-right\\\">Other Type Expense</th>\\n                  <th class=\\\"text-center\\\">:</th>\\n                  <td class=\\\"text-right\\\">&#x20B9; {{otherLocalExp}}</td>\\n                </tr>\\n                <tr>\\n                  <th class=\\\"text-right\\\">Total</th>\\n                  <th class=\\\"text-center\\\">:</th>\\n                  <td class=\\\"text-right\\\">&#x20B9; {{totalLocalExp}}</td>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-btn fixedd mt15  text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"localexpense(1)\\\" >Save as Draft</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-btn fixedd mt15  text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"localexpense(2)\\\">Save For Approval</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZWRpdC1sb2NhbC1leHBlbnNlL2VkaXQtbG9jYWwtZXhwZW5zZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\nimport { SnackBarOverview } from 'src/app/toast';\n\n@Component({\n  selector: 'app-edit-local-expense',\n  templateUrl: './edit-local-expense.component.html',\n  styleUrls: ['./edit-local-expense.component.scss']\n})\nexport class EditLocalExpenseComponent implements OnInit {\n  userId:any;\n  expenseList:any=[];\n  userName:any;\n  loader:any=false;\n  div:any=false\n  user:any={};\n  userType:any;\n  userRole:any;\n  expenseId:any;\n  localExpense:any={}\n  localHQExpense:any={};\n  localConveyances:any=[];\n  designation:any;\n  constructor(public route:ActivatedRoute,public service:ConstantService,public dialog:DialogComponent, public toast:SnackBarOverview,public router:Router) {\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    this.designation=this.user.data.salesUser.designation;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    this.route.params.subscribe( params => {\n      console.log(params);\n      this.expenseId = params.id;\n      console.log(this.expenseId);\n      \n      if(this.expenseId)\n      {\n        this.getExpenseList(this.expenseId);\n        this.getAllowanceList(this.designation)\n      }\n      });\n   }\n\n  ngOnInit() {\n  }\n  url:any;\n  requestfn:any;\n  api:any;\n  SalesExpenseList:any=[];\n  // localConveyances:any=[]\n  getExpenseList(expenseId)\n  {\n    this.loader=true\n    console.log(expenseId);\n    \n    this.service.fileData(\"\",\"expense/detail/\"+expenseId).subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.localExpense=result['data'];\n        console.log(this.localExpense);\n        console.log(this.localExpense.localHQExpense.localConveyances);\n        this.localConveyances=this.localExpense.localHQExpense.localConveyances;\n        this.calculateLocalExpense(this.localConveyances);\n        this.url = this.service.dburl;\n        this.requestfn = 'download/document/';\n        this.api = this.url+this.requestfn;\n        // this.calculatePromationalExpense(this.SalesExpenseList)\n      }\n    })\n  }\n\n  localexpense(status)\n  {\n    this.localExpense.status=status;\n  }\n\n  LocalConvenseExpense()\n  {\n    this.localExpense.localHQExpense={\"localConveyances\":this.localConveyances};\n    this.localExpense.userId=this.userId;\n    // this.localConvense.department=this.userInformation.userType;\n    // this.localConvense.expenseType=this.expenseForm.form;\n    // this.localConvense.expenseSanctioner=this.expenseForm.expenseSanctioner;\n    this.localExpense.claimAmount=this.totalLocalExp;\n    this.localExpense.actualExpenseAmount=this.totalLocalExp;\n    console.log(this.localExpense);\n    this.loader=true;\n    this.service.fetchData(this.localExpense,\"expense/update\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        // this.uploadBillAttechment(result['data']);\n        this.router.navigate(['/expense-list']);\n        this.toast.openSucess(\"Expense\",\"Update SuccessFully\");\n      }\n    })\n  }\n\n  allowanceList:any=[];\n  getAllowanceList(designation)\n  {\n    this.loader=true\n    this.service.fetchData({designation:designation},\"allowance/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.allowanceList=result['data'][0];\n      }\n      \n    })\n  }\n\n  readonlyArea=false;\n  readonlyValue(value)\n  {\n    if(value==1)\n    {\n      this.readonlyArea=true\n    }\n    if(value==2)\n    {\n      this.readonlyArea=false;\n    }\n    \n  }\n\n  calculateAmount(mode:any,km:any)\n  {\n    console.log(this.allowanceList);\n    if(mode==9)\n    {\n      this.localHQExpense.amount=parseFloat(this.allowanceList.selfCarPerKM)*parseFloat(km);\n    }\n    if(mode==8)\n    {\n      this.localHQExpense.amount=parseFloat(this.allowanceList.selfBikePerKM)*parseFloat(km);\n\n    }\n  }\n  addToLocalConvenseList()\n  {\n    console.log(this.localHQExpense);\n    this.localConveyances.push(this.localHQExpense)\n    this.localHQExpense={};\n    this.calculateLocalExpense(this.localConveyances);\n    console.log(this.localConveyances);\n  }\n\n  removeLocalConvenseList(index)\n  {\n    this.localConveyances.splice(index,1);\n    this.calculateLocalExpense(this.localConveyances);\n  }\n  otherLocalExp:any=0;\n  localExp:any=0;\n  totalLocalExp:any=0;\n  calculateLocalExpense(localExpArray)\n  {\n    this.otherLocalExp=0;\n    this.localExp=0;\n    this.totalLocalExp=0;\n    for(let i=0;i<localExpArray.length;i++)\n    {\n      this.otherLocalExp=parseInt(this.otherLocalExp)+parseInt(localExpArray[i].otherExpense);\n      this.localExp=parseInt(this.localExp)+parseInt(localExpArray[i].amount);\n    }\n    this.totalLocalExp=parseInt(this.otherLocalExp)+parseInt(this.localExp);\n  }\n\n  selectedFile:any=[];\n  documentUrl:any=[];\n  insertImage(data)\n  {\n          this.selectedFile=[];\n          let files = data.target.files;\n          if (files) {\n            for (let file of files) {\n              let reader = new FileReader();\n              reader.onload = (e: any) => {\n                this.documentUrl.push(e.target.result);\n              }\n              reader.readAsDataURL(file);\n            }\n          }\n          console.log(this.documentUrl);\n          console.log(data.target.files.length);\n          for(var i=0; i<data.target.files.length; i++)\n          {\n            this.selectedFile.push(data.target.files[i]);\n          }\n\n          setTimeout(() => {\n            this.Insert_Image();\n          }, 500);\n  }\n  misc_Expense_Document;\n  Insert_Image()\n  {\n          this.misc_Expense_Document=new FormData;\n          this.misc_Expense_Document.action=1;\n          this.misc_Expense_Document.binaryData=this.documentUrl[this.documentUrl.length - 1];\n          this.misc_Expense_Document.documentType=4;\n          this.misc_Expense_Document['documentName'] = this.selectedFile[0].name;\n          this.misc_Expense_Document.referenceId=this.expenseId;\n          this.loader=true;\n          for(var i=0; i<this.selectedFile.length; i++)\n          {\n            if(this.selectedFile[i].type == 'application/pdf') {\n              this.misc_Expense_Document['fileName'] = \"document\"+i+\".pdf\",this.selectedFile[i];\n            } else {\n              this.misc_Expense_Document['fileName'] = \"document\"+i+\".jpg\",this.selectedFile[i];\n            }\n            // this.misc_Expense_Document.fileName = \"image\"+i+\".jpg\",this.selectedFile[i];\n          }\n          console.log(this.misc_Expense_Document);\n          let value=[];\n          value[0]=this.misc_Expense_Document;\n          console.log(value);\n\n          this.service.fetchData(value,\"document/update\").subscribe((resp)=>\n          {\n              console.log(resp);\n              if(resp)\n              {\n                  this.loader=false;\n                  this.getExpenseList(this.expenseId);\n                  this.toast.openSucess('Image Added Sucessfully','');\n                \n              }\n          });\n  }\n\n  picdata:any={}\n  picvalue:any=[];\n  deleteimg(picid,filename)\n  {\n    console.log(picid,filename);\n    this.picdata.documentId=picid;\n    this.picdata.action=2;\n    this.picdata.fileName=filename;\n    this.picdata.documentType=4;\n    this.picdata.referenceId=this.expenseId;\n    this.picvalue.push(this.picdata);\n    console.log(this.picvalue);\n    this.dialog.delete(\"Document\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.loader=true;\n        this.service.fetchData(this.picvalue,\"document/update\").subscribe((resp)=>\n        { \n          console.log(resp);\n          if(resp['status']=='Success')\n          {\n            this.toast.openSucess('Image Deleted Sucessfully','');\n            this.loader=false;\n            this.getExpenseList(this.expenseId);\n            this.picvalue=[];\n          }\n          \n        });\n      }\n    });\n  }\n\n\n\n\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n    </div>\\n  \\n<div class=\\\"middle-container\\\">\\n  <div class=\\\"page-heading\\\">\\n    <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"h-icon\\\">\\n    <div class=\\\"heading-text\\\">\\n      <h2>Expense</h2>\\n      <p>Add Expense</p>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"container-outer\\\" >\\n  <div class=\\\"container\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"sprate-box pt0 mb15\\\">\\n          <div class=\\\"cs-heading\\\">\\n            <h2>Out Station EXPENSE</h2>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <form (ngSubmit)=\\\"f1.form.valid && outTravelExpense()\\\" #f1=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"cs-bill\\\"  >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2> BASIC INFORMATION</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Purpose Of Visit\\\" type=\\\"text\\\" id=\\\"purposeOfVisit\\\" name=\\\"purposeOfVisit\\\" #purposeOfVisit=\\\"ngModel\\\" [(ngModel)]=\\\"OutStationExpense.purposeOfVisit\\\"  [ngClass]=\\\"{'has-error' : purposeOfVisit.invalid }\\\" required>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f1.submitted && purposeOfVisit.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"purposeOfVisit.errors.required\\\">Purpose Of Visit required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"ADVANCE AMOUNT\\\" type=\\\"number\\\" id=\\\"advanceAmount\\\" name=\\\"advanceAmount\\\" #advanceAmount=\\\"ngModel\\\" [(ngModel)]=\\\"OutStationExpense.advanceAmount\\\"  [ngClass]=\\\"{'has-error' : advanceAmount.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f1.submitted && advanceAmount.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"advanceAmount.errors.required\\\">Purpose Of Visit required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                </div>\\n              </div>\\n            </div>\\n         \\n          </div>\\n        </div>\\n\\n           \\n        <div class=\\\"collaps flat-collaps mt15\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      TRAVEL ENTITLEMENT\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"col s4 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">{{journyExpense.modeOfTravel}}\\n                            <mat-select placeholder=\\\"Mode Of Travel\\\" name=\\\"modeOfTravel\\\" #modeOfTravel=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.modeOfTravel\\\" >\\n                              <mat-option [value]=1>BUS</mat-option>\\n                              <mat-option [value]=2>TRAIN</mat-option>\\n                              <mat-option [value]=3>AIRLINE</mat-option>\\n                              <mat-option [value]=5>TAXI </mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s4\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"Mode\\\" name=\\\"class\\\" #class=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.class\\\">\\n                              <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='AC Buses' *ngIf=\\\"journyExpense.mode==1\\\" >AC Buses </mat-option>\\n                              <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='Non - AC Buses' *ngIf=\\\"journyExpense.mode==1\\\">Non - AC Buses</mat-option>\\n                              <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='2A' *ngIf=\\\"journyExpense.mode==2\\\">2A</mat-option>\\n                              <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='3A' *ngIf=\\\"journyExpense.mode==2\\\">3A</mat-option>\\n                              <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='SL' *ngIf=\\\"journyExpense.mode==2\\\">SL</mat-option>\\n                              <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='Economy Class' *ngIf=\\\"journyExpense.mode==3\\\">Economy Class </mat-option>\\n                              <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='Private' *ngIf=\\\"journyExpense.mode==5\\\">Private</mat-option>\\n                              <mat-option (click)=\\\"checkValid(journyExpense.class)\\\"value='Shared' *ngIf=\\\"journyExpense.mode==5\\\">Shared</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s4\\\" *ngIf=\\\"modeError==1\\\">\\n                        You Are Not Eligable for This Type of Mode\\n                      </div>\\n                      <div >\\n                        <div class=\\\"row mb0\\\">\\n                          <div class=\\\"col s12 pl0\\\">\\n                            <div class=\\\"heading-bg mb0 mt15 mrl24\\\">\\n                              <h2>DEPARTURE</h2>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s4 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput [matDatepicker]=\\\"nine\\\"  readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"departureDate\\\" #departureDate=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.departureDate\\\">\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"nine\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #nine></mat-datepicker>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s4\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Station\\\" name=\\\"departureStation\\\" #departureStation=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.departureStation\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"col s4\\\">\\n                            <div class=\\\"control-field mt14\\\">\\n                              <div class=\\\"cs-input\\\">\\n                                <input [owlDateTimeTrigger]=\\\"dt5\\\" [owlDateTime]=\\\"dt5\\\" placeholder=\\\"Time\\\" name=\\\"departureTime\\\" #departureTime=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.departureTime\\\">\\n                                <owl-date-time [pickerType]=\\\"'timer'\\\" #dt5></owl-date-time>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        \\n                        <div class=\\\"row mb0\\\">\\n                          <div class=\\\"col s12 pl0\\\">\\n                            <div class=\\\"heading-bg  mb0 mt15\\\">\\n                              <h2>ARRIVAL</h2>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s4\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput [matDatepicker]=\\\"elevn\\\" readonly [min]=\\\"journyExpense.departureDate\\\" [max]=\\\"currentDate\\\" placeholder=\\\"Date\\\" name=\\\"arrivalDate\\\" #arrivalDate=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.arrivalDate\\\">\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"elevn\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #elevn></mat-datepicker>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s4\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Station\\\" name=\\\"arrivalStation\\\" #arrivalStation=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.arrivalStation\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"col s4\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <div class=\\\"cs-input mt14\\\">\\n                                <input [owlDateTimeTrigger]=\\\"dt4\\\" [owlDateTime]=\\\"dt4\\\" placeholder=\\\"Time\\\" name=\\\"arrivalTime\\\" #arrivalTime=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.arrivalTime\\\">\\n                                <owl-date-time [pickerType]=\\\"'timer'\\\" #dt4></owl-date-time>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <mat-divider class=\\\"left-right-15 mt15\\\"></mat-divider>\\n                        <div class=\\\"row\\\">\\n                          <div *ngIf=\\\"journyExpense.mode!=4\\\" class=\\\"col s4 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Detail Ticket No\\\" name=\\\"ticketNo\\\" #ticketNo=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.ticketNo\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s4 \\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Amount\\\" name=\\\"amount\\\" #amount=\\\"ngModel\\\" [(ngModel)]=\\\"journyExpense.amount\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    \\n                    <div  *ngIf=\\\"journyExpense.mode!=4\\\" class=\\\"col s12 mt15 mb15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!journyExpense.departureDate||!journyExpense.departureStation|| !journyExpense.departureTime||!journyExpense.arrivalStation||!journyExpense.arrivalDate||!journyExpense.arrivalTime||!journyExpense.modeOfTravel||!journyExpense.ticketNo||!journyExpense.amount\\\" (click)=\\\"addToOutTravelExpense()\\\">Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n        \\n        <div *ngIf=\\\"tmpJournyExpense.length!=0\\\" class=\\\"row mt15\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"text-center\\\">BUS/RAIL/AIR FARE</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-head  bdrt\\\">\\n              <table> \\n                <tr >\\n                  <th class=\\\"padding0 pt10 text-center\\\">\\n                    DEPARTURE\\n                    <table class=\\\"inner-table bdrt mt10\\\">\\n                      <tr>\\n                        <th class=\\\"text-center\\\">Date</th>\\n                        <th class=\\\"text-center\\\">Station</th>\\n                        <th class=\\\"text-center\\\">Time</th>\\n                      </tr>\\n                    </table>\\n                  </th>\\n                  <th class=\\\"padding0 pt10 text-center\\\">\\n                    ARRIVAL\\n                    <table class=\\\"inner-table bdrt mt10\\\">\\n                      <tr>\\n                        <th class=\\\"text-center\\\">Date</th>\\n                        <th class=\\\"text-center\\\">Station</th>\\n                        <th class=\\\"text-center\\\">Time</th>\\n                      </tr>\\n                    </table>\\n                  </th>\\n                  <th class=\\\"w150 text-center\\\">Class & Mode Of Travel</th>\\n                  <th class=\\\"w100 text-center\\\">Status</th>\\n                  <th class=\\\"w150\\\">Deatil Of Ticket No. / K.M. (PVT. VEHICLE)</th>\\n                  <th class=\\\"w100 text-right\\\">Amount</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let journy of tmpJournyExpense;let index=index\\\">\\n                    <td class=\\\"padding0\\\">\\n                      <table class=\\\"inner-table\\\">\\n                        <tr>\\n                          <td class=\\\"text-center\\\">{{journy.departureDate |date:'EEEE, MMMM d, y'}}</td>\\n                          <td class=\\\"text-center\\\">{{journy.departureStation}}</td>\\n                          <td class=\\\"text-center\\\">{{journy.departureTime | date:'h:mm a'}}</td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                    <td class=\\\"padding0\\\">\\n                      <table class=\\\"inner-table\\\">\\n                        <tr>\\n                          <td class=\\\"text-center\\\">{{journy.arrivalDate|date:'EEEE, MMMM d, y'}}</td>\\n                          <td class=\\\"text-center\\\">{{journy.arrivalStation}}</td>\\n                          <td class=\\\"text-center\\\">{{journy.arrivalTime | date:'h:mm a'}}</td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                    <td class=\\\"w170 text-center\\\">\\n                        <span *ngIf=\\\"journy.modeOfTravel==1\\\"> BUS / </span>\\n                        <span *ngIf=\\\"journy.modeOfTravel==2\\\"> TRAIN / </span>\\n                        <span *ngIf=\\\"journy.modeOfTravel==3\\\"> AIRLINE / </span>\\n                        <span *ngIf=\\\"journy.modeOfTravel==5\\\"> TEXI / </span>\\n                        <span >{{journy.class}}</span></td>\\n                    <td class=\\\"w100 approved\\\">Allow</td>\\n                    <td *ngIf=\\\"journy.distanceKMS==null\\\" class=\\\"w150\\\">{{journy.ticketNo}}</td>\\n                    <td class=\\\"w100 text-right\\\">&#x20B9; {{journy.amount}}\\n                        <div class=\\\"action-btns\\\">\\n                            <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutTravelExps(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                          </div>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr class=\\\"active-col\\\">\\n                    <td class=\\\"padding0\\\">\\n                      <table class=\\\"inner-table\\\">\\n                        <tr>\\n                          <td>&nbsp;</td>\\n                          <td>&nbsp;</td>\\n                          <td>&nbsp;</td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                    <td class=\\\"padding0\\\">\\n                      <table class=\\\"inner-table\\\">\\n                        <tr>\\n                          <td>&nbsp;</td>\\n                          <td>&nbsp;</td>\\n                          <td>&nbsp;</td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                    <td class=\\\"w150 text-center\\\">&nbsp;</td>\\n                    <td class=\\\"w150 text-center\\\">&nbsp;</td>\\n                    <td class=\\\"w100\\\">Total</td>\\n                    <td class=\\\"w100 text-right\\\">&#x20B9; {{totalOutTravelExp}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"collaps flat-collaps mt15\\\">\\n          <div class=\\\"collaps-area\\\">\\n            <mat-accordion>\\n              <mat-expansion-panel>\\n                <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                  <mat-panel-title>\\n                    HOTEL\\n                  </mat-panel-title>\\n                </mat-expansion-panel-header>\\n                <div class=\\\"inner-body\\\">\\n                  <div class=\\\"from-fields\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6 pl0\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s6 pl0\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                              <input type=\\\"text\\\" placeholder=\\\"City\\\" aria-label=\\\"city\\\"  name=\\\"city\\\" [(ngModel)]=\\\"Arraycity.city\\\" (input)=\\\"cityList(Arraycity.city)\\\" matInput  [matAutocomplete]=\\\"city\\\">\\n                              <mat-autocomplete #city=\\\"matAutocomplete\\\" >\\n                                <mat-option (click)=\\\"selectedCity(city)\\\" *ngFor=\\\"let city of cityListArray\\\" value=\\\"{{city.city}}\\\">\\n                                  {{city.city}} / {{city.stateName}}\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                          <div class=\\\"col s6 pr0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput [matDatepicker]=\\\"thirteens\\\" readonly [max]='currentDate' placeholder=\\\"Check In Date\\\" name=\\\"checkInDate\\\" #checkInDate=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.checkInDate\\\">\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"thirteens\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #thirteens></mat-datepicker>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s6 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput [matDatepicker]=\\\"thirteen\\\" readonly [min]=\\\"outStationHotelExp.checkInDate\\\" [max]='currentDate' placeholder=\\\"Check Out Date\\\" name=\\\"checkOutDate\\\" #checkOutDate=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.checkOutDate\\\">\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"thirteen\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #thirteen></mat-datepicker>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s6 pr0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Hotel Name\\\" name=\\\"hotelName\\\" #hotelName=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.hotelName\\\" >\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s6 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Amount\\\" (input)=\\\"checkValidAmount(outStationHotelExp.billAmount)\\\"  name=\\\"billAmount\\\" #billAmount=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.billAmount\\\" >\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div *ngIf=\\\"hotelcitydiv==true\\\">\\n                          You Are not eligable for this Amount\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <textarea matInput placeholder=\\\"Remark\\\"name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"outStationHotelExp.remarks\\\" class=\\\"h168\\\"></textarea>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s12 mt15 mb15\\\">\\n                    <div class=\\\"cs-btn text-right\\\">\\n                      <div class=\\\"in-btn\\\">\\n                        <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!outStationHotelExp.checkInDate ||!outStationHotelExp.checkOutDate ||!outStationHotelExp.billAmount || !outStationHotelExp.hotelName || !outStationHotelExp.city || !outStationHotelExp.remarks\\\" (click)=\\\"outStationHotelExpList()\\\">Add To List</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-expansion-panel>\\n            </mat-accordion>\\n          </div>\\n        </div>\\n        \\n        \\n        <div *ngIf=\\\"tmpoutStationHotelExp.length!=0\\\" class=\\\"row mt15\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"w150\\\">City</th>\\n                  <th class=\\\"w120\\\">Check In Date</th>\\n                  <th class=\\\"w135\\\">Check Out Date</th>\\n                  <th class=\\\"w160\\\">Hotel name</th>\\n                  <th class=\\\"w100 text-right\\\">Amount</th>\\n                  <th class=\\\"w100\\\">Status</th>\\n                  <th>Remark</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\" let hotel of tmpoutStationHotelExp;let index=index\\\">\\n                    <td class=\\\"w150\\\">{{hotel.city.city}}</td>\\n                    <td class=\\\"w120\\\">{{hotel.checkInDate|date:'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w135\\\">{{hotel.checkOutDate|date:'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w160\\\">{{hotel.hotelName}}</td>\\n                    <td class=\\\"w100 text-right\\\">&#x20B9; {{hotel.billAmount}}</td>\\n                    <td class=\\\"w100 approved\\\" *ngIf=\\\"hotelCityError==0\\\" >Allow</td>\\n                    <td class=\\\"w100 reject\\\" *ngIf=\\\"hotelCityError==1\\\" >Not Allow</td>\\n                    <td><p>{{hotel.remarks}}</p>\\n                        <div class=\\\"action-btns\\\">\\n                            <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutHotelExps(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                          </div>\\n                    \\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n         <div class=\\\"collaps flat-collaps mt15\\\">\\n          <div class=\\\"collaps-area\\\">\\n            <mat-accordion>\\n              <mat-expansion-panel>\\n                <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                  <mat-panel-title>\\n                    FOOD\\n                  </mat-panel-title>\\n                </mat-expansion-panel-header>\\n                <div class=\\\"inner-body\\\">\\n                  <div class=\\\"from-fields\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6 pl0\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s6 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"example-full-width\\\">\\n                                <input type=\\\"text\\\" placeholder=\\\"City\\\" aria-label=\\\"city\\\"  name=\\\"city\\\" [(ngModel)]=\\\"Arraycity.city\\\" (input)=\\\"cityList(Arraycity.city)\\\" matInput  [matAutocomplete]=\\\"city1\\\">\\n                                <mat-autocomplete #city1=\\\"matAutocomplete\\\" >\\n                                  <mat-option (click)=\\\"selectedFoodExpenseCity(city)\\\" *ngFor=\\\"let city of cityListArray\\\" value=\\\"{{city.city}}\\\">\\n                                    {{city.city}} / {{city.stateName}}\\n                                  </mat-option>\\n                                </mat-autocomplete>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s6 pr0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput [matDatepicker]=\\\"thirteenss\\\"  placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"outStationFoodExp.date\\\">\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"thirteenss\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #thirteenss></mat-datepicker>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s6 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Amount\\\" (input)=\\\"checkValidFoodAmount(outStationFoodExp.billAmount)\\\" name=\\\"billAmount\\\" #billAmount=\\\"ngModel\\\" [(ngModel)]=\\\"outStationFoodExp.billAmount\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div *ngIf=\\\"foodCityError==1\\\">\\n                          You are not Eligable for this Amount\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h100\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"outStationFoodExp.remarks\\\" ></textarea>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s12 mt15 mb15\\\">\\n                    <div class=\\\"cs-btn text-right\\\">\\n                      <div class=\\\"in-btn\\\">\\n                        <button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"outStationFoodExpList()\\\" >Add To List</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-expansion-panel>\\n            </mat-accordion>\\n          </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"tmpoutStationFoodExp.length!=0\\\" class=\\\"row mt15\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"w200\\\">City</th>\\n                  <th class=\\\"w120\\\">Date</th>\\n                  <th class=\\\"w120\\\">Status</th>\\n                  <th class=\\\"w150 text-right\\\">Amount</th>\\n                  <th>Remark</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let food of tmpoutStationFoodExp;let index=index\\\">\\n                    <td class=\\\"w200\\\">{{food.city.city}}</td>\\n                    <td class=\\\"w120\\\">{{food.date}}</td>\\n                    <td class=\\\"w120 approved\\\" *ngIf=\\\"foodCityError==0\\\">Allow</td>\\n                    <td class=\\\"w120 reject\\\" *ngIf=\\\"foodCityError==0\\\">Not-Allow</td>\\n                    <td class=\\\"w150 text-right\\\">&#x20B9; {{food.billAmount}}</td>\\n                    <td><p>{{food.remarks}}</p>\\n                        <div class=\\\"action-btns\\\">\\n                            <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutFoodExpnse(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                          </div>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        \\n        \\n        <div class=\\\"collaps flat-collaps mt15\\\">\\n          <div class=\\\"collaps-area\\\">\\n            <mat-accordion>\\n              <mat-expansion-panel>\\n                <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                  <mat-panel-title>\\n                    LOCAL CONVENCE\\n                  </mat-panel-title>\\n                </mat-expansion-panel-header>\\n                <div class=\\\"inner-body\\\">\\n                  <div class=\\\"from-fields\\\">\\n                     <div class=\\\"row\\\">\\n                      <div class=\\\"col s3 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <!-- <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <mat-select placeholder=\\\"Mode Of Travel\\\" name=\\\"modeOfTravel\\\" #modeOfTravel=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.modeOfTravel\\\" >\\n                              <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" [value]=1>AUTO</mat-option>\\n                              <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" [value]=2>BUS</mat-option>\\n                              <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" [value]=3>AC TAXI</mat-option>\\n                              <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" [value]=4>NON-AC TAXI </mat-option>\\n                              <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" [value]=5>TWO WHEELER </mat-option>\\n                            </mat-select>\\n                          </mat-form-field> -->\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <mat-select placeholder=\\\"Mode Of Travel\\\" name=\\\"modeOfTravel\\\" #modeOfTravel=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.modeOfTravel\\\" >\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=10>AUTO</mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=1>BUS</mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=6>AC TAXI</mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=7>NON-AC TAXI </mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=8>TWO WHEELER </mat-option>\\n                                <mat-option (click)=\\\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\\\" value=5>METRO </mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                        <div *ngIf=\\\"localFareError==1\\\">\\n                          You Are Not Allow This Travel Mode\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s3 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput [matDatepicker]=\\\"fourteen\\\" readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.date\\\"> \\n                            <mat-datepicker-toggle matSuffix [for]=\\\"fourteen\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #fourteen></mat-datepicker>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s3 \\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"From\\\" name=\\\"from\\\" #from=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.from\\\" >\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s3 \\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"To\\\" name=\\\"to\\\" #to=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.to\\\" >\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      \\n                    </div> \\n                    \\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s3 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Fare\\\" name=\\\"fare\\\" #fare=\\\"ngModel\\\" [(ngModel)]=\\\"outStationLocalExp.fare\\\">\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                  </div>\\n                  \\n                  <div class=\\\"col s12 mt15 mb15\\\">\\n                    <div class=\\\"cs-btn text-right\\\">\\n                      <div class=\\\"in-btn\\\">\\n                        <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!outStationLocalExp.date||!outStationLocalExp.from||!outStationLocalExp.to||!outStationLocalExp.modeOfTravel||!outStationLocalExp.fare\\\" (click)=\\\"outStationLocalExpList()\\\">Add To List</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-expansion-panel>\\n            </mat-accordion>\\n          </div>\\n        </div> \\n        \\n         <div *ngIf=\\\"tmpoutStationLocalExp.length!=0\\\" class=\\\"row mt15\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table> \\n                <tr>\\n                  <th class=\\\"w130\\\">Date</th>\\n                  <th class=\\\"w170 text-center\\\">From</th>\\n                  <th class=\\\"w170 text-center\\\">To</th>\\n                  <th class=\\\"w170 text-center\\\">Mode</th>\\n                  <th>Fare</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let outLocalTravel of tmpoutStationLocalExp;let index=index \\\">\\n                    <td class=\\\"w130\\\"> {{outLocalTravel.date|date:'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w170 text-center\\\">{{outLocalTravel.from}}</td>\\n                    <td class=\\\"w170 text-center\\\">{{outLocalTravel.to}}</td>\\n                    <td class=\\\"w170 text-center\\\">\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==10\\\">AUTO</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==1\\\">BUS</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==6\\\">AC TEXI</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==7\\\">NON-AC TEXI</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==8\\\">TWO WHEELER</span>\\n                        <span *ngIf=\\\"outLocalTravel.modeOfTravel==5\\\">METRO</span>\\n                      </td>\\n                    <td>&#x20B9; {{outLocalTravel.fare}}\\n                        <div class=\\\"action-btns\\\">\\n                            <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutLocalExps(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                          </div>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n        \\n        <div class=\\\"collaps flat-collaps mt15\\\">\\n            <div class=\\\"collaps-area\\\">\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                    <mat-panel-title>\\n                      MISC EXPENSE INFORMATION\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"inner-body\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s6 pl0\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <mat-select placeholder=\\\"Nature of expense\\\" name=\\\"miscActivityType\\\" #miscActivityType=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.miscActivityType\\\" >\\n                                    <mat-option value=\\\"1\\\">Entertainment Expenses</mat-option>\\n                                    <mat-option value=\\\"2\\\">Gift To Dealers</mat-option>\\n                                    <mat-option value=\\\"3\\\">Lunch/Dinner With Team</mat-option>\\n                                    <mat-option value=\\\"4\\\">Training Program</mat-option>\\n                                    <mat-option value=\\\"5\\\">Other</mat-option>\\n                                  </mat-select>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput [matDatepicker]=\\\"five\\\" readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.date\\\" readonly>\\n                                  <mat-datepicker-toggle matSuffix [for]=\\\"five\\\"></mat-datepicker-toggle>\\n                                  <mat-datepicker #five></mat-datepicker>\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pl0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Place Of Expense\\\" name=\\\"placeOfExpense\\\" #placeOfExpense=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.placeOfExpense\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Name of Beneficiaries\\\" name=\\\"nameOfBeneficiary\\\" #nameOfBeneficiary=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.nameOfBeneficiary\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col s6 pr0\\\">\\n                              <div class=\\\"control-field\\\">\\n                                <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                  <input matInput placeholder=\\\"Amount\\\" name=\\\"amount\\\" #total=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.amount\\\">\\n                                </mat-form-field>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h165\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"outStationMiscExp.remarks\\\" ></textarea>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        \\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s12 mt15\\\">\\n                      <div class=\\\"cs-btn text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!outStationMiscExp.miscActivityType ||!outStationMiscExp.date ||!outStationMiscExp.placeOfExpense ||!outStationMiscExp.nameOfBeneficiary ||!outStationMiscExp.amount ||!outStationMiscExp.remarks\\\" (click)=\\\"addOutMiscExpenseList()\\\">Add To List</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n          \\n          <div *ngIf=\\\"tmpOutTravelMiscExp.length!=0\\\" class=\\\"row mt15\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr >\\n                    <th class=\\\"w160\\\">Date</th>\\n                    <th class=\\\"w180\\\">Nature Of Exp.</th>\\n                    <th class=\\\"w170\\\">Beneficiaries Name</th>\\n                    <th class=\\\"w160\\\">Place Of Expense</th>\\n                    <th class=\\\"w100 text-right\\\">Total</th>\\n                    <th>Remark</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr *ngFor=\\\"let misc of tmpOutTravelMiscExp\\\">\\n                      <td class=\\\"w160\\\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\\n                      <!-- <td class=\\\"w200\\\">{{misc.miscActivityType}}</td> -->\\n                      <td *ngIf=\\\"misc.miscActivityType==1\\\" class=\\\"w180\\\">Entertainment Expenses</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==2\\\" class=\\\"w180\\\">Gift To Dealers</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==3\\\" class=\\\"w180\\\">Lunch/Dinner With Team</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==4\\\" class=\\\"w180\\\">Training Program</td>\\n                      <td *ngIf=\\\"misc.miscActivityType==5\\\" class=\\\"w180\\\"> Other</td>\\n                      <td class=\\\"w170\\\">{{misc.nameOfBeneficiary}}</td>\\n                      <td class=\\\"w160\\\">{{misc.placeOfExpense}}</td>\\n                      <td class=\\\"w100 text-right\\\"> &#x20B9; {{misc.amount}}</td>\\n                      <td> {{misc.remarks}}\\n                          <div class=\\\"action-btns\\\">\\n                              <button mat-button class=\\\"delete\\\" (click)=\\\"removeOutStationMiscExp(index)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                            </div>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        <div class=\\\"row mt15\\\">\\n            <div class=\\\"col s12\\\">\\n                <div class=\\\"cs-file-multiple scroll\\\">\\n                  <ul>\\n                    <li class=\\\"w110 pr10\\\" *ngFor=\\\"let urlData of OutStationExpense.documents;let i=index\\\">\\n                      <label>\\n                          <img *ngIf=\\\"urlData.extension=='.jpg'\\\" src=\\\"{{api+urlData.documentId+'/'+'2'}}\\\">\\n                          <img *ngIf=\\\"urlData.extension=='.pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                        <a (click)=\\\"deleteimg(urlData.documentId,urlData.fileName)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                      </label>\\n                    </li>\\n                    <li class=\\\"w110 pr10\\\">\\n                      <div class=\\\"cs-file wp100\\\">\\n                        <label>\\n                          <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\">\\n                          <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                        </label>\\n                      </div>\\n                    </li>\\n                  </ul>\\n                </div>\\n              </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sm-table\\\">\\n              <table>\\n                <tr>\\n                  <th class=\\\"text-right\\\">OutStation Travel</th>\\n                  <th class=\\\"w30 text-center\\\">:</th>\\n                  <td class=\\\"w100 text-right\\\">{{totalOutTravelExp |currency: 'INR':true}}</td>\\n                </tr>\\n                <tr>\\n                  <th class=\\\"text-right\\\">OutStation Hotel Exp.</th>\\n                  <th class=\\\"text-center\\\">:</th>\\n                  <td class=\\\"text-right\\\">{{totalOutHotelExp|currency: 'INR':true}}</td>\\n                </tr>\\n                <tr>\\n                  <th class=\\\"text-right\\\">OutStation Local Conveyances</th>\\n                  <th class=\\\"text-center\\\">:</th>\\n                  <td class=\\\"text-right\\\">{{totalOutLocalExp|currency: 'INR':true}}</td>\\n                </tr>\\n                <tr>\\n                    <th class=\\\"text-right\\\">OutStation Food Exp.</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">{{totalOutStationFoodExp |currency: 'INR':true}}</td>\\n                  </tr>\\n                  <tr>\\n                    <th class=\\\"text-right\\\">OutStation Misc Exp.</th>\\n                    <th class=\\\"w30 text-center\\\">:</th>\\n                    <td class=\\\"w100 text-right\\\">{{totalOutStationFoodExp |currency: 'INR':true}}</td>\\n                  </tr>\\n              </table>\\n            </div>\\n          </div>\\n        </div> \\n        \\n        <mat-divider class=\\\"mt15 mb15\\\"></mat-divider>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sm-table\\\">\\n              <table>\\n                <tr>\\n                  <th class=\\\"text-right\\\">BILL AMOUNT</th>\\n                  <th class=\\\" w30 text-center\\\">:</th>\\n                  <td class=\\\" w120 text-right\\\"> {{totalOutStationExp|currency: 'INR':true}}</td>\\n                </tr>\\n                <tr>\\n                  <th class=\\\"text-right\\\">ADVANCE</th>\\n                  <th class=\\\"text-center\\\">:</th>\\n                  <td class=\\\"text-right\\\">{{OutStationExpense.advanceAmount|currency: 'INR':true}}</td>\\n                </tr>\\n                <tr>\\n                  <th class=\\\"text-right\\\">CLAIM</th>\\n                  <th class=\\\"text-center\\\">:</th>\\n                  <td class=\\\"text-right\\\"> {{TotalClaimAmount|currency: 'INR':true}}</td>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12 mt15 mb15\\\">\\n            <div class=\\\"cs-btn text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\"(click)=\\\"myoutstationexpense(1)\\\" >Save as Draft</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col s12 mt15 mb15\\\">\\n              <div class=\\\"cs-btn text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"myoutstationexpense(2)\\\">Subbmit For Approvel</button>\\n                </div>\\n              </div>\\n            </div>\\n        </div>\\n      </div>\\n    </form>\\n    \\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZWRpdC1vdXQtc3RhdGlvbi9lZGl0LW91dC1zdGF0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\nimport { SnackBarOverview } from 'src/app/toast';\n// import moment = require('moment');\n\n@Component({\n  selector: 'app-edit-out-station',\n  templateUrl: './edit-out-station.component.html',\n  styleUrls: ['./edit-out-station.component.scss']\n})\nexport class EditOutStationComponent implements OnInit {\n  \n  userId:any;\n  expenseList:any=[];\n  userName:any;\n  loader:any=false;\n  div:any=false\n  user:any={};\n  userType:any;\n  OutStationExpense:any={}\n  expenseId:any;\n  userRole:any;\n  miscExpenselist:any={};\n  journyExpense:any={}\n  outStationHotelExp:any={}\n  outStationFoodExp:any={}\n  outStationLocalExp:any={}\n  outStationMiscExp:any={};\n  tmpJournyExpense:any=[]\n  tmpoutStationHotelExp:any=[]\n  tmpoutStationFoodExp:any=[]\n  tmpoutStationLocalExp:any=[]\n  tmpOutTravelMiscExp:any=[];\n  currentDate:any = new Date().toJSON().split('T')[0];\n  constructor(public route:ActivatedRoute,public service:ConstantService,public dialog:DialogComponent,public toast:SnackBarOverview,public router:Router) {\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    this.route.params.subscribe( params => {\n      console.log(params);\n      this.expenseId = params.id;\n      console.log(this.expenseId);\n      if(this.expenseId)\n      {\n        this.getExpenseList(this.expenseId);\n        // this.getDocument(this.expenseId) \n      }\n    });\n  }\n  \n  ngOnInit() {\n  }\n  url:any;\n  requestfn:any;\n  api:any;\n  totalExpenseList:any=[];\n  getExpenseList(expenseId)\n  {\n    this.loader=true;\n    this.service.fileData(\"\",\"expense/detail/\"+expenseId).subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.OutStationExpense=result['data'];\n        this.tmpJournyExpense=this.OutStationExpense.outStationExpense.outStationTravelExp;\n        this.tmpoutStationHotelExp=this.OutStationExpense.outStationExpense.outStationHotelExp;\n        this.tmpoutStationFoodExp=this.OutStationExpense.outStationExpense.foodExpenses;\n        this.tmpoutStationLocalExp=this.OutStationExpense.outStationExpense.outStationLocalExp;\n        this.tmpOutTravelMiscExp=this.OutStationExpense.outStationExpense.miscExpenses;\n        this.url = this.service.dburl;\n        this.requestfn = 'download/document/';\n        this.api = this.url+this.requestfn;\n        if(this.tmpJournyExpense.length)\n        {\n          this.calculateOutTravelExpese(this.tmpJournyExpense)\n        }\n        if(this.tmpoutStationHotelExp.length)\n        {\n          this.calculateOutHotelExp(this.tmpoutStationHotelExp)\n        }\n        if(this.tmpoutStationFoodExp.length)\n        {\n          this.calculateOutStationFood(this.tmpoutStationFoodExp)\n        }\n        if(this.tmpoutStationLocalExp.length)\n        {\n          this.calculateOutStationLocalExp(this.tmpoutStationLocalExp)\n        }\n        if(this.tmpOutTravelMiscExp.length)\n        {\n          this.calculateOutMiscExp(this.tmpOutTravelMiscExp)\n        }\n      }\n    })\n  }\n  myoutstationexpense(status)\n  {\n    this.OutStationExpense.status=status;\n  }\n\n  outTravelExpense()\n  {\n    this.OutStationExpense.outStationExpense={outStationHotelExp:this.tmpoutStationHotelExp,outStationLocalExp:this.tmpoutStationLocalExp,outStationTravelExp:this.tmpJournyExpense,foodExpenses:this.tmpoutStationFoodExp,miscExpenses:this.tmpOutTravelMiscExp};\n    this.OutStationExpense.userId=this.userId;\n    this.OutStationExpense.claimAmount=this.TotalClaimAmount;\n    this.OutStationExpense.actualExpenseAmount=this.totalOutStationExp;\n    this.loader=true\n    this.service.fetchData(this.OutStationExpense,\"expense/update\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.toast.openSucess(\"Expense\",\"Update SuccessFully\");\n        this.router.navigate(['/expense-list']);\n      }\n    }) \n  }\n\n  allowanceList:any=[]\n  getAllowanceList(designation)\n  {\n    this.loader=true\n    this.service.fetchData({designation:designation},\"allowance/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.allowanceList=result['data'][0];\n      }\n      \n    })\n  }\n  \n  \n  \n  \n  cityListArray:any=[]\n  Arraycity:any={}\n  cityList(city)\n  {\n    // this.loader=true;\n    console.log(city);\n    this.service.fileData(\"\",\"city/list/\"+city).subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.cityListArray=result['data'];\n      }\n    })\n    \n  }\n  picdata:any={}\n  picvalue:any=[];\n  deleteimg(picid,filename)\n  {\n    console.log(picid,filename);\n    this.picdata.documentId=picid;\n    this.picdata.action=2;\n    this.picdata.fileName=filename;\n    this.picdata.documentType=4;\n    this.picdata.referenceId=this.expenseId;\n    this.picvalue.push(this.picdata);\n    console.log(this.picvalue);\n    this.dialog.delete(\"Document\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.loader=true;\n        this.service.fetchData(this.picvalue,\"document/update\").subscribe((resp)=>\n        { \n          console.log(resp);\n          if(resp['status']=='Success')\n          {\n            this.toast.openSucess('Image Deleted Sucessfully','');\n            this.loader=false;\n            this.getExpenseList(this.expenseId);\n            this.picvalue=[];\n          }\n          \n        });\n      }\n    });\n  }\n  \n  totalOutMiscExp:any=0\n  calculateOutMiscExp(miscExp:any=[])\n  {\n    this.totalOutMiscExp=0;\n    for(let i=0;i<miscExp.length;i++)\n    {\n      this.totalOutMiscExp=parseInt(this.totalOutMiscExp)+parseInt(miscExp[i].amount);\n    }\n    console.log(this.totalOutMiscExp);\n    \n  }\n  \n  \n  totalOutStationExp:any=0;\n  TotalClaimAmount:any=0;\n  calculateTotalOutStationExp()\n  {\n    \n    this.totalOutStationExp=parseInt(this.totalOutTravelExp)+parseInt(this.totalOutHotelExp)+parseInt(this.totalOutLocalExp)+parseInt(this.totalOutStationFoodExp)+parseInt(this.totalOutMiscExp);\n    if(parseInt(this.totalOutStationExp)>parseInt(this.OutStationExpense.advanceAmount))\n    {\n      \n      this.TotalClaimAmount=parseInt(this.totalOutStationExp)-parseInt(this.OutStationExpense.advanceAmount);\n    }\n    \n  }\n  \n  totalOutStationFoodExp:any=0\n  calculateOutStationFood(foodExpense)\n  {\n    this.totalOutStationFoodExp=0;\n    for(let i=0;i<foodExpense.length;i++)\n    {\n      this.totalOutStationFoodExp=parseInt(this.totalOutStationFoodExp)+parseInt(foodExpense[i].billAmount)\n    }\n    console.log(this.totalOutStationFoodExp);\n    \n    this.calculateTotalOutStationExp();\n    \n  }\n  \n  totalOutTravelExp:any=0;\n  calculateOutTravelExpese(outTravelExpenseArray)\n  {\n    this.totalOutTravelExp=0;\n    for(let i=0;i<outTravelExpenseArray.length;i++)\n    {\n      this.totalOutTravelExp=parseInt(this.totalOutTravelExp)+parseInt(outTravelExpenseArray[i].amount)\n    }\n    this.calculateTotalOutStationExp();\n  }\n  \n  totalOutHotelExp:any=0;\n  calculateOutHotelExp(outHotelExpArray)\n  {\n    this.totalOutHotelExp=0;\n    for(let i=0;i<outHotelExpArray.length;i++)\n    {\n      this.totalOutHotelExp=parseInt(this.totalOutHotelExp)+parseInt(outHotelExpArray[i].billAmount);\n    }\n    this.calculateTotalOutStationExp();\n  }\n  \n  totalOutLocalExp:any=0;\n  calculateOutStationLocalExp(OutstationTravelExpArray)\n  {\n    console.log(OutstationTravelExpArray);\n    \n    this.totalOutLocalExp=0;\n    for(let i=0;i<OutstationTravelExpArray.length;i++)\n    {\n      this.totalOutLocalExp=parseInt(this.totalOutLocalExp)+parseInt(OutstationTravelExpArray[i].fare);\n    }\n    this.calculateTotalOutStationExp();\n  }\n\n\n  addToOutTravelExpense()\n  {\n    console.log(this.journyExpense);\n    this.tmpJournyExpense.push(this.journyExpense)\n    console.log(this.tmpJournyExpense);\n    this.calculateOutTravelExpese(this.tmpJournyExpense);\n    this.journyExpense={};\n  }\n\n  // tmpoutStationHotelExp:any=[];\n  outStationHotelExpList()\n  {\n    console.log(this.outStationHotelExp);\n    this.tmpoutStationHotelExp.push(this.outStationHotelExp);\n    console.log(this.tmpoutStationHotelExp);\n    this.calculateOutHotelExp(this.tmpoutStationHotelExp)\n    this.outStationHotelExp={};\n    this.Arraycity.city='';\n    \n  }\n\n  outStationFoodExpList()\n  {\n    console.log(this.outStationFoodExp);\n    this.tmpoutStationFoodExp.push(this.outStationFoodExp);\n    this.calculateOutStationFood(this.tmpoutStationFoodExp);\n    this.outStationFoodExp={};\n    this.Arraycity.city='';\n  }\n\n  outStationLocalExpList()\n  {\n    console.log(this.outStationLocalExp);\n    this.tmpoutStationLocalExp.push(this.outStationLocalExp);\n    console.log(this.tmpoutStationLocalExp);\n    this.calculateOutStationLocalExp(this.tmpoutStationLocalExp)\n    this.outStationLocalExp={};\n  }\n  \n  addOutMiscExpenseList()\n  {\n    this.tmpOutTravelMiscExp.push(this.outStationMiscExp);\n    this.outStationMiscExp={};\n    this.calculateOutMiscExp(this.tmpOutTravelMiscExp);\n  }\n\n  removeOutStationMiscExp(index)\n  {\n    this.tmpOutTravelMiscExp.splice(index,1);\n  }\n  \n  removeOutLocalExps(index)\n  {\n    this.tmpoutStationLocalExp.splice(index,1);\n  }\n  removeOutFoodExpnse(index)\n  {\n    this.tmpoutStationFoodExp.splice(index,1)\n  }\n  \n  removeOutHotelExps(index)\n  {\n    this.tmpoutStationHotelExp.splice(index,1);\n  }\n  removeOutTravelExps(index)\n  {\n    this.tmpJournyExpense.splice(index,1)\n  }\n  \n  selectedFile:any=[];\n  documentUrl:any=[];\n  insertImage(data)\n  {\n    this.selectedFile=[];\n    let files = data.target.files;\n    if (files) {\n      for (let file of files) {\n        let reader = new FileReader();\n        reader.onload = (e: any) => {\n          this.documentUrl.push(e.target.result);\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n    console.log(this.documentUrl);\n    console.log(data.target.files.length);\n    for(var i=0; i<data.target.files.length; i++)\n    {\n      this.selectedFile.push(data.target.files[i]);\n    }\n    \n    setTimeout(() => {\n      this.Insert_Image();\n    }, 500);\n  }\n  misc_Expense_Document;\n  Insert_Image()\n  {\n    this.misc_Expense_Document=new FormData;\n    this.misc_Expense_Document.action=1;\n    this.misc_Expense_Document.binaryData=this.documentUrl[this.documentUrl.length - 1];\n    this.misc_Expense_Document.documentType=4;\n    this.misc_Expense_Document['documentName'] = this.selectedFile[0].name;\n    this.misc_Expense_Document.referenceId=this.expenseId;\n    this.loader=true;\n    for(var i=0; i<this.selectedFile.length; i++)\n    {\n       if(this.selectedFile[i].type == 'application/pdf') {\n        this.misc_Expense_Document['fileName'] = \"document\"+i+\".pdf\",this.selectedFile[i];\n      } else {\n        this.misc_Expense_Document['fileName'] = \"document\"+i+\".jpg\",this.selectedFile[i];\n      }\n      // this.misc_Expense_Document.fileName = \"image\"+i+\".jpg\",this.selectedFile[i];\n    }\n    console.log(this.misc_Expense_Document);\n    let value=[];\n    value[0]=this.misc_Expense_Document;\n    console.log(value);\n    \n    this.service.fetchData(value,\"document/update\").subscribe((resp)=>\n    {\n      console.log(resp);\n      if(resp)\n      {\n        this.loader=false;\n        this.getExpenseList(this.expenseId);\n        this.toast.openSucess('Image Added Sucessfully','');\n        \n      }\n    });\n  }\n\n  hotelCity:any={}\n  selectedCity(city)\n  {\n    this.hotelCity=city;\n    this.outStationHotelExp.city=city.city+'/'+city.stateName+'/'+city.districtName;\n    this.outStationHotelExp.stateMasterId=city.stateMasterId;\n    \n    console.log(this.outStationHotelExp.city);\n  }\n  \n  selectedFoodExpenseCity(city)\n  {\n    this.hotelCity=city;\n    let value={stateMasterId:city.stateMasterId,city:city.city+'/'+city.stateName+'/'+city.districtName};\n    console.log(value);\n    this.outStationFoodExp.city=city.city+'/'+city.stateName+'/'+city.districtName;\n    this.outStationFoodExp.stateMasterId=city.stateMasterId;\n  }\n  \n  hotelcitydiv:any=false;\n  hotelCityError:any=0;\n  checkValidAmount(amount)\n  {\n    this.hotelCityError=0;\n    this.hotelcitydiv=true;\n    \n    if(this.hotelCity.category=='A')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.lodgingAllowanceA))\n      {\n        this.hotelCityError=1;\n        this.hotelcitydiv=true;\n        \n      }\n    }\n    if(this.hotelCity.category=='B')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.lodgingAllowanceB))\n      {\n        this.hotelcitydiv=true;\n        this.hotelCityError=1\n      }\n    }\n    if(this.hotelCity.category=='C')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.lodgingAllowanceC))\n      {\n        this.hotelcitydiv=true;\n        this.hotelCityError=1\n      }\n    }\n    if(this.hotelCity.category=='A+')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.lodgingAllowanceAPlus))\n      {\n        this.hotelcitydiv=true;\n        this.hotelCityError=1\n      }\n    }\n    console.log(this.hotelCityError);\n    \n  }\n  \n  foodCityError:any=0;\n  checkValidFoodAmount(amount)\n  {\n    this.foodCityError=0;\n    console.log(\"food\");\n    \n    if(this.hotelCity.category=='A')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.foodAllowanceA))\n      {\n        this.foodCityError=1\n      }\n    }\n    if(this.hotelCity.category=='B')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.foodAllowanceA))\n      {\n        this.foodCityError=1\n      }\n    }\n    if(this.hotelCity.category=='C')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.foodAllowanceA))\n      {\n        this.foodCityError=1\n      }\n    }\n    if(this.hotelCity.category=='A+')\n    {\n      if(parseInt(amount)>parseInt(this.allowanceList.foodAllowanceAPlus))\n      {\n        this.foodCityError=1\n      }\n    }\n    console.log(this.foodCityError);\n  }\n  \n  modeError:any=0;\n  checkValid(modeType)\n  {\n    console.log(modeType);\n    this.modeError=0;\n    if(modeType=='AC Buses')\n    {\n      if(this.allowanceList.travelBusAC==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='Non - AC Buses')\n    {\n      if(this.allowanceList.travelBusNonAC==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='2A')\n    {\n      if(this.allowanceList.travelTrain2A==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='3A')\n    {\n      if(this.allowanceList.travelTrain3A==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='SL')\n    {\n      if(this.allowanceList.travelTrainSL==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='Private')\n    {\n      if(this.allowanceList.travelTaxiPrivate==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='Economy Class')\n    {\n      if(this.allowanceList.travelTaxiShared==false)\n      {\n        this.modeError=1;\n      }\n    }\n    if(modeType=='Shared')\n    {\n      if(this.allowanceList.flightEconomyClass==false)\n      {\n        this.modeError=1;\n      }\n      console.log(this.modeError);\n    }\n    \n  }\n  \n  localFareError:any=0;\n  checkValidLocalFare(modeType)\n  {\n    this.localFareError=0;\n    if(modeType=='1')\n    {\n      if(this.allowanceList.localAuto!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    if(modeType=='2')\n    {\n      if(this.allowanceList.localBus!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    if(modeType=='3')\n    {\n      if(this.allowanceList.localTaxiAC!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    if(modeType=='4')\n    {\n      if(this.allowanceList.localTaxiNonAC!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    if(modeType=='5')\n    {\n      if(this.allowanceList.localTwoWheeler!=true)\n      {\n        this.localFareError=1\n      }\n    }\n    \n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n    </div>\\n  \\n<div class=\\\"middle-container\\\">\\n  <div class=\\\"page-heading\\\">\\n    <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"h-icon\\\">\\n    <div class=\\\"heading-text\\\">\\n      <h2>Expense</h2>\\n      <p>Add Expense</p>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"container-outer\\\" >\\n  <div class=\\\"container\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"sprate-box pt0 mb15\\\">\\n          <div class=\\\"cs-heading\\\">\\n            <h2>Promotion EXPENSE</h2>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <form (ngSubmit)=\\\"f2.form.valid && promotionexpense()\\\" #f2=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"cs-bill\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>BASIC INFORMATION</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <!-- <div class=\\\"col s4 \\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Purpose Of Visit\\\" type=\\\"text\\\" id=\\\"purposeOfVisit\\\" name=\\\"purposeOfVisit\\\" #purposeOfVisit=\\\"ngModel\\\" [(ngModel)]=\\\"salesExpense.purposeOfVisit\\\" [ngClass]=\\\"{'has-error' : purposeOfVisit.invalid }\\\" required>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f2.submitted && purposeOfVisit.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"purposeOfVisit.errors.required\\\">Purpose of Visit required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div> -->\\n                  <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"ADVANCE AMOUNT\\\" type=\\\"number\\\" id=\\\"advanceAmount\\\" name=\\\"advanceAmount\\\" #advanceAmount=\\\"ngModel\\\" [(ngModel)]=\\\"salesExpense.advanceAmount\\\"  [ngClass]=\\\"{'has-error' : advanceAmount.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f2.submitted && advanceAmount.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"advanceAmount.errors.required\\\">Advance Amount is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            \\n            \\n            <div class=\\\"collaps flat-collaps mt15\\\">\\n              <div class=\\\"collaps-area\\\">\\n                <mat-accordion>\\n                  <mat-expansion-panel>\\n                    <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                      <mat-panel-title>\\n                        SALES PERMOTION ACTIVITY\\n                      </mat-panel-title>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"inner-body\\\">\\n                      <div class=\\\"from-fields\\\"> \\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s3 pl0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <mat-select placeholder=\\\"Sales Promotion\\\" name=\\\"salesActivityType\\\" #salesActivityType=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.salesActivityType\\\">\\n                                  <mat-option value=\\\"1\\\">Mechanic get together</mat-option>\\n                                  <mat-option value=\\\"2\\\">Retailer get together</mat-option>\\n                                  <mat-option value=\\\"3\\\">van Campaign</mat-option>\\n                                  <mat-option value=\\\"4\\\">Stall Campaign</mat-option>\\n                                  <mat-option value=\\\"5\\\">Exhibition Participation</mat-option>\\n                                  <mat-option value=\\\"6\\\">Signboard</mat-option>\\n                                  <mat-option value=\\\"7\\\">Wall/Shop Painting</mat-option>\\n                                  <mat-option value=\\\"8\\\">GiveAways</mat-option>\\n                                  <mat-option value=\\\"9\\\">Printing Of Lesafelts,banners, posters etc.</mat-option>\\n                                  <!-- <mat-option value=\\\"10\\\">Other</mat-option> -->\\n                                </mat-select>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s3\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput [matDatepicker]=\\\"two\\\" readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.date\\\">\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"two\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #two></mat-datepicker>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s3\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput placeholder=\\\"Place Of Activity\\\" name=\\\"placeOfActivity\\\" #placeOfActivity=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.placeOfActivity\\\" >\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s3 pr0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <input matInput type=\\\"number\\\" placeholder=\\\"No Of Attendees\\\" name=\\\"noOfAttendees\\\" #noOfAttendees=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.noOfAttendees\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s6 pl0\\\">\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col s6 pl0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Rental Expense\\\" type=\\\"number\\\" name=\\\"rentalExpenses\\\" #rentalExpenses=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.rentalExpenses\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col s6 pr0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Food Expense\\\"  type=\\\"number\\\" name=\\\"foodExpense\\\" #foodExpense=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.foodExpense\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col s6 pl0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Av Aids Expense\\\"  type=\\\"number\\\" name=\\\"avAidsExpense\\\" #avAidsExpense=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.avAidsExpense\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col s6 pr0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Gift Expense\\\"  type=\\\"number\\\" name=\\\"giftsExpense\\\" #giftsExpense=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.giftsExpense\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col s6 \\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Misc Expense\\\"  type=\\\"number\\\" name=\\\"miscExpense\\\" #miscExpense=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.miscExpense\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col s6 padding0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Approved Amount\\\"  type=\\\"number\\\" name=\\\"approvedAmount\\\" #approvedAmount=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.approvedAmount\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                            </div>\\n\\n                          </div>\\n                          \\n                          \\n                          <div class=\\\"col s6 pr0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <textarea matInput placeholder=\\\"Remark\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"promation_Expense.remarks\\\" class=\\\"h165\\\"></textarea>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s12 mt15\\\">\\n                        <div class=\\\"cs-btn text-right\\\">\\n                          <div class=\\\"in-btn\\\">\\n                            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"addToPromationList()\\\" type=\\\"button\\\">Add To List</button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </mat-expansion-panel>\\n                </mat-accordion>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"row mt15\\\">\\n              <div class=\\\"cs-table left-right-20\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table> \\n                    <tr>\\n                      <th class=\\\"w160\\\">Date</th>\\n                      <th>Sales Promotion</th>\\n                      <th class=\\\"w90\\\">Place of Activity</th>\\n                      <th class=\\\"w80\\\">No Of Attendees</th>\\n                      <th class=\\\"w90 text-right\\\">Rental Exp.</th>\\n                      <th class=\\\"w90 text-right\\\">Food Exp.</th>\\n                      <th class=\\\"w90 text-right\\\">Av-Aids Exp.</th>\\n                      <th class=\\\"w80 text-right\\\">Gift Exp.</th>\\n                      <th class=\\\"w90 text-right\\\">Misc Exp.</th>\\n                      <th class=\\\"w90 text-right\\\">Aprroved Amt</th>\\n                      <th class=\\\"w80 text-right\\\">Total</th>\\n                      <th>Remark</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                \\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content\\\">\\n                    <table>\\n                      <tr *ngFor=\\\" let promation of SalesExpenseList;let i=index\\\">\\n                        <td class=\\\"w160\\\"> {{promation.date |date:'EEEE, MMMM d, y'}}</td>\\n                        <!-- <td>{{promation.salesActivityType}}</td> -->\\n                        <td *ngIf=\\\"promation.salesActivityType==1\\\">Mechanic get together</td>\\n                        <td *ngIf=\\\"promation.salesActivityType==2\\\"> Retailer get together</td>\\n                        <td *ngIf=\\\"promation.salesActivityType==3\\\">van Campaign</td>\\n                        <td *ngIf=\\\"promation.salesActivityType==4\\\">Stall Campaign</td>\\n                        <td *ngIf=\\\"promation.salesActivityType==5\\\">Exhibition Participation</td>\\n                        <td *ngIf=\\\"promation.salesActivityType==6\\\">Signboard</td>\\n                        <td *ngIf=\\\"promation.salesActivityType==7\\\">Wall/Shop Painting</td>\\n                        <td *ngIf=\\\"promation.salesActivityType==8\\\">GiveAways</td>\\n                        <td *ngIf=\\\"promation.salesActivityType==9\\\">Printing Of Lesafelts,banners, posters etc.</td>\\n                        <td class=\\\"w90\\\">{{promation.placeOfActivity}}</td>\\n                        <td class=\\\"w80\\\">{{promation.noOfAttendees}}</td>\\n                        <td class=\\\"w90 text-right\\\">&#x20B9; {{promation.rentalExpenses}}</td>\\n                        <td class=\\\"w90 text-right\\\">&#x20B9; {{promation.foodExpense}}</td>\\n                        <td class=\\\"w90 text-right\\\">&#x20B9; {{promation.avAidsExpense}}</td>\\n                        <td class=\\\"w80 text-right\\\"> &#x20B9; {{promation.giftsExpense}}</td>\\n                        <td class=\\\"w90 text-right\\\">&#x20B9; {{promation.miscExpense}}</td>\\n                        <td class=\\\"w90 text-right\\\">&#x20B9; {{promation.approvedAmount}}</td>\\n                        <td class=\\\"w80 text-right\\\"> &#x20B9; {{promation.total}}</td>\\n                        <td> {{promation.remarks}}\\n                          <div class=\\\"action-btns default-action\\\" style=\\\"right: 3px;\\\">\\n                            <button  mat-button class=\\\"delete\\\" (click)=\\\"removeExpense(i)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row mt15\\\">\\n                <div class=\\\"col s12\\\">\\n                    <div class=\\\"cs-file-multiple scroll\\\">\\n                      <ul>\\n                        <li class=\\\"w110 pr10\\\" *ngFor=\\\"let urlData of OutStationExpense.documents;let i=index\\\">\\n                          <label>\\n                            <img *ngIf=\\\"urlData.extension=='.jpg'\\\" src=\\\"{{api+urlData.documentId+'/'+'2'}}\\\">\\n                            <img *ngIf=\\\"urlData.extension=='.pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                            <a (click)=\\\"deleteimg(urlData.documentId,urlData.fileName)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                          </label>\\n                        </li>\\n                        <li class=\\\"w110 pr10\\\">\\n                          <div class=\\\"cs-file wp100\\\">\\n                            <label>\\n                              <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\">\\n                              <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                            </label>\\n                          </div>\\n                        </li>\\n                      </ul>\\n                    </div>\\n                  </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s12\\\">\\n                <div class=\\\"sm-table\\\">\\n                  <table>\\n                    <tr>\\n                      <th class=\\\"text-right\\\">Total Rental Exp.</th>\\n                      <th class=\\\"w30 text-center\\\">:</th>\\n                      <td class=\\\"w100 text-right\\\">&#x20B9; {{totalrentalExp}}</td>\\n                    </tr>\\n                    <tr>\\n                      <th class=\\\"text-right\\\">Total Food Exp.</th>\\n                      <th class=\\\"text-center\\\">:</th>\\n                      <td class=\\\"text-right\\\">&#x20B9; {{totalfoodExpense}}</td>\\n                    </tr>\\n                    <tr>\\n                      <th class=\\\"text-right\\\">Total AV Aids Exp.</th>\\n                      <th class=\\\"w30 text-center\\\">:</th>\\n                      <td class=\\\"text-right\\\">&#x20B9; {{totalavAidsExpense}}</td>\\n                    </tr>\\n                    <tr>\\n                      <th class=\\\"text-right\\\">Total Gifts Exp.</th>\\n                      <th class=\\\"text-center\\\">:</th>\\n                      <td class=\\\"text-right\\\">&#x20B9; {{totalgiftsExpense}}</td>\\n                    </tr>\\n                    <tr>\\n                      <th class=\\\"text-right\\\">Total Misc Exp.</th>\\n                      <th class=\\\"text-center\\\">:</th>\\n                      <td class=\\\"text-right\\\">&#x20B9; {{totalotherExpense}}</td>\\n                    </tr>\\n                    <tr>\\n                      <th class=\\\"text-right\\\">Total promational Exp.</th>\\n                      <th class=\\\"text-center\\\">:</th>\\n                      <td class=\\\"text-right\\\">&#x20B9; {{totalPromationalExp}}</td>\\n                    </tr>\\n                  </table>\\n                  <!-- <table>\\n                      <tr>\\n                        <th class=\\\"text-right\\\">Advance Amount </th>\\n                        <th class=\\\"w30 text-center\\\">:</th>\\n                        <td class=\\\"w100 text-right\\\">&#x20B9; {{advanceAmount}}</td>\\n                      </tr>\\n                      <tr>\\n                        <th class=\\\"text-right\\\">Claim Amount</th>\\n                        <th class=\\\"text-center\\\">:</th>\\n                        <td class=\\\"text-right\\\">&#x20B9; {{claimAmount}}</td>\\n                      </tr>\\n                      </table> -->\\n                </div>\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"row\\\">\\n              <div class=\\\"col s12 mt15 mb15\\\">\\n                <div class=\\\"cs-btn fixedd text-right\\\">\\n                  <div class=\\\"in-btn\\\">\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"promotionexpense(1)\\\">Save</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col s12 mt15 mb15\\\">\\n                  <div class=\\\"cs-btn fixedd text-right\\\">\\n                    <div class=\\\"in-btn\\\">\\n                      <button mat-raised-button color=\\\"accent\\\" (click)= \\\"promationExpense(2)\\\">Save as Draft</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div> -->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col s12 mt15\\\">\\n                  <div class=\\\"cs-btn text-right\\\">\\n                    <div class=\\\"in-btn\\\">\\n                      <button mat-raised-button color=\\\"accent\\\"(click)=\\\"salesExpense.status=1\\\" >Save as Draft</button>\\n                      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"salesExpense.status=2\\\">Subbmit For Approvel</button>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZWRpdC1zYWxlcy1wb3Jtb3Rpb24vZWRpdC1zYWxlcy1wb3Jtb3Rpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-edit-sales-pormotion',\n  templateUrl: './edit-sales-pormotion.component.html',\n  styleUrls: ['./edit-sales-pormotion.component.scss']\n})\nexport class EditSalesPormotionComponent implements OnInit {\n\n  userId:any;\n  expenseList:any=[];\n  userName:any;\n  loader:any=false;\n  div:any=false\n  user:any={};\n  userType:any;\n  salesExpense:any={}\n  expenseId:any;\n  userRole:any;\n  promation_Expense:any={};\n  totalrentalExp:any=0;\n  totalfoodExpense:any=0;\n  totalavAidsExpense:any=0;\n  totalgiftsExpense:any=0;\n  totalotherExpense:any=0;\n  totalPromationalExp:any=0;\n  currentDate:any = new Date().toJSON().split('T')[0];\n\n  constructor(public route:ActivatedRoute,public service:ConstantService,public router:Router,public toast:SnackBarOverview,public dialog:DialogComponent) {\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    this.route.params.subscribe( params => {\n      console.log(params);\n      this.expenseId = params.id;\n      console.log(this.expenseId);\n      if(this.expenseId)\n      {\n        this.getExpenseList(this.expenseId);\n      }\n      });\n   }\n\n  ngOnInit() {\n  }\n  url:any;\n  requestfn:any;\n  api:any;\n  SalesExpenseList:any=[];\n  getExpenseList(expenseId)\n  {\n    this.loader=true\n    this.service.fileData(\"\",\"expense/detail/\"+expenseId).subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.salesExpense=result['data'];\n        console.log(this.salesExpense);\n        console.log(this.salesExpense.salesPromotionExpense.salesPromotionExps);\n        this.SalesExpenseList=this.salesExpense.salesPromotionExpense.salesPromotionExps;\n        this.url = this.service.dburl;\n        this.requestfn = 'download/document/';\n        this.api = this.url+this.requestfn;\n        this.calculatePromationalExpense(this.SalesExpenseList)\n      }\n    })\n  }\n\n  addToPromationList()\n  {  \n    this.promation_Expense.total=parseInt(this.promation_Expense.rentalExpenses)+parseInt(this.promation_Expense.foodExpense)+parseInt(this.promation_Expense.avAidsExpense)+parseInt(this.promation_Expense.giftsExpense)+parseInt(this.promation_Expense.miscExpense);\n    this.SalesExpenseList.push(this.promation_Expense)\n    this.calculatePromationalExpense(this.SalesExpenseList);\n    this.promation_Expense={};\n\n  }\n\n  calculatePromationalExpense(promationalExpArray)\n  {\n    this.totalrentalExp=0\n    this.totalfoodExpense=0\n    this.totalavAidsExpense=0\n    this.totalgiftsExpense=0\n    this.totalotherExpense=0\n    this.totalPromationalExp=0\n   \n    for(let i=0;i<promationalExpArray.length;i++)\n    {\n      this.totalrentalExp=parseInt(this.totalrentalExp)+parseInt(promationalExpArray[i].rentalExpenses);\n      this.totalfoodExpense=parseInt(this.totalfoodExpense)+parseInt(promationalExpArray[i].foodExpense);\n      this.totalavAidsExpense=parseInt(this.totalavAidsExpense)+parseInt(promationalExpArray[i].avAidsExpense);\n      this.totalgiftsExpense=parseInt(this.totalgiftsExpense)+parseInt(promationalExpArray[i].giftsExpense);\n      this.totalotherExpense=parseInt(this.totalotherExpense)+parseInt(promationalExpArray[i].miscExpense);\n    }\n    this.totalPromationalExp=parseInt(this.totalrentalExp)+parseInt(this.totalfoodExpense)+parseInt(this.totalavAidsExpense)+parseInt(this.totalgiftsExpense)+parseInt(this.totalotherExpense);\n  }\n  removeExpense(index)\n  {\n    this.SalesExpenseList.splice(index,1);\n  }\n\n  promotionexpense()\n  {\n    this.loader=true;\n    console.log(this.SalesExpenseList);\n    this.salesExpense.actualExpenseAmount=this.totalPromationalExp;\n    this.salesExpense.salesPromotionExpense={\"salesPromotionExps\":this.SalesExpenseList};\n    console.log(this.salesExpense);\n    this.service.fetchData(this.salesExpense,\"expense/update\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.toast.openSucess(\"Expense\",\"Update SuccessFully\");\n        this.router.navigate(['/expense-list']);\n      }\n    })\n  }\n\n  picdata:any={}\n  picvalue:any=[];\n  deleteimg(picid,filename)\n  {\n    console.log(picid,filename);\n    this.picdata.documentId=picid;\n    this.picdata.action=2;\n    this.picdata.fileName=filename;\n    this.picdata.documentType=4;\n    this.picdata.referenceId=this.expenseId;\n    this.picvalue.push(this.picdata);\n    console.log(this.picvalue);\n    this.dialog.delete(\"Document\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.loader=true;\n        this.service.fetchData(this.picvalue,\"document/update\").subscribe((resp)=>\n        { \n          console.log(resp);\n          if(resp['status']=='Success')\n          {\n            this.toast.openSucess('Image Deleted Sucessfully','');\n            this.loader=false;\n            this.getExpenseList(this.expenseId);\n            this.picvalue=[];\n          }\n          \n        });\n      }\n    });\n  }\n\n  selectedFile:any=[];\n  documentUrl:any=[];\n  insertImage(data)\n  {\n    this.selectedFile=[];\n    let files = data.target.files;\n    if (files) {\n      for (let file of files) {\n        let reader = new FileReader();\n        reader.onload = (e: any) => {\n          this.documentUrl.push(e.target.result);\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n    console.log(this.documentUrl);\n    console.log(data.target.files.length);\n    for(var i=0; i<data.target.files.length; i++)\n    {\n      this.selectedFile.push(data.target.files[i]);\n    }\n    \n    setTimeout(() => {\n      this.Insert_Image();\n    }, 500);\n  }\n  misc_Expense_Document;\n  Insert_Image()\n  {\n    this.misc_Expense_Document=new FormData;\n    this.misc_Expense_Document.action=1;\n    this.misc_Expense_Document.binaryData=this.documentUrl[this.documentUrl.length - 1];\n    this.misc_Expense_Document.documentType=4;\n    this.misc_Expense_Document['documentName'] = this.selectedFile[0].name;\n    this.misc_Expense_Document.referenceId=this.expenseId;\n    this.loader=true;\n    for(var i=0; i<this.selectedFile.length; i++)\n    {\n      console.log(this.selectedFile[i]);\n      \n      if(this.selectedFile[i].type == 'application/pdf') {\n        this.misc_Expense_Document['fileName'] = \"document\"+i+\".pdf\",this.selectedFile[i];\n      } else {\n        this.misc_Expense_Document['fileName'] = \"document\"+i+\".jpg\",this.selectedFile[i];\n      }\n      // this.misc_Expense_Document.fileName = \"image\"+i+\".jpg\",this.selectedFile[i];\n    }\n    console.log(this.misc_Expense_Document);\n    let value=[];\n    value[0]=this.misc_Expense_Document;\n    console.log(value);\n    \n    this.service.fetchData(value,\"document/update\").subscribe((resp)=>\n    {\n      console.log(resp);\n      if(resp)\n      {\n        this.loader=false;\n        this.getExpenseList(this.expenseId);\n        this.toast.openSucess('Document Added Sucessfully','');\n        \n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n    </div>\\n  \\n<div class=\\\"middle-container\\\">\\n  <div class=\\\"page-heading\\\">\\n    <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"h-icon\\\">\\n    <div class=\\\"heading-text\\\">\\n      <h2>Expense</h2>\\n      <p>Add Expense</p>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"container-outer\\\" >\\n  <div class=\\\"container\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"sprate-box pt0 mb15\\\">\\n          <div class=\\\"cs-heading\\\">\\n            <h2>Misc EXPENSE</h2>\\n          </div>\\n          <!-- <div class=\\\"row\\\">\\n            <div class=\\\"col s12 padding0\\\">\\n              <div class=\\\"select-one\\\">\\n                <mat-radio-group (change)=\\\"openExpenseForm()\\\" #form=\\\"ngModel\\\" [(ngModel)]=\\\"expenseForm.form\\\" required>\\n                  <mat-radio-button value=2>Outstation Travel</mat-radio-button>\\n                  <mat-radio-button value=3>Sales Promotion Activity</mat-radio-button>\\n                  <mat-radio-button value=4>Misc Exp</mat-radio-button>\\n                  <mat-radio-button value=1>Local Conveyance</mat-radio-button>\\n                </mat-radio-group>\\n              </div>\\n            </div>\\n          </div> -->\\n        </div>\\n      </div>\\n    </div>\\n        <form (ngSubmit)=\\\"f3.form.valid && miscExpense()|| setFocus(f3.form)\\\" #f3=\\\"ngForm\\\" novalidate>\\n          <div class=\\\"cs-bill\\\" >\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s12\\\">\\n                <div class=\\\"sprate-box pt0\\\">\\n                  <div class=\\\"cs-heading\\\">\\n                    <h2>BASIC INFORMATION</h2>\\n                  </div>\\n                  <div class=\\\"from-fields\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s4 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Purpose Of Visit\\\" type=\\\"text\\\" id=\\\"purposeOfVisit\\\" name=\\\"purposeOfVisit\\\" #purposeOfVisit=\\\"ngModel\\\" [(ngModel)]=\\\"misc_Expense.purposeOfVisit\\\" [ngClass]=\\\"{'has-error' : purposeOfVisit.invalid }\\\"  required >\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f3.submitted && purposeOfVisit.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"purposeOfVisit.errors.required\\\">Purpose of Visit required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s4\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <input matInput placeholder=\\\"ADVANCE AMOUNT\\\" type=\\\"number\\\" id=\\\"advanceAmount\\\" name=\\\"advanceAmount\\\" #advanceAmount=\\\"ngModel\\\" [(ngModel)]=\\\"misc_Expense.advanceAmount\\\"  [ngClass]=\\\"{'has-error' : advanceAmount.invalid }\\\" required>\\n                            </mat-form-field>\\n                            <mat-error *ngIf=\\\"f3.submitted && advanceAmount.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"advanceAmount.errors.required\\\">Advance Amount is required</mat-error>\\n                            </mat-error>\\n                          </div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            \\n            \\n            <div class=\\\"collaps flat-collaps mt15\\\">\\n              <div class=\\\"collaps-area\\\">\\n                <mat-accordion>\\n                  <mat-expansion-panel>\\n                    <mat-expansion-panel-header class=\\\"outer-panel form-collaps mb10\\\">\\n                      <mat-panel-title>\\n                        MISC EXPENSE INFORMATION\\n                      </mat-panel-title>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"inner-body\\\">\\n                      <div class=\\\"from-fields\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s6 pl0\\\">\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col s6 pl0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <mat-select placeholder=\\\"Nature of expense\\\" name=\\\"miscActivityType\\\" #miscActivityType=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.miscActivityType\\\" >\\n                                      <mat-option value=\\\"1\\\">Entertainment Expenses</mat-option>\\n                                      <mat-option value=\\\"2\\\">Gift To Dealers</mat-option>\\n                                      <mat-option value=\\\"3\\\">Lunch/Dinner With Team</mat-option>\\n                                      <mat-option value=\\\"4\\\">Training Program</mat-option>\\n                                      <mat-option value=\\\"5\\\">Other</mat-option>\\n                                    </mat-select>\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col s6 pr0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput [matDatepicker]=\\\"five\\\" readonly [max]='currentDate' placeholder=\\\"Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.date\\\" readonly>\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"five\\\"></mat-datepicker-toggle>\\n                                    <mat-datepicker #five></mat-datepicker>\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col s6 pl0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Place Of Expense\\\" name=\\\"placeOfExpense\\\" #placeOfExpense=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.placeOfExpense\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                              \\n                              <div class=\\\"col s6 pr0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Name of Beneficiaries\\\" name=\\\"nameOfBeneficiary\\\" #nameOfBeneficiary=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.nameOfBeneficiary\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col s6 pl0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Reason\\\" name=\\\"reason\\\" #reason=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.reason\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col s6 pr0\\\">\\n                                <div class=\\\"control-field\\\">\\n                                  <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                    <input matInput placeholder=\\\"Amount\\\" type=\\\"number\\\" name=\\\"total\\\" #total=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.amount\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"col s6 pr0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h165\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"miscExpenselist.remarks\\\" ></textarea>\\n                              </mat-form-field>\\n                            </div>\\n                          </div>\\n                          \\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s12 mt15\\\">\\n                        <div class=\\\"cs-btn text-right\\\">\\n                          <div class=\\\"in-btn\\\">\\n                            <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!miscExpenselist.miscActivityType ||!miscExpenselist.date ||!miscExpenselist.placeOfExpense ||!miscExpenselist.nameOfBeneficiary ||!miscExpenselist.amount ||!miscExpenselist.remarks\\\" (click)=\\\"addToMiscExpenseList()\\\">Add To List</button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </mat-expansion-panel>\\n                </mat-accordion>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"row mt15\\\">\\n              <div class=\\\"cs-table left-right-20\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table> \\n                    <tr >\\n                      <th class=\\\"w160\\\">Date</th>\\n                      <th class=\\\"w180\\\">Nature Of Exp.</th>\\n                      <th class=\\\"w170\\\">Beneficiaries Name</th>\\n                      <th class=\\\"w160\\\">Place Of Expense</th>\\n                      <th class=\\\"w170\\\">Reasons</th>\\n                      <th class=\\\"w100 text-right\\\">Total</th>\\n                      <th>Remark</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                \\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content\\\">\\n                    <table>\\n                      <tr *ngFor=\\\"let misc of totalExpenseList;let i=index\\\">\\n                        <td class=\\\"w160\\\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\\n                        <!-- <td class=\\\"w200\\\">{{misc.miscActivityType}}</td> -->\\n                        <td *ngIf=\\\"misc.miscActivityType==1\\\" class=\\\"w180\\\">Entertainment Expenses</td>\\n                        <td *ngIf=\\\"misc.miscActivityType==2\\\" class=\\\"w180\\\">Gift To Dealers</td>\\n                        <td *ngIf=\\\"misc.miscActivityType==3\\\" class=\\\"w180\\\">Lunch/Dinner With Team</td>\\n                        <td *ngIf=\\\"misc.miscActivityType==4\\\" class=\\\"w180\\\">Training Program</td>\\n                        <td *ngIf=\\\"misc.miscActivityType==5\\\" class=\\\"w180\\\"> Other</td>\\n                        <td class=\\\"w170\\\">{{misc.nameOfBeneficiary}}</td>\\n                        <td class=\\\"w160\\\">{{misc.placeOfExpense}}</td>\\n                        <td class=\\\"w170\\\">{{misc.reason}}</td>\\n                        <td class=\\\"w100 text-right\\\"> &#x20B9; {{misc.amount}}</td>\\n                        <td> {{misc.remarks}}\\n                          <div class=\\\"action-btns default-action\\\" style=\\\"right: 3px;\\\">\\n                            <button  mat-button class=\\\"delete\\\" (click)=\\\"removeExpense(i)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button>\\n                          </div>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row mt15\\\">\\n                <div class=\\\"col s12\\\">\\n                    <div class=\\\"cs-file-multiple scroll\\\">\\n                      <ul>\\n                        <li class=\\\"w110 pr10\\\" *ngFor=\\\"let urlData of misc_Expense.documents;let i=index\\\">\\n                          <label>\\n                              <img *ngIf=\\\"urlData.extension=='.jpg'\\\" src=\\\"{{api+urlData.documentId+'/'+'2'}}\\\">\\n                              <img *ngIf=\\\"urlData.extension=='.pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                            <a (click)=\\\"deleteimg(urlData.documentId,urlData.fileName)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                          </label>\\n                        </li>\\n                        <li class=\\\"w110 pr10\\\">\\n                          <div class=\\\"cs-file wp100\\\">\\n                            <label>\\n                              <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\">\\n                              <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                            </label>\\n                          </div>\\n                        </li>\\n                      </ul>\\n                    </div>\\n                  </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s12\\\">\\n                <div class=\\\"sm-table\\\">\\n                  <table>\\n                    <tr>\\n                      <th class=\\\"text-right\\\">Total Misc Exp.</th>\\n                      <th class=\\\"w30 text-center\\\">:</th>\\n                      <td class=\\\"w100 text-right\\\">&#x20B9; {{totalAmount}}</td>\\n                    </tr>\\n                    <tr>\\n                        <th class=\\\"text-right\\\">Advance Amount</th>\\n                        <th class=\\\"w30 text-center\\\">:</th>\\n                        <td class=\\\"w100 text-right\\\">&#x20B9; {{misc_Expense.advanceAmount}}</td>\\n                      </tr>\\n                      <tr>\\n                          <th class=\\\"text-right\\\">Claim Amount</th>\\n                          <th class=\\\"w30 text-center\\\">:</th>\\n                          <td class=\\\"w100 text-right\\\">&#x20B9; {{misc_Expense.claimAmount}}</td>\\n                        </tr>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s12\\\">\\n                <div class=\\\"cs-btn  mt15 text-right\\\">\\n                  <div class=\\\"in-btn\\\">\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"allmiscexpense(1)\\\">Save as Draft</button>\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"allmiscexpense(2)\\\">Save For Approvel</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n        \\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZWRpdG1pc2MvZWRpdG1pc2MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\n\n\n@Component({\n  selector: 'app-editmisc',\n  templateUrl: './editmisc.component.html',\n  styleUrls: ['./editmisc.component.scss']\n})\nexport class EditmiscComponent implements OnInit {\n\n  userId:any;\n  expenseList:any=[];\n  userName:any;\n  loader:any=false;\n  div:any=false\n  user:any={};\n  userType:any;\n  misc_Expense:any={}\n  expenseId:any;\n  userRole:any;\n  miscExpenselist:any={};\n  currentDate:any = new Date().toJSON().split('T')[0];\n  \n  constructor(public dialog:DialogComponent,public route:ActivatedRoute,public router:Router, public service:ConstantService,@Inject(PLATFORM_ID) private platformId: Object, public toast:SnackBarOverview) {\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    this.route.params.subscribe( params => {\n      console.log(params);\n      this.expenseId = params.id;\n      console.log(this.expenseId);\n      if(this.expenseId)\n      {\n        this.getExpenseList(this.expenseId);\n      }\n      });\n   }\n\n  ngOnInit() {\n  }\n  urls:any;\n  requestfn:any;\n  api:any;\n  totalExpenseList:any=[];\n  getExpenseList(expenseId)\n  {\n    this.loader=true;\n    this.service.fileData(\"\",\"expense/detail/\"+expenseId).subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.misc_Expense=result['data'];\n        console.log(this.misc_Expense);\n        console.log(this.misc_Expense.miscExpense.miscExp);\n        this.totalExpenseList=this.misc_Expense.miscExpense.miscExp;\n        this.urls = this.service.dburl;\n        this.requestfn = 'download/document/';\n        this.api = this.urls+this.requestfn;\n        this.calculateamount(this.totalExpenseList);\n      }\n    })\n  }\n\n  addToMiscExpenseList()\n  {\n    console.log(this.miscExpenselist);\n    this.totalExpenseList.push(this.miscExpenselist);\n    this.calculateamount(this.totalExpenseList);\n    this.miscExpenselist={};\n    \n  }\n totalAmount:any=0;\n  calculateamount(forCalculation)\n  {  \n    this.totalAmount=0;\n    for(let i=0;i<forCalculation.length;i++)\n    {\n      this.totalAmount=parseInt(this.totalAmount)+parseInt(forCalculation[i].amount);\n    }\n      console.log(this.totalAmount);\n\n  }\n\n  removeExpense(index)\n  {\n    this.totalExpenseList.splice(index,1)\n  }\n\n  miscExpense()\n  { \n    console.log(this.totalAmount);\n    console.log(this.totalExpenseList);\n    this.misc_Expense.actualExpenseAmount=this.totalAmount;\n    this.misc_Expense.miscExpense={\"miscExp\":this.totalExpenseList}\n    console.log(this.misc_Expense);\n    this.loader=true;\n     this.service.fetchData(this.misc_Expense,\"expense/update\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.router.navigate(['/expense-list']);\n        this.toast.openSucess(\"Expense\",\"Updated SuccessFully\");\n      }    \n    })\n    \n  }\n\n  allmiscexpense(expenseStatus)\n  {\n    this.misc_Expense.status=expenseStatus;\n  }\n\n  setFocus(form) {\n    for (var key in form.controls)\n    {\n      if (form.controls.hasOwnProperty(key)) {\n        if(form.controls[key].status=='INVALID')\n        {\n          if (isPlatformBrowser(this.platformId)) {\n            $('#'+key).focus();\n          }\n          break;\n        }\n        console.log(key + \" -> \" + form.controls[key].status);\n      }\n    }\n    \n  }\n  selectedFile:any=[];\n  documentUrl:any=[];\n  insertImage(data)\n  {\n          this.selectedFile=[];\n          let files = data.target.files;\n          if (files) {\n            for (let file of files) {\n              let reader = new FileReader();\n              reader.onload = (e: any) => {\n                this.documentUrl.push(e.target.result);\n              }\n              reader.readAsDataURL(file);\n            }\n          }\n          console.log(this.documentUrl);\n          console.log(data.target.files.length);\n          for(var i=0; i<data.target.files.length; i++)\n          {\n            this.selectedFile.push(data.target.files[i]);\n          }\n\n          setTimeout(() => {\n            this.Insert_Image();\n          }, 500);\n  }\n  misc_Expense_Document;\n  Insert_Image()\n  {\n          this.misc_Expense_Document=new FormData;\n          this.misc_Expense_Document.action=1;\n          this.misc_Expense_Document.binaryData=this.documentUrl[this.documentUrl.length - 1];\n          this.misc_Expense_Document.documentType=4;\n          this.misc_Expense_Document['documentName'] = this.selectedFile[0].name;\n          this.misc_Expense_Document.referenceId=this.expenseId;\n          this.loader=true;\n          for(var i=0; i<this.selectedFile.length; i++)\n          {\n            if(this.selectedFile[i].type == 'application/pdf') {\n              this.misc_Expense_Document['fileName'] = \"document\"+i+\".pdf\",this.selectedFile[i];\n            } else {\n              this.misc_Expense_Document['fileName'] = \"document\"+i+\".jpg\",this.selectedFile[i];\n            }\n            // this.misc_Expense_Document.fileName = \"image\"+i+\".jpg\",this.selectedFile[i];\n          }\n          console.log(this.misc_Expense_Document);\n          let value=[];\n          value[0]=this.misc_Expense_Document;\n          console.log(value);\n\n          this.service.fetchData(value,\"document/update\").subscribe((resp)=>\n          {\n              console.log(resp);\n              if(resp)\n              {\n                  this.loader=false;\n                  this.getExpenseList(this.expenseId);\n                  this.toast.openSucess('Image Added Sucessfully','');\n                \n              }\n          });\n  }\n\n  picdata:any={}\n  picvalue:any=[];\n  deleteimg(picid,filename)\n  {\n    console.log(picid,filename);\n    this.picdata.documentId=picid;\n    this.picdata.action=2;\n    this.picdata.fileName=filename;\n    this.picdata.documentType=4;\n    this.picdata.referenceId=this.expenseId;\n    this.picvalue.push(this.picdata);\n    console.log(this.picvalue);\n    this.dialog.delete(\"Document\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.loader=true;\n        this.service.fetchData(this.picvalue,\"document/update\").subscribe((resp)=>\n        { \n          console.log(resp);\n          if(resp['status']=='Success')\n          {\n            this.toast.openSucess('Image Deleted Sucessfully','');\n            this.loader=false;\n            this.getExpenseList(this.expenseId);\n            this.picvalue=[];\n          }\n          \n        });\n      }\n    });\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n    <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n      </div>\\n    \\n\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n        <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"h-icon\\\">\\n        <div class=\\\"heading-text\\\">\\n        <!-- <div *ngIf=\\\"userRole==1\\\" class=\\\"back-btn\\\">\\n            <a mat-button ><i  routerLink=\\\"/expense-list\\\" routerLinkActive=\\\"active\\\" class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n          </div> -->\\n          <h2>Expense List</h2>\\n          <p>{{userName}}</p>\\n        </div>\\n    </div>\\n  </div>\\n  \\n  \\n  \\n  <div class=\\\"container-outer\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr>\\n                  <th  class=\\\"w30\\\">&nbsp;</th>\\n                  <th>Date</th>\\n                  <th class=\\\"w200\\\">Expense Type</th>\\n                  <th class=\\\"w150\\\">Expense Amount</th>\\n                  <th class=\\\"w200\\\">Status</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor=\\\"let expense of expenseList;let i=index\\\">\\n                    <td class=\\\"w30\\\">{{i+1}}</td>\\n                    <td><a class=\\\"link-btn\\\" routerLink=\\\"/detail-by-date/{{expense.expenseId}}\\\" routerLinkActive=\\\"active\\\" mat-button>{{expense.createdOn | date :'EEEE, MMMM d, y'}}</a></td>\\n                    <td *ngIf=\\\"expense.expenseType==1\\\" class=\\\"w200\\\">Local Conveyance</td>\\n                    <td *ngIf=\\\"expense.expenseType==2\\\" class=\\\"w200\\\">Outstation Travel</td>\\n                    <td *ngIf=\\\"expense.expenseType==3\\\" class=\\\"w200\\\">Sales Promotion Activity</td>\\n                    <td *ngIf=\\\"expense.expenseType==4\\\" class=\\\"w200\\\">Misc Exp.</td>\\n                    <td class=\\\"w150\\\">{{expense.actualExpenseAmount |currency: 'INR':true}}</td>\\n                    <td *ngIf=\\\"expense.status==1\\\"  class=\\\"w200 yellow-clr\\\">Pending</td>\\n                    <td *ngIf=\\\"expense.status==2\\\" class=\\\"w200 green-clr\\\">Approve</td>\\n                    <td *ngIf=\\\"expense.status==3\\\" class=\\\"w200 red-clr\\\">Reject</td>\\n\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"data-not-available\\\" *ngIf=\\\"div\\\">\\n    <div class=\\\"outer\\\">\\n        <div class=\\\"iinear\\\">\\n            <div class=\\\"figure\\\" matRipple>\\n                <div class=\\\"header\\\">\\n                    <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                </div>\\n                \\n                <div class=\\\"description\\\">\\n                    <div class=\\\"cs-heading\\\">\\n                        <h2>No Expense of This User</h2>\\n                    </div>\\n                    <div class=\\\"img\\\">\\n                            <i class=\\\"material-icons\\\">error_outline</i>\\n                    </div>\\n                    <div class=\\\"psc\\\">\\n                        <p>data not available</p>\\n                        <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"fixed-multibtn-botm\\\">\\n  <ul>\\n    <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-expense\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n  </ul>\\n</div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZXhwZW5zZS1kZXRhaWwvZXhwZW5zZS1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\n\n@Component({\n  selector: 'app-expense-detail',\n  templateUrl: './expense-detail.component.html',\n  styleUrls: ['./expense-detail.component.scss']\n})\nexport class ExpenseDetailComponent implements OnInit {\n\n  userId:any;\n  expenseList:any=[];\n  userName:any;\n  loader:any=false;\n  div:any=false\n  user:any={};\n  userType:any;\n  // userId:any;\n  userRole:any;\n  constructor(public route:ActivatedRoute,public service:ConstantService) {\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    this.route.params.subscribe( params => {\n      console.log(params);\n      this.userId = params.id;\n      console.log(this.userId);\n      if(this.userId)\n      {\n        this.getExpenseList();\n      }\n      });\n   }\n\n  ngOnInit() {\n  }\n\n  getExpenseList()\n  {\n    this.div=false;\n      this.loader=true;\n      this.service.fetchData({\"userId\": this.userId,\"currentPage\": 1,\"pageSize\": 50},\"expense/list\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.expenseList=result['data'];\n          this.userName=this.expenseList[0]['userName'];\n        }\n        if(result['status']=='Failed')\n        {\n          this.div=true;\n        }\n      })\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  \\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text flex-heading\\\">\\n        <div class=\\\"content\\\">\\n          <h2>Expense List</h2>\\n          <p>{{expenseList.length}}</p>\\n        </div>\\n       \\n        <div *ngIf=\\\"userRole!=10\\\" class=\\\"item-filter\\\" >\\n          <mat-form-field *ngIf=\\\"userRole!=17\\\" class=\\\"wp100\\\">\\n            <mat-select   name=\\\"expense\\\" #expense=\\\"ngModel\\\" [(ngModel)]=\\\"filter.expense\\\">\\n              <mat-option (click)=\\\"getExpenseList(1,2)\\\" [value]=1>My Expense</mat-option>\\n              <mat-option (click)=\\\"getExpenseList(2,2)\\\" [value]=2>Wating For Approvel</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"userRole!=17\\\" class=\\\"left-auto\\\">\\n        <div *ngIf=\\\"filterData.expenseType|| filterData.createdOn||filterData.createdByName\\\" class=\\\"filter-container left-auto\\\">\\n            <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n              <button mat-button >CLEAR FILTER</button>\\n            </div>\\n          </div>\\n      <div class=\\\"tabs right-tab none-af\\\">\\n        <ul>\\n          <li><a class=\\\"pending\\\" [ngClass]=\\\"{'tab-active':expenseStatus==2}\\\" (click)=\\\"getExpenseList(filter.expense,2)\\\" >PENDING</a></li>\\n          <li><a class=\\\"approved\\\" [ngClass]=\\\"{'tab-active':expenseStatus==5}\\\" (click)=\\\"getExpenseList(filter.expense,5)\\\" >APPROVED</a></li>\\n          <li><a class=\\\"reject\\\" [ngClass]=\\\"{'tab-active':expenseStatus==6}\\\" (click)=\\\"getExpenseList(filter.expense,6)\\\" >REJECT</a></li>\\n          <li *ngIf=\\\"filter.expense==1\\\"><a class=\\\"draft\\\" [ngClass]=\\\"{'tab-active':expenseStatus==1}\\\" (click)=\\\"getExpenseList(filter.expense,1)\\\" >DRAFT</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"cs-table left-right-20\\\">\\n          \\n          <div class=\\\"sticky-head\\\">\\n            <div class=\\\"table-head\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr>\\n                  <th  class=\\\"w30\\\">&nbsp;</th>\\n                  <th class=\\\"w160\\\">Date</th>\\n                  <th>User Name</th>\\n                  <th class=\\\"w180\\\">designation</th>\\n                  <th class=\\\"w180\\\">Expense Type</th>\\n                  <th class=\\\"w150 text-right\\\">Expense Amount</th>\\n                  <th class=\\\"w150\\\">Status</th>\\n                </tr>\\n              </table>\\n            </div>\\n            <div class=\\\"table-head bdrt\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr>\\n                  <th class=\\\"w30\\\">&nbsp;</th>\\n                  <th class=\\\"w160\\\">\\n                    <div class=\\\"th-search padding0\\\" >\\n                      <mat-form-field class=\\\"wp100 toggle-date-picker\\\">\\n                        <input matInput (dateChange)=\\\"getExpenseList(filter.expense,expenseStatus)\\\" name=\\\"createdOn\\\" [(ngModel)]=\\\"filterData.createdOn\\\" [matDatepicker]=\\\"picker\\\" >\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker  #picker></mat-datepicker>\\n                      </mat-form-field>\\n                    </div>\\n                  </th>\\n                  <th>\\n                    <div class=\\\"th-search\\\">\\n                      <input type=\\\"text\\\" name=\\\"createdByName\\\" [(ngModel)]=\\\"filterData.createdByName\\\" (input)=\\\"getExpenseList(filter.expense,expenseStatus)\\\">\\n                    </div>\\n                  </th>\\n                  <th class=\\\"w180\\\">&nbsp;\\n                  </th>\\n                  <th class=\\\"w180\\\">\\n                    <div class=\\\"th-search padding0\\\">\\n                      <mat-select   name=\\\"expenseType\\\" #expenseType=\\\"ngModel\\\" [(ngModel)]=\\\"filterData.expenseType\\\">\\n                        <mat-option (click)=\\\"getExpenseList(filter.expense,expenseStatus)\\\" [value]=1>Local Expense</mat-option>\\n                        <mat-option (click)=\\\"getExpenseList(filter.expense,expenseStatus)\\\" [value]=2>Out Station Expense</mat-option>\\n                        <mat-option (click)=\\\"getExpenseList(filter.expense,expenseStatus)\\\" [value]=3>Sales Promotion Expense</mat-option>\\n                        <mat-option (click)=\\\"getExpenseList(filter.expense,expenseStatus)\\\" [value]=4>Misc Expense</mat-option>\\n                      </mat-select>\\n                    </div>\\n                  </th>\\n                  <th class=\\\"w150\\\">&nbsp;</th>\\n                  <th class=\\\"w150\\\">&nbsp;</th>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n          \\n          \\n          <div class=\\\"table-container\\\">\\n            <div class=\\\"table-content\\\">\\n              <!-- <div infinite-scroll\\n                [infiniteScrollDistance]=\\\"2\\\"\\n                [infiniteScrollThrottle]=\\\"1000\\\"\\n                [scrollWindow]=\\\"true\\\"\\n                (scrolled)=\\\"onScrollDown($event)\\\"\\n                [infiniteScrollDisabled]=\\\"isFullListDisplayed\\\"\\n                >\\n              </div> -->\\n              <table class=\\\"sno-border\\\">\\n                <tr *ngFor=\\\"let expense of expenseList;let i=index\\\">\\n                  <td class=\\\"w30\\\">{{i+1}}</td>\\n                  <td class=\\\"w160\\\" *ngIf=\\\"expense.status==1\\\"><a class=\\\"link-btn\\\" (click)=\\\"editExpense(expense.expenseId,expense.expenseType)\\\" mat-button>{{expense.createdOn | date :'EEEE, MMMM d, y'}}</a></td>\\n                  <td class=\\\"w160\\\" *ngIf=\\\"expense.status!=1\\\"><a class=\\\"link-btn\\\" routerLink=\\\"/detail-by-date/{{expense.expenseId}}\\\" routerLinkActive=\\\"active\\\" mat-button>{{expense.createdOn | date :'EEEE, MMMM d, y'}}</a></td>\\n                  <td>{{expense.userName}}</td>\\n                  <td class=\\\"w180\\\">{{expense.designationName}}</td>\\n                  \\n                  <td *ngIf=\\\"expense.expenseType==1\\\" class=\\\"w180\\\">Local Conveyance</td>\\n                  <td *ngIf=\\\"expense.expenseType==2\\\" class=\\\"w180\\\">Outstation Travel</td>\\n                  <td *ngIf=\\\"expense.expenseType==3\\\" class=\\\"w180\\\">Sales Promotion Activity</td>\\n                  <td *ngIf=\\\"expense.expenseType==4\\\" class=\\\"w180\\\">Misc Exp.</td>\\n                  <td class=\\\"w150 text-right\\\">{{expense.actualExpenseAmount |currency: 'INR':true}}</td>\\n                  <td  class=\\\"w150 txt-center\\\" [ngClass]=\\\"{'pending':expense.status==2||expense.status==3,'approved':expense.status==5,'reject':expense.status==4||expense.status==6,'draft':expense.status==1}\\\">\\n                    <span *ngIf=\\\"expense.status==2 ||expense.status==3\\\">Pending</span>\\n                    <span *ngIf=\\\"expense.status==5\\\">Approve</span>\\n                    <span *ngIf=\\\"expense.status==6\\\" >Reject</span>\\n                    <span *ngIf=\\\"expense.status==1\\\">Draft</span>\\n                  </td>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"data-not-available\\\" *ngIf=\\\"div\\\">\\n    <div class=\\\"outer\\\">\\n      <div class=\\\"iinear\\\">\\n        <div class=\\\"figure\\\" matRipple>\\n          <div class=\\\"header\\\">\\n            <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n          </div>\\n          \\n          <div class=\\\"description\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>No Expense of This User</h2>\\n            </div>\\n            <div class=\\\"img\\\">\\n              <i class=\\\"material-icons\\\">error_outline</i>\\n            </div>\\n            <div class=\\\"psc\\\">\\n              <p>data not available</p>\\n              <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-expense\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZXhwZW5zZS1saXN0L2V4cGVuc2UtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {formatDate } from '@angular/common';\nimport { ConstantService } from 'src/app/constant.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ThrowStmt } from '@angular/compiler';\nimport * as moment from 'moment';\n// import moment = require('moment');\n\n@Component({\n  selector: 'app-expense-list',\n  templateUrl: './expense-list.component.html',\n  styleUrls: ['./expense-list.component.scss']\n})\nexport class ExpenseListComponent implements OnInit {\n  user:any={};\n  userType:any;\n  userId:any;\n  userRole:any;\n  salesUserList:any=[];\n  date= new Date();\n  today = '';\n  loader:any=false;\n  div:any=false;\n  expenseList:any=[]\n  userName:any;\n  expenseStatus:any=2;\n  data:any={};\n  currentPage:any=1;\n  pageSize:any=50;\n  constructor(public service:ConstantService,public router:Router) {\n    this.today = formatDate(this.date, 'dd-MM-yyyy hh:mm:ss a','en-US','+0530');\n    console.log(this.today);\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    this.expenseStatus=2;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    if(this.userId)\n    {\n      this.filter.expense=1;\n      this.getExpenseList(this.filter.expense,this.expenseStatus);\n      \n    }\n    \n    \n  }\n  \n  ngOnInit() {\n  }\n  \n  filterData:any={}\n  filter:any={}\n  tmpExpenseList:any=[];\n  \n  getExpenseList(status,expenseStatus)\n  {\n    if(this.filterData.createdOn)\n    {\n      this.filterData.createdOn=moment(this.filterData.createdOn).format('YYYY-MM-DD')\n    }\n    this.expenseList=[];\n    this.expenseStatus=expenseStatus;\n    \n    console.log(status);\n    if(this.userRole!=17)\n    { \n      if(status==1)\n      {\n        \n        this.filterData.createById=this.userId;\n        this.filterData.currentPage=1\n        this.filterData.pageSize=this.pageSize\n        this.filterData.status=expenseStatus;\n        \n      }\n      else{\n        this.filterData.currentPage=1\n        this.filterData.pageSize=this.pageSize\n        this.filterData.createById=undefined;\n        this.filterData.status=expenseStatus\n      }\n    }\n    else{\n      this.filterData.currentPage=1\n      this.filterData.pageSize=this.pageSize\n      this.filterData.status=3\n    }\n    \n    this.div=false;\n    this.loader=true;\n    this.service.fetchData(this.filterData,\"expense/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(this.userRole!=17)\n      {\n        if(status==1)\n        {\n          if(expenseStatus==2)\n          {\n            this.getSenctionerPendingList(3)\n          }\n          if(expenseStatus==6)\n          {\n            this.getSenctionerPendingList(4)\n          }\n        }\n        if(result['status']=='Success')\n        {\n          this.expenseList=result['data'];\n          this.tmpExpenseList=result['data'];\n          // this.userName=this.expenseList[0]['userName'];\n          if(status==2)\n          {\n            const expenseArray=this.tmpExpenseList.filter(row=>row.createdBy!=this.userId && row.status!=1);\n            \n            console.log(expenseArray);\n            \n            this.expenseList=expenseArray;\n          }\n          \n        }\n      }\n      else if(result['status']=='Success')\n      {\n        this.expenseList=result['data'];\n      }\n      if(result['status']=='Failed')\n      {\n        this.div=true;\n      }\n    })\n  }\n  \n  pendingExpenseList:any;\n  getSenctionerPendingList(status)\n  {\n        this.filterData.createById=this.userId;\n        this.filterData.currentPage=1\n        this.filterData.pageSize=this.pageSize\n        this.filterData.status=status;\n    this.loader=true;\n    this.service.fetchData(this.filterData,\"expense/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.pendingExpenseList=result['data'];\n        this.expenseList=this.expenseList.concat(this.pendingExpenseList);\n        console.log(this.expenseList);\n        \n      }\n    })\n  }\n  \n  clearfilter()\n  {\n    this.filterData.createdByName=undefined;\n    this.filterData.createdOn=undefined;\n    this.filterData.expenseType=undefined;\n    this.getExpenseList(this.filter.expense,this.expenseStatus)\n    // filterData.expenseType|| filterData.createdOn||filterData.createdByName\n  }\n  editExpense(id,type)\n  {\n    console.log(id,type);\n    if(type==1)\n    {\n      this.localExpensePage(id);\n    }\n    if(type==2)\n    {\n      this.outStationExpensePage(id)\n    }\n    if(type==3)\n    {\n      this.salesPromotionPage(id)\n    }\n    if(type==4)\n    {\n      this.miscExpensePage(id)\n    }\n  }\n  \n  outStationExpensePage(id)\n  {\n    this.router.navigate(['/edit-out-station/'+id])\n  }\n  miscExpensePage(id)\n  {\n    this.router.navigate(['/editmisc/'+id])\n    \n  }\n  localExpensePage(id)\n  {\n    this.router.navigate(['/edit-local-expense/'+id])\n    \n  }\n  salesPromotionPage(id)\n  {\n    this.router.navigate(['/edit-sales-pormotion/'+id])\n    \n  }\n  \n  // onScrollDown(event) {\n  \n  //   console.log('down down down to the bottom of the sea',event);\n  //   var next = parseInt(this.currentPage) + parseInt(this.pageSize);\n  //   console.log(next);\n  \n  //   this.getExpenseList(this.filter.expense,this.expenseStatus);\n  \n  // }\n  \n}\n","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.valid && onSubmit()\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n<div class=\\\"main-container\\\">\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>{{lead_data.establishment}}</h2>\\n        <p>{{lead_data.city}}</p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s2\\\">&nbsp;</div>\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"sprate-box\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>Create Follow-up</h2>\\n              <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n            </div>\\n            <mat-divider class=\\\"left-right-15 mt10\\\"></mat-divider>\\n            <div class=\\\"from-fields\\\">\\n              <div class=\\\"row mb0\\\">\\n                <div class=\\\"col s6 pl0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select  placeholder=\\\"Select Network\\\" id=\\\"role\\\" name=\\\"role\\\" [(ngModel)]=\\\"activitydata.role\\\" #role=\\\"ngModel\\\"  [ngClass]=\\\"{ 'is-invalid': f.submitted && role.invalid }\\\" required>\\n                        <mat-option  (click)=\\\"getnetworklist(role.roleId)\\\" *ngFor=\\\"let role of client1\\\" value=\\\"{{role.roleId}}\\\">{{role.roleName}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && role.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"role.errors.required\\\">Network  is required</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n                <div class=\\\"col s6 pr0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select  placeholder=\\\"Select Company\\\"  id=\\\"networkId\\\" name=\\\"networkId\\\" #networkId=\\\"ngModel\\\" [(ngModel)]=\\\"activitydata.networkId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && networkId.invalid }\\\" required>\\n                        <mat-option *ngFor=\\\"let netdata of distributionList\\\" value=\\\"{{netdata.networkId}}\\\">{{netdata.establishment}}</mat-option>\\n                        <!-- <mat-option value=\\\"OtherCustomerType\\\">Other User</mat-option> -->\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && networkId.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"networkId.errors.required\\\">Company is required</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"activitydata.networkId=='OtherCustomerType'\\\" class=\\\"row\\\">\\n                  <div  class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput placeholder=\\\"Name\\\" id=\\\"OtherCustomer\\\" name=\\\"OtherCustomer\\\" #OtherCustomer=\\\"ngModel\\\" [(ngModel)]=\\\"activitydata.OtherCustomer\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && OtherCustomer.invalid }\\\" required>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && OtherCustomer.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"OtherCustomer.errors.required\\\">Name is required</mat-error>\\n                        \\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n                <!-- <div class=\\\"col s6\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <mat-select placeholder=\\\"Activity Type\\\" name=\\\"activityType\\\" #activityType=\\\"ngModel\\\" [(ngModel)]=\\\"activitydata.activityType\\\"  [ngClass]=\\\"{ 'is-invalid': f.submitted && activityType.invalid }\\\" required>\\n                        <mat-option value=\\\"1\\\">Call </mat-option>\\n                        <mat-option value=\\\"2\\\">Metting </mat-option>\\n                        <mat-option value=\\\"3\\\">Email </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && activityType.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"activityType.errors.required\\\">Activity Type is required</mat-error>\\n                      </mat-error>\\n                  </div>\\n                </div> -->\\n              </div>\\n              <div class=\\\"row mb0\\\">\\n                <div class=\\\"col s6\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <input matInput [matDatepicker]=\\\"picker\\\"  [min]='currentDate' placeholder=\\\"Choose a date\\\" name=\\\"followUpDate\\\" #followUpDate=\\\"ngModel\\\" [(ngModel)]=\\\"activitydata.followUpDate\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && followUpDate.invalid }\\\" readonly required>\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #picker></mat-datepicker>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && followUpDate.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"followUpDate.errors.required\\\">Date is required</mat-error>\\n                      </mat-error>\\n                  </div>\\n                </div>\\n                <div class=\\\"col s6\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <mat-select placeholder=\\\"Next Follow-up Type\\\" name=\\\"followUpType\\\" #followUpType=\\\"ngModel\\\" [(ngModel)]=\\\"activitydata.followUpType\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && followUpType.invalid }\\\" required >\\n                        <mat-option value=\\\"1\\\">Call </mat-option>\\n                        <mat-option value=\\\"2\\\">Metting </mat-option>\\n                        <mat-option value=\\\"3\\\">Email </mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && followUpType.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"followUpType.errors.required\\\">Follow-up Type is required</mat-error>\\n                      </mat-error>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row mb0\\\">\\n                <div class=\\\"col s12\\\">\\n                  <div class=\\\"from-fields\\\">\\n                    <div class=\\\"control-field\\\" >\\n                      <mat-form-field class=\\\"cs-input wp100 h-input\\\">\\n                        <textarea matInput placeholder=\\\"Remark\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"activitydata.remarks\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && remarks.invalid }\\\" required  ></textarea>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && remarks.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"remarks.errors.required\\\">Remarks is required</mat-error>\\n                        </mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col s2\\\">&nbsp;</div>\\n          <div class=\\\"col s2\\\">&nbsp;</div>\\n          <div class=\\\"col s8\\\">\\n            <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\" >Save</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col s2\\\">&nbsp;</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"h50\\\"></div>\\n</div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport { sessionStorage }  from '../../local-storage.service';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-add-followup',\n  templateUrl: './add-followup.component.html'\n})\nexport class AddFollowupComponent implements OnInit {\n  currentDate:any = new Date();\n  constructor(public db:ConstantService,public toast:SnackBarOverview,public ses: sessionStorage,  public router:Router, \n    public route:ActivatedRoute,public dialog:DialogComponent) { }\nid:any;\nuserdata:any=[];\nrolelists:any=[];\nuserType:any;\ndistributionList:any;\nlead_data:any={};\nclient1:any;\nsenddata:any; \nactivitydata:any={}; \nloader:any=false;\n    ngOnInit() {\n      this.userdata=this.ses['user']['data'];\n  this.userType=this.userdata['userType'];\n  this.activitydata.userId=this.userdata['userId'];\n  this.activitydata.role=this.userdata['role'];\n  console.log(this.activitydata.userId);\n      // this.route.params.subscribe(params=>{\n      //   this.id = params.id;\n      //   this.db.fetchData({\"leadId\":this.id},'lead/list').subscribe((response)=>{\n      //   console.log(response)\n      //   this.lead_data=response['data'][0];\n      //   this.activitydata.referenceId=this.lead_data.leadId;\n      //   console.log(\"check session\");\n      //   this.activitydata.userId=this.ses.user.data.userId;\n        \n      // });\n      // });\n      this.rolelist();\n    }\n    onSubmit(){\n      this.loader=true;\n      console.log(this.activitydata);\n      console.log(this.activitydata.followUpDate);\n      let nextFollowUpDate=moment(this.activitydata.followUpDate).format('YYYY-MM-DD ');\n      this.activitydata.followUpDate=nextFollowUpDate;\n      console.log(this.activitydata.followUpDate);\n\n\n        const activitydata2 = JSON.parse(JSON.stringify(this.activitydata));\n        if(activitydata2['networkId']=='OtherCustomerType'){\n        delete activitydata2['networkId'];}\n        console.log(activitydata2);\n\n\n      this.db.fetchData(activitydata2,'followup/add').subscribe((response)=>{\n        console.log(response)\n        this.loader=false\n        if(response['message']==\"FollowUp added Successfully\")\n        {\n          this.toast.openSucess('User added successfully','');\n            this.router.navigate(['//followup-list'])\n        }else{\n        this.toast.openSucess(response['message'],'');}\n      });\n    }\n\n\n    rolelist()\n    {\n      \n    this.db.fileData('','usertype/list').subscribe((response)=>{\n    console.log(response);\n    this.rolelists=response['data'];\n    let cllient= this.rolelists.filter(x => x.userTypeId==3);\n    this.client1=cllient[0].roles;\n    console.log(this.client1);\n    });\n    }\n\n\n    getnetworklist(role){\n      if(role==11){\n        this.activitydata.activityModule=2\n      }\n      else if(role==12){\n        this.activitydata.activityModule=1\n      }\n      else if(role==13){\n        this.activitydata.activityModule=3\n      }\n      else if(role==14){\n        this.activitydata.activityModule=4\n      }\n      else if(role==15){\n        this.activitydata.activityModule=5\n      }\n    this.loader=true;\n      if(this.userdata['userType']==2){\n        this.senddata={\"role\":this.activitydata.role,\"salesUserId\":this.userdata['userId']};\n        console.log(this.senddata);\n      this.db.fetchData(this.senddata,'mynetwork/detail').subscribe((response)=>\n      {\n        console.log(response)\n        this.loader=false;\n        this.distributionList=response['data'];\n        console.log(this.distributionList);\n      });\n      }else{\n        this.senddata={\"role\":this.activitydata.role,};\n        console.log(this.senddata);\n      this.db.fetchData(this.senddata,'network/list').subscribe((response)=>\n      {\n        console.log(response)\n        this.loader=false;\n        this.distributionList=response['data'];\n        console.log(this.distributionList);\n      });\n      }\n    }\n}\n","module.exports = \"<form  #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && creatNextFollowUp()\\\" novalidate>\\n  <div class=\\\"main-container\\\">\\n    <div *ngIf=\\\"loader\\\"> \\n      <div class=\\\"cs-loader\\\">\\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n      </div>\\n    </div>\\n    <div class=\\\"middle-container\\\">\\n      <div class=\\\"page-heading\\\">\\n        <!-- <img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"h-icon\\\"> -->\\n        <div class=\\\"heading-text bc-space\\\">\\n          <h2><span *ngIf='activityDetail.networkEstablishement'>{{activityDetail.networkEstablishement}}</span><span *ngIf='activityDetail.otherCustomer'>{{activityDetail.otherCustomer}}</span></h2>\\n          <!-- <h2>{{activityDetail.establishment}}</h2> -->\\n          <p></p>\\n          \\n          <div class=\\\"back-btn\\\">\\n            <a mat-button routerLink=\\\"/followup-list\\\" routerLinkActive=\\\"active\\\" ><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"left-auto\\\" *ngIf=\\\"activityDetail.isClosed==false\\\">\\n        <div class=\\\"cs-btn  text-right\\\">\\n          <div class=\\\"in-btn\\\">\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"close_followup()\\\">Close Follow-Up</button>\\n            <a mat-raised-button color=\\\"accent\\\" *ngIf=\\\"activityDetail.nextFollowUpType==2 ||activityDetail.followUpType==2\\\"  (click)=\\\"createactivity(activityDetail.activityId)\\\" routerLinkActive=\\\"active\\\">Create Check-In</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"details-info\\\">\\n              <div class=\\\"basic-details \\\">\\n                <div class=\\\"col s12 cs-figure pl0 pr0\\\">\\n                  <ul>\\n                    <li>\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Follow Up Date</span>\\n                          <p> {{activityDetail.followUpDate | date:'EEEE, MMMM d, y'}}</p>\\n                        </div>\\n                      </div>\\n                    </li>\\n                    <li>\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Follow Up Type</span>\\n                          <p>{{activityDetail.followUpTypeName}}</p>\\n                        </div>\\n                      </div>\\n                    </li>\\n                    <li>\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>User Name</span>\\n                          <p>{{activityDetail.userName}}</p>\\n                        </div>\\n                      </div>\\n                    </li>\\n                    <li>\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Activity Module</span>\\n                          <p>{{activityDetail.activityModuleName}}</p>\\n                        </div>\\n                      </div>\\n                    </li>\\n                  </ul>\\n                  <ul>\\n                  <li>\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Remarks</span>\\n                          <p>{{activityDetail.remarks}}</p>\\n                        </div>\\n                      </div>\\n                    </li>\\n                    <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>Status</span>\\n                            <p><span *ngIf=\\\"activityDetail.isClosed==true\\\">Closed</span><span *ngIf=\\\"activityDetail.isClosed==false\\\">Open</span></p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                  </ul>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <!-- <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"tabs\\\">\\n              <ul>\\n                <li><a  routerLinkActive=\\\"active\\\" (click)=\\\"cloase_followup()\\\">Close Follow-Up</a></li>\\n                <li><a *ngIf=\\\"activityDetail.nextFollowUpType==2 ||activityDetail.followUpType==2\\\"  (click)=\\\"createactivity(activityDetail.activityId)\\\" routerLinkActive=\\\"active\\\">create activity</a></li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div> -->\\n        <div class=\\\"row mt15\\\" *ngIf=\\\"openfollowup==1\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Next Follow-up Information</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"Next Followup Type\\\" name=\\\"nextFollowUpType\\\" #nextFollowUpType=\\\"ngModel\\\"  [ngClass]=\\\"{'has-error' :f.submitted && nextFollowUpType.invalid } \\\" [(ngModel)]=\\\"data.nextFollowUpType\\\" required>\\n                          <mat-option value=\\\"1\\\">Call</mat-option>\\n                          <mat-option value=\\\"2\\\">Meeting</mat-option>\\n                          <mat-option value=\\\"3\\\">Email</mat-option>\\n                          <mat-option value=\\\"4\\\">Taks</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && nextFollowUpType.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error>Follow Up Type is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s6 pr0\\\" *ngIf=\\\"data.nextFollowUpType!=4\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput [matDatepicker]=\\\"pickers\\\" placeholder=\\\"Next Followup Date\\\" name=\\\"nextFollowUpDate\\\"  [ngClass]=\\\"{'has-error' :f.submitted && nextFollowUpDate.invalid } \\\" #nextFollowUpDate=\\\"ngModel\\\" [min]='currentDate' [(ngModel)]=\\\"data.nextFollowUpDate\\\" readonly required>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"pickers\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #pickers></mat-datepicker>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && nextFollowUpDate.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error>Follow Up Date is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row mb20\\\" *ngIf=\\\"data.nextFollowUpType!=4\\\">\\n                  <div class=\\\"col s12 padding0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <textarea matInput placeholder=\\\"Remark\\\"  name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"data.remarks\\\"  required></textarea>\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 empty\\\"></div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"openfollowup==1\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\">Save</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n        \\n        <!-- <div class=\\\"row\\\" *ngIf=\\\"followuphistory!=''\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box mt15 padding0\\\" >\\n              <div class=\\\"full-address\\\">\\n                <div class=\\\"top-heading\\\">\\n                  <h2>Follow-up History</h2>\\n                </div>\\n                <div class=\\\"cs-table\\\">\\n                  <div class=\\\"table-head\\\">\\n                    <table>\\n                      <tr>\\n                        <th class=\\\"w170\\\"> date</th>\\n                        <th class=\\\"w170\\\">Follow-up type</th>\\n                        <th >Remarks</th>\\n                        <th >Status</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"table-container\\\">\\n                    <div class=\\\"table-content none-shadow\\\">\\n                      <table>\\n                        <tr *ngFor=\\\"let check of followuphistory\\\">\\n                          <td class=\\\"w170\\\">{{check.followUpDate|date:'d MMM y'}}</td>\\n                          <td class=\\\"w170\\\">\\n                            <span *ngIf=\\\"check.followUpType==1\\\">Call</span>\\n                            <span *ngIf=\\\"check.followUpType==2\\\">Meeting</span>\\n                            <span *ngIf=\\\"check.followUpType==3\\\">Email</span>\\n                          </td>\\n                          <td>{{check.remarks}}</td>\\n                          <td><span *ngIf=\\\"check.isClosed==true\\\">Closed</span><span *ngIf=\\\"check.isClosed==false\\\">Open</span></td>\\n                        </tr>\\n                      </table>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n         -->\\n        \\n        \\n        \\n        \\n        \\n        \\n        \\n        \\n        \\n        \\n        \\n      </div>\\n    </div>\\n  </div>\\n</form>\\n<div class=\\\"h50\\\"></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvbGxvd3VwL2FsbC1mb2xsb3d1cC1saXN0L2FsbC1mb2xsb3d1cC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport { sessionStorage } from 'src/app/local-storage.service';\nimport * as moment from 'moment';\nimport { DialogComponent } from 'src/app/dialog';\nimport { SnackBarOverview } from 'src/app/toast';\n@Component({\n  selector: 'app-all-followup-list',\n  templateUrl: './all-followup-list.component.html',\n  styleUrls: ['./all-followup-list.component.scss']\n})\nexport class AllFollowupListComponent implements OnInit {\n  activityId:any;\n  openfollowup:any=0;\n  msg:any;\n  activityDetail:any=[];\n  loader:any=false;\n  data:any={};\n  followuphistory:any=[];\n  lastfollowupid:any;\n  userdata:any=[];\n  // currentDate = moment();\n  currentDate:any = new Date().toJSON().split('T')[0];\n  constructor(public alrt:DialogComponent,public parms:ActivatedRoute,public toast:SnackBarOverview,public service:ConstantService,public user:sessionStorage,public router:Router) {\n    this.userdata=this.user['user']['data'];\n    this.parms.params.subscribe(params=>{\n      console.log(params);\n      this.activityId = params.id;\n      console.log(this.activityId);\n      if(this.activityId)\n      {\n        this.getActivityDetail();\n      }\n  });\n   }\n\n  ngOnInit() {\n  }\n\n  createactivity(){\n    this.openfollowup=0;\n    this.data.activityId=this.activityDetail.activityId;\n    this.data.followUpId=this.lastfollowupid;\n    this.data.isClosed=true;\n    this.service.fetchData(this.data,\"followup/update\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.alrt.success();\n      }\n    })\n    localStorage.setItem('activityId', JSON.stringify(this.activityId));\n          this.router.navigate(['/add-activity']);\n          console.log(localStorage);\n  }\n\n  getActivityDetail()\n  {\n    this.loader=true;\n    this.service.fetchData({'followupId':this.activityId,'currentPage': 1,'pageSize': 50},\"followup/list\").subscribe((result)=>{\n      console.log(result);\n      setTimeout (() => {\n        this.loader=false;\n      }, 1000);\n      if(result['status']=='Success')\n      {\n        this.activityDetail=result['data'][0];\n        console.log(this.activityDetail);\n        // this.service.fileData(this.activityDetail.activityId,\"activity/detail/\").subscribe((result)=>{\n        //   console.log(result);\n        //   console.log(\"check data avlok for follow-ups\");\n        //   this.followuphistory=result['data']['activityFollowUps'];\n        //   console.log(this.followuphistory);\n        //   for(var k=0;k<this.followuphistory.length;k++){\n        //     this.lastfollowupid=this.followuphistory[k].followUpId;\n        //   }\n        //   console.log(\"this is the last follow-up\");\n        //   console.log(this.lastfollowupid);\n        // })\n      }\n    })\n  }\n\n\n\n\n\n\n  creatNextFollowUp()\n  {\n    if(this.data.nextFollowUpType!=4){\n    this.loader=true;\n    console.log(this.activityDetail.networkId);\n    console.log(this.activityDetail.referenceId);\n    if(this.activityDetail.networkId!=\"\"){\n    this.data.networkId=this.activityDetail.networkId;\n  }else{\n      this.data.networkId=this.activityDetail.referenceId;\n    }\n    this.data.activityModule=this.activityDetail.activityModule;\n    this.data.activityId=this.activityDetail.activityId;\n    this.data.followUpType=this.data.nextFollowUpType;\n    this.data.followUpDate=moment(this.data.nextFollowUpDate).format('YYYY-MM-DD ');\n    this.data.status=1;\n    this.data.userId=this.userdata['userId'];\n    console.log(this.data);\n    this.service.fetchData(this.data,\"followup/add\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.alrt.success();\n          this.router.navigate(['/followup-list']);\n      }\n    })\n  } else {\n    this.openfollowup=0;\n    this.data.networkId=this.activityDetail.networkId;\n    this.data.activityId=this.activityDetail.activityId;\n    this.data.followUpId=this.lastfollowupid;\n    this.data.isClosed=true;\n    this.service.fetchData(this.data,\"followup/update\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.alrt.success();\n       this.router.navigate(['/add-task']);\n      }\n    })\n  }\n  }\n\n\n\n\n\n  \n  close_followup(){\n    this.msg=\"Follow-Up\"\n    this.alrt.followup(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.openfollowup=1;\n      }\n      else{\n        this.openfollowup=0;\n        console.log(this.activityDetail.followUpId);\n        this.data.activityId=this.activityDetail.activityId;\n        this.data.followUpId=this.activityDetail.followUpId;\n        this.data.isClosed=true;\n        this.service.fileData(this.data.followUpId,\"followup/close/\").subscribe((result)=>{\n          console.log(result);\n          this.loader=false;\n          if(result['status']=='Success')\n          {\n            this.alrt.success();  \n            this.router.navigate(['/followup-list']);\n          }\n        })\n      }\n    });\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n    <div *ngIf=\\\"loader\\\"> \\n        <div class=\\\"cs-loader\\\">\\n          <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n        </div>\\n      </div>\\n    <div class=\\\"middle-container pb15\\\">\\n        <div class=\\\"page-heading\\\">\\n            <img src=\\\"assets/img/folowup.svg\\\" class=\\\"h-icon\\\">\\n            <div class=\\\"heading-text\\\">\\n                <h2>Follow Ups</h2>\\n                <p>Total Follow Up - {{this.followupList.length}}</p>\\n            </div>\\n        </div>\\n        <div class=\\\"tabs right-tab\\\">\\n            <ul>\\n                <li>\\n                    <a class=\\\"pr40\\\" [ngClass]= \\\"{'active' : filter.followUpBeforeDate == 1}\\\" (click)=\\\"filter.followUpBeforeDate=1;filter.followUpAfterDate = 0;filter.date=0;todayFollowUpList(currentDate)\\\">Today's Follow-Ups</a>\\n                </li>\\n                <li>\\n                    <a class=\\\"pr40\\\" [ngClass]= \\\"{'active' : filter.followUpAfterDate == 1}\\\" (click)=\\\"filter.followUpAfterDate = 1;filter.followUpBeforeDate = 0;filter.date=0;todayFollowUpList(currentDate)\\\">Up Coming Follow-Ups</a>\\n                </li>\\n                <!-- <li>\\n                    <a class=\\\"pr40\\\" [ngClass]= \\\"{'active' : tab_class == true}\\\" (click)=\\\"tab_class = !tab_class\\\">Today's Follow-Ups | {{tab_class}}</a>\\n                </li>\\n                <li>\\n                    <a class=\\\"pr40\\\" [ngClass]= \\\"{'active' : tab_class == false}\\\" (click)=\\\"tab_class = !tab_class\\\">Up Coming Follow-Ups</a>\\n                </li> -->\\n            </ul>\\n        </div>\\n        <!-- <div  class=\\\"filter-container left-auto\\\" *ngIf=\\\"filter.date!='' || filter.establishment!='' || filter.nextFollowUpType!=''\\\">\\n            <div  class=\\\"filter-btn\\\">\\n                <button mat-button >CLEAR FILTER</button>\\n            </div>\\n        </div> -->\\n    </div>\\n    \\n    <div class=\\\"container-outer pt0\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <!-- <div class=\\\"col s3\\\">\\n                    <div class=\\\"cs-calender\\\">\\n                        <div class=\\\"calendar\\\">\\n                            <div class=\\\"calendar-navs\\\">\\n                                <div class=\\\"outer\\\">\\n                                    <div class=\\\"innear\\\">\\n                                        <div class=\\\"cal-header\\\">\\n                                            <div class=\\\"month-nav \\\">\\n                                                <button (click)=\\\"prevMonth()\\\" class=\\\"chevron\\\">\\n                                                    <i class=\\\"material-icons dp48\\\">chevron_left</i>\\n                                                </button>\\n                                                <p>{{ currentDate.format('MMMM') }} {{ currentDate.format('YYYY') }}</p>\\n                                                <button (click)=\\\"nextMonth()\\\" class=\\\"chevron\\\">\\n                                                    <i class=\\\"material-icons dp48\\\">chevron_right</i>\\n                                                </button>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"year-nav\\\">\\n                                    <button (click)=\\\"prevYear()\\\">&lt;</button>\\n                                    <span></span>\\n                                    <button (click)=\\\"nextYear()\\\">&gt;</button>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"month-grid\\\">\\n                                <div class=\\\"day-names\\\">\\n                                    <div *ngFor=\\\"let name of dayNames\\\" class=\\\"day-name p9\\\">\\n                                        {{ name }}\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"weeks\\\">\\n                                    <div *ngFor=\\\"let week of weeks\\\" class=\\\"week\\\">\\n                                        <ng-container *ngFor=\\\"let day of week\\\">\\n                                            <div class=\\\"week-date disabled\\\" *ngIf=\\\"!isSelectedMonth(day.mDate,currentDate)\\\">\\n                                                <p class=\\\"date-text\\\">{{ day.mDate.date() }}</p>\\n                                            </div>\\n                                            <div  class=\\\"week-date enabled\\\" *ngIf=\\\"isSelectedMonth(day.mDate,currentDate)\\\" (click)=\\\"selectDate(day.mDate)\\\"\\n                                            [ngClass]=\\\"{ today: day.today, selected: day.selected, workday: day.worked,'workday': day.mDate.format('DD')==date  }\\\"><p class=\\\"date-text\\\">{{ day.mDate.date() }}</p></div>\\n                                        </ng-container>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n                <div class=\\\"col s12 padding0\\\">\\n                    <div class=\\\"cs-table left-right-15\\\">\\n                        <div class=\\\"sticky-head\\\">\\n                            <div class=\\\"table-head\\\">\\n                                <table class=\\\"sno-border\\\"> \\n                                    <tr>\\n                                        <th class=\\\"w30\\\">&nbsp;</th>\\n                                        <th class=\\\"w110\\\">Date</th>\\n                                        <th class=\\\"w200\\\">Company</th>\\n                                        <th class=\\\"w150\\\">Network Type</th>\\n                                        <th *ngIf=\\\"role==1\\\" class=\\\"w150\\\">Users</th>\\n                                        <th class=\\\"w150\\\">Follow-Up Type</th>\\n                                        <th class=\\\"w150\\\">Status</th>\\n                                        <!-- <th>Remark</th> -->\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                            <div class=\\\"table-head bdrt\\\">\\n                                <table class=\\\"sno-border\\\">\\n                                    <tr>\\n                                        <th class=\\\"w30\\\">&nbsp;</th>\\n                                        <th class=\\\"w110\\\">\\n                                            <div class=\\\"th-search padding0\\\" >\\n                                                <mat-form-field class=\\\"wp100 toggle-date-picker\\\">\\n                                                    <input matInput [matDatepicker]=\\\"picker\\\" (dateChange)=\\\"filter.followUpBeforeDate=0;filter.followUpAfterDate=0;selectDate(filter.date)\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"filter.date\\\"  readonly>\\n                                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                    <mat-datepicker  #picker></mat-datepicker>\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </th>\\n                                        <th  class=\\\"w200\\\">\\n                                            <div class=\\\"th-search\\\">\\n                                                <input type=\\\"text\\\" name=\\\"   \\\" (keyup)=\\\"todayFollowUpList(currentDate)\\\" #establishment=\\\"ngModel\\\" [(ngModel)]=\\\"filter.establishment\\\" placeholder=\\\"Search....\\\">\\n                                            </div>\\n                                        </th>\\n                                        <th  class=\\\"w150\\\">\\n                                            <!-- <div class=\\\"th-search\\\">\\n                                                <select placeholder=\\\"Select Role\\\" (change)=\\\"todayFollowUpList(currentDate)\\\" name=\\\"role\\\" #role=\\\"ngModel\\\" [(ngModel)]=\\\"filter.role\\\"  >\\n                                                    <option value=\\\"\\\" disabled>Select</option>\\n                                                    <option  *ngFor=\\\"let user of userRole\\\" value={{user.roleId}}>{{user.roleName}}</option>\\n                                                </select>\\n                                            </div> -->\\n                                        </th>\\n                                        <th *ngIf=\\\"role==1\\\" class=\\\"w150\\\">\\n                                            <!-- <div class=\\\"th-search\\\">\\n                                                <input type=\\\"text\\\" name=\\\"userName\\\" (keyup)=\\\"todayFollowUpList(currentDate)\\\" #userName=\\\"ngModel\\\" [(ngModel)]=\\\"filter.userName\\\" placeholder=\\\"Search....\\\">\\n                                            </div> -->\\n                                            <div class=\\\"th-search\\\">\\n                                                <select placeholder=\\\"Select Role\\\" (change)=\\\"todayFollowUpList(currentDate)\\\" name=\\\"role\\\" #role=\\\"ngModel\\\" [(ngModel)]=\\\"filter.role\\\"  >\\n                                                    <option value=\\\"\\\" disabled>Select</option>\\n                                                    <option  *ngFor=\\\"let user of userRole\\\" value={{user.roleId}}>{{user.roleName}}</option>\\n                                                </select>\\n                                            </div>\\n                                        </th>\\n                                        <th class=\\\"w150\\\">\\n                                            <div class=\\\"th-search\\\">\\n                                                <select (change)=\\\"todayFollowUpList(currentDate)\\\" placeholder=\\\"Select Type\\\" name=\\\"nextFollowUpType\\\" #nextFollowUpType=\\\"ngModel\\\" [(ngModel)]=\\\"filter.nextFollowUpType\\\">\\n                                                    <option value=\\\"\\\" disabled>Select</option>\\n                                                    <option value=\\\"1\\\">Call</option>\\n                                                    <option value=\\\"2\\\">Meeting</option>\\n                                                    <option value=\\\"3\\\">Email</option>\\n                                                </select>\\n                                            </div>\\n                                        </th>\\n                                        <th class=\\\"w150\\\">\\n                                            <div class=\\\"th-search\\\">\\n                                                <select (change)=\\\"todayFollowUpList(currentDate)\\\" placeholder=\\\"Select Type\\\" name=\\\"isClosed\\\" #isClosed=\\\"ngModel\\\" [(ngModel)]=\\\"filter.isClosed\\\">\\n                                                    <option value=\\\"\\\" disabled>Select</option>\\n                                                    <option value=\\\"false\\\">Open</option>\\n                                                    <option value=\\\"true\\\">Closed</option>\\n                                                    \\n                                                </select>\\n                                            </div>\\n                                        </th>\\n                                        <!-- <th>&nbsp;</th> -->\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"table-container\\\">\\n                            <div class=\\\"table-content\\\">\\n                                <table class=\\\"sno-border\\\">\\n                                    <tr  *ngFor=\\\"let data of followupList;let i = index\\\">\\n                                        <td class=\\\"w30\\\">{{i+1}}</td>\\n                                        <td class=\\\"w110\\\">{{data.followUpDate |date:'d MMM y'}}</td>\\n                                        <td class=\\\"w200\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/all-followup-list/{{data.followUpId}}\\\" routerLinkActive=\\\"active\\\" ><span *ngIf='data.networkEstablishement'>{{data.networkEstablishement}}</span><span *ngIf='data.otherCustomer'>{{data.otherCustomer}}</span></a></td>\\n                                        <td class=\\\"w150\\\">{{data.activityModuleName}}</td>\\n                                        <td *ngIf=\\\"role==1\\\" class=\\\"w150\\\">{{data.userName}}</td>\\n                                        <td class=\\\"w150\\\"><span *ngIf=\\\"data.followUpType==1\\\">Call</span><span *ngIf=\\\"data.followUpType==2\\\">Meeting</span><span *ngIf=\\\"data.followUpType==3\\\">Email</span>\\n                                            <!-- <div class=\\\"action-btns\\\">\\n                                                <a mat-button class=\\\"view\\\" (click)=\\\"goToDetail(data.followUpId)\\\"><i class=\\\"material-icons\\\"  >remove_red_eye</i> View</a>\\n                                            </div> -->\\n                                        </td>\\n                                        <td class=\\\"w150\\\"><span *ngIf=\\\"data.isClosed==true\\\">Closed</span><span *ngIf=\\\"data.isClosed==false\\\">Open</span>\\n                                            <div class=\\\"action-btns\\\">\\n                                                <a mat-button class=\\\"view\\\" (click)=\\\"goToDetail(data.followUpId)\\\"><i class=\\\"material-icons\\\"  >remove_red_eye</i> View</a>\\n                                            </div>\\n                                        </td>\\n                                        <!-- <td>{{data.remarks}}</td> -->\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"data-not-available\\\" *ngIf=\\\"div\\\" >\\n                        <div class=\\\"outer\\\">\\n                            <div class=\\\"iinear\\\">\\n                                <div class=\\\"figure\\\" matRipple>\\n                                    <div class=\\\"header\\\">\\n                                        <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                    </div>\\n                                    \\n                                    <div class=\\\"description\\\">\\n                                        <!-- <div class=\\\"cs-heading\\\">\\n                                            <h2>No FollowUp</h2>\\n                                        </div> -->\\n                                        <div class=\\\"img\\\">\\n                                            <i class=\\\"material-icons\\\">error_outline</i>\\n                                        </div>\\n                                        <div class=\\\"psc\\\">\\n                                            <p>data not available</p>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"fixed-multibtn-botm\\\">\\n        <ul>\\n            <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-followup/32\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"h50\\\"></div>\"","import { Component, EventEmitter,OnInit, Input, Output } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { sessionStorage }  from '../../local-storage.service';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport { _localeFactory } from '@angular/core/src/application_module';\nexport interface CalendarDate {\n  mDate: moment.Moment;\n  selected?: boolean;\n  today?: boolean;\n  worked?: boolean;\n  cal_date?: boolean;\n}\n@Component({\n  selector: 'app-followup-list',\n  templateUrl: './followup-list.component.html'\n})\n\nexport class FollowupListComponent implements OnInit {\n  userdata:any=[];\n  senddata:any=[];\n  filter:any={};\n  name:any;\n  date:any;\n  befordate:any;\n  afterdate:any;\n  type:any;\n  loader:any=false;\n  role:any;\n  currentDate:any = new Date().toJSON().split('T')[0];\n  @Input() selectedDates: CalendarDate[] = [];\n  @Output() onSelectDate = new EventEmitter<CalendarDate>();\n  constructor(public db: ConstantService,public router:Router,public user:sessionStorage, public route:ActivatedRoute) {\n    this.userdata=this.user['user']['data'];\n    this.role=this.userdata['role'];\n    this.filter.isClosed=false;\n    this.filter.followUpBeforeDate=1;\n    setTimeout(() => {\n      this.generateCalendar();\n      this.todayFollowUpList(this.currentDate);\n      this.getUserTypeList();\n    }, 500);\n  }\n  followupList:any=[];\n  dayNames = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n  weeks: CalendarDate[][] = [];\n  sortedDates: CalendarDate[] = [];\n  tab_class:any = true;\n  \n  ngOnInit() {\n    \n  }\n  \n \n  \n  isSelectedMonth(date: moment.Moment, d: any): boolean {\n    return moment(date).isSame(d, 'month');\n  }\n  prevMonth(): void {\n    this.currentDate = moment(this.currentDate).subtract(1, 'months');\n  }\n  nextMonth(): void {\n    this.currentDate = moment(this.currentDate).add(1, 'months');\n  }\n  selectDate(date){\n    console.log(moment(date).format('YYYY-MM-DD'));\n    setTimeout(() => {\n      this.todayFollowUpList(moment(date).format('YYYY-MM-DD'));\n    }, 500);\n  }\n  \n  goToDetail(id)\n  {\n    this.router.navigate(['/all-followup-list/'+id])\n  }\n  \n  generateCalendar(): void {\n    const dates = this.fillDates(this.currentDate);\n    const weeks: CalendarDate[][] = [];\n    while (dates.length > 0) {\n      weeks.push(dates.splice(0, 7));\n    }\n    this.weeks = weeks;\n    console.log(this.weeks);\n  }\n  \n  \n  \n  fillDates(currentMoment: moment.Moment): CalendarDate[] {\n    const firstOfMonth = moment(currentMoment).startOf('month').day();\n    const firstDayOfGrid = moment(currentMoment).startOf('month').subtract(firstOfMonth, 'days');\n    const start = firstDayOfGrid.date();\n    return _.range(start, start + 42)\n    .map((date: number): CalendarDate => {\n      const d = moment(firstDayOfGrid).date(date);\n      return {\n        today: this.isToday(d),\n        selected: this.isSelected(d, this.selectedDates),\n        cal_date: this.cal_date,\n        mDate: d,\n      };\n    });\n  }\n  \n  \n  isToday(date: moment.Moment): boolean {\n    return moment().isSame(moment(date), 'day');\n  }\n  \n  \n  isSelected(date: moment.Moment, d: any): boolean {\n    return _.findIndex(d, (selectedDate:any) => {\n      return moment(date).isSame(selectedDate.mDate, 'day');\n    }) > -1;\n  }\n  \n  \n  cal_date: any = '';\n  isActive(date: moment.Moment, user_data: any): boolean {\n    return _.findIndex(user_data, (diet:any) => {\n      if (moment(date).isSame(diet.date_created, 'day')) {\n        this.cal_date = diet.date_created;\n        return true;\n      } else {\n        this.cal_date = undefined;\n        return false;\n      }\n    }) > -1;\n  }\n  \n  \n  \n  \n  \n  nextFollowUpDate:any;\n  div:any=false;\n  todayFollowUpList(dates:any)\n  {\n    console.log(dates);\n    console.log(this.filter.followUpBeforeDate);\n    console.log(this.filter.followUpAfterDate);\n    if(this.filter.followUpBeforeDate==1){\n      console.log(\"befor date is working\");\n      this.befordate=undefined\n      this.afterdate=undefined;\n      this.nextFollowUpDate=moment(dates).format('YYYY-MM-DD');\n    }\n    else if(this.filter.followUpAfterDate==1){\n      console.log(\"after date is working\");\n      this.afterdate=moment(dates).format('YYYY-MM-DD');\n      this.befordate=undefined;\n      this.nextFollowUpDate=undefined;\n    }else{\n      console.log(dates);\n      console.log(\"todays date is working\")\n      this.nextFollowUpDate=moment(dates).format('YYYY-MM-DD');\n      this.afterdate=undefined;\n      this.befordate=undefined;\n    }\n    this.div=false;\n    this.followupList=[];\n    this.date=moment(dates).format('DD');\n    if(this.userdata['userType']==2)\n    {\n      this.senddata={'isClosed':this.filter.isClosed,'followUpAfterDate':this.afterdate,'followUpBeforeDate':this.befordate,\"userId\":this.userdata['userId'],'followUpDate':this.nextFollowUpDate,'companyName':this.filter.establishment,'followUpType':this.filter.nextFollowUpType,\"userRole  \":this.filter.role,\"userName\":this.filter.userName,'currentPage': 1,'pageSize': 50};\n    }\n    if(this.userdata['userType']==1)\n    {\n      this.senddata={'isClosed':this.filter.isClosed,'followUpAfterDate':this.afterdate,'followUpBeforeDate':this.befordate,'followUpDate':this.nextFollowUpDate,'companyName':this.filter.establishment,'followUpType':this.filter.nextFollowUpType,\"userRole\":this.filter.role,\"userName\":this.filter.userName,'currentPage': 1,'pageSize': 50};\n    }\n    this.loader=true;\n    console.log(this.senddata);\n    this.db.fetchData(this.senddata,\"followup/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        setTimeout (() => {\n          this.loader=false;\n        }, 1500);\n        this.followupList=result['data'];\n        for(let i=0;i<this.followupList.length;i++)\n        {\n          for(let j=0;j<this.userRole.length;j++)\n          {\n            if(this.userRole[j]['roleId']===this.followupList[i]['userRole'])\n            {\n              this.followupList[i]['roleName']=this.userRole[j]['roleName'];\n            }\n          }\n        }\n      }\n      if(result['status']=='Failed')\n      {\n        setTimeout (() => {\n          this.div=true;\n          this.loader=false;\n        }, 1000);\n      }\n    });\n    console.log('****** FILTER *******');\n    console.log(this.filter)\n    \n  }\n  \n  \n  \n \n  \n  \n  rolelistsales1:any=[];\n  rolelists:any=[];\n  userRole:any=[];\n  getUserTypeList()\n  {\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.rolelists=response['data'];\n      let filterrolesales= this.rolelists.filter(x => x.userTypeId==2);\n      this.userRole=filterrolesales[0].roles;\n      // console.log(this.rolelistsales1);\n      // let filterrolesystem= this.rolelists.filter(x => x.userTypeId==1);\n      // // this.rolelistsystem1=filterrolesystem[0].roles;\n      // for(let i=0;i<this.rolelistsales1.length;i++){\n      //   this.userRole.push({\"roleName\":this.rolelistsales1[i]['roleName']});}\n      // console.log(this.rolelistsales1);\n      console.log(this.userRole);\n    });\n  }\n  \n  \n}\n\n","module.exports = \"<!-- \\n<footer>\\n  <p>Powered by Abacusdesk</p>\\n</footer> -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<header>\\n    <div class=\\\"logo\\\">\\n        <img src=\\\"assets/img/theme/kenshjn/logo.svg\\\">\\n        \\n    </div>\\n    \\n    <div id=\\\"nav-icon2\\\" (click)=\\\"toggleNav()\\\" matRipple>\\n        <span></span>\\n        <span></span>\\n        <span></span>\\n    </div>\\n    \\n    <div class=\\\"animation-content\\\">\\n        <h2 class=\\\"zoomOut animated delay-2s\\\">Welcome to the world of opportunities.</h2>\\n        <h2 class=\\\"zoomIn animated delay-3s \\\">Your journey to deliver quality products with smartest solutions start here!</h2>\\n        <!-- slideOutRight -->\\n    </div>\\n    \\n    <!-- <div class=\\\"cs-type\\\">\\n        <mat-form-field class=\\\"sel-opt\\\">\\n            <select matNativeControl required>\\n                <option value=\\\"volvo\\\">Type</option>\\n                <option value=\\\"saab\\\">Saab</option>\\n                <option value=\\\"mercedes\\\">Mercedes</option>\\n                <option value=\\\"audi\\\">Audi</option>\\n                <option value=\\\"distribution net\\\">Distribution Net.</option>\\n            </select>\\n        </mat-form-field>\\n    </div>\\n    \\n    <div class=\\\"top-search wp20\\\">\\n        <input type=\\\"text\\\" placeholder=\\\"SEARCH. . .\\\">\\n        <i class=\\\"material-icons\\\">search</i>\\n    </div> -->\\n    \\n    <div class=\\\"right-data\\\" >\\n        <div class=\\\"outer\\\">\\n            <div class=\\\"inner\\\">\\n                <ul>\\n                    <!-- <li>\\n                        <a mat-button><img src=\\\"assets/img/notification.svg\\\" class=\\\"h25\\\" alt=\\\"\\\">\\n                            <span class=\\\"count\\\">{{taskNotification.length}}</span>\\n                        </a>\\n                    </li> -->\\n                    <li class=\\\"af-none\\\">\\n                        <div class=\\\"flex\\\">\\n                            <a *ngIf=\\\"userType!=3\\\" class=\\\"profile\\\" routerLink=\\\"/sale-user-detail/{{userId}}\\\" routerLinkActive=\\\"active\\\" ><img src=\\\"assets/img/user.svg\\\" class=\\\"nav-icon h20\\\"></a>\\n                            <div style=\\\"width: max-content;\\\">\\n                                <p>{{this.userName}}</p>\\n                                <span *ngIf=\\\"this.userRole==1 && !user.superAdmin\\\">Admin</span>\\n                                <span *ngIf=\\\"this.userRole==1 && user.superAdmin\\\">Super Admin</span>\\n                                <span *ngIf=\\\"this.userRole==2\\\">Human Resource</span>\\n                                <span *ngIf=\\\"this.userRole==3\\\">Accounts</span>\\n                                <span *ngIf=\\\"this.userRole==4\\\">Marketing Co-ordinator</span>\\n                                <span *ngIf=\\\"this.userRole==5\\\">Business Head</span>\\n                                <span *ngIf=\\\"this.userRole==6\\\">National Manager</span>\\n                                <span *ngIf=\\\"this.userRole==7\\\">Regional Manager</span>\\n                                <span *ngIf=\\\"this.userRole==8\\\">Area Manager</span>\\n                                <span *ngIf=\\\"this.userRole==9\\\">Zonal Manger</span>\\n                                <span *ngIf=\\\"this.userRole==10\\\">Territory Incharge</span>\\n                                <span *ngIf=\\\"this.userRole==11\\\">Wholeseller</span>\\n                                <span *ngIf=\\\"this.userRole==12\\\">Distributer</span>\\n                                <span *ngIf=\\\"this.userRole==13\\\">Retailer</span>\\n                                <span *ngIf=\\\"this.userRole==14\\\">Engine Recondtioner</span>\\n                                <span *ngIf=\\\"this.userRole==15\\\">Mechanic</span>\\n                            </div>\\n                        </div>\\n                        \\n                        \\n                    </li>\\n                    <li><a class=\\\"logout\\\" matRipple matTooltip=\\\"Logout\\\">\\n                        <div (click)=\\\"logout()\\\">\\n                            <i class=\\\"material-icons\\\" >power_settings_new</i>\\n                            logout\\n                        </div>\\n                    </a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n</header>\"","import {Component, OnInit, Renderer2} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { sessionStorage }  from '../local-storage.service';\nimport { ConstantService } from '../constant.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent implements OnInit {\n  \n  user:any={}\nuserType:any;\nuserId:any;\nuserRole:any;\nuserName:any;\ntaskDate:any=moment().format('YYYY-MM-DD');\n  constructor(private renderer: Renderer2,public router:Router,public ses: sessionStorage,public service:ConstantService) { \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    this.userName=this.user.data.userName;\n    this.getTaskNotification();\n    \n  }\n  \n  ngOnInit() {\n  }\n  \n  logout(): void {     \n    this.ses.logoutSession();\n    this.router.navigate(['']);\n    \n    \n  }\n  toggle = false;\n\n  status1:boolean = false;\n  toggleNav() {\n    this.status1 = !this.status1;\n    if(this.status1) {\n      this.renderer.addClass(document.body, 'active');\n    }\n    else {\n      this.renderer.removeClass(document.body, 'active');\n    }\n  }\n\n  taskNotification:any=[];\n  getTaskNotification()\n  {\n    var myDate= moment(this.taskDate, \"YYYY-MM-DD\").add(2, 'days');\n    this.taskDate=moment(myDate[\"_d\"]).format('YYYY-MM-DD');\n    console.log(this.taskDate);\n    // return this.endDate;\n    console.log(this.taskDate);\n    this.service.fetchData({deadline:this.taskDate},\"mytask/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.taskNotification=result['data'];\n\n      }\n    })\n  }\n\n}\n","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.valid && p.valid && submitDetail(f)\\\" id=\\\"mainForm\\\" novalidate>\\n  <div class=\\\"main-container\\\" >\\n    <div *ngIf=\\\"loader\\\"> \\n      <div class=\\\"cs-loader\\\">\\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n      </div>\\n    </div>\\n    <div class=\\\"middle-container\\\">\\n      <div class=\\\"page-heading\\\">\\n        <img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"h-icon h16\\\">\\n        <div class=\\\"heading-text\\\">\\n          <h2>Lead</h2>\\n          <p>Add New Lead</p>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s4 \\\">\\n            \\n          </div>\\n          <div class=\\\"col s12\\\">\\n              <div class=\\\"sprate-box padding0\\\">\\n                  <div class=\\\"cs-logs\\\">\\n                    <div class=\\\"top-heading\\\">\\n                      <h2>LEAD TYPE</h2>\\n                    </div>\\n                    <div class=\\\"select-one padding15\\\">\\n                        <mat-radio-group class=\\\"select-type\\\"  name=\\\"leadType\\\" id=\\\"leadType\\\" [(ngModel)]=\\\"data.leadType\\\"  #leadType=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : leadType.invalid }\\\" required>\\n                          <ng-container *ngFor=\\\"let client of client1\\\" >\\n                            <mat-radio-button [value]=\\\"client.roleId\\\" class=\\\"w170\\\">{{client.roleName}}</mat-radio-button>\\n                          </ng-container>\\n                        </mat-radio-group>\\n                      </div>\\n                  </div>\\n                </div>\\n             \\n            <div class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>BASIC INFORMATION</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s8 pl0\\\" >\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Company Name\\\" name=\\\"establishment\\\" #establishment=\\\"ngModel\\\" [(ngModel)]=\\\"data.establishment\\\" id=\\\"establishment\\\" [ngClass]=\\\"{'has-error' : establishment.invalid } \\\" required>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && establishment.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"establishment.errors.required\\\">Company Name is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Mobile \\\" name=\\\"mobile\\\" id=\\\"mobile\\\"  #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"data.mobile\\\" (keypress)=\\\"MobileNumber($event)\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" [ngClass]=\\\"{'has-error' : mobile.invalid } \\\" required>\\n                      </mat-form-field>\\n\\n                      <mat-error *ngIf=\\\"f.submitted && mobile.invalid && mobile.touched\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"mobile && (mobile.errors.minlength || mobile.errors.maxlength)\\\">Mobile no Invalid </mat-error>\\n                      </mat-error>\\n\\n                      <mat-error *ngIf=\\\"f.submitted && mobile.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"mobile.errors.required\\\">Mobile no is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  \\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Email ID\\\" type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"data.email\\\" [ngClass]=\\\"{'has-error' : email.invalid } \\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required=\\\"{{data.leadType < 13 ? true : false}}\\\">\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"data.leadType<13 && f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"email.touched\\\">Email Invalid</mat-error>\\n                      </mat-error>\\n\\n                      <mat-error *ngIf=\\\" data.leadType<13 && f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"email.errors.required\\\">Email required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 \\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Landline \\\" name=\\\"landline\\\" id=\\\"landline\\\" #landline=\\\"ngModel\\\" [(ngModel)]=\\\"data.landline\\\" (keypress)=\\\"MobileNumber($event)\\\" minlength=\\\"10\\\" maxlength=\\\"13\\\" min=\\\"0\\\" >\\n                      </mat-form-field>\\n\\n                       <mat-error *ngIf=\\\"f.submitted && landline.invalid && landline.touched\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error>Landline no Invalid</mat-error>\\n                      </mat-error>\\n\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"GST No.\\\" name=\\\"gst\\\" id=\\\"gst\\\" #gst = \\\"ngModel\\\" minlength=\\\"15\\\" maxlength=\\\"15\\\" [(ngModel)]=\\\"data.gst\\\">\\n                      </mat-form-field>\\n\\n                      <mat-error *ngIf=\\\"f.submitted && gst.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error>GST must be 15 digit</mat-error>\\n                      </mat-error>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <mat-select placeholder=\\\"Source\\\" matNativeControl name=\\\"source\\\" id=\\\"source\\\" #source=\\\"ngModel\\\" [(ngModel)]=\\\"data.source\\\"  [ngClass]=\\\"{'has-error' : source.invalid } \\\" required>\\n                          <mat-option value=\\\"\\\" disabled>Select One</mat-option>\\n                          <mat-option value=\\\"1\\\">SOCIAL</mat-option>\\n                          <mat-option value=\\\"5\\\">CALL</mat-option>\\n                          <mat-option value=\\\"2\\\">DIRECT</mat-option>\\n                          <mat-option value=\\\"3\\\">WALK-IN</mat-option>\\n                          <mat-option value=\\\"4\\\">REFERRAL</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && source.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"source.errors.required\\\">Source is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"sprate-box pt0 mt15\\\" >\\n              <div class=\\\"cs-heading\\\">\\n                <h2>CONTACT PERSON INFORMATION</h2>\\n              </div>\\n              <form #p=\\\"ngForm\\\" (ngSubmit)=\\\"p.valid && addContactPerson()\\\" novalidate>\\n                <div class=\\\"from-fields\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col s4 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" id=\\\"name\\\"  #name=\\\"ngModel\\\" [(ngModel)]=\\\"contact_person.name\\\" required=\\\"{{contact_person.mobile1 ? true : false}}\\\" (keypress)=\\\"namecheck($event)\\\" [ngClass]=\\\"{'has-error' : name.invalid } \\\">\\n                        </mat-form-field>\\n                       \\n                       <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"name.errors.required\\\">Contact person is required</mat-error>\\n                        </mat-error>\\n\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Mobile No. 1\\\" name=\\\"mobile1\\\" id=\\\"mobile1\\\" #mobile1=\\\"ngModel\\\" [(ngModel)]=\\\"contact_person.mobile1\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" required=\\\"{{contact_person.name ? true : false}}\\\" (keypress)=\\\"MobileNumber($event)\\\" [ngClass]=\\\"{'has-error' : mobile1.invalid } \\\">\\n                        </mat-form-field>\\n                        \\n\\n                         <mat-error *ngIf=\\\"f.submitted && mobile1.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"mobile1.errors.required\\\">Mobile No 1 is required</mat-error>\\n                        </mat-error>\\n\\n                        <mat-error *ngIf=\\\"f.submitted && mobile1.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error>Mobile No 1 is invalid</mat-error>\\n                        </mat-error>\\n\\n                      </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"col s4 pr0\\\">\\n                      <div class=\\\"control-field pr80\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Mobile No. 2\\\"  name=\\\"mobile2\\\" id=\\\"mobile2\\\" #mobile2=\\\"ngModel\\\" [(ngModel)]=\\\"contact_person.mobile2\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" [ngClass]=\\\"{'has-error' : mobile2.invalid }\\\">\\n                        </mat-form-field>\\n\\n                        <mat-error *ngIf=\\\"f.submitted && mobile2.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"mobile2.errors.required\\\">Mobile No 2 is required</mat-error>\\n                        </mat-error>\\n\\n                        <mat-error *ngIf=\\\"mobile2.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"mobile2.errors.minlength || mobile2.errors.maxlength\\\">Mobile No 2 is invalid</mat-error>\\n                        </mat-error>\\n\\n\\n\\n                        <div class=\\\"plus-btn\\\" style=\\\"top: 14px;\\\">\\n                          <button [disabled]=\\\"!contact_person.name || !contact_person.mobile1 || contact_person.mobile1==null\\\" mat-raised-button color=\\\"accent\\\">\\n                            <i class=\\\"material-icons\\\" >add</i>\\n                          </button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div class=\\\"row mt15\\\" *ngIf=\\\"tmp_list!=''\\\">\\n                <div class=\\\"col s12 padding0\\\">\\n                  <div class=\\\"cs-table left-right-20\\\">\\n                    <div class=\\\"table-head\\\">\\n                      <table>\\n                        <tr>\\n                          <th>Name</th>\\n                          <th class=\\\"w200\\\">Mobile No. 1</th>\\n                          <th class=\\\"w200 bdr0\\\">Mobile No. 2</th>\\n                          <th class=\\\"w130\\\">&nbsp;</th>\\n                        </tr>\\n                      </table>\\n                    </div>\\n                    <div class=\\\"table-container\\\">\\n                      <div class=\\\"table-content none-shadow\\\">\\n                        <table>\\n                          <tr *ngFor=\\\"let value of tmp_list;let index=index\\\">\\n                            <td>{{value.name}}</td>\\n                            <td class=\\\"w200\\\">{{value.mobile1}}</td>\\n                            <td class=\\\"w200\\\">{{value.mobile2}}</td>\\n                            <td class=\\\"w130\\\">\\n                              <a mat-button class=\\\"del-btn\\\" (click)=\\\"removeContact(index)\\\">Delete</a>\\n                            </td>\\n                          </tr>\\n                        </table>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n            </div>\\n            \\n            <div class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>ADDRESS INFORMATION</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <textarea matInput placeholder=\\\"Street\\\" name=\\\"street\\\" id=\\\"street\\\" [(ngModel)]=\\\"data.street\\\"  #street=\\\"ngModel\\\" class=\\\"h165\\\"></textarea>\\n                          </mat-form-field>\\n                          <!-- <mat-error *ngIf=\\\"f.submitted && street.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"street.errors.required\\\">Street is required</mat-error>\\n                          </mat-error> -->\\n                        </div>\\n                  </div>\\n\\n                  <div class=\\\"col s6 pr0\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6\\\">\\n                          <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <mat-select placeholder=\\\"Country\\\" name=\\\"country\\\" id=\\\"country\\\"#country=\\\"ngModel\\\" [(ngModel)]=\\\"data.country\\\" required>\\n                                  <mat-option value=\\\"India\\\" >India</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                              <mat-error *ngIf=\\\"f.submitted && country.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"country.errors.required\\\">Country is required</mat-error>\\n                              </mat-error>\\n                            </div>\\n                      </div>\\n\\n                      <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field \\\" [ngClass]=\\\"{'has-error' : state.invalid } \\\" >\\n                              <mat-form-field class=\\\"example-full-width cs-input infix-bodr8 select-input\\\">\\n                                <input matInput placeholder=\\\"State\\\" (keyup.enter)=\\\"get_district()\\\" [matAutocomplete]=\\\"state\\\" (input)=\\\"state_array_filter(data.state)\\\" name=\\\"state\\\" id=\\\"state\\\" #state=\\\"ngModel\\\" [(ngModel)]=\\\"data.state\\\" required>\\n                                <mat-autocomplete #state=\\\"matAutocomplete\\\">\\n                                  <mat-option (click)=\\\"get_district()\\\"  *ngFor='let state of tmpstateList' value=\\\"{{state}}\\\">\\n                                    <small>{{state}}</small>\\n                                  </mat-option>\\n                                </mat-autocomplete>\\n                              </mat-form-field>\\n                            </div>\\n                            <mat-error *ngIf=\\\"f.submitted && state.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"state.errors.required\\\">State is required</mat-error>\\n                            </mat-error>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6\\\">\\n                          <div class=\\\"control-field \\\" [ngClass]=\\\"{'has-error' : district.invalid } \\\" >\\n                              <mat-form-field class=\\\"example-full-width cs-input infix-bodr8 select-input\\\">\\n                                <input matInput placeholder=\\\"District\\\" (keyup.enter)=\\\"get_city()\\\" [matAutocomplete]=\\\"district\\\" (input)=\\\"district_array_filter(data.district)\\\" name=\\\"district\\\" id=\\\"district\\\" #district=\\\"ngModel\\\" [(ngModel)]=\\\"data.district\\\" required>\\n                                <mat-autocomplete #district=\\\"matAutocomplete\\\">\\n                                  <mat-option  (click)=\\\"get_city()\\\"  *ngFor='let district of districtlist' value=\\\"{{district.districtName}}\\\">\\n                                    <small>{{district.districtName}}</small>\\n                                  </mat-option>\\n                                </mat-autocomplete>\\n                              </mat-form-field>\\n                            </div>\\n                            <mat-error *ngIf=\\\"f.submitted && district.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"district.errors.required\\\"> District is required</mat-error>\\n                            </mat-error>\\n                      </div>\\n\\n                      <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field \\\" [ngClass]=\\\"{'has-error' : city.invalid } \\\" >\\n                              <mat-form-field class=\\\"example-full-width cs-input infix-bodr8 select-input\\\">\\n                                <input matInput placeholder=\\\"City\\\" (keyup.enter)=\\\"get_pincode(city.stateMasterId)\\\" [matAutocomplete]=\\\"city\\\" (input)=\\\"city_array_filter(data.city)\\\" name=\\\"city\\\" id=\\\"city\\\"#city=\\\"ngModel\\\" [(ngModel)]=\\\"data.city\\\" required>\\n                                <mat-autocomplete #city=\\\"matAutocomplete\\\">\\n                                  <mat-option  (click)=\\\" get_pincode(city.stateMasterId)\\\" *ngFor='let city of citylist' value=\\\"{{city.cityName}}\\\">\\n                                    <small>{{city.cityName}}</small>\\n                                  </mat-option>\\n                                </mat-autocomplete>\\n                              </mat-form-field>\\n                            </div>\\n                            <mat-error *ngIf=\\\"f.submitted && city.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"city.errors.required\\\"> City is required</mat-error>\\n                            </mat-error>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s12 pr0\\\" >\\n                          <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : pin.invalid } \\\" >\\n                              <mat-form-field class=\\\"example-full-width cs-input infix-bodr8 select-input\\\">\\n                                <input matInput placeholder=\\\"Pin\\\" (keyup.enter)=\\\"get_sales(data.pin)\\\" [matAutocomplete]=\\\"pin\\\" (input)=\\\"pin_array_filter(data.pin)\\\" name=\\\"pin\\\" id=\\\"pin\\\" #pin=\\\"ngModel\\\" [(ngModel)]=\\\"data.pin\\\" required>\\n                                <mat-autocomplete #pin=\\\"matAutocomplete\\\">\\n                                  <mat-option  *ngFor='let pin of areas' value=\\\"{{pin}}\\\">\\n                                    <small>{{pin}}</small>\\n                                  </mat-option>\\n                                </mat-autocomplete>\\n                              </mat-form-field>\\n                            </div>\\n                            <mat-error *ngIf=\\\"f.submitted && pin.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"pin.errors.required\\\"> Pincode is required</mat-error>\\n                            </mat-error>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n              \\n\\n            <div class=\\\"sprate-box pt0 mt15\\\" *ngIf=\\\"data.pin\\\">\\n              <div class=\\\"cs-heading\\\" >\\n                <h2>SEGMENT INFORMATION</h2>\\n              </div>\\n              <div class=\\\"col s6 mt15 pl0\\\">\\n                <div class=\\\"territory-info\\\">\\n                  <!-- <div class=\\\"head\\\" >\\n                    <h2>SEGMENT</h2>\\n                  </div> -->\\n                  <div class=\\\"cs-checkbox\\\">\\n                    <div class=\\\"checkbox-outer\\\">\\n                      <section class=\\\"checkbox-inner\\\"  id=\\\"segment\\\">\\n                        <ng-container  *ngFor=\\\"let list of segmentlist;let index=index\\\" aria-required=\\\"true\\\">\\n                            <mat-checkbox class=\\\"check-list\\\" (change)=\\\"select_segment(list.value,index,$event)\\\" value=\\\"{{list.value}}\\\">{{list.value}}</mat-checkbox>\\n                        </ng-container>\\n                      </section>\\n\\n                      <mat-error class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"!isSegmentSelected\\\">No Segment Selected!</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"from-fields\\\" *ngIf=\\\"userRole==1 && data.pin!='' && segment !=''\\\">\\n                <div class=\\\"col s6 pr0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select placeholder=\\\"Territory\\\" name=\\\"tid\\\" id=\\\"tid\\\" #tid=\\\"ngModel\\\" [(ngModel)]=\\\"data.tid\\\">\\n                        <mat-option (click)=\\\"get_salesuserdata(territoryId.territoryID)\\\" *ngFor='let territoryId of territoryId' value=\\\"{{territoryId.territoryID}}\\\">{{territoryId.territoryName}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n\\n\\n                    <mat-error class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"!territoryId || territoryId.length=='0'\\\">\\n                                No Data Found!\\n                               </mat-error>\\n                       </mat-error>\\n\\n\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"data.tid\\\" class=\\\"row\\\" >\\n                  <div class=\\\"col s6 control-field pr0\\\" *ngIf=\\\"userRole==1\\\" >\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <mat-select placeholder=\\\"Select SalesUser\\\" name=\\\"assignTo\\\" id=\\\"assignTo\\\" #assignTo = \\\"ngModel\\\" [(ngModel)]=\\\"data.assignTo\\\">\\n                        <span *ngFor='let sales of territoryList' >\\n                          <mat-option value=\\\"{{sales.userId}}\\\" selected>{{sales.userName}}</mat-option>\\n                        </span>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"!territoryList || territoryList.length=='0'\\\">No Data Found!</mat-error>\\n                            </mat-error>\\n                  </div>\\n\\n                  <div class=\\\"row\\\" *ngIf=\\\"data.tid && data.assignTo\\\">\\n                      <div class=\\\"col s6 mt15 \\\">\\n                        <div>\\n                          <div class=\\\"in-btn text-right\\\">\\n                            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"cleardata()\\\" >Remove Sales User</button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                </div>\\n\\n            \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"setFocus(f.form, p.form)\\\" >Save</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n<div class=\\\"h50\\\"></div>\\n\"","import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport { SnackBarOverview } from 'src/app/toast';\nimport * as $ from 'jquery';\nimport { isPlatformBrowser } from '@angular/common';\nimport {NgForm} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-add-lead',\n  templateUrl: './add-lead.component.html',\n  animations: [slideToTop()]\n\n})\n\nexport class AddLeadComponent implements OnInit {\n  staffSegments:any=[];\n  data:any={};\n  territoryId:any;\n  contact_person:any={};\n  contectpersondata:any=[];\n  statelist:any=[];\n  districtlist:any=[];\n  citylist:any=[];\n  areas:any=[];\n  segmentlist:any=[];\n  resmsg:any;\n  rolelists:any;\n  saleslist:any=[];\n  client1:any=[];\n  loader:any=false;\n  user:any={}\n  userType:any;\n  userId:any;\n  userRole:any;\n\n  tmp_list:any=[];\n\n  isSegmentSelected:any = false;\n  constructor(public service:ConstantService,\n    public route:Router,public msg:DialogComponent, @Inject(PLATFORM_ID) private platformId: Object, public toast: SnackBarOverview) { \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n\n    this.get_state();\n    this.segmentList();\n    this.rolelist();\n  }\n\n  ngOnInit() {\n    this.data.country='India';\n   // this.data.leadType=12;\n  }\n\n  active={};\n  rolelist()\n  {\n      this.service.fileData('','usertype/list').subscribe((response)=>{\n          console.log(response);\n          this.rolelists=response['data'];\n          const clientIndex= this.rolelists.findIndex(x => x.userTypeId==3);\n\n          this.client1 = this.rolelists[clientIndex]['roles'];\n          this.data.leadType = 12;\n          \n           console.log(this.client1);\n      });\n  }\n\n\n  setFocus(form, contactForm) {\n\n      console.log(form.controls);\n      console.log(contactForm);\n\n      for (var key in form.controls)\n      {\n        \n          if (form.controls.hasOwnProperty(key)) {\n            if(form.controls[key].status=='INVALID')\n            {\n                if (isPlatformBrowser(this.platformId)) {\n\n                        console.log(key);\n                        $('#'+key).focus();\n                        $(window).scrollTop(0);\n                      \n                }\n\n                console.log(key);\n                return true;\n                \n            }\n              console.log(key + \" -> \" + form.controls[key].status);\n          }\n      }\n\n\n\n      for (var key in contactForm.controls)\n      {\n        \n          if (contactForm.controls.hasOwnProperty(key)) {\n            if(contactForm.controls[key].status=='INVALID')\n            {\n                if (isPlatformBrowser(this.platformId)) {\n\n                        console.log(key);\n                        $('#'+key).focus();\n                        $(window).scrollTop(0);\n                      \n                }\n\n                console.log(key);\n                return true;\n            }\n              console.log(key + \" -> \" + contactForm.controls[key].status);\n          }\n      }\n  }\n\n\n  toggleterritory(key,action)\n  {\n      console.log(action);\n      console.log(key);\n      if(action == 'open')\n      { this.active[key] = true; }\n      if(action == 'close')\n      { this.active[key] = false;}\n      console.log(this.active);\n  }\n\n\n \n  MobileNumber(event: any) \n  {\n        const pattern = /[0-9\\+\\-\\ ]/;\n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) \n        {event.preventDefault(); }\n   }\n\n\n   namecheck(event: any) \n  {\n        const pattern = /[A-Z\\+\\a-z\\ ]/;\n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) \n        {event.preventDefault(); }\n   }\n\n   territoryList:any=[];\n\n   get_sales(pin) {\n\n      this.loader=true;\n      this.saleslist=[];\n      console.log(pin);\n      console.log('hello');\n      if(pin && this.segment){\n      this.service.fetchData({'pinCode':pin,'segments':this.segment},'/territory/list').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        if(response['status']=='Success')\n        {\n          this.territoryId=response['data'];\n          this.loader=false;\n          console.log(this.territoryId);\n        }\n      })}\n  }\n\n  get_salesuserdata(tid){\n    console.log(tid);\n    this.service.fetchData({},'territory/salesusers?territoryIds='+tid).subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      if(response['status']=='Success')\n      {\n        this.saleslist=response['data'];\n        console.log(this.saleslist);\n        const role=this.saleslist.filter(x=>x.role==10)\n        if(role.length!=0)\n        {\n          console.log(role);\n          this.territoryList=role;\n        }\n        else{\n          const role=this.saleslist.filter(x=>x.role==8)\n          if(role.length!=0)\n          {\n            console.log(role);\n            this.territoryList=role;\n          }\n          else\n          {\n              const role=this.saleslist.filter(x=>x.role==7)\n              if(role.length!=0)\n              {\n                console.log(role);\n                this.territoryList=role;\n              }\n              else{\n                const role=this.saleslist.filter(x=>x.role==6)\n              if(role.length!=0)\n              {\n                console.log(role);\n                this.territoryList=role;\n              }\n              }\n          }\n        }\n      }\n      console.log(this.saleslist);\n     })\n   }\n   cleardata(){\n     this.data.assignTo='';\n     this.data.tid='';\n   }\n  \n   submitDetail(form: NgForm)\n   {\n          for(let i=0;i<this.segment.length;i++){\n                this.staffSegments.push( {\"segmentCode\": this.segment[i], \"segment\": this.segment[i]});\n          }\n\n          console.log(this.staffSegments);\n          if(!this.staffSegments || this.staffSegments.length == 0) {\n              this.isSegmentSelected = false;\n              $('#segment').focus();\n              return;\n          } else {\n             this.isSegmentSelected = true;\n          }\n\n          console.log(this.staffSegments);\n          this.data.leadSegments=this.staffSegments;\n\n          if(this.contact_person.name) {\n\n               if(!this.contact_person.mobile2){\n                  this.contact_person.mobile2='';\n               }\n               this.tmp_list.push(this.contact_person);\n          }\n\n          if(this.tmp_list && this.tmp_list.length > 0) {\n             this.data.leadContacts=this.tmp_list;\n          } else {\n             this.data.leadContacts=[];\n          }\n\n          console.log(\"hello\");\n          \n          console.log(this.data);\n\n          // if(this.data.leadType >13) {\n          //      this.data.email = '';\n          // }\n          const activitydata2 = JSON.parse(JSON.stringify(this.data));\n          if(activitydata2['assignTo']==''){\n          delete activitydata2['assignTo'];\n          delete activitydata2['tid'];}\n          console.log(activitydata2);\n\n          this.loader = true;\n          this.service.fetchData(activitydata2,\"lead/add/\").subscribe((result)=>{\n                console.log(result);\n                this.staffSegments=[];\n                if(result['message']!=\"Lead created successfully\")\n                {\n                  // console.log(\"this. messages  is after result to be succe\");\n                      this.resmsg=result['message'];\n                      this.msg.error(this.resmsg);\n                      this.contact_person = {};\n                }\n                else {\n                  // console.log(\"this. messages  is after result not to be succe\");\n                   if(this.userType == 2) {\n                        this.msg.leadSaveSuccess();\n                        this.data = {};\n                        this.tmp_list=[];\n                        this.contact_person = {};\n                        // $('#mainForm').trigger('reset');\n                        console.log(form);\n                        form.resetForm();\n                        setTimeout(() => {\n                           this.data.leadType = 12;\n                        }, 2000);\n                        console.log(\"change the page here\");\n                        \n                        this.route.navigate(['/lead-list']);\n\n                   } else {\n\n                    // console.log(\"this. messages  is after result not to be succe\");\n                        this.toast.openSucess('Lead Saved successfully','');\n                        this.route.navigate(['/lead-list']);\n                   }\n                }\n                this.loader = false;\n          })\n   }\n\n\n\n   segmentList()\n   {\n     this.loader=true;\n    this.service.fileData('','segment/list/').subscribe((response)=>{\n      console.log(response);\n      this.loader=false\n      this.segmentlist=response['data'];\n      console.log(this.segmentlist);\n    });\n   }\n\n\n   addContactPerson()\n   {\n        console.log(\"hello\");\n        if(!this.contact_person.mobile2){\n            this.contact_person.mobile2='';\n        }\n        this.tmp_list.push(this.contact_person);\n        this.contact_person={};\n        console.log(this.tmp_list);\n   }\n\n\n   removeContact(index)\n   {\n      this.tmp_list.splice(index,1);\n   }\n\n   tmpstateList:any=[];\n   get_state()\n   {\n     this.loader=true;\n    this.service.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.statelist=response['data'];\n      this.tmpstateList=this.statelist;\n    });\n\n  }\n  tmpdistrictList:any=[];\n  get_district()\n  {\n    this.loader=true\n    this.data.district='';\n    this.data.pin='';\n    this.data.city='';\n    let state_list=Array(this.data.state)\n    this.service.fetchData(state_list,'district/list/').subscribe((response)=>{\n      this.loader=false;\n      console.log(response);\n      this.districtlist=response['data'][0]['distrcits'];\n      this.tmpdistrictList=this.districtlist;\n      console.log(this.districtlist);\n    });\n  }\n\n  tmpcityList:any=[];\n  get_city()\n  {\n    this.loader=true;\n    this.data.city='';\n    this.data.pin='';\n    this.service.fetchData(Array({\"stateName\":this.data.state,\"distrcits\":Array({\"districtName\":this.data.district})}),'city/list').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.citylist=response['data'][0]['distrcits'][0]['cities'];\n      this.tmpcityList=this.citylist;\n      console.log(this.citylist);\n    });\n  }\n\n  tmpPinList:any=[];\n  get_pincode(stateMasterIds)\n  {\n    console.log(stateMasterIds);\n    let cityarray=[];\n    cityarray[0]=stateMasterIds;\n    this.service.fetchData({'stateMasterIds':cityarray},'city/pincodes').subscribe((res)=>{\n      console.log(res);\n      this.areas=res['data'][0]['pinCodes'];\n    });\n  }\n\n  segment:any=[];\n  select_segment(value,index,event)\n  {\n        if(event.checked)\n        {\n          this.segment.push(value);\n          console.log(this.segment);\n          this.get_sales(this.data.pin);\n          this.isSegmentSelected = true;\n        }\n        else\n        {\n          console.log(index);\n          console.log(this.segment[0]);\n              for( var j=0;j<this.segmentlist.length;j++)\n              {\n                if(this.segmentlist[index]['value']==this.segment[j])\n                {\n                  this.segment.splice(j,1);\n                }\n              }\n            console.log(this.segment);\n        }\n  }\n\n\n\n  state_array_filter(state)\n  {\n    this.tmpstateList=[];\n    let value=state.toUpperCase();\n    this.tmpstateList=[];\n      for(var i=0; i<this.statelist.length; i++)\n      {\n        if(this.statelist[i].toUpperCase().search(value) !==-1)\n        {\n          this.tmpstateList.push(this.statelist[i]);\n        }\n      }\n      console.log(this.tmpstateList);\n  }\n\n  district_array_filter(district)\n  {\n    this.districtlist=[];\n    let value=district.toUpperCase();\n      for(var i=0; i<this.tmpdistrictList.length; i++)\n      {\n        if(this.tmpdistrictList[i]['districtName'].toUpperCase().search(value) !==-1)\n        {\n          this.districtlist.push(this.tmpdistrictList[i]);\n        }\n      }\n  }\n\n\n\n  city_array_filter(city)\n  {\n    console.log(city);\n    console.log(this.tmpcityList);\n    this.citylist=[];\n    let value=city.toUpperCase();\n      for(var i=0; i<this.tmpcityList.length; i++)\n      {\n        if(this.tmpcityList[i]['cityName'].toUpperCase().search(value) !==-1)\n        {\n          this.citylist.push(this.tmpcityList[i]);\n        }\n      }\n  }\n\n\n\n  pin_array_filter(pin)\n  {\n    this.areas=[];\n    console.log(this.tmpPinList);\n    let value=pin;\n    console.log(value);\n      for(var i=0; i<this.tmpPinList.length; i++)\n      {\n        if(this.tmpPinList[i].toString().search(value) !==-1)\n        {\n          this.areas.push(this.tmpPinList[i]);\n        }\n      }\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/lead-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{lead.establishment}}</h2>\\n        <p class=\\\"light\\\">{{lead.role_name}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"multi-btn\\\">\\n      <ul>\\n        <!-- <li *ngIf=\\\"this.role==1 && lead.leadRole==12\\\">\\n          <a (click)=\\\"convert()\\\" class=\\\"green-btn\\\" matRipple>CONVERT TO CUSTOMER</a>\\n        </li> -->\\n      </ul>\\n    </div>\\n  </div>\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"profile-info\\\">\\n                <ul>\\n\\n                  <li  class=\\\"col s4\\\">\\n                      <div class=\\\"cs-box\\\">\\n                        <img src=\\\"assets/img/gst.svg\\\" class=\\\"fix-img\\\">\\n                        <span>Mobile</span>\\n                        <p>{{lead.mobile ? lead.mobile : '--'}}</p>\\n                        <a *ngIf=\\\"role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('mobile')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                      </div>\\n                  </li>\\n\\n                  <li class=\\\"col s4\\\">\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/gmail.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Email</span>\\n                      <p class=\\\"link-clr\\\">{{lead.email ? lead.email : '--'}}</p>\\n                      <a  *ngIf=\\\"role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('email')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n                  <li  class=\\\"col s4\\\">\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Landline</span>\\n                      <p>{{lead.landline ? lead.landline : '--'}}</p>\\n                      <a class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('landline')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n                  \\n                </ul>\\n\\n                <ul class=\\\"mt15\\\">\\n\\n                    <li  class=\\\"col s4\\\">\\n                        <div class=\\\"cs-box\\\">\\n                          <img src=\\\"assets/img/gst.svg\\\" class=\\\"fix-img\\\">\\n                          <span>GST Number</span>\\n                          <p>{{lead.gst ? lead.gst : '--'}}</p>\\n                          <a  class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('gst')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                        </div>\\n                    </li>\\n                    \\n                   \\n                    <li  class=\\\"col s4\\\">\\n                      <div class=\\\"cs-box\\\">\\n                        <img src=\\\"assets/img/gst.svg\\\" class=\\\"fix-img\\\">\\n                        <span>Source</span>\\n                        <p>{{lead.gst ? lead.sourceName : '--'}}</p>\\n                        <!-- <a  *ngIf=\\\"role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('gst')\\\"><i class=\\\"material-icons\\\">create</i></a> -->\\n                      </div>\\n                    </li>\\n                    <li  class=\\\"col s4\\\" *ngIf=\\\"role==1\\\">\\n                      <div class=\\\"cs-box\\\">\\n                        <img src=\\\"assets/img/gst.svg\\\" class=\\\"fix-img\\\">\\n                        <span>Assigned To</span>\\n                        <p>{{lead.salesUserName ? lead.salesUserName : '--'}}</p>\\n                        <!-- <a  *ngIf=\\\"role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('gst')\\\"><i class=\\\"material-icons\\\">create</i></a> -->\\n                      </div>\\n                    </li>\\n                    \\n                  </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>ADDRESS</h2>\\n              </div>\\n              <a mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\"  (click)=\\\"openEmail('address')\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n              <div class=\\\"nationality\\\">\\n                <img src=\\\"assets/img/india.svg\\\" alt=\\\"\\\">\\n                <p>India</p>\\n              </div>\\n              <div class=\\\"ds-from-fields\\\">\\n                  <div class=\\\"cs-row\\\">\\n                      <div class=\\\"static-info\\\">\\n                        <p>address</p>\\n                        <p>{{lead.street ? lead.street : '--'}}</p>\\n                      </div>\\n                    </div>\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>State</p>\\n                    <p>{{lead.state}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>District</p>\\n                    <p>{{lead.district}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>City</p>\\n                    <p>{{lead.city}}</p>\\n                  </div>\\n                  <div class=\\\"static-info w100\\\" style=\\\"min-width: 100px;\\\">\\n                    <p>Pincode</p>\\n                    <p>{{lead.pin}}</p>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"sprate-box padding0 mt20\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>CONTACT PERSONS</h2>\\n              </div>\\n              <a  mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\" (click)=\\\"openEmail('contact')\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n              <div *ngIf=\\\"lead.leadContacts && lead.leadContacts.length>0\\\" class=\\\"cs-table\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table>\\n                    <tr>\\n                      <th>Name</th>\\n                      <th class=\\\"w150\\\">Mobile No 1</th>\\n                      <th class=\\\"w150\\\">Mobile No 2</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content none-shadow\\\">\\n                    <table>\\n                      <tr *ngFor=\\\"let contact of lead.leadContacts\\\">\\n                        <td>{{contact.name}}</td>\\n                        <td class=\\\"w150\\\">{{contact.mobile1}}</td>\\n                        <td class=\\\"w150\\\">{{contact.mobile2}}\\n                          <!-- <div class=\\\"action-btns\\\">\\n                            <a mat-button class=\\\"edit\\\"><i class=\\\"material-icons\\\">create</i> Edit</a>\\n                            <button mat-button class=\\\"delete\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                          </div> -->\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          \\n          <div class=\\\"sprate-box padding0 mt20\\\">\\n            <div class=\\\"top-heading\\\" *ngIf=\\\"lead.userTasks!=''\\\">\\n              <h2>\\n                Task History\\n              </h2>\\n            </div>\\n            <div class=\\\"cs-table\\\" *ngIf=\\\"lead.userTasks!=''\\\">\\n              <div class=\\\"table-head\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th class=\\\"w100\\\">Date</th>\\n                    <!-- <th class=\\\"w180\\\">Created By</th> -->\\n                    <th class=\\\"w180\\\">Sales User</th>\\n                    <th>Description</th>\\n                    <th class=\\\"w100 text-center\\\">Status</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content none-shadow\\\">\\n                  <table class=\\\"sno-border\\\">\\n                    <tr *ngFor=\\\" let data of lead.userTasks;let i=index\\\">\\n                      <td class=\\\"w30\\\">{{i+1}}</td>\\n                      <td class=\\\"w100\\\">{{data.createdOn |date:'d MMM y'}}</td>\\n                      <!-- <td class=\\\"w180\\\">{{data.createdByName}}</td> -->\\n                      <td class=\\\"w180\\\">{{data.userName}}</td>\\n                      <td>{{data.remarks}}</td>\\n\\n                      \\n                      <td *ngIf=\\\"data.taskStatusName == 'InProcess'\\\" class=\\\"w100  text-center\\\">InProcess</td>\\n\\n                      <td *ngIf=\\\"data.taskStatusName != 'InProcess'\\\" class=\\\"w100  text-center\\\">{{data.leadConverted ? 'Converted' : 'Not Converted'}}</td>\\n                     \\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n              \\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"col s4 right-sticky\\\">\\n\\n\\n          <div *ngIf=\\\"isSegmentEditClicked==false\\\" class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"top-heading\\\">\\n              <h2>Segments</h2>\\n              <a *ngIf=\\\"role==1\\\" (click)=\\\"isSegmentEditClicked = true;\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n            </div>\\n            <div class=\\\"territory-info bodr0\\\">\\n\\n              <div *ngIf=\\\"lead.leadSegments?.length == 0\\\" class=\\\"not-data\\\">\\n                <div  class=\\\"inner-data\\\">\\n                  <p>No Data</p>\\n                </div>\\n              </div>\\n\\n              <div *ngIf=\\\"lead.leadSegments?.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                <div class=\\\"checkbox-outer\\\" >\\n                  <section class=\\\"checkbox-inner bodr0\\\" >\\n\\n                    <mat-checkbox *ngFor=\\\"let list of lead.leadSegments\\\" class=\\\"check-list bg-none check-none check-none check-none check-none\\\">\\n                      <div class=\\\"name-outer\\\">\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <div class=\\\"name-inner\\\">\\n                              S\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"text-box\\\">\\n                        <h2>{{list.segment}}</h2>\\n                      </div>\\n                    </mat-checkbox>\\n\\n                  </section>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div *ngIf=\\\"isSegmentEditClicked==true\\\" class=\\\"sprate-box padding0\\\">\\n\\n            <div class=\\\"top-heading\\\">\\n              <h2>Segments</h2>\\n            </div>\\n\\n            <div class=\\\"territory-info bodr0\\\">\\n                <div class=\\\"cs-checkbox\\\">\\n                  <div class=\\\"checkbox-outer auto-height-scroll\\\">\\n                    <section class=\\\"checkbox-inner\\\" >\\n                      <ng-container *ngFor='let segment of segmentlist;let i=index' aria-required=\\\"true\\\">\\n                        <mat-checkbox class=\\\"check-list\\\" [(ngModel)]='segment.check'>{{segment.text}}</mat-checkbox>\\n                      </ng-container>\\n                    </section>\\n                  </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row mt15\\\">\\n                <div class=\\\"col s12\\\">\\n                  <div class=\\\"cs-btn mb15 text-right\\\">\\n                    <button (click)=\\\"isSegmentEditClicked=false\\\"  mat-raised-button color=\\\"warn\\\" class=\\\"mr15\\\" >Cancel</button>\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"updateSegment()\\\">Update</button>\\n                  </div>\\n                </div>\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n\\n<div class=\\\"h50\\\"></div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { UpdateLeadComponent } from '../update-lead/update-lead.component';\nimport {MatDialog} from '@angular/material';\nimport { DialogComponent } from 'src/app/dialog';\nimport { SnackBarOverview } from 'src/app/toast';\n@Component({\n  selector: 'app-lead-detail',\n  templateUrl: './lead-detail.component.html',\n  animations: [slideToTop()]\n})\n\nexport class LeadDetailComponent implements OnInit {\n  id:any;\n  lead:any={};\n  role:any;\n  msg:any;\n  salesUsersegment:any=[];\n  segmentlist:any=[];\n  salesUser:any=[];\n  string:any=[];\n  saleslist:any=[];\n  call_logs:any={};\n  message:any;\n  userdata:any=[];\n  rolelists:any=[];\n  rolelistlead:any=[];\n  loader:any=false;\n  territoryId:any;\n  assign:any={};\n\n  isSegmentEditClicked:any = false;\n  constructor(public db: ConstantService,public dialog1:DialogComponent,public toast:SnackBarOverview,public user:sessionStorage,public router:Router, public route:ActivatedRoute,public dialog: MatDialog) { }\n\n\n\n\nngOnInit() {\n\n      this.route.params.subscribe(params=>{\n          console.log(params);\n          this.id = params.id;\n          console.log(this.id);\n          console.log(this.user);\n          this.userdata=this.user['user']['data'];\n          \n          this.role=this.userdata['role'];\n      });\n\n      this.show_details();\n  \n}\n\n\n\n\nshow_details() {\n\n      this.loader=true;\n      this.db.fileData(this.id,'lead/detail/').subscribe((response)=>{\n\n          console.log(response);\n          this.lead = response['data'];\n          console.log(this.lead);\n\n          setTimeout(() => {\n             this.loader=false;\n          }, 1000);\n\n          this.segment_list();\n          this.rolelist(); \n          // this.get_sales();\n      });\n\n      console.log(this.id);\n}\n\n\n\n\n\nterritoryList:any=[];\nget_sales(){\n  console.log('hello');\n  this.db.fileData(this.lead.pin,'territorybypin/').subscribe((response)=>{\n    console.log(response);\n    if(response['status']=='Success')\n    {\n    this.territoryId=response['data'];\n      console.log(this.territoryId);\n    const territoryIDs = [];\n      for (let index = 0; index < this.territoryId.length; index++) {\n           territoryIDs.push({'territoryIds':this.territoryId[index].territoryId});\n      }\n\n\n      let territoryStr = '';\n      for (let index = 0; index < territoryIDs.length; index++) {\n          if(index == 0) {\n            territoryStr += '?territoryIds='+territoryIDs[index]['territoryIds'];\n          } else {\n            territoryStr += '&territoryIds='+territoryIDs[index]['territoryIds'];\n          }\n      }\n      console.log(territoryStr);\n    this.db.fetchData({},'territory/salesusers'+territoryStr).subscribe((response)=>{\n\n          console.log(response);\n          this.saleslist=response['data'];\n          const role=this.saleslist.filter(x=>x.role==10)\n\n            if(role.length!=0)\n            {\n                console.log(role);\n                this.territoryList=role;\n\n            }  else {\n\n                const role=this.saleslist.filter(x=>x.role==8)\n                if(role.length!=0)\n                {\n                    console.log(role);\n                    this.territoryList=role;\n\n                } else {\n\n                      const role=this.saleslist.filter(x=>x.role==7)\n                      if(role.length!=0)\n                      {\n                        console.log(role);\n                        this.territoryList=role;\n\n                      } else {\n\n                          const role=this.saleslist.filter(x=>x.role==6)\n                          if(role.length!=0)\n                          {\n                            console.log(role);\n                            this.territoryList=role;\n                          }\n                      }\n                }\n            }\n\n\n            console.log(this.territoryList);\n            for(let i=0;i<this.territoryList.length;i++) {\n\n                console.log(this.lead.salesUserID);\n                console.log(this.territoryList[i].userId);\n                if(this.lead.salesUserID==this.territoryList[i].userId){\n                  this.assign.assignTo=this.territoryList[i].userId;\n                }\n            }\n       })\n\n    }\n })\n}\n\n\n\n\nupdateAssign(){\n  console.log('hello');\n  console.log(this.assign);\n  this.loader=true;\n  this.lead.assignTo=this.assign.assignTo;\n  this.lead.leadAssignTo=this.assign.assignTo;\n  this.db.fetchData(this.lead,'lead/update').subscribe((response)=>{\n    console.log(response);\n    this.loader=false;\n    this.message=response['message'];\n    if(this.message==\"Lead Updated successfully\")\n    {\n      this.toast.openSucess('Updated successfully','');\n    }\n    else\n    {\n      this.toast.openError('Something went wrong Please Try Again!!','');\n    }\n  });\n}\n\n\n\n\n\nopenEmail(check) {\n  this.lead.type=check;\n  console.log(check);\n  console.log(this.lead);\n  const dialogRef = this.dialog.open(UpdateLeadComponent,  {width: '768px', data:this.lead});\n  dialogRef.afterClosed().subscribe(result => {\n    this.saleslist=[];\n    this.show_details();\n  });\n}\n\n\n\nsegment_list() {\n\n  this.db.fileData('','segment/list/').subscribe((response)=>{\n\n      console.log(response);\n      this.segmentlist=response['data'];\n\n      console.log(this.lead);\n\n      if(this.lead.leadSegments && this.lead.leadSegments.length > 0) {\n\n            for(let i=0;i<this.segmentlist.length;i++)\n            {\n                for(let j=0;j<this.lead.leadSegments.length;j++)\n                {\n                    if(this.lead.leadSegments[j]['segmentCode']==this.segmentlist[i].value)\n                    {\n                        this.segmentlist[i].check=true;\n                    }\n                }\n            }\n      }\n\n      \n\n  });\n}\n\n\n\n\n\nselect_segments(value,index,event) {\n\n        if(event.checked){\n\n           const isIndexExist = this.salesUsersegment.findIndex(row => row.segment == value);\n\n           if(isIndexExist == -1) {\n              this.salesUsersegment.push({'leadId':this.id,'segmentCode':value,'segment':value});\n           }\n           console.log(this.salesUsersegment);\n          \n        }else{\n           this.salesUsersegment.splice(index,1);\n           console.log(this.salesUsersegment);\n        }\n    }\n\n\n\nupdateSegment() {\n\n    this.loader = true;\n\n\n    const segmentSelectedData = [];\n\n    console.log(this.segmentlist);\n    for (let index = 0; index < this.segmentlist.length; index++) {\n\n        if (this.segmentlist[index].check) {\n              segmentSelectedData.push({'leadId':this.id,'segmentCode':this.segmentlist[index].value,'segment':this.segmentlist[index].text});\n        }\n    }\n\n    const segmentData = {};\n\n    segmentData['leadId'] = this.lead.leadId;\n    segmentData['leadSegments'] = segmentSelectedData;\n    segmentData['leadContacts'] = this.lead['leadContacts'];\n\n    console.log(segmentData);\n\n\n\n    this.db.fetchData(segmentData,'lead/update').subscribe((response)=>{\n\n          console.log(response);\n          this.loader=false;\n          this.message=response['message'];\n\n          if(this.message)\n          {\n              this.isSegmentEditClicked = false;\n              this.toast.openSucess('Segment Updated successfully','');\n\n              this.show_details();\n              // this.router.navigate(['/lead-detail/'+this.id]) ;\n\n          } else {\n            \n              this.toast.openError('Something went wrong Please Try Again!!','');\n          }\n      });\n}\n\nconvert(){\n  this.msg=\"Lead\"\n  this.dialog1.convert(this.msg).then((result) => {\n    if(result)\n    { this.loader=true;\n      this.string.push(parseInt(this.lead.leadId));\n      console.log(this.string);\n      this.db.fetchData({\"leadIds\":this.string},'lead/convert').subscribe((response)=>{\n        console.log(response);\n        setTimeout (() => {\n          this.loader=false;\n      }, 300);\n        this.message=response['message'];\n        if(this.message==\"Lead converted successfully\")\n        {\n          this.toast.openSucess('Lead converted successfully','');\n          if( this.lead.leadRole=='11')\n          {\n          console.log('hi');\n          this.router.navigate(['/distribution-list/']);\n          }\n         else if( this.lead.leadRole=='12')\n          {\n            console.log('hii');\n          this.router.navigate(['/distribution-list/']);\n          }\n          else if( this.lead.leadRole=='13')\n          {\n            console.log('hiii');\n          this.router.navigate(['/retailer-list/']);\n          }\n          else if( this.lead.leadRole=='14')\n          {\n            console.log('hiiii');\n          this.router.navigate(['/engine-list/']);\n          }\n          else\n          {\n            console.log('hiiiii');\n          this.router.navigate(['/mechanic-list/']);\n          }\n        }\n        else if(this.message==\"Email is not available\"){\n          this.toast.openError('Email Already Exist Please Enter Another Email','');\n        }\n      });\n    }\n  });\n}\n\n\n  rolelist() {\n    \n        this.loader=true;\n        this.db.fileData('','usertype/list').subscribe((response)=>{\n\n              console.log(response);\n              this.loader=false;\n              this.rolelists=response['data'];\n\n              let filterrolelead= this.rolelists.filter(x => x.userTypeId==3);\n              console.log(filterrolelead);\n\n              this.rolelistlead=filterrolelead[0].roles;\n\n              console.log(this.rolelistlead);\n              console.log(this.lead.leadType);\n\n              let filterroleleaddetail= this.rolelistlead.filter(x => x.roleId==this.lead.leadType);\n\n              console.log(filterroleleaddetail);\n\n              if(filterroleleaddetail.length > 0) {\n\n                  this.lead.role_name=filterroleleaddetail[0].roleName;\n                  console.log(this.lead.role_name);\n\n              }\n        });\n  }\n\n\n\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <!-- <div class=\\\"middle-container padding0\\\">\\n    <div class=\\\"master-heading h65\\\">\\n      <div class=\\\"vl-info\\\">\\n        <ul>\\n          <li><p>Total Lead : <span *ngIf=\\\"leadlist\\\">{{leadlist.length}}</span><span *ngIf=\\\"!leadlist\\\">0</span></p></li>\\n          <li *ngIf=\\\"userdata.role!=1\\\" class=\\\"af-none\\\">  \\n            <div class=\\\"item-filter\\\" >\\n              <mat-form-field class=\\\"wp100\\\">\\n                <mat-select  name=\\\"role\\\" id=\\\"role\\\" [(ngModel)]=\\\"filter.assignedToMe\\\" #assignedToMe=\\\"ngModel\\\" >\\n                  <mat-option *ngIf=\\\"userRole!=1\\\" [value]=\\\"true\\\" (click)=\\\"filter.assignedToMe=true;filter.createdbyme=false;leadList()\\\">Assigned To Me</mat-option>\\n                  <mat-option  [value]=\\\"false\\\" (click)=\\\"filter.assignedToMe=false;filter.createdbyme=true; leadList()\\\">Created By Me</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </li>\\n          <li *ngIf=\\\"userdata.userType==1\\\" class=\\\"af-none\\\">\\n            <div class=\\\"item-filter\\\">\\n              <mat-form-field class=\\\"wp100\\\">\\n                <mat-select  name=\\\"role\\\" [(ngModel)]=\\\"datarole.role\\\" (ngModelChange)=\\\"leadList()\\\">\\n                  <mat-option *ngFor=\\\"let role of client1\\\" (click)=\\\"rejected='false'\\\" [value]=\\\"role.roleId\\\">{{role.roleName}}</mat-option>\\n                  <mat-option [value]=0>Other</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </li>\\n          \\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n-->\\n\\n<div class=\\\"middle-container pb15\\\">\\n  <div class=\\\"page-heading\\\">\\n    <img src=\\\"assets/img/task.svg\\\" class=\\\"h-icon\\\">\\n    <div class=\\\"heading-text flex-heading\\\">\\n      <div class=\\\"content\\\">\\n        <h2>Lead</h2>\\n        <p>Total <span *ngIf=\\\"leadlist\\\">{{leadlist.length}}</span><span *ngIf=\\\"!leadlist\\\">0</span></p>\\n      </div>\\n      <div class=\\\"item-filter\\\" *ngIf=\\\"userdata.role!=1\\\">\\n        <mat-form-field class=\\\"wp100\\\">\\n          <mat-select  name=\\\"role\\\" id=\\\"role\\\" [(ngModel)]=\\\"filter.assignedToMe\\\" #assignedToMe=\\\"ngModel\\\" >\\n            <mat-option *ngIf=\\\"userRole!=1\\\" [value]=\\\"true\\\" (click)=\\\"filter.assignedToMe=true;filter.createdbyme=false;leadList()\\\">Assigned To Me</mat-option>\\n            <mat-option  [value]=\\\"false\\\" (click)=\\\"filter.assignedToMe=false;filter.createdbyme=true; leadList()\\\">Created By Me</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      \\n      <div class=\\\"item-filter\\\" *ngIf=\\\"userdata.userType==1\\\">\\n        <mat-form-field class=\\\"wp100\\\">\\n          <mat-select  name=\\\"role\\\" [(ngModel)]=\\\"datarole.role\\\" (ngModelChange)=\\\"leadList()\\\">\\n            <mat-option *ngFor=\\\"let role of client1\\\" (click)=\\\"rejected='false'\\\" [value]=\\\"role.roleId\\\">{{role.roleName}}</mat-option>\\n            <mat-option [value]=0>Other</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"left-auto dflex\\\">\\n    <div  class=\\\"filter-container ml15\\\" *ngIf=\\\"filter.establishment || filter.mobile || filter.state\\\">\\n      <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n        <button mat-button >CLEAR FILTER</button>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"tabs right-tab none-af\\\">\\n      <ul *ngIf=\\\"datarole.role==12 && userdata.role==1\\\">\\n        <li><a class=\\\"pending\\\"  [ngClass]= \\\"{'tab-active' : filter.status==1}\\\" (click)=\\\"filter.status=1;leadList()\\\">PENDING</a></li>\\n        <li><a class=\\\"assign\\\" [ngClass]= \\\"{'tab-active' : filter.status==2}\\\" (click)=\\\"filter.status=2;leadList()\\\">ASSIGNED</a></li>\\n        <li><a class=\\\"reject\\\" [ngClass]= \\\"{'tab-active' : filter.status==4}\\\" (click)=\\\"filter.status=4;leadList()\\\">REJECTED</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n  \\n</div>\\n<div class=\\\"container-outer pt0\\\">\\n  <div class=\\\"container\\\" >\\n    \\n    <div class=\\\"row\\\">\\n      <div class=\\\"cs-table left-right-20\\\">\\n        <div class=\\\"sticky-head\\\">\\n          <div class=\\\"table-head\\\">\\n            <table class=\\\"sno-border\\\"> \\n              <tr>\\n                <th class=\\\"w30\\\">&nbsp;</th>\\n                <th class=\\\"w100\\\" *ngIf=\\\"datarole.role!=0\\\"> Date</th>\\n                <th class=\\\"w130\\\" *ngIf=\\\"datarole.role!=0\\\">Created By</th>\\n                <th class=\\\"w200\\\">Lead Name</th>\\n                <th class=\\\"w120\\\">Mobile</th>\\n                <th class=\\\"w150\\\" *ngIf=\\\"datarole.role!=0 && datarole.role!=14 && datarole.role!=15\\\">Contact Person</th>\\n                <th class=\\\"w150\\\"  *ngIf=\\\"datarole.role!=0 && filter.status==2\\\">Assigned To</th>\\n                <th class=\\\"w150\\\" *ngIf=\\\"datarole.role==0\\\">Email</th>\\n                <th *ngIf=\\\"datarole.role!=0\\\">Address</th>\\n                <th *ngIf=\\\"datarole.role==0\\\">Pincode</th>\\n                <!-- <th class=\\\"w100\\\" *ngIf=\\\"filter.createdbyme==true\\\">Status</th> -->\\n              </tr>\\n            </table>\\n          </div>\\n          <div class=\\\"table-head bdrt\\\">\\n            <form>\\n              <table class=\\\"sno-border\\\">\\n                <tr>\\n                  <th class=\\\"w30\\\">&nbsp;</th>\\n                  <th  class=\\\"w100\\\" *ngIf=\\\"datarole.role!=0\\\">&nbsp;</th>\\n                  <th class=\\\"w130\\\" *ngIf=\\\"datarole.role!=0\\\">&nbsp;</th> \\n                  <th class=\\\"w200\\\">\\n                    <div class=\\\"th-search\\\">\\n                      <input type=\\\"text\\\" (keyup)=\\\"leadList()\\\" name=\\\"establishment\\\" #establishment=\\\"ngModel\\\" [(ngModel)]=\\\"filter.establishment\\\" placeholder=\\\"Search....\\\">\\n                    </div>\\n                  </th>\\n                  <th class=\\\"w120\\\">\\n                    <div class=\\\"th-search\\\">\\n                      <input type=\\\"text\\\" (keyup)=\\\"leadList()\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"filter.mobile\\\" placeholder=\\\"Search....\\\">\\n                    </div>\\n                  </th>\\n                  <th class=\\\"w150\\\" *ngIf=\\\"datarole.role!=0 && datarole.role!=14 && datarole.role!=15\\\">&nbsp;</th>\\n                  <th class=\\\"w150\\\" *ngIf=\\\"datarole.role!=0 && filter.status==2\\\">&nbsp;</th> \\n                  <th>\\n                    <div class=\\\"th-search\\\" *ngIf=\\\"datarole.role!=0\\\">\\n                      <mat-select placeholder=\\\"Select State\\\" id=\\\"state\\\" name=\\\"state\\\" [(ngModel)]=\\\"filter.state\\\" #state=\\\"ngModel\\\">\\n                        <mat-option value=\\\"\\\" (click)=\\\"leadList()\\\" >All</mat-option>\\n                        <mat-option value=\\\"{{stat}}\\\" (click)=\\\"leadList()\\\" *ngFor='let stat of statelist'>{{stat}}</mat-option>\\n                      </mat-select>\\n                    </div>\\n                  </th>\\n                  <th *ngIf=\\\"role==1\\\">\\n                    <div class=\\\"th-search\\\"  *ngIf=\\\"datarole.role!=0\\\">\\n                      <mat-select placeholder=\\\"Select State\\\" id=\\\"state\\\" name=\\\"state\\\" [(ngModel)]=\\\"filter.state\\\" #state=\\\"ngModel\\\">\\n                        <mat-option value=\\\"\\\" (click)=\\\"leadList()\\\" >All</mat-option>\\n                        <mat-option value=\\\"{{stat}}\\\" (click)=\\\"leadList()\\\" *ngFor='let stat of statelist'>{{stat}}</mat-option>\\n                      </mat-select>\\n                    </div>\\n                  </th>\\n                  <!-- <th class=\\\"w100\\\"> -->\\n                    <!-- <div class=\\\"th-search\\\" *ngIf=\\\"datarole.role==12\\\">\\n                      <mat-select placeholder=\\\"Select\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"filter.status\\\" #status=\\\"ngModel\\\">\\n                        <mat-option value=\\\"1\\\" (click)=\\\"leadList()\\\">Pending</mat-option>\\n                        <mat-option value=\\\"2\\\" (click)=\\\"leadList()\\\">Assigned</mat-option>\\n                        <mat-option value=\\\"4\\\" (click)=\\\"leadList()\\\">Rejected</mat-option>\\n                      </mat-select>\\n                    </div> -->\\n                    <!-- </th> -->\\n                    <!-- <th *ngIf=\\\"filter.createdbyme==true\\\" class=\\\"w100\\\">&nbsp;</th> -->\\n                  </tr>\\n                </table>\\n              </form>\\n            </div>\\n          </div>\\n          \\n          \\n          <div class=\\\"table-container\\\">\\n            <div class=\\\"table-content\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr *ngFor=\\\"let lead of leadlist; let i = index\\\" [ngClass]=\\\"{'download':lead.isRead==true}\\\">\\n                  <td class=\\\"w30\\\">{{i+1}}</td>\\n                  <td class=\\\"w100\\\" *ngIf=\\\"datarole.role!=0\\\">{{lead.createdOn |date:'d MMM y'}}</td>\\n                  <td class=\\\"w130\\\" *ngIf=\\\"datarole.role!=0\\\">{{lead.createdByName}}</td>\\n                  <td class=\\\"w200\\\"  ><a (click)=\\\"isLeadRead(lead.leadId)\\\" class=\\\"link-btn\\\" routerLink=\\\"/lead-detail/{{lead.leadId}}\\\" routerLinkActive=\\\"active\\\">{{lead.establishment}}</a></td>\\n                  <td class=\\\"w120\\\">{{lead.mobile}}</td>\\n                  <td class=\\\"w150\\\" *ngIf=\\\"datarole.role!=0 && datarole.role!=14 && datarole.role!=15\\\"><span *ngIf=\\\"lead.leadContacts.length\\\">{{lead.leadContacts[0].name}}</span></td>\\n                  <td class=\\\"w150\\\" *ngIf=\\\"datarole.role!=0 && filter.status==2\\\">{{lead.salesUserName}}</td>\\n                  <td class=\\\"w150\\\" *ngIf=\\\"datarole.role==0\\\"><span >{{lead.email}}</span></td>\\n                  <td>\\n                    <span *ngIf=\\\"datarole.role!=0\\\">{{lead.street}},{{lead.district}},{{lead.state}},{{lead.pin}}</span>\\n                    <span *ngIf=\\\"datarole.role==0\\\">{{lead.pin}}</span>\\n                    <div class=\\\"action-btns\\\">\\n                      <a mat-button class=\\\"view\\\" *ngIf=\\\"filter.status!=2 && datarole.role==12 && userdata.role==1\\\"  routerLink=\\\"/assigntask/{{lead.leadId}}\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">assignment_turned_in</i>Assign Task </a>\\n                      <a mat-button class=\\\"view\\\" *ngIf=\\\"datarole.role==0\\\" (click)=\\\"openEmail('changelead',lead.leadId)\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">assignment_turned_in</i>Change Lead Type </a>\\n                      <a mat-button class=\\\"view\\\" *ngIf=\\\"lead.leadType!=12 && datarole.role!=0 \\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">assignment_turned_in</i>Convert To Distributor</a>\\n                      <a mat-button class=\\\"view\\\" *ngIf=\\\"datarole.role!=0\\\" routerLink=\\\"/lead-detail/{{lead.leadId}}\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">remove_red_eye</i>View</a>\\n                      <!-- <button mat-button *ngIf=\\\"userdata.role==1 && userdata.superAdmin\\\" (click)=\\\"delete_lead(lead.leadId)\\\" class=\\\"delete\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button> -->\\n                    </div>\\n                  </td>\\n                  <!-- <td *ngIf=\\\"filter.createdbyme==true\\\" [ngClass]=\\\"{'pending' : lead.status==1,'approved' : lead.status==3,'assign' : lead.status==2,'reject' : lead.status==4 } \\\" class=\\\"w100\\\">\\n                    <span *ngIf=\\\"lead.status==1\\\">Pending</span>\\n                    <span *ngIf=\\\"lead.status==2\\\">Assigned</span>\\n                    <span *ngIf=\\\"lead.status==3\\\">Converted</span>\\n                    <span *ngIf=\\\"lead.status==4\\\">Rejected</span>\\n                    <div class=\\\"action-btns\\\">\\n                      <a mat-button class=\\\"view\\\" *ngIf=\\\"filter.status!=2 && datarole.role==12\\\"  routerLink=\\\"/assigntask/{{lead.leadId}}\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">assignment_turned_in</i>Assign Task </a>\\n                      \\n                      <a mat-button class=\\\"view\\\" *ngIf=\\\"datarole.role==0\\\" (click)=\\\"openEmail('changelead',lead.leadId)\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">assignment_turned_in</i>Change Lead Type </a>\\n                      \\n                      <button mat-button *ngIf=\\\"userdata.role==1 && userdata.superAdmin\\\" (click)=\\\"delete_lead(lead.leadId)\\\" class=\\\"delete\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                    </div>\\n                  </td> -->\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </div>\\n      \\n    </div>\\n    <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n      <div class=\\\"outer\\\">\\n        <div class=\\\"iinear\\\">\\n          <div class=\\\"figure\\\" matRipple>\\n            <div class=\\\"header\\\">\\n              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n            </div>\\n            <div class=\\\"description\\\">\\n              \\n              <div class=\\\"img\\\">\\n                <i class=\\\"material-icons\\\">error_outline</i>\\n              </div>\\n              \\n              <div class=\\\"cs-heading\\\">\\n                <h2>Data Not Available</h2>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" matRipple><i class=\\\"material-icons\\\" routerLink=\\\"/add-lead\\\" routerLinkActive=\\\"active\\\" >add</i></a></li>\\n    </ul>\\n  </div>\\n</div>\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport {MatDialog} from '@angular/material';\nimport { UpdateLeadComponent } from '../update-lead/update-lead.component';\nimport { sessionStorage }  from '../../local-storage.service';\n@Component({\n  selector: 'app-lead-list',\n  templateUrl: './lead-list.component.html',\n  animations: [slideToTop()]\n})\n\nexport class LeadListComponent implements OnInit {\n  \n   leadlist:any=[];\n   lead:any={};\n   contact:any=[];\n   msg:any=[];\n   string:any=[];\n   filter:any={};\n   message:any=[];\n   datarole:any={};\n   statelist:any=[];\n   loader:any=false;\n   senddata:any;\n   rejected :any= false;\n   userdata:any=[];\n   rolelists:any;\n   client1:any=[];\n   div:any=false;\n  constructor(public dialog1:DialogComponent,public db: ConstantService,public router:Router,public user:sessionStorage, public route:ActivatedRoute,public toast:SnackBarOverview,public dialog:DialogComponent,public dia:MatDialog) {\n    this.userdata=this.user['user']['data'];\n    console.log(this.userdata.role)\n    console.log(\"avlok role check\")\n    if(this.userdata.role==1){\n      this.filter.status=1;\n    }else{\n      this.filter.status=2;\n    }\n   console.log(this.filter.status)\n   this.filter.assignedToMe=true;\n   }\n\n\n  ngOnInit() {\n    // this.filter.status=1;\n    setTimeout(() => {\n      this.leadList();\n    this.rolelist();\n    this.get_state();\n    }, 500);\n    this.string=[];\n  }\n\n\n\n  get_state(){\n    this.loader=true;\n    this.db.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.statelist=response['data'];\n      // this.shippingState=response['data'];\n    });\n  }\n\n  rolelist(){\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.rolelists=response['data'];\n      let cllient= this.rolelists.filter(x => x.userTypeId==3);\n      this.client1=cllient[0].roles;\n      console.log(this.client1);\n    });\n  }\n\n\n\n\n  convert() {\n\n    console.log(\"avlok\");\n    this.loader=true;\n    this.msg=\"Lead\"\n    this.dialog1.convert(this.msg).then((result) => {\n      if(result)\n      {\n\n        for(var j=0;j<this.leadlist.length;j++){\n            this.string.push(this.leadlist[j].leadId);\n        }\n\n        console.log(this.string);\n        this.db.fetchData({\"leadIds\":this.string},'lead/convert').subscribe((response)=>{\n\n            console.log(response);\n            // this.loader=false;\n            this.string=[];\n            this.message=response['message'];\n\n            if(response['status']=='Success')\n            {\n                  this.toast.openSucess('Lead converted successfully','');\n                  console.log(this.datarole.role);\n                  if( this.datarole.role==11)\n                  {\n                    this.router.navigate(['/wholesaler-list/']);\n                  }\n                  else if(this.datarole.role==12)\n                  {\n                    this.router.navigate(['/distribution-list/']);\n                  }\n                  else if(this.datarole.role==13)\n                  {\n                    this.router.navigate(['/retailer-list/']);\n                  }\n                  else if(this.datarole.role==14)\n                  {\n                    this.router.navigate(['/engine-list/']);\n                  }\n                  else\n                  {\n                    this.router.navigate(['/mechanic-list/']);\n                  }\n\n            } else if(response['status']=='Failed') {\n                //  this.toast.openError(response['message'],'');\n                this.dialog.alertWarning(\"Email or Mobile No is Already Exist\");\n            }\n      });\n    }\n    });this.loader=false;\n  }\n  \n\n\n  \n  leadList()\n  {\n        this.leadlist=[];\n        this.div=false;\n        this.loader=true;\n        console.log(this.datarole.role);\n        if(!this.datarole.role && this.datarole.role!=0)\n        { \n            this.datarole.role=12;\n            console.log(this.datarole.role);\n        }\n        console.log(this.filter.status);\n        console.log(this.filter);\n        // if(!this.filter || !this.filter.status) {\n        //     this.filter.status = 1;\n        // }\n        if(this.userdata['userType'] != 1) {\n              setTimeout(() => {\n                  console.log(this.datarole.role);\n                  if(this.filter.createdbyme==true)\n                  {\n                  this.senddata = {'createdBy':this.userdata['userId'],'filterOnAssignTo':false,'establishment':this.filter.establishment,'mobile':this.filter.mobile,\"currentPage\": 1,'state':this.filter.state,\"pageSize\": 500};\n                  }else\n                  {\n                    this.senddata = {'userId':this.userdata['userId'],'establishment':this.filter.establishment,'mobile':this.filter.mobile,\"currentPage\": 1,'state':this.filter.state,'status':this.filter.status,\"pageSize\": 500,'leadType':this.datarole.role,'rejected':this.rejected,'filterOnAssignTo':true,'isActive':1};\n                  }\n                  this.db.fetchData(this.senddata,'lead/list').subscribe((response)=>{\n                          console.log(response);\n                          this.loader=false;\n                          if(response['status']=='Success')\n                          {\n                              this.leadlist=response['data'];\n                              console.log(this.leadlist);\n                          }\n                          if(response['status']=='Failed')\n                          {\n                              this.div=true;\n                          }\n                  });\n              }, 500);\n        } else {\n          setTimeout(() => {\n                console.log(this.filter.status);\n                if(this.filter.status==4){\n                  this.rejected=true;\n                }\n                this.senddata={'establishment':this.filter.establishment,'mobile':this.filter.mobile,\"currentPage\": 1,\"pageSize\": 500,'state':this.filter.state,'status':this.filter.status,'leadType':this.datarole.role,'rejected':this.rejected,'isActive':1};\n                this.db.fetchData(this.senddata,'lead/list').subscribe((response)=>{\n                      console.log(response);\n                      this.loader=false;\n                      if(response['status']=='Success')\n                      {\n                        this.leadlist=response['data'];\n                        console.log(this.leadlist);\n                      }\n                      if(response['status']=='Failed')\n                      {\n                        this.div=true;\n                      }\n                });\n          }, 500);\n        }\n  }\n\n\n  clearfilter() {\n         this.filter.establishment = '';\n         this.filter.mobile = '';\n         this.filter.state = '';\n         this.leadList();\n  }\n\n\n\n  delete_lead(id){\n    console.log(id);\n    this.msg=\"Lead\"\n    this.dialog.delete(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.db.fileData(id,'lead/delete/').subscribe((response)=>{\n            console.log(response);\n            this.message=response['message'];\n            if(this.message=\"Lead removed successfully\")\n            {\n              this.toast.openSucess('Lead removed successfully','');\n            }\n            else{\n              this.toast.openError('Something Went Wrong Please Try Again!!','');\n            }\n            this.leadList();\n          });\n      }\n    });\n  }\n \n\n\n  openEmail(check,leadid){\n    this.lead.type=check;\n    this.lead.leadId=leadid;\n    console.log(this.lead);\n    const dialogRef = this.dia.open(UpdateLeadComponent,{ data:this.lead});\n    dialogRef.afterClosed().subscribe(result => {\n      this.leadList();\n    });\n    this.leadList();\n  }\n\n  isLeadRead(leadId)\n  {\n    if(this.userdata['userType']==1)\n    {\n      this.db.fileData(\"\",\"lead/read/\"+leadId).subscribe((result)=>{\n        console.log(result);\n        if(result['status']=='Success')\n        {\n          this.leadList();\n        }\n      })\n    }\n  }\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updateassign()\\\"  #f=\\\"ngForm\\\" novalidate>\\n    <div *ngIf=\\\"loader\\\"> \\n      <div class=\\\"cs-loader\\\">\\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n      </div>\\n    </div>\\n    <div  *ngIf=\\\"data.type=='address'\\\" mat-dialog-content>\\n      <p class=\\\"heading\\\">Update Address</p>\\n      <div class=\\\"from-fields\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col s6 pl0\\\">\\n                <div class=\\\"control-field\\\">\\n                  <mat-form-field class=\\\"cs-input\\\">\\n                    <mat-select placeholder=\\\"State\\\" name=\\\"state\\\" [(ngModel)]=\\\"data.state\\\" >\\n                      <mat-option (click)=\\\"get_district()\\\"  *ngFor=\\\"let state of statelist\\\" value=\\\"{{state}}\\\">{{state}}</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col s6 pr0\\\">\\n                <div class=\\\"control-field\\\">\\n                  <mat-form-field class=\\\"cs-input\\\">\\n                    <mat-select placeholder=\\\"District\\\"   name=\\\"district\\\" [(ngModel)]=\\\"data.district\\\" >\\n                      <mat-option (click)=\\\"get_city()\\\"  *ngFor=\\\"let district of district1\\\"  value=\\\"{{district.districtName}}\\\">{{district.districtName}}</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s6 pl0\\\">\\n                <div class=\\\"control-field\\\">\\n                  <mat-form-field class=\\\"cs-input\\\">\\n                    <mat-select placeholder=\\\"City\\\"  name=\\\"city\\\" [(ngModel)]=\\\"data.city\\\" >\\n                      <mat-option   *ngFor=\\\"let city of cities\\\"  (click)=\\\" stateId=city.stateMasterId ;get_pincode()\\\" value=\\\"{{city.cityName}}\\\">{{city.cityName}}</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col s6 pr0\\\">\\n                <div class=\\\"control-field\\\">\\n                  <mat-form-field class=\\\"cs-input\\\">\\n                    <mat-select placeholder=\\\"Pin\\\"  name=\\\"pin\\\" [(ngModel)]=\\\"data.pin\\\" >\\n                      <mat-option *ngFor=\\\"let pin of areas\\\" value=\\\"{{pin}}\\\">{{pin}}</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row mb10\\\">\\n              <div class=\\\"col s12 padding0\\\">\\n                <div class=\\\"control-field\\\">\\n                  <mat-form-field class=\\\"cs-input\\\" >\\n                    <textarea matInput placeholder=\\\"Address\\\" name=\\\"street\\\" [(ngModel)]=\\\"data.street\\\" class=\\\"h90\\\"></textarea>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n            </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"data.type=='assign'\\\" mat-dialog-content>\\n      <p class=\\\"heading\\\">Update Sales</p>\\n      <mat-form-field class=\\\"cs-input\\\">\\n        <mat-select placeholder=\\\"Select Sales\\\" name=\\\"assignTo\\\" [(ngModel)]=\\\"data.assignTo\\\" >\\n          <mat-option *ngFor=\\\"let sales of saleslist\\\" value=\\\"{{sales.userId}}\\\">{{sales.userName}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div> \\n    \\n    <div *ngIf=\\\"data.type=='changelead'\\\" mat-dialog-content>\\n      <p class=\\\"heading\\\">Update Lead Type</p>\\n      <mat-form-field class=\\\"cs-input\\\">\\n        <mat-select placeholder=\\\"Select Sales\\\" name=\\\"leadType\\\" [(ngModel)]=\\\"data.leadType\\\" >\\n          <mat-option *ngFor=\\\"let role of client1\\\" [value]=\\\"role.roleId\\\">{{role.roleName}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    \\n    <div *ngIf=\\\"data.type=='email'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n      <p class=\\\"heading\\\">Update Email</p>\\n      <div class=\\\"row from-fields\\\">\\n        <div class=\\\"col s6 control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <input matInput placeholder=\\\"Email-ID\\\" name=\\\"email\\\" value=\\\"email\\\" [(ngModel)]=\\\"data.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>\\n          </mat-form-field>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n            Please Enter Valid Email!\\n          </div>\\n        </div>\\n      </div>\\n      \\n      \\n    </div>\\n    \\n    <div *ngIf=\\\"data.type=='mobile'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n      <p class=\\\"heading\\\">Update Mobile</p>\\n      <div class=\\\"row from-fields\\\">\\n        <div class=\\\"col s6 control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <input matInput type=\\\"text\\\"  maxlength=\\\"10\\\"  placeholder=\\\"Mobile\\\" name=\\\"mobile\\\"    [(ngModel)]=\\\"data.mobile\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" #mobile=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobile.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\" required>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!mobile.valid\\\">\\n        Mobile Must be 10 Digit!\\n      </div>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"data.type=='landline'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n        <p class=\\\"heading\\\">Update landline</p>\\n        <div class=\\\"row from-fields\\\">\\n          <div class=\\\"col s6 control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput type=\\\"text\\\"  maxlength=\\\"10\\\"  placeholder=\\\"Landline\\\" name=\\\"landline\\\"   value=\\\"landline\\\" [(ngModel)]=\\\"data.landline\\\" minlength=\\\"10\\\" maxlength=\\\"13\\\" min=\\\"0\\\" #landline=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && landline.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\" required>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!landline.valid && landline.touched\\\">\\n          Please Enter Valid Landline!\\n        </div>\\n      </div>\\n    \\n    <div *ngIf=\\\"data.type=='gst'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n      <p class=\\\"heading\\\">Update GST</p>\\n      <div class=\\\"row from-fields\\\">\\n        <div class=\\\"col s6 control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <input matInput type=\\\"text\\\"   placeholder=\\\"GST\\\" name=\\\"gst\\\"   value=\\\"gst\\\" [(ngModel)]=\\\"data.gst\\\" #gst=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && gst.invalid }\\\"  required>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!gst.valid && gst.touched\\\">\\n        Please Enter GST!\\n      </div>\\n    </div>\\n    \\n    \\n    <div *ngIf=\\\"data.type=='contact'\\\" mat-dialog-content>\\n      <p class=\\\"heading\\\">Update Contact</p>\\n      <div class=\\\"from-fields\\\">\\n        <form #p=\\\"ngForm\\\" (ngSubmit)=\\\"p.valid && addContactPerson(p)\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s4 pl0\\\">\\n              <div class=\\\"control-field\\\">\\n                <mat-form-field class=\\\"cs-input\\\">\\n                  <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"contact_person.name\\\" (keypress)=\\\"namecheck($event)\\\" required>\\n                </mat-form-field>\\n\\n                <mat-error *ngIf=\\\"p.submitted && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <mat-error *ngIf=\\\"name.errors.required\\\">Contact person is required</mat-error>\\n                </mat-error>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col s4 \\\">\\n              <div class=\\\"control-field\\\">\\n                <mat-form-field class=\\\"cs-input\\\">\\n                  <input matInput placeholder=\\\"Mobile No. 1\\\" name=\\\"mobile1\\\" #mobile1=\\\"ngModel\\\" [(ngModel)]=\\\"contact_person.mobile1\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" required>\\n                </mat-form-field>\\n\\n                <mat-error *ngIf=\\\"p.submitted && mobile1.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <mat-error *ngIf=\\\"mobile1.errors.required\\\">Mobile No 1 is required</mat-error>\\n                </mat-error>\\n\\n                <mat-error *ngIf=\\\"p.submitted && mobile1.invalid && mobile1.touched\\\" class=\\\"invalid-feedback\\\">\\n                    <mat-error>Mobile No is invalid</mat-error>\\n                </mat-error>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"col s4 pr0\\\">\\n              <div class=\\\"control-field pr80\\\">\\n                <mat-form-field class=\\\"cs-input\\\">\\n                  <input matInput placeholder=\\\"Mobile No. 2\\\"  name=\\\"mobile2\\\" #mobile2=\\\"ngModel\\\" [(ngModel)]=\\\"contact_person.mobile2\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" >\\n                </mat-form-field>\\n\\n                <mat-error *ngIf=\\\"p.submitted && mobile2.invalid && mobile2.touched\\\" class=\\\"invalid-feedback\\\">\\n                    <mat-error>Mobile No is invalid</mat-error>\\n                </mat-error>\\n\\n\\n                <div class=\\\"plus-btn\\\">\\n                  <button  mat-raised-button color=\\\"accent\\\">\\n                    <i class=\\\"material-icons\\\" >add</i>\\n                  </button>\\n                  \\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      \\n      \\n      <div class=\\\"row mt15\\\">\\n        <div class=\\\"col s12 padding0\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table>\\n                <tr>\\n                  <th>Name</th>\\n                  <th class=\\\"w200\\\">Mobile No. 1</th>\\n                  <th class=\\\"w200 bdr0\\\">Mobile No. 2</th>\\n                  <th class=\\\"w130\\\">&nbsp;</th>\\n                </tr>\\n              </table>\\n            </div>\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let value of tmp_list;let index=index\\\">\\n                    <td>{{value.name}}</td>\\n                    <td class=\\\"w200\\\">{{value.mobile1}}</td>\\n                    <td class=\\\"w200\\\">{{value.mobile2}}</td>\\n                    <td class=\\\"w130\\\">\\n                      <a mat-button class=\\\"del-btn\\\" (click)=\\\"removeContact(index)\\\">Delete</a>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div mat-dialog-actions>\\n      <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n      <button mat-raised-button color=\\\"accent\\\" >Save</button>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-lead',\n  templateUrl: './update-lead.component.html'\n})\n\n\nexport class UpdateLeadComponent implements OnInit {\n  loader:any;\n  message:any;\n  pincode:any;\n  rolelists:any;\n   client1:any=[];\n  territoryId:any;\n  saleslist:any=[];\n  statelist:any=[];\n  st:any=[];\n  citylist:any=[];\n  district1:any=[];\n  statecode:any=[];\n  stateId:any;\n  statemasterid:any;\n  districtlist:any=[];\n  districts1:any=[];\n  contact_person:any={};\n  cities:any=[];\n  cities1:any=[];\n  districts2:any=[];\n  areas:any=[];\n  leadType:any;\n  tmp_list:any=[];\n  constructor(public toast:SnackBarOverview,public router:Router,public dialogRef: MatDialogRef<UpdateLeadComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService)\n  {\n    console.log(data);\n    console.log(data.pin);\n    this.update_data=data;\n    console.log(this.update_data.leadContacts);\n    this.tmp_list=this.update_data.leadContacts;\n    this.leadType=data.leadType;\n    this.pincode=data.pin;\n    this.get_state();\n    this.get_district();\n    this.get_city();\n    this.rolelist();\n  }\n\n\n\n  ngOnInit() {\n    console.log(this.contact_person);\n  }\n  addContactPerson(form: NgForm)\n  {\n    console.log(\"hello\");\n    if(!this.contact_person.mobile2){\n      this.contact_person.mobile2='';\n    }\n    this.tmp_list.push(this.contact_person);\n    this.contact_person={};\n    console.log(this.tmp_list);\n    form.resetForm();\n    \n  }\n\n  removeContact(index)\n  {\n     this.tmp_list.splice(index,1);\n  }\n\n  namecheck(event: any) \n  {\n    const pattern = /[A-Z\\+\\a-z\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n\n\n\n  get_state(){\n    this.db.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.statelist=response['data'];  \n      console.log(this.statelist);\n        this.get_district();\n    });\n  }\n\n\n\n  \n  get_district(){\n      console.log(this.data.state);\n      this.st=Array(this.data.state)\n      this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n        console.log(response);\n        this.districtlist=response['data'];\n        this.district1=this.districtlist[0].distrcits;\n      });\n\n      this.get_city();\n  }\n\n\n\n\n\n  get_city(){\n    console.log(this.data.state,this.data.district);\n    console.log(this.data.district);\n    this.db.fetchData(Array({\"stateName\":this.data.state,\"distrcits\":Array({\"districtName\":this.data.district})}),'city/list').subscribe((response)=>{\n\n        console.log(response);\n        this.citylist=response['data'];\n        this.districts1=this.citylist[0].distrcits;\n        this.cities=this.districts1[0].cities;\n        console.log(this.cities);\n        this.statecode= this.cities.filter(x => x.cityName==this.data.city);\n        console.log(this.statecode);\n        this.statemasterid=this.statecode[0].stateMasterId;\n\n        this.get_pincode();\n    });\n    \n  }\n\n\n\n  get_pincode() {\n\n        console.log(\"check function\");\n\n        let cityarray=[];\n\n        if(this.stateId) {\n            console.log(this.stateId);\n            cityarray[0]=this.stateId;\n        } else {\n            console.log(this.statemasterid);\n            cityarray[0]=this.statemasterid;\n        }\n\n        console.log(cityarray);\n\n        this.db.fetchData({'stateMasterIds':cityarray},'city/pincodes').subscribe((response)=>{\n            console.log(response);\n            this.areas=response['data'][0]['pinCodes'];\n            console.log( this.areas);\n        });\n  }\n\n\n\n\n  rolelist(){\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.rolelists=response['data'];\n      let cllient= this.rolelists.filter(x => x.userTypeId==3);\n      this.client1=cllient[0].roles;\n      console.log(this.client1);\n    });\n  }\n\n\n\n\n  MobileNumber(event: any) \n  {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n\n\n\n  update_data:any={};\n  updateassign(){\n    if(this.data.type=='email'){\n      this.update_data.email=this.data.email;\n      this.update_data.leadId=this.data.leadId;\n      console.log(this.update_data);\n    }\n    else if(this.data.type=='landline'){\n      this.update_data.landline=this.data.landline;\n      this.update_data.leadId=this.data.leadId;\n      console.log(this.update_data);\n    }\n\n    else if(this.data.type=='mobile'){\n      this.update_data.mobile=this.data.mobile;\n      this.update_data.leadId=this.data.leadId;\n      console.log(this.update_data);\n    }\n    else if(this.data.type=='changelead'){\n      this.update_data.leadType=this.data.leadType;\n      this.update_data.leadId=this.data.leadId;\n      console.log(this.update_data);\n    }\n    else if(this.data.type=='gst'){\n      this.update_data.gst=this.data.gst;\n      this.update_data.leadId=this.data.leadId;\n      console.log(this.update_data);\n    }\n    else if(this.data.type=='address'){\n      this.update_data.state=this.data.state;\n      this.update_data.city=this.data.city;\n      this.update_data.street=this.data.street;\n      this.update_data.district=this.data.district;\n      this.update_data.pin=this.data.pin;\n      this.update_data.leadId=this.data.leadId;\n      console.log(this.update_data);\n    }\n    else if(this.data.type=='contact'){\n      console.log(this.update_data);\n      console.log(this.tmp_list);\n      this.update_data.leadContacts=this.tmp_list;\n    }\n      console.log(this.data);\n      this.update_data.leadtype=this.leadType;\n\n      this.loader = true;\n      this.db.fetchData(this.update_data,'lead/update').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        this.message=response['message'];\n        if(this.message==\"Lead Updated successfully\")\n        {\n          this.toast.openSucess('Updated successfully','');\n          this.dialogRef.close();\n        }\n        else\n        {\n          this.toast.openError('Something went wrong Please Try Again!!','');\n        }\n      });\n  }\n\n\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/holiday.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Leaves & Holidays</h2>\\n        <p>Add New Leave Rule & Holiday</p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container-outer\\\">\\n  <!-- <app-master-tab></app-master-tab> -->\\n  <!-- <div class=\\\"container tab-container\\\" > -->\\n    <div class=\\\"row\\\">\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\"  #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"sprate-box pt0\\\">\\n          <div class=\\\"cs-heading\\\">\\n            <h2>ADD LEAVES & HOLIDAYS</h2>\\n            <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12 padding0\\\">\\n              <div class=\\\"tabs mt15\\\">\\n                <ul>\\n                  <li><a routerLink=\\\"/add-leave-rules/0\\\" routerLinkActive=\\\"active\\\">LEAVES RULES</a></li>\\n                  <li><a routerLink=\\\"/add-holiday\\\" routerLinkActive=\\\"active\\\">HOLIDAYS</a></li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"select-one\\\">\\n                <mat-radio-group  name=\\\"type\\\" [(ngModel)]=\\\"holiday_form.type\\\"  #type=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && type.invalid }\\\" required>\\n                  <mat-radio-button value=\\\"1\\\" >National</mat-radio-button>\\n                  <mat-radio-button value=\\\"2\\\" >Regional</mat-radio-button>\\n                  <mat-error *ngIf=\\\"f.submitted && type.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <mat-error *ngIf=\\\"type.errors.required\\\">Type is required</mat-error>\\n                  </mat-error>\\n                </mat-radio-group>\\n              </div>\\n            </div>\\n          </div>\\n          \\n\\n          <div class=\\\"from-fields\\\">\\n            <div class=\\\"row\\\">\\n\\n              <div class=\\\"col s6 pl0\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n\\n                        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"date\\\" [(ngModel)]=\\\"holiday_form.date\\\"  #date=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && date.invalid }\\\" readonly required>\\n\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\" ></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n\\n                      </mat-form-field>\\n\\n                      <mat-error *ngIf=\\\"f.submitted && date.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"date.errors.required\\\">Date is required</mat-error>\\n                      </mat-error>\\n\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"col s6 pr0\\\">\\n                <div class=\\\"control-field\\\">\\n                  <mat-form-field class=\\\"cs-input\\\">\\n                    <input matInput placeholder=\\\"Holiday Title\\\" name=\\\"title\\\" [(ngModel)]=\\\"holiday_form.title\\\"  #title=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && title.invalid }\\\" required>\\n                  </mat-form-field>\\n                  <mat-error *ngIf=\\\"f.submitted && title.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <mat-error *ngIf=\\\"title.errors.required\\\">Holiday Title is required</mat-error>\\n                  </mat-error>\\n                </div>\\n              </div>\\n\\n                 <div class=\\\"col s6 pl0\\\">\\n                  <div class=\\\"control-field\\\"  *ngIf=\\\"holiday_form.type=='2'\\\">\\n                  <mat-form-field class=\\\"cs-input\\\">\\n                      <mat-select placeholder=\\\"State\\\"  name=\\\"states\\\" [(ngModel)]=\\\"holiday_form.states\\\" #states=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && states.invalid }\\\" multiple  required >\\n                        <mat-option *ngFor=\\\"let states of statedata\\\" [value]=\\\"states\\\">{{states}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && states.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"states.errors.required\\\">state Title is required</mat-error>\\n                    </mat-error>\\n                    </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col s12 padding0\\\">\\n                <div class=\\\"cs-btn fixedd mt30 text-right\\\">\\n                  <div class=\\\"in-btn\\\">\\n                    <button mat-raised-button color=\\\"accent\\\">Save</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n        \\n      </div>\\n      </form>\\n    </div>\\n  <!-- </div> -->\\n  </div>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport * as moment from 'moment';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\n@Component({\n  selector: 'app-add-holiday',\n  templateUrl: './add-holiday.component.html',\n  animations: [slideToTop()]\n\n})\nexport class AddHolidayComponent implements OnInit {\nholiday_form:any={};\nstatelist:any={};\nstatedata:any=[];\nmessage:any;\nloader:boolean;\nuser:any={};\n  userType:any;\nuserId:any;\nuserRole:any;\n  constructor(public db:ConstantService,public router:Router,public route:ActivatedRoute,public toast:SnackBarOverview) {\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    \n    this.db.fileData('','state/list/').subscribe((response)=>{\n    console.log(response);\n    this.statelist=response;\n    this.statedata=this.statelist.data;\n    console.log(this.statedata);\n  }); \n}\n\n  ngOnInit() {\n   \n  }\n  onSubmit(){\n    this.loader=true;\n    if(this.holiday_form.type==2){\n    var s = this.holiday_form.states.join(\",\");\n    console.log(s);\n    }\n    this.holiday_form.states=s;\n    var datenow=moment(this.holiday_form.date).format('YYYY-MM-DD');\n    console.log(datenow);\n    this.holiday_form.date=datenow;\n    this.holiday_form.userId=this.userId;\n    console.log(this.holiday_form);\n    this.db.fetchData(this.holiday_form,'holiday/add').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.message=response['message'];\n      if(this.message==\"Holiday added successfully\")\n      {\n        this.toast.openSucess('Holiday added successfully','');\n        this.router.navigate(['/holiday-list']);\n      }\n      else\n      {\n        this.toast.openError('Something Went Wrong Please Try Again!!','');\n      }\n     \n    });\n    \n    console.log(this.holiday_form);\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\"> \\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/holiday.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Leaves & Holidays</h2>\\n        <p *ngIf=\\\"ruleId==0\\\">Add New Leave Rule</p>\\n        <p *ngIf=\\\"ruleId && ruleId!=0\\\">UPdate Leave Rule</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container-outer\\\">\\n    <!-- <app-master-tab></app-master-tab>\\n      <div class=\\\"container tab-container\\\" > -->\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && submit(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"sprate-box pt0\\\">\\n                <div class=\\\"cs-heading\\\">\\n                  <h2 *ngIf=\\\"ruleId==0\\\">ADD LEAVES RULE</h2>\\n                  <h2 *ngIf=\\\"ruleId && ruleId!=0\\\">UPDATE LEAVES</h2>\\n                  <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n                </div>\\n                <div class=\\\"row mb0\\\">\\n                  <div class=\\\"col s12 padding0\\\">\\n                    <div class=\\\"tabs mt15\\\">\\n                      <ul>\\n                        <li><a routerLink=\\\"/add-leave-rules\\\" routerLinkActive=\\\"active\\\">LEAVES RULES</a></li>\\n                        <li><a routerLink=\\\"/add-holiday\\\" routerLinkActive=\\\"active\\\">HOLIDAYS</a></li>\\n                      </ul>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                \\n                \\n                <div class=\\\"from-fields\\\">\\n                  <div class=\\\"row\\\">\\n                    \\n                    <div class=\\\"col s8 pl0\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col s12\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input\\\">\\n                              <input matInput placeholder=\\\"Subject\\\" name=\\\"name\\\" [(ngModel)]=\\\"leave_form.subject\\\"  #name=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && name.invalid }\\\" required>\\n                            </mat-form-field>\\n                            <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"name.errors.required\\\">Leave Subject is required</mat-error>\\n                            </mat-error>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"row mt15\\\">\\n                        <div class=\\\"col s12\\\">\\n                          <div class=\\\"from-fields\\\">\\n                            <div class=\\\"control-field editor-height\\\" >\\n                              <app-ngx-editor [placeholder]=\\\"'Description'\\\" [spellcheck]=\\\"true\\\" name=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"leave_form.description\\\"  #description=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && description.invalid }\\\" required></app-ngx-editor>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s4 pr0\\\">\\n                      <div class=\\\"role-leave\\\">\\n                        <h2>Role Wise Leave {{daysInvalid}}</h2>\\n                        <ul>\\n                          <li *ngFor=\\\"let list of designationData\\\">\\n                            <p>{{list.designationName}}</p>\\n                            <div class=\\\"control-field\\\">\\n                              <div class=\\\"cs-input infix-bodr\\\">\\n                                <input type=\\\"number\\\" [(ngModel)]=\\\"list.noOfLeaves\\\" name=\\\"{{list.designation}}\\\" placeholder=\\\"Days\\\" (keyup)=\\\"onDayChangeHandler(list.designation)\\\">\\n                              </div>\\n                            </div>\\n                          </li>\\n                        </ul>\\n\\n                        <mat-error *ngIf=\\\"f.submitted && daysInvalid\\\" class=\\\"invalid-feedback\\\">\\n                           <mat-error>At Least 1 Designation Leave Days Required</mat-error>\\n                        </mat-error>\\n\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button mat-raised-button color=\\\"accent\\\"  >Save</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <!-- </div> -->\\n    </div>\\n    <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-add-leave-rules',\n  templateUrl: './add-leave-rules.component.html',\n  animations: [slideToTop()]\n})\n\nexport class AddLeaveRulesComponent implements OnInit {\nleave_form:any={};\nmessage:any;\nloader:boolean;\n\ndesignationData:any = [];\ndaysInvalid:any = true;\nruleId:any = '';\n\n  constructor(public db:ConstantService,public router:Router, public route:ActivatedRoute,public toast:SnackBarOverview, public msg:DialogComponent) {\n\n     this.designationData = [\n\n        { ruleId: 0, designationName: 'Vice President', designation: 1, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Deputy General Manager', designation: 2, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'General Manager', designation: 3, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Assistant General Manager', designation: 4, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Sr Manager', designation: 5, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Manager', designation: 6, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Deputy Manager', designation: 7, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Sr Executive', designation: 8, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Executive', designation: 9, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Assistant Manager', designation: 10, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Assistant', designation: 11, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Trainee', designation: 12, noOfLeaves: 0},\n        { ruleId: 0, designationName: 'Others', designation: 13, noOfLeaves: 0}\n    ];\n\n  }\n\n  ngOnInit() {\n\n      console.log(this.leave_form);\n      this.route.params.subscribe(params => {\n\n            console.log(params);\n\n            if(params.id && params.id!= '0') {\n              this.ruleId = params.id;\n              console.log(this.ruleId);\n              this.leaveRulesData();\n            } else {\n              this.ruleId = 0;\n            }\n\n\n      });\n  }\n\n  ruleData:any = [];\n  leaveRulesData() {\n\n        console.log(\"Function call\");\n\n        this.loader = true;\n        console.log(this.ruleId);\n        this.db.fetchData({'ruleId':this.ruleId},'leave/list').subscribe((response)=>\n        {\n              console.log(response);\n              this.loader = false;\n\n              this.ruleData = response['data'][0];\n\n              this.leave_form.subject = this.ruleData.subject;\n              this.leave_form.description = this.ruleData.description;\n\n              for (let index = 0; index < this.ruleData.designationsWiseLeaves.length; index++) {\n                   \n                  const indexExist = this.designationData.findIndex(row => row.designation == this.ruleData.designationsWiseLeaves[index].designation);\n\n                  this.designationData[indexExist].noOfLeaves = this.ruleData.designationsWiseLeaves[index].noOfLeaves;\n              }\n            \n        });\n    }\n\n\n  onDayChangeHandler(designation) {\n\n       const designationIndex = this.designationData.findIndex(row => row.designation == designation);\n\n       if(this.designationData[designationIndex].noOfLeaves < 0) {\n           this.designationData[designationIndex].noOfLeaves = 0;\n       }\n  }\n\n  submit(f) {\n\n    this.leave_form.designationLeaves = this.designationData;\n\n    this.daysInvalid = true;\n    for (let index = 0; index < this.leave_form.designationLeaves.length; index++) {\n        \n         if(this.leave_form.designationLeaves[index].noOfLeaves != 0) {\n            this.daysInvalid = false;\n         }\n    }\n\n    if (this.daysInvalid) {\n        return;\n    }\n\n    console.log(this.leave_form);\n\n    this.loader = true;\n\n    let apiURL = '';\n\n    if(this.ruleId && this.ruleId != '0') {\n\n        this.leave_form.ruleId = this.ruleId;\n        apiURL = 'leave/update';\n    } else {\n      apiURL = 'leave/add';\n    }\n\n\n    this.db.fetchData(this.leave_form, apiURL).subscribe((response:any)=>{\n\n          console.log(response);\n          this.loader=false;\n          this.message=response['message'];\n\n          if(response.status == 'Failed') {\n               this.msg.error(this.message);\n          } else {\n             this.router.navigate(['/leave-rule-list']);\n          }\n\n    });\n\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n    <div class=\\\"middle-container\\\">\\n      <div class=\\\"page-heading\\\">\\n        <img src=\\\"assets/img/holiday.svg\\\" class=\\\"h-icon\\\">\\n        <div class=\\\"heading-text pr20\\\">\\n          <h2>Leaves & Holidays</h2>\\n          <p>Add New Leave Rule & Holiday</p>\\n        </div>\\n      </div>\\n      <div class=\\\"tabs left-auto\\\">\\n        <ul>\\n          <li><a routerLink=\\\"/leave-rule-list\\\" routerLinkActive=\\\"active\\\">LEAVES RULES</a></li>\\n          <li><a routerLink=\\\"/holiday-list\\\" routerLinkActive=\\\"active\\\">HOLIDAYS</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n    \\n\\n    <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr>\\n                  <th  class=\\\"w30\\\">&nbsp;</th>\\n                  <th class=\\\"w100\\\">Day</th>\\n                  <th class=\\\"w100\\\">Date</th>\\n                  <th class=\\\"w180\\\">Holiday</th>\\n                  <th>State</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor=\\\"let holiday of holidays\\\">\\n                    <td class=\\\"w30\\\"></td>\\n                    <td class=\\\"w100\\\">{{holiday.date|date:' EEEE '}}</td>\\n                    <td class=\\\"w100\\\">{{holiday.date|date:'d MMM y'}} </td>\\n                    <td class=\\\"w180  green-clr\\\">{{holiday.title}}</td>\\n                    <td class=\\\"green-clr\\\">{{holiday.states}}\\n                    <div  *ngIf=\\\"this.role==1\\\" class=\\\"action-btns\\\">\\n                        <!-- <a mat-button class=\\\"view\\\"><i class=\\\"material-icons\\\">remove_red_eye</i> View</a> -->\\n                        <button  mat-button class=\\\"delete\\\" (click)=\\\"deleteHoliday(holiday.holidayId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                    </div>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div> \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n      <div class=\\\"outer\\\">\\n        <div class=\\\"iinear\\\">\\n          <div class=\\\"figure\\\" matRipple>\\n            <div class=\\\"header\\\">\\n              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n            </div>\\n            \\n            <div class=\\\"description\\\">\\n            \\n              <div class=\\\"img\\\">\\n                <i class=\\\"material-icons\\\">error_outline</i>\\n              </div>\\n              <div class=\\\"psc\\\">\\n                <p>data not available</p>\\n             \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n    <div *ngIf=\\\"userdata.role==1 && userdata.superAdmin\\\" class=\\\"fixed-multibtn-botm\\\">\\n      <ul>\\n        <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-leave-rules\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n      </ul>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { sessionStorage }  from '../../local-storage.service';\n@Component({\n  selector: 'app-holiday-list',\n  templateUrl: './holiday-list.component.html',\n  animations: [slideToTop()]\n})\nexport class HolidayListComponent implements OnInit {\n  holidaylist:any={};\n  holidays:any=[];\n  date:any=[];\n  role:any;\n  userdata:any=[];\n  loader:boolean;\n  message:any;\n  msg:any;\n  div:boolean=false;\n  constructor(public db:ConstantService,public user:sessionStorage, public toast:SnackBarOverview,public dialog:DialogComponent) {\n    this.userdata=this.user['user']['data'];\n      this.role=this.userdata['role'];\n    this.holidayList();\n}\nholidayList(){\n  this.loader=true;\n  this.db.fileData('','holiday/list/').subscribe((response)=>{\n    console.log(response);\n    this.loader=false;\n    if(response['status']=='Success')\n    {\n      this.holidaylist=response;\n      this.holidays=this.holidaylist.data;\n    }\n    if(response['status']=='Failed')\n    {\n      this.div=true;\n      this.holidays =[];\n    }\n    this.holidaylist=response;\n    this.holidays=this.holidaylist.data;\n    console.log(this.holidays);\n  });\n}\ndeleteHoliday(id){\n  console.log(id);\n  this.msg=\"Holiday\"\n  this.dialog.delete(this.msg).then((result) => {\n    console.log(result);\n    if(result)\n    {\n      this.db.fileData(id,'holiday/delete/').subscribe((response)=>{\n          console.log(response);\n          this.message=response['message'];\n          if(this.message=\"Holiday removed successfully\")\n          {\n            this.toast.openSucess('Holiday removed successfully','');\n          }\n          else{\n            this.toast.openError('Something Went Wrong Please Try Again!!','');\n          }\n          this.holidayList() \n        });\n    }\n  });\n\n}\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n\\n  <div class=\\\"middle-container\\\">\\n\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/leave-rule-list/\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{ruleData.subject}} Policy</h2>\\n        <p class=\\\"light\\\">{{ruleData.createdOn | date: 'dd-MMM-yyyy'}}</p>\\n      </div>\\n    </div>\\n    \\n\\n    <div *ngIf=\\\"userdata.role==1 && userdata.superAdmin\\\" class=\\\"left-auto\\\">\\n      <div class=\\\"cs-btn text-right\\\">\\n        <div class=\\\"in-btn\\\">\\n          <a mat-raised-button color=\\\"accent\\\"  matTooltip=\\\"Edit\\\"  routerLink=\\\"/add-leave-rules/{{this.ruleId}}\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info padding0\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"col s12 {{index>0 ? 'mt15' : ''}} cs-figure grid-figure space-li padding0\\\" >\\n                <ul>\\n                  <li *ngFor=\\\"let list of ruleData.designationsWiseLeaves; let index = index\\\" style=\\\"border: 1px solid #B29D9D;\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>{{list.designationName}}</span>\\n                        <p class=\\\"counter\\\">{{list.noOfLeaves}} days</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n      <div class=\\\"row mt15\\\">\\n          <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-description\\\">\\n                  <h2>description</h2>\\n                  <p [innerHTML]=\\\"ruleData.description\\\"></p>\\n                  </div>\\n              </div>\\n          </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { sessionStorage }  from '../../local-storage.service';\n\n@Component({\n  selector: 'app-leave-rule-detail',\n  templateUrl: './leave-rule-detail.component.html'\n})\nexport class LeaveRuleDetailComponent implements OnInit {\n\n  loader:boolean;\n  ruleId:any;\n  ruleData:any = {};\n  userdata:any=[];\n\n  constructor(public db:ConstantService,public toast:SnackBarOverview,public dialog:DialogComponent, public route:ActivatedRoute, public user:sessionStorage) { \n\n      this.userdata=this.user['user']['data'];\n  }\n\n  ngOnInit() {\n\n        this.route.params.subscribe(params=>{\n          \n            console.log(params);\n            this.ruleId = params.id;\n            console.log(this.ruleId);\n            this.leaveRulesData();\n\n        });\n  }\n\n\n  leaveRulesData() {\n\n        console.log(\"Function call\");\n\n        this.loader = true;\n                console.log(this.ruleId);\n        this.db.fetchData({'ruleId':this.ruleId},'leave/list').subscribe((response)=>\n        {\n              console.log(response);\n              this.loader = false;\n            if(response['status']=='Success')\n            {\n              this.ruleData = response['data'][0];\n            }\n      \n        });\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n    <div class=\\\"middle-container pb15\\\">\\n      <div class=\\\"page-heading\\\">\\n        <img src=\\\"assets/img/holiday.svg\\\" class=\\\"h-icon\\\">\\n        <div class=\\\"heading-text pr20\\\">\\n          <h2>Leaves & Holidays</h2>\\n          <p>Add New Leave Rule & Holiday</p>\\n        </div>\\n      </div>\\n      <div class=\\\"tabs left-auto\\\">\\n        <ul>\\n          <li><a routerLink=\\\"/leave-rule-list\\\" routerLinkActive=\\\"active\\\">LEAVES RULES</a></li>\\n          <li><a routerLink=\\\"/holiday-list\\\" routerLinkActive=\\\"active\\\">HOLIDAYS</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n    \\n    \\n    <div class=\\\"container-outer pt0\\\">\\n      <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"cs-table left-right-20\\\">\\n                <div class=\\\"sticky-head\\\">\\n                  <div class=\\\"table-head\\\">\\n                    <table class=\\\"sno-border\\\"> \\n                      <tr>\\n                        <th class=\\\"w30\\\">&nbsp;</th>\\n                        <th class=\\\"w110\\\">Date</th>\\n                        <th class=\\\"w200\\\">Subject</th>\\n                        <th>Description</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content\\\">\\n                    <table class=\\\"sno-border\\\">\\n                      <tr *ngFor=\\\"let leave of leaves;let i=index\\\">\\n                          <td class=\\\"w30\\\">{{i+1}}</td>\\n                          <td class=\\\"w110\\\">{{leave.createdOn | date: 'dd-MMM-yyyy'}}</td>\\n                          <td class=\\\"w200\\\"> <a class=\\\"link-btn\\\" routerLink=\\\"/leave-rule-detail/{{leave.ruleId}}\\\" routerLinkActive=\\\"active\\\">{{leave.subject}}</a></td>\\n                          <td><p [innerHTML]=\\\"leave.description\\\"></p></td>\\n\\n                          <td>\\n                              <div class=\\\"edit-menu\\\">\\n                                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"> \\n                                  <i class=\\\"material-icons\\\">more_vert</i>\\n                                </button>\\n                                <mat-menu #menu=\\\"matMenu\\\">\\n                                  <button *ngIf=\\\"this.role==1\\\" mat-menu-item (click)=\\\"delete_leave(leave.ruleId)\\\">\\n                                    <span class=\\\"red-clr\\\" >Delete</span>\\n                                  </button>\\n                                </mat-menu>\\n                              </div>\\n                          </td>\\n                          \\n                        </tr>\\n                      </table>\\n                    </div>\\n                  </div>\\n                  \\n                </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" style=\\\"display: none;\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"list-thumbnail\\\"  >\\n              <div class=\\\"cs-list\\\" *ngFor=\\\"let leave of leaves;let i=index\\\">\\n                <div class=\\\"list-heading\\\">\\n                  <h2>{{leave.name}} Policy</h2>\\n                  <div class=\\\"left-icon-menu\\\">\\n                    <ul>\\n                      <li><span class=\\\"counter-digit\\\">{{leave.noOfLeaves}}</span></li>\\n                      <li>\\n                        <div class=\\\"edit-menu\\\">\\n                          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"> \\n                            <i class=\\\"material-icons\\\">more_vert</i>\\n                          </button>\\n                          <mat-menu #menu=\\\"matMenu\\\">\\n                            <button *ngIf=\\\"this.role==1\\\" mat-menu-item (click)=\\\"delete_leave(leave.ruleId)\\\">\\n                              <span class=\\\"red-clr\\\" >Delete</span>\\n                            </button>\\n                            <!-- <button mat-menu-item disabled>\\n                              <span>Check voicemail</span>\\n                            </button>\\n                            <button mat-menu-item>\\n                              <span>Disable alerts</span>\\n                            </button> -->\\n                          </mat-menu>\\n                        </div>\\n                      </li>\\n                    </ul>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"text-box-outer\\\">\\n                  <div class=\\\"text-box-inner\\\" [innerHTML]=\\\"leave.description\\\"> \\n                  </div>\\n\\n                  <!-- <div class=\\\"text-right\\\">\\n                    <a class=\\\"link-btn\\\" style=\\\"color: #0006b7; cursor: pointer;\\\">View More</a>\\n                  </div> -->\\n                </div>\\n              </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n            <div class=\\\"outer\\\">\\n              <div class=\\\"iinear\\\">\\n                <div class=\\\"figure\\\" matRipple>\\n                  <div class=\\\"header\\\">\\n                    <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                  </div>\\n                  \\n                  <div class=\\\"description\\\">\\n                  \\n                    <div class=\\\"img\\\">\\n                      <i class=\\\"material-icons\\\">error_outline</i>\\n                    </div>\\n                    <div class=\\\"psc\\\">\\n                      <p>data not available</p>\\n                   \\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"userdata.role == 1 && userdata.superAdmin\\\" class=\\\"fixed-multibtn-botm\\\">\\n          <ul>\\n            <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-leave-rules/0\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n          </ul>\\n        </div>\\n\\n      </div>  \\n    <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { sessionStorage }  from '../../local-storage.service';\n@Component({\n  selector: 'app-leave-rule-list',\n  templateUrl: './leave-rule-list.component.html',\n  animations: [slideToTop()]\n})\nexport class LeaveRuleListComponent implements OnInit {\nleavelist:any={};\nleaves:any=[];\nmsg:any;\ndiv:boolean=false;\nrole:any;\n  userdata:any=[];\n\nmessage:any;\nloader:boolean;\nconstructor(public db:ConstantService,public user:sessionStorage,public toast:SnackBarOverview,public dialog:DialogComponent) {\n  this.userdata=this.user['user']['data'];\n  this.role=this.userdata['role'];\n  this.leavelists() \n}\nleavelists(){\n   this.loader=true;\n  this.db.fetchData({},'leave/list/').subscribe((response)=>{\n\n        console.log(response);\n        this.loader=false;\n        if(response['status']=='Success')\n        {\n          this.leavelist=response;\n          this.leaves=this.leavelist.data;\n        }\n        \n        if(response['status']=='Failed')\n        {\n          this.div=true;\n          this.leaves =[];\n        }\n        this.leavelist=response;\n        this.leaves=this.leavelist.data;\n        console.log(this.leaves);\n  });\n}\n  ngOnInit() {\n  }\n  delete_leave(id){\n    console.log(id);\n    this.msg=\"Leave Rule\"\n    this.dialog.delete(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.db.fileData(id,'leave/delete/').subscribe((response)=>{\n            console.log(response);\n            this.message=response['message'];\n            if(this.message=\"Leave Rules removed successfully\")\n            {\n              this.toast.openSucess('LeaveRules removed successfully','');\n            }\n            else{\n              this.toast.openError('Something Went Wrong Please Try Again!!','');\n            }\n            this.leavelists() \n          });\n      }\n    });\n  }\n \n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Leave</h2>\\n        <p>Add New Leave</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"sprate-box\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>LEAVE INFORMATION</h2>\\n              <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n            </div>\\n            \\n            <mat-divider class=\\\"left-right-15 mt10\\\"></mat-divider>\\n            <div class=\\\"from-fields\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col s4\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <mat-select placeholder=\\\"Leave Type\\\">\\n                        <mat-option value=\\\"option1\\\">Casual</mat-option>\\n                        <mat-option value=\\\"option2\\\">Casual</mat-option>\\n                        <mat-option value=\\\"option3\\\">Casual</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col s4\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Start Date\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #picker></mat-datepicker>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col s4\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <input matInput [matDatepicker]=\\\"pickers\\\" placeholder=\\\"End Date\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"pickers\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #pickers></mat-datepicker>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              \\n              <div class=\\\"row mb10\\\">\\n                <div class=\\\"col s12\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <textarea matInput placeholder=\\\"Description\\\" class=\\\"h100\\\"></textarea>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n            <div class=\\\"in-btn\\\">\\n              <button mat-raised-button color=\\\"accent\\\">Save</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leave-apply-add',\n  templateUrl: './leave-apply-add.component.html'\n})\nexport class LeaveApplyAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"middle-container padding0\\\">\\n      <div class=\\\"master-heading\\\">\\n            <div class=\\\"top-pagination m-right-data\\\">\\n              <ul>\\n                <li class=\\\"refresh-area\\\">\\n                  <a class=\\\"refresh-btn\\\" mat-raised-button  matTooltip=\\\"Refresh\\\"><i class=\\\"material-icons\\\"> refresh</i></a>\\n                </li>\\n                <li><p>Pages 2 of 6</p></li>\\n                <li><button mat-button class=\\\"left-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_left</i></button></li>\\n                <li><input type=\\\"text\\\" placeholder=\\\"GO TO\\\"></li>\\n                <li><button mat-button class=\\\"right-btn\\\"><i class=\\\"material-icons\\\">keyboard_arrow_right</i></button></li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"container-outer\\\">\\n          <div class=\\\"container\\\" >\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s12\\\">\\n                <div class=\\\"cs-table left-right-20\\\">\\n                  <div class=\\\"table-head\\\">\\n                    <table class=\\\"sno-border\\\"> \\n                      <tr>\\n                        <th class=\\\"w30\\\">&nbsp;</th>\\n                        <th>Created By & Date</th>\\n                        <th class=\\\"w120\\\">Leave Type</th>\\n                        <th class=\\\"w120 text-center\\\">Start Date</th>\\n                        <th class=\\\"w120\\\">End date</th>\\n                        <th class=\\\"w120\\\">Status</th>\\n                        <th class=\\\"w120\\\">Action</th>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                  \\n                  <div class=\\\"table-container\\\">\\n                    <div class=\\\"table-content\\\">\\n                      <table class=\\\"sno-border\\\">\\n                        <tr>\\n                          <td class=\\\"w30\\\">1</td>\\n                          <td>2 Jan 2018 / Rahul Dubey</td>\\n                          <td class=\\\"w120\\\">Urgent Leave</td>\\n                          <td class=\\\"w120\\\">13 May 2019</td>\\n                          <td class=\\\"w120\\\">14 May 2019</td>\\n                          <td class=\\\"w120 red-clr\\\">Reject</td>\\n                          <td class=\\\"w120\\\">\\n                              <a class=\\\"link-btn\\\" mat-button >Chanege Status</a>\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                            <td>2</td>\\n                            <td>2 Jan 2018 / Rahul Dubey</td>\\n                            <td>Urgent Leave</td>\\n                            <td>13 May 2019</td>\\n                            <td>14 May 2019</td>\\n                            <td class=\\\"red-clr\\\">Reject</td>\\n                            <td>\\n                                <a class=\\\"link-btn\\\" mat-button >Chanege Status</a>\\n                            </td>\\n                          </tr>\\n                      </table>\\n                    </div>\\n                  </div>\\n                  \\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n      </div>\\n      \\n      <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leave-apply-list',\n  templateUrl: './leave-apply-list.component.html'\n})\nexport class LeaveApplyListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\"> \\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/leave.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Leave</h2>\\n        <p>Add New Leave</p>\\n      </div>\\n    </div>\\n  </div>\\n  <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\" f.form.valid && save_sales_leave()\\\" novalidate>\\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>ADD LEAVE {{isLeavesAllowed}}</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s8 pl0\\\">\\n                    \\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s4 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input\\\">\\n                            <mat-select placeholder=\\\"Leave Type\\\" name=\\\"LeaveType\\\"  [(ngModel)]=\\\"form.LeaveType\\\" #LeaveType=\\\"ngModel\\\" required>\\n                              <mat-option (click)=\\\"apple(form.LeaveType)\\\" value={{a.ruleId}} *ngFor=\\\"let a of newArrayList\\\">{{a.subject}}</mat-option>\\n                              <mat-option  value=\\\"other\\\">other</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && LeaveType.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"LeaveType.errors.required\\\">LeaveType is required</mat-error>\\n                          </mat-error>\\n                          <mat-error *ngIf=\\\"iseligible\\\" class=\\\"invalid-feedback\\\">You don't have any pending {{leaveName}}</mat-error>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s4\\\" >\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input\\\">\\n                            <input matInput [matDatepicker]=\\\"picker\\\" readonly\\n                            placeholder=\\\"Date From\\\" name=\\\"StartDate\\\" [(ngModel)]=\\\"form.StartDate\\\" #StartDate=\\\"ngModel\\\"\\n                            [min]='currentDate' (dateChange)=\\\"onDateChangeHandler(form.StartDate)\\\"\\n                            \\n                            required>\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #picker></mat-datepicker>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && StartDate.invalid\\\" class=\\\"invalid-feedback\\\">   \\n                            <mat-error *ngIf=\\\"(form.StartDate > form.EndDate)\\\">Enter Date Properlly</mat-error>                      \\n                          </mat-error>\\n                          <mat-error *ngIf=\\\"f.submitted && StartDate.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"StartDate.errors.required\\\">Start Date is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s4\\\" >\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input\\\">\\n                            <input matInput [matDatepicker]=\\\"pickerone\\\" readonly placeholder=\\\"Date To\\\" name=\\\"EndDate\\\" [(ngModel)]=\\\"form.EndDate\\\" #EndDate=\\\"ngModel\\\"   required\\n                            [max]=\\\"endDate\\\" [min]=\\\"form.StartDate\\\">\\n                            \\n                            <mat-datepicker-toggle matSuffix [for]=\\\"pickerone\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #pickerone></mat-datepicker>\\n                          </mat-form-field>\\n                          \\n                          <mat-error *ngIf=\\\"f.submitted && EndDate.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"EndDate.errors.required\\\">End-Date is required</mat-error> \\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s12 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input\\\">\\n                            <!-- #remark=\\\"ngModel\\\" -->\\n                            <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h170\\\" name=\\\"remark\\\" [(ngModel)]=\\\"form.remark\\\" #remark=\\\"ngModel\\\"  required ></textarea>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && remark.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"remark.errors.required\\\">Remark is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s12 pl0\\\" *ngIf=\\\"isDescription\\\">\\n                        Description\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field [innerHTML]=\\\"form.description\\\" class=\\\"cs-input\\\">\\n                            <textarea  matInput   name=\\\"description\\\" #description=\\\"ngModel\\\"  [(ngModel)]=\\\"form.description\\\" readonly class=\\\"h200\\\"></textarea>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s4 pr0\\\">\\n                    <div class=\\\"role-leave li-border\\\">\\n                      <div class=\\\"arrow-btn\\\">\\n                        <button type=\\\"button\\\"  (click)=\\\"previous()\\\"     ><i class=\\\"material-icons\\\" *ngIf=\\\"yearSelected ==2019\\\"   >chevron_left</i></button>\\n                        <button type=\\\"button\\\"  (click)=\\\"next()\\\"  ><i class=\\\"material-icons\\\" *ngIf=\\\"yearSelected < currentYear1\\\"   >chevron_right</i></button>\\n                      </div>\\n                      <h2> Leave Info \\n                        {{yearSelected}} - {{yearSelected+1}}\\n                      </h2>\\n                      <ul>\\n                        <li style =\\\"text-align: right\\\">\\n                          \\n                          <span>Total</span>\\n                          <span>Used</span>\\n                          <span>Pending</span>\\n                        </li>\\n                        \\n                        <li *ngFor=\\\"let a of myLeavLeft\\\">                          \\n                          <p   >{{a.leaveType}}</p>\\n                          <span  class=\\\"counter\\\">{{a.totalLeaves}}</span>\\n                          <span  class=\\\"counter\\\">{{ a.totalLeaves - a.remainingLeaves}}</span>\\n                          <span  class=\\\"counter\\\">{{a.remainingLeaves}}  </span>\\n                          \\n                        </li>\\n                        \\n                      </ul>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s12 padding0\\\">\\n                <div class=\\\"cs-btn fixedd mt13 text-right\\\">\\n                  <div class=\\\"in-btn\\\">\\n                    <button mat-raised-button color=\\\"accent\\\"  (click)=\\\"setFocus(f.form)\\\" >Save</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n      </div>\\n    </div>\\n  </form>\\n  \\n  \\n</div>\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit, ModuleWithComponentFactories, PLATFORM_ID, Inject } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router, RouterLinkWithHref } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport * as moment from 'moment';\nimport { DialogComponent } from 'src/app/dialog';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as $ from 'jquery';\n@Component({\n  selector: 'app-add-leave',\n  templateUrl: './add-leave.component.html'\n})\nexport class AddLeaveComponent implements OnInit {\n  \n  form:any={};\n  \n  \n  user:any={};\n  userType:any;\n  userId:any;\n  leaveName:any;\n  userRole:any;\n  iseligible:boolean=false;\n  loader:any=false\n  username:any;\n  isLeavesAllowed:any=false;\n  \n  currentDate:any = new Date().toJSON().split('T')[0];\n  yearSelected:any;\n  currentYear1:any;\n  \n  \n  constructor(\n    \n    public alrt:DialogComponent,\n    private datePipe: DatePipe,\n    public db:ConstantService, public router:Router,\n    \n    @Inject(PLATFORM_ID) private platformId: Object\n    ) {\n      \n      \n      this.leaveTypeFunction();\n      var date = new Date();\n      \n      this.user = JSON.parse(localStorage.getItem('user')) || [];\n      console.log(this.user);\n      this.userType = this.user.data.userType;\n      this.userId = this.user.data.userId;\n      this.userRole=this.user.data.role;\n      this.username= this.user.data.userName;\n      console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole ,\"&&\" , this.username  );\n      this.getCountUserLeave(this.userId);\n      \n    }\n    ngOnInit() {\n      this.yearSelected = parseInt(moment().format('YYYY'));\n      this.currentYear1=moment().format('YYYY');\n    }\n    moment:any;\n    startDate;\n    endDate;\n    date;\n    diffrence;\n    newArrayList:any=[];\n    array:any=[];\n    role_array:any=[];\n    leaveTypeFunction()\n    {\n      this.loader=true\n      this.db.fetchData({},'leave/list').subscribe((r)=>{\n        this.loader=false\n        console.log(r);\n        this.newArrayList=r['data'];\n      });\n    }\n    \n    \n    onDateChangeHandler(date) {\n      if(this.form.LeaveType == 'other')\n      {\n        this.endDate=\"\";\n        \n      }\n      else\n      {\n        var myDate= moment(date, \"YYYY-MM-DD\").add(this.limitdate-1, 'days');\n        this.endDate=myDate[\"_d\"]\n        console.log(this.endDate);\n        return this.endDate;\n        \n      }\n    }\n    \n    save_sales_leave()\n    {\n      \n      this.startDate=moment(this.form.StartDate).format('YYYY-MM-DD');\n      this.endDate=moment(this.form.EndDate).format('YYYY-MM-DD');\n      const currentDate = moment().format('YYYY-MM-DD');\n      this.diffrence=  moment( this.endDate).diff(moment( this.startDate), 'days');\n      console.log(this.diffrence);\n      const isLeaveAllowed = this.onDateChangeHandler(0);\n      \n      this.loader=true\n      this.db.fetchData({\n        'leaveType':this.form.LeaveType,'startDate':this.startDate,'endDate':moment(this.form.EndDate).format(\"YYYY-MM-DD\"),'remarks':this.form.remark,\n        'userId':this.userId,\n        'numberOfDays':this.diffrence +1,'ApplicationDate':currentDate,\n        'approvalStatus':0, 'leaveApplicationId':0},'applyLeave').subscribe((response)=>{\n          console.log(response);\n          this.loader=false\n          if(response[\"message\"]==\"Success\")\n          {\n            this.router.navigate(['/leave-list']);\n          }     \n        });\n      }\n      leaveCountLeft:any=[];\n      currentyear;\n      myLeavLeft:any=[];\n      getCountUserLeave(userId)\n      {\n          this.loader=true\n          this.db.fetchData({'userId':userId},'getUserRemainingLeaves').subscribe((r)=>{\n          console.log(r);\n          if(r['message']=='Success')\n          {\n            this.leaveCountLeft= r['data'];\n            this.currentyear = r['data'][0]['year'];\n            console.log(this.currentyear);\n            for (var i=0;i<this.leaveCountLeft.length;i++)\n            {\n              if(this.leaveCountLeft[i].year==this.currentyear)\n              {\n                this.myLeavLeft.push(this.leaveCountLeft[i]);\n              }\n            }\n            this.loader=false;\n          }\n          console.log(\"this is remaining leaves\",this.myLeavLeft);\n        });\n      }\n      \n      \n      limitdate:any=[];\n      msg:any;\n      isDescription:boolean=false;\n      limitdate1:any={};\n      apple(ruleId)\n      {\n        this.form.EndDate='';\n        this.form.StartDate='';\n        this.loader=true\n        console.log(ruleId,this.form);\n        let index=this.newArrayList.findIndex(x=>x.ruleId==ruleId);\n        this.form.description=this.newArrayList[index].description;\n        this.isDescription=true;\n        console.log(this.form);\n        for( var i=0;i<=this.myLeavLeft.length; i++)\n        {\n          if(this.myLeavLeft[i].leaveTypeID==ruleId)\n          {\n            this.limitdate = this.myLeavLeft[i].remainingLeaves;\n            this.leaveName=this.myLeavLeft[i].leaveType;\n            this.loader=false;\n            break;\n          }\n          \n        }\n        if(this.limitdate==0){\n          this.msg=\"You Don't Have Any Pending \"+this.leaveName;\n          this.alrt.error(this.msg);\n          this.iseligible=true;\n        }\n        else{\n          this.iseligible=false;\n        }\n        console.log(\"this is limit date\", this.limitdate);\n      }\n      \n      setFocus(form)\n       {\n        for (var key in form.controls)\n        {\n          \n          if (form.controls.hasOwnProperty(key)) {\n            if(form.controls[key].status=='INVALID')\n            {\n              if (isPlatformBrowser(this.platformId)) {\n                \n                $('#'+key).focus();\n                $(window).scrollTop(0);\n                \n              }\n              return true;\n            }\n            console.log(key + \" -> \" + form.controls[key].status);\n          }\n        }\n      }\n      \n      \n      previous()\n      {\n        this.yearSelected= this.yearSelected-1;\n        this.db.fetchData( {'userId':this.userId, 'year': this.yearSelected},'getUserYearLeaves').subscribe((rep)=>{\n        this.myLeavLeft= rep['data'];\n        this.loader=false\n        });\n      }\n      \n      next()\n      {\n        this.yearSelected= this.yearSelected+1;\n        this.db.fetchData( {'userId':this.userId, 'year': this.yearSelected},'getUserYearLeaves').subscribe((rep)=>{\n        this.myLeavLeft= rep['data'];\n        this.loader=false\n        });\n      }\n      \n    }\n    \n    \n    ","module.exports = \"<div class=\\\"main-container\\\"> \\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n    </div>\\n  \\n<div class=\\\"middle-container\\\">\\n  <div class=\\\"page-heading\\\">\\n    <img src=\\\"assets/img/leave.svg\\\" class=\\\"h-icon\\\">\\n    <div class=\\\"heading-text\\\">\\n      <h2>Leave</h2>\\n      <p>Update Leave</p>\\n    </div>\\n  </div>\\n</div>\\n<!-- form.StartDate && form.EndDate && form.remark -->\\n<form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\" f.form.valid && update_leave(form.leaveApplicationId)\\\" novalidate>\\n<div class=\\\"container-outer\\\">\\n  <div class=\\\"container\\\" >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"sprate-box pt0\\\">\\n          <div class=\\\"cs-heading\\\">\\n            <h2>Update LEAVE </h2>\\n            <!-- <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span> -->\\n          </div>\\n          <div class=\\\"from-fields\\\">\\n            \\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s8 pl0\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s12 pl0\\\">\\n                    <!-- <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                          [ngClass]=\\\"{ 'is-invalid': f.submitted && segment.invalid }\\\" \\n                        <mat-select placeholder=\\\"Leave Type\\\" name=\\\"leaveType\\\" [(ngModel)]=\\\"form.leaveType\\\" #leaveType=\\\"ngModel\\\" required>\\n                            <mat-option (click)=\\\"getCount(form.leaveType)\\\"  [value]=\\\"a.ruleId\\\" *ngFor=\\\"let a of newArrayList\\\">{{a.subject}}</mat-option>                          \\n                        </mat-select>\\n                      </mat-form-field>\\n\\n                      <mat-error *ngIf=\\\"f.submitted && leaveType.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"leaveType.errors.required\\\">LeaveType is required</mat-error>\\n                        </mat-error>\\n                    </div> -->\\n                    <div class=\\\" cs-figure\\\">\\n                      <ul>\\n                          <li>\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <span>Leave Type</span>\\n                                  <p>{{form.leaveName}}</p>\\n                                </div>\\n                              </div>\\n                            </li>\\n                      </ul>\\n                    </div>\\n                \\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                          <!---->\\n                        <input matInput [matDatepicker]=\\\"picker\\\"\\n                        placeholder=\\\"Date From\\\" name=\\\"startDate\\\" (dateChange)=\\\"checkValid(form.startDate)\\\" [(ngModel)]=\\\"form.startDate\\\" #startDate=\\\"ngModel\\\"\\n                        [min]='currentDate'\\n                        (dateChange)=\\\"onDateChangeHandler(form.StartDate)\\\"\\n                        required>\\n                        <!--   -->\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                      </mat-form-field>\\n\\n\\n                      <mat-error *ngIf=\\\"f.submitted && startDate.invalid\\\" class=\\\"invalid-feedback\\\">   \\n                          <mat-error *ngIf=\\\"(form.startDate > form.EndDate)\\\">Enter Date Properlly</mat-error>                      \\n                        </mat-error>\\n                      <mat-error *ngIf=\\\"f.submitted && startDate.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"startDate.errors.required\\\">Start Date is required</mat-error>\\n                        </mat-error>\\n\\n                     \\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s6\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput [matDatepicker]=\\\"pickerone\\\" placeholder=\\\"Date To\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"form.endDate\\\" #endDate=\\\"ngModel\\\" required\\n                     \\n                        \\n                        [min]='form.startDate' [max]=\\\"lastDate\\\"\\n                        \\n                        >\\n                        <!-- [min]='form.startDate' [max]=\\\"lastDate\\\" -->\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"pickerone\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #pickerone></mat-datepicker>\\n                      </mat-form-field>\\n\\n                      <mat-error *ngIf=\\\"f.submitted && endDate.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <!-- <mat-error *ngIf=\\\"(form.StartDate > form.EndDate)\\\">Enter Date Properlly</mat-error> -->\\n                          <mat-error *ngIf=\\\"endDate.errors.required\\\">End-Date is required</mat-error> \\n                        </mat-error>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col s12 padding0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input\\\">\\n                              <!-- #remark=\\\"ngModel\\\" -->\\n                            <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h140\\\" name=\\\"remarks\\\" [(ngModel)]=\\\"form.remarks\\\" #remarks=\\\"ngModel\\\"  required ></textarea>\\n                          </mat-form-field>\\n      \\n                          <mat-error *ngIf=\\\"f.submitted && remarks.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"remarks.errors.required\\\">Remark is required</mat-error>\\n                            </mat-error>\\n      \\n                        </div>\\n                      </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col s4 pr0\\\">\\n                <div class=\\\"role-leave li-border\\\">\\n                  <h2>Role Wise Leave</h2>\\n                  <ul>\\n                      <li style =\\\"text-align: right\\\">\\n\\n                          <span>Total</span>\\n                          <span>Used</span>\\n                          <span>Pending</span>\\n                      </li>\\n                    <li *ngFor=\\\"let a of myLeavLeft\\\">\\n                      <p >{{a.leaveType}}</p>\\n                      <span class=\\\"counter\\\" >{{a.totalLeaves}}</span>\\n                     \\n                      <span class=\\\"counter\\\" >{{a.totalLeaves -  a.remainingLeaves}}</span>\\n                      <span class=\\\"counter\\\" >{{a.remainingLeaves}}</span>\\n                     \\n                    \\n                    </li>\\n                   \\n                  </ul>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12 padding0\\\">\\n            <div class=\\\"cs-btn fixedd mt13 text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\" >Save</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    \\n  </div>\\n</div>\\n</form>\\n\\n\\n</div>\\n<div class=\\\"h50\\\"></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlYXZlL2VkaXRsZWF2ZS9lZGl0bGVhdmUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-editleave',\n  templateUrl: './editleave.component.html',\n  styleUrls: ['./editleave.component.scss']\n})\nexport class EditleaveComponent implements OnInit {\n  detailed_id:any;\n  form:any={};\n  currentDate:any = new Date().toJSON().split('T')[0];\n  user:any={};\n  userType:any;\n  userId:any;\n  userRole:any;\n  username:any;\n  mobile:any;\n  loader:any=false;\n  userRole_name;any;\n  editData:any={};\n  // leaveApplicationId: any;\n  \n  \n  constructor(public route:ActivatedRoute,public db:ConstantService,public router:Router) { \n    \n  }\n  \n  ngOnInit() {\n    this.leaveTypeFunction();\n    \n    \n    \n    \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    this.userRole_name=this.user.data.roleName;\n    this.username= this.user.data.userName;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.username  );\n    this.route.params.subscribe(params=>{\n      console.log(params); \n      this.detailed_id=params;  \n      console.log(this.detailed_id);\n      this.getCountUserLeave(this.userId);\n      // alert(this.detailed_id);\n      // this.getDetail();\n      \n    });\n  }\n  //     startDate;\n  // endDate;\n  diff;\n  dbDiffrence;\n  getDetail()\n  {\n    console.log(this.detailed_id);\n    this.loader=true;\n    this.db.fetchData({'leaveApplicationId':this.detailed_id.id},'getAllLeaves').subscribe(resp=>{\n      console.log(resp);\n      this.loader=false\n      this.form=resp['data'][0];\n      console.log(\"detailed data\");\n      console.log(this.form);\n\n      for(let i=0;i<this.newArrayList.length;i++)\n      {\n        if(this.newArrayList[i].ruleId==this.form.leaveType)\n        {\n          this.form.leaveName=this.newArrayList[i].subject;\n        }\n      }\n      console.log(this.form.endDate);\n      console.log(this.form.startDate);\n      \n      this.diff=  moment( this.form.endDate).diff(moment( this.form.startDate), 'days');\n      this.dbDiffrence=this.diff+1;\n      \n      console.log(\"detailed data\");\n    });\n  }\n  \n  \n  endDate;\n  limitdate:any=[];\n  onDateChangeHandler(date) {\n    if(this.form.LeaveType == 'other')\n    {\n      this.endDate=\"\";\n      \n    }\n    else\n    {\n      console.log(date);\n      \n      \n      var myDate= moment(date, \"YYYY-MM-DD\").add(this.limitdate-1, 'days');\n      this.endDate=myDate[\"_d\"]\n      console.log(this.endDate);\n      return this.endDate;  \n    }  \n  }\n  currentyear:any;\n  myLeavLeft:any=[];\n  leaveCountLeft:any={};\n  getCountUserLeave(userId)\n  {\n    this.loader=true;\n    this.db.fetchData({'userId':userId},'getUserRemainingLeaves').subscribe((r)=>{\n      console.log(\"this is the type wise count\");\n      console.log(r);\n      this.loader=false\n      this.leaveCountLeft= r['data'];\n      console.log(\"this is the type wise count\",this.leaveCountLeft);\n      this.currentyear = moment().format('YYYY');\n      \n      for (var i=0;i<this.leaveCountLeft.length;i++)\n      {\n        if(this.leaveCountLeft[i].year==this.currentyear)\n        {\n          this.myLeavLeft.push(this.leaveCountLeft[i]);\n        }\n      }\n      console.log(\"this is remaining leaves\",this.leaveCountLeft.remainingLeaves);\n    });\n  }\n  \n  leavCount:any;\n  getCount(id)\n  {\n    console.log(id);\n    \n    for(let i=0;i<this.leaveCountLeft.length;i++)\n    {\n      console.log(this.leaveCountLeft[i]);\n      \n      if(id==this.leaveCountLeft[i].leaveTypeID)\n      {\n        this.leavCount=this.leaveCountLeft[i].remainingLeaves;\n      }\n      \n    }\n    \n    \n    console.log(this.leavCount);\n    \n  }\n  \n  lastDate:any;\n  checkValid(date)\n  {\n    this.form.endDate=null;\n    var myDate= moment(date, \"YYYY-MM-DD\").add(this.leavCount, 'days');\n    this.lastDate=myDate[\"_d\"];\n    console.log(this.lastDate)\n  }\n  \n  \n  moment:any;\n  startDate;\n  \n  date;\n  diffrence;\n  update_diffrence;\n  \n  update_leave(updated_id)\n  {\n    // alert(this.form.leaveApplicationId);\n    \n    this.startDate=moment(this.form.startDate).format('YYYY-MM-DD');\n    this.endDate=moment(this.form.endDate).format('YYYY-MM-DD');\n    console.log(this.startDate);\n    console.log(this.endDate);\n    this.diffrence=moment( this.endDate).diff(moment( this.startDate), 'days')\n    console.log(moment( this.endDate).diff(moment( this.startDate), 'days')); \n    console.log(this.diffrence);\n    this.update_diffrence= this.diffrence+1;\n    //  alert(\"this is save diffrence\"+this.update_diffrence);\n    console.log(this.form);\n    // console.log(this.form);\n    if(this.dbDiffrence > this.update_diffrence)\n    {\n      this.diffrence = -( this.dbDiffrence-this.update_diffrence)\n    }\n    else{\n      this.diffrence = (this.update_diffrence - this.dbDiffrence)\n    }\n    const currentDate = moment().format('YYYY-MM-DD');\n    this.loader=true\n    this.db.fetchData({'leaveType':this.form.leaveType,'startDate':this.startDate,'endDate':this.endDate,'remarks':this.form.remarks,'userId':this.userId,\n    'numberOfDays':this.diffrence,'ApplicationDate':currentDate,\n    'approvalStatus':0, \n    'leaveApplicationId':this.form.leaveApplicationId\n    \n  }\n  \n  \n  ,'modifyLeaveApplication').subscribe((r)=>{console.log(r);\n    this.loader=false\n    \n    this.router.navigate(['/leave-list']);\n    \n  });\n}\nnewArrayList:any={}\n\n\n\nleaveTypeFunction()\n{\n  this.loader=true\n  this.db.fetchData({},'leave/list').subscribe((r)=>{\n    this.loader=false;\n    console.log(\"=====================================================\");\n    console.log(r);\n    this.newArrayList=r['data'];\n    console.log(this.newArrayList);\n    this.getDetail();\n  });\n}\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  <div class=\\\"middle-container\\\">\\n    \\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/leave-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{allDetailedData.userName}}</h2>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"userId==allDetailedData.userID\\\"  class=\\\"left-auto\\\">\\n      <div  class=\\\"cs-btn  text-right\\\">\\n        <div class=\\\"in-btn\\\">\\n          <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/editleave/{{allDetailedData.leaveApplicationId}}\\\"><i class=\\\"material-icons\\\">create</i></button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s7\\\">\\n          <div class=\\\"details-info padding0\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"col s12 cs-figure padding0\\\">\\n                <h2>Basic Detail</h2>\\n                <ul>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Created Date</span>\\n                        <p>{{allDetailedData.applicationDate | date: 'dd-MM-yyyy' }}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Leave Type</span>\\n                          <p>{{allDetailedData.leaveTypeName}}</p>\\n                        </div>\\n                      </div>\\n                    </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Start Date</span>\\n                        <p>{{allDetailedData.startDate | date: 'dd-MM-yyyy'}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li >\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>End Date</span>\\n                        <p>{{allDetailedData.endDate | date: 'dd-MM-yyyy'}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n                <ul class=\\\"mt15\\\">\\n                  <li style=\\\"border-left: 1px solid #B29D9D; min-height: 100px;\\\">\\n                    <span>Remark</span>\\n                    <p >{{allDetailedData.remarks}}</p>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n          <div class=\\\"col s5\\\" *ngIf=\\\"userRole > 5\\\" >\\n            <div class=\\\"details-info padding0\\\">\\n              <div class=\\\"basic-details\\\">\\n                <div class=\\\"cs-figure\\\">\\n                  <h2>Status </h2>\\n                  <ul>\\n                    <li style=\\\"border: 1px solid #B29D9D;\\\">\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Leave Status</span>\\n                          <p *ngIf=\\\"allDetailedData.approvalStatus==1\\\" class=\\\"status pending\\\">Approved</p>\\n                          <p *ngIf=\\\"allDetailedData.approvalStatus==0\\\" class=\\\"status pending\\\">Pending</p>\\n                          <p *ngIf=\\\"allDetailedData.approvalStatus==2\\\" class=\\\"status pending\\\">Reject</p>\\n                        </div>\\n                      </div>\\n                    </li>\\n                  </ul>\\n\\n                  <ul class=\\\"mt15\\\" *ngIf=\\\"allDetailedData.approvalStatus==2\\\">\\n                      <li style=\\\"border: 1px solid #B29D9D; min-height: 100px;\\\">\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <span>Reason</span>\\n                            <p>{{allDetailedData.reason}}</p>\\n                          </div>\\n                        </div>\\n                      </li>\\n                    </ul>\\n                </div>\\n                \\n                \\n                \\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"userId!=allDetailedData.userID\\\" class=\\\"col s5\\\">\\n            <div class=\\\"details-info padding0\\\">\\n              <div class=\\\"basic-details\\\">\\n                <div class=\\\"cs-figure\\\">\\n                  <h2 class=\\\"pb0\\\">Update Status </h2>\\n                  \\n                </div>\\n                \\n                <form  name=\\\"form\\\"   #f=ngForm   (ngSubmit)=\\\" f.form.valid && update_status(allDetailedData.approvalStatus,allDetailedData.leaveApplicationId)\\\" novalidate>\\n                  <div class=\\\"from-fields\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s12 padding0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                            \\n                            <mat-select placeholder=\\\"Select Status\\\"  name=\\\"approvalStatus\\\" [(ngModel)]=\\\"allDetailedData.approvalStatus\\\">\\n                              <mat-option [value]=1>Approved</mat-option>\\n                              <mat-option [value]=0>Pending</mat-option>\\n                              <mat-option [value]=2>Reject</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                      <div *ngIf=\\\"allDetailedData.approvalStatus == 2 \\\" class=\\\"col s12 padding0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field   class=\\\"cs-input infix-bodr8\\\">\\n                            <!-- -->\\n                            <textarea    matInput placeholder=\\\"Reason\\\" #reason=\\\"ngModel\\\" class=\\\"h70\\\" name=\\\"reason\\\" [(ngModel)]=\\\"form.reason\\\" required  ></textarea>\\n                          </mat-form-field>\\n\\n                          <mat-error *ngIf=\\\"f.submitted && reason.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"reason.errors.required\\\">Reason of reject is required</mat-error>\\n                            </mat-error>\\n                        </div>\\n                      </div>\\n                      \\n                      <div class=\\\"col s12 padding0\\\">\\n                        <div  class=\\\"cs-btn fixedd mt15 text-right\\\">\\n                          <div class=\\\"in-btn\\\">\\n                            <button mat-raised-button color=\\\"accent\\\" mat-stroked-button [disabled]=\\\"!allDetailedData.approvalStatus\\\"  >Save</button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n      </div>\\n    </div>\\n    \\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\\n  \\n  \"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\n\n@Component({\n  selector: 'app-leave-detail',\n  templateUrl: './leave-detail.component.html'\n})\nexport class LeaveDetailComponent implements OnInit {\n\n  constructor(public route:ActivatedRoute, public router:Router, public db:ConstantService) {\n  }\n  detailed_id:any;\nform:any={};\n  user:any={};\n  userType:any;\n  userId:any;\n  userRole:any;\n  username:any;\n  mobile:any;\n  loader:any=false;\n  userRole_name;any;\n\n\n  from:any={};\n  ngOnInit() {\n    this.getUserDetail();\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    this.userRole_name=this.user.data.roleName;\n    this.username= this.user.data.userName;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.username  );\n     this.route.params.subscribe(params=>{\n  console.log(params); \n  this.detailed_id=params;  \n  console.log(this.detailed_id);\n  this.getDetail();\n    });\n    }\n\n// allList:any={};\n//   getUserLeaves()\n//   {\n//     this.db.fetchData({},'getAllLeaves').subscribe((rep)=>{\n//       console.log(rep);\n//      this.allList=rep['data'];\n//      console.log(\"=====================================list data===========\");\n//      console.log(this.allList);   \n     \n//      console.log(\"=====================================list data===========\");\n//     })\n//   }\n\n  allDetailedData:any={};\n  getDetail()\n  {\n    console.log(this.detailed_id);\n    // 'leaveApplicationId':this.detailed_id\n    // this.db.fetchData({'leaveApplicationId':this.detailed_id},'getUserLeaves').subscribe(resp=>{\n      this.loader=true\n      this.db.fetchData({'leaveApplicationId':this.detailed_id.id,'approvalStatus':3},'getAllLeaves').subscribe(resp=>{\n      console.log(resp);\n      this.loader=false\n      this.allDetailedData=resp['data'][0];\n      console.log(\"detailed data\");\n      console.log(this.allDetailedData);\n      console.log(\"detailed data\");\n    });\n  }\n\n  getUserDetail()\n  {\n    // 'userId': this.userId\n    this.loader=true;\n    console.log(this.userId);\n    this.db.fetchData({},'detail/'+this.userId).subscribe(resp=>{\n      console.log(resp);\n      this.loader=false\n      this.allDetailedData=resp['data'][0];\n      console.log(\"detailed data\");\n      console.log(this.allDetailedData);\n      console.log(\"detailed data\");\n    });\n  }\n// for update status functions \n  update_status(status,la_id)\n  {\n   \n    console.log(status,la_id);\n    if(status==1)\n    {\n      this.form.reason=\"\";\n    }\n    this.loader=true\n    this.db.fetchData({approvalStatus:status,'leaveApplicationId':la_id,reason:this.form.reason},'approveLeave').subscribe((rep)=>\n    console.log(rep));\n    this.loader=false\n    this.router.navigate(['/leave-list']);\n  }\n\n  edit_detail(id)\n  {\n    // alert(id);\n    this.loader=true\n    this.db.fetchData({'leaveApplicationId':id},'getAllLeaves').subscribe(resp=>{\n      console.log(resp);\n      this.loader=false\n      this.allDetailedData=resp['data'][0];\n      console.log(\"detailed data\");\n      console.log(this.allDetailedData);\n      this.router.navigate(['/add-leave']);\n      console.log(\"detailed data\");\n    });\n\n    // \n    // this.db.fetchData({'leaveApplicationId':id},'modifyLeaveApplication').subscribe((r)=>{\n    //   console.log(\"this is leaveApplicationId\");\n    //   console.log(r);\n    //   console.log(\"this is leaveApplicationId\");\n    // });\n  }\n}\n","module.exports = \"<!-- <div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  <div class=\\\"middle-container pb15\\\" >\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/leave.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\" style=\\\"display: flex; align-items: center; flex-direction: row;\\\">\\n        <h2>Leave List</h2>\\n        <div class=\\\"item-filter ml15\\\" >\\n          <div class=\\\"item-filter\\\" >\\n            <mat-form-field class=\\\"wp100\\\">\\n              <mat-select name=\\\"leaveType\\\" [(ngModel)]=\\\"form.leaveType\\\"  >\\n                <mat-option value=\\\"\\\" aria-placeholder=\\\"Select Lead Type\\\" disabled>Select Lead Type</mat-option>\\n                <mat-option  value=\\\"All Leave\\\" (click)=\\\"getAllLeaves()\\\">All Leave</mat-option>\\n                <mat-option  value=\\\"Today Leave\\\" (click)=\\\"MiddelDateLeaves();\\\">Today Leave</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"left-auto\\\">\\n      <div  class=\\\"filter-container ml15\\\">\\n        <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n          <button mat-button >CLEAR FILTER</button>\\n        </div>\\n      </div>\\n      <div class=\\\"tabs right-tab\\\" *ngIf=\\\"form.leaveType !='Today Leave' \\\" >\\n        <ul >\\n          <li><a [ngClass]=\\\"{'tab-active': leaveStatus==0}\\\"  (click)=\\\"leaveStatus= 0; pendingTask()\\\">PENDING</a></li>\\n          <li><a [ngClass]=\\\"{'tab-active': leaveStatus==1}\\\"  (click)=\\\"leaveStatus= 1; approvedTask()\\\">Approved</a></li>\\n          <li><a [ngClass]=\\\"{'tab-active': leaveStatus==2}\\\" (click)=\\\"leaveStatus= 2; RejectTask()\\\">Reject</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n    \\n  </div>\\n  <div *ngFor=\\\"let a of rolelistsales1\\\">\\n    <p>{{a.roleName}}</p>\\n    <p>{{a.roleCode}}</p>\\n    \\n  </div>\\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head\\\">\\n                <table> \\n                  <tr >\\n                    <th class=\\\"w220\\\" *ngIf=\\\"userRole == 1 \\\">Name </th>  \\n                    <th class=\\\"w150\\\" *ngIf=\\\"userRole == 1\\\" > Designation</th>  \\n                    <th class=\\\"w110\\\" *ngIf=\\\"userRole == 1\\\" >Mobile No</th>  \\n                    <th class=\\\"w150\\\">Type</th> \\n                    <th  class=\\\"w200\\\">Date Form - To</th>\\n                    <th class=\\\"w80 text-center\\\">Days</th>\\n                    <th class=\\\"w100\\\" *ngIf=\\\"form.leaveType != 'Today Leave'\\\" >Status</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"table-head bdrt\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w220\\\">\\n                      <div class=\\\"th-search\\\">\\n                        <input placeholder=\\\"Select Name\\\" type=\\\"text\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"search.name\\\" (keyup)=\\\"deginationFilter(leaveStatus)\\\">\\n                      </div>\\n                    </th>\\n                    <th class=\\\"w150\\\">\\n                      <div class=\\\"th-search\\\">\\n                        <mat-select name=\\\"designation\\\" [(ngModel)]=\\\"search.designation\\\" placeholder=\\\"--Select--\\\">\\n                          <mat-option value=\\\"Select Role\\\"> Select Role</mat-option>\\n                          <mat-option  value=\\\"{{d.designation}}\\\"   (click)= \\\"deginationFilter()\\\" *ngFor=\\\"let d of designationData \\\">{{d.designationName}}</mat-option>\\n                        </mat-select>\\n                      </div>\\n                    </th>\\n                    <th class=\\\"w110\\\" >\\n                      &nbsp;\\n                    </th>\\n                    <th >\\n                      <div class=\\\"th-search\\\">\\n                        <mat-select name=\\\"leaveType\\\" [(ngModel)]=\\\"search.leaveType\\\" placeholder=\\\"--Select--\\\" >\\n                          <mat-option value=\\\"select\\\">Select </mat-option>\\n                          <mat-option  value={{a.ruleId}} *ngFor=\\\"let a of newArrayList\\\"   (click)= \\\"deginationFilter()\\\" >{{a.subject}}</mat-option>\\n                        </mat-select>\\n                      </div>\\n                    </th>\\n                    <th class=\\\"200\\\">&nbsp;</th>\\n                    <th class=\\\"w80\\\">&nbsp;</th>\\n                    <th class=\\\"w100\\\" *ngIf=\\\"form.leaveType != 'Today Leave'\\\">&nbsp;</th>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr>\\n                    <td>\\n                    </td>\\n                    <td>\\n                      <mat-select name=\\\"designation\\\" [(ngModel)]=\\\"search.designation\\\" placeholder=\\\"--Select--\\\">\\n                        <mat-option value=\\\"Select Role\\\"> Select Role</mat-option>\\n                        <mat-option  value=\\\"{{d.designation}}\\\"   (click)= \\\"deginationFilter()\\\" *ngFor=\\\"let d of designationData \\\">{{d.designationName}}</mat-option>\\n                      </mat-select>\\n                    </td>\\n                    <td></td>\\n                    <td>\\n                      <div class=\\\"item-filter ml15\\\">\\n                        <mat-select name=\\\"leaveType\\\" [(ngModel)]=\\\"search.leaveType\\\" placeholder=\\\"--Select--\\\" >\\n                          <mat-option value=\\\"select\\\">Select </mat-option>\\n                          <mat-option  value={{a.ruleId}} *ngFor=\\\"let a of newArrayList\\\"   (click)= \\\"deginationFilter()\\\" >{{a.subject}}</mat-option>\\n                        </mat-select>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr *ngFor=\\\"let a of allList;let i=index\\\">\\n                    <td class=\\\"w220\\\" *ngIf=\\\"userRole == 1\\\">{{a.userName}}  </td> \\n                    <td class=\\\"w150\\\" *ngIf=\\\"userRole == 1\\\">\\n                      <span *ngIf=\\\"a.designation == 1\\\">VicePresident</span>\\n                      <span *ngIf=\\\"a.designation == 2\\\">DeputyGeneralManager</span>\\n                      <span *ngIf=\\\"a.designation == 3\\\">GeneralManager</span>\\n                      <span *ngIf=\\\"a.designation == 4\\\">AssistantGeneralManager</span>\\n                      <span *ngIf=\\\"a.designation == 5\\\">SrManager</span>\\n                      <span *ngIf=\\\"a.designation == 6\\\">Manager</span>\\n                      <span *ngIf=\\\"a.designation == 7\\\">DeputyManager</span>\\n                      <span *ngIf=\\\"a.designation == 8\\\">SrExecutive</span>\\n                      <span *ngIf=\\\"a.designation == 9\\\">Executive</span>\\n                      <span *ngIf=\\\"a.designation == 10\\\">AssistantManager</span>\\n                      <span *ngIf=\\\"a.designation == 11\\\">Assistant</span>\\n                      <span *ngIf=\\\"a.designation == 12\\\">Trainee</span>\\n                      <span *ngIf=\\\"a.designation == 13\\\">Others</span>\\n                    </td>\\n                    <td class=\\\"w110\\\" *ngIf=\\\"userRole == 1\\\" >{{a.mobile}}</td>  \\n                    <td ><a class=\\\"link-btn\\\" routerLink=\\\"/leave-detail/{{a.leaveApplicationId}}\\\"  routerLinkActive=\\\"active\\\" >{{a.leaveTypeName}}</a></td>\\n                    <td class=\\\"w200\\\">{{a.startDate | date:'MMMM d, y'}} to {{a.endDate | date:'MMMM d, y'}}</td>\\n                    <td class=\\\"w80 text-center\\\">{{a.allLeave}}</td>\\n                    <td *ngIf=\\\"form.leaveType != 'Today Leave'\\\" class=\\\"w100\\\" [ngClass]=\\\"{'pending':a.approvalStatus==0,'approved':a.approvalStatus==1,'reject':a.approvalStatus==2}\\\">\\n                      <span *ngIf=\\\"a.approvalStatus==0  &&  form.leaveType != 'Today Leave'\\\">Pending</span>\\n                      <span *ngIf=\\\"a.approvalStatus==1  &&  form.leaveType != 'Today Leave'\\\">Approve</span>\\n                      <span *ngIf=\\\"a.approvalStatus==2  &&  form.leaveType != 'Today Leave'\\\">Reject</span>\\n                      <div class=\\\"action-btns\\\">\\n                        <button mat-button (click)=\\\"deleteLeaveRequest(a.leaveApplicationId,i)\\\" class=\\\"delete\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  \\n                </table>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-leave\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<div class=\\\"h50\\\"></div> -->\\n\\n<div class=\\\"main-container\\\" >\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  \\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text flex-heading\\\">\\n        <div class=\\\"content\\\">\\n          <h2>Leave</h2>\\n          <p>Total Leave List{{leaveList.length}}</p>\\n        </div>\\n        \\n        <div *ngIf=\\\"userRole!=10\\\" class=\\\"item-filter\\\" >\\n          <mat-form-field class=\\\"wp100\\\">\\n            <mat-select   name=\\\"leave\\\" #leave=\\\"ngModel\\\" [(ngModel)]=\\\"leaveFilter.leave\\\">\\n              <mat-option (click)=\\\"getUserLeave(1,data.approvalStatus)\\\" [value]=1>My Leave</mat-option>\\n              <mat-option (click)=\\\"getUserLeave(2,data.approvalStatus)\\\" [value]=2>My junior leave</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <div *ngIf=\\\"leaveFilter.leave==2 && userRole!=10 \\\" class=\\\"item-filter\\\" >\\n          <mat-form-field class=\\\"wp100\\\">\\n            <mat-select   name=\\\"startDate\\\" #startDate=\\\"ngModel\\\" [(ngModel)]=\\\"currentDate\\\" >\\n              <mat-option (click)=\\\"getTodayFilter(1)\\\" [value]=1>All Leave</mat-option>\\n              <mat-option (click)=\\\"getTodayFilter(2)\\\" [value]=2>Today leave</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <div  class=\\\"left-auto\\\">\\n      <div *ngIf=\\\"data.userName ||data.designation||data.startDate|| data.endDate\\\" class=\\\"filter-container left-auto\\\">\\n        <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n          <button mat-button >CLEAR FILTER</button>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"leaveFilter.leave==1\\\" class=\\\"filter-container left-auto\\\">\\n        <div (click)=\\\"getRemainingLeave()\\\" class=\\\"filter-btn\\\">\\n          <button mat-button >Remaining Leave</button>\\n        </div>\\n      </div>\\n      <div class=\\\"tabs right-tab none-af\\\">\\n        <ul>\\n          <li><a class=\\\"pending\\\" [ngClass]=\\\"{'tab-active':data.approvalStatus==0}\\\" (click)=\\\"getUserLeave(leaveFilter.leave,0)\\\" >PENDING</a></li>\\n          <li><a class=\\\"approved\\\" [ngClass]=\\\"{'tab-active':data.approvalStatus==1}\\\" (click)=\\\"getUserLeave(leaveFilter.leave,1)\\\" >APPROVED</a></li>\\n          <li><a class=\\\"reject\\\" [ngClass]=\\\"{'tab-active':data.approvalStatus==2}\\\" (click)=\\\"getUserLeave(leaveFilter.leave,2)\\\" >REJECT</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"cs-table left-right-20\\\">\\n          \\n          <div class=\\\"sticky-head\\\">\\n            <div class=\\\"table-head\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr>\\n                  <th  class=\\\"w30\\\">&nbsp;</th>\\n                  <th class=\\\"w160\\\">Date</th>\\n                  <th>User Name</th>\\n                  <th class=\\\"w180\\\">Designation</th>\\n                  <th class=\\\"w180\\\">Leave Type</th>\\n                  <th class=\\\"w150\\\">Date From</th>\\n                  <th class=\\\"w150\\\">Date To</th>\\n                  <th class=\\\"w150 text-center\\\">No of Day</th>\\n                  <th class=\\\"w150\\\">Status</th>\\n                </tr>\\n              </table>\\n            </div>\\n            <div class=\\\"table-head bdrt\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr>\\n                  <th class=\\\"w30\\\">&nbsp;</th>\\n                  <th class=\\\"w160\\\">\\n                    &nbsp;\\n                  </th>\\n                  <th>\\n                    <div class=\\\"th-search\\\">\\n                      <input placeholder=\\\"Select Name\\\" type=\\\"text\\\" name=\\\"userName\\\" #userName=\\\"ngModel\\\" [(ngModel)]=\\\"data.userName\\\" (keyup)=\\\"getUserLeave(leaveFilter.leave,data.approvalStatus)\\\">\\n                    </div>\\n                  </th>\\n                  <th class=\\\"w180\\\">\\n                    <div class=\\\"th-search\\\">\\n                      <mat-select name=\\\"designation\\\" [(ngModel)]=\\\"data.designation\\\" placeholder=\\\"--Select--\\\">\\n                        <mat-option value=\\\"0\\\" (click)= \\\"getUserLeave(leaveFilter.leave,data.approvalStatus)\\\">All Role</mat-option>\\n                        <mat-option  value=\\\"{{d.designation}}\\\"   (click)= \\\"getUserLeave(leaveFilter.leave,data.approvalStatus)\\\" *ngFor=\\\"let d of designationData \\\">{{d.designationName}}</mat-option>\\n                      </mat-select>\\n                    </div>\\n                  </th>\\n                  <th class=\\\"w180\\\">&nbsp;</th>\\n                  <th class=\\\"w150\\\">\\n                      <div class=\\\"th-search padding0\\\" >\\n                          <mat-form-field class=\\\"wp100 toggle-date-picker\\\">\\n                            <input matInput (dateChange)=\\\"getUserLeave(leaveFilter.leave,data.approvalStatus)\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"data.startDate\\\" [matDatepicker]=\\\"picker1\\\" >\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker  #picker1></mat-datepicker>\\n                          </mat-form-field>\\n                        </div>\\n                  </th>\\n                  <th class=\\\"w150\\\">\\n                      <div class=\\\"th-search padding0\\\" >\\n                          <mat-form-field class=\\\"wp100 toggle-date-picker\\\">\\n                            <input matInput (dateChange)=\\\"getUserLeave(leaveFilter.leave,data.approvalStatus)\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"data.endDate\\\" [min]=\\\"data.startDate\\\"[matDatepicker]=\\\"picker\\\" >\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker  #picker></mat-datepicker>\\n                          </mat-form-field>\\n                        </div>\\n                    </th>\\n                  <th class=\\\"w150\\\">&nbsp;</th>\\n                  <th class=\\\"w150\\\">&nbsp;</th>\\n                </tr>\\n              </table>\\n            </div> \\n          </div>\\n          \\n          \\n          <div class=\\\"table-container\\\">\\n            <div class=\\\"table-content\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr *ngFor=\\\"let leave of leaveList;let i=index\\\">\\n                  <td class=\\\"w30\\\">{{i+1}}</td>\\n                  <td class=\\\"w160\\\"><a class=\\\"link-btn\\\" mat-button>{{leave.applicationDate | date :'EEEE, MMMM d, y'}}</a></td>\\n                  <td>{{leave.userName}}</td>\\n                  <td>{{leave.leaveTypeName}}</td>\\n                  <td class=\\\"w180\\\">\\n                    <span *ngIf=\\\"leave.designation == 1\\\">VicePresident</span>\\n                    <span *ngIf=\\\"leave.designation == 2\\\">DeputyGeneralManager</span>\\n                    <span *ngIf=\\\"leave.designation == 3\\\">GeneralManager</span>\\n                    <span *ngIf=\\\"leave.designation == 4\\\">AssistantGeneralManager</span>\\n                    <span *ngIf=\\\"leave.designation == 5\\\">SrManager</span>\\n                    <span *ngIf=\\\"leave.designation == 6\\\">Manager</span>\\n                    <span *ngIf=\\\"leave.designation == 7\\\">DeputyManager</span>\\n                    <span *ngIf=\\\"leave.designation == 8\\\">SrExecutive</span>\\n                    <span *ngIf=\\\"leave.designation == 9\\\">Executive</span>\\n                    <span *ngIf=\\\"leave.designation == 10\\\">AssistantManager</span>\\n                    <span *ngIf=\\\"leave.designation == 11\\\">Assistant</span>\\n                    <span *ngIf=\\\"leave.designation == 12\\\">Trainee</span>\\n                    <span *ngIf=\\\"leave.designation == 13\\\">Others</span>\\n                  </td>\\n                  <td class=\\\"w150\\\">{{leave.startDate|date:'MMMM d, y'}}</td>\\n                  <td class=\\\"w150\\\">{{leave.endDate|date:'MMMM d, y'}} </td>\\n                  <td class=\\\"w150 text-center\\\">{{leave.allLeave}}</td>\\n                  <td  class=\\\"w150 txt-center\\\" [ngClass]=\\\"{'pending':leave.approvalStatus==0,'approved':leave.approvalStatus==1,'reject':leave.approvalStatus==2}\\\">\\n                    <span *ngIf=\\\"leave.approvalStatus==0\\\">Pending</span>\\n                    <span *ngIf=\\\"leave.approvalStatus==1\\\">Approve</span>\\n                    <span *ngIf=\\\"leave.approvalStatus==2\\\" >Reject</span>\\n                    <div class=\\\"action-btns\\\">\\n                      <a mat-button class=\\\"view\\\"  routerLink=\\\"/leave-detail/{{leave.leaveApplicationId}}\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">assignment_turned_in</i>View</a>\\n                      <button *ngIf=\\\"data.approvalStatus==0\\\" mat-button (click)=\\\"deleteLeaveRequest(leave.leaveApplicationId,i)\\\" class=\\\"delete\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"data-not-available\\\" *ngIf=\\\"div\\\">\\n    <div class=\\\"outer\\\">\\n      <div class=\\\"iinear\\\">\\n        <div class=\\\"figure\\\" matRipple>\\n          <div class=\\\"header\\\">\\n            <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n          </div>\\n          \\n          <div class=\\\"description\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>No Leave of Any User</h2>\\n            </div>\\n            <div class=\\\"img\\\">\\n              <i class=\\\"material-icons\\\">error_outline</i>\\n            </div>\\n            <div class=\\\"psc\\\">\\n              <p>data not available</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-leave\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport * as moment from 'moment';\nimport { MatDialog } from '@angular/material';\nimport { RemainingLeaveComponent } from '../remaining-leave/remaining-leave.component';\n// import { log } from 'util';\n\n@Component({\n  selector: 'app-leave-list',\n  templateUrl: './leave-list.component.html'\n})\nexport class LeaveListComponent implements OnInit {\n  // leaveType:string = \"today\" \n  // leaveType:string= \"today\";\n  form:any={};\n  user:any={};   \n  userType:any;\n  userId:any;\n  userRole:any;\n  username:any;\n  mobile:any;\n  superAdmin:any;\n  userRole_name;any;\n  data:any={}\n  currentDate:any;\n  \n  loader:boolean=false;\n  div:boolean=false;\n  url:any;\n  \n  public show:boolean = false;\n  public buttonName:any = 'Show';\n  designationData:any=[];\n  constructor(public db:ConstantService, public dialog: MatDialog) {\n    this.designationData = [ \n      \n      {  designationName: 'Vice President', designation: 1}, \n      {  designationName: 'Deputy General Manager', designation: 2}, \n      {  designationName: 'General Manager', designation: 3}, \n      {  designationName: 'Assistant General Manager', designation: 4}, \n      {  designationName: 'Sr Manager', designation: 5}, \n      {  designationName: 'Manager', designation: 6}, \n      {  designationName: 'Deputy Manager', designation: 7}, \n      {  designationName: 'Sr Executive', designation: 8}, \n      {  designationName: 'Executive', designation: 9}, \n      {  designationName: 'Assistant Manager', designation: 10}, \n      {  designationName: 'Assistant', designation: 11}, \n      {  designationName: 'Trainee', designation: 12}, \n      {  designationName: 'Others', designation: 13} \n    ]; \n    this.data.approvalStatus=0;\n    \n  }\n  //  loader:any=false;\n  ngOnInit() {\n    \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    this.userRole_name=this.user.data.roleName;\n    this.username= this.user.data.userName;\n    this.superAdmin=this.user.data.superAdmin;\n    this.userType=this.user.data.userType;\n    if(this.userRole!=10)\n    {\n    this.leaveFilter.leave=2;\n    }\n    else\n    {\n      this.leaveFilter.leave=1;\n\n    }\n    \n    if(this.userId)\n    {\n      this.getUserLeave(this.leaveFilter.leave,this.data.approvalStatus)\n    }\n    \n  }\n  \n  leaveFilter:any={}\n  leaveList:any=[];\n  getUserLeave(leaveType,leaveStatus)\n  {\n    if(this.data.startDate)\n    {\n      this.data.startDate=moment(this.data.startDate).format('YYYY-MM-DD');\n      this.data.endDate=moment(this.data.startDate).format('YYYY-MM-DD');\n    } \n    else{\n      this.data.startDate=undefined\n    }\n    if(this.data.endDate)\n    {\n      this.data.endDate=moment(this.data.endDate).format('YYYY-MM-DD');\n    }\n    else{\n      this.data.endDate=undefined;\n    }\n     this.div=false;\n    this.leaveList=[]\n    this.loader=true;\n    this.data.approvalStatus=leaveStatus;\n    if(leaveType==1)\n    {\n      this.url=\"getAllLeaves\";\n      this.currentDate=undefined;\n      this.data.userID=this.userId;\n    }\n    else if(leaveType==2)\n    {\n      this.currentDate=1;\n      this.url=\"GetAllAssignedLeaveRequests\";\n      this.data.userID=this.userId;\n      \n    }\n    this.db.fetchData(this.data,this.url).subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['message']=='Success')\n      {\n        this.leaveList=result['data'];\n        for(let i=0;i<this.leaveList.length; i++)\n        {\n          console.log(\"test\");  \n          this.leaveList[i].allLeave=(moment(this.leaveList[i].endDate).diff(moment(this.leaveList[i].startDate),\"days\"))+1;\n        }\n      }\n      if(this.leaveList.length==0)\n      {\n        this.div=true;\n      }\n    })\n  }\n  \n  // currentDate:any;\n  getTodayFilter(dateType)\n  {    \n    if(dateType==1)\n    {\n      this.data.startDate =undefined;\n      this.data.endDate =undefined;\n    }\n    else{\n      this.data.startDate = moment().format('YYYY-MM-DD');\n      this.data.endDate=moment().format('YYYY-MM-DD');\n      \n    }\n    this.getUserLeave(this.leaveFilter.leave,this.data.approvalStatus)\n  }\n  \n  clearfilter()\n  {\n    this.data.userName=undefined;\n    this.data.designation=undefined;\n    this.data.startDate=undefined;\n    this.data.endDate=undefined;\n    this.getUserLeave(this.leaveFilter.leave,this.data.approvalStatus);\n  }\n  \n  deleteLeaveRequest(id)\n  {\n    this.loader=true;\n    this.db.fetchData({leaveApplicationId:id},\"deleteLeaveRequest\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['message']=='Success')\n      {\n        this.getUserLeave(this.leaveFilter.leave,this.data.approvalStatus);\n      }\n      \n    })\n  }\n\n  getRemainingLeave()\n  {\n        const dialogRef = this.dialog.open(RemainingLeaveComponent, {\n          width: '500px',\n          data:{\n          userId:this.userId\n          }});\n          dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n            console.log('The dialog was closed');\n          });\n  }\n  \n  //   getAllDATAFROMADMINSIDE()\n  //   {\n  //     this.loader=true;\n  //     this.db.fetchData( {'approvalStatus':3,},'getAllLeaves').subscribe((rep)=>{\n  //       console.log(\"thias is for admin\");\n  //       console.log(rep);\n  //       // this.loader=false\n  //       this.allList=rep['data'];\n  //       this.forGettingDatsFunction();\n  //       this.loader=false\n  //       console.log(\"thias is for admin\");\n  //     });\n  //   }\n  //   // 3= for all, 0=pending, 1= approved , 2= reject\n  //   // {'approvalStatus':3,'leaveApplicationId':0,'designation':0,'userID':this.userId\n  //   getUserLeaves1()\n  //   {\n  //     // this.loader=true;\n  //     this.db.fetchData( {'userId':this.userId, 'approvalStatus':0,},'getAllLeaves').subscribe((rep)=>{\n  \n  //       console.log(rep);\n  //       // this.loader=false\n  //       this.allList=rep['data'];\n  //       console.log(this.allList); \n  //       this.forGettingDatsFunction();\n  \n  //     });    \n  //   }\n  //   rolelist()\n  //   {\n  //     // this.loader=true\n  //     this.db.fileData('','usertype/list').subscribe((response)=>{\n  //       console.log(response);\n  //       // this.loader=false;\n  //       this.rolelists=response['data'];\n  //       let filterrolesystem= this.rolelists.filter(x => x.userTypeId==2);\n  //       this.rolelistsales1=filterrolesystem[0].roles;\n  //       console.log(this.rolelistsales1);\n  //       for(let i=0;i<this.users.length;i++){\n  //         let systemIndex=  this.rolelistsales1.findIndex(x => x.roleId==this.users[i].role);\n  //         console.log(systemIndex);\n  //         if(systemIndex!=-1){\n  //           this.users[i].role_name=this.rolelistsales1[systemIndex].roleName;\n  //           console.log(this.users[i].role_name);\n  //         }\n  //       }\n  //     });\n  \n  //   }\n  \n  //   deleteLeaveRequest(id,i)\n  //   {\n  //     // +id  {'leaveApplicationId':id}    \n  //     this.db.fetchData({'leaveApplicationId':id},'deleteLeaveRequest').subscribe((r)=>{console.log(r);\n  //       this.allList.splice(i);\n  //     });\n  //   }\n  \n  \n  //   // ***********************   TODAY FILTER FUNCTION ***************************\n  \n  //   getTodayLeave()\n  //   {\n  \n  \n  //     console.log(this.form);\n  //     this.loader= true;\n  \n  \n  //     this.db.fetchData({'approvalStatus':3, 'startdate':this.currentDate},'getAllLeaves').subscribe((r)=>{\n  //       console.log(r);\n  //       this.allList= r['data'];\n  \n  //       this.forGettingDatsFunction();\n  //       this.loader=false;\n  //     });\n  \n  //   }\n  //   // ***********************   ALL DATES FILTER FUNCTION ***************************\n  //   getAllLeaves()\n  //   {\n  //     // this.getAllDATAFROMADMINSIDE();\n  //     // avtrat sir\n  //     // this.allList.approvalStatus = 0;\n  //     console.log(this.allList.approvalStatus);\n  //     this.pendingTask();\n  //     // avtrat sir\n  //   }  \n  \n  //   forGettingDatsFunction()\n  //   {\n  //     for(let i=0;i<this.allList.length; i++)\n  //     {\n  //       console.log(\"test\");  \n  //       this.allList[i].allLeave=(moment(this.allList[i].endDate).diff(moment(this.allList[i].startDate),\"days\"))+1;\n  //     }\n  //     this.loader=false;    \n  //   }\n  \n  //   pendingActive=false;\n  //   ap1_url:any;\n  //   pendingTask()\n  //   {\n  \n  //     this.loader= true;\n  //     this.leaveStatus= 0 ;\n  \n  //     if(this.userId == 1  &&  this.superAdmin == true)\n  //     {\n  //       this.ap1_url = {'approvalStatus':0};\n  //     }\n  //     else{\n  //       this.ap1_url = {'approvalStatus':0, 'userId': this.userId };\n  \n  //     }  \n  //     this.allList= [];\n  //       this.db.fetchData(this.ap1_url,'getAllLeaves').subscribe((r)=>{\n  //         console.log(r);\n  //         this.allList=r['data'];\n  //         // this.loader= false;\n  //         // alert(this.allList.approvalStatus);\n  //         this.forGettingDatsFunction();\n  //         this.loader= false;\n  //       });\n  \n  //   }\n  \n  \n  \n  \n  //   approvedTask()\n  //   { \n  //     this.loader=true; \n  //     // this.allList= [];\n  \n  //     if(this.userId == 1  &&  this.superAdmin == true)\n  //     {\n  //       this.ap1_url = {'approvalStatus':1};\n  //     }\n  //     else{\n  //       this.ap1_url = {'approvalStatus':1, 'userId': this.userId };\n  \n  //     }  \n  \n  \n  //     this.db.fetchData(this.ap1_url,'getAllLeaves').subscribe((r)=>{\n  //       console.log(r);\n  //       this.allList=r['data'];\n  //       // alert(this.allList.approvalStatus);\n  //       this.forGettingDatsFunction();\n  //       this.loader=false;\n  //     });\n  //   }\n  \n  \n  //   RejectTask()\n  //   { \n  //     if(this.userId == 1  &&  this.superAdmin == true)\n  //     {\n  //       this.ap1_url = {'approvalStatus':2};\n  //     }\n  //     else{\n  //       this.ap1_url = {'approvalStatus':2, 'userId': this.userId };\n  //     }  \n  //     this.loader= true; \n  //     // this.allList= [];\n  //     this.db.fetchData(this.ap1_url,'getAllLeaves').subscribe((r)=>{\n  //       console.log(r);\n  //       this.allList=r['data'];\n  //       // alert(this.allList.approvalStatus);\n  //       this.forGettingDatsFunction();\n  //       this.loader=false;\n  //     });\n  //   }\n  \n  \n  //   MiddelDateLeaves()\n  //   {\n  //       this.loader=true;\n  //       // this.allList= [];\n  //       this.db.fetchData( {'approvalStatus':1,'onDate': this.currentDate},'getAllLeaves').subscribe((rep)=>{\n  //         console.log(\"this is date\");\n  //       console.log(rep);\n  //       console.log(\"this is date\");\n  //       this.allList=rep['data'];\n  //       this.forGettingDatsFunction();\n  //       // this.forGettingDatsFunction();\n  //       this.loader=false\n  //     });\n  //   }\n  \n  \n  //   search:any={}\n  //   deginationFilter(status)\n  \n  //     {\n  //       console.log(this.search);     \n  //     this.db.fetchData({'approvalStatus':status,'leaveType':this.search.leaveType,'userName':this.search.name,'designation':this.search.designation},\"getAllLeaves\").subscribe((r)=>{\n  //      console.log(\"this is search function\");\n  //       console.log(r);\n  //       this.allList= r['data'];\n  //       console.log(\"this is search function\");\n  //     })\n  //   }\n  \n  \n  \n  //   newArrayList:any=[];\n  //   leaveTypeFunction()\n  // {\n  // this.loader=true\n  //   this.db.fetchData({},'leave/list').subscribe((r)=>{\n  //     this.loader=false\n  //     console.log(r);\n  //     this.newArrayList=r['data'];\n  //     console.log(this.newArrayList);\n  //   });\n  // }\n  \n  // clearfilter()\n  // {\n  \n  // }\n  \n  // GetAllAssignedLeaveRequests(userId){\n  //   // alert(userId);\n  //   if(this.leaveStatus == 0)\n  //   {\n  //     this.ap1_url = {'approvalStatus':0};\n  //   }\n  //   else if(this.leaveStatus == 1)\n  //   {\n  //     this.ap1_url = {'approvalStatus':1};\n  //   }\n  //   else if(this.leaveStatus == 2)\n  //   {\n  //     this.ap1_url = {'approvalStatus':2};\n  //   }\n  //   this.db.fetchData({'userID':userId ,'approvalStatus':3},\"GetAllAssignedLeaveRequests\").subscribe((r)=>{\n  //     console.log(\"GetAllAssignedLeaveRequests\");\n  //     console.log(r);\n  //     this.allList= r['data'];\n  \n  //     // this.forGettingDatsFunction();\n  //     console.log(\"GetAllAssignedLeaveRequests\");\n  //   });\n  // }\n  \n  \n  \n}\n","module.exports = \"<div class=\\\"col s4 pr0\\\">\\n  <div class=\\\"role-leave li-border\\\">\\n    <h2> Leave Info \\n    </h2>\\n    <ul>\\n        <li style =\\\"text-align: right\\\">\\n\\n            <span>Total</span>\\n            <span>Used</span>\\n            <span>Pending</span>\\n        </li>\\n\\n      <li *ngFor=\\\"let a of leaveList\\\">                          \\n        <p   >{{a.leaveType}}</p>\\n        <span  class=\\\"counter\\\">{{a.totalLeaves}}</span>\\n        <span  class=\\\"counter\\\">{{ a.totalLeaves - a.remainingLeaves}}</span>\\n        <span  class=\\\"counter\\\">{{a.remainingLeaves}}  </span>\\n      </li>\\n     \\n    </ul>\\n  </div>\\n</div>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n</mat-dialog-actions>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlYXZlL3JlbWFpbmluZy1sZWF2ZS9yZW1haW5pbmctbGVhdmUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { ConstantService } from 'src/app/constant.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-remaining-leave',\n  templateUrl: './remaining-leave.component.html',\n  styleUrls: ['./remaining-leave.component.scss']\n})\nexport class RemainingLeaveComponent implements OnInit {\n  \n  userId:any;\n  leaveList:any=[];\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public dialog:MatDialog,public service:ConstantService) {\n    \n    console.log(data);\n    this.userId=data['userId'];\n    if(this.userId)\n    {\n      this.getRemainingLeave();\n    }\n  }\n  \n  ngOnInit() {\n  }\n  currentyear:any;\n  getRemainingLeave()\n  {\n    this.service.fetchData({'userId':this.userId},'getUserRemainingLeaves').subscribe((result)=>{\n      console.log(result);\n      if(result['message']=='Success')\n      {\n        const leaveArray=result['data'];\n        this.currentyear = result['data'][0]['year'];\n        this.currentyear = moment().format('YYYY');\n        console.log(this.currentyear);\n        for (var i=0;i<leaveArray.length;i++)\n        {\n          if(leaveArray[i].year==this.currentyear)\n          {\n            this.leaveList.push(leaveArray[i]);\n          }\n        }\n      }\n    })\n  }\n  \n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class sessionStorage implements OnInit {\n    loading = false;   \n    alert:any;\n    user: any = {};\n    nexturl:any;\n    constructor(private route: ActivatedRoute, private router: Router,public service: ConstantService, public dialog:DialogComponent) {  \n            \n        }\n        \n     ngOnInit() {\n            this.user.st_log = false;\n            console.log(this.user);\n        }\n        \n        getSe():  Observable<any> {\n            \n            this.user = JSON.parse(localStorage.getItem('user')) || [];\n\n            const expirationTime = this.user.expirationTime;\n            const currentTime = new Date().getTime();\n\n            console.log(expirationTime, currentTime);\n\n            if(currentTime > expirationTime) {\n\n                this.user = {};\n                this.user.st_log = false;\n                this.service.can_active='';\n                this.service.datauser = {};\n                localStorage.removeItem('user');\n            }\n\n            return of(this.user);\n        }\n        \n        \n        logoutSession() {       \n            this.user = {};\n            this.user.st_log = false;\n            this.service.can_active='';\n            this.service.datauser = {};\n            localStorage.removeItem('user');\n        }\n\n    }\n    export class LocalStorageService { }\n    ","module.exports = \"<div class=\\\"login\\\">\\n  <div class=\\\"login-container \\\" [ngClass]=\\\"{'one':active==true}\\\" id=\\\"main-container\\\">\\n    <div class=\\\"cs-left animated slideInRight\\\">\\n        <div class=\\\"head\\\">\\n            <div class=\\\"circle animated zoomIn delay-1s\\\">\\n                <img src=\\\"assets/img/login-logo.png\\\">\\n            </div>\\n            <div class=\\\"heading animated slideInRight\\\">\\n                <img src=\\\"assets/img/kenshin-logo.png\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"paragraph animated zoomIn delay-2s\\\">\\n            An initiative of the Hi-Tech Group\\n        </div>\\n    </div>\\n    <div class=\\\"cs-right\\\">\\n        <form (ngSubmit)=\\\"f.valid && login()\\\" #f=\\\"ngForm\\\" >\\n\\n            <div class=\\\"login-right\\\">\\n             <div class=\\\"outer\\\">\\n               <div class=\\\"inner\\\">\\n                <div class=\\\"login-form\\\">\\n                  <div class=\\\"short-description\\\">\\n                    <h2>Konnect</h2>\\n                    <p>Stay Informed And Stay Ahead</p>\\n                  </div>\\n        \\n                  <div class=\\\"form\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput placeholder=\\\"Name\\\" name=\\\"username\\\" [(ngModel)]=\\\"data.username\\\" #username=\\\"ngModel\\\" required>\\n                        <i class=\\\"material-icons input-icon\\\">person</i>\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"data.password\\\" #password=\\\"ngModel\\\" matInput placeholder=\\\"Password\\\" required>\\n                        <i class=\\\"material-icons input-icon\\\">vpn_key</i>\\n                      </mat-form-field>\\n                    </div>\\n        \\n        \\n                    <div class=\\\"cs-btn text-left mt22 fixedd140\\\">\\n                      <div class=\\\"in-btn \\\">\\n                        <button mat-raised-button  matTooltipPosition=\\\"below\\\" matTooltip=\\\"Login\\\" class=\\\"login-btn\\\" style=\\\"background: #00A0C1;\\\">Login</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n               </div>\\n             </div>\\n            </div>\\n            </form>\\n        <div class=\\\"login\\\"></div>\\n    </div>\\n</div>\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { slideToRight } from '../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { sessionStorage }  from '../local-storage.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  animations: [slideToRight()]\n})\nexport class LoginComponent implements OnInit {\n\n  data:any = {};\n  loading = false;\n\n  alert:any;\n  user: any = {};\n  nexturl:any;\n\nconstructor(public service: ConstantService, public ses:sessionStorage, private router: Router,private route: ActivatedRoute, public dialog:DialogComponent) { }\n ngOnInit(){\n   this.setAnimation()\n\n\n }\n\n active:any;\n setAnimation()\n {\n  setTimeout(() => {\n    this.active=true;\n  }, 3500);\n }\n  login() {\n\n    this.loading = true;\n    console.log(this.data);\n\n    this.nexturl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\n\n    this.service.login( this.data ,'login')\n    .subscribe((data:any)=> {\n        console.log(data);\n\n        setTimeout(() => {\n          this.loading = false;\n        }, 1000);\n\n        if(data) {\n\n              this.user = data;\n              console.log(this.user);\n              this.user.st_log = true;\n\n              this.user.expirationTime = (new Date().getTime()) + 60000 * 360;\n              localStorage.setItem('user', JSON.stringify(this.user));\n\n              console.log(this.user);\n              console.log(this.user.token);\n\n              localStorage.removeItem('accessModuleData');\n\n              if(this.user.data && !this.user.data.superAdmin) {\n\n                      this.service.fileData('', 'admin/access/' + this.user['data']['userId']).subscribe( ( responseData ) => {\n\n                          console.log(responseData);\n                          \n                          localStorage.setItem('accessModuleData', JSON.stringify(responseData['data']));\n\n                          console.log(this.nexturl);\n                          if(this.user.data.userType==1) {\n      \n                              this.router.navigate(['/dashboard/']);\n                          }\n                          else if(this.user.data.role==12)\n                          {\n                              this.router.navigate(['/distribution-detail/'+ this.user.data.distributerNetwork['networkId']]);   \n                          }\n\n                          else if(this.user.data.userType == 2) {\n\n                            this.router.navigate(['/dashboard/']);  \n                              \n                          } else {\n                              \n                             this.router.navigate(['/lead-list']);\n                          }\n                          \n                      }, error => {\n                          console.log(error);\n                      });\n                    \n              } else {\n\n                      localStorage.setItem('accessModuleData', '');\n\n                      this.router.navigate(['/dashboard/']);\n              }\n\n        } else {\n\n            this.dialog.error('Please check your Username and Password')\n        }\n        \n    },error=>{\n\n          this.loading = false;\n          console.log(error);\n          this.dialog.error('Invalid login credentials')\n    });\n    \n  }\n\n}\n","module.exports = \"<div class=\\\"master-tab\\\" >\\n    <ul>\\n      <li routerLink=\\\"/product-list\\\" routerLinkActive=\\\"active\\\"><a>Products</a></li>\\n      <li *ngIf=\\\"userRole==1\\\" routerLink=\\\"/sale-user-list\\\" routerLinkActive=\\\"active\\\"><a>Users</a></li>\\n      <li *ngIf=\\\"userRole==1\\\" routerLink=\\\"/territory-list\\\" routerLinkActive=\\\"active\\\"><a>Postal / Territory Master</a></li>\\n      <li *ngIf=\\\"userRole!-3\\\" routerLink=\\\"/gift-list\\\" routerLinkActive=\\\"active\\\"><a>POP & Gift</a></li>\\n      <li *ngIf=\\\"userRole!=3\\\" routerLink=\\\"/leave-rule-list\\\" routerLinkActive=\\\"active\\\"><a>Leaves & Holidays</a></li>\\n      <li  *ngIf=\\\"userType!=3\\\" routerLink=\\\"/annoucement-list\\\" routerLinkActive=\\\"active\\\"><a>Announcement</a></li>\\n    </ul>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-master-tab-list',\n  templateUrl: './master-tab-list.component.html',\n})\nexport class MasterTabListComponent implements OnInit {\n\n  user:any={}\nuserType:any;\nuserId:any;\nuserRole:any;\n  constructor() { \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"master-tab\\\">\\n  <ul>\\n    <!-- <li routerLink=\\\"/add-product\\\" routerLinkActive=\\\"active\\\"><a>Products</a></li> -->\\n    <li routerLink=\\\"/user-add\\\" routerLinkActive=\\\"active\\\"><a>Users</a></li>\\n    <li routerLink=\\\"/territory-add\\\" routerLinkActive=\\\"active\\\"><a>Postal / Territory Master</a></li>\\n    <li routerLink=\\\"/pop_and_gift\\\" routerLinkActive=\\\"active\\\"><a>POP & Gift</a></li>\\n    <li routerLink=\\\"/add-leave-rules\\\" routerLinkActive=\\\"active\\\"><a>Leaves & Holidays</a></li>\\n    <li routerLink=\\\"/add-annoucement\\\" routerLinkActive=\\\"active\\\"><a>Announcement</a></li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-master-tab',\n  templateUrl: './master-tab.component.html'\n})\nexport class MasterTabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n \n}\n","import { NgModule } from '@angular/core';\r\n\r\nimport \r\n{ \r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatRippleModule,\r\n    MatAutocompleteModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatProgressSpinnerModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatExpansionModule,\r\n    MatChipsModule\r\n    \r\n } from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatGridListModule, \r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatAutocompleteModule,\r\n        MatSelectModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatRadioModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatProgressSpinnerModule,\r\n        MatTabsModule,\r\n        MatTooltipModule,\r\n        MatSlideToggleModule,\r\n        MatExpansionModule,\r\n        MatChipsModule\r\n    ],\r\n    \r\n    exports: [\r\n        MatButtonModule, \r\n        MatCheckboxModule,\r\n        MatGridListModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatAutocompleteModule,\r\n        MatSelectModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatRadioModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatProgressSpinnerModule,\r\n        MatTabsModule,\r\n        MatTooltipModule,\r\n        MatSlideToggleModule,\r\n        MatExpansionModule,\r\n        MatChipsModule\r\n    ],\r\n})\r\nexport class MaterialModule { }","module.exports = \"<div class=\\\"navigation\\\">\\n    <div class=\\\"menu\\\">\\n        <ul *ngIf=\\\"userType == 1\\\">\\n            <li (click)=\\\"navBarModuleHandler()\\\">\\n                <a routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\" >Dashboard <img src=\\\"assets/img/dashboard_icon.svg\\\" class=\\\"nav-icon h18\\\"></a>\\n            </li>\\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][0].show) || (user.data.userType == '2'))\\\">\\n                <a routerLink=\\\"/lead-list\\\" routerLinkActive=\\\"active\\\" >Leads<img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"nav-icon\\\"><span class=\\\"nav-counter orange-count\\\">{{service.leadCount}}</span></a>\\n            </li>\\n            <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][1].show) || (userType==2))\\\">\\n                <a  routerLink=\\\"/distribution-list\\\" routerLinkActive=\\\"active\\\" (click)=\\\"toggleDropdown()\\\" id=\\\"distributionNetwork\\\">Distributor <img src=\\\"assets/img/distribution_icon.svg \\\" class=\\\"nav-icon h23\\\">\\n                    <span class=\\\"nav-counter sub-conter green-count\\\">{{service.distributorCount}}</span> \\n                </a>\\n                <!-- <ul>\\n                    <li>\\n                        <a routerLink=\\\"/distribution-list\\\" routerLinkActive=\\\"active\\\">\\n                            Distributors\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i>   \\n                            <span class=\\\"sub-conter green-count\\\">{{distributorCount}}</span> \\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/wholesaler-list\\\" routerLinkActive=\\\"active\\\">\\n                            Wholesellers\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                            <span class=\\\"sub-conter orange-count\\\">{{wholeSellerCount}}</span> \\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/retailer-list\\\" routerLinkActive=\\\"active\\\">\\n                            Retailers\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                            <span class=\\\"sub-conter blue-count\\\">{{retailerCount}}</span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/engine-list\\\" routerLinkActive=\\\"active\\\">\\n                            Reconditioners\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                            <span class=\\\"sub-conter purple-count\\\">{{reconditionerCount}}</span>\\n                        </a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"/mechanic-list\\\" routerLinkActive=\\\"active\\\">\\n                            Mechanics\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\n                            <span class=\\\"sub-conter red-count\\\">{{mechanicCount}}</span> \\n                        </a>\\n                    </li>\\n                </ul> -->\\n            </li>\\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][3].show) || (userType==2) || (userType==3))\\\">\\n                <a routerLink=\\\"/order-list\\\" routerLinkActive=\\\"active\\\" >Orders <img src=\\\"assets/img/order_icon.svg\\\" class=\\\"nav-icon h24\\\">\\n                    <span class=\\\"nav-counter green-count\\\">{{ service.counterArray.orderCount}}</span>\\n                </a>\\n            </li>\\n            <!-- <li *ngIf=\\\"userRole==1\\\">\\n                <a >Invoice <img src=\\\"assets/img/invoice_icon.svg\\\" class=\\\"nav-icon h22\\\"></a>\\n            </li> -->\\n            <!-- <li *ngIf=\\\"userRole==1\\\">\\n                <a >Payments <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"nav-icon h22\\\"></a>\\n            </li> -->\\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (userType == 1 && user.data?.role != 1) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][2].show) || (userType==2))\\\">\\n                <a routerLink=\\\"/task-list\\\" routerLinkActive=\\\"active\\\" >Tasks<img src=\\\"assets/img/task.svg\\\" class=\\\"nav-icon h22\\\">\\n                    <span class=\\\"nav-counter blue-count\\\">{{service.counterArray.taskCount}}</span> \\n                </a>\\n            </li>\\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][7].show))\\\" >\\n                <a routerLink=\\\"/checkin-list\\\" routerLinkActive=\\\"active\\\">DVR<img src=\\\"assets/img/activity.svg\\\" class=\\\"nav-icon h19\\\"></a>\\n            </li>\\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][8].show))\\\">\\n                <a routerLink=\\\"/followup-list\\\" routerLinkActive=\\\"active\\\" >Follow Ups<img src=\\\"assets/img/folowup.svg\\\" class=\\\"nav-icon h23\\\">\\n                    <span class=\\\"nav-counter green-count\\\">{{service.counterArray.followUpCount}}</span> \\n                </a>\\n            </li>\\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][4].show) )\\\">\\n                <a routerLink=\\\"/list-travel\\\" routerLinkActive=\\\"active\\\" >Travel Plans <img src=\\\"assets/img/travel.svg\\\" class=\\\"nav-icon h22\\\"><span class=\\\"nav-counter green-count\\\">{{service.counterArray.travelPlanCount}}</span></a>\\n            </li>\\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][6].show))\\\" >\\n                <a  routerLink=\\\"/concern-list\\\" routerLinkActive=\\\"active\\\" >Customer Concerns <img src=\\\"assets/img/concern.svg\\\" class=\\\"nav-icon h23\\\"> <span class=\\\"nav-counter orange-count\\\">{{service.counterArray.concernCount}}</span></a>\\n            </li>\\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][5].show))\\\">\\n                <a routerLink=\\\"/expense-list\\\" routerLinkActive=\\\"active\\\" >Expenses <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"nav-icon h23\\\"><span class=\\\"nav-counter blue-count\\\">{{service.counterArray.expenseCount}}</span></a>\\n            </li>\\n            <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][12].show))\\\">\\n                <a routerLink=\\\"/pop-and-gift-distributor-list\\\" routerLinkActive=\\\"active\\\">\\n                    Pop & Gift Orders\\n                    <img src=\\\"assets/img/gift.svg\\\" class=\\\"nav-icon h20\\\">\\n                    <span class=\\\"nav-counter orange-count\\\">{{service.counterArray.popOrderCount}}</span>\\n                </a>\\n            </li>\\n            <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][11].show))\\\">\\n                <a routerLink=\\\"/leave-list\\\" routerLinkActive=\\\"active\\\" >Leave Application<img src=\\\"assets/img/leave.svg\\\" class=\\\"nav-icon  h20\\\"></a>\\n            </li>\\n            \\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][22].show))\\\">\\n                <a routerLink=\\\"/vendor-list\\\" routerLinkActive=\\\"active\\\" >Vendor<img src=\\\"assets/img/vendor.svg\\\" class=\\\"nav-icon  h20\\\"></a>\\n            </li>\\n            \\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][14].show))\\\" >\\n                <a routerLink=\\\"/purchase-order-list\\\" routerLinkActive=\\\"active\\\" >Purchase Order<img src=\\\"assets/img/order_icon.svg\\\" class=\\\"nav-icon  h24\\\"></a>\\n            </li>\\n            \\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][12].show))\\\">\\n                <a routerLink=\\\"/scheme-list\\\" routerLinkActive=\\\"active\\\" >Schemes<img src=\\\"assets/img/scheme.svg\\\" class=\\\"nav-icon  h23\\\"></a>\\n            </li>\\n\\n            <li  class=\\\"dropdown\\\">\\n                <a (click)=\\\"toggleDropdown()\\\" id=\\\"masters\\\">Masters <img src=\\\"assets/img/master_icon.svg\\\" class=\\\"nav-icon h23\\\">\\n                </a>\\n                <ul>\\n                    <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][15].show) || (userType==2))\\\">\\n                        <a routerLink=\\\"/product-list\\\" routerLinkActive=\\\"active\\\">\\n                            Products\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i>   \\n                        </a>\\n                    </li >\\n                    <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][16].show) || (userType==2))\\\">\\n                        <a routerLink=\\\"/sale-user-list\\\" routerLinkActive=\\\"active\\\">\\n                            Users\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                        </a>\\n                    </li>\\n                    <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][17].show) || (userType==2))\\\">\\n                        <a routerLink=\\\"/territory-list\\\" routerLinkActive=\\\"active\\\">\\n                            Territories\\n                            <i class=\\\"material-icons\\\"> keyboard_arrow_right  </i> \\n                        </a>\\n                    </li>\\n                    <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][18].show) || (userType==2))\\\">\\n                        <a routerLink=\\\"/gift-list\\\" routerLinkActive=\\\"active\\\">\\n                            Marketing\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                        </a>\\n                    </li>\\n                    <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][19].show) || (userType==2))\\\">\\n                        <a routerLink=\\\"/leave-rule-list\\\" routerLinkActive=\\\"active\\\">\\n                            Leaves & Holidays\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                        </a>\\n                    </li>\\n                    <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][20].show) || (userType==2))\\\">\\n                        <a routerLink=\\\"/annoucement-list\\\" routerLinkActive=\\\"active\\\">\\n                            Announcements\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                        </a>\\n                    </li>\\n                    <li *ngIf=\\\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][21].show) || (userType==2))\\\">\\n                        <a routerLink=\\\"/allowance\\\" routerLinkActive=\\\"active\\\">\\n                            Allowances\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                        </a>\\n                    </li>\\n                </ul>\\n            </li>\\n        </ul>\\n        \\n        <ul *ngIf=\\\"userType == 2\\\">\\n            <!-- <li (click)=\\\"navBarModuleHandler()\\\">\\n                <a routerLink=\\\"/sale-user-detail/{{userId}}\\\" routerLinkActive=\\\"active\\\" >Profile<img src=\\\"assets/img/user.svg\\\" class=\\\"nav-icon h18\\\"></a>\\n            </li> -->\\n            <li (click)=\\\"navBarModuleHandler()\\\" *ngIf=\\\"userType!=3\\\">\\n                    <a routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\" >Dashboard <img src=\\\"assets/img/dashboard_icon.svg\\\" class=\\\"nav-icon h18\\\"></a>\\n                </li>\\n            <li (click)=\\\"navBarModuleHandler()\\\">\\n                <a routerLink=\\\"/lead-list\\\" routerLinkActive=\\\"active\\\" >Leads<img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"nav-icon h14\\\">\\n                    <span class=\\\"nav-counter orange-count\\\">{{service.leadCount}}</span></a>\\n                </li>\\n                <li >\\n                    <a  routerLink=\\\"/distribution-list\\\" routerLinkActive=\\\"active\\\" (click)=\\\"toggleDropdown()\\\" id=\\\"distributionNetwork\\\">Distributor <img src=\\\"assets/img/distribution_icon.svg \\\" class=\\\"nav-icon h23\\\">\\n                        <span class=\\\"nav-counter sub-conter green-count\\\">{{service.distributorCount}}</span> \\n                    </a>\\n                    <!-- <ul>\\n                        <li>\\n                            <a routerLink=\\\"/distribution-list\\\" routerLinkActive=\\\"active\\\">\\n                                Distributors\\n                                <i class=\\\"material-icons\\\">keyboard_arrow_right</i>   \\n                                <span class=\\\"sub-conter green-count\\\">{{distributorCount}}</span> \\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a routerLink=\\\"/wholesaler-list\\\" routerLinkActive=\\\"active\\\">\\n                                Wholesellers\\n                                <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                                <span class=\\\"sub-conter orange-count\\\">{{wholeSellerCount}}</span> \\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a routerLink=\\\"/retailer-list\\\" routerLinkActive=\\\"active\\\">\\n                                Retailers\\n                                <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                                <span class=\\\"sub-conter blue-count\\\">{{retailerCount}}</span>\\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a routerLink=\\\"/engine-list\\\" routerLinkActive=\\\"active\\\">\\n                                Reconditioners\\n                                <i class=\\\"material-icons\\\">keyboard_arrow_right</i> \\n                                <span class=\\\"sub-conter purple-count\\\">{{reconditionerCount}}</span>\\n                            </a>\\n                        </li>\\n                        <li>\\n                            <a routerLink=\\\"/mechanic-list\\\" routerLinkActive=\\\"active\\\">\\n                                Mechanics\\n                                <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\n                                <span class=\\\"sub-conter red-count\\\">{{mechanicCount}}</span> \\n                            </a>\\n                        </li>\\n                    </ul> -->\\n                </li>\\n                <li (click)=\\\"navBarModuleHandler()\\\">\\n                    <a routerLink=\\\"/order-list\\\" routerLinkActive=\\\"active\\\" >Orders <img src=\\\"assets/img/order_icon.svg\\\" class=\\\"nav-icon h24\\\">\\n                        <span class=\\\"nav-counter orange-count\\\">{{service.counterArray.orderCount}}</span>\\n                    </a>\\n                </li>\\n                <li (click)=\\\"navBarModuleHandler()\\\">\\n                    <a routerLink=\\\"/task-list\\\" routerLinkActive=\\\"active\\\" >Tasks<img src=\\\"assets/img/task.svg\\\" class=\\\"nav-icon h22\\\">\\n                        <span class=\\\"nav-counter blue-count\\\">{{service.counterArray.taskCount}}</span> \\n                    </a>\\n                </li>\\n                <li (click)=\\\"navBarModuleHandler()\\\" >\\n                    <a routerLink=\\\"/checkin-list\\\" routerLinkActive=\\\"active\\\">DVR<img src=\\\"assets/img/activity.svg\\\" class=\\\"nav-icon h19\\\"></a>\\n                </li>\\n                \\n                <li (click)=\\\"navBarModuleHandler()\\\">\\n                    <a routerLink=\\\"/followup-list\\\" routerLinkActive=\\\"active\\\" >Follow Ups<img src=\\\"assets/img/folowup.svg\\\" class=\\\"nav-icon h23\\\">\\n                        <span class=\\\"nav-counter green-count\\\">{{service.counterArray.followUpCount}}</span> \\n                    </a>\\n                </li>\\n                <li (click)=\\\"navBarModuleHandler()\\\">\\n                    <a routerLink=\\\"/list-travel\\\" routerLinkActive=\\\"active\\\" >Travel Plans <img src=\\\"assets/img/travel.svg\\\" class=\\\"nav-icon h22\\\">\\n                        <span class=\\\"nav-counter blue-count\\\">{{service.counterArray.travelPlanCount}}</span> </a>\\n                    </li>\\n                    <li (click)=\\\"navBarModuleHandler()\\\">\\n                        <a  routerLink=\\\"/concern-list\\\" routerLinkActive=\\\"active\\\" >Customer Concerns <img src=\\\"assets/img/concern.svg\\\" class=\\\"nav-icon h23\\\">\\n                            <span class=\\\"nav-counter blue-count\\\">{{service.counterArray.concernCount}}</span> </a>\\n                        </li>\\n                        <li (click)=\\\"navBarModuleHandler()\\\">\\n                            <a routerLink=\\\"/expense-list\\\" routerLinkActive=\\\"active\\\" >Expenses <img src=\\\"assets/img/payment_icon.svg\\\" class=\\\"nav-icon h23\\\">\\n                                <span class=\\\"nav-counter blue-count\\\">{{service.counterArray.expenseCount}}</span> </a>\\n                            </li>\\n                            <li>\\n                                <a routerLink=\\\"/leave-list\\\" routerLinkActive=\\\"active\\\" >Leave Application<img src=\\\"assets/img/leave.svg\\\" class=\\\"nav-icon  h20\\\"></a>\\n                            </li>\\n\\n\\n                            <li (click)=\\\"navBarModuleHandler()\\\">\\n                                <a routerLink=\\\"/scheme-list\\\" routerLinkActive=\\\"active\\\" >Schemes<img src=\\\"assets/img/scheme.svg\\\" class=\\\"nav-icon  h23\\\"></a>\\n                            </li>\\n                            \\n                            <li>\\n                                <a routerLink=\\\"/product-list\\\" routerLinkActive=\\\"active\\\" >Products<img src=\\\"assets/img/product.svg\\\" class=\\\"nav-icon  h15\\\"></a>\\n                            </li>\\n                            <li>\\n                                <a routerLink=\\\"/gift-list\\\" routerLinkActive=\\\"active\\\" >Marketing<img src=\\\"assets/img/market.svg\\\" class=\\\"nav-icon h21\\\">\\n                                    <span class=\\\"nav-counter orange-count\\\">{{service.counterArray.popCount}}</span>\\n                                    \\n                                </a>\\n                            </li>\\n                            <li>\\n                                <a routerLink=\\\"/annoucement-list\\\" routerLinkActive=\\\"active\\\" >Announcements<img src=\\\"assets/img/announcement.svg\\\" class=\\\"nav-icon  h22\\\">\\n                                    <span class=\\\"nav-counter orange-count\\\">{{service.counterArray.announcementCount}}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                        \\n                        <ul *ngIf=\\\"userType == 3\\\">\\n                            <li (click)=\\\"navBarModuleHandler()\\\">\\n                                <a routerLink=\\\"/distribution-detail/{{userNetworkId}}\\\" routerLinkActive=\\\"active\\\" >Profile<img src=\\\"assets/img/profile.svg\\\" class=\\\"nav-icon h20\\\"></a>\\n                            </li>\\n                            <li (click)=\\\"navBarModuleHandler()\\\">\\n                                <a routerLink=\\\"/order-list\\\" routerLinkActive=\\\"active\\\" >Image & Document <img src=\\\"assets/img/document.svg\\\" class=\\\"nav-icon h19\\\">\\n                                    <!-- <span class=\\\"nav-counter orange-count\\\"></span> -->\\n                                </a>\\n                            </li>\\n                            <li (click)=\\\"navBarModuleHandler()\\\">\\n                                <a routerLink=\\\"/order-list\\\" routerLinkActive=\\\"active\\\" >Orders <img src=\\\"assets/img/order_icon.svg\\\" class=\\\"nav-icon h24\\\">\\n                                    <span class=\\\"nav-counter orange-count\\\">{{service.counterArray.orderCount}}</span>\\n                                </a>\\n                            </li>\\n                            <li (click)=\\\"navBarModuleHandler()\\\">\\n                                <a  routerLink=\\\"/concern-list\\\" routerLinkActive=\\\"active\\\" >Customer Concerns <img src=\\\"assets/img/concern.svg\\\" class=\\\"nav-icon h24\\\">\\n                                    <span class=\\\"nav-counter orange-count\\\">{{service.counterArray.concernCount}}</span></a>\\n                                </li>\\n                                <li>\\n                                    <a routerLink=\\\"/product-list\\\" routerLinkActive=\\\"active\\\" >Products<img src=\\\"assets/img/product.svg\\\" class=\\\"nav-icon  h16\\\"></a>\\n                                </li>\\n                                <li>\\n                                    <a routerLink=\\\"/pop-and-gift-distributor-list\\\" routerLinkActive=\\\"active\\\">\\n                                        Pop & Gift Orders\\n                                        <img src=\\\"assets/img/gift.svg\\\" class=\\\"nav-icon h20\\\">\\n                                    </a>\\n                                </li>\\n                                <li>\\n                                    <a routerLink=\\\"/gift-list\\\" routerLinkActive=\\\"active\\\">\\n                                        Marketing\\n                                        <img src=\\\"assets/img/market.svg\\\" class=\\\"nav-icon h21\\\">\\n                                        <!-- <i class=\\\"material-icons\\\">keyboard_arrow_right</i>  -->\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                            \\n                            \\n                            <div class=\\\"h30\\\"></div>\\n                        </div>\\n                    </div>\\n                    \\n                    \"","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { ConstantService } from '../constant.service';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n})\nexport class NavigationComponent implements OnInit {\n  \n  user:any={}\n  userType:any;\n  userId:any;\n  userRole:any;\n  userName:any;\n  networkId:any;\n  data:any={};\n  userNetworkId:any;\n  counterArray:any={}\n  \n  accessModuleData:any = [];\n  moduleActiveData:any = '';\n  \n  constructor(private renderer: Renderer2,public service:ConstantService) {\n    \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    \n    if(this.user.data.distributerNetwork && this.user.data.distributerNetwork['networkId']) {\n      \n      this.userNetworkId = this.user.data.distributerNetwork['networkId'];\n      \n    }\n    \n    this.userRole = this.user.data.role;\n    this.userName = this.user.data.userName;\n    \n    if(this.userType == 3)\n    {\n      this.networkId=this.user.data.distributerNetwork.networkId;\n    }\n    \n    if(localStorage.getItem('accessModuleData')) {\n      this.accessModuleData = JSON.parse(localStorage.getItem('accessModuleData')) || [];    \n    } else {\n      this.accessModuleData = [];\n    }\n    \n    console.log(this.accessModuleData);\n  }\n  \n  \n  ngOnInit() {\n    this.counterArray=this.service.counterArray;\n    console.log(this.counterArray);\n  }\n  \n  \n  toggleHeader() {\n    this.renderer.removeClass(document.body, 'nav-active');\n  }\n  \n  status:boolean = false;\n  toggleDropdown() {\n    \n    const activeClass = $(event.target).hasClass('active');\n    const activeId = $(event.target).attr('id');\n    \n    console.log(activeClass);\n    console.log(activeId);\n    \n    $('a.active').removeClass('active');\n    \n    if(!activeClass) {\n      \n      console.log(event.target);\n      \n      this.renderer.addClass(event.target, 'active');\n      this.renderer.removeClass(document.body, 'active');\n      \n      if(activeId == 'distributionNetwork') {\n        $('.menu').scrollTop(0);\n      }\n      \n      if(activeId == 'masters') {\n        $('.menu').scrollTop(9999);\n      }\n      \n      \n    } else {\n      console.log(event.target);\n      this.renderer.removeClass(event.target, 'active');\n    }\n    \n  }\n  \n  \n  navBarModuleHandler() {\n    $('a.active').removeClass('active');\n    this.renderer.addClass(event.target, 'active');\n  }\n  \n  \n  status1:boolean = false;\n  toggleNav() {\n    \n    console.log('helloooo');\n    this.status1 = !this.status1;\n    if(this.status1) {\n      this.renderer.addClass(document.body, 'active');\n    }\n    else {\n      this.renderer.removeClass(document.body, 'active');\n    }\n  }\n\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n    </div>\\n    \\n    <div class=\\\"middle-container\\\">\\n        <div class=\\\"page-heading\\\">\\n            <img src=\\\"assets/img/order_icon.svg\\\" class=\\\"h-icon\\\">\\n            <div class=\\\"heading-text\\\">\\n                <h2>Order</h2>\\n                <p>Add New Order</p>\\n            </div>\\n            <div>\\n                \\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"container-outer\\\">\\n        <div class=\\\"container\\\" >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col s12\\\">\\n                    <div class=\\\"sprate-box padding0\\\"  style=\\\"overflow: inherit;\\\">\\n                        <div class=\\\"top-heading\\\">\\n                            <h2 class=\\\"ng-tns-c10-6\\\">Customer Information</h2>\\n                        </div>\\n                        <div class=\\\"from-fields padding15\\\">\\n                            <div class=\\\"row\\\">\\n                                <div  *ngIf=\\\"userRole !=12\\\" class=\\\"col s4 pl0\\\">\\n                                    <div class=\\\"multi-all-select\\\">\\n                                        <label>Distributor</label>\\n                                        <ng-multiselect-dropdown\\n                                        [placeholder]=\\\"'Select Distributor'\\\"\\n                                        [data]=\\\"distributor_list\\\"\\n                                        [(ngModel)]=\\\"data.networkId\\\"\\n                                        name=\\\"networkId\\\"\\n                                        #networkId=\\\"ngModel\\\"\\n                                        [settings]=\\\"dropdownSettings\\\"\\n                                        (onSelect)=\\\"openOrderDiv(data.networkId,0)\\\"\\n                                        (onDeSelect)=\\\"openOrderDiv(data.networkId,0)\\\"\\n                                        >\\n                                    </ng-multiselect-dropdown>\\n                                </div>\\n                            </div>\\n                            \\n                            <div *ngIf=\\\"orderDiv==true\\\" class=\\\"col s8 pr0\\\">\\n                                <div class=\\\"multi-all-select\\\">\\n                                    <label>Shipping Address</label>\\n                                    <ng-multiselect-dropdown\\n                                    [placeholder]=\\\"'Shipping Address'\\\"\\n                                    [data]=\\\"tmpShippingAddress\\\"\\n                                    [(ngModel)]=\\\"adrs.shipping\\\"\\n                                    name=\\\"shipping\\\"\\n                                    #shipping=\\\"ngModel\\\"\\n                                    [settings]=\\\"dropdownSettings4\\\"\\n                                    (onSelect)=\\\"selectAddress($event)\\\"\\n                                    (onDeSelect)=\\\"selectAddress(adrs.shipping)\\\"\\n                                    >\\n                                </ng-multiselect-dropdown>\\n                            </div>\\n                        </div>\\n                        \\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"orderDiv==true\\\"  class=\\\"sprate-box mt15 mb25 padding0\\\"  style=\\\"overflow: inherit;\\\">\\n                <div class=\\\"top-heading\\\">\\n                    <h2 class=\\\"ng-tns-c10-6\\\">Product Information</h2>\\n                </div>\\n                <div  class=\\\"row padding15\\\" >\\n                    <div  class=\\\"col s4 pl0\\\">\\n                        <div class=\\\"multi-all-select\\\">\\n                            <label>Segment</label>\\n                            <ng-multiselect-dropdown\\n                            [placeholder]=\\\"'Select Segment'\\\"\\n                            [data]=\\\"segmentList\\\"\\n                            [(ngModel)]=\\\"data.segment\\\"\\n                            name=\\\"segment\\\"\\n                            #segment=\\\"ngModel\\\"\\n                            [settings]=\\\"dropdownSettings1\\\"\\n                            (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                            (onDeSelect)=\\\"productList(data.segment,data.category)\\\"\\n                            >\\n                        </ng-multiselect-dropdown>\\n                    </div>\\n                </div>                           \\n                <div class=\\\"col s4\\\">\\n                    <div class=\\\"multi-all-select\\\">\\n                        <label>Category</label>\\n                        <ng-multiselect-dropdown\\n                        [placeholder]=\\\"'Select Category'\\\"\\n                        [data]=\\\"category_list\\\"\\n                        [(ngModel)]=\\\"data.category\\\"\\n                        name=\\\"category\\\"\\n                        #category=\\\"ngModel\\\"\\n                        [settings]=\\\"dropdownSettings2\\\"\\n                        (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                        (onDeSelect)=\\\"productList(data.segment,data.category)\\\"\\n                        \\n                        >\\n                    </ng-multiselect-dropdown>\\n                </div>\\n            </div>                                \\n            <div class=\\\"col s4 pr0\\\">\\n                <div class=\\\"multi-all-select\\\">\\n                    <label>Product Name</label>\\n                    <ng-multiselect-dropdown\\n                    [placeholder]=\\\"'Select Product'\\\"\\n                    [data]=\\\"ProductName_list\\\"\\n                    [(ngModel)]=\\\"data.product\\\"\\n                    name=\\\"product\\\"\\n                    #product=\\\"ngModel\\\"\\n                    [settings]=\\\"dropdownSettings3\\\"\\n                    (onSelect)=\\\"getCartProductList(data.segment,data.category,data.product)\\\"\\n                    (onDeSelect)=\\\"getCartProductList(data.segment,data.category,data.product)\\\"\\n                    >\\n                </ng-multiselect-dropdown>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n\\n<div *ngIf=\\\"orderDiv\\\">   \\n    \\n    <!-- <div class=\\\"sprate-box mb20 mt20\\\">\\n        <div class=\\\"col s4 ml0\\\">\\n            <div class=\\\"upload-excel\\\">\\n                <label>\\n                    <input multiple=\\\"\\\" style=\\\"display: none;\\\" name=\\\"attachment\\\" type=\\\"file\\\" id=\\\"selectfile\\\"  (change)=\\\"incomingfile('selectfile',$event)\\\" required >\\n                    <div class=\\\"outer\\\">\\n                        <div class=\\\"innear\\\">\\n                            <i class=\\\"material-icons upload-ic\\\" >cloud_upload</i>\\n                            <p>Import Attachment</p>\\n                        </div>\\n                    </div>\\n                </label>\\n                <p></p>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"col s8 text-right\\\">\\n            <div class=\\\"cs-btn\\\">\\n                <div *ngIf=\\\"productNameList.length!=0\\\" class=\\\"in-btn\\\">\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"downloadFile()\\\" >\\n                        <i class=\\\"material-icons\\\">cloud_download</i> Download\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        \\n    </div> -->\\n    \\n    <div *ngIf=\\\"productlist.length!=0 || productdiv==true\\\" class=\\\"col s12 pl0\\\">\\n        <div class=\\\"dflex mb15\\\">\\n            <div class=\\\"heading-bg left-right-15 mb0\\\">\\n                <h2>PRODUCT ITEM DETAIL</h2>\\n            </div>\\n            \\n            <div class=\\\"sprate-box wp50 flat-sprate left-auto\\\">\\n                <div class=\\\"col s9 ml0\\\">\\n                    <div class=\\\"upload-excel attach\\\">\\n                        <label>\\n                            <input multiple=\\\"\\\" style=\\\"display: none;\\\" name=\\\"attachment\\\" type=\\\"file\\\" id=\\\"selectfile\\\"  (change)=\\\"incomingfile('selectfile',$event)\\\" required >\\n                            <div class=\\\"outer\\\">\\n                                <div class=\\\"innear\\\">\\n                                    <i class=\\\"material-icons upload-ic\\\" >cloud_upload</i>\\n                                    <p>Import Attachment</p>\\n                                </div>\\n                            </div>\\n                        </label>\\n                        <p></p>\\n                    </div>\\n                </div>\\n                <div class=\\\"col s3 text-right\\\">\\n                    <div class=\\\"cs-btn\\\">\\n                        <div class=\\\"in-btn\\\">\\n                            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"downloadFile()\\\" >\\n                                <i class=\\\"material-icons\\\">cloud_download</i> Download\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"cs-table left-right-15\\\">\\n            <div class=\\\"\\\">\\n                <div class=\\\"table-head pr28\\\">\\n                    <table>\\n                        <tr>\\n                            <th class=\\\"w40\\\"></th>\\n                            <th class=\\\"w120\\\">Part Number</th>\\n                            <th > Model</th>\\n                            <th class=\\\"w80\\\">STD Qty</th>\\n                            <th class=\\\"w60\\\">Qty</th>\\n                            <th class=\\\"w80\\\">Pending Order</th>\\n                            <th class=\\\"w80 \\\">Price</th>\\n                            <th class=\\\"w80\\\">Price Support</th>\\n                            <th class=\\\"w80 \\\">Item Value</th>\\n                            <th class=\\\"w110\\\">Order Value</th>\\n                            <th class=\\\"w60\\\">GST %</th>\\n                            <th class=\\\"w80\\\">Scheme</th>\\n                        </tr>\\n                    </table>\\n                </div>\\n                <div class=\\\"table-head bdrt pr28\\\" >\\n                    <table>\\n                        <tr>\\n                            <th class=\\\"w40\\\"></th>\\n                            <th  class=\\\"w120\\\">\\n                                <div class=\\\"th-search-acmt\\\">\\n                                    <mat-form-field>\\n                                        <input type=\\\"text\\\"  name=\\\"search\\\" [(ngModel)]=\\\"productName.search\\\" (input)=\\\"productSearchByNumber(productName.search,modelName.search)\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\n                                        <mat-autocomplete #auto1=\\\"matAutocomplete\\\" >\\n                                        </mat-autocomplete>\\n                                    </mat-form-field> \\n                                </div>\\n                            </th>\\n                            <th>\\n                                <div class=\\\"th-search-acmt\\\">\\n                                    <mat-form-field>\\n                                        <input type=\\\"text\\\"  name=\\\"search\\\" [(ngModel)]=\\\"modelName.search\\\" (input)=\\\"productSearchByNumber(productName.search,modelName.search)\\\"  matInput [matAutocomplete]=\\\"auto4\\\">\\n                                        <mat-autocomplete #auto4=\\\"matAutocomplete\\\" >\\n                                        </mat-autocomplete>\\n                                    </mat-form-field>\\n                                </div>\\n                            </th>\\n                            <th class=\\\"w80\\\">&nbsp;</th>\\n                            <th class=\\\"w60\\\">&nbsp;</th>\\n                            <th class=\\\"w80\\\">&nbsp;</th>\\n                            <th class=\\\"w80\\\">&nbsp;</th>\\n                            <th class=\\\"w80\\\">&nbsp;</th>\\n                            <th class=\\\"w80\\\">&nbsp;</th>\\n                            <th class=\\\"w110\\\">&nbsp;</th>\\n                            <th class=\\\"w60\\\">&nbsp;</th>\\n                            <th class=\\\"w80\\\">&nbsp;</th>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n            \\n            <div *ngIf=\\\"productdiv==true\\\" class=\\\"table-container \\\">\\n                <div class=\\\"table-content height-scroll\\\">\\n                    <table>\\n                        <tr *ngFor=\\\"let product of productlist;let index=index\\\" [ngClass]=\\\"{'download':product.add==true}\\\">\\n                            <td class=\\\"w40\\\"><span *ngIf=\\\"product.ifcheck\\\"><mat-checkbox  name=\\\"datacheck\\\" [checked]=\\\"product.datacheck\\\"  (change)=\\\"addCart(product,index,$event)\\\" >&nbsp; </mat-checkbox></span></td>\\n                            <td class=\\\"w120\\\">{{product.partNumber}}</td>\\n                            <td  >{{product.model}}</td>\\n                            <td class=\\\"w80\\\">{{product.moq}}</td>\\n                            <td class=\\\"w60\\\">\\n                                <div class=\\\"td-input\\\">\\n                                    <input type=\\\"number\\\" (keyup.enter)=\\\"addToMyCart(index)\\\" (change)=\\\"checkValidate(index)\\\" (input)=\\\"selectProduct(index)\\\" (input)=\\\"calculateAmount(product.moq,product.quantity,index)\\\" name=\\\"qty\\\" #quantity=\\\"ngModel\\\" [(ngModel)]=\\\"product.quantity\\\" required class=\\\"text-center\\\">\\n                                </div>\\n                            </td>\\n                            <td class=\\\"w80\\\">\\n                                <a class=\\\"link-btn\\\" (click)=\\\"pendingOrder(product.productId)\\\">{{product.pendingQty}}</a>\\n                            </td>\\n                            <td class=\\\"w80\\\" >&#8377; {{product.discountedListPrice}}</td>\\n                            <td class=\\\"w80\\\" >&#8377; {{product.priceSupport}}</td>\\n                            <td class=\\\"w80 \\\" >&#8377; {{product.itemValue}}</td>\\n                            <td class=\\\"w110\\\">&#8377; {{product.amount}}</td>\\n                            <td class=\\\"w60\\\">{{product.gstPercentage}} %</td>\\n                            <td class=\\\"w80 \\\" (click)=\\\"SchemeDetail(product.partNumber,index)\\\">\\n                                <div *ngIf=\\\"product.schemeCount!=0\\\" class=\\\"icons-list\\\">\\n                                    <i class=\\\"material-icons check\\\">check_circle </i>\\n                                    <i class=\\\"material-icons forword\\\">keyboard_arrow_right </i>\\n                                    <!-- <i *ngIf=\\\"product.schemeCount==0\\\" class=\\\"material-icons close\\\">clear </i> -->\\n                                </div>\\n                            </td>                                 \\n                        </tr>\\n                    </table>\\n                </div>\\n                <div class=\\\"data-not-available\\\" *ngIf=\\\"productlist.length==0\\\">\\n                    <div class=\\\"outer\\\">\\n                        <div class=\\\"iinear\\\">\\n                            <div class=\\\"figure\\\" matRipple>\\n                                <div class=\\\"header\\\">\\n                                    <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                </div>\\n                                \\n                                <div class=\\\"description\\\">\\n                                    <div class=\\\"cs-heading\\\">\\n                                        <h2>No Product</h2>\\n                                    </div>\\n                                    <div class=\\\"img\\\">\\n                                        <i class=\\\"material-icons\\\">error_outline</i>\\n                                    </div>\\n                                    <div class=\\\"psc\\\">\\n                                        <p>data not available</p>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"cs-btn mt20 text-right\\\">\\n            <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"tmp_orderDetail.length==0\\\" (click)=\\\"addToCart()\\\" >Add to Cart</button>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    \\n    <div *ngIf=\\\"tmp_array && tmp_array.length > 0\\\" class=\\\"col s12 padding0\\\">\\n        \\n        <div class=\\\"heading-bg left-right-15\\\">\\n            <h2>Product In Cart</h2>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n                <div class=\\\"cs-table left-right-15\\\">\\n                    <div class=\\\"table-head\\\">\\n                        <table>\\n                            <tr>\\n                                <th class=\\\"w110\\\">Category</th>\\n                                <th class=\\\"w110\\\">Items</th>\\n                                <th class=\\\"w110\\\">Net Order Value</th>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"table-container\\\">\\n                        <div class=\\\"table-content\\\">\\n                            <table>\\n                                <tr *ngFor=\\\"let order of tmp_array;let i=index\\\">\\n                                    <td class=\\\"w110\\\"><a mat-button class=\\\"link-btn\\\" (click)=\\\"productDetail(order.category)\\\" >{{order.category}}</a></td>\\n                                    <td class=\\\"w110\\\">{{order.quantity}}</td>\\n                                    <td class=\\\"w110\\\">{{order.amount}}</td>\\n                                </tr>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    \\n                </div>\\n            </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"from-fields\\\">\\n            <div class=\\\"row\\\">\\n                <!-- <div class=\\\"col s8\\\">\\n                    <div class=\\\"col s6\\\">\\n                        <div class=\\\"table-info\\\">\\n                            <h2>Credit Info</h2>\\n                            <ul>\\n                                <li>\\n                                    <label><strong>Limit</strong> </label>\\n                                    <p>{{distributorDetail.creditLimit | currency: 'INR':true}}</p>\\n                                </li>\\n                                <li>\\n                                    <label><strong>Used</strong> </label>\\n                                    <p>{{distributorDetail.creditUsed | currency: 'INR':true}}</p>\\n                                </li>\\n                                <li>\\n                                    <label><strong>Balanced</strong> </label>\\n                                    <p>{{distributorDetail.creditBalanced | currency: 'INR':true}}</p>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col s6\\\">\\n                        <div class=\\\"table-info\\\">\\n                            <h2>Target Info</h2>\\n                            <ul>\\n                                <li class=\\\"static-info\\\">\\n                                    <label><strong>{{current_month}} Target</strong></label>\\n                                    <p>{{monthleyTarget | currency: 'INR':true}}</p>\\n                                </li>\\n                                <li>\\n                                    <label><strong>Achived</strong></label>\\n                                    \\n                                </li>\\n                                <li>\\n                                    <label><strong>Balance</strong></label>\\n                                    <p>{{distributorDetail.targetBalanced | currency: 'INR':true}}</p>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div> -->\\n                \\n                <div class=\\\"col s6\\\">\\n                    <div class=\\\"details-info pt0\\\">\\n                        <div class=\\\"basic-details \\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col s12 pl0 cs-figure\\\">\\n                                    <h2>CREDIT LIMIT</h2>\\n                                    <ul>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Limit</span>\\n                                                    <p>{{distributorDetail.creditLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Used</span>\\n                                                    <p>{{distributorDetail.creditUsed | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{distributorDetail.creditBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row mt15\\\">\\n                                <div class=\\\"col s12 pl0 cs-figure\\\">\\n                                    <h2>Target Info</h2>\\n                                    <ul *ngIf=\\\"currentMonth==1\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.janTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.janTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.janTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul>\\n                                    <ul *ngIf=\\\"currentMonth==2\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.febTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.febTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.febTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul>\\n                                    <ul *ngIf=\\\"currentMonth==3\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.marTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.marTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.marTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul> \\n                                    <ul *ngIf=\\\"currentMonth==4\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.aprTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.aprTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.aprTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul>\\n                                    <ul *ngIf=\\\"currentMonth==5\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.mayTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.mayTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.mayTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul> \\n                                    <ul *ngIf=\\\"currentMonth==6\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.junTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.junTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.junTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul> \\n                                    <ul *ngIf=\\\"currentMonth==7\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.julTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.julTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.julTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul> \\n                                    <ul *ngIf=\\\"currentMonth==8\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.augTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.augTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.augTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul> \\n                                    <ul *ngIf=\\\"currentMonth==9\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.sepTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.sepTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.sepTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul>\\n                                    <ul *ngIf=\\\"currentMonth==10\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.octTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.octTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.octTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul>\\n                                    <ul *ngIf=\\\"currentMonth==11\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.novTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.novTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.novTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul>\\n                                    <ul *ngIf=\\\"currentMonth==12\\\">\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>{{current_month}} Target</span>\\n                                                    <p>{{monthleyTarget.decTargetLimit | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Achived</span>\\n                                                    <p>{{monthleyTarget.decTargetAchieved | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                        <li>\\n                                            <div class=\\\"outer\\\">\\n                                                <div class=\\\"inner\\\">\\n                                                    <span>Balance</span>\\n                                                    <p>{{monthleyTarget.decTargetBalanced | currency: 'INR':true}}</p>\\n                                                </div>\\n                                            </div>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                </div>\\n                \\n                <div class=\\\"col s6\\\">\\n                    <div class=\\\"invoice-details\\\">\\n                        <table class=\\\"invoice-table\\\">\\n                            <tr>\\n                                <td class=\\\"td\\\">Total Quantity</td>\\n                                <td class=\\\"w120 td\\\">{{itemTotel}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td class=\\\"td\\\">Basic Total</td>\\n                                <td class=\\\"td\\\"> {{subTotal | currency: 'INR':true}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td class=\\\"td\\\">GST</td>\\n                                <td class=\\\"td\\\"> {{gstTotal | currency: 'INR':true}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td class=\\\"td\\\">Grand Total</td>\\n                                <td class=\\\"td\\\"> {{grandTotal | currency: 'INR':true}}</td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"control-field wp70\\\" style=\\\"float: right;\\\">\\n                        <mat-form-field class=\\\"cs-input\\\">\\n                            <textarea matInput placeholder=\\\"Enter Remark\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"data.remarks\\\" class=\\\"h110\\\" style=\\\"background: #fff;\\\"></textarea>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-btn mt32 text-right\\\">\\n                \\n                <div *ngIf=\\\"tmp_array && tmp_array.length > 0\\\" class=\\\"in-btn mr15\\\">\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"SaveOrder()\\\" [disabled]=\\\"orderDetail.length==0 || !data.distributor\\\">Save As Draft</button>\\n                </div>\\n                \\n                <div *ngIf=\\\"tmp_array && tmp_array.length > 0\\\" class=\\\"in-btn\\\">\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"SubbmitOrder()\\\" [disabled]=\\\"orderDetail.length==0 || !data.distributor\\\" >Place Order</button>\\n                </div>\\n                \\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n\\n</div>\\n</div>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { ListOrderComponent } from '../list-order/list-order.component';\nimport { MatDialog } from '@angular/material';\nimport { DialogComponent } from 'src/app/dialog';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { OtherAddressComponent } from '../other-address/other-address.component';\nimport * as moment from 'moment';\nimport * as $ from 'jquery';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'ts-xlsx';\nimport { SchemepopupComponent } from '../schemepopup/schemepopup.component';\nimport { PendingOrderComponent } from '../pending-order/pending-order.component';\n// import {ExcelService} from './services/excel.service';\n// import * as FileSaver from 'file-saver';\n// import * as XLSX from 'xlsx';\n@Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  animations: [slideToTop()]\n  \n})\nexport class AddOrderComponent implements OnInit {\n  \n  user:any={}\n  userType:any;\n  userId:any;\n  userRole:any;\n  distributor_list:any=[];\n  category_list:any=[];\n  segmentList:any=[];\n  oemList:any=[];\n  data:any={};\n  subSegment_List:any=[];\n  ProductName_list:any=[];\n  loader=false;\n  itemTotel:any=0\n  subTotal:any=0\n  grandTotal:any=0;\n  gstTotal:any=0;\n  tmp_categoryList:any=[];\n  tmp_segmentList:any=[];\n  tmp_subsegmentList:any=[];\n  tmp_oemList:any=[];\n  cartProductList:any=[];\n  networkId:any;\n  orderDiv:any=false;\n  currentMonth:any= moment().format('M');\n  current_month:any=moment().format('MMMM');\n  dropdownSettings:any = {};\n  dropdownSettings1:any = {};\n  dropdownSettings2:any = {};\n  dropdownSettings3:any = {};\n  dropdownSettings4:any = {};\n  constructor( public alrt:DialogComponent,public service:ConstantService,public rout:Router,public toast:SnackBarOverview,public dialog: MatDialog) { \n    \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    if(this.userType==3)\n    {\n      this.networkId=this.user.data.distributerNetwork.networkId;\n      this.data.distributor=this.networkId;\n      console.log(this.networkId);\n      if(this.networkId)\n      {\n        this.openOrderDiv(this.networkId,0);\n      }\n      this.orderDiv=true;\n    }\n    console.log(this.currentMonth);\n    \n    \n    \n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    // if(this.user)\n    // {\n    //   if(this.userType==2)\n    //   {\n    //     this.loader=true;\n    //     this.categoryList()\n    //     this.userTypeList();\n    //     this.getSegmentList();\n    //     this.getOemList();\n    //     //  this.distributorList()\n    //   }\n    \n    // }\n    this.loader=true;\n    this.userTypeList();\n    \n  }\n  \n  ngOnInit() {\n    this.dropdownSettings = {\n      singleSelection: true,\n      closeDropDownOnSelection:true,\n      idField: 'networkId',\n      textField: 'establishment',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings1 = {\n      singleSelection: true,\n      closeDropDownOnSelection:true,\n      idField: 'value',\n      textField: 'text',\n      \n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings2 = {\n      singleSelection: true,\n      closeDropDownOnSelection:true,\n      idField: 'value',\n      textField: 'text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings3 = {\n      singleSelection: true,\n      closeDropDownOnSelection:true,\n      idField: 'productName',\n      textField: 'productName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };  \n    this.dropdownSettings4 = {\n      singleSelection: true,\n      closeDropDownOnSelection:true,\n      idField: 'shippingAddressId',\n      textField: 'shipping',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };  \n  }\n  \n  active:any = {};\n  toggleterritory(key,action)\n  {\n    console.log(action);\n    console.log(key);\n    \n    if(action == 'open')\n    { this.active[key] = true;\n      $('#'+key).focus();\n    }\n    if(action == 'close')\n    { this.active[key] = false;}\n    \n    console.log(this.active);\n  }\n  adrs:any={};\n  tmpShipping:any=[];\n  tmpShippingAddress:any=[];\n  distributorDetail:any={}\n  monthleyTarget:any=[]\n  \n  \n  openOrderDiv(id,val:any)\n  {\n    console.log(id);\n    console.log(val);\n    \n    this.categoryList()\n    this.getSegmentList();\n    // this.getcat\n    let networkId\n    if(id!='')\n    {\n      this.tmpShippingAddress=[];\n      this.orderDiv=true;\n      if(this.userType!=3)\n      {\n        this.data.distributor=id[0].networkId;\n        console.log(this.data.distributor);\n        networkId=this.data.distributor;\n      }\n      else{\n        networkId=id;\n      }\n      this.loader=true;\n      this.service.fetchData({'networkId': networkId},\"network/list\").subscribe((result=>{\n        this.loader=false;\n        console.log(result);\n        if(result['status']=='Success')\n        {\n          this.distributorDetail=result['data'][0];\n          this.tmpShipping=this.distributorDetail.shippingAddresses;\n          if(this.distributorDetail.networkLimits)\n          this.monthleyTarget=this.distributorDetail.networkLimits[0];\n          \n        }\n        console.log(this.tmpShipping);\n        \n        const shippingData = [];\n        for(let j=0;j<this.tmpShipping.length;j++)\n        {\n          shippingData.push({\"shipping\":this.tmpShipping[j]['city']+','+this.tmpShipping[j]['district']+','+this.tmpShipping[j]['state']+','+this.tmpShipping[j]['pin'],\"shippingAddressId\":this.tmpShipping[j]['shippingAddressId']});\n        }\n        \n        shippingData.push({\"shipping\":'Other Adrress',\"shippingAddressId\": 'Other'});\n        \n        this.adrs.shipping = [];\n        this.tmpShippingAddress = shippingData;\n        console.log(this.tmpShippingAddress);\n        \n        if(shippingData.length > 1 && val==0) {\n          this.adrs.shipping.push(shippingData[0]);\n          this.data.shippingAddressId=shippingData[0].shippingAddressId;\n        }\n        if(val==1)\n        {\n          this.adrs.shipping.push(shippingData[shippingData.length-2]);\n          this.data.shippingAddressId=shippingData[shippingData.length-2].shippingAddressId;\n          \n        }\n        console.log(this.tmpShippingAddress);\n        \n        console.log(this.distributorDetail);\n        \n      }))\n    }\n    else{\n      this.tmpShippingAddress=[];\n      this.orderDiv=false;\n    }\n  }\n  \n  otherAddress(id)\n  {\n    console.log(id);\n    \n    const dialogRef = this.dialog.open(OtherAddressComponent, {\n      width: '800px',\n      data:{\n        id\n        \n      }});\n      dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n        if(result==false)\n        {\n          console.log('false');\n          if(this.userType==3)\n          {\n            this.openOrderDiv(this.networkId,0)\n            \n          }\n          else{\n            \n            this.openOrderDiv(this.data.networkId,0)\n          }\n        }\n        else\n        {\n          console.log('true');\n          if(this.userType==3)\n          {\n            this.openOrderDiv(this.networkId,1)\n            \n          }\n          else{\n            \n            this.openOrderDiv(this.data.networkId,1)\n          }\n        }\n        console.log('The dialog was closed');\n      });\n    }\n    shippingAddress:any=[];\n    tmpDistributor_list:any=[];\n    alldistributorList()\n    {\n      this.loader=true;\n      console.log(\"this.distribotur_roleId\");\n      \n      this.service.fetchData({\"role\":this.distribotur_roleId,\"currentPage\":1,\"pageSize\":100},\"network/list\").subscribe((result)=>{\n        console.log(result);\n        \n        if(result['status']==\"Success\")\n        {\n          this.loader=false;\n          this.tmpDistributor_list=result['data'];\n          \n          const distArr = [];\n          for(let i=0;i<this.tmpDistributor_list.length;i++)\n          {\n            distArr.push({'networkId':this.tmpDistributor_list[i].networkId,'establishment':this.tmpDistributor_list[i].establishment+'/'+this.tmpDistributor_list[i].networkCode})\n          }\n          this.distributor_list=distArr;\n          console.log(this.distributor_list);\n          \n        }\n        else{\n          this.loader=false;\n        }\n        // this.categoryList()\n        // this.getSegmentList();\n        // this.getOemList();\n      })\n    }\n    deselectProduct:any=[];\n    onDeSelect(segment,category,event)\n    {\n      console.log(segment,category,event);\n      this.service.fetchData({\"networkId\":this.data.distributor,\"segmentCode\":segment[0],\"categoryCode\":category[0],\"productName\":event,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.deselectProduct=result['data'];\n          console.log(this.deselectProduct);\n          \n          for(let i=0;i<this.deselectProduct.length;i++)\n          {\n            this.productlist=this.productlist.filter(row=>row.productId!=this.deselectProduct[i].productId);\n            console.log(this.productlist);\n            \n          }\n          \n        }\n      }) \n    }\n    distributorList()\n    {\n      this.loader=true;\n      this.service.fetchData({\"role\":this.distribotur_roleId,\"salesUserId\":this.userId},\"mynetwork/detail\").subscribe((result)=>{\n        console.log(result);\n        if(result['status']==\"Success\")\n        {\n          \n          this.loader=false;\n          this.tmpDistributor_list=result['data'];\n          \n          const distArr = [];\n          for(let i=0;i<this.tmpDistributor_list.length;i++)\n          {\n            distArr.push({'networkId':this.tmpDistributor_list[i].networkId,'establishment':this.tmpDistributor_list[i].establishment+'/'+this.tmpDistributor_list[i].networkCode})\n          }\n          this.distributor_list=distArr;\n          console.log(this.distributor_list);\n        }\n        else{\n          this.loader=false;\n        }\n        // this.categoryList()\n        // this.getSegmentList();\n        // this.getOemList();\n      })\n    }\n    categoryList()\n    {\n      this.loader=true;\n      this.service.fileData(\"\",\"category/list\").subscribe((result)=>{\n        console.log(result);\n        setTimeout (() => {\n          this.loader=false;\n          \n        }, 700);\n        if(result['status']==\"Success\")\n        {\n          this.category_list=result['data'];\n          this.tmp_categoryList=this.category_list;\n        }\n      })\n    }\n    \n    getSegmentList()\n    {\n      this.service.fileData('',\"segment/list\").subscribe((result=>{\n        console.log(result['data']);\n        if(result['status']==\"Success\")\n        {\n          this.segmentList=result['data'];\n          this.tmp_segmentList=this.segmentList;\n        }\n      }))\n    }\n    \n    getSubSegmentList(segment)\n    {\n      console.log(segment);\n      this.service.fetchData({\"segmentCode\":segment},\"subsegment/list\").subscribe((result)=>{\n        console.log(result);\n        if(result['status']=\"Success\")\n        {\n          this.subSegment_List=result['data'];\n          this.tmp_subsegmentList=this.subSegment_List;\n        }\n      })\n    }\n    pendingOrder(id)\n    {\n      console.log(id);\n      \n      this.loader=true;\n      this.service.fileData('',\"order/pending/\"+this.data.distributor+'/'+id).subscribe((result)=>{\n        console.log(result);\n        this.loader=false\n        if(result['status']=='Success')\n        {\n          const dialogRef = this.dialog.open(PendingOrderComponent, {\n            width: '868px',\n            data: result['data']     \n            \n          });\n          dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n            console.log('The dialog was closed');\n          });\n        }\n        \n      })\n    }\n    // getOemList()\n    // {\n    //   this.service.fileData(\"\",\"oem/list\").subscribe((result)=>{\n    //     console.log(result);\n    //     if(result['status']==\"Success\")\n    //     {\n    //       this.oemList=result['data'];\n    //       this.tmp_oemList=this.oemList;\n    //     }\n    //   })\n    // }\n    tmpproduct_list:any=[];\n    tmpcat:any;\n    tmpseg:any;\n    selectedSegment:any;\n    productList(segment:any=[],category:any=[])\n    {\n      this.productdiv=true;\n      this.data.product=[];\n      this.ProductName_list=[];\n      let selectedCategory;\n      this.productlist=[]\n      // let selectedSegment;\n      \n      if(segment.length!=0 || category.length!=0)\n      {\n        if(category.length!=0)\n        {\n          this.tmpcat=category;\n          if(this.tmpcat!=selectedCategory)\n          {\n            selectedCategory=category[0];\n            this.productlist=[];\n          }\n          else{\n            selectedCategory=category[0];\n          }\n          console.log(\"Not Null\");\n        }\n        if(segment.length!=0)\n        {\n          this.tmpseg=segment[0];\n          if(this.tmpseg!=this.selectedSegment)\n          {\n            console.log(this.tmpseg);\n            console.log(this.selectedSegment);\n            \n            this.selectedSegment=segment[0];\n            this.productlist=[];\n            this.data.category=[];\n          }\n          else{\n            \n            this.selectedSegment=segment[0];\n          }\n          console.log(\"Not Null\");\n        } \n        \n        \n        this.loader=true;\n        console.log(this.data.category);\n        \n        \n        this.service.fetchData({\"networkId\":this.data.distributor,\"segmentCode\": this.selectedSegment,\"categoryCode\": selectedCategory ,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n          console.log(result);\n          setTimeout (() => {\n            this.loader=false;\n            \n          }, 700);\n          if(result)\n          {\n            this.ProductName_list=[];\n            \n            this.cartProductList=result['data'];\n            for(let i=0;i<this.cartProductList.length;i++)\n            {\n              this.cartProductList[i].quantity=0;\n              // this.cartProductList[i].priceSupport=0;\n              this.cartProductList[i].ifcheck=false;\n              \n              this.cartProductList[i].itemValue=parseFloat(this.cartProductList[i].discountedListPrice)-parseFloat(this.cartProductList[i].priceSupport);\n              this.cartProductList[i].amount=parseFloat(this.cartProductList[i].quantity)*parseFloat(this.cartProductList[i].itemValue);\n              this.cartProductList[i].gstamount=(parseFloat(this.cartProductList[i]['discountedListPrice'])*parseFloat(this.cartProductList[i]['gstPercentage'])/100)*parseFloat(this.cartProductList[i]['quantity']);\n            }\n            \n            const productTempArr =this.cartProductList;\n            \n            this.productlist=JSON.parse(JSON.stringify(this.cartProductList));\n            this.tmpProductList=JSON.parse(JSON.stringify(this.cartProductList));\n            console.log(this.tmpproduct_list);\n            \n            // JSON.parse(JSON.stringify(productTempArr))\n            console.log(this.productlist);\n            \n            for (let index = 0; index < productTempArr.length; index++) {\n              const itemIndex =  this.ProductName_list.findIndex(row => row.productName == productTempArr[index].productName);\n              \n              if(itemIndex == -1) {\n                this.ProductName_list.push(JSON.parse(JSON.stringify(productTempArr[index])));\n              }\n            }\n            \n            // this.tmpproduct_list=this.productlist;\n          }\n        })\n      }\n      else{\n        this.productlist=[];\n        this.ProductName_list=[];\n        this.cartProductList=[];\n      }\n    }\n    productlist:any=[];\n    tmpProductList:any=[];\n    productdiv:any=false;\n    getCartProductList(segment,category,productname)\n    {\n      this.productdiv=true;\n      let selectedCategory;\n      let selectedSegment;\n      let selectedproduct;\n      this.productlist=[];\n      this.cartProductList=[];\n      this.tmpProductList=[];\n      console.log(productname);\n      \n      if(segment!=null || category!=null||productname!=null)\n      {\n        if(segment!=null)\n        {\n          selectedSegment=segment[0]\n        }\n        if(category!=null)\n        {\n          selectedCategory=category[0]\n        }\n        if(productname!=null)\n        {\n          selectedproduct=productname[productname.length-1]\n        }  \n        \n      }\n      // {\n      console.log(category,segment,productname);\n      \n      this.loader=true;\n      console.log(segment,category,productname);\n      this.service.fetchData({\"networkId\":this.data.distributor,\"segmentCode\":selectedSegment,\"categoryCode\":selectedCategory,\"productName\":selectedproduct,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.cartProductList=result['data'];\n          \n          \n          \n          \n          for(let i=0;i<this.cartProductList.length;i++)\n          {\n            this.cartProductList[i].quantity=0;\n            // this.cartProductList[i].priceSupport=0;\n            this.cartProductList[i].ifcheck=false;\n            \n            this.cartProductList[i].itemValue=parseFloat(this.cartProductList[i].discountedListPrice)-parseFloat(this.cartProductList[i].priceSupport);\n            this.cartProductList[i].amount=parseFloat(this.cartProductList[i].quantity)*parseFloat(this.cartProductList[i].itemValue);\n            this.cartProductList[i].gstamount=(parseFloat(this.cartProductList[i]['discountedListPrice'])*parseFloat(this.cartProductList[i]['gstPercentage'])/100)*parseFloat(this.cartProductList[i]['quantity']);\n          }\n          this.productlist=this.productlist.concat(this.cartProductList);\n          this.tmpProductList=JSON.parse(JSON.stringify(this.productlist));\n          \n          // console.log(this.tmpproduct_list);\n          \n          // this.tmpProductList=this.productlist;\n        }\n      })\n      \n      // else{\n      //   for(let i=0;i<this.productlist.length;i++)\n      //   {\n      //     if(productname===this.productlist[i]['productName'])\n      //     {\n      //       this.productlist.splice(i,1);\n      //     }\n      //   }\n      // }\n      \n    }\n    \n    segment:any=[];\n    category:any=[];\n    productNameList:any=[];\n    \n    selectedItem(segment,category,productName)\n    {\n      console.log(segment,category,productName);\n      \n      if(segment!='')\n      {\n        this.segment=[];\n        this.segment.push(segment);\n        \n      }\n      if(category!='')\n      {\n        this.category=[];\n        this.category.push(category);\n        \n      }\n      if(productName!=null)\n      {\n        this.productNameList=productName;\n        console.log(this.productNameList);\n      }\n      \n      \n    }\n    downloadFile()\n    {\n      this.loader=true;\n      console.log(\"function\");\n      this.service.excelFileData({\"segments\": this.data.segment,\"categories\":this.data.category,\"productNames\":this.data.product},'order/excel').subscribe(result=> {  saveAs(result, 'OrderProductSheet.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n      this.loader=false;\n    });\n  }\n  \n  arrayBuffer:any;\n  file:File;\n  incomingfile(id,event) \n  {\n    this.file= event.target.files[0]; \n    this.Upload();\n    $('#'+id).val('');\n  }\n  ExcelArray:any=[];\n  tmpExcelOrderArray:any=[];\n  partNumberArray:any=[];\n  notUploadPartNumber:any=[];\n  Upload() {\n    let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      this.arrayBuffer = fileReader.result;\n      var data = new Uint8Array(this.arrayBuffer);\n      var arr = new Array();\n      for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n      var bstr = arr.join(\"\");\n      var workbook = XLSX.read(bstr, {type:\"binary\"});\n      var first_sheet_name = workbook.SheetNames[0];\n      var worksheet = workbook.Sheets[first_sheet_name];\n      console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));\n      this.ExcelArray=XLSX.utils.sheet_to_json(worksheet,{raw:true});\n      for(let j=0;j<this.ExcelArray.length;j++)\n      {\n        this.partNumberArray.push(this.ExcelArray[j]['Part #']);\n      }\n      console.log(this.partNumberArray);\n      \n      this.service.fetchData({\"networkId\":this.data.distributor,\"partNumbers\":this.partNumberArray,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n        this.ExcelUploadOrder=result['data'];\n        console.log(this.ExcelUploadOrder);\n        \n        for(let k=0;k<this.ExcelUploadOrder.length;k++)\n        {\n          for(let i=0;i<this.ExcelArray.length;i++)\n          {\n            if(this.ExcelArray[i]['Part #']==this.ExcelUploadOrder[k]['partNumber'])\n            {\n              this.ExcelUploadOrder[k].quantity=this.ExcelArray[i]['Order QTY'];\n            }\n          }\n        }\n        console.log(this.ExcelUploadOrder);\n        for(let i=0;i<this.ExcelUploadOrder.length;i++)\n        {\n          console.log(parseFloat(this.ExcelUploadOrder[i].quantity),parseFloat(this.ExcelUploadOrder[i].moq));\n          this.ExcelUploadOrder[i].gstamount=(parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])*parseFloat(this.ExcelUploadOrder[i]['gstPercentage'])/100)*parseFloat(this.ExcelUploadOrder[i]['quantity']);\n          \n          \n          if(parseFloat(this.ExcelUploadOrder[i].quantity) % parseFloat(this.ExcelUploadOrder[i].moq)!=0 || parseFloat(this.ExcelUploadOrder[i].quantity)<parseFloat(this.ExcelUploadOrder[i].moq))\n          { \n            console.log( this.notUploadPartNumber);\n            this.notUploadPartNumber.push(this.ExcelArray[i]);\n            \n          }\n          else\n          {\n            this.cartArray.push({\n              \"gstPercentage\":this.ExcelUploadOrder[i]['gstPercentage'],\n              \"productId\":this.ExcelUploadOrder[i]['productId'],\n              \"partNumber\":this.ExcelUploadOrder[i]['partNumber'],\n              \"category\":this.ExcelUploadOrder[i]['category'],\n              \"segment\":this.ExcelUploadOrder[i]['segment'],\n              \"model\":this.ExcelUploadOrder[i]['model'],\n              \"oem\":this.ExcelUploadOrder[i]['oem'],\n              \"moq\":this.ExcelUploadOrder[i]['moq'],\n              \"quantity\":parseFloat(this.ExcelUploadOrder[i]['quantity']),\n              \"discountedListPrice\":this.ExcelUploadOrder[i]['discountedListPrice'],\n              \"priceSupport\":this.ExcelUploadOrder[i]['priceSupport'],\n              \"itemValue\":parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])-parseFloat(this.ExcelUploadOrder[i]['priceSupport']),\n              \"amount\":parseFloat(this.ExcelUploadOrder[i]['quantity'])*(parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])-parseFloat(this.ExcelUploadOrder[i]['priceSupport'])),\n              \"gstamount\":this.ExcelUploadOrder[i]['gstamount']\n            });\n            \n          }\n          if(i==this.ExcelUploadOrder.length-1)\n          {\n            this.toast.openSucess(\"Product Sheet\",\"Upload SuccessFully\");\n            console.log(this.notUploadPartNumber);\n            if(this.notUploadPartNumber.length!=0)\n            {\n              this.service.exportAsExcelFile(this.notUploadPartNumber, 'Product Error Sheet');\n              this.alrt.alertWarning(\"Item Quantity multiple of MOQ \");\n            }\n            this.showInCart(this.cartArray);\n          }\n          \n        }\n      })\n      \n    }\n    fileReader.readAsArrayBuffer(this.file);\n  }\n  \n  \n  // const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n  // const EXCEL_EXTENSION = '.xlsx';\n  \n  //   public exportAsExcelFile(json: any[], excelFileName: string): void {\n  //     const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheeet(json);\n  //     const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n  //     const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n  //     this.saveAsExcelFile(excelBuffer, excelFileName);\n  //   }\n  //   private saveAsExcelFile(buffer: any, fileName: string): void {\n  //      const data: Blob = new Blob([buffer], {type: EXCEL_TYPE});\n  //      FileSaver.saveAs(data, fileName + '_export_' + new  Date().getTime() + EXCEL_EXTENSION);\n  //   }\n  \n  selectProduct(index)\n  {\n    this.productlist[index].ifcheck=true;\n    this.productlist[index].datacheck=true;\n  }\n  \n  addToMyCart(index)\n  {\n    // this.tmp_orderDetail=[];\n    console.log(this.productlist[index]);\n    if(parseFloat(this.productlist[index].quantity) % parseFloat(this.productlist[index].moq)==0 && parseFloat(this.productlist[index].quantity) >=parseFloat(this.productlist[index].moq))\n    {\n      \n      this.tmp_orderDetail.push({\n        \"gstPercentage\":this.productlist[index]['gstPercentage'],\n        \"productId\":this.productlist[index]['productId'],\n        \"partNumber\":this.productlist[index]['partNumber'],\n        \"category\":this.productlist[index]['category'],\n        \"segment\":this.productlist[index]['segment'],\n        \"model\":this.productlist[index]['model'],\n        \"oem\":this.productlist[index]['oem'],\n        \"moq\":this.productlist[index]['moq'],\n        \"quantity\":parseFloat(this.productlist[index]['quantity']),\n        \"discountedListPrice\":this.productlist[index]['discountedListPrice'],\n        \"priceSupport\":this.productlist[index]['priceSupport'],\n        \"itemValue\":this.productlist[index]['itemValue'],\n        \"amount\":parseFloat(this.productlist[index]['itemValue'])*parseFloat(this.productlist[index]['quantity']),\n        \"gstamount\":this.productlist[index]['gstamount']\n      });\n      this.toast.openSucess(\"Add to cart SuccessFully\",'');\n      \n      this.showInCart(this.tmp_orderDetail);\n    }\n    else{\n      console.log(\"enter\");\n      this.alrt.alertWarning(\"Order Quantity should be multiple of \"+this.productlist[index].moq);\n      this.productlist[index].datacheck=false;\n      this.productlist[index].ifcheck=false;\n      this.productlist[index].add=false;\n      \n    }\n  }\n  \n  \n  calculatePriceSupport(index,discount)\n  {\n    console.log(index , discount);\n    if(discount<1)\n    {\n      console.log(\"hello\");\n      this.productlist[index].itemValue=this.productlist[index].itemValue;\n      this.productlist[index].amount=this.productlist[index].amount;\n    }\n    if(discount>0)\n    {\n      this.productlist[index].itemValue=parseFloat(this.productlist[index].itemValue)-parseFloat(this.productlist[index].priceSupport);\n      this.productlist[index].amount=parseFloat(this.productlist[index]['itemValue'])*parseFloat(this.productlist[index]['quantity']);\n      console.log(this.productlist);\n      console.log(this.tmp_orderDetail);\n      let tmpindex=this.tmp_orderDetail.findIndex(row=>row.productId===this.productlist[index].productId)\n      if(tmpindex != -1)\n      {\n        console.log(\"id\");\n        \n        this.tmp_orderDetail[tmpindex].itemValue=this.productlist[index].itemValue;\n        this.tmp_orderDetail[tmpindex].amount=this.productlist[index].amount;\n        this.tmp_orderDetail[tmpindex].priceSupport=discount;\n      }\n      \n    }\n  }\n  \n  checkValidate(index)\n  {\n    console.log(this.productlist[index].quantity);\n    console.log(this.productlist[index].moq);\n    \n    if(parseFloat(this.productlist[index].quantity) % parseFloat(this.productlist[index].moq)==0 )\n    {\n      console.log(\"inchangIf\");\n      this.productlist[index].add=true;\n      this.tmp_orderDetail.push({\n        \"gstPercentage\":this.productlist[index]['gstPercentage'],\n        \"productId\":this.productlist[index]['productId'],\n        \"partNumber\":this.productlist[index]['partNumber'],\n        \"category\":this.productlist[index]['category'],\n        \"segment\":this.productlist[index]['segment'],\n        \"model\":this.productlist[index]['model'],\n        \"oem\":this.productlist[index]['oem'],\n        \"moq\":this.productlist[index]['moq'],\n        \"quantity\":parseFloat(this.productlist[index]['quantity']),\n        \"discountedListPrice\":this.productlist[index]['discountedListPrice'],\n        \"priceSupport\":this.productlist[index]['priceSupport'],\n        \"itemValue\":this.productlist[index]['itemValue'],\n        \"amount\":parseFloat(this.productlist[index]['itemValue'])*parseFloat(this.productlist[index]['quantity']),\n        \"gstamount\":this.productlist[index]['gstamount']\n      });\n    }\n    else{\n      console.log(\"change\");\n      \n      this.productlist[index].datacheck=false;\n      this.productlist[index].ifcheck=false;\n      this.alrt.alertWarning(\"Order Quantity should be multiple of \"+this.productlist[index].moq);\n    }\n  }\n  schemeList:any=[];\n  schemeString:string\n  schemeString2:string='';\n  \n  SchemeDetail(partNumber,index)\n  {\n    if(this.productlist[index].schemeCount==0)\n    {\n      console.log(\"hello\");\n      \n    }\n    else\n    {\n      this.loader=true;\n      this.service.fetchData({\"partNumberCode\":partNumber},\"/getschemeonproduct\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['message']=='Success')\n        {\n          this.schemeList=result['data'];\n          // for(let i=0;i<this.schemeList.length;i++)\n          // {\n          \n          //   this.schemeString=this.schemeList[i].offerDescription;\n          //   this.schemeString2=this.schemeString2+this.schemeString+'<br>';\n          //   this.schemeString='';\n          // }\n          // console.log(this.schemeString2);\n          // this.alrt.alertWarning(this.schemeString2);\n          const dialogRef = this.dialog.open(SchemepopupComponent, {\n            width: '600px',\n            data: this.schemeList     \n            \n          });\n          dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n            console.log('The dialog was closed');\n          });\n          \n        }\n      })\n    }\n  }\n  cartArray:any=[];\n  addCart(product,index,event)\n  {\n    console.log(event);\n    \n    if(event.checked)\n    {\n      // this.cartArray.push(product);\n    }\n    else{\n      const idIndex=this.tmp_orderDetail.findIndex(row => row.productId==product.productId);\n      console.log(idIndex);\n      this.tmp_orderDetail.splice(idIndex,1);\n      this.productlist[index].ifcheck=false;\n      this.productlist[index].quantity=this.productlist[index].moq;\n    }\n    \n    console.log(this.cartArray);\n  }\n  // datacheck:Boolean;\n  tmp:any=false;\n  finel_Array:any=[];\n  tmp_array:any=[];\n  orderDetail:any=[];\n  tmpSubTotal:any=0;\n  tmp_orderDetail:any=[];\n  addToCart()\n  {\n    console.log(this.tmp_orderDetail);\n    \n    for(let i=0;i<this.tmp_orderDetail.length;i++)\n    {\n      if(this.tmp_orderDetail[i].quantity<parseFloat(this.productlist[i].moq))\n      {\n        this.alrt.alertWarning(\"Order Quantity Minimum\"+this.productlist[i].moq);\n        break;\n      }\n      else\n      {\n        this.cartArray.push({\n          \"gstPercentage\":this.tmp_orderDetail[i]['gstPercentage'],\n          \"productId\":this.tmp_orderDetail[i]['productId'],\n          \"partNumber\":this.tmp_orderDetail[i]['partNumber'],\n          \"category\":this.tmp_orderDetail[i]['category'],\n          \"segment\":this.tmp_orderDetail[i]['segment'],\n          \"model\":this.tmp_orderDetail[i]['model'],\n          \"oem\":this.tmp_orderDetail[i]['oem'],\n          \"moq\":this.tmp_orderDetail[i]['moq'],\n          \"quantity\":parseFloat(this.tmp_orderDetail[i]['quantity']),\n          \"discountedListPrice\":this.tmp_orderDetail[i]['discountedListPrice'],\n          \"priceSupport\":this.tmp_orderDetail[i]['priceSupport'],\n          \"itemValue\":this.tmp_orderDetail[i]['itemValue'],\n          \"amount\":parseFloat(this.tmp_orderDetail[i]['itemValue'])*parseFloat(this.tmp_orderDetail[i]['quantity']),\n          \"gstamount\":this.tmp_orderDetail[i]['gstamount']\n        });\n        if(i==this.tmp_orderDetail.length-1)\n        {\n          this.toast.openSucess(\"Add to cart SuccessFully\",'');\n          \n          this.showInCart(this.cartArray);\n        }\n      }\n      \n    }\n  }\n  tmporderArray:any=[];\n  showInCart(orderArray:any=[])\n  {\n    // this.toast.openSucess(\"Add to cart SuccessFully\",'');\n    console.log(orderArray);\n    for(let i=0;i<orderArray.length;i++)\n    {\n      if(this.tmp_array.length==0)\n      {\n        this.finel_Array.push(orderArray[i]);\n        this.tmp_array.push({category: orderArray[i]['category'],quantity:orderArray[i]['quantity'],amount:orderArray[i]['amount'],gstamount:orderArray[i]['gstamount']});\n        this.tmporderArray.push(orderArray[i]);\n        this.orderDetail.push({category: orderArray[i]['category'],\"productId\":orderArray[i].productId,\"quantity\":orderArray[i].quantity,\"price\":orderArray[i].itemValue,\"gstPercentage\":orderArray[i].gstPercentage});\n        console.log(this.tmporderArray);\n      }\n      \n      else\n      {\n        const idIndex=this.orderDetail.findIndex(row => row.productId==orderArray[i].productId)\n        let tmpval=false;  \n        if(idIndex != -1)\n        {\n          console.log(idIndex);\n          console.log(this.tmporderArray);\n          console.log(this.finel_Array);\n          \n          this.tmporderArray.splice(idIndex,1);\n          this.orderDetail.splice(idIndex,1);\n          this.tmporderArray.push(orderArray[i]);\n          this.orderDetail.push({category: orderArray[i]['category'],\"productId\":orderArray[i].productId,\"quantity\":orderArray[i].quantity,\"price\":orderArray[i].itemValue,\"gstPercentage\":orderArray[i].gstPercentage});\n          const itemIndex = this.tmp_array.findIndex(row => row.category == orderArray[i]['category']);\n          if(itemIndex != -1)\n          {\n            console.log(this.tmporderArray);\n            \n            this.tmp_array[itemIndex].quantity=parseFloat(this.tmp_array[itemIndex].quantity)-parseFloat(this.finel_Array[idIndex].quantity)\n            this.tmp_array[itemIndex].amount=parseFloat(this.tmp_array[itemIndex].amount)-parseFloat(this.finel_Array[idIndex].amount)\n            this.tmp_array[itemIndex].gstamount=parseFloat(this.tmp_array[itemIndex].gstamount)-parseFloat(this.finel_Array[idIndex].gstamount)\n            this.finel_Array.splice(idIndex,1);\n            tmpval=true;\n            if(tmpval)\n            {\n              console.log(this.tmporderArray);\n              this.tmp_array[itemIndex].quantity=parseFloat(this.tmp_array[itemIndex].quantity)+parseFloat(orderArray[i].quantity)\n              this.tmp_array[itemIndex].amount=parseFloat(this.tmp_array[itemIndex].amount)+parseFloat(orderArray[i].amount)\n              this.tmp_array[itemIndex].gstamount=parseFloat(this.tmp_array[itemIndex].gstamount)+parseFloat(orderArray[i].gstamount);\n              this.finel_Array.push(orderArray[i]);\n            }\n            \n          }\n          \n        }\n        if(idIndex === -1)\n        {\n          // this.tmp_orderDetail.push({\"productId\":orderArray[i].productId,\"quantity\":orderArray[i].quantity,\"amount\":orderArray[i].amount,\"gstamount\":orderArray[i].gstamount});\n          this.orderDetail.push({category: orderArray[i]['category'],\"productId\":orderArray[i].productId,\"quantity\":orderArray[i].quantity,\"price\":orderArray[i].itemValue,\"gstPercentage\":orderArray[i].gstPercentage});\n          this.finel_Array.push(orderArray[i]);\n          this.tmporderArray.push(this.tmporderArray[i]);\n          const itemIndex = this.tmp_array.findIndex(row => row.category == orderArray[i]['category']);\n          \n          if(itemIndex === -1) {\n            this.tmp_array.push({category: orderArray[i]['category'],quantity:orderArray[i]['quantity'],amount:orderArray[i]['amount'],gstamount:orderArray[i]['gstamount']});\n          } else {\n            this.tmp_array[itemIndex].quantity=parseFloat(orderArray[i]['quantity'])+parseFloat(this.tmp_array[itemIndex].quantity);\n            this.tmp_array[itemIndex].amount=parseFloat(orderArray[i]['amount'])+parseFloat(this.tmp_array[itemIndex].amount);\n            this.tmp_array[itemIndex].gstamount=parseFloat(orderArray[i]['gstamount'])+parseFloat(this.tmp_array[itemIndex].gstamount);\n          }\n        }\n      }\n      if(i==orderArray.length-1)\n      {\n        this.tmp=true;\n      }\n    }\n    if(this.tmp)\n    {\n      this.cartArray=[];\n      this.tmp_orderDetail=[];\n      console.log(this.finel_Array);\n      this.calculate(this.finel_Array);\n      console.log(this.tmp_array);\n      // this.productlist=this.tmpProductList;\n      for (let index = 0; index < this.productlist.length; index++) {\n        this.productlist[index].datacheck = false;\n        this.productlist[index].ifcheck = false;\n        // this.productlist[index].quantity=0;\n      }\n    }\n    \n  }\n  \n  calculate(order_array)\n  {\n    console.log(order_array);\n    \n    this.itemTotel=0;\n    this.subTotal=0;\n    this.gstTotal=0;\n    this.grandTotal=0;\n    for(let i=0;i<order_array.length;i++)\n    {\n      console.log(\"process\");\n      \n      this.itemTotel=parseFloat(this.itemTotel)+parseFloat(order_array[i].quantity);\n      this.subTotal=parseFloat(this.subTotal)+parseFloat(order_array[i].amount);\n      this.gstTotal=parseFloat(this.gstTotal)+parseFloat(order_array[i].gstamount);\n      console.log(this.gstTotal );\n      \n      if(i==order_array.length-1)\n      {\n        this.grandTotal=parseFloat(this.grandTotal)+(parseFloat(this.gstTotal)+parseFloat(this.subTotal));\n      }\n    }\n    \n  }\n  productDetail(category)\n  {\n    const dialogRef = this.dialog.open(ListOrderComponent, {\n      width: '1600px',\n      data:{\n        product:this.finel_Array,\n        category\n      }});\n      dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n        console.log('The dialog was closed');\n        let tmpCartArray=this.service.getData();\n        if(tmpCartArray)\n        {\n          this.tmp_array=[];\n          this.finel_Array=[];\n          this.orderDetail=[];\n          this.showInCart(tmpCartArray);\n        }\n      });\n    }\n    \n    ExcelUploadOrder:any=[];\n    attachment:any={};\n    files: FileList; \n    filestring: string; \n    \n    selectAddress(id)\n    {\n      \n      console.log(id);\n      if(id!='')\n      {\n        if(id.shippingAddressId=='Other')\n        {\n          console.log(this.data.networkId);\n          if(this.userType==3)\n          {\n            this.otherAddress(this.networkId);\n          }\n          else{\n            \n            this.otherAddress(this.data.networkId[0].networkId)\n          }\n        }\n        else{\n          \n          this.data.shippingAddressId=id.shippingAddressId;\n        }\n      }\n      else\n      {\n        this.data.shippingAddressId=null;\n      }\n      console.log(this.data.shippingAddressId);\n    }\n    \n    orderStatus:any;\n    SaveOrder()\n    {\n      \n      if(this.userRole==1)\n      {\n        this.companyStatus=1;\n      }\n      else{\n        this.companyStatus=2;\n      }\n      this.orderStatus=1;\n      this.OrderPlaced();\n    }\n    \n    value:any={};\n    companyStatus:any;\n    SubbmitOrder()\n    {\n      console.log(this.userRole);\n      \n      if(this.userRole==12)\n      {\n        this.orderStatus=3;\n        this.companyStatus=1;\n        this.OrderPlaced();\n      }\n      else if(this.userRole==1)\n      {\n        this.orderStatus=2;\n        this.companyStatus=1;\n        this.OrderPlaced();\n      }\n      else{\n        this.orderStatus=2;\n        this.companyStatus=1;\n        this.OrderPlaced();\n      }\n    }\n    \n    OrderPlaced()\n    {\n      this.loader=true;\n      console.log(this.data.distributor);\n      console.log(this.data);\n      if(this.userRole==12)\n      {\n        this.value={'shippingAddressId':this.data.shippingAddressId,\"remarks\":this.data.remarks,\"dealerStatus\": this.orderStatus,\"companyStatus\": this.companyStatus,\"networkId\":this.networkId,\"orderDetail\":this.orderDetail,\"createBy\":this.userId,\"amount\":this.subTotal,\"quantity\":this.itemTotel,\"gstAmount\":this.gstTotal,\"totalAmount\":this.grandTotal};\n      }\n      else{\n        this.value={'shippingAddressId':this.data.shippingAddressId,\"remarks\":this.data.remarks,\"dealerStatus\": this.orderStatus,\"companyStatus\": this.companyStatus,\"networkId\":this.data.distributor,\"orderDetail\":this.orderDetail,\"createBy\":this.userId,\"amount\":this.subTotal,\"quantity\":this.itemTotel,\"gstAmount\":this.gstTotal,\"totalAmount\":this.grandTotal};\n      }\n      console.log(this.value);\n      this.service.fetchData(this.value,\"order/add\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.rout.navigate(['/order-list']);\n          if(this.orderStatus==1)\n          {\n            this.toast.openSucess(\"Order Save In Draft\",\"SuccessFully\");\n          }\n          else{\n            this.toast.openSucess(\"Order Placed\",\"SuccessFully\");\n            \n          }\n          {\n            \n          }\n        }\n      })\n    }\n    temp:any=false;\n    ordlength:any=[];\n    removeFromCart(index)\n    {\n      this.temp=false;\n      \n      this.alrt.delete(\"Product\").then((result)=>{\n        if(result)\n        {\n          this.ordlength=this.finel_Array;\n          console.log(this.tmp_array[index].quantity ,\"&\",this.tmp_array[index].amount,\"&\",this.tmp_array[index].gstamount);\n          this.itemTotel=parseFloat(this.itemTotel)-parseFloat(this.tmp_array[index].quantity);\n          this.subTotal=parseFloat(this.subTotal)-parseFloat(this.tmp_array[index].amount);\n          this.gstTotal=parseFloat(this.gstTotal)-parseFloat(this.tmp_array[index].gstamount);\n          this.grandTotal=parseFloat(this.grandTotal)-(parseFloat(this.tmp_array[index].amount)+parseFloat(this.tmp_array[index].gstamount));\n          console.log(this.tmp_array[index]['category']);\n          this.finel_Array = this.finel_Array.filter(row => row.category != this.tmp_array[index]['category']);\n          this.orderDetail = this.orderDetail.filter(row => row.category != this.tmp_array[index]['category']);\n          console.log(this.finel_Array);\n          this.temp=true;\n        }\n        if(this.temp)\n        {\n          this.tmp_array.splice(index,1);\n          \n        }\n      })\n    }\n    \n    calculateAmount(quantity,qty,i)\n    {\n      if(qty<1)\n      {\n        this.productlist[i].amount=0;\n      }\n      if(qty>0){\n        this.productlist[i].amount=parseFloat(this.productlist[i]['itemValue'])*parseFloat(qty);\n        this.productlist[i].gstamount=(parseFloat(this.productlist[i]['itemValue'])*parseFloat(this.productlist[i]['gstPercentage'])/100)*this.productlist[i]['quantity'];\n      }\n    }\n    \n    \n    tmp_userList:any=[];\n    distribotur_roleId:any;\n    userTypeList()\n    {\n      this.service.fileData('',\"usertype/list\").subscribe((result)=>{\n        console.log(result['data'][2]['roles']);\n        this.tmp_userList=result['data'][2]['roles'];\n        \n        for(let i=0;i<this.tmp_userList.length;i++)\n        {\n          console.log(\"hello\");\n          \n          if(this.tmp_userList[i]['roleName']=='Distributor')\n          {\n            this.distribotur_roleId=this.tmp_userList[i]['roleId'];\n            console.log(this.distribotur_roleId);\n            if(this.distribotur_roleId)\n            {\n              if(this.userType==2)\n              {\n                console.log(this.userType);\n                \n                this.distributorList();\n              }\n              if(this.userType==1)\n              {\n                console.log(this.userType);\n                \n                this.alldistributorList();\n              }\n            }\n            \n          }\n        }\n        \n      })\n    }\n    catsearch:any=[];\n    tmp_cat:any=[];\n    categorySearch()\n    {\n      this.category_list=[];\n      for(var i=0;i<this.tmp_categoryList.length; i++)\n      {\n        this.catsearch.search=this.catsearch.search.toLowerCase();\n        this.tmp_cat=this.tmp_categoryList[i]['text'].toLowerCase();\n        if(this.tmp_cat.includes(this.catsearch.search))\n        {\n          this.category_list.push(this.tmp_categoryList[i]);\n        }     \n      }    \n    }\n    \n    segsearch:any=[];\n    tmp_seg:any=[];\n    segmentSearch()\n    {\n      this.segmentList=[];\n      for(var i=0;i<this.tmp_segmentList.length; i++)\n      {\n        this.segsearch.search=this.segsearch.search.toLowerCase();\n        this.tmp_seg=this.tmp_segmentList[i]['text'].toLowerCase();\n        if(this.tmp_seg.includes(this.segsearch.search))\n        {\n          this.segmentList.push(this.tmp_segmentList[i]);\n        }     \n      }    \n      \n    }\n    \n    oemsearch:any=[];\n    tmp_oem:any=[];\n    oemSearch()\n    {\n      this.oemList=[];\n      for(var i=0;i<this.tmp_oemList.length; i++)\n      {\n        this.oemsearch.search=this.oemsearch.search.toLowerCase();\n        this.tmp_oem=this.tmp_oemList[i]['text'].toLowerCase();\n        if(this.tmp_oem.includes(this.oemsearch.search))\n        {\n          this.oemList.push(this.tmp_oemList[i]);\n        }     \n      }    \n    }\n    \n    // subsegsearch:any=[];\n    // tmp_subseg:any=[];\n    // subSegmentSearch()\n    // {\n    //   this.product_list=[];\n    //   for(var i=0;i<this.tmpproduct_list.length; i++)\n    //   {\n    //     this.subsegsearch.search=this.subsegsearch.search.toLowerCase();\n    //     this.tmp_subseg=this.tmpproduct_list[i]['productName'].toLowerCase();\n    //     if(this.tmp_subseg.includes(this.subsegsearch.search))\n    //     {\n    //       this.product_list.push(this.tmpproduct_list[i]);\n    //     }     \n    //   }    \n    // }\n    \n    productName:any=[];\n    tmp_pro:any=[];\n    modelName:any=[];\n    tmpModel:any=[];\n    productSearchByNumber(partNumber,model)\n    {\n      \n      this.productlist=[];\n      for(var i=0;i<this.tmpProductList.length; i++)\n      {\n        if(partNumber!=null)\n        { \n          partNumber=partNumber.toLowerCase();\n          this.tmp_pro=this.tmpProductList[i]['partNumber'].toLowerCase();\n        }\n        else\n        {\n          partNumber=\"\";\n        }\n        \n        if(model!=null)\n        { \n          model=model.toLowerCase();\n          this.tmpModel=this.tmpProductList[i]['model'].toLowerCase();\n        }\n        else\n        {\n          model=\"\";\n        }\n\n        if(this.tmp_pro.includes(partNumber) && this.tmpModel.includes(model))\n        {\n          this.productlist.push(this.tmpProductList[i]);\n        }     \n      }\n      \n    }\n    // categoryName:any=[];\n    // tmpcategory:any=[];\n    // productSearchByCategory()\n    // {\n    //   this.productlist=[];\n    //   for(var i=0;i<this.tmpProductList.length; i++)\n    //   {\n    //     this.categoryName.search=this.categoryName.search.toLowerCase();\n    //     this.tmpcategory=this.tmpProductList[i]['category'].toLowerCase();\n    //     if(this.tmpcategory.includes(this.categoryName.search))\n    //     {\n    //       this.productlist.push(this.tmpProductList[i]);\n    //     }     \n    //   }\n    // }\n    // segmentName:any=[];\n    // tmpSegment:any=[];\n    // productSearchBySegment()\n    // {\n    //   this.productlist=[];\n    //   for(var i=0;i<this.tmpProductList.length; i++)\n    //   {\n    //     this.segmentName.search=this.segmentName.search.toLowerCase();\n    //     this.tmpSegment=this.tmpProductList[i]['segment'].toLowerCase();\n    //     if(this.tmpSegment.includes(this.segmentName.search))\n    //     {\n    //       this.productlist.push(this.tmpProductList[i]);\n    //     }     \n    //   }\n    // }\n    // // modelName:any=[];\n    // // tmpModel:any=[];\n    // productSearchByModel()\n    // {\n    //   this.productlist=[];\n    //   for(var i=0;i<this.tmpProductList.length; i++)\n    //   {\n    //     this.modelName.search=this.modelName.search.toLowerCase();\n    //     this.tmpModel=this.tmpProductList[i]['model'].toLowerCase();\n    //     if(this.tmpModel.includes(this.modelName.search))\n    //     {\n    //       this.productlist.push(this.tmpProductList[i]);\n    //     }     \n    //   }\n    // }\n    // oemName:any=[];\n    // tmpOem:any=[];\n    // productSearchByOem()\n    // {\n    //   this.productlist=[];\n    //   for(var i=0;i<this.tmpProductList.length; i++)\n    //   {\n    //     this.oemName.search=this.oemName.search.toLowerCase();\n    //     this.tmpOem=this.tmpProductList[i]['oem'].toLowerCase();\n    //     if(this.tmpOem.includes(this.oemName.search))\n    //     {\n    //       this.productlist.push(this.tmpProductList[i]);\n    //     }     \n    //   }\n    // }\n    \n    // distributor_filter(distributor)\n    // {\n    //   let value=distributor.toUpperCase();\n    //   this.distributor_list=[];\n    //   for(var i=0; i<this.tmpDistributor_list.length; i++)\n    //   {\n    //     if(this.tmpDistributor_list[i]['establishment'].toUpperCase().search(value) !==-1)\n    //     {\n    //       this.distributor_list.push(this.tmpDistributor_list[i]);\n    //     }\n    //   }\n    //   console.log(this.tmpDistributor_list);\n    // }\n    \n    \n  }\n  ","module.exports = \"\\n<div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n      </div>\\n    \\n<div class=\\\"edit-modal\\\">\\n    <mat-dialog-content class=\\\"mat-typography pl15 pr15\\\" style=\\\"overflow-x: hidden !important; position: relative;\\\">\\n        <p class=\\\"heading\\\">PRODUCT INFORMATION</p>\\n         <!-- <div class=\\\"top-search right-serach\\\" style=\\\"top: 25px;\\\">\\n                  <input type=\\\"text\\\" placeholder=\\\"SEARCH. . .\\\" style=\\\"background: #f8f8f8;\\\">\\n                  <i class=\\\"material-icons\\\">search</i>\\n                </div> -->\\n        <div class=\\\"col s12 padding0\\\">\\n            <div class=\\\"cs-table left-right-15\\\">\\n                <div class=\\\"table-head\\\">\\n                    <table>\\n                        <tr>\\n                            <th class=\\\"w120\\\">Part Number</th>\\n                            <th>Model</th>\\n                            <th class=\\\"w130\\\">OEM Code</th>\\n                            <th class=\\\"w80 text-center\\\">QTY</th>\\n                            <th class=\\\"w110 text-right\\\">Item Value</th>\\n                            <th class=\\\"w120 text-right\\\">Amount</th>\\n                            <th class=\\\"w60\\\">GST %</th>\\n                        </tr>\\n                    </table>\\n                </div>\\n                <div class=\\\"table-container pb0\\\">\\n                    <div class=\\\"table-content \\\">\\n                        <table>\\n                            <tr *ngFor=\\\"let product of productList;let index=index\\\">\\n                                <td class=\\\"w120\\\" >{{product.partNumberCode}}</td>\\n                                <td>{{product.model}}</td>\\n                                <td class=\\\"w130\\\">{{product.oem}}</td>\\n                                <td class=\\\"w80 text-center\\\">\\n                                    {{product.quantity}}\\n                                </td>\\n                                <td class=\\\"w110 text-right\\\">&#8377; {{product.price}}</td>\\n                                <td class=\\\"w120 text-right\\\">&#8377; {{product.quantity * product.price}}</td>\\n                                <td class=\\\"w60\\\">{{product.gstPercentage}} %</td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n        </div>\\n        \\n    </mat-dialog-content>\\n    <mat-dialog-actions align=\\\"end\\\">\\n        <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n    </mat-dialog-actions>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2RldGFpbG9yZGVybGlzdC9kZXRhaWxvcmRlcmxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\n@Component({\n  selector: 'app-detailorderlist',\n  templateUrl: './detailorderlist.component.html',\n  styleUrls: ['./detailorderlist.component.scss']\n})\nexport class DetailorderlistComponent implements OnInit {\n\n  productList:any=[];\n  tmp_productList:any=[];\n  finalProductList:any=[];\n\n  category:any;\n\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public dialog:MatDialog,public toast:SnackBarOverview,public service:ConstantService,public confirm:DialogComponent) {\n\n    console.log(data);\n    this.category=data['category'];\n    this.tmp_productList=data['product'];\n    this.finalProductList=data['product'];\n\n    for(let i=0;i<this.tmp_productList.length;i++){\n      if(this.category === this.tmp_productList[i]['category'])\n      {\n        this.productList.push(this.tmp_productList[i])\n      }\n    }\n    console.log(this.productList);\n    \n    \n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n    </div>\\n    \\n    <div class=\\\"middle-container\\\">\\n        <div class=\\\"page-heading\\\">\\n            <img src=\\\"assets/img/order_icon.svg\\\" class=\\\"h-icon\\\">\\n            <div class=\\\"heading-text\\\">\\n                <h2>Order</h2>\\n                <p>Add New Order</p>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    <!-- <form #f=\\\"ngForm\\\" (ngSubmit)=\\\" f.valid && placeOrder() \\\"> -->\\n        <div class=\\\"container-outer\\\">\\n            <div class=\\\"container\\\" >\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col s12\\\">\\n                        <div class=\\\"sprate-box mb20 pt0\\\" style=\\\"overflow: inherit;\\\">\\n                            <div class=\\\"cs-heading\\\" *ngIf=\\\"userRole !=12\\\">\\n                                <h2><span>Dealer :</span> {{order_data.establishment}}/{{distributorDetail.networkCode}}</h2>\\n                            </div>\\n                            <div class=\\\"from-fields\\\" >\\n                                <div class=\\\"row mt15\\\">\\n                                    <div class=\\\"col s6\\\">\\n                                        <div class=\\\"multi-all-select\\\">\\n                                            <label>Shipping Address</label>\\n                                            <ng-multiselect-dropdown\\n                                            [placeholder]=\\\"'Shipping Address'\\\"\\n                                            [data]=\\\"tmpShippingAddress\\\"\\n                                            [(ngModel)]=\\\"adrs.shipping\\\"\\n                                            name=\\\"shipping\\\"\\n                                            #shipping=\\\"ngModel\\\"\\n                                            [settings]=\\\"dropdownSettings4\\\"\\n                                            (onSelect)=\\\"selectAddress($event)\\\"\\n                                            (onDeSelect)=\\\"selectAddress(adrs.shipping)\\\"\\n                                            >\\n                                        </ng-multiselect-dropdown>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            \\n                            <div class=\\\"row mt15\\\">\\n                                <div  class=\\\"col s4\\\">\\n                                    <div class=\\\"multi-all-select\\\">\\n                                        <label>Segment</label>\\n                                        <ng-multiselect-dropdown\\n                                        [placeholder]=\\\"'Select Segment'\\\"\\n                                        [data]=\\\"segmentList\\\"\\n                                        [(ngModel)]=\\\"data.segment\\\"\\n                                        name=\\\"segment\\\"\\n                                        #segment=\\\"ngModel\\\"\\n                                        [settings]=\\\"dropdownSettings1\\\"\\n                                        (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                                        (onDeSelect)=\\\"productList(data.segment,data.category)\\\"\\n                                        >\\n                                        \\n                                    </ng-multiselect-dropdown>\\n                                </div>\\n                            </div>                           \\n                            <div class=\\\"col s4\\\">\\n                                <div class=\\\"multi-all-select\\\">\\n                                    <label>Category</label>\\n                                    <ng-multiselect-dropdown\\n                                    [placeholder]=\\\"'Select Category'\\\"\\n                                    [data]=\\\"category_list\\\"\\n                                    [(ngModel)]=\\\"data.category\\\"\\n                                    name=\\\"category\\\"\\n                                    #category=\\\"ngModel\\\"\\n                                    [settings]=\\\"dropdownSettings2\\\"\\n                                    (onSelect)=\\\"productList(data.segment,data.category)\\\"\\n                                    (onDeSelect)=\\\"productList(data.segment,data.category)\\\"\\n                                    >\\n                                </ng-multiselect-dropdown>\\n                            </div>\\n                        </div>                                \\n                        <div   class=\\\"col s4 \\\">\\n                            <div class=\\\"multi-all-select\\\">\\n                                <label>Product Name</label>\\n                                <ng-multiselect-dropdown\\n                                [placeholder]=\\\"'Select Product'\\\"\\n                                [data]=\\\"ProductName_list\\\"\\n                                [(ngModel)]=\\\"data.product\\\"\\n                                name=\\\"product\\\"\\n                                #product=\\\"ngModel\\\"\\n                                [settings]=\\\"dropdownSettings3\\\"\\n                                (onSelect)=\\\"getCartProductList(data.segment,data.category,data.product)\\\"\\n                                (onDeSelect)=\\\"getCartProductList(data.segment,data.category,data.product)\\\">\\n                            </ng-multiselect-dropdown>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n            </div>\\n        </div>\\n    </div>\\n    \\n    <div >\\n        <!-- <div class=\\\"row\\\">\\n            <div class=\\\"col s4\\\">\\n                <div class=\\\"territory-info \\\">\\n                    <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.subcategory==true}\\\">\\n                        <h2>SEGMENT</h2>\\n                        <i class=\\\"material-icons search-icon right20\\\" (click)=\\\"toggleterritory('subcategory','open')\\\"  matRipple>search</i>\\n                        <input type=\\\"text\\\" placeholder=\\\"search...\\\" id=\\\"subcategory\\\" (input)=\\\"segmentSearch()\\\" name=\\\"search\\\" [(ngModel)]=\\\"segsearch.search\\\" class=\\\"fix-search\\\">\\n                        <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('subcategory','close')\\\" matRipple>clear</i>\\n                    </div>\\n                    <div class=\\\"cs-checkbox\\\">\\n                        <div class=\\\"checkbox-outer\\\">\\n                            <section class=\\\"checkbox-inner\\\"  >\\n                                <mat-radio-button class=\\\"check-list category-bg\\\" name=\\\"segment\\\" (change)=\\\"productList(data.category,segment.value)\\\"(change)=\\\"selectedItem(segment.value,'','','')\\\" *ngFor=\\\"let segment of segmentList\\\" value=\\\"{{segment.value}}\\\">{{segment.text}}</mat-radio-button>\\n                            </section>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"col s4\\\">\\n                <div class=\\\"territory-info \\\">\\n                    <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.category==true}\\\">\\n                        <h2>CATEGORY</h2>\\n                        <i class=\\\"material-icons search-icon right20\\\" (click)=\\\"toggleterritory('category','open')\\\"  matRipple>search</i>\\n                        <input type=\\\"text\\\" placeholder=\\\"search...\\\" id=\\\"category\\\" (input)=\\\"categorySearch()\\\" name=\\\"search\\\" [(ngModel)]=\\\"catsearch.search\\\" class=\\\"fix-search\\\">\\n                        <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('category','close')\\\" matRipple>clear</i>\\n                    </div>\\n                    <div class=\\\"cs-checkbox\\\">\\n                        <div class=\\\"checkbox-outer\\\">\\n                            <section class=\\\"checkbox-inner\\\">\\n                                <mat-radio-button class=\\\"check-list category-bg\\\"  (change)=\\\"productList(cat.value,data.segment)\\\" (change)=\\\"selectedItem('',cat.value,'','')\\\" *ngFor=\\\"let cat of category_list\\\" name=\\\"category\\\"  value={{cat.value}}>{{cat.text}}</mat-radio-button>\\n                            </section>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col s4\\\">\\n                <div class=\\\"territory-info \\\">\\n                    <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.series1==true}\\\">\\n                        <h2>Product Name</h2>\\n                        <i class=\\\"material-icons search-icon right20\\\" (click)=\\\"toggleterritory('series1','open')\\\"  matRipple>search</i>\\n                        <input type=\\\"text\\\" placeholder=\\\"search...\\\" id=\\\"series1\\\" (input)=\\\"subSegmentSearch()\\\" name=\\\"search\\\" [(ngModel)]=\\\"subsegsearch.search\\\" class=\\\"fix-search\\\">\\n                        <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('series1','close')\\\" matRipple>clear</i>\\n                    </div>\\n                    <div class=\\\"cs-checkbox\\\">\\n                        <div class=\\\"checkbox-outer\\\">\\n                            <section class=\\\"checkbox-inner\\\" >\\n                                <mat-checkbox class=\\\"check-list category-bg\\\" name=\\\"subSegment\\\" (change)=\\\"getCartProductList($event,data.category,data.segment,product.productName)\\\" (change)=\\\"selectedItem('','',product.productName,$event)\\\"*ngFor=\\\"let product of product_list;let index=index\\\" value=\\\"{{product.productName}}\\\">{{product.productName}}</mat-checkbox>\\n                            </section>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n        </div> -->\\n        \\n        <div class=\\\"sprate-box mb20 mt20\\\">\\n            <div class=\\\"row mb0\\\">\\n                <div class=\\\"col s4 ml0\\\">\\n                    <div class=\\\"upload-excel\\\">\\n                        <label>\\n                            <input multiple=\\\"\\\" style=\\\"display: none;\\\" name=\\\"attachment\\\" type=\\\"file\\\" id=\\\"selectfile\\\"  (change)=\\\"incomingfile('selectfile',$event)\\\" required >\\n                            <div class=\\\"outer\\\">\\n                                <div class=\\\"innear\\\">\\n                                    <i class=\\\"material-icons upload-ic\\\" >cloud_upload</i>\\n                                    <p>Import Attachment</p>\\n                                </div>\\n                            </div>\\n                        </label>\\n                        <p></p>\\n                    </div>\\n                </div>\\n                <div class=\\\"col s8 text-right\\\">\\n                    <div class=\\\"cs-btn\\\">\\n                        <div *ngIf=\\\"productlist.length!=0\\\" class=\\\"in-btn\\\">\\n                            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"downloadFile()\\\" >\\n                                <i class=\\\"material-icons\\\">cloud_download</i> Download\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        \\n        <div  *ngIf=\\\"productlist.length!=0 || productdiv==true\\\" class=\\\"col s12 padding0\\\">\\n            <div class=\\\"heading-bg left-right-15 mb0\\\">\\n                <h2>PRODUCT INFORMATION</h2>\\n            </div>\\n            <div class=\\\"cs-table left-right-15\\\">\\n                <div class=\\\"table-head pr28\\\">\\n                    <table>\\n                        <tr>\\n                            <th class=\\\"w30\\\"></th>\\n                            <th class=\\\"w150\\\">Part Number</th>\\n                            <th >Product Model</th>\\n                            <th class=\\\"w70\\\">Min. Qty</th>\\n                            <th class=\\\"w80\\\">Order Qty</th>\\n                            <th class=\\\"w80\\\">Pending Order</th>\\n                            <th class=\\\"w90 text-right\\\">Price</th>\\n                            <th class=\\\"w100 \\\">Price Support</th>\\n                            <th class=\\\"w100 \\\">Net Item Value</th>\\n                            <th class=\\\"w120\\\">Net Order Value</th>\\n                            <th class=\\\"w55\\\">GST %</th>\\n                            <th class=\\\"w70\\\">Scheme</th>\\n                        </tr>\\n                    </table>\\n                </div>\\n                <div class=\\\"table-head bdrt pr28\\\" >\\n                    <table>\\n                        <tr>\\n                            <th class=\\\"w30\\\"></th>\\n                            <th class=\\\"w130\\\">\\n                                <div class=\\\"th-search-acmt\\\">\\n                                    <mat-form-field>\\n                                        <input type=\\\"text\\\"  name=\\\"search\\\" [(ngModel)]=\\\"productName.search\\\" (input)=\\\"productSearchByNumber(productName.search,modelName.search)\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\n                                        <mat-autocomplete #auto1=\\\"matAutocomplete\\\" >\\n                                        </mat-autocomplete>\\n                                    </mat-form-field> \\n                                </div>\\n                            </th>\\n                            <th >\\n                                <div class=\\\"th-search-acmt\\\">\\n                                    <mat-form-field>\\n                                        <input type=\\\"text\\\"  name=\\\"search\\\" [(ngModel)]=\\\"modelName.search\\\" (input)=\\\"productSearchByNumber(productName.search,modelName.search)\\\"  matInput [matAutocomplete]=\\\"auto4\\\">\\n                                        <mat-autocomplete #auto4=\\\"matAutocomplete\\\" >\\n                                        </mat-autocomplete>\\n                                    </mat-form-field>\\n                                </div>\\n                            </th>\\n                            <th class=\\\"w70\\\">&nbsp;</th>\\n                            <th class=\\\"w80\\\">&nbsp;</th>\\n                            <th class=\\\"w80\\\">&nbsp;</th>\\n                            <th class=\\\"w90\\\">&nbsp;</th>\\n                            <th class=\\\"w100\\\">&nbsp;</th>\\n                            <th class=\\\"w100\\\">&nbsp;</th>\\n                            <th class=\\\"w120\\\">&nbsp;</th>\\n                            <th class=\\\"w55\\\">&nbsp;</th>\\n                            <th class=\\\"w70\\\">&nbsp;</th>\\n                            \\n                        </tr>\\n                    </table>\\n                </div>\\n                \\n                <div *ngIf=\\\"productdiv==true\\\" class=\\\"table-container \\\">\\n                    <div class=\\\"table-content height-scroll\\\">\\n                        <table>\\n                            <tr *ngFor=\\\"let product of productlist;let index=index\\\">\\n                                <td class=\\\"w30\\\"><span *ngIf=\\\"product.ifcheck\\\"><mat-checkbox  name=\\\"datacheck\\\" [checked]=\\\"product.datacheck\\\"  (change)=\\\"addCart(product,index,$event)\\\" >&nbsp; </mat-checkbox></span></td>\\n                                <td class=\\\"w130\\\">{{product.partNumber}}</td>\\n                                <td  >{{product.model}}</td>\\n                                <td class=\\\"w70\\\">{{product.moq}}</td>\\n                                <td class=\\\"w80\\\">\\n                                    <div class=\\\"td-input\\\">\\n                                        <input type=\\\"number\\\" (keyup.enter)=\\\"addToMyCart(index)\\\" (change)=\\\"checkValidate(index)\\\" (input)=\\\"selectProduct(index)\\\" (input)=\\\"calculateAmount(product.moq,product.quantity,index)\\\" name=\\\"qty\\\" #quantity=\\\"ngModel\\\" [(ngModel)]=\\\"product.quantity\\\" required>\\n                                    </div>\\n                                </td>\\n                                <td class=\\\"w80\\\" >\\n                                    <a class=\\\"link-btn\\\" (click)=\\\"pendingOrder(product.productId)\\\" >{{product.pendingQty}}</a>\\n                                </td>\\n                                <td class=\\\"w90\\\" >&#8377; {{product.discountedListPrice}}</td>\\n                                <td class=\\\"w100\\\" >&#8377; {{product.priceSupport}}</td>\\n                                <!-- <td class=\\\"w100\\\">\\n                                    <div class=\\\"td-input\\\">\\n                                        <input type=\\\"number\\\" readonly name=\\\"priceSupport\\\" #priceSupport=\\\"ngModel\\\" (keyup.enter)=\\\"calculatePriceSupport(index,product.priceSupport)\\\" [(ngModel)]=\\\"product.priceSupport\\\" required>\\n                                    </div>\\n                                </td> -->\\n                                <td class=\\\"w100\\\" >&#8377; {{product.itemValue}}</td>\\n                                <td class=\\\"w120\\\">&#8377; {{product.amount}}</td>\\n                                <td class=\\\"w55\\\">{{product.gstPercentage}} %</td>\\n                                <td class=\\\"w70 \\\" (click)=\\\"SchemeDetail(product.partNumber,index)\\\">\\n                                    <div *ngIf=\\\"product.schemeCount!=0\\\" class=\\\"icons-list\\\">\\n                                        <i class=\\\"material-icons check\\\">check_circle </i>\\n                                        <i class=\\\"material-icons forword\\\">keyboard_arrow_right </i>\\n                                        <!-- <i *ngIf=\\\"product.schemeCount==0\\\" class=\\\"material-icons close\\\">clear </i> -->\\n                                    </div>\\n                                    \\n                                </td>  \\n                            </tr>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"data-not-available\\\" *ngIf=\\\"productlist.length==0\\\">\\n                        <div class=\\\"outer\\\">\\n                            <div class=\\\"iinear\\\">\\n                                <div class=\\\"figure\\\" matRipple>\\n                                    <div class=\\\"header\\\">\\n                                        <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                    </div>\\n                                    \\n                                    <div class=\\\"description\\\">\\n                                        <div class=\\\"cs-heading\\\">\\n                                            <h2>No Product</h2>\\n                                        </div>\\n                                        <div class=\\\"img\\\">\\n                                            <i class=\\\"material-icons\\\">error_outline</i>\\n                                        </div>\\n                                        <div class=\\\"psc\\\">\\n                                            <p>data not available</p>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"cs-btn mt20 text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                    <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"tmp_orderDetail.length==0\\\" (click)=\\\"addToCart()\\\" >Add to Cart</button>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"col s12 padding0\\\">\\n            \\n            <div class=\\\"heading-bg left-right-15\\\">\\n                <h2>Product In Cart</h2>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col s12\\\">\\n                    <div class=\\\"cs-table left-right-15\\\">\\n                        <div class=\\\"table-head\\\">\\n                            <table>\\n                                <tr>\\n                                    <th class=\\\"w110\\\">Category</th>\\n                                    <th class=\\\"w110\\\">Items</th>\\n                                    <th class=\\\"w110\\\">Net Order Value</th>\\n                                    <!-- <th class=\\\"w80\\\">Action</th> -->\\n                                </tr>\\n                            </table>\\n                        </div>\\n                        <div class=\\\"table-container\\\">\\n                            <div class=\\\"table-content\\\">\\n                                <table>\\n                                    <tr *ngFor=\\\"let order of tmp_array;let i=index\\\">\\n                                        <td class=\\\"w110\\\"><a mat-button class=\\\"link-btn\\\" (click)=\\\"productDetail(order.category)\\\" >{{order.category}}</a></td>\\n                                        <td class=\\\"w110\\\">{{order.quantity}}</td>\\n                                        <td class=\\\"w110\\\">{{order.amount}}</td>\\n                                        <!-- <td class=\\\"w80 text-center\\\">\\n                                            <a class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons red-clr\\\"(click)=\\\"removeFromCart(i)\\\">delete_forever</i></a>\\n                                        </td> -->\\n                                        \\n                                    </tr>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        \\n                    </div>\\n                </div>\\n            </div>\\n            \\n            \\n            <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col s6\\\">\\n                        <div class=\\\"details-info pt0\\\">\\n                            <div class=\\\"basic-details \\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col s12 padding0 cs-figure\\\">\\n                                        <h2>CREDIT LIMIT</h2>\\n                                        <ul>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Limit</span>\\n                                                        <p>{{distributorDetail.creditLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Used</span>\\n                                                        <p>{{distributorDetail.creditUsed | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balanced</span>\\n                                                        <p>{{distributorDetail.creditBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"row mt15\\\">\\n                                    <div class=\\\"col s12 padding0 cs-figure\\\">\\n                                        <h2>Target Info</h2>\\n                                        <ul *ngIf=\\\"currentMonth==1\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.janTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.janTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.janTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul>\\n                                        <ul *ngIf=\\\"currentMonth==2\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.febTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.febTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.febTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul>\\n                                        <ul *ngIf=\\\"currentMonth==3\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.marTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.marTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.marTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul> \\n                                        <ul *ngIf=\\\"currentMonth==4\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.aprTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.aprTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.aprTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul>\\n                                        <ul *ngIf=\\\"currentMonth==5\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.mayTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.mayTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.mayTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul> \\n                                        <ul *ngIf=\\\"currentMonth==6\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.junTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.junTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.junTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul> \\n                                        <ul *ngIf=\\\"currentMonth==7\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.julTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.julTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.julTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul> \\n                                        <ul *ngIf=\\\"currentMonth==8\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.augTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.augTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.augTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul> \\n                                        <ul *ngIf=\\\"currentMonth==9\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.sepTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.sepTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.sepTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul>\\n                                        <ul *ngIf=\\\"currentMonth==10\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.octTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.octTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.octTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul>\\n                                        <ul *ngIf=\\\"currentMonth==11\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.novTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.novTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.novTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul>\\n                                        <ul *ngIf=\\\"currentMonth==12\\\">\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>{{current_month}} Target</span>\\n                                                        <p>{{monthleyTarget.decTargetLimit | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Achived</span>\\n                                                        <p>{{monthleyTarget.decTargetAchieved | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                            <li>\\n                                                <div class=\\\"outer\\\">\\n                                                    <div class=\\\"inner\\\">\\n                                                        <span>Balance</span>\\n                                                        <p>{{monthleyTarget.decTargetBalanced | currency: 'INR':true}}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s6\\\">\\n                        <div class=\\\"invoice-details\\\">\\n                            <table class=\\\"invoice-table\\\">\\n                                <tr>\\n                                    <td class=\\\"td\\\">Total Quantity</td>\\n                                    <td class=\\\"w200 td\\\">{{itemTotel}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td class=\\\"td\\\">Basic Total</td>\\n                                    <td class=\\\"td\\\"> {{subTotal | currency: 'INR':true}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td class=\\\"td\\\">GST</td>\\n                                    <td class=\\\"td\\\"> {{gstTotal | currency: 'INR':true}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td class=\\\"td\\\">Grand Total</td>\\n                                    <td class=\\\"td\\\"> {{grandTotal | currency: 'INR':true}}</td>\\n                                </tr>\\n                            </table>\\n                        </div>\\n                        \\n                        <div class=\\\"control-field wp70\\\" style=\\\"float: right;\\\">\\n                            <mat-form-field class=\\\"cs-input\\\">\\n                                <input matInput placeholder=\\\"Enter Remark\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"data.remarks\\\" class=\\\"h110\\\" style=\\\"background: #fff;\\\">\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col s12\\\">\\n                <div class=\\\"cs-btn mt32 text-right\\\">\\n                    <div class=\\\"in-btn  mr15\\\">\\n                        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"SaveOrder()\\\" >Save As Draft</button>\\n                    </div>\\n                    <div class=\\\"in-btn\\\">\\n                        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"SubbmitOrder()\\\" [disabled]=\\\"orderDetail.length==0\\\" >Place Order</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n</div>\\n<!-- <div class=\\\"fix-btn\\\">\\n    \\n    <a  matTooltip=\\\"Download Sample File\\\"  matTooltipPosition=\\\"left\\\" href=\\\"http://nextstep.net.in/kenshin/sampleFile.xlsx\\\" >\\n        <i class=\\\"material-icons\\\">arrow_downward</i>\\n    </a>\\n</div> -->\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2VkaXQtb3JkZXIvZWRpdC1vcmRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\nimport { ListOrderComponent } from '../list-order/list-order.component';\nimport { MatDialog } from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { OtherAddressComponent } from '../other-address/other-address.component';\nimport * as $ from 'jquery';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'ts-xlsx';\nimport * as moment from 'moment';\nimport { SchemepopupComponent } from '../schemepopup/schemepopup.component';\nimport { PendingOrderComponent } from '../pending-order/pending-order.component';\n@Component({\n  selector: 'app-edit-order',\n  templateUrl: './edit-order.component.html',\n  styleUrls: ['./edit-order.component.scss']\n})\nexport class EditOrderComponent implements OnInit {\n\n  order_id:any;\n  loader:any=false;\n  order_data:any={};\n  category_list:any=[];\n  tmp_categoryList\n  segmentList:any=[];\n  tmp_segmentList:any=[];\n  data:any={};\n  product_list:any=[];\n  tmpproduct_list:any=[];\n  segsearch:any=[];\n  catsearch:any=[];\n  subsegsearch:any=[];\n  productName:any=[];\n  modelName:any=[];\n  tmp_orderDetail:any=[];\n  productlist:any=[];\n  tmpProductList:any=[];\n  cartProductList:any=[];\n  tmp_array:any=[];\n  finel_Array=[];\n  tmporderArray=[];\n  orderDetail=[];\n  cartArray:any=[];\n  itemTotel:any=0\nsubTotal:any=0\ngrandTotal:any=0;\ngstTotal:any=0;\nuser:any={}\nuserType:any;\nuserId:any;\nuserRole:any;\nnetworkId:any;\ndropdownSettings1:any = {};\ndropdownSettings2:any = {};\ndropdownSettings3:any = {};\ndropdownSettings4:any = {};\ncurrentMonth:any= moment().format('M');\ncurrent_month:any=moment().format('MMMM');\n  constructor(public route:ActivatedRoute,public toast:SnackBarOverview,public rout:Router, public dialog: MatDialog,public service:ConstantService,public alrt:DialogComponent) {\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n\n    this.route.params.subscribe(params=>{\n      console.log(params);\n      this.order_id = params.id;\n      if(this.order_id)\n      {\n        this.order_detail();\n        this.categoryList();\n        this.getSegmentList();\n      }\n      if(this.userType==3)\n      {\n        this.networkId=this.user.data.distributerNetwork.networkId;\n        this.data.distributor=this.networkId;\n         console.log(this.networkId);\n         if(this.networkId)\n         {\n          //  this.openOrderDiv(this.networkId);\n         }\n        //  this.orderDiv=true;\n      }\n      console.log(this.order_id);\n     });\n   }\n\n  ngOnInit() {\n    this.dropdownSettings1 = {\n      singleSelection: true,\n  closeDropDownOnSelection:true,\n  idField: 'value',\n      textField: 'text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings2 = {\n      singleSelection: true,\n  closeDropDownOnSelection:true,\n  idField: 'value',\n      textField: 'text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings3 = {\n      singleSelection: true,\n      idField: 'productName',\n      textField: 'productName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    }; \n    this.dropdownSettings4 = {\n  closeDropDownOnSelection:true,\n  singleSelection: true,\n      idField: 'shippingAddressId',\n      textField: 'shipping',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };  \n  }\n\n  active:any = {};\n  toggleterritory(key,action)\n  {\n    console.log(action);\n    console.log(key);\n    \n    if(action == 'open')\n    { this.active[key] = true;\n      $('#'+key).focus();\n     }\n    if(action == 'close')\n    { this.active[key] = false;}\n\n    console.log(this.active);\n  }\n\n  ExcelUploadOrder1:any=[];\n  attachment:any={};\n  files: FileList; \n  filestring: string; \n//   uploadFile(event) { \n//       this.files = event.target.files; \n//       var reader = new FileReader(); \n//       reader.onload = this._handleReaderLoaded.bind(this); \n//       reader.readAsBinaryString(this.files[0]); \n//   } \n\n//   _handleReaderLoaded(readerEvt) { \n//       var binaryString = readerEvt.target.result; \n//       this.filestring = btoa(binaryString);\n//       this.attachment.attachment=this.filestring;\n      \n//       console.log(this.attachment);\n          \n//       this.service.fetchData(this.attachment,\"order/generate\").subscribe((result)=>{\n//         console.log(result);\n//         if(result['status']=='Success')\n//         {\n//           this.ExcelUploadOrder1=result['data'];\n//           if(this.ExcelUploadOrder1.length!=0)\n//           {\n//             for(let i=0;i<this.ExcelUploadOrder1.length;i++)\n//             {\n//               console.log(parseFloat(this.ExcelUploadOrder1[i].quantity),parseFloat(this.ExcelUploadOrder1[i].moq));\n//                this.ExcelUploadOrder1[i].gstamount=(parseFloat(this.ExcelUploadOrder1[i]['discountedListPrice'])*parseFloat(this.ExcelUploadOrder1[i]['gstPercentage'])/100)*parseFloat(this.ExcelUploadOrder1[i]['quantity']);\n              \n//               if(parseFloat(this.ExcelUploadOrder1[i].quantity) % parseFloat(this.ExcelUploadOrder1[i].moq)!=0)\n//               {\n//                 console.log(\"hghghg\");\n                \n//                 this.alrt.alertWarning(\"Order Quantity multiple of \"+this.ExcelUploadOrder1[i].moq);\n//                 break;\n//               }\n//               else\n//               {\n//                   this.cartArray.push({\n//                     \"gstPercentage\":this.ExcelUploadOrder1[i]['gstPercentage'],\n//                     \"productId\":this.ExcelUploadOrder1[i]['productId'],\n//                     \"partNumber\":this.ExcelUploadOrder1[i]['partNumber'],\n//                     \"category\":this.ExcelUploadOrder1[i]['category'],\n//                     \"segment\":this.ExcelUploadOrder1[i]['segment'],\n//                     \"model\":this.ExcelUploadOrder1[i]['model'],\n//                     \"oem\":this.ExcelUploadOrder1[i]['oem'],\n//                     \"moq\":this.ExcelUploadOrder1[i]['moq'],\n//                     \"quantity\":parseFloat(this.ExcelUploadOrder1[i]['quantity']),\n//                     \"discountedListPrice\":this.ExcelUploadOrder1[i]['discountedListPrice'],\n//                     \"priceSupport\":0,\n//                     \"itemValue\":this.ExcelUploadOrder1[i]['discountedListPrice'],\n//                     \"amount\":parseFloat(this.ExcelUploadOrder1[i]['quantity'])*parseFloat(this.ExcelUploadOrder1[i]['discountedListPrice']),\n//                     \"gstamount\":this.ExcelUploadOrder1[i]['gstamount']\n//                   });\n//                   if(i==this.ExcelUploadOrder1.length-1)\n//                   {\n//                     this.alrt.success();\n//                     this.showInCart(this.cartArray);\n//                   }\n//               }\n        \n//             }\n//           }\n//         }\n//       })\n//  } \n\n  ExcelUploadOrder:any=[];\n  order_detail(){\n    this.loader=true;\n    this.service.fetchData({'orderId':this.order_id},'order/list').subscribe((response)=>{\n      console.log(response);  \n      this.loader=false;\n     if(response['status']=='Success')\n     {\n      this.order_data = response['data'][0];\n      \n      this.data.shippingAddressId=this.order_data.shippingAddressId;\n      console.log(this.order_data);\n      this.SelectedDistributorDetail(0);\n     }\n     if(response['status']=='Success')\n     {\n       this.ExcelUploadOrder=this.order_data.orderDetail;\n       if(this.ExcelUploadOrder.length!=0)\n       {\n         for(let i=0;i<this.ExcelUploadOrder.length;i++)\n         {\n           console.log(parseFloat(this.ExcelUploadOrder[i].quantity),parseFloat(this.ExcelUploadOrder[i].moq));\n            this.ExcelUploadOrder[i].gstamount=(parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])*parseFloat(this.ExcelUploadOrder[i]['gstPercentage'])/100)*parseFloat(this.ExcelUploadOrder[i]['quantity']);\n           \n           if(parseFloat(this.ExcelUploadOrder[i].quantity) % parseFloat(this.ExcelUploadOrder[i].moq)!=0)\n           {\n             console.log(\"hghghg\");\n             \n             this.alrt.alertWarning(\"Order Quantity multiple of \"+this.ExcelUploadOrder[i].moq);\n             break;\n           }\n           else\n           {\n               this.cartArray.push({\n                 \"gstPercentage\":this.ExcelUploadOrder[i]['gstPercentage'],\n                 \"productId\":this.ExcelUploadOrder[i]['productId'],\n                 \"partNumber\":this.ExcelUploadOrder[i]['partNumberCode'],\n                 \"category\":this.ExcelUploadOrder[i]['category'],\n                 \"segment\":this.ExcelUploadOrder[i]['segment'],\n                 \"model\":this.ExcelUploadOrder[i]['model'],\n                 \"oem\":this.ExcelUploadOrder[i]['oem'],\n                 \"moq\":this.ExcelUploadOrder[i]['moq'],\n                 \"quantity\":parseFloat(this.ExcelUploadOrder[i]['quantity']),\n                 \"discountedListPrice\":this.ExcelUploadOrder[i]['discountedListPrice'],\n                 \"priceSupport\":0,\n                 \"itemValue\":this.ExcelUploadOrder[i]['itemValue'],\n                 \"amount\":parseFloat(this.ExcelUploadOrder[i]['quantity'])*parseFloat(this.ExcelUploadOrder[i]['discountedListPrice']),\n                 \"gstamount\":this.ExcelUploadOrder[i]['gstamount']\n               });\n               if(i==this.ExcelUploadOrder.length-1)\n               {\n    this.toast.openSucess(\"Add to cart SuccessFully\",'');\n    //  this.alrt.success();\n                 this.showInCart(this.cartArray);\n               }\n           }\n     \n         }\n       }\n     }\n    });\n\n  }\n  tmpShippingAddress:any=[];\n  tmpShipping:any=[];\n  distributorDetail:any=[];\n  shippingAddress:any=[];\n  monthleyTarget:any=[];\n  SelectedDistributorDetail(val:any)\n  {\n    this.data.distributor=this.order_data.networkId;\n    this.service.fetchData({'networkId': this.order_data.networkId},\"network/list\").subscribe((result=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.distributorDetail=result['data'][0];\n        this.tmpShipping=this.distributorDetail['shippingAddresses'];\n        this.monthleyTarget=this.distributorDetail.networkLimits[0];\n\n\n      }\n     \n      // for(let j=0;j<this.tmpShipping.length;j++)\n      // {\n      //   this.tmpShippingAddress.push({\"shipping\":this.tmpShipping[j]['city']+','+this.tmpShipping[j]['district']+','+this.tmpShipping[j]['state']+','+this.tmpShipping[j]['pin'],\"shippingAddressId\":this.tmpShipping[j]['shippingAddressId']})\n      // } \n      // console.log(this.tmpShippingAddress);\n\n      // let shipId=this.tmpShippingAddress.findIndex(row => row.shippingAddressId==this.order_data.shippingAddressId);\n      \n      // this.adrs.shipping=this.tmpShippingAddress[shipId].shipping;\n      // this.data.shippingAddressId=this.tmpShippingAddress[shipId].shippingAddressId;\n      // if(val==1)\n      // {\n      //   this.adrs.shipping=this.tmpShippingAddress[this.tmpShippingAddress.length-1].shipping;\n      //   this.data.shippingAddressId=this.tmpShippingAddress[this.tmpShippingAddress.length-1].shippingAddressId;\n      //   console.log(this.adrs.shipping);\n        \n      // }\n      const shippingData = [];\n\n      for(let j=0;j<this.tmpShipping.length;j++)\n      {\n          shippingData.push({\"shipping\":this.tmpShipping[j]['city']+','+this.tmpShipping[j]['district']+','+this.tmpShipping[j]['state']+','+this.tmpShipping[j]['pin'],\"shippingAddressId\":this.tmpShipping[j]['shippingAddressId']});\n      }\n\n      shippingData.push({\"shipping\":'Other Adrress',\"shippingAddressId\": 'Other'});\n\n      this.adrs.shipping = [];\n      this.tmpShippingAddress = shippingData;\n      console.log(this.tmpShippingAddress);\n      let shipId=shippingData.findIndex(row => row.shippingAddressId==this.order_data.shippingAddressId);\n\n      if(shippingData.length > 1 && val==0) {\n          this.adrs.shipping.push(shippingData[shipId]);\n          this.data.shippingAddressId=shippingData[shipId].shippingAddressId;\n      }\n      if(val==1)\n      {\n        this.adrs.shipping.push(shippingData[shippingData.length-2]);\n        this.data.shippingAddressId=shippingData[shippingData.length-2].shippingAddressId;\n\n      }\n    }))\n  }\n\n  otherAddress(id)\n  {\n    const dialogRef = this.dialog.open(OtherAddressComponent, {\n      width: '800px',\n         data:{\n           id\n         }});\n         dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n        if(result==false)\n        {\n          this.SelectedDistributorDetail(0);\n\n        }\n        else{\n          this.SelectedDistributorDetail(1);\n\n        }\n      });\n  }\n  adrs:any={}\n  // selectAddress(id,index)\n  // {\n  //   console.log(id);\n  //   console.log(this.adrs.shipping);\n    \n  //   this.data.shippingAddressId=id;\n  // }\n  selectAddress(id)\n  {\n \n     console.log(id);\n     if(id!='') \n     { \n      if(id.shippingAddressId=='Other')\n     {\n       console.log(this.data.networkId);\n       if(this.userType==3)\n       {\n         this.otherAddress(this.order_data.networkId);\n       }\n       else{\n \n         this.otherAddress(this.order_data.networkId)\n       }\n     }\n     else{\n \n       this.data.shippingAddressId=id.shippingAddressId;\n     }\n    }\n    else\n    {\n      this.data.shippingAddressId=null;\n    }\n     console.log(this.data.shippingAddressId);\n  }\n\n\n  categoryList()\n  {\n    this.loader=true;\n    this.service.fileData(\"\",\"category/list\").subscribe((result)=>{\n      console.log(result);\n       setTimeout (() => {\n          this.loader=false;\n          \n      }, 700);\n      if(result['status']==\"Success\")\n      {\n        this.category_list=result['data'];\n        this.tmp_categoryList=this.category_list;\n      }\n    })\n  }\n\n  getSegmentList()\n  {\n    this.service.fileData('',\"segment/list\").subscribe((result=>{\n      console.log(result['data']);\n      if(result['status']==\"Success\")\n      {\n        this.segmentList=result['data'];\n        this.tmp_segmentList=this.segmentList;\n      }\n    }))\n  }\n\n  // productList(category,segment)\n  // {\n  //   this.loader=true;\n  //   this.data.category=category;\n  //   this.data.segment=segment;\n  //   console.log(this.data);\n    \n\n  //     this.service.fetchData({\"segmentCode\": this.data.segment,\"categoryCode\": this.data.category,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n  //     console.log(result);\n  //     setTimeout (() => {\n  //       this.loader=false;\n        \n  //   }, 700);\n  //     if(result)\n  //     {\n  //     this.product_list=result['data'];\n  //     this.tmpproduct_list=this.product_list;\n  //     }\n  //     })\n        \n  // }\n  tmpcat:any;\n\n  // productList(segment,category)\n  // {\n    \n    \n  //  let selectedCategory;\n  //  let selectedSegment;\n  //   this.tmpcat=category;\n  //   if(segment!=null || category!=null)\n  //   {\n  //     if(category!=null)\n  //     {\n  //       this.tmpcat=category;\n  //       if(this.tmpcat!=selectedCategory)\n  //       {\n  //         selectedCategory=category[0];\n  //         this.productlist=[];\n  //       }\n  //       else{\n  //         selectedCategory=category[0];\n  //       }\n  //       console.log(\"Not Null\");\n  //     }\n  //     if(segment!=null)\n  //     {\n  //       selectedSegment=segment[0];\n  //       console.log(\"Not Null\");\n  //     } \n  //   }\n  //   this.loader=true;\n  //   console.log(this.data.category);\n    \n\n  //     this.service.fetchData({\"networkId\":this.data.distributor,\"segmentCode\": selectedSegment,\"categoryCode\": selectedCategory ,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n  //     console.log(result);\n  //     setTimeout (() => {\n  //       this.loader=false;\n        \n  //   }, 700);\n  //   if(result)\n  //   {\n  //     this.product_list=[];\n\n  //     const productTempArr =result['data'];\n\n  //     for (let index = 0; index < productTempArr.length; index++) {\n             \n  //          const itemIndex =  this.product_list.findIndex(row => row.productName == productTempArr[index].productName);\n\n  //          if(itemIndex == -1) {\n  //              this.product_list.push(JSON.parse(JSON.stringify(productTempArr[index])));\n  //          }\n  //     }\n\n  //     this.tmpproduct_list=this.product_list;\n  //   }\n  //     })\n        \n  // }\n\n\n  // getCartProductList(event,category,segment,productname)\n  // {\n  //   if(event.checked)\n  //   {\n  //     this.loader=true;\n  //   console.log(segment,category,productname);\n  //   this.service.fetchData({\"segmentCode\":segment,\"categoryCode\":category,\"productName\":productname,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n  //     console.log(result);\n  //     this.loader=false;\n  //     if(result['status']=='Success')\n  //     {\n  //       this.cartProductList=result['data'];\n  //       for(let i=0;i<this.cartProductList.length;i++)\n  //       {\n  //         this.cartProductList[i].quantity=0;\n  //         // this.cartProductList[i].priceSupport=0;\n  //         this.cartProductList[i].ifcheck=false;\n          \n  //         this.cartProductList[i].itemValue=parseFloat(this.cartProductList[i].discountedListPrice)-parseFloat(this.cartProductList[i].priceSupport);\n  //         this.cartProductList[i].itemValue=parseFloat(this.cartProductList[i].discountedListPrice);\n  //         this.cartProductList[i].amount=parseFloat(this.cartProductList[i].quantity)*parseFloat(this.cartProductList[i].discountedListPrice);\n  //         this.cartProductList[i].gstamount=(parseFloat(this.cartProductList[i]['discountedListPrice'])*parseFloat(this.cartProductList[i]['gstPercentage'])/100)*parseFloat(this.cartProductList[i]['quantity']);\n  //       }\n  //       this.productlist=this.productlist.concat(this.cartProductList);\n  //       this.tmpProductList=this.productlist;\n  //     }\n  //   })\n  //   }\n  //   else{\n  //     for(let i=0;i<this.productlist.length;i++)\n  //     {\n  //       if(productname===this.productlist[i]['productName'])\n  //       {\n  //         this.productlist.splice(i,1);\n  //       }\n  //     }\n  //   }\n    \n  // }\n  // tmpproduct_list:any=[];\n  // tmpcat:any;\n  tmpseg:any;\n  selectedSegment:any;\n  ProductName_list:any=[];\n  productList(segment:any=[],category:any=[])\n  {\n    this.productdiv=true;\n    this.data.product=[];\n    this.ProductName_list=[];\n    let selectedCategory;\n    this.productlist=[]\n    // let selectedSegment;\n    \n    if(segment.length!=0 || category.length!=0)\n    {\n      if(category.length!=0)\n      {\n        this.tmpcat=category;\n        if(this.tmpcat!=selectedCategory)\n        {\n          selectedCategory=category[0];\n          this.productlist=[];\n        }\n        else{\n          selectedCategory=category[0];\n        }\n        console.log(\"Not Null\");\n      }\n      if(segment.length!=0)\n      {\n        this.tmpseg=segment[0];\n        if(this.tmpseg!=this.selectedSegment)\n        {\n          console.log(this.tmpseg);\n          console.log(this.selectedSegment);\n          \n          this.selectedSegment=segment[0];\n          this.productlist=[];\n          this.data.category=[];\n        }\n        else{\n\n          this.selectedSegment=segment[0];\n        }\n        console.log(\"Not Null\");\n      } \n    \n    \n    this.loader=true;\n    console.log(this.data.category);\n    \n    \n    this.service.fetchData({\"networkId\":this.data.distributor,\"segmentCode\": this.selectedSegment,\"categoryCode\": selectedCategory ,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n      console.log(result);\n      setTimeout (() => {\n        this.loader=false;\n        \n      }, 700);\n      if(result)\n      {\n        this.ProductName_list=[];\n\n        this.cartProductList=result['data'];\n        for(let i=0;i<this.cartProductList.length;i++)\n        {\n          this.cartProductList[i].quantity=0;\n          // this.cartProductList[i].priceSupport=0;\n          this.cartProductList[i].ifcheck=false;\n          \n          this.cartProductList[i].itemValue=parseFloat(this.cartProductList[i].discountedListPrice)-parseFloat(this.cartProductList[i].priceSupport);\n          this.cartProductList[i].amount=parseFloat(this.cartProductList[i].quantity)*parseFloat(this.cartProductList[i].itemValue);\n          this.cartProductList[i].gstamount=(parseFloat(this.cartProductList[i]['discountedListPrice'])*parseFloat(this.cartProductList[i]['gstPercentage'])/100)*parseFloat(this.cartProductList[i]['quantity']);\n        }\n\n        const productTempArr =this.cartProductList;\n\n        this.productlist=JSON.parse(JSON.stringify(this.cartProductList));\n        // JSON.parse(JSON.stringify(productTempArr))\n        console.log(this.productlist);\n        \n        for (let index = 0; index < productTempArr.length; index++) {\n             const itemIndex =  this.ProductName_list.findIndex(row => row.productName == productTempArr[index].productName);\n\n             if(itemIndex == -1) {\n                 this.ProductName_list.push(JSON.parse(JSON.stringify(productTempArr[index])));\n             }\n        }\n\n        this.tmpproduct_list=this.productlist;\n      }\n    })\n  }\n  else{\n    this.productlist=[];\n    this.ProductName_list=[];\n    this.cartProductList=[];\n  }\n  }\n  productdiv:any=false;\n  // productlist:any=[];\n  // tmpProductList:any=[];\n  // productdiv:any=false;\n  getCartProductList(segment,category,productname)\n  {\n    this.productdiv=true;\n    let selectedCategory;\n    let selectedSegment;\n    let selectedproduct;\n    this.productlist=[];\n    this.cartProductList=[];\n    this.tmpProductList=[];\n    console.log(productname);\n    \n    if(segment!=null || category!=null||productname!=null)\n    {\n      if(segment!=null)\n      {\n        selectedSegment=segment[0]\n      }\n      if(category!=null)\n      {\n        selectedCategory=category[0]\n      }\n      if(productname!=null)\n      {\n        selectedproduct=productname[productname.length-1]\n      }  \n      \n    }\n    // {\n    console.log(category,segment,productname);\n    \n    this.loader=true;\n    console.log(segment,category,productname);\n    this.service.fetchData({\"networkId\":this.data.distributor,\"segmentCode\":selectedSegment,\"categoryCode\":selectedCategory,\"productName\":selectedproduct,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.cartProductList=result['data'];\n\n\n\n      \n        for(let i=0;i<this.cartProductList.length;i++)\n        {\n          this.cartProductList[i].quantity=0;\n          // this.cartProductList[i].priceSupport=0;\n          this.cartProductList[i].ifcheck=false;\n          \n          this.cartProductList[i].itemValue=parseFloat(this.cartProductList[i].discountedListPrice)-parseFloat(this.cartProductList[i].priceSupport);\n          this.cartProductList[i].amount=parseFloat(this.cartProductList[i].quantity)*parseFloat(this.cartProductList[i].itemValue);\n          this.cartProductList[i].gstamount=(parseFloat(this.cartProductList[i]['discountedListPrice'])*parseFloat(this.cartProductList[i]['gstPercentage'])/100)*parseFloat(this.cartProductList[i]['quantity']);\n        }\n        this.productlist=this.productlist.concat(this.cartProductList);\n        this.tmpProductList=this.productlist;\n      }\n    })\n    \n    // else{\n    //   for(let i=0;i<this.productlist.length;i++)\n    //   {\n    //     if(productname===this.productlist[i]['productName'])\n    //     {\n    //       this.productlist.splice(i,1);\n    //     }\n    //   }\n    // }\n    \n  }\n\n  deselectProduct:any=[];\n  onDeSelect(segment,category,event)\n  {\n    console.log(segment,category,event);\n    this.service.fetchData({\"networkId\":this.data.distributor,\"segmentCode\":segment[0],\"categoryCode\":category[0],\"productName\":event,\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.deselectProduct=result['data'];\n        console.log(this.deselectProduct);\n        \n        for(let i=0;i<this.deselectProduct.length;i++)\n        {\n          this.productlist=this.productlist.filter(row=>row.productId!=this.deselectProduct[i].productId);\n          console.log(this.productlist);\n          \n        }\n\n      }\n    }) \n  }\n\n  segment:any=[];\n  category:any=[];\n  productNameList:any=[];\n\n  // selectedItem(segment,category,productName,event)\n  // {\n  //   if(segment!='')\n  //   {\n  //     this.segment=[];\n  //     this.segment.push(segment);\n\n  //   }\n  //   if(category!='')\n  //   {\n  //     this.category=[];\n  //     this.category.push(category);\n\n  //   }\n  //   if(productName!='')\n  //   {\n  //     if(event.checked)\n  //     {\n  //       this.productNameList.push(productName);\n\n  //     }\n  //     else{\n\n  //       let index=this.productNameList.findIndex(row=>row==productName)\n  //       this.productNameList.splice(index,1);\n\n  //     }\n\n  //   }\n  //   console.log(this.segment);\n  //   console.log(this.category);\n  //   console.log(this.productNameList);\n    \n    \n  // }\n  selectedItem(segment,category,productName)\n  {\n    if(segment!='')\n    {\n      this.segment=[];\n      this.segment.push(segment);\n\n    }\n    if(category!='')\n    {\n      this.category=[];\n      this.category.push(category);\n\n    }\n    if(productName!=null)\n    {\n\n      // if(event.checked)\n      // {\n        console.log(productName);\n        \n        this.productNameList=productName;\n      console.log(this.productNameList);\n      \n      // }\n      // else{\n\n      //   let index=this.productNameList.findIndex(row=>row==productName)\n      //   this.productNameList.splice(index,1);\n\n      // }\n\n    }\n    \n    \n  }\n    downloadFile()\n    {\n        console.log(\"function\");\n        this.service.excelFileData({\"segments\": this.segment,\"categories\":this.category,\"productNames\":this.productNameList},'order/excel').subscribe(result=> {  saveAs(result, 'OrderProductSheet.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n    \n        });\n    }\n\n  selectProduct(index)\n  {\n    this.productlist[index].ifcheck=true;\n    this.productlist[index].datacheck=true;\n  }\n  arrayBuffer:any;\nfile:File;\nincomingfile(id,event) \n  {\n    this.file= event.target.files[0]; \n    this.Upload();\n    $('#'+id).val('');\n}\nExcelArray:any=[];\ntmpExcelOrderArray:any=[];\npartNumberArray:any=[];\n//  Upload() {\n//       let fileReader = new FileReader();\n//         fileReader.onload = (e) => {\n//             this.arrayBuffer = fileReader.result;\n//             var data = new Uint8Array(this.arrayBuffer);\n//             var arr = new Array();\n//             for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n//             var bstr = arr.join(\"\");\n//             var workbook = XLSX.read(bstr, {type:\"binary\"});\n//             var first_sheet_name = workbook.SheetNames[0];\n//             var worksheet = workbook.Sheets[first_sheet_name];\n//             console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));\n//             this.ExcelArray=XLSX.utils.sheet_to_json(worksheet,{raw:true});\n//             for(let j=0;j<this.ExcelArray.length;j++)\n//             {\n//               this.partNumberArray.push(this.ExcelArray[j]['Part #']);\n//             }\n//             this.service.fetchData({\"partNumbers\":this.partNumberArray},\"product/list\").subscribe((result)=>{\n//              console.log(result);\n//              this.ExcelUploadOrder=result['data'];\n//              for(let k=0;k<this.ExcelUploadOrder.length;k++)\n//              {\n//                for(let i=0;i<this.ExcelArray.length;i++)\n//                {\n//                  if(this.ExcelArray[i]['Part #']==this.ExcelUploadOrder[k]['partNumber'])\n//                  {\n//                    this.ExcelUploadOrder[k].quantity=this.ExcelArray[i]['Order QTY'];\n//                  }\n//                }\n//              }\n//              console.log(this.ExcelUploadOrder);\n//              for(let i=0;i<this.ExcelUploadOrder.length;i++)\n//             {\n//               console.log(parseFloat(this.ExcelUploadOrder[i].quantity),parseFloat(this.ExcelUploadOrder[i].moq));\n//                this.ExcelUploadOrder[i].gstamount=(parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])*parseFloat(this.ExcelUploadOrder[i]['gstPercentage'])/100)*parseFloat(this.ExcelUploadOrder[i]['quantity']);\n              \n//               if(parseFloat(this.ExcelUploadOrder[i].quantity) % parseFloat(this.ExcelUploadOrder[i].moq)!=0)\n//               {\n//                 console.log(\"hghghg\");\n                \n//                 this.alrt.alertWarning(\"Order Quantity multiple of \"+this.ExcelUploadOrder[i].moq);\n//                 break;\n//               }\n//               else\n//               {\n//                   this.cartArray.push({\n//                     \"gstPercentage\":this.ExcelUploadOrder[i]['gstPercentage'],\n//                     \"productId\":this.ExcelUploadOrder[i]['productId'],\n//                     \"partNumber\":this.ExcelUploadOrder[i]['partNumber'],\n//                     \"category\":this.ExcelUploadOrder[i]['category'],\n//                     \"segment\":this.ExcelUploadOrder[i]['segment'],\n//                     \"model\":this.ExcelUploadOrder[i]['model'],\n//                     \"oem\":this.ExcelUploadOrder[i]['oem'],\n//                     \"moq\":this.ExcelUploadOrder[i]['moq'],\n//                     \"quantity\":parseFloat(this.ExcelUploadOrder[i]['quantity']),\n//                     \"discountedListPrice\":this.ExcelUploadOrder[i]['discountedListPrice'],\n//                     \"priceSupport\":this.ExcelUploadOrder[i]['priceSupport'],\n//                     \"itemValue\":parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])-parseFloat(this.ExcelUploadOrder[i]['priceSupport']),\n//                     \"amount\":parseFloat(this.ExcelUploadOrder[i]['quantity'])*(parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])-parseFloat(this.ExcelUploadOrder[i]['priceSupport'])),\n//                     \"gstamount\":this.ExcelUploadOrder[i]['gstamount']\n//                   });\n//                   if(i==this.ExcelUploadOrder.length-1)\n//                   {\n//                     this.toast.openSucess(\"\",\"Upload SuccessFully\");\n//                     this.showInCart(this.cartArray);\n//                   }\n//               }\n        \n//             }\n//            })\n\n//         }\n//         fileReader.readAsArrayBuffer(this.file);\n// }\nnotUploadPartNumber:any=[];\nUpload() {\n  let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n        this.arrayBuffer = fileReader.result;\n        var data = new Uint8Array(this.arrayBuffer);\n        var arr = new Array();\n        for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n        var bstr = arr.join(\"\");\n        var workbook = XLSX.read(bstr, {type:\"binary\"});\n        var first_sheet_name = workbook.SheetNames[0];\n        var worksheet = workbook.Sheets[first_sheet_name];\n        console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));\n        this.ExcelArray=XLSX.utils.sheet_to_json(worksheet,{raw:true});\n        for(let j=0;j<this.ExcelArray.length;j++)\n        {\n          this.partNumberArray.push(this.ExcelArray[j]['Part #']);\n        }\n        this.service.fetchData({\"partNumbers\":this.partNumberArray},\"product/list\").subscribe((result)=>{\n         console.log(result);\n         this.ExcelUploadOrder=result['data'];\n         for(let k=0;k<this.ExcelUploadOrder.length;k++)\n         {\n           for(let i=0;i<this.ExcelArray.length;i++)\n           {\n             if(this.ExcelArray[i]['Part #']==this.ExcelUploadOrder[k]['partNumber'])\n             {\n               this.ExcelUploadOrder[k].quantity=this.ExcelArray[i]['Order QTY'];\n             }\n           }\n         }\n         console.log(this.ExcelUploadOrder);\n         for(let i=0;i<this.ExcelUploadOrder.length;i++)\n        {\n          console.log(parseFloat(this.ExcelUploadOrder[i].quantity),parseFloat(this.ExcelUploadOrder[i].moq));\n           this.ExcelUploadOrder[i].gstamount=(parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])*parseFloat(this.ExcelUploadOrder[i]['gstPercentage'])/100)*parseFloat(this.ExcelUploadOrder[i]['quantity']);\n          \n           if(parseFloat(this.ExcelUploadOrder[i].quantity) % parseFloat(this.ExcelUploadOrder[i].moq)!=0 || parseFloat(this.ExcelUploadOrder[i].quantity)<parseFloat(this.ExcelUploadOrder[i].moq))\n          {\n            console.log(\"hghghg\");\n            this.notUploadPartNumber.push(this.ExcelArray[i]);\n\n          }\n          else\n          {\n              this.cartArray.push({\n                \"gstPercentage\":this.ExcelUploadOrder[i]['gstPercentage'],\n                \"productId\":this.ExcelUploadOrder[i]['productId'],\n                \"partNumber\":this.ExcelUploadOrder[i]['partNumber'],\n                \"category\":this.ExcelUploadOrder[i]['category'],\n                \"segment\":this.ExcelUploadOrder[i]['segment'],\n                \"model\":this.ExcelUploadOrder[i]['model'],\n                \"oem\":this.ExcelUploadOrder[i]['oem'],\n                \"moq\":this.ExcelUploadOrder[i]['moq'],\n                \"quantity\":parseFloat(this.ExcelUploadOrder[i]['quantity']),\n                \"discountedListPrice\":this.ExcelUploadOrder[i]['discountedListPrice'],\n                \"priceSupport\":this.ExcelUploadOrder[i]['priceSupport'],\n                \"itemValue\":parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])-parseFloat(this.ExcelUploadOrder[i]['priceSupport']),\n                \"amount\":parseFloat(this.ExcelUploadOrder[i]['quantity'])*(parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])-parseFloat(this.ExcelUploadOrder[i]['priceSupport'])),\n                \"gstamount\":this.ExcelUploadOrder[i]['gstamount']\n              });\n              \n          }\n          if(i==this.ExcelUploadOrder.length-1)\n              {\n                this.toast.openSucess(\"Product Sheet\",\"Upload SuccessFully\");\n                 console.log(this.notUploadPartNumber);\n                 if(this.notUploadPartNumber.length!=0)\n                 {\n                   this.service.exportAsExcelFile(this.notUploadPartNumber, 'Product Error Sheet');\n                   this.alrt.alertWarning(\"Item Quantity multiple of MOQ \");\n                 }\n                this.showInCart(this.cartArray);\n              }\n    \n        }\n       })\n\n    }\n    fileReader.readAsArrayBuffer(this.file);\n}\n\n  addToMyCart(index)\n  {\n    this.tmp_orderDetail=[];\n    console.log(this.productlist[index]);\n    if(parseFloat(this.productlist[index].quantity) % parseFloat(this.productlist[index].moq)==0)\n    {\n      console.log(\"inIf\");\n      \n      this.tmp_orderDetail.push({\n      \"gstPercentage\":this.productlist[index]['gstPercentage'],\n      \"productId\":this.productlist[index]['productId'],\n      \"partNumber\":this.productlist[index]['partNumber'],\n      \"category\":this.productlist[index]['category'],\n      \"segment\":this.productlist[index]['segment'],\n      \"model\":this.productlist[index]['model'],\n      \"oem\":this.productlist[index]['oem'],\n      \"moq\":this.productlist[index]['moq'],\n      \"quantity\":parseFloat(this.productlist[index]['quantity']),\n      \"discountedListPrice\":this.productlist[index]['discountedListPrice'],\n      \"priceSupport\":this.productlist[index]['priceSupport'],\n      \"itemValue\":this.productlist[index]['itemValue'],\n      \"amount\":parseFloat(this.productlist[index]['itemValue'])*parseFloat(this.productlist[index]['quantity']),\n      \"gstamount\":this.productlist[index]['gstamount']\n    });\n    this.toast.openSucess(\"Add to cart SuccessFully\",'');\n\n    this.showInCart(this.tmp_orderDetail);\n  }\n  else{\n    console.log(\"enter\");\n\n    this.alrt.alertWarning(\"Order Quantity should be multiple of \"+this.productlist[index].moq);\n    this.productlist[index].datacheck=false;\n    this.productlist[index].ifcheck=false;\n  }\n  }\n\n\n  calculatePriceSupport(index,discount)\n  {\n    console.log(index , discount);\n    if(discount<1)\n    {\n      console.log(\"hello\");\n      this.productlist[index].itemValue=this.productlist[index].itemValue;\n      this.productlist[index].amount=this.productlist[index].amount;\n    }\n    if(discount>0)\n    {\n      this.productlist[index].itemValue=parseFloat(this.productlist[index].itemValue)-parseFloat(this.productlist[index].priceSupport);\n      this.productlist[index].amount=parseFloat(this.productlist[index]['itemValue'])*parseFloat(this.productlist[index]['quantity']);\n      console.log(this.productlist);\n      console.log(this.tmp_orderDetail);\n      let tmpindex=this.tmp_orderDetail.findIndex(row=>row.productId===this.productlist[index].productId)\n      if(tmpindex != -1)\n      {\n      console.log(\"id\");\n\n      this.tmp_orderDetail[tmpindex].itemValue=this.productlist[index].itemValue;\n      this.tmp_orderDetail[tmpindex].amount=this.productlist[index].amount;\n      this.tmp_orderDetail[tmpindex].priceSupport=discount;\n      }\n\n    }\n  }\n\n  checkValidate(index)\n  {\n    console.log(this.productlist[index].quantity);\n    console.log(this.productlist[index].moq);\n    \n    if(parseFloat(this.productlist[index].quantity) % parseFloat(this.productlist[index].moq)==0 )\n    {\n      console.log(\"inchangIf\");\n      \n      this.tmp_orderDetail.push({\n        \"gstPercentage\":this.productlist[index]['gstPercentage'],\n        \"productId\":this.productlist[index]['productId'],\n        \"partNumber\":this.productlist[index]['partNumber'],\n        \"category\":this.productlist[index]['category'],\n        \"segment\":this.productlist[index]['segment'],\n        \"model\":this.productlist[index]['model'],\n        \"oem\":this.productlist[index]['oem'],\n        \"moq\":this.productlist[index]['moq'],\n        \"quantity\":parseFloat(this.productlist[index]['quantity']),\n        \"discountedListPrice\":this.productlist[index]['discountedListPrice'],\n        \"priceSupport\":this.productlist[index]['priceSupport'],\n        \"itemValue\":this.productlist[index]['itemValue'],\n        \"amount\":parseFloat(this.productlist[index]['itemValue'])*parseFloat(this.productlist[index]['quantity']),\n        \"gstamount\":this.productlist[index]['gstamount']\n      });\n    }\n    else{\n      console.log(\"change\");\n      \n    this.productlist[index].datacheck=false;\n    this.productlist[index].ifcheck=false;\n      this.alrt.alertWarning(\"Order Quantity should be multiple of \"+this.productlist[index].moq);\n    }\n  }\n  tmp:any;\n  schemeList:any=[];\n  SchemeDetail(partNumber,index)\n  {\n    if(this.productlist[index].schemeCount==0)\n    {\n      console.log(\"hello\");\n      \n    }\n    else\n    {\n      this.loader=true;\n      this.service.fetchData({\"partNumberCode\":partNumber},\"/getschemeonproduct\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['message']=='Success')\n        {\n          this.schemeList=result['data'];\n          // for(let i=0;i<this.schemeList.length;i++)\n          // {\n\n          //   this.schemeString=this.schemeList[i].offerDescription;\n          //   this.schemeString2=this.schemeString2+this.schemeString+'<br>';\n          //   this.schemeString='';\n          // }\n          // console.log(this.schemeString2);\n          // this.alrt.alertWarning(this.schemeString2);\n          const dialogRef = this.dialog.open(SchemepopupComponent, {\n      width: '600px',\n         data: this.schemeList     \n         \n        });\n        dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n      console.log('The dialog was closed');\n      });\n          \n        }\n      })\n    }\n  }\n  pendingOrder(id)\n  {\n    console.log(id);\n    \n    this.loader=true;\n    this.service.fileData('',\"order/pending/\"+this.data.distributor+'/'+id).subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        const dialogRef = this.dialog.open(PendingOrderComponent, {\n          width: '768px',\n             data: result['data']     \n             \n            });\n            dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n          console.log('The dialog was closed');\n          });\n      }\n    })\n  }\n  showInCart(orderArray:any=[])\n  {\n    console.log(orderArray);\n    for(let i=0;i<orderArray.length;i++)\n    {\n      if(this.tmp_array.length==0)\n      {\n        this.finel_Array.push(orderArray[i]);\n        this.tmp_array.push({category: orderArray[i]['category'],quantity:orderArray[i]['quantity'],amount:orderArray[i]['amount'],gstamount:orderArray[i]['gstamount']});\n        this.tmporderArray.push(orderArray[i]);\n        this.orderDetail.push({\"orderId\":this.order_data.orderId,category: orderArray[i]['category'],\"productId\":orderArray[i].productId,\"quantity\":orderArray[i].quantity,\"price\":orderArray[i].itemValue,\"gstPercentage\":orderArray[i].gstPercentage});\n        console.log(this.tmporderArray);\n      }\n     \n      else\n      {\n          const idIndex=this.orderDetail.findIndex(row => row.productId==orderArray[i].productId)\n          let tmpval=false;  \n         if(idIndex != -1)\n         {\n           console.log(idIndex);\n           console.log(this.tmporderArray);\n           console.log(this.finel_Array);\n           \n          this.tmporderArray.splice(idIndex,1);\n          this.orderDetail.splice(idIndex,1);\n          this.tmporderArray.push(orderArray[i]);\n          this.orderDetail.push({\"orderId\":this.order_data.orderId,category: orderArray[i]['category'],\"productId\":orderArray[i].productId,\"quantity\":orderArray[i].quantity,\"price\":orderArray[i].itemValue,\"gstPercentage\":orderArray[i].gstPercentage});\n          const itemIndex = this.tmp_array.findIndex(row => row.category == orderArray[i]['category']);\n          if(itemIndex != -1)\n          {\n           console.log(this.tmporderArray);\n\n            this.tmp_array[itemIndex].quantity=parseFloat(this.tmp_array[itemIndex].quantity)-parseFloat(this.finel_Array[idIndex].quantity)\n            this.tmp_array[itemIndex].amount=parseFloat(this.tmp_array[itemIndex].amount)-parseFloat(this.finel_Array[idIndex].amount)\n            this.tmp_array[itemIndex].gstamount=parseFloat(this.tmp_array[itemIndex].gstamount)-parseFloat(this.finel_Array[idIndex].gstamount)\n            this.finel_Array.splice(idIndex,1);\n            tmpval=true;\n            if(tmpval)\n              {\n              console.log(this.tmporderArray);\n                this.tmp_array[itemIndex].quantity=parseFloat(this.tmp_array[itemIndex].quantity)+parseFloat(orderArray[i].quantity)\n                this.tmp_array[itemIndex].amount=parseFloat(this.tmp_array[itemIndex].amount)+parseFloat(orderArray[i].amount)\n                this.tmp_array[itemIndex].gstamount=parseFloat(this.tmp_array[itemIndex].gstamount)+parseFloat(orderArray[i].gstamount);\n                this.finel_Array.push(orderArray[i]);\n              }\n            \n          }\n          \n         }\n        if(idIndex === -1)\n        {\n          // this.tmp_orderDetail.push({\"productId\":orderArray[i].productId,\"quantity\":orderArray[i].quantity,\"amount\":orderArray[i].amount,\"gstamount\":orderArray[i].gstamount});\n          this.orderDetail.push({\"orderId\":this.order_data.orderId,category: orderArray[i]['category'],\"productId\":orderArray[i].productId,\"quantity\":orderArray[i].quantity,\"price\":orderArray[i].itemValue,\"gstPercentage\":orderArray[i].gstPercentage});\n          this.finel_Array.push(orderArray[i]);\n          this.tmporderArray.push(this.tmporderArray[i]);\n          const itemIndex = this.tmp_array.findIndex(row => row.category == orderArray[i]['category']);\n\n          if(itemIndex === -1) {\n              this.tmp_array.push({category: orderArray[i]['category'],quantity:orderArray[i]['quantity'],amount:orderArray[i]['amount'],gstamount:orderArray[i]['gstamount']});\n          } else {\n            this.tmp_array[itemIndex].quantity=parseFloat(orderArray[i]['quantity'])+parseFloat(this.tmp_array[itemIndex].quantity);\n            this.tmp_array[itemIndex].amount=parseFloat(orderArray[i]['amount'])+parseFloat(this.tmp_array[itemIndex].amount);\n            this.tmp_array[itemIndex].gstamount=parseFloat(orderArray[i]['gstamount'])+parseFloat(this.tmp_array[itemIndex].gstamount);\n          }\n        }\n        }\n      if(i==orderArray.length-1)\n      {\n        this.tmp=true;\n      }\n    }\n    if(this.tmp)\n    {\n      this.cartArray=[];\n      this.tmp_orderDetail=[];\n      console.log(this.finel_Array);\n      this.calculate(this.finel_Array);\n      console.log(this.tmp_array);\n      // this.productlist=this.tmpProductList;\n      for (let index = 0; index < this.productlist.length; index++) {\n        this.productlist[index].datacheck = false;\n        this.productlist[index].ifcheck = false;\n     }\n    }\n\n  }\n  calculate(order_array)\n  {\n    console.log(order_array);\n    \n    this.itemTotel=0;\n    this.subTotal=0;\n    this.gstTotal=0;\n    this.grandTotal=0;\n    for(let i=0;i<order_array.length;i++)\n    {\n      this.itemTotel=parseFloat(this.itemTotel)+parseFloat(order_array[i].quantity);\n      this.subTotal=parseFloat(this.subTotal)+parseFloat(order_array[i].amount);\n      this.gstTotal=parseFloat(this.gstTotal)+parseFloat(order_array[i].gstamount);\n      if(i==order_array.length-1)\n      {\n        this.grandTotal=parseFloat(this.grandTotal)+(parseFloat(this.gstTotal)+parseFloat(this.subTotal));\n      }\n    }\n\n  }\n  calculateAmount(quantity,qty,i)\n  {\n    if(qty<1)\n    {\n      this.productlist[i].amount=0;\n    }\n    if(qty>0){\n      this.productlist[i].amount=parseFloat(this.productlist[i]['itemValue'])*parseFloat(qty);\n      this.productlist[i].gstamount=(parseFloat(this.productlist[i]['itemValue'])*parseFloat(this.productlist[i]['gstPercentage'])/100)*this.productlist[i]['quantity'];\n\n    }\n  }\n  productDetail(category)\n  {\n    const dialogRef = this.dialog.open(ListOrderComponent, {\n      width: '1600px',\n         data:{\n           product:this.finel_Array,\n            category\n         }});\n        dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n      console.log('The dialog was closed');\n      let tmpCartArray=this.service.getData();\n      if(tmpCartArray)\n      {\n        this.tmp_array=[];\n        this.finel_Array=[];\n        this.orderDetail=[];\n        this.showInCart(tmpCartArray);\n      }\n    });\n  }\n  // ordlength:any=[];\n  temp:any;\n  removeFromCart(index)\n  {\n    this.temp=false;\n\n    this.alrt.delete(\"Product\").then((result)=>{\n      if(result)\n      {\n        // this.ordlength=this.finel_Array;\n        console.log(this.tmp_array[index].quantity ,\"&\",this.tmp_array[index].amount,\"&\",this.tmp_array[index].gstamount);\n        this.itemTotel=parseFloat(this.itemTotel)-parseFloat(this.tmp_array[index].quantity);\n        this.subTotal=parseFloat(this.subTotal)-parseFloat(this.tmp_array[index].amount);\n        this.gstTotal=parseFloat(this.gstTotal)-parseFloat(this.tmp_array[index].gstamount);\n        this.grandTotal=parseFloat(this.grandTotal)-(parseFloat(this.tmp_array[index].amount)+parseFloat(this.tmp_array[index].gstamount));\n        console.log(this.tmp_array[index]['category']);\n        this.finel_Array = this.finel_Array.filter(row => row.category != this.tmp_array[index]['category']);\n        this.orderDetail = this.orderDetail.filter(row => row.category != this.tmp_array[index]['category']);\n        console.log(this.finel_Array);\n        this.temp=true;\n      }\n      if(this.temp)\n      {\n        this.tmp_array.splice(index,1);\n\n      }\n    })\n  }\n\n  addToCart()\n  {\n    console.log(this.tmp_orderDetail);\n    \n    for(let i=0;i<this.tmp_orderDetail.length;i++)\n    {\n      if(this.tmp_orderDetail[i].quantity<parseFloat(this.productlist[i].moq))\n      {\n        this.alrt.alertWarning(\"Order Quantity Minimum 1\");\n        break;\n      }\n      else\n      {\n          this.cartArray.push({\n            \"gstPercentage\":this.tmp_orderDetail[i]['gstPercentage'],\n            \"productId\":this.tmp_orderDetail[i]['productId'],\n            \"partNumber\":this.tmp_orderDetail[i]['partNumber'],\n            \"category\":this.tmp_orderDetail[i]['category'],\n            \"segment\":this.tmp_orderDetail[i]['segment'],\n            \"model\":this.tmp_orderDetail[i]['model'],\n            \"oem\":this.tmp_orderDetail[i]['oem'],\n            \"moq\":this.tmp_orderDetail[i]['moq'],\n            \"quantity\":parseFloat(this.tmp_orderDetail[i]['quantity']),\n            \"discountedListPrice\":this.tmp_orderDetail[i]['discountedListPrice'],\n            \"priceSupport\":this.tmp_orderDetail[i]['priceSupport'],\n            \"itemValue\":this.tmp_orderDetail[i]['itemValue'],\n            \"amount\":parseFloat(this.tmp_orderDetail[i]['itemValue'])*parseFloat(this.tmp_orderDetail[i]['quantity']),\n            \"gstamount\":this.tmp_orderDetail[i]['gstamount']\n          });\n          if(i==this.tmp_orderDetail.length-1)\n          {\n            this.toast.openSucess(\"Add to cart SuccessFully\",'');\n\n            this.showInCart(this.cartArray);\n          }\n      }\n\n    }\n  }\n  \n  orderStatus:any;\n  SaveOrder()\n {\n\n  if(this.userRole==1)\n    {\n      this.companyStatus=1;\n    }\n    else{\n      this.companyStatus=2;\n    }\n   this.orderStatus=1;\n   this.OrderPlaced();\n }\n\n  value:any={};\n  companyStatus:any;\n  SubbmitOrder()\n  {\n    console.log(this.userRole);\n    \n   if(this.userRole==12)\n   {\n      this.orderStatus=3;\n      this.companyStatus=1;\n      this.OrderPlaced();\n    }\n    else if(this.userRole==1)\n    {\n      this.orderStatus=2;\n      this.companyStatus=1;\n      this.OrderPlaced();\n    }\n    else{\n      this.orderStatus=2;\n      this.companyStatus=1;\n      this.OrderPlaced();\n    }\n  }\n \n   OrderPlaced()\n   {\n     this.loader=true;\n     console.log(this.data.distributor);\n     console.log(this.data);\n     if(this.userRole==12)\n     {\n       this.value={\"orderId\":this.order_data.orderId,'shippingAddressId':this.data.shippingAddressId,\"remarks\":this.data.remarks,\"dealerStatus\": this.orderStatus,\"companyStatus\": this.companyStatus,\"networkId\":this.order_data.networkId,\"orderDetail\":this.orderDetail,\"createBy\":this.userId,\"amount\":this.subTotal,\"quantity\":this.itemTotel,\"gstAmount\":this.gstTotal,\"totalAmount\":this.grandTotal};\n     }\n     else{\n       this.value={\"orderId\":this.order_data.orderId,'shippingAddressId':this.data.shippingAddressId,\"remarks\":this.data.remarks,\"dealerStatus\": this.orderStatus,\"companyStatus\": this.companyStatus,\"networkId\":this.order_data.networkId,\"orderDetail\":this.orderDetail,\"createBy\":this.userId,\"amount\":this.subTotal,\"quantity\":this.itemTotel,\"gstAmount\":this.gstTotal,\"totalAmount\":this.grandTotal};\n     }\n     console.log(this.value);\n     this.service.fetchData(this.value,\"order/update\").subscribe((result)=>{\n       console.log(result);\n       this.loader=false;\n       if(result['status']=='Success')\n       {\n         this.rout.navigate(['/order-list']);\n         this.toast.openSucess(\"Order Placed\",\"SuccessFully\");\n       }\n     })\n   }\n\n  //  catsearch:any=[];\n  tmp_cat:any=[];\n  categorySearch()\n  {\n    this.category_list=[];\n    for(var i=0;i<this.tmp_categoryList.length; i++)\n      {\n        this.catsearch.search=this.catsearch.search.toLowerCase();\n        this.tmp_cat=this.tmp_categoryList[i]['text'].toLowerCase();\n        if(this.tmp_cat.includes(this.catsearch.search))\n        {\n          this.category_list.push(this.tmp_categoryList[i]);\n        }     \n      }    \n  }\n\n  // segsearch:any=[];\n  tmp_seg:any=[];\n  segmentSearch()\n  {\n    this.segmentList=[];\n    for(var i=0;i<this.tmp_segmentList.length; i++)\n      {\n        this.segsearch.search=this.segsearch.search.toLowerCase();\n        this.tmp_seg=this.tmp_segmentList[i]['text'].toLowerCase();\n        if(this.tmp_seg.includes(this.segsearch.search))\n        {\n          this.segmentList.push(this.tmp_segmentList[i]);\n        }     \n      }    \n\n  }\n  // oemList:any=[];\n  // oemsearch:any=[];\n  // tmp_oem:any=[];\n  // oemSearch()\n  // {\n  //   this.oemList=[];\n  //   for(var i=0;i<this.tmp_oemList.length; i++)\n  //     {\n  //       this.oemsearch.search=this.oemsearch.search.toLowerCase();\n  //       this.tmp_oem=this.tmp_oemList[i]['text'].toLowerCase();\n  //       if(this.tmp_oem.includes(this.oemsearch.search))\n  //       {\n  //         this.oemList.push(this.tmp_oemList[i]);\n  //       }     \n  //     }    \n  // }\n\n  // subsegsearch:any=[];\n  tmp_subseg:any=[];\n  subSegmentSearch()\n  {\n    this.product_list=[];\n    for(var i=0;i<this.tmpproduct_list.length; i++)\n      {\n        this.subsegsearch.search=this.subsegsearch.search.toLowerCase();\n        this.tmp_subseg=this.tmpproduct_list[i]['productName'].toLowerCase();\n        if(this.tmp_subseg.includes(this.subsegsearch.search))\n        {\n          this.product_list.push(this.tmpproduct_list[i]);\n        }     \n      }    \n  }\n\n  // productName:any=[];\n  // productName:any=[];\n  tmp_pro:any=[];\n  // modelName:any=[];\n  tmpModel:any=[];\n  productSearchByNumber(partNumber,model)\n  {\n    \n    this.productlist=[];\n    for(var i=0;i<this.tmpProductList.length; i++)\n    {\n      if(partNumber!=null)\n      { \n        partNumber=partNumber.toLowerCase();\n        this.tmp_pro=this.tmpProductList[i]['partNumber'].toLowerCase();\n      }\n      else\n      {\n        partNumber=\"\";\n      }\n      \n      if(model!=null)\n      { \n        model=model.toLowerCase();\n        this.tmpModel=this.tmpProductList[i]['model'].toLowerCase();\n      }\n      else\n      {\n        model=\"\";\n      }\n\n      if(this.tmp_pro.includes(partNumber) && this.tmpModel.includes(model))\n      {\n        this.productlist.push(this.tmpProductList[i]);\n      }     \n    }\n    \n  }\n// categoryName:any=[];\n// tmpcategory:any=[];\n// productSearchByCategory()\n// {\n//   this.productlist=[];\n//   for(var i=0;i<this.tmpProductList.length; i++)\n//     {\n//       this.categoryName.search=this.categoryName.search.toLowerCase();\n//       this.tmpcategory=this.tmpProductList[i]['category'].toLowerCase();\n//       if(this.tmpcategory.includes(this.categoryName.search))\n//       {\n//         this.productlist.push(this.tmpProductList[i]);\n//       }     \n//     }\n// }\n// segmentName:any=[];\n// tmpSegment:any=[];\n// productSearchBySegment()\n// {\n//   this.productlist=[];\n//   for(var i=0;i<this.tmpProductList.length; i++)\n//     {\n//       this.segmentName.search=this.segmentName.search.toLowerCase();\n//       this.tmpSegment=this.tmpProductList[i]['segment'].toLowerCase();\n//       if(this.tmpSegment.includes(this.segmentName.search))\n//       {\n//         this.productlist.push(this.tmpProductList[i]);\n//       }     \n//     }\n// }\n// // modelName:any=[];\n// // tmpModel:any=[];\n// productSearchByModel()\n// {\n//   this.productlist=[];\n//   for(var i=0;i<this.tmpProductList.length; i++)\n//     {\n//       this.modelName.search=this.modelName.search.toLowerCase();\n//       this.tmpModel=this.tmpProductList[i]['model'].toLowerCase();\n//       if(this.tmpModel.includes(this.modelName.search))\n//       {\n//         this.productlist.push(this.tmpProductList[i]);\n//       }     \n//     }\n// }\n// oemName:any=[];\n// tmpOem:any=[];\n// productSearchByOem()\n// {\n//   this.productlist=[];\n//     for(var i=0;i<this.tmpProductList.length; i++)\n//       {\n//         this.oemName.search=this.oemName.search.toLowerCase();\n//         this.tmpOem=this.tmpProductList[i]['oem'].toLowerCase();\n//         if(this.tmpOem.includes(this.oemName.search))\n//         {\n//           this.productlist.push(this.tmpProductList[i]);\n//         }     \n//       }\n// }\n}\n","module.exports = \"\\n<div class=\\\"edit-modal\\\">\\n        <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n                <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n              </div>\\n            \\n<mat-dialog-content class=\\\"mat-typography pl15 pr15\\\" style=\\\"overflow-x: hidden !important; position: relative;\\\">\\n     <p class=\\\"heading\\\">PRODUCT INFORMATION</p>\\n     <!-- <div class=\\\"top-search right-serach\\\" style=\\\"top: 25px;\\\">\\n            <input type=\\\"text\\\" placeholder=\\\"SEARCH. . .\\\" style=\\\"background: #f8f8f8;\\\">\\n            <i class=\\\"material-icons\\\">search</i>\\n          </div> -->\\n    <div class=\\\"col s12 padding0\\\">\\n        <div class=\\\"cs-table left-right-15\\\">\\n            <div class=\\\"table-head\\\">\\n                <table>\\n                    <tr>\\n                        <th class=\\\"w110\\\">Part Number</th>\\n                        <th>Product Model</th>\\n                        <th class=\\\"w130\\\">OEM Code</th>\\n                        <th class=\\\"w80\\\">Min QTY</th>\\n                        <th class=\\\"w70\\\">QTY</th>\\n                        <th class=\\\"w80 text-right\\\">Rate</th>\\n                        <th class=\\\"w120 text-right\\\">Price Support</th>\\n                        <th class=\\\"w100 text-right\\\">Item Value</th>\\n                        <th class=\\\"w100 text-right\\\">Amount</th>\\n                        <th class=\\\"w60\\\">GST %</th>\\n                        <th *ngIf=\\\"div\\\" class=\\\"w170\\\">Action</th>\\n                        <th *ngIf=\\\"div==false\\\" class=\\\"w70\\\">Action</th>\\n                    </tr>\\n                </table>\\n            </div>\\n            <div class=\\\"table-container pb0\\\">\\n                <div class=\\\"table-content\\\">\\n                    <table>\\n                        <tr *ngFor=\\\"let product of productList;let index=index\\\">\\n                            <td class=\\\"w110\\\">{{product.partNumber}}</td>\\n                            <td>{{product.model}}</td>\\n                            <td class=\\\"w130\\\">{{product.oem}}</td>\\n                            <td class=\\\"w80\\\">{{product.moq}}</td>\\n                            <td class=\\\"w70\\\">\\n                                <div class=\\\"td-input\\\">\\n                                    <input type=\\\"number\\\" (change)=\\\"checkValidate(index)\\\" (input)=\\\"calculateAmount(index,product.quantity)\\\" name=\\\"quantity\\\" #quantity=\\\"ngModel\\\" [(ngModel)]=\\\"product.quantity\\\" required>\\n                                </div>\\n                            </td>\\n                            <td class=\\\"w80 text-right\\\">&#8377; {{product.discountedListPrice}}</td>\\n                            <td class=\\\"w120 text-right\\\">&#8377; {{product.priceSupport}}</td>\\n\\n                            <!-- <td class=\\\"w100\\\">\\n                                <div class=\\\"td-input\\\">\\n                                    <input type=\\\"number\\\" name=\\\"priceSupport\\\" #priceSupport=\\\"ngModel\\\" (input)=\\\"calculatePriceSupport(index,product.priceSupport)\\\" [(ngModel)]=\\\"product.priceSupport\\\" required>\\n                                </div>\\n                            </td> -->\\n                            <td class=\\\"w100 text-right\\\">&#8377; {{product.itemValue}}</td>\\n                            <td class=\\\"w100 text-right\\\">&#8377; {{product.amount}}</td>\\n                            <td class=\\\"w60\\\">{{product.gstPercentage}} %</td>\\n                            <td *ngIf=\\\"product.edit\\\" class=\\\"w70 text-center\\\">\\n                                <a class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons green-clr\\\" (click)=\\\"saveproduct(index,product.productId)\\\" >save</i></a>\\n                            </td>\\n                            <td *ngIf=\\\"product.edit==false\\\" class=\\\"w70 text-center\\\">\\n                                <a class=\\\"action-cart\\\" mat-button><i class=\\\"material-icons red-clr\\\" (click)=\\\"remove(product.productId,index)\\\">delete_sweep</i></a>\\n                            </td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    \\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"end\\\">\\n    <button mat-raised-button (click)=\\\"saveUpdate()\\\" cdkFocusInitial color=\\\"warn\\\">Close</button>\\n</mat-dialog-actions>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2xpc3Qtb3JkZXIvbGlzdC1vcmRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-list-order',\n  templateUrl: './list-order.component.html',\n  styleUrls: ['./list-order.component.scss']\n})\nexport class ListOrderComponent implements OnInit {\n\n  productList:any=[];\n  tmp_productList:any=[];\n  finalProductList:any=[];\n  div:any=false;\n  category:any;\n\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public alrt:DialogComponent,public dialog:MatDialog,public toast:SnackBarOverview,public service:ConstantService,public confirm:DialogComponent) {\n\n    console.log(data);\n    this.category=data['category'];\n    this.tmp_productList=data['product'];\n    this.finalProductList=data['product'];\n\n    for(let i=0;i<this.tmp_productList.length;i++){\n      if(this.category === this.tmp_productList[i]['category'])\n      {\n        this.productList.push(\n          {\n            \"amount\":this.tmp_productList[i].amount,\n            \"category\":this.tmp_productList[i].category,\n            \"gstPercentage\":this.tmp_productList[i].gstPercentage,\n            \"gstamount\":this.tmp_productList[i].gstamount,\n            \"itemValue\":this.tmp_productList[i].itemValue,\n            \"model\":this.tmp_productList[i].model,\n            \"moq\":this.tmp_productList[i].moq,\n            \"oem\":this.tmp_productList[i].oem,\n            \"partNumber\":this.tmp_productList[i].partNumber,\n            \"priceSupport\":this.tmp_productList[i].priceSupport,\n            \"discountedListPrice\":this.tmp_productList[i].discountedListPrice,\n            \"productId\":this.tmp_productList[i].productId,\n            \"quantity\":this.tmp_productList[i].quantity,\n            \"segment\":this.tmp_productList[i].segment\n          }\n          );\n      }\n      if(i==this.tmp_productList.length-1)\n      {\n        for(let j=0;j<this.productList.length;j++)\n        {\n          this.productList[j].edit=false;\n        }\n      }\n    }\n    console.log(this.productList);\n    this.service.setData(this.tmp_productList);\n   }\n\n  ngOnInit() {\n  }\n\n  checkValidate(index)\n  {\n    if(parseFloat(this.productList[index].quantity)%parseFloat(this.productList[index].moq)!=0)\n    {\n      this.alrt.alertWarning(\"Order Quantity should multiple of \"+parseFloat(this.productList[index].moq))\n    }\n  }\n\n  calculateAmount(index,quantity)\n  {\n    this.productList[index].edit=true;\n    console.log(index,quantity,this.productList[index].itemValue);\n   if(parseFloat(this.productList[index].itemValue)>0)\n   {\n    this.itemValue=this.productList[index].itemValue;\n    this.itemAmount=parseFloat(quantity)*parseFloat(this.productList[index].itemValue);\n   }\n  }\n  saveUpdate()\n  {\n    console.log(\"save\");\n    this.service.setData(this.tmp_productList);\n    this.dialog.closeAll();\n  }\n\n  itemValue:any;\n  itemAmount:any;\n  // priceSupport:any;\n  // calculatePriceSupport(index,priceSupport)\n  // {\n  //   this.productList[index].edit=true;\n  //   console.log(index,priceSupport);\n  //   if(priceSupport !=null)\n  //   {\n  //     this.itemValue=parseFloat(this.productList[index].itemValue)-parseFloat(priceSupport);\n  //     this.itemAmount=parseFloat(this.productList[index].quantity)*this.itemValue;\n  //     this.priceSupport=priceSupport;\n  //   }\n  // }\n\n  saveproduct(index,id)\n  {\n   if(parseFloat(this.productList[index].quantity)% parseFloat(this.productList[index].moq)==0 )\n   {\n    this.productList[index].edit=false;\n   this.productList[index].itemValue=this.itemValue;\n   this.productList[index].amount=this.itemAmount;\n\n   let pindex=this.tmp_productList.findIndex(row=>row.productId==this.productList[index].productId)\n  //  this.productList[index].priceSupport=this.priceSupport;\n   console.log(this.productList[index]);\n   this.tmp_productList[pindex].itemValue=this.productList[index].itemValue;\n   this.tmp_productList[pindex].amount=this.productList[index].amount;\n   this.tmp_productList[pindex].quantity=this.productList[index].quantity;\n   this.tmp_productList[pindex].priceSupport=this.productList[index].priceSupport;\n   console.log(pindex);\n   \n   this.service.setData(this.tmp_productList);\n\n    this.toast.openSucess(\"Product List Update\",\"SuccessFully\");}\n    else{\n      this.alrt.alertWarning(\"Order Quantity should multiple of \"+parseFloat(this.productList[index].moq))\n    }\n  }\n\n  remove(id,index)\n  {\n    console.log(id,index);\n    \n    this.confirm.delete(\"product\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.productList.splice(index,1)\n        for(let i=0;i<this.tmp_productList.length;i++)\n        {\n          if(this.tmp_productList[i]['productId']==id)\n          {\n            this.tmp_productList.splice(i,1);\n          }\n        }\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n    <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n      </div>\\n    \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/order-list/\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{network_data.establishment}}</h2>\\n        <p class=\\\"light\\\"></p>\\n      </div>\\n    </div>\\n    \\n    <div *ngIf=\\\"role==1 && order_status.dealerStatus==3\\\" class=\\\"left-auto\\\">\\n      <div class=\\\"from-fields w250 pr6\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input infix-bodr wp100\\\">\\n            <mat-select placeholder=\\\"Company Status\\\" class=\\\"mat-bg\\\" name=\\\"companyStatus\\\" #companyStatus=\\\"ngModel\\\" [(ngModel)]=\\\"order_status.companyStatus\\\"   selected>\\n              <mat-option value=\\\"\\\" disabled>Select One</mat-option>\\n              <mat-option (click)=\\\"updatecompanyStatus()\\\" [value]=\\\"1\\\">Pending</mat-option>\\n              <mat-option (click)=\\\"updatecompanyStatus()\\\" [value]=\\\"3\\\">Reject</mat-option>\\n              <mat-option (click)=\\\"updatecompanyStatus()\\\" [value]=\\\"2\\\">Approve</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      \\n    </div>\\n    \\n    <div *ngIf=\\\"role==12 && order_status.dealerStatus==2\\\" class=\\\"left-auto\\\">\\n      <div class=\\\"from-fields w250 pr6\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input infix-bodr wp100\\\">\\n            <mat-select placeholder=\\\"Company Status\\\" class=\\\"mat-bg\\\" name=\\\"dealerStatus\\\" #dealerStatus=\\\"ngModel\\\" [(ngModel)]=\\\"order_status.dealerStatus\\\"    selected>\\n              <mat-option value=\\\"\\\" disabled>Select One</mat-option>\\n              <mat-option (click)=\\\"updatedealerStatus()\\\" [value]=\\\"2\\\">Pending</mat-option>\\n              <mat-option (click)=\\\"updatedealerStatus()\\\" [value]=\\\"3\\\">Approve</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info padding0\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"profile-info\\\">\\n                <ul class=\\\"flex-start\\\">\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/company.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Company Name</span>\\n                      <p>{{network_data.establishment}}</p>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/code.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Dealer Code</span>\\n                      <p>{{network_data.networkCode}}</p>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/applicant.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Contact Person</span>\\n                      <p>{{network_data.userName}}</p>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Mobile No</span>\\n                      <p>{{network_data.mobile}}</p>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n              <mat-divider class=\\\"mt15 mb15\\\"></mat-divider>\\n              \\n              <div class=\\\"col s12 cs-figure space-li padding0\\\">\\n                <h2>ORDER DETAIL</h2>\\n                <ul>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Order Date</span>\\n                        <p class=\\\"counter\\\">{{order_data.modifiedOn | date :'EEEE, MMMM d, y'}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Created By</span>\\n                        <p class=\\\"counter\\\">{{order_data.userName}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Order No</span>\\n                        <p class=\\\"counter\\\">{{order_data.orderNumber}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Total Qty</span>\\n                        <p class=\\\"counter\\\">{{order_data.quantity }}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  \\n                </ul>\\n              </div>\\n              \\n              <div class=\\\"col s12 mt15 cs-figure space-li padding0\\\">\\n                <ul>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>GST Amount</span>\\n                        <p class=\\\"counter\\\">{{order_data.gstAmount | currency: 'INR':true}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Total Amount</span>\\n                        <p class=\\\"counter\\\">{{order_data.amount | currency: 'INR':true}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Dealer Status</span>\\n                        <p class=\\\"counter\\\" *ngIf=\\\"order_status.dealerStatus==2\\\">Pending</p>\\n                        <p *ngIf=\\\"order_status.dealerStatus==3\\\">Approve</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Company Status</span>\\n                        <p *ngIf=\\\"order_status.companyStatus==1\\\" class=\\\"status pending\\\">Pending</p>\\n                        <p *ngIf=\\\"order_status.companyStatus==2\\\" class=\\\"status approved\\\">Approve</p>\\n                        <p *ngIf=\\\"order_status.companyStatus==3\\\" class=\\\"status reject\\\">Hold</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"sprate-box padding0 mt15\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>SHIPPING ADDRESS</h2>\\n              </div>\\n              <div class=\\\"ds-from-fields\\\">\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>Shop/ Office No</p>\\n                    <p>{{shipping.office}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>Mobile No</p>\\n                    <p>{{shipping.mobile}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>Landline No</p>\\n                    <p>{{shipping.landline}}</p>\\n                    <p *ngIf=\\\"shipping.landline==''\\\">---</p>\\n\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>Email</p>\\n                    <p>{{shipping.email}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>Fax</p>\\n                    <p>{{shipping.fax}}</p>\\n                    <p *ngIf=\\\"shipping.fax==''\\\">---</p>\\n\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>State</p>\\n                    <p>{{shipping.state}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>District</p>\\n                    <p>{{shipping.district}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>City</p>\\n                    <p>{{shipping.city}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>Pincode</p>\\n                    <p>{{shipping.pin}}</p>\\n                  </div>\\n                </div>\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>Street</p>\\n                    <p>{{shipping.street}}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row mt15\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"heading-bg left-right-20 mb0\\\">\\n            <h2>PRODUCT INFORMATION</h2>\\n          </div>\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"table-head\\\">\\n              <table>\\n                <tr>\\n                  <th>Category</th>\\n                  <th class=\\\"w150 text-center\\\">Total Item</th>\\n                  <th class=\\\"w150 text-center\\\">QTY</th>\\n                  <th class=\\\"w150 text-right\\\">Amount</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\" let order_detail_data of tmp_array\\\">\\n                    <td><a mat-button class=\\\"link-btn\\\" (click)=\\\"productDetail(order_detail_data.category)\\\" >{{order_detail_data.category}}</a></td>\\n                    <td class=\\\"w150 text-center\\\"><a mat-button class=\\\"link-btn\\\" (click)=\\\"productDetail(order_detail_data.category)\\\" >{{order_detail_data.item}}</a></td>\\n                    <td class=\\\"w150  text-center\\\">{{order_detail_data.quantity}}</td>\\n                    <td class=\\\"w150  text-right\\\"> &#x20B9; {{order_detail_data.amount}}</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n<div  class=\\\"fixed-multibtn-botm\\\">\\n  <ul>\\n    <li ><a  matTooltip=\\\"Download Product Sheet\\\" (click)=\\\"exportAsXLSX()\\\" matRipple><i class=\\\"material-icons\\\">cloud_download</i></a></li>\\n  </ul>\\n</div>\\n<div class=\\\"h50\\\"></div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {MatDialog} from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { ListOrderComponent } from '../list-order/list-order.component';\nimport { DetailorderlistComponent } from '../detailorderlist/detailorderlist.component';\nimport { DialogComponent } from 'src/app/dialog';\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  animations: [slideToTop()]\n})\nexport class OrderDetailComponent implements OnInit {\n  order_id:any;\n  loader:any=false;\n  message:any;\n  order_data:any={};\n  order_status:any={};\n  userdata:any=[];\n  senddata:any;\n  role:any;\n  userType:any;\n  netId:any;\n  network_data:any={};\n  constructor(public alrt:DialogComponent,public db:ConstantService,public router:Router,public user:sessionStorage, public route:ActivatedRoute, public dialog: MatDialog,public toast:SnackBarOverview) {\n    \n    this.loader=true;\n    this.route.params.subscribe(params=>{\n      console.log(params);\n      this.order_id = params.id;\n      console.log(this.order_id);\n    });\n  }\n  ngOnInit() {\n    this.userdata=this.user['user']['data'];\n    console.log(this.userdata);\n    this.userType=this.userdata['userType'];\n    // console.log(this.userdata['userId']);\n    this.role=this.userdata['role'];\n    console.log(this.role);\n    \n    if(this.userType==3){\n      this.netId=this.userdata['distributerNetwork']['networkId'];\n    }\n    this.order_detail();\n  }\n  shipping:any={};\n  order_detail(){\n    this.loader=true;\n    this.db.fetchData({'orderId':this.order_id},'order/list').subscribe((response)=>{\n      console.log(response);  \n      this.loader=false;\n      if(response['status']=='Success')\n      {\n        this.order_data = response['data'][0];\n        console.log(this.order_data);\n        this.order_status.dealerStatus=this.order_data.dealerStatus;\n        this.order_status.companyStatus=this.order_data.companyStatus;\n        this.showInCart(this.order_data)\n      }\n      this.db.fetchData({'networkId':this.order_data.networkId},'network/list').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        if(response['status']=='Success')\n        {\n          this.network_data = response['data'][0];\n          console.log(this.network_data);\n          let shippingAddrss=this.network_data.shippingAddresses.filter(row=>row.shippingAddressId==this.order_data.shippingAddressId)\n          console.log(shippingAddrss[0]);\n          this.shipping=shippingAddrss[0];  \n        }\n        this.convertArrayToExcel();\n      });\n    });\n    \n  }\n  updatecompanyStatus()\n  {\n    this.alrt.confirmation('Order Status  !').then((result) => {\n      if(result)\n      {\n        console.log(this.order_status);\n        this.db.fetchData({ \"orderId\": this.order_id,\n        \"companyStatus\": this.order_status.companyStatus,\n        \"statusFor\": 1},'order/updatestatus').subscribe((response)=>{\n          console.log(response);\n          this.message=response['message'];\n          if(response['status']=='Success')\n          {\n            this.toast.openSucess('Status updated successfully','');\n            this.router.navigate(['/order-list'])\n          }\n          else\n          {\n            this.toast.openError('Something Went Wrong Please Try Again!!','');\n          }\n        });\n      }})\n      \n    }\n    updatedealerStatus(){\n      \n      this.alrt.confirmation('Order Status  !').then((result) => {\n        if(result)\n        {\n          console.log(this.order_status);\n          this.db.fetchData({  \"orderId\": this.order_id,\n          \"dealerStatus\": this.order_status.dealerStatus,\n          \"statusFor\":2},'order/updatestatus').subscribe((response)=>{\n            console.log(response);\n            this.message=response['message'];\n            if(response['status']=='Success')\n            {\n              this.toast.openSucess('Status updated successfully','');\n              this.router.navigate(['/order-list'])\n            }\n            else\n            {\n              this.toast.openError('Something Went Wrong Please Try Again!!','');\n            }\n          });\n        }})\n        \n      }\n      tmp_array:any=[];\n      finel_Array:any=[];\n      orderItem:any;\n      showInCart(orderArray)\n      {\n        console.log(orderArray);\n        let ord=false;\n        for(let i=0;i<orderArray.orderDetail.length;i++)\n        {\n          if(this.tmp_array.length==0)\n          {\n            this.finel_Array.push(orderArray.orderDetail[i]);\n            this.tmp_array.push({category: orderArray.orderDetail[i]['category'],quantity:orderArray.orderDetail[i]['quantity'],amount:orderArray['amount'],gstamount:orderArray['gstAmount']});\n            \n          }\n          else\n          {\n            this.finel_Array.push(orderArray.orderDetail[i]);\n            const itemIndex = this.tmp_array.findIndex(row => row.category == orderArray.orderDetail[i]['category']);\n            \n            if(itemIndex === -1) {\n              this.tmp_array.push({category: orderArray.orderDetail[i]['category'],quantity:orderArray.orderDetail[i]['quantity'],amount:orderArray['amount'],gstamount:orderArray['gstAmount']});\n              \n              \n            } else {\n              this.tmp_array[itemIndex].quantity=parseInt(orderArray.orderDetail[i]['quantity'])+parseInt(this.tmp_array[itemIndex].quantity);\n            }\n            \n          }\n          \n          if(i==orderArray.orderDetail.length-1)\n          {\n            for(let j=0;j<this.tmp_array.length;j++)\n            {\n              const item=this.finel_Array.filter(row=>row.category==this.tmp_array[j].category)\n              if(item.length!=0)\n              {\n                this.tmp_array[j].item=item.length;\n              }\n            }\n          }\n          \n        }\n        \n      }\n      \n      productDetail(category)\n      {\n        console.log(this.finel_Array,category);\n        \n        const dialogRef = this.dialog.open(DetailorderlistComponent, {\n          width: '1600px',\n          data:{\n            product:this.finel_Array,\n            category\n          }});\n          dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n            console.log('The dialog was closed');\n          });\n        }\n        \n        dealerDetail:any={}\n        orderDetail:any={}\n        xLXSArray:any=[];\n        convertArrayToExcel()\n        {\n          \n          // this.xLXSArray.push({\n          //   'Dist Name':this.network_data.establishment,\n          //   'Dist Code':this.network_data.networkCode,\n          //   'Contact Person Name':this.network_data.networkContacts[0].name,\n          //   'Contact Person Mobile no':this.network_data.networkContacts[0].mobile1})\n          \n          // this.xLXSArray.push({\n          \n          //   'Order date':this.order_data.createdOn,\n          //   'Created By':this.order_data.userName,\n          //   'Order No.':this.order_data.orderNumber,\n          //   'Order Quantity':this.order_data.quantity,\n          //   'GST Amount':this.order_data.gstAmount,\n          //   'Order Amount':this.order_data.amount,\n          //   'Total Order Amount':this.order_data.totalAmount,\n          //   'Company Status':(this.order_data.companyStatus==1?'Pending':(this.order_data.companyStatus==2?'Approved':'Hold')),\n          //   'Distributor Status':(this.order_data.dealerStatus==2?'Pending':(this.order_data.dealerStatus==3?'Approved':'Reject')),\n          // })\n          for(let i=0;i<this.order_data.orderDetail.length;i++)\n          {\n            this.xLXSArray.push({\n              'Dist Name':this.network_data.establishment,\n              'Dist Code':this.network_data.networkCode,\n              'Created By':this.order_data.createdByName,\n              'Order date':this.order_data.createdOn,\n              'Order No.':this.order_data.orderNumber,\n              'Contact Person Name':this.network_data.networkContacts[0].name,\n              'Contact Person Mobile no':this.network_data.networkContacts[0].mobile1,\n              'Part Number':this.order_data.orderDetail[i].partNumberCode,\n              'Product Name':this.order_data.orderDetail[i].productName,\n              'OEM Code':this.order_data.orderDetail[i].oem,\n              'Quantity':this.order_data.orderDetail[i].quantity,\n              'Unit Price':this.order_data.orderDetail[i].price,\n              'Amount':parseInt(this.order_data.orderDetail[i].price)*parseInt(this.order_data.orderDetail[i].quantity),\n              'GST %':this.order_data.orderDetail[i].gstPercentage,\n              'Total Order Amount':this.order_data.totalAmount,\n              'Company Status':(this.order_data.companyStatus==1?'Pending':(this.order_data.companyStatus==2?'Approved':'Hold')),\n              'Distributor Status':(this.order_data.dealerStatus==2?'Pending':(this.order_data.dealerStatus==3?'Approved':'Reject'))\n            })\n          }\n          \n        }\n        \n        exportAsXLSX():void {\n          console.log(this.xLXSArray);\n          this.db.exportAsExcelFile(this.xLXSArray, 'ORDER SHEET');\n        }\n      }\n      ","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/order_icon.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Order</h2>\\n        <p>Total Order {{orderlist.length}}</p>\\n        <!-- <div class=\\\"item-filter\\\" >\\n          <mat-form-field class=\\\"wp100\\\">\\n            <mat-select  name=\\\"travelPlanApprovel\\\" #travelPlanApprovel=\\\"ngModel\\\" [(ngModel)]=\\\"forApprovel\\\">\\n              <mat-option (click)=\\\"getTravelList(2)\\\" value=1>My Travel Plan</mat-option>\\n              <mat-option (click)=\\\"getTravelList(2)\\\" value=2>Wating For Approvel</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div> -->\\n      </div>\\n    </div>\\n    \\n    \\n    <div class=\\\"left-auto\\\">\\n      <div *ngIf=\\\"data.userName|| data.createdOn||data.companyName\\\" class=\\\"filter-container left-auto\\\">\\n        <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n          <button mat-button >CLEAR FILTER</button>\\n        </div>\\n      </div>\\n      <div class=\\\"tabs right-tab none-af\\\">\\n        <ul>\\n          <li>\\n            <a class=\\\"pr40 all\\\" [ngClass]=\\\"{'tab-active':orderActive==true}\\\" (click)=\\\"order_list(0,0)\\\">All\\n              <span class=\\\"counter\\\">{{allOredrQty.length}}</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a class=\\\"pr40 pending\\\" [ngClass]=\\\"{'tab-active':pendingActive==true}\\\" (click)=\\\"order_list(0,1)\\\">PENDING\\n              <span class=\\\"counter\\\">{{pendingOrderQty.length}}</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a class=\\\"pr40 approved\\\" [ngClass]=\\\"{'tab-active':approvedActive==true}\\\" (click)=\\\"order_list(3,2)\\\">APPROVE\\n              <span  class=\\\"counter\\\">{{approvedOrderQty.length}}</span>\\n            </a>\\n          </li>\\n          <li >\\n            <a class=\\\"pr40 hold\\\" [ngClass]=\\\"{'tab-active':holdActive==true}\\\" (click)=\\\"order_list(0,3)\\\">HOLD\\n              <span class=\\\"counter\\\">{{holdOrderQty.length}}</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a class=\\\" pr40 draft\\\" [ngClass]=\\\"{'tab-active':cartActive==true}\\\" (click)=\\\"order_list(1,0)\\\">Draft\\n              <span class=\\\"counter\\\" >{{draftOrderQty.length}}</span>\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    \\n    <!-- <div class=\\\"top-pagination m-right-data\\\">\\n      <ul>\\n        <li class=\\\"refresh-area af-none\\\">\\n          <a class=\\\"refresh-btn\\\" mat-raised-button  matTooltip=\\\"Refresh\\\"><i class=\\\"material-icons\\\"> refresh</i></a>\\n        </li>\\n      </ul>\\n    </div> -->\\n  </div>\\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head\\\">\\n                <table class=\\\"sno-border\\\"> \\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th class=\\\"w150\\\"> Date</th>\\n                    <th *ngIf=\\\"userRole==1\\\" class=\\\"w170\\\">Created By</th>\\n                    <th>Company Name</th>\\n                    <th *ngIf=\\\"cartActive==false && pendingActive==false\\\" class=\\\"w125\\\"> Order No</th>\\n                    <th class=\\\"w70 text-center\\\">QTY.</th>\\n                    <th class=\\\"w100 text-right\\\">Amount</th>\\n                    <th *ngIf=\\\"cartActive==false\\\" class=\\\"w100\\\"> Dist. Status</th>\\n                    <th *ngIf=\\\"cartActive==false\\\" class=\\\"w100\\\"> Comp. Status</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"table-head bdrt\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th class=\\\"w150\\\">\\n                      <div class=\\\"th-search padding0\\\" >\\n                        <mat-form-field class=\\\"wp100 toggle-date-picker\\\">\\n                          <input matInput (dateChange)=\\\"order_list(data.dealerStatus,data.companyStatus)\\\" name=\\\"createdOn\\\" [(ngModel)]=\\\"createdaDate\\\" [matDatepicker]=\\\"picker\\\" >\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                          <mat-datepicker  #picker></mat-datepicker>\\n                        </mat-form-field>\\n                      </div>\\n                    </th>\\n                    <th  *ngIf=\\\"userRole==1\\\" class=\\\"w170\\\">\\n                      <div class=\\\"th-search\\\">\\n                        <input type=\\\"text\\\" name=\\\"userName\\\" [(ngModel)]=\\\"data.userName\\\" (input)=\\\"order_list(data.dealerStatus,data.companyStatus)\\\">\\n                        <!-- <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\"removenamefilter()\\\"></a> -->\\n                      </div>\\n                    </th>\\n                    <th>\\n                      <div class=\\\"th-search\\\">\\n                        <input type=\\\"text\\\" placeholder=\\\"Search....\\\" name=\\\"establishment\\\" [(ngModel)]=\\\"data.companyName\\\" (input)=\\\"order_list(data.dealerStatus,data.companyStatus)\\\">  \\n                        <!-- <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\"removenamefilter()\\\"></a> -->\\n                      </div>\\n                    </th>\\n                    <th *ngIf=\\\"cartActive==false&& pendingActive==false\\\" class=\\\"w125\\\">&nbsp;</th>\\n                    <th class=\\\"w70\\\">&nbsp;</th>\\n                    <th class=\\\"w100\\\">&nbsp;</th>\\n                    <th *ngIf=\\\"cartActive==false\\\" class=\\\"w100\\\">&nbsp;</th>\\n                    <th *ngIf=\\\"cartActive==false\\\" class=\\\"w100\\\">&nbsp;</th>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor=\\\"let order of finalOrderList; let index = index\\\">\\n                    <td class=\\\"w30\\\">{{index+1}}</td>\\n                    <td class=\\\"w150\\\">{{order.createdOn |date :'EEEE, MMMM d, y'}}</td>\\n                    <td *ngIf=\\\"userRole==1\\\" class=\\\"w170\\\">{{order.createdByName}}</td>\\n                    <td><a class=\\\"link-btn\\\" (click)=\\\"orderDetail(index)\\\">{{order.establishment}}</a></td>\\n                    <td *ngIf=\\\"cartActive==false && pendingActive==false\\\" class=\\\"w125\\\">{{order.orderNumber}}</td>\\n                    <td class=\\\"w70 text-center\\\">{{order.quantity}}</td>\\n                    <td class=\\\"w100 text-right\\\">{{order.amount | currency: 'INR':true}}</td>\\n                    <td *ngIf=\\\"cartActive==false\\\" [ngClass]=\\\"{'draft':order.dealerStatus==1,'pending':order.dealerStatus==2,'approved':order.dealerStatus==3}\\\" class=\\\"w100\\\">\\n                      <span class=\\\"text-center\\\" *ngIf=\\\"order.dealerStatus=='1'\\\">Draft</span>\\n                      <span class=\\\"text-center\\\" *ngIf=\\\"order.dealerStatus=='2'\\\">Pending</span>\\n                      <span class=\\\"text-center\\\" *ngIf=\\\"order.dealerStatus=='3'\\\">Approve</span>\\n                    </td>\\n                    <td *ngIf=\\\"cartActive==false\\\" [ngClass]=\\\"{'pending':order.companyStatus==1,'approved':order.companyStatus==2,'reject':order.companyStatus==3}\\\" class=\\\"w100\\\">\\n                      <span class=\\\"text-center \\\" *ngIf=\\\"order.companyStatus=='1'\\\">Pending</span>\\n                      <span class=\\\"text-center \\\" *ngIf=\\\"order.companyStatus=='2'\\\">Approve</span>\\n                      <span class=\\\"text-center \\\" *ngIf=\\\"order.companyStatus=='3'\\\">Hold</span>\\n                    </td>\\n                    \\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"data-not-available\\\" *ngIf=\\\"div\\\">\\n      <div class=\\\"outer\\\">\\n        <div class=\\\"iinear\\\">\\n          <div class=\\\"figure\\\" matRipple>\\n            <div class=\\\"header\\\">\\n              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n            </div>\\n            \\n            <div class=\\\"description\\\">\\n              <!-- <div class=\\\"cs-heading\\\">\\n                <h2 *ngIf=\\\"cartActive=='active'\\\">Nothing In Draft</h2>\\n                <h2 *ngIf=\\\"orderActive=='active'\\\">No Order List</h2>\\n                \\n              </div> -->\\n              <div class=\\\"img\\\">\\n                <i class=\\\"material-icons\\\">error_outline</i>\\n              </div>\\n              <div class=\\\"psc\\\">\\n                <p>data not available</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" matRipple routerLink=\\\"/add-order\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { esLocale } from 'ngx-bootstrap';\n\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  animations: [slideToTop()]\n  \n})\nexport class OrderListComponent implements OnInit {\n  loader:any=false;\n  orderlist:any=[];\n  userdata:any=[];\n  senddata:any;\n  div:any=false\n  orderDiv:any\n  userData:any={}\n  userType:any;\n  userId:any;\n  userRole:any;\n  cartActive:boolean=false\n  orderActive:boolean=false\n  pendingActive:boolean=false\n  holdActive:boolean=false\n  approvedActive:boolean=false\n  pendingOrderQty:any=[];\n  approvedOrderQty:any=[];\n  holdOrderQty:any=[];\n  draftOrderQty:any=[];\n  constructor(public db:ConstantService,public user:sessionStorage,public router: Router) {\n    this.userData = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.userData.data.userType;\n    this.userId = this.userData.data.userId;\n    this.userRole=this.userData.data.role;\n    this.pendingActive=true\n  }\n  \n  ngOnInit() {\n    this.userdata=this.user['user']['data'];\n    if(this.userdata['userType']==3){\n      console.log(this.userdata['distributerNetwork']['networkId']);\n    }\n    this.order_list(0,1);\n    this.getPendingOrderCount();\n    this.getApprovedOrderCount();\n    this.getHoldOrderCount();\n    this.getDraftOrderCount();\n    this.getAllOrderCount();\n  }\n  data:any={}\n  createdaDate:any;\n  order_list(dealerStatus,companyStatus)\n  {\n    this.orderlist=[];\n    this.finalOrderList=[];\n    this.div=false\n    let date;\n    if(this.createdaDate)\n    {\n      console.log(this.createdaDate);\n      \n      date=moment(this.createdaDate).format('YYYY-MM-DD');\n      this.data.createdOn=date;\n    }\n    this.loader=true;\n    // this.data.createdOn=moment(this.data.createdOn).format('YYYY-MM-DD')\n    console.log(dealerStatus,companyStatus);\n    \n    this.data.dealerStatus=dealerStatus;\n    this.data.companyStatus=companyStatus;\n    if(this.data.dealerStatus==0 && this.data.companyStatus==0)\n    {\n      this.orderActive=true;\n      this.cartActive=false;\n      this.pendingActive=false;\n      this.holdActive=false;\n      this.approvedActive=false;\n    }\n    if(this.data.dealerStatus==1 && this.data.companyStatus==0)\n    {\n      this.orderActive=false;\n      this.cartActive=true;\n      this.pendingActive=false;\n      this.holdActive=false;\n      this.approvedActive=false;\n    }\n    if(this.data.dealerStatus==0 && this.data.companyStatus==1)\n    {\n      // this.data.dealerStatus=2;\n      this.getpendingorderList(2)\n\n      this.orderActive=false;\n      this.cartActive=false;\n      this.pendingActive=true;\n      this.holdActive=false;\n      this.approvedActive=false;\n    }\n    if(this.data.dealerStatus==3 && this.data.companyStatus==2)\n    {\n      this.orderActive=false;\n      this.cartActive=false;\n      this.pendingActive=false;\n      this.holdActive=false;\n      this.approvedActive=true;\n    }\n    if(this.data.dealerStatus==0 && this.data.companyStatus==3)\n    {\n      this.orderActive=false;\n      this.cartActive=false;\n      this.pendingActive=false;\n      this.holdActive=true;\n      this.approvedActive=false;\n    }\n    this.data.currentPage=1;\n    this.data.pageSize=50;\n    console.log(this.userdata['userType']);\n    if(this.userdata['userType']==3)\n    {\n      this.data.networkId=this.userdata['distributerNetwork']['networkId'];\n      this.data.userId=undefined\n      this.data.currentPage=1;\n      this.data.pageSize=50;\n    }\n    if(this.userdata['userType']==2)\n    {\n      this.data.userId=this.userdata['userId'];\n      this.data.networkId=undefined\n      this.data.currentPage=1;\n      this.data.pageSize=50;\n    }\n    else{\n      this.data.currentPage=1;\n      this.data.pageSize=50;\n    }\n    this.db.fetchData(this.data,'order/list').subscribe((response)=>{\n      console.log(response);\n      // this.orderActive=true;\n      if(response['status']=='Success')\n      {\n        \n        this.orderlist = response['data'];\n        this.finalOrderList=this.orderlist;\n      }\n      if(response['status']=='Failed')\n      {\n        this.div=true;\n      }\n      this.loader=false;\n    });\n  }\n  \n  getpendingorderList(status)\n  {\n    // let value={dealerStatus:status,companyStatus:0, currentPage:1,pageSize:200,networkId:'',userId:''}\n    // if(this.userdata['userType']==3)\n    // {\n    //   value.networkId=this.userdata['distributerNetwork']['networkId'];\n    //   value.userId=undefined\n      \n    // }\n    // else\n    // {\n    //   value.userId=this.userdata['userId'];\n    //   value.networkId=undefined\n    // }\n    // this.db.fetchData(value,\"order/list\").subscribe((result)=>{\n    //   console.log(result);\n    //   if(result['status']=='Success')\n    //   {\n\n    //     for(let i=0;i<result['data'].length;i++)\n    //     {\n    //       const orderArray=this.orderlist.filter(row=>row.orderId!=result['data'][i]['orderId']);\n\n    //     }\n\n    //        this.finalOrderList=this.finalOrderList.concat(orderArray);\n\n    //     // this.pendingOrderQty=this.pendingOrderQty.concat(result['data']);\n    //   }\n      \n    // })\n  }\n  \n  \n  finalOrderList:any=[];\n  \n  orderDetail(index)\n  {\n    if(this.finalOrderList[index].dealerStatus==1)\n    {\n      console.log(\"router work\");\n      this.router.navigate(['edit-order/'+this.finalOrderList[index].orderId])\n    }\n    if(this.finalOrderList[index].dealerStatus==2 || this.finalOrderList[index].dealerStatus==3)\n    {\n      this.router.navigate(['order-detail/'+this.finalOrderList[index].orderId])\n    }\n  }\n  \n  getPendingOrderCount()\n  {\n    \n    let value={dealerStatus:0,companyStatus:1,currentPage:1,pageSize:1000,networkId:'',userId:''}\n    if(this.userdata['userType']==3)\n    {\n      value.networkId=this.userdata['distributerNetwork']['networkId'];\n      value.userId=undefined\n      \n    }\n    else\n    {\n      value.userId=this.userdata['userId'];\n      value.networkId=undefined\n    }\n    \n    this.db.fetchData(value,\"order/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.pendingOrderQty=result['data'];\n        this.getpendingorderList(2);\n      }\n    })\n  }\n  \n  getApprovedOrderCount()\n  {\n    let value={dealerStatus:3,companyStatus:2,currentPage:1,pageSize:1000,networkId:'',userId:''}\n    if(this.userdata['userType']==3)\n    {\n      value.networkId=this.userdata['distributerNetwork']['networkId'];\n      value.userId=undefined\n      \n    }\n    else\n    {\n      value.userId=this.userdata['userId'];\n      value.networkId=undefined\n    }\n    this.db.fetchData(value,\"order/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.approvedOrderQty=result['data'];\n      }\n    })\n  }\n  \n  \n  getDraftOrderCount()\n  {\n    let value={dealerStatus:1,companyStatus:0,currentPage:1,pageSize:1000,networkId:'',userId:''}\n    if(this.userdata['userType']==3)\n    {\n      value.networkId=this.userdata['distributerNetwork']['networkId'];\n      value.userId=undefined\n      \n    }\n    else\n    {\n      value.userId=this.userdata['userId'];\n      value.networkId=undefined\n    }\n    this.db.fetchData(value,\"order/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.draftOrderQty=result['data'];\n      }\n    })\n  }\n  \n  allOredrQty:any=[]\n  getAllOrderCount()\n  {\n    let value={dealerStatus:0,companyStatus:0,currentPage:1,pageSize:1000,networkId:'',userId:''}\n    if(this.userdata['userType']==3)\n    {\n      value.networkId=this.userdata['distributerNetwork']['networkId'];\n      value.userId=undefined\n      \n    }\n    else\n    {\n      value.userId=this.userdata['userId'];\n      value.networkId=undefined\n    }\n    this.db.fetchData(value,\"order/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.allOredrQty=result['data'];\n      }\n    })\n  }\n  \n  getHoldOrderCount()\n  {\n    let value={dealerStatus:0,companyStatus:3,currentPage:1,pageSize:1000,networkId:'',userId:''}\n    if(this.userdata['userType']==3)\n    {\n      value.networkId=this.userdata['distributerNetwork']['networkId'];\n      value.userId=undefined\n      \n    }\n    else\n    {\n      value.userId=this.userdata['userId'];\n      value.networkId=undefined\n    }\n    this.db.fetchData(value,\"order/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.holdOrderQty=result['data'];\n      }\n    })\n  }\n  \n  clearfilter(){\n    let data;\n    this.data={};\n    this.data.currentPage=1;\n    this.data.pageSize=50;\n    console.log(this.userdata['userType']);\n    if(this.userdata['userType']==3)\n    {\n      this.data.networkId=this.userdata['distributerNetwork']['networkId']\n    }\n    else if(this.userdata['userType']==2)\n    {\n      this.data.userId=this.userdata['userId']\n    }\n    else\n    {\n      this.senddata={\"currentPage\": 1,\"pageSize\": 50};\n    }\n    this.createdaDate='';\n    this.data.createdOn=undefined\n    this.order_list(0,1);\n  }\n  \n}\n","module.exports = \"<div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n\\n\\n<div class=\\\"edit-modal\\\">\\n<mat-dialog-content >\\n    <p class=\\\"heading\\\">Other Address</p>\\n  \\n  <div class=\\\"from-fields\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s6\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <input matInput placeholder=\\\"Shop/Office No\\\" name=\\\"office\\\" id=\\\"office\\\"  #office=\\\"ngModel\\\" [(ngModel)]=\\\"networkShippings.office\\\" required>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col s6\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <input matInput placeholder=\\\"Landline No\\\" name=\\\"landline\\\" id=\\\"landline\\\" minlength=\\\"10\\\" maxlength=\\\"13\\\" (keypress)=\\\"MobileNumber($event)\\\"  #landline=\\\"ngModel\\\" [(ngModel)]=\\\"networkShippings.landline\\\">\\n          </mat-form-field>\\n          <div *ngIf=\\\"landline.invalid && landline.touched\\\">\\n              <mat-error *ngIf=\\\"landline.length<10\\\" >Minimum 10 Digits Required </mat-error>\\n            </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s6\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <input matInput placeholder=\\\"Mobile No*\\\" name=\\\"mobile\\\" id=\\\"mobile\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" (keypress)=\\\"MobileNumber($event)\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"networkShippings.mobile\\\" required>\\n          </mat-form-field>\\n           <div *ngIf=\\\"mobile.invalid && mobile.touched\\\">\\n              <mat-error *ngIf=\\\"mobile.length!=10\\\" >Minimum 10 Digits Required </mat-error>\\n            </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col s6\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <input matInput placeholder=\\\"Fax No\\\" name=\\\"fax\\\" id=\\\"fax\\\" (keypress)=\\\"MobileNumber($event)\\\" maxlength=\\\"15\\\"  #fax=\\\"ngModel\\\" [(ngModel)]=\\\"networkShippings.fax\\\">\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput placeholder=\\\"Email ID\\\" id=\\\"email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"networkShippings.email\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>\\n            </mat-form-field>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n                Email Id is Not Valid...\\n              </div>\\n          </div>\\n        </div>\\n          <div class=\\\"col s6 pr0\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <textarea matInput placeholder=\\\"Street\\\" name=\\\"street\\\" [(ngModel)]=\\\"networkShippings.street\\\" required></textarea>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n      </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s6 pl0\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <mat-select placeholder=\\\"State*\\\" name=\\\"state\\\" [(ngModel)]=\\\"networkShippings.state\\\"  #state=\\\"ngModel\\\">\\n              <mat-option  (click)=\\\"getShippingDistrict(networkShippings.state)\\\" *ngFor='let state of shippingState' value=\\\"{{state}}\\\">{{state}}</mat-option>  \\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"col s6\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <mat-select placeholder=\\\"District*\\\" name=\\\"district\\\" [(ngModel)]=\\\"networkShippings.district\\\"  #district=\\\"ngModel\\\" >\\n              <mat-option (click)=\\\"getShippingCity(networkShippings.state,networkShippings.district)\\\"  value=\\\"{{district.districtName}}\\\" *ngFor=\\\"let district of shippingDistrict\\\">{{district.districtName}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s6 p10\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <mat-select placeholder=\\\"City*\\\" name=\\\"city\\\" [(ngModel)]=\\\"networkShippings.city\\\" #city=\\\"ngModel\\\" >\\n              <mat-option (click)=\\\"getShippingPin(city.stateMasterId)\\\" *ngFor=\\\"let city of shippingCity\\\"  value=\\\"{{city.cityName}}\\\">{{city.cityName}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n   \\n      <div class=\\\"col s6 pl0\\\">\\n        <div class=\\\"control-field\\\">\\n          <mat-form-field class=\\\"cs-input\\\">\\n            <mat-select placeholder=\\\"Pincode*\\\"  name=\\\"pin\\\" [(ngModel)]=\\\"networkShippings.pin\\\"  #pin=\\\"ngModel\\\" >\\n              <mat-option *ngFor=\\\"let pin of shippingPin\\\"  value=\\\"{{pin}}\\\">{{pin}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n  <button mat-raised-button color=\\\"accent\\\" [mat-dialog-close]=\\\"true\\\" style=\\\"color: #fff;\\\" cdkFocusInitial [disabled]=\\\"!networkShippings.office||!networkShippings.mobile||!networkShippings.email||!networkShippings.state||!networkShippings.district||!networkShippings.city||!networkShippings.pin||!networkShippings.street\\\" (click)=\\\"saveAddress()\\\">Save</button>\\n</mat-dialog-actions>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL290aGVyLWFkZHJlc3Mvb3RoZXItYWRkcmVzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-other-address',\n  templateUrl: './other-address.component.html',\n  styleUrls: ['./other-address.component.scss']\n})\nexport class OtherAddressComponent implements OnInit {\n\n  shippingState:any=[];\n  shippingDistrict:any=[];\n  shippingCity:any=[];\n  shippingPin:any=[];\n  loader:any=false;\n  networkShippings:any={};\n  networkId:any;\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public db:ConstantService,public dialog:MatDialog) { \n\n    console.log(data);\n    this.networkShippings.networkId=data.id;\n    console.log(this.networkShippings.networkId);\n    \n    this.getshippingState();\n  }\n\n  ngOnInit() {\n  }\n\n  saveAddress()\n  {\n    this.loader=true;\n    console.log(\"SAve\");\n    console.log(this.networkShippings);\n    \n    this.db.fetchData(this.networkShippings,\"shippingaddress/update\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n    })\n    this.dialog.closeAll();\n  }\n\n  getshippingState()\n  {\n    this.loader=true;\n    this.db.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.shippingState=response['data'];\n    });\n  }\ngetShippingDistrict(state)\n{\n  this.loader=true;\n  this.db.fetchData(Array(state),'district/list/').subscribe((response)=>{\n    this.loader=false;\n    console.log(response);\n    this.shippingDistrict=response['data'][0].distrcits;\n    // console.log(this.district1);\n  });\n}\n\ngetShippingCity(state,district)\n{\n  this.loader=true;\n  this.db.fetchData(Array({\"stateName\":state,\"distrcits\":Array({'districtName':district})}),'city/list').subscribe((response)=>{\n    console.log(response);\n    this.loader=false\n    this.shippingCity=response['data'][0].distrcits[0].cities;\n    console.log(this.shippingCity);\n  });\n}\n\nMobileNumber(event: any)\n{\n  const pattern = /[0-9\\+\\-\\ ]/;\n  let inputChar = String.fromCharCode(event.charCode);if (event.keyCode != 8 && !pattern.test(inputChar))\n  {event.preventDefault();}\n}\n\n\ncitylist:any=[];\ndistricts2:any=[];\ncities1:any=[];\nmasterId:any=[];\ngetShippingPin(masterId)\n{\n  console.log(masterId);\n  this.masterId.push(masterId)\n  this.loader=true;\n  this.db.fetchData({\"stateMasterIds\":this.masterId},'city/pincodes').subscribe((response)=>{\n    console.log(response);\n    this.loader=false\n    this.shippingPin=response['data'][0]['pinCodes'];\n    console.log(this.shippingPin);\n    \n    // this.districts2=this.citylist[0].distrcits;\n    // this.cities1=this.districts2[0].cities;\n    // let filterpincode= this.cities1.filter(x => x.cityName==this.networkShippings.city);\n    // this.shippingPin=filterpincode[0].pinCodes;\n  });\n}\n}\n","module.exports = \"\\n<div class=\\\"edit-modal\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n          <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n        </div>\\n      \\n<mat-dialog-content class=\\\"mat-typography pl15 pr15\\\" style=\\\"overflow-x: hidden !important; position: relative;\\\">\\n<p class=\\\"heading\\\">PRODUCT INFORMATION</p>\\n<div class=\\\"col s12 padding0\\\">\\n  <div class=\\\"cs-table left-right-15\\\">\\n      <div class=\\\"table-head\\\">\\n          <table>\\n              <tr>\\n                  <th class=\\\"w180\\\">Order Date</th>\\n                  <th class=\\\"w100\\\">Order QTY</th>\\n                  <th class=\\\"w100\\\">Order Amount</th>\\n                  <th class=\\\"w130\\\">Order Number</th>\\n                  <th class=\\\"w110\\\">Distributor Status</th>\\n                  <th class=\\\"w110\\\">Company Status</th>\\n              </tr>\\n          </table>\\n      </div>\\n      <div class=\\\"table-container pb0\\\">\\n          <div class=\\\"table-content\\\">\\n              <table>\\n                  <tr *ngFor=\\\"let order of productList;let index=index\\\">\\n                      <td class=\\\"w180\\\">{{order.createdOn |date :'EEEE, MMMM d, y'}}</td>\\n                      <td class=\\\"w100\\\">{{order.quantity}}</td>\\n                      <td class=\\\"w100\\\">{{order.amount}}</td>\\n                      <td class=\\\"w130\\\">---</td>\\n                      <td class=\\\"w110\\\" [ngClass]=\\\"{'pending':order.dealerStatus==2,'approved':order.dealerStatus==3}\\\">\\n                          <span class=\\\"text-center\\\" *ngIf=\\\"order.dealerStatus==2\\\">Pending</span>\\n                          <span class=\\\"text-center\\\" *ngIf=\\\"order.dealerStatus==3\\\">Approved</span>\\n                        </td>\\n                        <td class=\\\"w110 \\\"[ngClass]=\\\"{'pending':order.companyStatus==1,'approved':order.companyStatus==2,'reject':order.companyStatus==3}\\\">\\n                          <span class=\\\"text-center\\\" *ngIf=\\\"order.companyStatus==1\\\">Pending</span>\\n                          <span class=\\\"text-center\\\" *ngIf=\\\"order.companyStatus==2\\\">Approved</span>\\n                          <span class=\\\"text-center\\\" *ngIf=\\\"order.companyStatus==3\\\">Hold</span>\\n                        </td>\\n                    </tr>\\n              </table>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"end\\\">\\n<button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\">Close</button>\\n</mat-dialog-actions>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL3BlbmRpbmctb3JkZXIvcGVuZGluZy1vcmRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { ConstantService } from 'src/app/constant.service';\n\n@Component({\n  selector: 'app-pending-order',\n  templateUrl: './pending-order.component.html',\n  styleUrls: ['./pending-order.component.scss']\n})\nexport class PendingOrderComponent implements OnInit {\n\n  productList:any=[];\n  tmp_productList:any=[];\n  finalProductList:any=[];\n\n  category:any;\n\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public dialog:MatDialog) {\n\n    console.log(data);\n    this.productList=data;\n    console.log(this.productList);\n    \n    // this.tmp_productList=data['product'];\n    // this.finalProductList=data['product'];\n\n    \n    // console.log(this.productList);\n    \n    \n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"edit-modal\\\">\\n    <mat-dialog-content  style=\\\"overflow-x: hidden !important;\\\">\\n      <p class=\\\"heading\\\">Offer Description</p>\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"container\\\" >\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col s12 padding0\\\">\\n\\n                <ul class=\\\"terms-condition mt15\\\">\\n                    <li *ngFor=\\\"let scheme of schemeList\\\">{{scheme.offerDescription}}</li>\\n                </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </mat-dialog-content>\\n    <mat-dialog-actions align=\\\"end\\\">\\n      <button mat-raised-button color=\\\"warn\\\"[mat-dialog-close]=\\\"false\\\" cdkFocusInitial>Close</button>\\n    </mat-dialog-actions>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL3NjaGVtZXBvcHVwL3NjaGVtZXBvcHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-schemepopup',\n  templateUrl: './schemepopup.component.html',\n  styleUrls: ['./schemepopup.component.scss']\n})\nexport class SchemepopupComponent implements OnInit {\n\n  schemeList:any;\n  constructor(@Inject(MAT_DIALOG_DATA)public data) {\n    console.log(data);\n    this.schemeList=data;\n    console.log(this.schemeList);\n    \n    // this.user=data.User;\n    // this.status=data.status;\n   }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  \\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/gift.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Gift</h2>\\n        <p>POP & Gift Order</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\" *ngIf=\\\"userType!=3\\\"> \\n        <div class=\\\"sprate-box pt0\\\">\\n          <div class=\\\"cs-heading\\\">\\n            <h2>Select Distributor</h2>\\n          </div>\\n          <div class=\\\"col s6 from-fields\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                <mat-select placeholder=\\\"Distributor\\\" name=\\\"networkId\\\" [(ngModel)]=\\\"distributorId.networkId\\\">\\n                  <mat-option (click)=\\\"getNetworkRedeemPointData()\\\" *ngFor=\\\"let distributor of distributorList\\\" [value]=\\\"distributor.networkId\\\">{{distributor.establishment}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div  *ngIf=\\\"distributorId.networkId\\\" class=\\\"row\\\">\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>POP & GIFT Order</h2>\\n            </div>\\n            \\n            <div class=\\\"gift-secation\\\">\\n              <ul>\\n                <li [ngClass]=\\\"{'add-cart': list.itemSelected}\\\" *ngFor=\\\"let list of giftlist;let i=index\\\">\\n                  \\n                  <img [hidden]=\\\"list.documents.length>0 && j!=0\\\" src=\\\"{{api+doc.documentId+'/'+'1'}}\\\" *ngFor=\\\"let doc of list.documents;let j=index\\\">\\n                  \\n                  <img *ngIf=\\\"list.documents.length==0\\\" src=\\\"assets/img/pp.png\\\">\\n                  \\n                  <div class=\\\"tittle\\\">\\n                    {{list.name}}\\n                  </div>\\n                  <div class=\\\"dflex\\\">\\n                    <div class=\\\"value\\\">\\n                      <p>Points</p>\\n                      <p>{{list.redeem}}</p>\\n                    </div>\\n                    <div class=\\\"add-qty\\\">\\n                      <input type=\\\"number\\\" [(ngModel)]=\\\"list.qty\\\" (keyup)=\\\"qtyChangeHandler(list.popId )\\\" (keyup.enter)=\\\"addToCartHandler()\\\">\\n                    </div>\\n                  </div>\\n                </li>\\n                \\n              </ul>\\n            </div>\\n            \\n            <div class=\\\"add-cart mt5\\\">\\n              <div class=\\\"cs-btn text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button (click)=\\\"addToCartHandler()\\\" [disabled]=\\\"walletBalance < 1\\\" mat-raised-button color=\\\"accent\\\">Add To Cart</button>\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"walletBalance < 1\\\" class=\\\"has-error\\\"> \\n                You Have Not Enough Wallet Points....\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col s4 right-sticky\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div class=\\\"cs-logs\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Wallet Section</h2>\\n              </div>\\n              <div class=\\\"wallet-details\\\">\\n                <p>Total Wallet Points</p>\\n                <span>{{walletBalance}}</span>\\n              </div>\\n              \\n              <div class=\\\"wallet-procsess\\\">\\n                <ul>\\n                  <li>\\n                    <p>Total Item</p>\\n                    <span>{{cartData.length}}</span>\\n                  </li>\\n                  <li>\\n                    <p>Used Points</p>\\n                    <span>{{totalPointsRedeemed ? totalPointsRedeemed : 0}}</span>\\n                  </li>\\n                  <li>\\n                    <p>Available Points</p>\\n                    <span>{{totalPointsRedeemed ? walletBalance - totalPointsRedeemed : walletBalance}}</span>\\n                  </li>\\n                </ul>\\n              </div>\\n              \\n              <div *ngIf=\\\"this.cartData && this.cartData.length>0\\\" class=\\\"add-cart mt5\\\">\\n                <a class=\\\"full-detail\\\" mat-button (click)=\\\"openDialog()\\\">View Details</a>\\n              </div>\\n              \\n              <div class=\\\"add-cart mt5\\\">\\n                <div class=\\\"cs-btn text-right\\\">\\n                  <div class=\\\"in-btn\\\">\\n                    <button [disabled]=\\\"this.cartData.length==0\\\" (click)=\\\"placeOrder();\\\" mat-raised-button color=\\\"accent\\\">Place Gift Order</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { WalletDetailModalComponent } from '../wallet-detail-modal/wallet-detail-modal.component';\nimport { DialogComponent } from 'src/app/dialog';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport * as moment from 'moment';\nimport { Router } from '@angular/router';\n\n@Component({\n      selector: 'app-pop-and-gift-distributor-add',\n      templateUrl: './pop-and-gift-distributor-add.component.html'\n})\nexport class PopAndGiftDistributorAddComponent implements OnInit {\n      \n      loader:boolean;\n      giftlist:any = [];\n      url:any;\n      request:any;\n      api:any;\n      \n      cartData:any = [];\n      loginData:any = {};\n      walletBalance:any;\n      totalPointsRedeemed:any;\n      user:any={}\n      userType:any;\n      userId:any;\n      userRole:any;\n      constructor(public dialog: MatDialog, public db:ConstantService,public rout:Router, public toast:SnackBarOverview) {\n            \n            this.user = JSON.parse(localStorage.getItem('user')) || [];\n            console.log(this.user);\n            this.userType = this.user.data.userType;\n            this.userId = this.user.data.userId;\n\n            if(this.userType!=3)\n            {\n                  this.getDistributorList();\n            }\n      }\n      \n      ngOnInit() {\n            \n            \n            this.loginData = JSON.parse(localStorage.getItem('user')) || [];\n            console.log(this.loginData);\n            \n            if(this.loginData.data.userType==3) {\n                  \n                  this.getNetworkRedeemPointData();\n            }\n            \n            this.getPopGiftList();\n      }\n      \n      distributorList:any=[]\n      getDistributorList(){\n            this.loader=true;\n            let url;\n            let data;\n            if(this.userType!=1)\n            {\n                  url='mynetwork/detail';\n                  data={salesUserId:this.userId};\n            }\n            else\n            {\n                  url='network/list';\n                  data={};\n            }\n            this.db.fetchData(data,url).subscribe((result)=>{\n                  console.log(result);\n                  if(result['status']=='Success')\n                  {\n                        this.distributorList=result['data'];\n                  }\n            })\n      }\n      openDialog(): void {\n            \n            const dialogRef = this.dialog.open(WalletDetailModalComponent, {\n                  width: '768px',\n                  data: this.cartData\n            });\n            \n            dialogRef.afterClosed().subscribe(result => {\n                  \n                  console.log('The dialog was closed');\n            });\n      }\n      \n      distributorId:any={}\n      getNetworkRedeemPointData() {\n            \n            this.loader = true;\n            \n            if(this.userType==3)\n            {\n                  this.distributorId.networkId=this.loginData['data']['distributerNetwork']['networkId'];\n            }\n            console.log(this.distributorId.networkId);\n            this.db.fetchData({networkId: this.distributorId.networkId},'network/list').subscribe((response)=>{\n                  \n                  console.log(response);\n                  \n                  this.walletBalance = response['data'][0]['wallet'];\n                  \n                  console.log(this.walletBalance);\n                  \n                  this.loader = false;\n                  \n            });\n            \n      }\n      \n      \n      \n      getPopGiftList() {\n            \n            \n            this.loader = true;\n            \n            this.db.fetchData({},'pop/list').subscribe((response)=>{\n                  \n                  console.log(response);\n                  \n                  this.loader = false;\n                  this.giftlist = response['data'];\n                  // this.gifts=this.giftlist.data;\n                  this.url=this.db.dburl;\n                  this.request='download/document/';\n                  this.api=this.url+this.request;\n                  \n                  console.log(this.request);\n                  console.log(this.url);\n                  console.log(this.api);\n                  \n            });\n      }\n      \n      \n      qtyChangeHandler(popId) {\n            \n            const index = this.giftlist.findIndex(row=> row.popId == popId);\n            \n            if(index != -1) {\n                  \n                  if(this.giftlist[index].qty < 0) {\n                        this.giftlist[index].qty = 0;    \n                  }\n            }\n            \n      }\n      \n      addToCartHandler() {\n            \n            for (let index = 0; index < this.giftlist.length; index++) {\n                  \n                  if(this.giftlist[index].qty > 0) {\n                        \n                        const indexExist = this.cartData.findIndex(row=> row.popId == this.giftlist[index].popId);\n                        \n                        if(indexExist == -1) {\n                              \n                              const totalRedeemPoint = this.giftlist[index].redeem *  this.giftlist[index].qty;\n                              \n                              this.cartData.push({popId:this.giftlist[index].popId, name: this.giftlist[index].name, quantity: this.giftlist[index].qty, redeemPointsPerUnit: this.giftlist[index].redeem, totalPointsRedeemed: totalRedeemPoint});\n                              \n                        } else {\n                              \n                              this.cartData[indexExist].name = this.giftlist[index].name;\n                              this.cartData[indexExist].quantity = this.giftlist[index].qty;\n                              this.cartData[indexExist].redeemPointsPerUnit = this.giftlist[index].redeem;\n                              \n                              const totalRedeemPoint = this.giftlist[index].qty * this.giftlist[index].redeem;\n                              \n                              this.cartData[indexExist].totalPointsRedeemed = totalRedeemPoint;\n                        }\n                        \n                  } else if(this.giftlist[index].qty == 0) {\n                        \n                        const indexExist = this.cartData.findIndex(row => row.popId == this.giftlist[index].popId);\n                        \n                        if (indexExist != -1) {\n                              this.cartData.splice(indexExist, 1);\n                        } \n                  }\n            }\n            \n            console.log(this.cartData);\n            \n            this.totalPointsRedeemed = 0;\n            \n            for (let index = 0; index < this.cartData.length; index++) {\n                  this.totalPointsRedeemed += this.cartData[index].totalPointsRedeemed;\n            }\n            \n            for (let index = 0; index < this.giftlist.length; index++) {\n                  \n                  const isItemExist = this.cartData.findIndex(row => row.popId == this.giftlist[index].popId);\n                  \n                  if(isItemExist != -1) {\n                        \n                        this.giftlist[index].itemSelected = true;\n                  } else {\n                        \n                        this.giftlist[index].itemSelected = false;\n                  }\n                  \n            }\n            \n            this.toast.openSucess('Cart Updated Successfully','');\n      }\n      \n      \n      placeOrder() {\n            \n            let totalPointsRedeemed = 0;\n            \n            for (let index = 0; index < this.cartData.length; index++) {\n                  \n                  totalPointsRedeemed += this.cartData[index].totalPointsRedeemed;\n            }\n            \n            console.log(totalPointsRedeemed);\n            \n            const loginUser = JSON.parse(localStorage.getItem('user')) || [];\n            console.log(loginUser);\n            \n            const currentDate = moment().format('YYYY-MM-DD');\n            \n            console.log(currentDate);\n            \n            const apiData = {\n                  \n                  'popOrderId': 0,\n                  'networkId': this.loginData['data']['distributerNetwork']['networkId'],\n                  'totalPointsRedeemed': totalPointsRedeemed,\n                  'createdBy': loginUser.data.userId,\n                  'createdOn': currentDate,\n                  'status': 0,\n                  'statusUpdatedBy': 0,\n                  'statusUpdatedOn': currentDate,\n                  'orderedItems': this.cartData\n            }\n            \n            this.loader = true;\n            \n            this.db.fetchData(apiData,'poporder/add').subscribe((response)=>{\n                  \n                  console.log(response);\n                  \n                  this.loader = false;\n                  this.toast.openSucess('Gift Order Placed Successfully','');\n                  \n                  this.rout.navigate(['/order-list']);\n                  \n            });\n            \n      }\n      \n      \n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/gift.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Pop/Gifts Orders</h2>\\n        <p>Total <span>{{popOrderData.length}}</span></p>\\n      </div>\\n    </div>\\n\\n    <!-- <div  *ngIf=\\\"filter.gift\\\" class=\\\"filter-container left-auto\\\">\\n      <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n        <button mat-button >CLEAR FILTER</button>\\n      </div>\\n    </div> -->\\n    \\n    \\n    <div *ngIf=\\\"loginData.data.userType==3\\\" class=\\\"left-auto\\\">\\n      <div class=\\\"wallet-details w300 mb0 mt0\\\">\\n        <p>Total Wallet Points</p>\\n        <span style=\\\"font-size: 16px; font-weight: 700;\\\">{{walletBalance}}</span>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th class=\\\"w110\\\">Date</th>\\n                    <th *ngIf=\\\"loginData.data.role==1 && loginData.data.superAdmin\\\" class=\\\"w110\\\">Company</th>\\n                    <th class=\\\"padding0\\\">\\n                      <table>\\n                        <tr>\\n                          <th>Pop & Gift</th>\\n                          <th class=\\\"w100\\\">Qty</th>\\n                          <th class=\\\"w130\\\">Qty Per Points</th>\\n                        </tr>\\n                      </table>\\n                    </th>\\n                    <th class=\\\"w170\\\">Total Redeem</th>\\n                    <th class=\\\"w130\\\">Status</th>\\n                    <th class=\\\"w130\\\">Action</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"table-head bdrt\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th  class=\\\"w110\\\">&nbsp;</th>\\n                    <th *ngIf=\\\"loginData.data.role==1 && loginData.data.superAdmin\\\" class=\\\"w110\\\">&nbsp;</th>\\n                    <th class=\\\"padding0\\\">\\n                      <table>\\n                        <tr>\\n                          <th>\\n                            <div class=\\\"th-search-acmt\\\">\\n\\n                              <mat-form-field class=\\\"wp100\\\">\\n                               <input type=\\\"text\\\"  name=\\\"name\\\" [(ngModel)]=\\\"filter.name\\\" (ngModelChange)=\\\"giftNameSearchList()\\\" matInput [matAutocomplete]=\\\"auto4\\\">\\n\\n                                    <mat-autocomplete #auto4=\\\"matAutocomplete\\\" >\\n                                      <mat-option *ngFor='let list of giftSearchData'  (click)=\\\"productFilter()\\\" value=\\\"{{list.name}}\\\">{{list.name}}</mat-option>\\n                                    </mat-autocomplete>\\n\\n                                    <a *ngIf=\\\"showClearIcon\\\" class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removeNameFilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                             \\n                              </mat-form-field>\\n                            </div>\\n                          </th>\\n                          <th class=\\\"w100\\\">&nbsp;</th>\\n                          <th class=\\\"w130\\\">&nbsp;</th>\\n                        </tr>\\n                      </table>\\n                    </th>\\n                    <th class=\\\"w170\\\">&nbsp;</th>\\n                    <th class=\\\"w130\\\">&nbsp;</th>\\n                    <th class=\\\"w130\\\">&nbsp;</th>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor=\\\"let list of popOrderData; let index = index;\\\">\\n\\n                    <td class=\\\"w30\\\">{{index+1}}</td>\\n\\n                    <td class=\\\"w110\\\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\\n\\n                    <td *ngIf=\\\"loginData.data.role==1 && loginData.data.superAdmin\\\" class=\\\"w110\\\">{{list.establishment}}</td>\\n\\n                    <td class=\\\"padding0\\\">\\n                      <table class=\\\"inner-table\\\">\\n                        <tr *ngFor=\\\"let row of list.orderedItems\\\">\\n                          <td>\\n                            <a class=\\\"link-btn\\\" mat-button routerLinkActive=\\\"active\\\">{{row.name}}</a>\\n                          </td>\\n                          <td class=\\\"w100\\\">{{row.quantity}}</td>\\n                          <td class=\\\"w130\\\">{{row.redeemPointsPerUnit}}</td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                    <td class=\\\"w170\\\">{{list.totalPointsRedeemed}}</td>\\n                    <td class=\\\"w130\\\">Pending\\n                    </td>\\n                    <td class=\\\"w130\\\">\\n                        <a *ngIf=\\\"loginData.data.role==1 && loginData.data.superAdmin\\\" class=\\\"link-btn\\\" mat-button (click)=\\\"openDialog()\\\">Change Status</a>\\n                        <a *ngIf=\\\"loginData.data.userType==3\\\" class=\\\"link-btn cancel\\\" mat-button (click)=\\\"cancelOrderHandler(list.popOrderId)\\\">Cancel Order</a>\\n                      </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n      <div class=\\\"outer\\\">\\n        <div class=\\\"iinear\\\">\\n          <div class=\\\"figure\\\" matRipple>\\n            <div class=\\\"header\\\">\\n              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n            </div>\\n            \\n            <div class=\\\"description\\\">\\n              \\n              <div class=\\\"img\\\">\\n                <i class=\\\"material-icons\\\">error_outline</i>\\n              </div>\\n              <div class=\\\"psc\\\">\\n                <p>data not available</p>\\n                \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div> -->\\n  </div>\\n\\n  <div class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/pop-and-gift-distributor-add\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { StatusModalComponent } from '../status-modal/status-modal.component';\n\n@Component({\n  selector: 'app-pop-and-gift-distributor-list',\n  templateUrl: './pop-and-gift-distributor-list.component.html'\n})\nexport class PopAndGiftDistributorListComponent implements OnInit {\n\n\n  loader:boolean;\n  popOrderData:any = [];\n\n  loginData:any = {};\n  filter:any = {};\n  walletBalance:any;\n\n  giftSearchData:any = [];\n  showClearIcon:any = false;\n\n  constructor(public db:ConstantService, public toast:SnackBarOverview, public alrt:DialogComponent, public dialog: MatDialog) { }\n\n  ngOnInit() {\n\n      this.loginData = JSON.parse(localStorage.getItem('user')) || [];\n      console.log(this.loginData);\n\n      if(this.loginData.data.userType==3) {\n\n             this.getNetworkRedeemPointData();\n      }\n\n      this.popGiftOrderList();\n  }\n\n\n  openDialog(): void {\n      const dialogRef = this.dialog.open(StatusModalComponent, {\n        width: '500px',\n        data: {}\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n      });\n    }\n\n\n  getNetworkRedeemPointData() {\n\n        this.loader = true;\n\n        console.log(this.loginData['data']['distributerNetwork']['networkId']);\n\n        this.db.fetchData({networkId: this.loginData['data']['distributerNetwork']['networkId']},'network/list').subscribe((response)=>{\n\n              console.log(response);\n              if(response['status']=='Success')\n              {\n                    this.walletBalance = response['data'][0]['wallet'];\n\n              }\n\n\n              console.log(this.popOrderData);\n              \n              this.loader = false;\n\n        });\n        \n  }\n\n  popGiftOrderList() {\n\n        this.loader = true;\n\n        this.db.fetchData({currentPage: 1, pageSize: 200, totalRecords: 200},'poporder/list').subscribe((response)=>{\n\n              console.log(response);\n              if(response['status']=='Success')\n              {\n\n                    this.popOrderData = response['data'];\n              }\n\n\n              console.log(this.popOrderData);\n              \n              this.loader = false;\n\n        });\n  }\n\n\n  onGiftClickHandler() {\n\n        // this.productList({ \"currentPage\": this.currentPage,\n        // \"pageSize\": this.pageSize,\"segmentCode\":this.filter.segment,\"subSegmentCode\":this.filter.subsegment,\"categoryCode\":this.filter.category,\"productName\":this.filter.prod,\"modelCode\":this.filter.model});\n        // this.removeproductname=true;\n  }\n\n\n  giftNameSearchList() {\n\n\n       if(this.filter.name) {\n           this.showClearIcon = true;\n       } else {\n          this.showClearIcon = false;\n       }\n\n      this.db.fetchData({ 'name':this.filter.name},'pop/list').subscribe((response)=>{\n\n            console.log(response);\n            if(response['status']=='Success')\n            {\n                  this.giftSearchData = response['data'];\n\n            }\n\n            console.log(this.giftSearchData);\n      });\n  }\n\n\n  removeNameFilter() {\n\n      this.filter.name = '';\n      this.showClearIcon=false;\n\n      setTimeout(() => {\n        this.popGiftOrderList();\n      }, 500);\n  }\n\n  cancelOrderHandler(giftOrderId) {\n\n\n      this.alrt.confirmation('Cancel Gift Order!').then((result) => {\n\n          if(result)\n          {\n                 \n                  console.log(result);\n                  console.log(giftOrderId);\n\n                  this.loader = true;\n                  this.db.fileData('','poporder/cancel/' + giftOrderId).subscribe((response)=>{ \n\n                       this.loader = false;\n                        console.log(response);\n                        this.popGiftOrderList();\n                  })\n          }\n\n       })\n\n\n\n\n\n  }\n\n\n}\n","module.exports = \"<div   class=\\\"edit-modal\\\">\\n  <!-- <div *ngIf=\\\"loader\\\"> \\n    <mat-spinner class=\\\"loader\\\"></mat-spinner> \\n  </div> -->\\n  <div mat-dialog-content>\\n    <p class=\\\"heading\\\">Update Status</p>\\n    <div class=\\\"from-fields\\\">\\n      <div class=\\\"col s12\\\">          \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <mat-select placeholder=\\\"Status\\\">\\n                  <mat-option value=\\\"1\\\">Pending</mat-option>\\n                  <mat-option value=\\\"2\\\">Shipped</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div mat-dialog-actions>\\n    <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">Cancel</button>\\n    <button mat-raised-button [mat-dialog-close]=\\\"false\\\" color=\\\"accent\\\">Save</button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-status-modal',\n  templateUrl: './status-modal.component.html'\n})\nexport class StatusModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"edit-modal\\\" >\\n  <p class=\\\"heading\\\">Gift Item Deatils</p>\\n  <div mat-dialog-content style=\\\"overflow-x: hidden;\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-table left-right-20\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table class=\\\"sno-border\\\">\\n                    <tr>\\n                      <th class=\\\"w30\\\">&nbsp;</th>\\n                      <!-- <th class=\\\"w200 text-center\\\">Qty</th> -->\\n                      <th class=\\\"padding0\\\">\\n                        <table>\\n                          <tr>\\n                            <th>Pop & Gift</th>\\n                            <th class=\\\"w100\\\">Qty</th>\\n                            <th class=\\\"w130\\\">Point/Qty</th>\\n                          </tr>\\n                        </table>\\n                      </th>\\n                      <th class=\\\"w170\\\">Total Redeem</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table class=\\\"sno-border\\\">\\n                    <tr>\\n                   \\n                      <td class=\\\"padding0\\\">\\n                        <table class=\\\"inner-table\\\">\\n                          <tr *ngFor=\\\"let list of itemData\\\">\\n                            <td>\\n                              <a class=\\\"link-btn\\\" mat-button routerLink=\\\"\\\" routerLinkActive=\\\"active\\\">{{list.name}}</a>\\n                            </td>\\n                            <td class=\\\"w100\\\">{{list.quantity}}</td>\\n                            <td class=\\\"w130\\\">{{list.redeemPointsPerUnit}}</td>\\n                          </tr>\\n                        </table>\\n                      </td>\\n                      <td class=\\\"w170\\\">{{this.totalPointsRedeemed}}</td>\\n                    </tr>\\n                \\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n    \\n  </div>\\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]=\\\"false\\\" class=\\\"mr15\\\">Cancel</button>\\n    <div >\\n      <!-- <button mat-raised-button  [mat-dialog-close]=\\\"true\\\" color=\\\"accent\\\">Save</button> -->\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, Inject, PLATFORM_ID } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\n\n@Component({\n  selector: 'app-wallet-detail-modal',\n  templateUrl: './wallet-detail-modal.component.html'\n})\nexport class WalletDetailModalComponent implements OnInit {\n\n\n  itemData:any = {};\n  totalPointsRedeemed:any;\n\n  constructor(public dialogRef: MatDialogRef<WalletDetailModalComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService,public toast:SnackBarOverview) { \n\n       console.log(this.data);\n\n       this.itemData = this.data;\n       console.log(this.itemData);\n\n       this.totalPointsRedeemed = 0;\n\n        for (let index = 0; index < this.itemData.length; index++) {\n\n              this.totalPointsRedeemed += this.itemData[index].totalPointsRedeemed;\n        }\n\n        console.log(this.totalPointsRedeemed);\n  }\n\n  ngOnInit() {\n\n     \n      \n\n       \n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/gift.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Gift</h2>\\n        <p>Add New POP & Gift</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <form (ngSubmit)=\\\"f.form.valid && onSubmit() \\\" #f=\\\"ngForm\\\" novalidate>\\n          <div class=\\\"col s8\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>POP & GIFT</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"from-fields\\\" >\\n                <div class=\\\"row mb0\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"col s12 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Gift NAME\\\" name=\\\"name\\\" id=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"gift_form.name\\\" #name=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && name.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"name.errors.required\\\">Name is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <!-- <div class=\\\"col s6 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Qty\\\" name=\\\"quantity\\\" id=\\\"quantity\\\" #quantity=\\\"ngModel\\\" [(ngModel)]=\\\"gift_form.quantity\\\" #quantity=\\\"ngModel\\\" (keypress)=\\\"MobileNumber($event)\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && quantity.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && quantity.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"quantity.errors.required\\\">Quantity is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div> -->\\n                    <div class=\\\"col s12 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Redeem Points\\\" name=\\\"point\\\" id=\\\"point\\\" #point=\\\"ngModel\\\" [(ngModel)]=\\\"gift_form.point\\\" (keypress)=\\\"MobileNumber($event)\\\">\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s6 pr0\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input wp100 h-input infix-bodr8\\\">\\n                          <textarea class=\\\"h110\\\" matInput placeholder=\\\"Description\\\"  name=\\\"description\\\" id=\\\"description\\\" #description=\\\"ngModel\\\"  [(ngModel)]=\\\"gift_form.description\\\"  #description=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && description.invalid }\\\" required></textarea>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"description.errors.required\\\">Description is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Additonal Fields</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\" >\\n                <div class=\\\"row mt15 mb0\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <p class=\\\"cs-lable\\\">Labels</p>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <p class=\\\"cs-lable\\\">Values</p>\\n                  </div>\\n                </div>\\n                <div class=\\\"row mb0\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                        <input matInput name=\\\"label1\\\" [(ngModel)]=\\\"gift_form.aditionalField1Label\\\">\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                        <input matInput name=\\\"value1\\\" [(ngModel)]=\\\"gift_form.aditionalField1Value\\\">\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row mb0\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput name=\\\"label2\\\" [(ngModel)]=\\\"gift_form.aditionalField2Label\\\">\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput  name=\\\"value2\\\" [(ngModel)]=\\\"gift_form.aditionalField2Value\\\">\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row mb0\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput  name=\\\"label3\\\" [(ngModel)]=\\\"gift_form.aditionalField3Label\\\">\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput  name=\\\"value3\\\" [(ngModel)]=\\\"gift_form.aditionalField3Value\\\">\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row mb0\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput name=\\\"label4\\\" [(ngModel)]=\\\"gift_form.aditionalField4Label\\\">\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput name=\\\"Value4\\\" [(ngModel)]=\\\"gift_form.aditionalField4Value\\\">\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n          </div>\\n          \\n          \\n          <div class=\\\"col s4 right-sticky\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-logs\\\">\\n                <div class=\\\"cs-heading\\\">\\n                  <h2>GIFT IMAGES</h2>\\n                  <!-- <label >\\n                    <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display: none;\\\">\\n                    Add New\\n                  </label> -->\\n                </div>\\n                <!-- <div class=\\\"logs-outer padding0\\\">\\n                </div> -->\\n\\n                <div class=\\\"col s12\\\">\\n                    <div class=\\\"cs-file-multiple scroll\\\">\\n                      <ul>\\n                        <li *ngFor=\\\"let urlData of urls;let i=index\\\">\\n                          <label>\\n                            <img src=\\\"{{urlData}}\\\">\\n                            <a (click)=\\\"deleteimg(i)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                          </label>\\n                        </li>\\n                        <li>\\n                          <div class=\\\"cs-file\\\">\\n                            <label>\\n                              <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\">\\n                              <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                            </label>\\n                          </div>\\n                        </li>\\n                      </ul>\\n                    </div>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\" (click)=\\\" setFocus(f.form)\\\" >Save</button>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit, ViewChild, ElementRef, Inject, PLATFORM_ID } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-add-gift',\n  templateUrl: './add-gift.component.html',\n  animations: [slideToTop()]\n})\nexport class AddGiftComponent implements OnInit {\n  gift_form:any={};\n  message:any;\n  loader:boolean;\n  selectedFile:any=[];\n  giftdata:any={};\n\n  constructor(public db:ConstantService,public router:Router, public route:ActivatedRoute,public toast:SnackBarOverview, @Inject(PLATFORM_ID) private platformId: Object) { }\n\n  ngOnInit() {\n  }\n  MobileNumber(event: any) \n  {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n\n\n    setFocus(form):void {\n\n        for (var key in form.controls)\n        {\n          if (form.controls.hasOwnProperty(key)) {\n            if(form.controls[key].status=='INVALID')\n            {\n              if (isPlatformBrowser(this.platformId)) {\n                        $('#'+key).focus();\n                      }\n                      break;\n            }\n              console.log(key + \" -> \" + form.controls[key].status);\n          }\n        }\n    }\n\n\n   urls:any=[];\n   insertImage(data)\n   {\n        //  this.selectedFile=[];\n         let files = data.target.files;\n         if (files) {\n           for (let file of files) {\n             let reader = new FileReader();\n             reader.onload = (e: any) => {\n               this.urls.push(e.target.result);\n             }\n             reader.readAsDataURL(file);\n           }\n         }\n         console.log(this.urls);\n         console.log(data.target.files.length);\n         for(var i=0; i<data.target.files.length; i++)\n         {\n             this.selectedFile.push(data.target.files[i]);\n         }\n\n         console.log(this.selectedFile);\n\n        //  setTimeout(() => {\n        //    this.Insert_Image();\n        //  }, 500);\n   }\n\n\n    picvalue:any=[];\n    deleteimg(index)\n    {\n          this.urls.splice(index, 1);\n          this.selectedFile.splice(index, 1);\n    }\n\n\n    onSubmit() {\n\n\n        this.gift_form.documents = [];\n\n        // console()\n       \n        for(var i=0; i<this.selectedFile.length; i++)\n        {\n            this.giftdata=new FormData;\n            this.giftdata.action=1;\n            this.giftdata.binaryData=this.urls[i];\n            this.giftdata.documentType=3;\n            this.giftdata.documentName=this.gift_form.name;\n            this.giftdata.referenceId=0;\n            this.giftdata.fileName=\"image\"+i+\".jpg\",this.selectedFile[i];\n\n            console.log(this.giftdata.documentName);\n\n            this.gift_form.documents[i] = JSON.parse(JSON.stringify(this.giftdata));\n        }\n\n        console.log(this.gift_form.documents);\n      \n        this.loader=true;\n        this.gift_form.redeem=this.gift_form.point;\n        this.db.fetchData(this.gift_form,'pop/add').subscribe((response:any)=>{\n          console.log(response);\n          this.message=response['message']\n            this.loader=false;\n          if(this.message==\"PopGift added successfully\")\n          {\n            this.toast.openSucess('Gift added successfully','');\n            this.router.navigate(['/gift-list'])\n          }\n          else\n          {\n            this.toast.openError('Something Went Wrong Please Try Again!!','');\n          }\n          \n        });\n    }\n}\n","module.exports = \"<div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n  <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n</div>\\n\\n<div class=\\\"main-container\\\">\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/gift-list\\\" routerLinkActive=\\\"active\\\" ><i   class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{eVersionDetail.files.length}}</h2>\\n      </div>\\n      \\n      <div class=\\\"cs-value\\\">\\n        <h2>Total</h2>\\n        <p class=\\\"light\\\">33</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"col s12 cs-figure\\\">\\n                <ul>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Created Date</span>\\n                        <p >{{eVersionDetail.createdOn |date :'EEEE, MMMM d, y'}}</p>\\n                        \\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Title</span>\\n                        <p>{{eVersionDetail.name}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n                \\n                <ul class=\\\"mt15\\\">\\n                  \\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Created By</span>\\n                        <p>{{eVersionDetail.createdByName}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>e-Version Type</span>\\n                        <p>Document</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n                \\n                <ul class=\\\"mt15\\\">\\n                  \\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Description</span>\\n                        <p>{{eVersionDetail.description}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n                \\n                \\n                \\n              </div>\\n              \\n              \\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div class=\\\"cs-logs\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>e-Version Document</h2>\\n              </div>\\n              <div class=\\\"logs-outer padding0\\\">\\n                <div class=\\\"cs-image\\\">\\n                  \\n                  <div *ngIf=\\\"eVersionDetail.files?.length == 0\\\" class=\\\"not-data mt15 padding0\\\">\\n                    <div class=\\\"inner-data\\\">\\n                      <p>Image not available</p>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"eVersionDetail.files?.length > 0\\\" class=\\\"vertical-img {{eVersionDetail.files.length == 2 ? 'double-img' : (eVersionDetail.files.length > 2 ? 'multiple-img' : '')}}\\\"class=\\\"vertical-img\\\">\\n                    <ul>\\n                      <li *ngFor=\\\"let expenseImage of eVersionDetail.files;let i=index\\\" class=\\\"overlay-content\\\" >\\n                        <img *ngIf=\\\"expenseImage.extension=='.pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                        <img *ngIf=\\\"expenseImage.extension!='.pdf'\\\" src=\\\"{{api+expenseImage.documentId+'/'+'2'}}\\\">\\n                        <a class=\\\"close dowload\\\" matRipple matTooltip=\\\"Download Bill\\\" href=\\\"{{api+expenseImage.documentId+'/'+'2'}}\\\" ><i class=\\\"material-icons\\\">cloud_download</i></a>\\n                      </ul>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"h100\\\"></div>\\n  \\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvcF9hbmRfZ2lmdC9ldmVyc2lvbi1kZXRhaWwvZXZlcnNpb24tZGV0YWlsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-eversion-detail',\n  templateUrl: './eversion-detail.component.html',\n  styleUrls: ['./eversion-detail.component.scss']\n})\nexport class EversionDetailComponent implements OnInit {\n  \n  eVersionId:any;\n  \n  eVersionDetail:any={};\n  constructor(public service:ConstantService,public route:ActivatedRoute) {\n    \n    this.route.params.subscribe( params => {\n      console.log(params);\n      this.eVersionId=params.id;\n      // console.log(this.date ,\"&\" , this.expenseId);\n      if(this.eVersionId)\n      {\n        this.getEversionDetail();\n      }\n    });\n  }\n  \n  ngOnInit() {\n  }\n  \n  url:any;\n  requestfn:any;\n  api:any;\n  getEversionDetail()\n  {\n    console.log(\"hello\");\n    this.service.fetchData({id:this.eVersionId},\"eversion/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.eVersionDetail=result['data'][0];\n        this.url = this.service.dburl;\n        this.requestfn = 'download/document/';\n        this.api = this.url+this.requestfn;\n      }\n      \n    })\n  }\n  \n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/gift-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{giftdata.name}}</h2>\\n        <p class=\\\"light\\\">{{giftdata.description}}</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s8 pr10\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>Gift Detail</h2>\\n              <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" mat-button matTooltip=\\\"Edit Info\\\" (click)=\\\"openDialog('requiredfield')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n            </div>\\n            <div class=\\\"details-thumbnail\\\">\\n              <div class=\\\"row mb10\\\">\\n                <div class=\\\"col s4 pl0\\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Name</span>\\n                    <p>{{giftdata.name}}</p>\\n                  </div>\\n                </div>\\n                <!-- <div class=\\\"col s4 \\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Quantity</span>\\n                    <p>{{giftdata.quantity}}</p>\\n                  </div>\\n                </div> -->\\n                <div class=\\\"col s4 pr0\\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Points</span>\\n                    <p>{{giftdata.redeem}}</p>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col s12 padding0\\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Description</span>\\n                    <p>{{giftdata.description}}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          \\n          \\n          \\n          <div class=\\\"sprate-box pt0 mt15\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>Additonal Fields</h2>\\n              <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" mat-button matTooltip=\\\"Edit Info\\\" (click)=\\\"openDialog('extrafield')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n            </div>\\n            <div class=\\\"from-fields\\\" >\\n              <div *ngIf=\\\"giftdata.aditionalField1Label || giftdata.aditionalField2Label || giftdata.aditionalField3Label || giftdata.aditionalField4Label\\\" class=\\\"details-thumbnail\\\">\\n                <div  class=\\\"row mb0\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <p class=\\\"cs-lable\\\">Labels</p>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <p class=\\\"cs-lable\\\">Values</p>\\n                  </div>\\n                </div>\\n\\n\\n                <div *ngIf=\\\"giftdata.aditionalField1Label\\\" class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{giftdata.aditionalField1Label}}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{giftdata.aditionalField1Value}}</p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <!-- </div> -->\\n                <div *ngIf=\\\"giftdata.aditionalField2Label\\\" class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{giftdata.aditionalField2Label}}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{giftdata.aditionalField2Value}}</p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"giftdata.aditionalField3Label\\\" class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{giftdata.aditionalField3Label}}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{giftdata.aditionalField3Value}}</p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"giftdata.aditionalField4Label\\\" class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{giftdata.aditionalField4Label}}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s8 pr0\\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{giftdata.aditionalField4Value}}</p>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n        \\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div class=\\\"cs-logs\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>GIFT IMAGES</h2>\\n                <label *ngIf=\\\"this.role==1\\\" >\\n                  <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display: none;\\\">\\n                  Add Image\\n                </label>\\n              </div>\\n              <div class=\\\"logs-outer padding0\\\">\\n                <div class=\\\"cs-image\\\">\\n                  <div class=\\\"vertical-img {{giftdata.documents?.length == 2 ? 'double-img' : (giftdata.documents?.length > 2 ? 'multiple-img' : '')}}\\\">\\n                    <ul>\\n                      <li class=\\\"overlay-content\\\" *ngFor=\\\"let giftImg of giftdata.documents;let i=index\\\">\\n                        <img src=\\\"{{api+giftImg.documentId+'/'+'1'}}\\\">\\n                        <div class=\\\"tittle\\\">\\n                          <p>{{ giftImg.documentName}}</p>\\n                        </div>\\n                        <a *ngIf=\\\"this.role==1\\\" class=\\\"close\\\" matRipple matTooltip=\\\"Delete\\\" (click)=\\\"deleteimg(giftImg.documentId,giftImg.fileName)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                      </ul>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>    \\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {MatDialog } from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { GiftModalComponent } from '../gift-modal/gift-modal.component';\nimport { sessionStorage }  from '../../local-storage.service';\n@Component({\n  selector: 'app-gift-deatil',\n  templateUrl: './gift-deatil.component.html',\n})\nexport class GiftDeatilComponent implements OnInit {\n  giftdata:any={};\n  gift_form:any={};\n  role:any;\n  userdata:any=[];\n  action=1;\n  selectedFile:any=[];\n  giftpicdata:any={};\n  name:any;\n  id:any;\n  url:any;\n  msge:any;\n  api:any;\n  gift:any;\n  request:any;\n  loader:boolean;\n  constructor(public db: ConstantService,public user:sessionStorage,public router:Router,public toast:SnackBarOverview, public route:ActivatedRoute, public dialog: MatDialog,public msg:DialogComponent) { }\n\n  ngOnInit() {\n    this.userdata=this.user['user']['data'];\n      this.role=this.userdata['role'];\n    // this.giftdetail();\n    // this.loader=true;\n    this.route.params.subscribe(params=>{\n      console.log(params);\n      this.id = params.id;\n      console.log(this.id);\n      if(this.id){\n        this.giftdetail();\n      }else{\n      }\n    });\n  }\n  \n \n  urls:any=[];\n  insertImage(data)\n  {\n        this.selectedFile=[];\n        let files = data.target.files;\n        if (files) {\n          for (let file of files) {\n            let reader = new FileReader();\n            reader.onload = (e: any) => {\n              this.urls.push(e.target.result);\n            }\n            reader.readAsDataURL(file);\n          }\n        }\n        console.log(this.urls);\n        console.log(data.target.files.length);\n        for(var i=0; i<data.target.files.length; i++)\n        {\n          this.selectedFile.push(data.target.files[i]);\n        }\n        setTimeout(() => {\n          this.Insert_Image();\n        }, 500);\n  }\n\n\n\n  Insert_Image()\n  {\n\n    this.giftdata=new FormData;\n    this.giftdata.action=this.action;\n    this.giftdata.binaryData=this.urls[this.urls.length - 1];\n    this.giftdata.documentType=3;\n    this.giftdata.documentName=this.name;\n    console.log(this.giftdata.documentName);\n    this.giftdata.referenceId=this.id;\n    for(var i=0; i<this.selectedFile.length; i++)\n    {\n      this.giftdata.fileName=\"image\"+i+\".jpg\",this.selectedFile[i];\n    }\n    console.log(this.giftdata);\n    let value=[];\n    value[0]=this.giftdata;\n    console.log(value);\n    this.loader=true;\n    this.db.fetchData(value,\"document/update\").subscribe((resp)=>\n    {\n      console.log(resp);\n      if(resp)\n      {\n        this.giftdetail();\n        this.toast.openSucess('Image Added Sucessfully','');\n        this.loader=false;\n      }\n    });\n  }\n\n  \n  picvalue:any=[];\n  deleteimg(picid,filename)\n  {\n    console.log(picid,filename);\n    this.giftpicdata.documentId=picid;\n    this.giftpicdata.action=2;\n    this.giftpicdata.fileName=filename;\n    this.giftpicdata.documentType=3;\n    this.giftpicdata.referenceId=this.id;\n     this.picvalue.push(this.giftpicdata);\n     console.log(this.picvalue);\n     this.msge=\"Image\";\n     this.msg.delete(this.msge).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.loader=true;\n    this.db.fetchData(this.picvalue,\"document/update\").subscribe((resp)=>\n      { \n        console.log(resp);\n        if(resp)\n        {\n          this.toast.openSucess('Image Deleted Sucessfully','');\n          this.loader=false;\n          this.giftdetail();\n          this.picvalue=[];\n        \n        }\n      });\n    }\n  });\n  }\n  giftdetail(){\n    console.log(this.id);;\n    console.log(\"avlok\");\n\n    this.loader = true;\n    this.db.fileData(this.id,\"pop/detail/\").subscribe((response)=>{\n      console.log(response);\n\n      this.loader = false;\n      this.giftdata=response['data'];\n       this.name=this.giftdata['name'];\n      console.log(this.giftdata);\n      this.url=this.db.dburl;\n      this.request='download/document/';\n      this.api=this.url+this.request;\n  });\n\n}\nopenDialog(check): void {\n  console.log(check)\n  this.giftdata.check=check;\n  const dialogRef = this.dialog.open(GiftModalComponent, {\n    width: '700px',\n    data: this.giftdata\n  });\n  \n  dialogRef.afterClosed().subscribe(result => {\n    this.giftdetail();\n    console.log('The dialog was closed');\n  });\n}\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/gift.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>{{isTabActive==1?'Pop & Gift':'E-version'}}</h2>\\n        <p>Total {{isTabActive==1?'Pop & Gift':'E-version'}} : {{isTabActive==1 ? gifts.length : eversionList.length}}</p>\\n      </div>\\n    </div>\\n    \\n    \\n    <div class=\\\"left-auto\\\">\\n      <div class=\\\"filter-container\\\" *ngIf=\\\"filter.gift\\\">\\n        <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n          <button mat-button >CLEAR FILTER</button>\\n        </div>\\n      </div>\\n      <div class=\\\"tabs right-tab\\\">\\n        <ul>\\n          <li (click)=\\\"isTabActive=1\\\"><a [ngClass]=\\\"{'active': isTabActive==1}\\\" >Pop & Gift</a></li>\\n          <li (click)=\\\"isTabActive=2; eVersionList()\\\"><a [ngClass]=\\\"{'active': isTabActive==2}\\\" >E-Version</a></li>\\n          <!-- <li (click)=\\\"isTabActive=3\\\"><a [ngClass]=\\\"{'active': isTabActive==3}\\\">E-Version</a></li> -->\\n          <!-- <li (click)=\\\"downloadPriceList()\\\"><a>Download Price List</a></li> -->\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div *ngIf=\\\"isTabActive==1\\\" class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th class=\\\"w200\\\">Gift Name</th>\\n                    <th class=\\\"w200 text-center\\\">Redeem Points</th>\\n                    <th class=\\\"w200\\\">Image</th>\\n                    <th *ngIf=\\\"userType!=3\\\">Description</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"table-head bdrt\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th  class=\\\"w200\\\">\\n                      <div class=\\\"th-search-acmt\\\" [ngClass]=\\\"{ 'clear-feilds' : removegift == true}\\\">\\n                        <mat-form-field>\\n                          <input type=\\\"text\\\"  name=\\\"gift\\\" [(ngModel)]=\\\"filter.gift\\\" (ngModelChange)=\\\"name_list()\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\n                          <mat-autocomplete #auto1=\\\"matAutocomplete\\\" >\\n                            <mat-option *ngFor=\\\"let gift of giftlist1\\\" (click)=\\\"giftFilter()\\\" value=\\\"{{gift.name}}\\\">{{gift.name}}</mat-option>\\n                          </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removegiftfilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                        </mat-form-field> \\n                      </div>\\n                    </th>\\n                    <th class=\\\"w200\\\">&nbsp;</th>\\n                    <th class=\\\"w200\\\">&nbsp;</th>\\n                    <th *ngIf=\\\"userType!=3\\\">&nbsp;</th>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor=\\\"let gift of gifts;let i=index\\\">\\n                    <td class=\\\"w30\\\">{{i+1}}</td>\\n                    <td class=\\\"w200\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/gift-deatil/{{gift.popId}}\\\" routerLinkActive=\\\"active\\\">{{gift.name}}</a></td>\\n                    <td class=\\\"w200 text-center\\\">{{gift.redeem}}</td>\\n                    <td class=\\\"w200\\\">\\n                      <div class=\\\"tags\\\">\\n                        <ul>\\n                          <li *ngFor=\\\"let doc of gift.documents;let j=index\\\">\\n                            <img src=\\\"{{api+doc.documentId+'/'+'1'}}\\\" class=\\\"wp100 h70\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </td>\\n                    <td *ngIf=\\\"userType!=3\\\">{{gift.description}}\\n                      <div class=\\\"action-btns\\\">\\n                        <button *ngIf=\\\"userRole==1\\\" mat-button class=\\\"delete\\\" (click)=\\\"deletePop(gift.popId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      \\n      \\n      \\n      <div *ngIf=\\\"isTabActive==2\\\" class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th class=\\\"w170\\\">Date</th>\\n                    <th class=\\\"w250\\\">Tittle</th>\\n                    <th class=\\\"w180\\\">Created By</th>\\n                    <th class=\\\"w250\\\">Description</th>\\n                    <th>Link</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <!-- <div class=\\\"table-head bdrt\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th class=\\\"w110\\\">&nbsp;</th>\\n                    <th  class=\\\"w250\\\">\\n                      <div class=\\\"th-search-acmt\\\">\\n                        <mat-form-field>\\n                          <input type=\\\"text\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\n                          <mat-autocomplete #auto1=\\\"matAutocomplete\\\" >\\n                            <mat-option  value=\\\"1\\\">Tittle 1</mat-option>\\n                            <mat-option  value=\\\"1\\\">Tittle 1</mat-option>\\n                          </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removegiftfilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                        </mat-form-field> \\n                      </div>\\n                    </th>\\n                    <th>&nbsp;</th>\\n                  </tr>\\n                </table>\\n              </div> -->\\n            </div>\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor=\\\"let eVersion of eversionList;let i=index\\\">\\n                    <td class=\\\"w30\\\">{{i+1}}</td>\\n                    <td class=\\\"w170\\\">{{eVersion.createdOn | date :'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w250\\\">\\n                        <a *ngIf=\\\"eVersion.mediaType==1\\\" class=\\\"link-btn\\\" mat-button routerLink=\\\"/eversion-detail/{{eVersion.id}}\\\" routerLinkActive=\\\"active\\\">{{eVersion.name}}</a>\\n                        <a *ngIf=\\\"eVersion.mediaType==2\\\" >{{eVersion.name}}</a></td>\\n                    <td class=\\\"w180\\\">{{eVersion.createdByName}}</td>\\n                    <td class=\\\"w250\\\">{{eVersion.description}}</td>\\n                    <td *ngIf=\\\"eVersion.mediaType==1\\\">{{eVersion.files.length}}</td>\\n                    <td  *ngIf=\\\"eVersion.mediaType==2\\\"><a class=\\\"link-btn\\\" target=\\\"blank\\\" href=\\\"{{eVersion.urlLink}}\\\" >{{eVersion.urlLink}}</a></td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n    </div>\\n\\n    <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n      <div class=\\\"outer\\\">\\n        <div class=\\\"iinear\\\">\\n          <div class=\\\"figure\\\" matRipple>\\n            <div class=\\\"header\\\">\\n              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n            </div>\\n            \\n            <div class=\\\"description\\\">\\n              \\n              <div class=\\\"img\\\">\\n                <i class=\\\"material-icons\\\">error_outline</i>\\n              </div>\\n              <div class=\\\"psc\\\">\\n                <p>data not available</p>\\n                \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"fixed-multibtn-botm\\\" *ngIf=\\\"user.data.userType==1 && user.data.superAdmin && isTabActive == 1\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/pop_and_gift\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n\\n  \\n  <div *ngIf=\\\"user.data.userType==1 && user.data.superAdmin && isTabActive == 2\\\" class=\\\"fixed-multibtn-botm\\\" style=\\\"right: 80px;\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" (click)=\\\"openDialogone()\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n\\n  <div  *ngIf=\\\"isTabActive == 2\\\" class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Download Price Sheet\\\" matRipple (click)=\\\"downloadPriceList()\\\"><i class=\\\"material-icons\\\">cloud_download</i></a></li>\\n    </ul>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { DialogComponent } from 'src/app/dialog';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { VideoModalComponent } from '../video-modal/video-modal.component';\n\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'ts-xlsx';\n\n@Component({\n  selector: 'app-gift-list',\n  templateUrl: './gift-list.component.html',\n  animations: [slideToTop()]\n\n})\n\nexport class GiftListComponent implements OnInit {\ngiftlist:any={};\ngiftlist1:any=[];\ngifts:any=[];\nurl:any;\nremovegift:boolean=false;\nfilter:any={};\nrequest:any;\napi:any;\ndiv:boolean=false;\nloader:boolean;\nuser:any={}\nuserType:any;\nuserId:any;\nuserRole:any;\nuserName:any;\nisTabActive:any;\neversionList:any = [];\n\n\n  constructor(public db:ConstantService, public dialog:DialogComponent, public dialogs: MatDialog) {\n\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    this.userName=this.user.data.userName;\n    this.loader=true;\n   this.giftList({\"currentPage\": 1,\"pageSize\": 50})\n   }\n\n  ngOnInit() {\n\n      this.isTabActive = 1;\n  }\n\n  eVersionList() {\n\n    this.loader = true;\n    this.db.fetchData({\"currentPage\": 1,\n    \"pageSize\": 100,\n    \"totalRecords\": 100},'eversion/list').subscribe((response)=>{\n          console.log(response);\n          this.loader=false;\n          if(response['status']=='Success')\n          {\n\n            this.eversionList=response['data'];\n          }\n\n    });\n  }\n\n\n\n\n  openDialogone(): void {\n    const dialogRef = this.dialogs.open(VideoModalComponent, {\n      width: '850px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n         \n    });\n  }\n\n\n  clearfilter(){\n    this.filter={};\n    this.giftList({\"currentPage\": 1,\"pageSize\": 50})\n    this.removegift=false;\n  }\n  giftList(val){\n    this.db.fetchData(val,'pop/list/').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.giftlist=response;\n      if(response['status']=='Success')\n      {\n        this.giftlist=response;\n        this.gifts=this.giftlist.data;\n      }\n      if(response['status']=='Failed')\n      {\n        this.div=true;\n        this.giftlist =[];\n      }\n      // this.gifts=this.giftlist.data;\n      this.url=this.db.dburl;\n      this.request='download/document/';\n      this.api=this.url+this.request;\n      console.log(this.api);\n      console.log(this.gifts);\n    });\n  }\nname_list(){\n  console.log('hello');\n  this.db.fetchData({\"name\": this.filter.gift,},'pop/list/').subscribe((response)=>{\n    console.log(response);\n    this.giftlist1=response['data'];});\n}\ngiftFilter(){\n  this.giftList({\"name\": this.filter.gift,})\n    this.removegift=true;\n}\nremovegiftfilter(){\n  this.filter.gift='';\n  this.giftList({ \"currentPage\":1,\n  \"pageSize\": 50})\n  this.removegift=false;\nconsole.log(this.filter.gift);\n}\n\ndeletePop(id)\n   {\n     this.dialog.delete('Pop & Gift !').then((result) => {\n       if(result)\n       {\n       console.log(id);\n       this.db.fileData(\"\",\"pop/delete/\"+id).subscribe((result)=>{\n         console.log(result);\n       if(result['status']==\"Success\")\n       {\n        this.giftList({\"currentPage\": 1,\"pageSize\": 50})\n       }\n       })\n       }})\n   }\n\n\n   downloadPriceList() {\n\n          console.log(\"pricelist\");\n          \n          this.dialog.downloadConfirm(\"Price List\").then((result) => {\n            console.log(result);\n            if(result)\n            {\n                console.log(\"function\");\n\n                this.loader = true;\n\n                setTimeout(() => {\n\n                    this.db.downloadProductData({},'price/list').subscribe(result=> {\n\n                        this.loader = false;\n\n                        saveAs(result, 'Price List.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n\n                    });\n            \n                }, 1000);\n\n              \n            }\n          });\n    }\n\n\n}\n","module.exports = \"<div class=\\\"edit-modal\\\" *ngIf=\\\"extraData.check=='extrafield'\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div mat-dialog-content>\\n    <p class=\\\"heading\\\">Update Fields</p>\\n    <div class=\\\"from-fields\\\" >\\n        <div class=\\\"row mb0 mt15\\\">\\n            <div class=\\\"col s4\\\">\\n              <p class=\\\"cs-lable\\\">Labels</p>\\n            </div>\\n            <div class=\\\"col s8\\\">\\n              <p class=\\\"cs-lable\\\">Values</p>\\n            </div>\\n          </div>\\n      <div class=\\\"row mb0\\\">\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n              <input matInput  name=\\\"label1\\\" placeholder =\\\"Label 1\\\" [(ngModel)]=\\\"extraData.aditionalField1Label\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n              <input matInput  name=\\\"value1\\\" placeholder =\\\"Value\\\" [(ngModel)]=\\\"extraData.aditionalField1Value\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row mb0\\\">\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput  name=\\\"label2\\\" placeholder =\\\"Label 2\\\" [(ngModel)]=\\\"extraData.aditionalField2Label\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput name=\\\"value2\\\" placeholder =\\\"Value\\\" [(ngModel)]=\\\"extraData.aditionalField2Value\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row mb0\\\">\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput name=\\\"label3\\\" placeholder =\\\"Label 3\\\" [(ngModel)]=\\\"extraData.aditionalField3Label\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput  name=\\\"value3\\\" placeholder =\\\"Value\\\" [(ngModel)]=\\\"extraData.aditionalField3Value\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row mb0\\\">\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput  name=\\\"label4\\\" placeholder =\\\"Label 4\\\" [(ngModel)]=\\\"extraData.aditionalField4Label\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput name=\\\"Value4\\\" placeholder =\\\"Value\\\" [(ngModel)]=\\\"extraData.aditionalField4Value\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">Cancel</button>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"update_detail()\\\">Save</button>\\n  </div>\\n</div>\\n<div class=\\\"edit-modal\\\" *ngIf=\\\"extraData.check=='requiredfield'\\\">\\n  <div *ngIf=\\\"loader\\\">\\n    <mat-spinner  class=\\\"loader\\\"></mat-spinner>\\n  </div>\\n  <div class=\\\"cs-heading\\\">\\n    <p class=\\\"heading\\\"> Update Pop And Gift</p>\\n  </div>\\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && update_detail()\\\" #f=\\\"ngForm\\\" novalidate>\\n    <div class=\\\"from-fields\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s4 pr0\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput placeholder=\\\"NAME\\\" name=\\\"name\\\" [(ngModel)]=\\\"extraData.name\\\" #name=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && name.invalid }\\\" required>\\n            </mat-form-field>\\n            <mat-error *ngIf=\\\"f.submitted && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n              <mat-error *ngIf=\\\"name.errors.required\\\">Name is required</mat-error>\\n            </mat-error>\\n          </div>\\n        </div>\\n        <div class=\\\"col s4 pr0\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput placeholder=\\\"Qty\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"extraData.quantity\\\" #quantity=\\\"ngModel\\\" (keypress)=\\\"MobileNumber($event)\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && quantity.invalid }\\\" required>\\n            </mat-form-field>\\n            <mat-error *ngIf=\\\"f.submitted && quantity.invalid\\\" class=\\\"invalid-feedback\\\">\\n              <mat-error *ngIf=\\\"quantity.errors.required\\\">Quantity is required</mat-error>\\n            </mat-error>\\n          </div>\\n        </div>\\n        <div class=\\\"col s4 pr0\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput placeholder=\\\"Points\\\" name=\\\"redeem\\\" [(ngModel)]=\\\"extraData.redeem\\\" (keypress)=\\\"MobileNumber($event)\\\">\\n            </mat-form-field>\\n            \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"from-fields\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input wp100 h-input\\\">\\n              <textarea matInput placeholder=\\\"Description\\\"  name=\\\"description\\\" [(ngModel)]=\\\"extraData.description\\\"  #description=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && description.invalid }\\\" required></textarea>\\n            </mat-form-field>\\n            <mat-error *ngIf=\\\"f.submitted && description.invalid\\\" class=\\\"invalid-feedback\\\">\\n              <mat-error *ngIf=\\\"description.errors.required\\\">Description is required</mat-error>\\n            </mat-error>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div mat-dialog-actions>\\n      <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]='false'>Cancel</button>\\n      <button mat-raised-button color=\\\"accent\\\" style=\\\"color: #fff;\\\"  >Save</button>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { Router } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\n@Component({\n  selector: 'app-gift-modal',\n  templateUrl: './gift-modal.component.html',\n})\nexport class GiftModalComponent implements OnInit {\n \n  loader:boolean;\n   extraData:any={};\n   id:any;\n   doc:any=[];\n   url:any;\n   requestfn:any;\n   api:any;\n   message:any;\n  constructor(  public router:Router,public dialogRef: MatDialogRef<GiftModalComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService,public toast:SnackBarOverview){ \n     console.log(data);  \n     this.extraData=this.data; \n  }\n  ngOnInit() {\n  }\n  MobileNumber(event: any) \n  {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n  update_detail(){\n    this.loader=true;\n    console.log(this.extraData);\n    if(this.extraData.check=='extrafield'){\n    this.db.fetchData(this.extraData,'pop/update').subscribe((response)=>{console.log(response)\n      this.message=response['message']\n      this.loader=false;\n      if(this.message==\"PopGift updated successfully\")\n      {\n        this.toast.openSucess('PopGift updated successfully','');\n        // this.router.navigate(['/gift-list']) \n      }\n      else\n      {\n        this.toast.openError('Something Went Wrong Please Try Again!!','');\n      }\n      \n     });\n  }\n  else{\n    this.db.fetchData(this.extraData,'pop/update').subscribe((response)=>{console.log(response)\n      this.message=response['message']\n      this.loader=false;\n      if(this.message==\"PopGift updated successfully\")\n      {\n        this.toast.openSucess('PopGift updated successfully','');\n        // this.router.navigate(['/gift-list']) \n      }\n      else\n      {\n        this.toast.openError('Something Went Wrong Please Try Again!!','');\n      }\n      \n     });\n  }\n    this.dialogRef.close();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n    console.log(this.data)\n  }\n}\n","module.exports = \"<div class=\\\"edit-modal\\\" >\\n  <p class=\\\"heading\\\">Create E-version</p>\\n  <div mat-dialog-content>\\n    <div class=\\\"from-fields\\\">\\n      <div class=\\\"row mt15\\\">\\n        <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n              <input matInput [(ngModel)]=\\\"data.name\\\" name=\\\"title\\\" placeholder=\\\"Title\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n              <mat-select [(ngModel)]=\\\"data.mediaType\\\" name=\\\"mediaType\\\" placeholder=\\\"Select\\\">\\n                <mat-option [value]=1>Document</mat-option>\\n                <mat-option [value]=2>Video Link</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div *ngIf=\\\"data.mediaType==2\\\" class=\\\"row mb10\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n              <input matInput [(ngModel)]=\\\"data.urlLink\\\" name=\\\"videoLink\\\" placeholder=\\\"Video Link\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n              <textarea matInput [(ngModel)]=\\\"data.description\\\" name=\\\"Description\\\" placeholder=\\\"Description\\\" class=\\\"h100\\\"></textarea>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      \\n\\n      <div  *ngIf=\\\"data.mediaType==1\\\"  class=\\\"row mt15\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-file-multiple scroll\\\">\\n            <ul>\\n              <li class=\\\"w110 pr10\\\" *ngFor=\\\"let urlData of urls;let i=index\\\">\\n                <label>\\n                  <img *ngIf=\\\"selectedFile[i].type=='image/jpeg'\\\" src=\\\"{{urlData}}\\\">\\n                 <img  *ngIf=\\\"selectedFile[i].type=='application/pdf'\\\" src=\\\"assets/img/pdf.png\\\">\\n                  <a (click)=\\\"deleteimg(i)\\\" class=\\\"close\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                </label>\\n              </li>\\n              <li class=\\\"w110 pr10\\\">\\n                <div class=\\\"cs-file wp100\\\">\\n                  <label>\\n                    <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display:none;\\\" multiple>\\n                    <i class=\\\"material-icons add-file-icon\\\" >add</i>\\n                  </label>\\n                </div>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"upload-excel mt5\\\">\\n        <label>\\n          <input (change)=\\\"insertImage($event)\\\" style=\\\"display: none;\\\" type=\\\"file\\\" multiple>\\n          <div class=\\\"outer\\\">\\n            <div class=\\\"innear\\\">\\n              <i class=\\\"material-icons upload-ic\\\">cloud_upload</i>\\n              <p>Add Document</p>\\n            </div>\\n          </div>\\n        </label>\\n        <p *ngIf=\\\"selectedFile && selectedFile[0]\\\">{{selectedFile[0].name}}</p>\\n        <span class=\\\"file-format\\\">PDF format attactment</span>\\n      </div>\\n       -->\\n    </div>\\n  </div>\\n  \\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]=\\\"false\\\" class=\\\"mr15\\\">Cancel</button>\\n    <div >\\n      <button mat-raised-button (click)=\\\"saveEversion()\\\" [mat-dialog-close]=\\\"true\\\" color=\\\"accent\\\">Save</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-video-modal',\n  templateUrl: './video-modal.component.html'\n})\nexport class VideoModalComponent implements OnInit {\n  \n  \n  data:any = {};\n  loader:boolean;\n  \n  constructor(public db:ConstantService, public toast: SnackBarOverview,public router:Router) {\n    \n    this.data.mediaType=2;\n  }\n  \n  ngOnInit() {\n    \n    \n    \n  }\n  \n  saveEversion() {\n    \n    // this.uploadBillAttechment()\n    this.loader=true;\n    this.db.fetchData(this.data, 'eversion/add').subscribe((response:any)=>{\n      console.log(response);\n      if(response['status']=='Success')\n      {\n        this.toast.openSucess('E-version Updated successfully','');\n        this.uploadBillAttechment(response['data']);\n      }\n      this.loader=false;\n      \n    });\n  }\n  \n  deleteimg(index)\n  {\n    this.urls.splice(index, 1);\n    this.selectedFile.splice(index, 1);\n  }\n  \n  uploadBillAttechment(id)\n  {\n    let documentData = {};\n    console.log(this.urls);\n    \n    let value:any = [];\n    \n    for(let j=0;j<this.urls.length;j++)\n    {  \n      documentData = new FormData;\n      documentData['action']=1;\n      documentData['binaryData']=this.urls[j];\n      documentData['documentType']=9;\n      documentData['documentName'] = this.selectedFile[0].name;\n      documentData['referenceId']=id;\n      if(this.selectedFile[j].type == 'application/pdf') {\n        documentData['fileName'] = \"document\"+j+\".pdf\",this.selectedFile[j];\n      } else {\n        documentData['fileName'] = \"document\"+j+\".jpg\",this.selectedFile[j];\n      }\n        value.push(documentData);\n      // this.loader=true;\n    }\n    \n    this.data.file=value;\n    console.log(this.data);\n    this.loader=true;\n    this.db.fetchData(value, 'document/update').subscribe((resp)=>\n    {\n      console.log(resp);\n      if(resp['status']=='Success')\n      {\n        // this.router.navigate(['/gift-list']);\n        this.toast.openSucess('Document Added Sucessfully','');\n      }\n    });\n    \n  }\n  \n  urls:any=[];\n  selectedFile:any=[];\n  insertImage(data)\n  {\n    console.log(this.selectedFile);\n    \n    let files = data.target.files;\n    if (files) {\n      for (let file of files) {\n        let reader = new FileReader();\n        reader.onload = (e: any) => {\n          this.urls.push(e.target.result);\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n    console.log(this.urls);\n    console.log(data.target.files.length);\n    for(var i=0; i<data.target.files.length; i++)\n    {\n      this.selectedFile.push(data.target.files[i]);\n    }\n    \n    console.log(this.selectedFile);\n    \n  }\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  \\n  \\n  <div mat-dialog-content >\\n    <p class=\\\"heading\\\">Update Packing Information</p>\\n    <div class=\\\"from-fields\\\">\\n      <div class=\\\"col s12\\\">          \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s6\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <input matInput name=\\\"masterPacking\\\"  placeholder=\\\"masterPacking\\\" [(ngModel)]=\\\"extraData.masterPacking\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col s6\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <input matInput  name=\\\"secondaryPacking\\\"  placeholder=\\\"secondaryPacking\\\" [(ngModel)]=\\\"extraData.secondaryPacking\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n    <button mat-raised-button color=\\\"accent\\\"[mat-dialog-close]=\\\"true\\\" (click)=\\\"update_detail()\\\">Save</button>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvZWRpdG1vZGVsL2VkaXRtb2RlbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { ConstantService } from 'src/app/constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\n\n@Component({\n  selector: 'app-editmodel',\n  templateUrl: './editmodel.component.html',\n  styleUrls: ['./editmodel.component.scss']\n})\nexport class EditmodelComponent implements OnInit {\n\n  loader:boolean;\n  extraData:any={};\n constructor(@Inject(MAT_DIALOG_DATA) public data:any,public service:ConstantService,public toast:SnackBarOverview){ \n   console.log(data);\n   this.extraData=this.data;\n   console.log(this.extraData);\n }\n ngOnInit() {\n }\n\n update_detail()\n {\n   this.loader=true\n   this.service.fetchData(this.extraData,\"product/update\").subscribe((result)=>{\n     console.log(result);\n     this.loader=false\n     if(result['status']=='Success')\n     {\n      this.toast.openSucess(\"Product Packing Detail\",\" Update SuccessFully\")\n     }\n     \n   })\n   \n }\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  \\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/product-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{productdata.productName}}</h2>\\n        <p class=\\\"light\\\">{{productdata.category}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"top-pagination m-right-data \\\" *ngIf=\\\"role==1\\\">\\n      <div class=\\\"detail-field w200\\\" style=\\\"background: #efefef;\\\">\\n        <h2>Go Live</h2><mat-slide-toggle class=\\\"right-toggle\\\" [checked]=\\\"productdata.isLive\\\"  (change)=\\\"productLive(productdata.productId,$event)\\\" ></mat-slide-toggle>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\">\\n      \\n      \\n      <div class=\\\"row\\\">\\n        \\n        <div class=\\\"col s8 pr10\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>PRODUCT DETAIL</h2>\\n            </div>\\n            <div class=\\\"details-thumbnail\\\">\\n              <div class=\\\"row mb10\\\">\\n                <div *ngIf=\\\"productdata.segment\\\" class=\\\"col s4 \\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Segment</span>\\n                    <p>{{productdata.segment}}</p>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"productdata.subSegment\\\" class=\\\"col s4 \\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Sub Segment</span>\\n                    <p>{{productdata.subSegment}}</p>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"productdata.category\\\" class=\\\"col s4 \\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Category</span>\\n                    <p>{{productdata.category}}</p>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"row mb10\\\">\\n                \\n                <div *ngIf=\\\"productdata.productName\\\" class=\\\"col s8 \\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Product Name</span>\\n                    <p>{{productdata.productName}}</p>\\n                  </div>\\n                </div>\\n                \\n                <div *ngIf=\\\"productdata.oem\\\" class=\\\"col s4 \\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>OEM</span>\\n                    <p>{{productdata.oem}}</p>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"row mb10\\\">\\n                \\n                <div *ngIf=\\\"productdata.model\\\" class=\\\"col s4\\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Model Description 1</span>\\n                    <p>{{productdata.model}}</p>\\n                  </div>\\n                </div>\\n                \\n                <div *ngIf=\\\"productdata.model\\\" class=\\\"col s4\\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Model Description 2</span>\\n                    <p>{{productdata.model}}</p>\\n                  </div>\\n                </div>\\n                \\n                <div *ngIf=\\\"productdata.size\\\" class=\\\"col s4 \\\">\\n                  <div class=\\\"detail-field\\\">\\n                    <span>Size</span>\\n                    <p>{{productdata.size}}</p>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.materialType\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Material Type</span>\\n                  <p>{{productdata.materialType}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.materialDescription1\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Material Description 1</span>\\n                  <p>{{productdata.materialDescription1}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.materialDescription2\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Material Description 2</span>\\n                  <p>{{productdata.materialDescription2}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              \\n              <div *ngIf=\\\"productdata.materialDescription3\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Material Description 3</span>\\n                  <p>{{productdata.materialDescription3}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.materialDescription4\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Material Description 4</span>\\n                  <p>{{productdata.materialDescription4}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.partNumber\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Part No</span>\\n                  <p>{{productdata.partNumber}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.partDescription\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Part Description</span>\\n                  <p>{{productdata.desc}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.salesUnit\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Sales Unit</span>\\n                  <p>{{productdata.salesUnit}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.priceUnit\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Price Unit</span>\\n                  <p>{{productdata.priceUnit}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.mrp\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>MRP</span>\\n                  <p>{{productdata.mrp}}</p>\\n                </div>\\n              </div>\\n              \\n              <div *ngIf=\\\"productdata.moq\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>MOQ</span>\\n                  <p>{{productdata.moq}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              <div *ngIf=\\\"productdata.gstPercentage\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>GST</span>\\n                  <p>{{productdata.gstPercentage}}</p>\\n                </div>\\n              </div>\\n              \\n              \\n              \\n              <div *ngIf=\\\"productdata.hsnCode\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>HSN Code</span>\\n                  <p>{{productdata.hsnCode}}</p>\\n                </div>\\n              </div>\\n              \\n              <div *ngIf=\\\"productdata.weightGross\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Weight Gross</span>\\n                  <p>{{productdata.weightGross}}</p>\\n                </div>\\n              </div>\\n              \\n              <div *ngIf=\\\"productdata.weightUOM\\\" class=\\\"col s4 mb10\\\">\\n                <div class=\\\"detail-field\\\">\\n                  <span>Weight UOM</span>\\n                  <p>{{productdata.weightUOM}}</p>\\n                </div>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"sprate-box pt0\\\">\\n            <div class=\\\"cs-logs\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>PRODUCT IMAGES</h2>\\n                <label *ngIf=\\\"this.role==1\\\">\\n                  <input type=\\\"file\\\" (change)=\\\"insertImage($event)\\\" style=\\\"display: none;\\\">\\n                  Add Image\\n                </label>\\n              </div>\\n              <div class=\\\"logs-outer padding0\\\">\\n                <div class=\\\"cs-image\\\">\\n                  \\n                  <div *ngIf=\\\"productdata.documents?.length == 0\\\" class=\\\"not-data mt15 padding0\\\">\\n                    <div class=\\\"inner-data\\\">\\n                      <p>Image not available</p>\\n                    </div>\\n                  </div>\\n                  \\n                  <div *ngIf=\\\"productdata.documents?.length > 0\\\" class=\\\"vertical-img {{productdata.documents.length == 2 ? 'double-img' : (productdata.documents.length > 2 ? 'multiple-img' : '')}}\\\">\\n                    <ul>\\n                      <li class=\\\"overlay-content\\\" *ngFor=\\\"let productImg of productdata.documents;let i=index\\\">\\n                        <img src=\\\"{{api+productImg.documentId+'/'+'2'}}\\\">\\n                        <div class=\\\"tittle\\\">\\n                          <p>{{ productImg.documentName}}</p>\\n                        </div>\\n                        <a *ngIf=\\\"this.role==1\\\" class=\\\"close\\\" matRipple matTooltip=\\\"Delete\\\" (click)=\\\"deleteimg(productImg.documentId,productImg.fileName)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                      </ul>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>\\n        \\n        \\n        <div class=\\\"row  mt15\\\">\\n          \\n          <div  class=\\\"col s6 \\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Specification Information</h2>\\n                <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" mat-button matTooltip=\\\"Edit Info\\\" (click)=\\\"openDialog('additonal')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n              </div>\\n              <div  class=\\\"details-thumbnail\\\" *ngIf=\\\"productdata.productSpecification1 || productdata.productSpecification2 || productdata.productSpecification3 || productdata.productSpecification4 || productdata.productSpecification5\\\">\\n                <div class=\\\"row mb10\\\">\\n                  <div *ngIf=\\\"productdata.productSpecification1\\\" class=\\\"col s4 \\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <!-- <span>Specification 1</span> -->\\n                      <p>{{productdata.productSpecification1}}</p>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"productdata.productSpecification2\\\" class=\\\"col s4 \\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <!-- <span>Specification 2</span> -->\\n                      <p>{{productdata.productSpecification2}}</p>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"productdata.productSpecification3\\\" class=\\\"col s4 \\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <!-- <span>Specification 3</span> -->\\n                      <p>{{productdata.productSpecification3}}</p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row mb10\\\">\\n                  <div *ngIf=\\\"productdata.productSpecification4\\\" class=\\\"col s4 \\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <!-- <span>Specification 4</span> -->\\n                      <p>{{productdata.productSpecification4}}</p>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"productdata.productSpecification5\\\" class=\\\"col s4\\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <!-- <span>Specification 5</span> -->\\n                      <p>{{productdata.productSpecification5}}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 empty\\\">\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"col s6 \\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Additional Information</h2>\\n                <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" mat-button matTooltip=\\\"Edit Info\\\"  (click)=\\\"openDialog('specification')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n              </div>\\n              <div class=\\\"from-fields\\\" >\\n                <div class=\\\"details-thumbnail\\\" *ngIf=\\\"productdata.aditionalField1Label || productdata.aditionalField2Label || productdata.aditionalField3Label || productdata.aditionalField4Label\\\">\\n                  <div class=\\\"row mb10\\\">\\n                    <div class=\\\"col s6\\\">\\n                      <p class=\\\"cs-label\\\">Labels</p>\\n                    </div>\\n                    <div class=\\\"col s6\\\">\\n                      <p class=\\\"cs-label\\\">Values</p>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"productdata.aditionalField1Label\\\" class=\\\"row mb10\\\">\\n                    \\n                    <div  class=\\\"col s6\\\">\\n                      <div class=\\\"detail-field\\\">\\n                        <!-- <span>Label 1</span> -->\\n                        <p>{{productdata.aditionalField1Label}}</p>\\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s6\\\">\\n                      <div class=\\\"detail-field\\\">\\n                        <!-- <span>Value 1</span> -->\\n                        <p>{{productdata.aditionalField1Value}}</p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <!-- </div> -->\\n                  <div *ngIf=\\\"productdata.aditionalField2Label\\\" class=\\\"row mb10\\\" >\\n                    <div  class=\\\"col s6\\\">\\n                      <div class=\\\"detail-field\\\">\\n                        <!-- <span>Label 2</span> -->\\n                        <p>{{productdata.aditionalField2Label}}</p>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s6\\\">\\n                      <div class=\\\"detail-field\\\">\\n                        <!-- <span>Value 2</span> -->\\n                        <p>{{productdata.aditionalField2Value}}</p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"productdata.aditionalField3Label\\\" class=\\\"row mb10\\\">\\n                    <div  class=\\\"col s6\\\">\\n                      <div class=\\\"detail-field\\\">\\n                        <!-- <span>Label 3</span> -->\\n                        <p>{{productdata.aditionalField3Label}}</p>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s6\\\">\\n                      <div class=\\\"detail-field\\\">\\n                        <!-- <span>Value 3</span> -->\\n                        <p>{{productdata.aditionalField3Value}}</p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"productdata.aditionalField4Label\\\" class=\\\"row mb10\\\">\\n                    <div  class=\\\"col s6\\\">\\n                      <div class=\\\"detail-field\\\">\\n                        <!-- <span>Label 4</span> -->\\n                        <p>{{productdata.aditionalField4Label}}</p>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s6\\\">\\n                      <div class=\\\"detail-field\\\">\\n                        <!-- <span>Value 4</span> -->\\n                        <p>{{productdata.aditionalField4Value}}</p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div> \\n        \\n        <div class=\\\"row  mt15\\\">\\n          \\n          <div  class=\\\"col s6 \\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Packing Information</h2>\\n                <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" mat-button matTooltip=\\\"Edit Info\\\" (click)=\\\"openPackingDialog(productdata.productId,productdata.masterPacking,productdata.secondaryPacking)\\\"><i class=\\\"material-icons\\\">create</i></a>\\n              </div>\\n              <div  class=\\\"details-thumbnail\\\">\\n                <div class=\\\"row mb10\\\">\\n                  <div class=\\\"col s6 \\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{productdata.masterPacking}}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s6 \\\">\\n                    <div class=\\\"detail-field\\\">\\n                      <p>{{productdata.secondaryPacking}}</p>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {MatDialog } from '@angular/material';\nimport { ProductModalComponent } from '..//product-modal/product-modal.component';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { EditmodelComponent } from '../editmodel/editmodel.component';\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  animations: [slideToTop()]\n})\nexport class ProductDetailComponent implements OnInit {\n  loader:boolean;\n  id:any;\n  product_detail:any={};\n  productdata:any=[];\n  url:any;\n  name:any;\n  requestfn:any;\n  api:any;\n  selectedFile:any;\n  documentId:any;\n  documentType:any;\n  picdata:any={};\n  documentName:any;\n  fileName:any;\n  referenceId=this.id;\n  iconName:any;\n  userdata:any=[];\n  msge:any;\n  binaryData:any;\n  role:any;\n  action=\"1\";\n  constructor(public db: ConstantService,public router:Router,public user:sessionStorage,public toast:SnackBarOverview, public route:ActivatedRoute, public dialog: MatDialog, public msg:DialogComponent) { }\n  ngOnInit() {\n    this.loader=true;\n    this.userdata=this.user['user']['data'];\n    this.role=parseInt(this.userdata['role']);\n    console.log(this.role);\n    this.route.params.subscribe(params=>{\n      console.log(params);\n      this.id = params.id;\n      console.log(this.id);\n      if(this.id){\n        this.show_details();    \n      }else{\n      }\n    });\n  }\n  openDialog(check): void {\n    this.productdata.type=check;\n    const dialogRef = this.dialog.open(ProductModalComponent, {\n      width: '700px',\n      data: this.productdata\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.show_details();\n      console.log('The dialog was closed');\n    });\n  }\n  urls:any=[];\n  insertImage(data)\n  {\n          this.selectedFile=[];\n          let files = data.target.files;\n          if (files) {\n            for (let file of files) {\n              let reader = new FileReader();\n              reader.onload = (e: any) => {\n                this.urls.push(e.target.result);\n              }\n              reader.readAsDataURL(file);\n            }\n          }\n          console.log(this.urls);\n          console.log(data.target.files.length);\n          for(var i=0; i<data.target.files.length; i++)\n          {\n            this.selectedFile.push(data.target.files[i]);\n          }\n\n          setTimeout(() => {\n            this.Insert_Image();\n          }, 500);\n  }\n\n\n  Insert_Image()\n  {\n          this.productdata=new FormData;\n          this.productdata.action=this.action;\n          this.productdata.binaryData=this.urls[this.urls.length - 1];\n          this.productdata.documentType=1;\n          this.productdata.documentName=this.name;\n          this.productdata.referenceId=this.id;\n          this.loader=true;\n          for(var i=0; i<this.selectedFile.length; i++)\n          {\n            this.productdata.fileName = \"image\"+i+\".jpg\",this.selectedFile[i];\n          }\n          console.log(this.productdata);\n          let value=[];\n          value[0]=this.productdata;\n          console.log(value);\n\n          this.db.fetchData(value,\"document/update\").subscribe((resp)=>\n          {\n              console.log(resp);\n              if(resp)\n              {\n                  this.loader=false;\n                  this.show_details();\n                  this.toast.openSucess('Image Added Sucessfully','');\n                \n              }\n          });\n  }\n  \n\n  picvalue:any=[];\n  deleteimg(picid,filename)\n  {\n    console.log(picid,filename);\n    this.picdata.documentId=picid;\n    this.picdata.action=2;\n    this.picdata.fileName=filename;\n    this.picdata.documentType=1;\n    this.picdata.referenceId=this.id;\n     this.picvalue.push(this.picdata);\n     console.log(this.picvalue);\n     this.msge=\"Your Pic\"\n     this.msg.delete(this.msge).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.loader=true;\n    this.db.fetchData(this.picvalue,\"document/update\").subscribe((resp)=>\n      { \n        console.log(resp);\n        if(resp)\n        {\n          this.toast.openSucess('Image Deleted Sucessfully','');\n          this.loader=false;\n          this.show_details();\n          this.picvalue=[];\n        }\n\n      });\n    }\n  });\n  }\n  show_details() {\n\n     this.loader=true;\n   \n            this.db.fileData('','product/detail/'+this.id).subscribe((response)=>{\n              console.log(response);\n              this.product_detail = response;\n              this.productdata=this.product_detail.data;\n              // if(this.productdata.isLive==true){\n              //   this.productdata.appStatus=\"Yes\";\n              // }\n              // else{\n              //   this.productdata.appStatus=\"No\";\n              // }\n              this.name = this.productdata.productName;\n              this.url = this.db.dburl;\n              this.requestfn = 'download/document/';\n              this.api = this.url+this.requestfn;\n              console.log(this.api);\n\n              setTimeout(() => {\n                 this.loader=false;\n              }, 1000);\n\n            },error=>{\n              console.log(error);\n            })\n    \n\n  }\n\n  isLive:any;\n  productLive(id,event)\n  {\n    console.log(this.productdata.isLive);\n    \n    if(this.productdata.isLive==true)\n    {\n      this.isLive=false;\n    }\n    if(this.productdata.isLive==false)\n    {\n      this.isLive=true;\n\n    }\n    console.log(id,event.checked);\n    this.db.fetchData({\"productId\":id ,\"isLive\":this.isLive},'product/live').subscribe((response)=>{\n      console.log(response)\n    if(response['status']=='Success')\n    {\n      this.show_details();\n      console.log(\"live\");\n      this.toast.openSucess('Product Update Success','');\n    }\n  })\n  \n}\n\nopenPackingDialog(productId,masterPacking,secondaryPacking)\n{\n  \n  const dialogRef = this.dialog.open(EditmodelComponent, {\n    width: '700px',\n    data: {productId:productId,masterPacking:masterPacking,secondaryPacking:secondaryPacking}\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log(result);\n    \n    this.show_details();\n    console.log('The dialog was closed');\n  });\n}\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/product.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text w250\\\">\\n        <h2>Product</h2>\\n        <p>Total Product: {{totalrecord}}</p>\\n      </div>\\n    </div>\\n    \\n    <div *ngIf=\\\"filter.segment || filter.subsegment || filter.category || filter.prod || filter.oem || filter.model || filter.partNumber || filter.live\\\" class=\\\"filter-container left-auto\\\">\\n      <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n        <button mat-button >CLEAR FILTER</button>\\n      </div>\\n    </div>\\n    \\n    <!-- <div class=\\\"top-pagination\\\">\\n      <ul>\\n        <li class=\\\"refresh-area af-none\\\">\\n          <a class=\\\"refresh-btn\\\" mat-raised-button matTooltip=\\\"Refresh\\\" (click)=\\\"refresh()\\\"><i class=\\\"material-icons\\\"> refresh</i></a>\\n        </li>\\n        <li><p>Pages {{pagenumber}} Of {{totalpage}}</p></li>\\n        <li><button mat-button class=\\\"left-btn\\\" [disabled]=\\\"pagenumber == 1\\\" (click)=\\\"pagination(currentPage,pageSize)\\\"><i class=\\\"material-icons\\\">keyboard_arrow_left</i></button></li>\\n        <li><input type=\\\"text\\\" placeholder=\\\"GO TO\\\" name=\\\"pagenumber\\\" (keyup.enter)=\\\"pagination(pageSize,((pagenumber*pageSize)-pageSize))\\\" [(ngModel)]=\\\"pagenumber\\\"></li>\\n        <li><button mat-button class=\\\"right-btn\\\"  ng-disabled=\\\"true\\\" [disabled]=\\\"pagenumber == totalpage\\\" (click)=\\\"pagination((currentPage+1),pageSize)\\\"><i class=\\\"material-icons\\\">keyboard_arrow_right</i></button></li>\\n      </ul>\\n    </div> -->\\n  </div>\\n\\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            \\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head \\\">\\n                <table>\\n                  <tr>\\n                    <th class=\\\"w90\\\">Segment</th>\\n                    <th class=\\\"w180\\\">SubSegment</th>\\n                    <th class=\\\"w130\\\">Category</th>\\n                    <th >Product Name</th>\\n                    <th class=\\\"w140\\\">OEM</th>\\n                    <th class=\\\"w160\\\">Model</th>\\n                    <th class=\\\"w110\\\">PartNo.</th>\\n                    <th *ngIf=\\\"userRole==1\\\" class=\\\"w80\\\">Live</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-head bdrt \\\"  >\\n                <table>\\n                  <tr>\\n                    <th class=\\\"w90\\\">\\n                      <div class=\\\"th-search-acmt\\\" [ngClass]=\\\"{ 'clear-feilds' : removesegment == true}\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <select #segment=\\\"ngModel\\\" name=\\\"segment\\\" [(ngModel)]=\\\"filter.segment\\\" (change)=\\\"filterChangeHandler('segment')\\\">\\n                            <option value=\\\"\\\" selected>All</option>\\n                            <option value=\\\"{{list.text}}\\\" *ngFor=\\\"let list of segmentlist\\\">{{list.text}}</option>\\n                          </select>\\n                        </div>\\n                      </div>\\n                    </th>\\n                    \\n\\n                    <th class=\\\"w180\\\">\\n                      <div class=\\\"th-search-acmt\\\"  [ngClass]=\\\"{ 'clear-feilds' : removesubsegment == true}\\\">\\n                        <mat-form-field>\\n                          <input type=\\\"text\\\"  name=\\\"subsegment\\\" [(ngModel)]=\\\"filter.subsegment\\\" (ngModelChange)=\\\"subsegment_list()\\\" matInput [matAutocomplete]=\\\"auto2\\\">\\n                          <mat-autocomplete #auto2=\\\"matAutocomplete\\\" >\\n                            <mat-option *ngFor=\\\"let subsegment of subsegmentlist; let i=index\\\"  (click)=\\\"filterChangeHandler('subsegment')\\\" value=\\\"{{subsegment.text}}\\\">{{subsegment.text}}</mat-option>\\n                          </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removesubsegmentfilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                        </mat-form-field>\\n                      </div>\\n                    </th>\\n\\n                    <th class=\\\"w130\\\">\\n                      <div class=\\\"th-search-acmt\\\"  [ngClass]=\\\"{ 'clear-feilds' : removecategory == true}\\\">\\n                        <mat-form-field>\\n                          <input type=\\\"text\\\" name=\\\"category\\\" [(ngModel)]=\\\"filter.category\\\" (ngModelChange)=\\\"category_list()\\\" matInput [matAutocomplete]=\\\"auto3\\\">\\n                          <mat-autocomplete #auto3=\\\"matAutocomplete\\\" >\\n                            <mat-option *ngFor=\\\"let category of categorylist; let i=index\\\"  (click)=\\\"filterChangeHandler('category')\\\" value=\\\"{{category.text}}\\\">{{category.text}}</mat-option>\\n                          </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removecategoryfilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                        </mat-form-field>\\n                      </div>\\n                    </th>\\n\\n                    <th>\\n                      <div class=\\\"th-search-acmt\\\"  [ngClass]=\\\"{ 'clear-feilds' : removeproductname == true}\\\">\\n                        <mat-form-field>\\n                          <input type=\\\"text\\\"  name=\\\"prod\\\" [(ngModel)]=\\\"filter.prod\\\" (ngModelChange)=\\\"productname_list()\\\" matInput [matAutocomplete]=\\\"auto4\\\">\\n                          <mat-autocomplete #auto4=\\\"matAutocomplete\\\" >\\n                            <mat-option *ngFor='let prod of prodlist'  (click)=\\\"filterChangeHandler('productName')\\\" value=\\\"{{prod.productName}}\\\">{{prod.productName}}</mat-option>\\n                          </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removeproductnamefilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                        </mat-form-field>\\n                      </div>\\n                    </th>\\n\\n                    <th class=\\\"w140\\\">\\n                      <div class=\\\"th-search-acmt\\\"  [ngClass]=\\\"{ 'clear-feilds' : removeoem==true}\\\">\\n                        <mat-form-field>\\n                          <input type=\\\"text\\\"   name=\\\"oem\\\"  [(ngModel)]=\\\"filter.oem\\\" (ngModelChange)=\\\"oem_list()\\\" matInput [matAutocomplete]=\\\"auto5\\\">\\n                          <mat-autocomplete #auto5=\\\"matAutocomplete\\\" >\\n                            <mat-option *ngFor='let oem of  oemlist'   (click)=\\\"filterChangeHandler('oem')\\\" value=\\\"{{oem.text}}\\\">{{oem.text}}</mat-option>\\n                          </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removeoemfilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                        </mat-form-field>\\n                      </div>\\n                    </th>\\n                    <th class=\\\"w160\\\">\\n                      <div class=\\\"th-search-acmt\\\"  [ngClass]=\\\"{ 'clear-feilds' : removemodel== true}\\\">\\n                        <mat-form-field>\\n                          <input type=\\\"text\\\"   name=\\\"model\\\" [(ngModel)]=\\\"filter.model\\\" (ngModelChange)=\\\"model_list()\\\" matInput [matAutocomplete]=\\\"auto6\\\">\\n                          <mat-autocomplete #auto6=\\\"matAutocomplete\\\" >\\n                            <mat-option *ngFor='let model of  modellist'  (click)=\\\"filterChangeHandler('model')\\\" value=\\\"{{model.text}}\\\">{{model.text}}</mat-option>\\n                          </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removemodelfilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                        </mat-form-field>\\n                      </div>\\n                    </th>\\n                   \\n                       <th class=\\\"w110\\\">\\n\\n                          <div class=\\\"th-search-acmt\\\"  [ngClass]=\\\"{ 'clear-feilds' : removepartnumber== true}\\\">\\n                            <mat-form-field>\\n                                    <input type=\\\"text\\\" name=\\\"partNumber\\\" [(ngModel)]=\\\"filter.partNumber\\\" (ngModelChange)=\\\"partNumberFilter()\\\" matInput [matAutocomplete]=\\\"auto7\\\">\\n                                    <mat-autocomplete #auto7=\\\"matAutocomplete\\\" >\\n                                        <mat-option *ngFor='let list of partNumberList'  (click)=\\\"filterChangeHandler('partNumber')\\\" value=\\\"{{list.partNumber}}\\\">{{list.partNumber}}</mat-option>\\n                                    </mat-autocomplete>\\n                                    <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removePartNumberFilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                            </mat-form-field>\\n                          </div>\\n                      </th>\\n\\n                      <th  *ngIf=\\\"userRole==1\\\" class=\\\"w80\\\">\\n                          <div class=\\\"th-search\\\">\\n                              <select #live=\\\"ngModel\\\" name=\\\"live\\\" [(ngModel)]=\\\"filter.live\\\" (change)=\\\"filterChangeHandler('live')\\\">\\n                                    <option value=\\\"\\\" selected>Select Option</option>\\n                                    <option [value]=\\\"true\\\">Yes</option>\\n                                    <option [value]=\\\"false\\\">No</option>\\n                              </select>\\n                          </div>\\n                      </th>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let product of data\\\">\\n                    <td class=\\\"w90\\\">{{product.segment}}</td>\\n                    <td class=\\\"w180\\\">{{product.subSegment}}</td>\\n                    <td class=\\\"w130\\\">{{product.category}}</td>\\n                    <td><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/product-detail/{{product.productId}}\\\" routerLinkActive=\\\"active\\\" ><p>{{product.productName}}</p></a></td>\\n                    <td class=\\\"w140\\\">{{product.oem}}</td>\\n                    <td class=\\\"w160\\\"><p>{{product.model}}</p></td>\\n                    <td class=\\\"w110\\\">{{product.partNumber}}</td>\\n                    <td *ngIf=\\\"product.isLive==true && userRole==1\\\" class=\\\"w80 yes\\\">Yes</td>\\n                    <td *ngIf=\\\"product.isLive==false && userRole==1\\\" class=\\\"w60 no\\\">No</td>\\n                    \\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"data.length==0\\\" class=\\\"data-not-available\\\" >\\n      <div class=\\\"outer\\\">\\n        <div class=\\\"iinear\\\">\\n          <div class=\\\"figure\\\" matRipple>\\n            <div class=\\\"header\\\">\\n              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n            </div>\\n            <div class=\\\"description\\\">\\n\\n              <div class=\\\"img\\\">\\n                  <i class=\\\"material-icons\\\">error_outline</i>\\n              </div>\\n                \\n              <div class=\\\"cs-heading\\\">\\n                <h2>Data Not Available</h2>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div  class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li *ngIf=\\\"userdata['userType'] == '1'\\\"><a  matTooltip=\\\"Download Product Sheet\\\" matRipple (click)=\\\"downloadFile()\\\"><i class=\\\"material-icons\\\">cloud_download</i></a></li>\\n    </ul>\\n  </div>\\n  \\n  <div class=\\\"h100\\\"></div>\\n</div>\"","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'ts-xlsx';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n    selector: 'app-product-list',\n    templateUrl: './product-list.component.html',\n    animations: [slideToTop()]\n})\n\n\nexport class ProductListComponent implements OnInit {\nproductlist:any=[];\nsegmentlist:any=[];\nsubsegmentlist:any=[];\ncategorylist:any=[];\nprodlist:any=[];\nmodellist:any=[];\noemlist:any=[];\ndata:any=[];\ndiv:boolean=false;\nremovesegment:boolean=false;\nremovesubsegment:boolean=false;\nremovecategory:boolean=false;\nremoveproductname:boolean=false;\nremovemodel:boolean=false;\nremoveoem:boolean=false;\nfilter:any={};\nenableFilter:boolean;\ndisableFilter:boolean;\ncurrentPage:any=1;\npageSize:any=200;\nloader:boolean;\nuserdata:any=[];\nsenddata:any=[];\nsgmnts:any=[];\ntotalrecord:any;\nuserRole:any;\n\npartNumberList:any;\nremovepartnumber:any = false;\n\nconstructor(public db:ConstantService, public user:sessionStorage, public toast:SnackBarOverview, private renderer: Renderer2, public confirm:DialogComponent) {\n\n\n      this.userdata=this.user['user']['data'];\n      if(this.userdata['userType']==3){\n\n        for(var i=0;i < this.userdata['distributerNetwork']['networkSegments'].length;i++){\n          this.sgmnts.push(this.userdata['distributerNetwork']['networkSegments'][i]['segment']);}\n        this.senddata={\"segments\":this.sgmnts,\"currentPage\": this.currentPage,\"pageSize\": this.pageSize};\n\n      }  else if(this.userdata['userType']==2) {\n        \n          for(var i=0;i < this.userdata['salesUser']['staffSegments'].length;i++) {\n             this.sgmnts.push(this.userdata['salesUser']['staffSegments'][i]['segment']);\n          }\n\n          this.senddata={\"segments\":this.sgmnts,\"currentPage\": this.currentPage,\"pageSize\": this.pageSize};\n      } else {\n        \n           this.senddata={\"currentPage\": this.currentPage,\"pageSize\": this.pageSize};\n      }\n\n      this.productList(this.senddata);\n      this.userRole=this.userdata['role'];\n      console.log(this.userRole);\n}\n\n  ngOnInit() {\n    this.disableFilter=true;\n   this.enableFilter=false;\n\n   this.segment_list();\n  }\n  filterbutton(){\n    this.enableFilter=true;\n    if(this.enableFilter==true)\n    {\n      this.disableFilter=false;\n    }\n    else{\n      this.disableFilter=true;\n    }\n\n  }\nclosefilter(){\n  this.enableFilter  = false;\n  this.disableFilter=true;\n  this.productList({ \"currentPage\": this.currentPage,\n  \"pageSize\": this.pageSize});\n  this.filter='';\n}\n \n  refresh(){\n    this.productList({ \"currentPage\": this.currentPage,\n      \"pageSize\": this.pageSize});\n        this.toast.openSucess('List Refreshed Sucessfully','');\n      \n  }\n\n\n  downloadFile()\n  {\n    console.log(\"productlist\");\n    \n    this.confirm.downloadConfirm(\"Product Data\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        console.log(\"function\");\n        this.db.downloadProductData({},'pwnload').subscribe(result=> { saveAs(result, 'Product Data.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n  \n        });\n      }\n    });\n     \n  }\n\n  \n  downloadPriceList(){\n    console.log(\"pricelist\");\n    \n    this.confirm.downloadConfirm(\"Price List\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        console.log(\"function\");\n        this.db.downloadProductData({},'price/list').subscribe(result=> {  saveAs(result, 'Price List.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n  \n        });\n      }\n    });\n  }\n\n  segment_list(){\n   console.log('hello');\n   console.log(this.filter.segment);\n    this.db.fileData('','segment/list/').subscribe((response)=>{\n      console.log(response);\n      this.segmentlist=response['data'];\n      console.log(this.segmentlist);\n    });\n  }  \n\n\n  getAllFilterData() {\n\n\n    const apiFilterObject = {};\n\n    apiFilterObject['currentPage'] = this.currentPage;\n    apiFilterObject['pageSize'] = this.pageSize;\n\n      for (const property in this.filter) {\n\n\n        console.log(this.filter[property]);\n\n          if (this.filter.hasOwnProperty(property) && this.filter[property]) {\n\n                if(property == 'segment') {\n                    apiFilterObject['segmentCode'] = this.filter[property];\n                }\n                \n                if(property == 'subsegment') {\n                  apiFilterObject['subSegmentCode'] = this.filter[property];\n                }\n\n                if(property == 'category') {\n                  apiFilterObject['categoryCode'] = this.filter[property];\n                }\n\n                if(property == 'prod') {\n                  apiFilterObject['productName'] = this.filter[property];\n                }\n\n                if(property == 'oem') {\n                  apiFilterObject['oemCode'] = this.filter[property];\n                }\n\n                if(property == 'model') {\n                  apiFilterObject['modelCode'] = this.filter[property];\n                }\n\n                if(property == 'partNumber') {\n                  apiFilterObject['partNumberContains'] = this.filter[property];\n                }\n\n                if(property == 'partNumber') {\n                  apiFilterObject['partNumberContains'] = this.filter[property];\n                }\n\n                if(property == 'live') {\n                  apiFilterObject['isLive'] = this.filter[property];\n                }\n          }\n      }\n\n      return apiFilterObject;\n        \n  }\n\n\n\n  filterChangeHandler(target) {\n\n         const apiURLData = this.getAllFilterData();\n\n         console.log(apiURLData);\n\n          setTimeout(() => {\n\n              this.productList(apiURLData);\n          \n          }, 1000);\n\n          if(target == 'subsegment') {\n            this.removesubsegment=true;\n          }\n\n          if(target == 'category') {\n              this.removecategory=true;\n          }\n\n          if(target == 'productName') {\n              this.removeproductname=true;\n          }\n\n          if(target == 'oem') {\n\n              this.removeoem=true;\n          }\n\n          if(target == 'model') {\n              this.removemodel=true;\n          }\n\n          if(target == 'partNumber') {\n              this.removepartnumber=true;\n          }\n  }\n\n\n  partNumberFilter() {\n\n    console.log(this.filter.partNumber);\n  \n    this.db.fetchData({ \"currentPage\": this.currentPage,\n    \"pageSize\": this.pageSize,\"partNumberContains\":this.filter.partNumber},'product/list').subscribe((response)=>{\n         this.partNumberList=response['data'];\n         console.log(this.partNumberList);\n     });\n  }\n\n\n  segmentFilter(){\n    console.log(this.filter.segment);\n    this.productList({ \"currentPage\": this.currentPage,\n      \"pageSize\": this.pageSize,\"segmentCode\":this.filter.segment});\n      this.removesegment=true;\n  }\n\n\n  removesegmentfilter() {\n\n        this.filter.segment='';\n        this.productList({ \"currentPage\": this.currentPage,\n        \"pageSize\": this.pageSize,\"segmentCode\":this.filter.segment,\"subSegmentCode\":this.filter.subsegment,\"categoryCode\":this.filter.category,\"productName\":this.filter.prod,\"modelCode\":this.filter.model,\"oemCode\":this.filter.oem});\n        this.removesegment = false;\n  }\n\n  subsegment_list(){\n\n    console.log(this.filter);       \n    this.db.fetchData({\"subSegment\":this.filter.subsegment},'subsegment/list').subscribe((response)=>{\n      this.subsegmentlist=response['data'];\n      console.log(this.subsegmentlist);\n    });\n  }\n\n\n  removesubsegmentfilter(){\n      this.filter.subsegment='';\n      this.removesubsegment=false;\n\n      this.filterChangeHandler('subsegment');\n  }\n\n  removecategoryfilter(){\n\n      this.filter.category='';\n      this.removecategory=false;\n      this.filterChangeHandler('category');\n  }\n\n  removeproductnamefilter(){\n    this.filter.prod='';\n    this.removeproductname=false;\n    this.filterChangeHandler('productName');\n    \n  }\n\n  removeoemfilter() {\n\n      this.filter.oem='';\n      this.removeoem=false;\n      this.filterChangeHandler('oem');\n  }\n\n  removemodelfilter() {\n\n      this.filter.model='';\n      this.removemodel=false;\n      this.filterChangeHandler('model');\n  }\n\n\n  removePartNumberFilter() {\n\n      this.filter.partNumber='';\n      this.filterChangeHandler('partNumber');\n      this.removepartnumber = false;\n  }\n\n  clearfilter() {\n\n    this.filter={};\n    console.log(this.filter);\n\n    this.removesegment=false;\n    this.removesubsegment=false;\n    this.removecategory=false;\n    this.removeproductname=false;\n    this.removemodel=false;\n    this.removeoem=false;\n\n    this.filterChangeHandler('all');\n}\n\n  productList(val)\n  {\n      this.loader=true;\n      this.db.fetchData(val,'product/list').subscribe((response)=>{\n        console.log(response);\n        this.loader=false;\n        if(response['status']=='Success')\n        {\n          this.productlist = response;\n          this.data=this.productlist.data\n          this.totalrecord=this.productlist.recordsFound;\n        }\n        else{\n          this.div=true;\n          this.data=[];\n          this.productlist = response;\n          this.totalrecord=this.productlist.recordsFound;\n\n        }\n      });\n  }\n\n  category_list(){\n    this.db.fileData(this.filter.category,'category/list/').subscribe((response)=>{\n      this.categorylist=response['data'];\n      console.log(response);\n    });\n  } \n\n\n  productname_list(){\n\n     this.db.fetchData({ \"currentPage\": this.currentPage,\n    \"pageSize\": this.pageSize,\"productName\":this.filter.prod},'product/list').subscribe((response)=>{\n\n         console.log(response);\n         const distinctProductNameArr = [];\n\n         if(response['data']) {\n\n              for (let index = 0; index < response['data'].length; index++) {\n\n                  const indexExist =  distinctProductNameArr.findIndex(row => row.productName == response['data'][index].productName);\n\n                  if(indexExist == -1) {\n                      distinctProductNameArr.push({productName: response['data'][index].productName});\n                  }\n              }\n         }\n\n         this.prodlist = distinctProductNameArr;\n\n     });\n  } \n\n\n  model_list(){\n    this.db.fileData(this.filter.model,'model/list/').subscribe((response)=>{\n      this.modellist=response['data'];\n      console.log(response);\n\n      console.log(this.modellist);\n    });\n  }  \n\n\n  oem_list(){\n    this.db.fileData(this.filter.oem,'oem/list/').subscribe((response)=>{\n      this.oemlist=response['data'];\n      console.log(response);\n    });\n  }\n \n\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n\\n\\n  <div mat-dialog-content *ngIf=\\\"data.type=='additonal'\\\">\\n  <p class=\\\"heading\\\">Update Specification Information</p>\\n  <div class=\\\"from-fields\\\">\\n    <div class=\\\"col s12\\\">          \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <input matInput name=\\\"productSpecification1\\\" [(ngModel)]=\\\"extraData.productSpecification1\\\" placeholder=\\\"Specification 1\\\">\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      <div class=\\\"col s4\\\">\\n        <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput  name=\\\"productSpecification2\\\" [(ngModel)]=\\\"extraData.productSpecification2\\\" placeholder=\\\"Specification 2\\\">\\n            </mat-form-field>\\n          </div>\\n      </div>\\n      <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <input matInput  name=\\\"productSpecification3\\\" [(ngModel)]=\\\"extraData.productSpecification3\\\" placeholder=\\\"Specification 3\\\">\\n              </mat-form-field>\\n            </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"row mb20\\\">\\n      <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <input matInput   name=\\\"productSpecification4\\\" [(ngModel)]=\\\"extraData.productSpecification4\\\" placeholder=\\\"Specification 4\\\">\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <input matInput  name=\\\"productSpecification5\\\" [(ngModel)]=\\\"extraData.productSpecification5\\\" placeholder=\\\"Specification 5\\\">\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      <div class=\\\"col s4 empty\\\"></div>\\n    </div>\\n    </div>\\n  </div>\\n  </div>\\n\\n  <div mat-dialog-content  *ngIf=\\\"data.type=='specification'\\\">\\n    <p class=\\\"heading\\\">Update Additional Fields</p>\\n    <div class=\\\"from-fields\\\" >\\n      <div class=\\\"row mt15 mb0\\\">\\n          <div class=\\\"col s4\\\">\\n              <p class=\\\"cs-lable\\\">Labels</p>\\n          </div>\\n          <div class=\\\"col s8\\\">\\n              <p class=\\\"cs-lable\\\">Values</p>\\n          </div>\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n              <input matInput  name=\\\"label1\\\" [(ngModel)]=\\\"extraData.aditionalField1Label\\\" placeholder=\\\"Label 1\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n              <input matInput  name=\\\"value1\\\" [(ngModel)]=\\\"extraData.aditionalField1Value\\\" placeholder=\\\"Value\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row mb0\\\">\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput name=\\\"label2\\\" [(ngModel)]=\\\"extraData.aditionalField2Label\\\" placeholder=\\\"Label 2\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput  name=\\\"value2\\\" [(ngModel)]=\\\"extraData.aditionalField2Value\\\" placeholder=\\\"Value\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row mb0\\\">\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput  name=\\\"label3\\\" [(ngModel)]=\\\"extraData.aditionalField3Label\\\" placeholder=\\\"Label 3\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput  name=\\\"value3\\\" [(ngModel)]=\\\"extraData.aditionalField3Value\\\" placeholder=\\\"Value\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row mb0\\\">\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput name=\\\"label4\\\" [(ngModel)]=\\\"extraData.aditionalField4Label\\\" placeholder=\\\"Label 4\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input\\\">\\n              <input matInput name=\\\"Value4\\\" [(ngModel)]=\\\"extraData.aditionalField4Value\\\" placeholder=\\\"Value\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    </div>\\n\\n\\n    <div mat-dialog-content  *ngIf=\\\"data.type=='App'\\\">\\n        <p class=\\\"heading\\\">Update Field</p>\\n        <div class=\\\"from-fields\\\">\\n        <div class=\\\"row\\\">\\n        <div class=\\\"col s4\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                <mat-select   name=\\\"isLive\\\" #isLive=\\\"ngModel\\\" [(ngModel)]=\\\"extraData.isLive\\\" selected>\\n                  <mat-option  [value]=true>\\n                   Yes\\n                  </mat-option>\\n                  <mat-option  [value]=false>\\n                  No\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n        </div>\\n    </div>\\n\\n  <div mat-dialog-actions>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">Cancel</button>\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"update_detail()\\\">Save</button>\\n  </div>\\n  </div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { Router } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\n@Component({\n  selector: 'app-product-modal',\n  templateUrl: './product-modal.component.html',\n})\nexport class ProductModalComponent implements OnInit {\n \n  loader:boolean;\n   extraData:any={};\n   id:any;\n   doc:any=[];\n   product_detail:any=[];\n   productdata:any;\n   url:any;\n   requestfn:any;\n   api:any;\n   message:any;\n  constructor(  public router:Router,public dialogRef: MatDialogRef<ProductModalComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService,public toast:SnackBarOverview){ \n    console.log(data);\n    this.extraData=this.data;\n    console.log(this.extraData.isLive);\n    // this.extraData.extraField1=this.data.productSpecification1;\n    // this.extraData.extraField2=this.data.productSpecification2;\n    // this.extraData.extraField3=this.data.productSpecification3;\n    // this.extraData.extraField4=this.data.productSpecification4;\n    // this.extraData.extraField5=this.data.productSpecification5;\n    console.log(this.data.documents);\n    this.id=this.data.productId;\n  }\n  ngOnInit() {\n  }\n  update_detail(){\n    if(this.data.type=='App'){\n      console.log('hello');\n      this.db.fetchData({\"productId\":this.data.productId ,   \"isLive\":this.extraData.isLive,\n    },'product/live').subscribe((response)=>{console.log(response)\n      this.message=response['message']\n      this.loader=false;\n      if(this.message==\"Product updated successfully\")\n      {\n        this.toast.openSucess('Product updated successfully','');\n        this.router.navigate(['/product-detail/'+this.id]) \n      }\n      else\n      {\n        this.toast.openError('Something Went Wrong Please Try Again!!','');\n      }\n    });\n    }\n    else{\n    this.loader=true;\n    console.log(this.extraData);\n    this.db.fetchData({\"productId\":this.data.productId ,\n    \"productSpecification1\":  this.extraData.productSpecification1,\n    \"productSpecification2\":  this.extraData.productSpecification2,\n    \"productSpecification3\": this.extraData.productSpecification3,\n    \"productSpecification4\":  this.extraData.productSpecification4,\n    \"productSpecification5\": this.extraData.productSpecification5,\n    \"specificationUOM\": \"string\",\n    \"isLive\":this.extraData.isLive,\n    \"aditionalField1Label\": this.extraData.aditionalField1Label,\n    \"aditionalField1Value\": this.extraData.aditionalField1Value ,\n    \"aditionalField2Label\":  this.extraData.aditionalField2Label,\n    \"aditionalField2Value\": this.extraData.aditionalField2Value,\n    \"aditionalField3Label\":  this.extraData.aditionalField3Label,\n    \"aditionalField3Value\":  this.extraData.aditionalField3Value,\n    \"aditionalField4Label\": this.extraData.aditionalField4Label,\n    \"aditionalField4Value\": this.extraData.aditionalField4Value,\n      },'product/update').subscribe((response)=>{console.log(response)\n      this.message=response['message']\n      this.loader=false;\n      if(this.message==\"Product updated successfully\")\n      {\n        this.toast.openSucess('Product updated successfully','');\n        this.router.navigate(['/product-detail/'+this.id]) \n      }\n      else\n      {\n        this.toast.openError('Something Went Wrong Please Try Again!!','');\n      }\n    \n     });\n    }\n    this.dialogRef.close();\n  \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n    console.log(this.data)\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n    <div *ngIf=\\\"loader\\\"> \\n        <div class=\\\"cs-loader\\\">\\n          <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n        </div>\\n      </div>\\n<div class=\\\"middle-container\\\">\\n  <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/leads_icon.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n          <h2>Reject Lead</h2>\\n          <p></p>\\n      </div>\\n  </div>\\n\\n\\n</div>\\n\\n<div class=\\\"container-outer\\\">\\n  <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n              <div class=\\\"cs-table left-right-20\\\">\\n                  <div class=\\\"table-head\\\">\\n                      <table  class=\\\"sno-border\\\">\\n                          <tr>\\n                            <th class=\\\"w30\\\">&nbsp;</th>\\n                              <th class=\\\"w160\\\">Date</th>\\n                              <th class=\\\"w180\\\">Company Name</th>\\n                              <th class=\\\"w150\\\">User's Name</th>\\n                              <th>Description</th>\\n                              <th class=\\\"w100\\\">Task Type</th>\\n                              <th class=\\\"w160\\\">Rejected Date</th>\\n                              <th class=\\\"w150\\\">Rejected By</th>\\n                          </tr>\\n                      </table>\\n                  </div>\\n                 \\n                  <div class=\\\"table-container\\\">\\n                      <div class=\\\"table-content\\\">\\n                          <table class=\\\"sno-border\\\">\\n                              <tr *ngFor=\\\"let task of rejectedList;let i=index\\\">\\n                                  <td class=\\\"w30\\\">{{i+1}}</td>\\n                                  <td class=\\\"w160\\\">{{task.createdOn|date :'EEEE, MMMM d, y'}} </td>\\n                                  <td class=\\\"w180\\\">{{task.leadEstablishment}}</td>\\n                                  <td  class=\\\"w150\\\"> {{task.userName}} </td>\\n                                  <td>{{task.remarks}}</td>\\n                                  <td class=\\\"w100\\\"> {{task.taskTypeName}}</td>\\n                                  <td  class=\\\"w160\\\">{{task.modifiedOn|date :'EEEE, MMMM d, y'}}</td>\\n                                  <td class=\\\"w150\\\">{{task.modifiedByName}}\\n                                      <!-- <div class=\\\"action-btns\\\">\\n                                          <a mat-button class=\\\"view\\\" (click)=\\\"goToDetail(task.taskId)\\\"><i class=\\\"material-icons\\\"  >remove_red_eye</i> View</a>\\n                                             <button mat-button class=\\\"delete\\\" (click)=\\\"deleteTask(task.taskId)\\\"><i class=\\\"material-icons\\\" >delete_sweep</i> Delete</button>\\n                                      </div> -->\\n                                  </td>\\n                              </tr>\\n                          </table>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n\\n      <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n              <div class=\\\"outer\\\">\\n                  <div class=\\\"iinear\\\">\\n                      <div class=\\\"figure\\\" matRipple>\\n                          <div class=\\\"header\\\">\\n                              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                          </div>\\n                          \\n                          <div class=\\\"description\\\">\\n                              <div class=\\\"cs-heading\\\">\\n                                  <h2>No Reject Lead</h2>\\n                              </div>\\n                              <div class=\\\"img\\\">\\n                                      <i class=\\\"material-icons\\\">error_outline</i>\\n                              </div>\\n                              <div class=\\\"psc\\\">\\n                                  <p>data not available</p>\\n                                  <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n\\n  </div>\\n</div>\\n\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlamVjdC1sZWFkL3JlamVjdC1sZWFkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../constant.service';\n\n@Component({\n  selector: 'app-reject-lead',\n  templateUrl: './reject-lead.component.html',\n  styleUrls: ['./reject-lead.component.scss']\n})\nexport class RejectLeadComponent implements OnInit {\n\n  rejectedList:any=[];\n  loader:any=false;\n  div:any=false;\n  constructor(public service:ConstantService) {\n\n    this.rejectLeadList();\n   }\n\n  ngOnInit() {\n  }\n\n  rejectLeadList()\n  {\n    this.div=false;\n    this.loader=true\n    this.service.fetchData({\"leadConverted\": false,\"taskStatus\": 2,\"taskType\": 1},\"task/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.rejectedList=result['data'];\n      }\n      if(result['status']=='Failed')\n      {\n        this.div=true;\n      }\n    })\n  }\n\n}\n","import { trigger, state, animate, style, transition } from '@angular/animations';\n\n// Post by Gerard Sans: https://medium.com/google-developer-experts/angular-2-animate-router-transitions-6de179e00204#.7h2femijg\n// Add <script src=\"https://rawgit.com/web-animations/web-animations-js/master/web-animations.min.js\"></script> into index.html for polyfill\n// Add the following to any component to animate the view\n// import { routerTransition } from './router.animations';\n// @Component({\n//   selector: 'home',\n//   template: `<h1>Home</h1>`,\n//   animations: [routerTransition()],\n//   host: {'[@routerTransition]': ''}\n// })\nexport function routerTransition() {\n  return slideToLeft();\n}\n\nexport function slideToRight() {\n  return trigger('routerTransition', [\n    state('void', style({position: '', width: ''}) ),\n    state('*', style({position: '', width: ''}) ),\n    transition(':enter', [\n      style({transform: 'translateX(100%)'}),\n      animate('0.5s ease-in-out', style({transform: 'translateX(0%)'}))\n    ]),\n    transition(':leave', [\n      style({transform: 'translateX(0%)'}),\n      animate('0.5s ease-in-out', style({transform: 'translateX(100%)'}))\n    ])\n  ]);\n}\n\nexport function slideToLeft() {\n  return trigger('routerTransition', [\n    state('void', style({position: '', width: ''}) ),\n    state('*', style({position: '', width: ''}) ),\n    transition(':enter', [\n      style({transform: 'translateX(-100%)'}),\n      animate('0.5s ease-in-out', style({transform: 'translateX(0%)'}))\n    ]),\n    transition(':leave', [\n      style({transform: 'translateX(0%)'}),\n      animate('0.5s ease-in-out', style({transform: 'translateX(100%)'}))\n    ])\n  ]);\n}\n\nexport function slideToBottom() {\n  return trigger('routerTransition', [\n    state('void', style({position: '', width: '', height: ''}) ),\n    state('*', style({position: '', width: '', height: ''}) ),\n    transition(':enter', [\n      style({transform: 'translateY(-100%)'}),\n      animate('0.5s ease-in-out', style({transform: 'translateY(0%)'}))\n    ]),\n    transition(':leave', [\n      style({transform: 'translateY(0%)'}),\n      animate('0.5s ease-in-out', style({transform: 'translateY(100%)'}))\n    ])\n  ]);\n}\n\nexport function slideToTop() {\n  return trigger('routerTransition', [\n    state('void', style({position: '', width: '', height: ''}) ),\n    state('*', style({position: '', width: '', height: ''}) ),\n    transition(':enter', [\n      style({transform: 'translateY(100%)'}),\n      animate('0.5s ease-in-out', style({transform: 'translateY(0%)'}))\n    ]),\n    transition(':leave', [\n      style({transform: 'translateY(0%)'}),\n      animate('0.5s ease-in-out', style({transform: 'translateY(-100%)'}))\n    ])\n  ]);\n}","module.exports = \"\\n\\n\\n  <div class=\\\"edit-modal\\\">\\n      <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n          <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n        </div>\\n\\n        <mat-dialog-content class=\\\"mat-typography pl15 pr15\\\" style=\\\"overflow: inherit !important;\\\">\\n            <p class=\\\"heading\\\">EDIT DISTRIBUTOR</p>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col s6 pl0\\\">\\n                  <div class=\\\"multi-all-select\\\">\\n                    <label>Territory </label>\\n                    <ng-multiselect-dropdown\\n                    [placeholder]=\\\"'Select Territory'\\\"\\n                    [data]=\\\"territoryLIst\\\"\\n                    [(ngModel)]=\\\"schemedetail.territory\\\"\\n                    name=\\\"territory\\\"\\n                    #territory=\\\"ngModel\\\"\\n                    selected-model=\\\"selectedTerritory.territoryID\\\"\\n                    [settings]=\\\"dropdownSettings1\\\"\\n                    (onSelect)=\\\"getDistribotorList(schemedetail.territory)\\\"\\n                    (onSelectAll)=\\\"getDistribotorList($event)\\\"\\n                    (onDeSelect)=\\\"getDistribotorList(schemedetail.territory)\\\"\\n                    (onDeSelectAll)=\\\"getSelectedDistribotorList($event)\\\"\\n                    >\\n                  </ng-multiselect-dropdown>\\n                </div>\\n              </div>\\n              <div class=\\\"col s6 pl0\\\">\\n                <div class=\\\"multi-all-select\\\">\\n                  <label>Distributor</label>\\n                  <ng-multiselect-dropdown\\n                  [placeholder]=\\\"'Select Distributor'\\\"\\n                  [data]=\\\"distributorList\\\"\\n                  [(ngModel)]=\\\"schemedetail.distributor\\\"\\n                  name=\\\"distributor\\\"\\n                  #distributor=\\\"ngModel\\\"\\n                  [settings]=\\\"dropdownSettings2\\\"\\n                  (onSelect)=\\\"selectedDistributor(schemedetail.distributor)\\\"\\n                  (onSelectAll)=\\\"selectedDistributor($event)\\\"\\n                  (onDeSelect)=\\\"selectedDistributor(schemedetail.distributor)\\\"\\n                  (onDeSelectAll)=\\\"selectedDistributor($event)\\\"\\n                  >\\n                </ng-multiselect-dropdown>\\n              </div>\\n            </div>\\n          </div>\\n        </mat-dialog-content>\\n\\n        <mat-dialog-actions align=\\\"end\\\">\\n            <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n            <button mat-raised-button color=\\\"accent\\\"  [mat-dialog-close]=\\\"true\\\" (click)=\\\"saveDistributor()\\\" >Save</button>\\n          </mat-dialog-actions>\\n  </div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9hZGQtZGlzdHJpYnV0b3IvYWRkLWRpc3RyaWJ1dG9yLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { ConstantService } from 'src/app/constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\n\n@Component({\n  selector: 'app-add-distributor',\n  templateUrl: './add-distributor.component.html',\n  styleUrls: ['./add-distributor.component.scss']\n})\nexport class AddDistributorComponent implements OnInit {\n\n    schemedetail:any={}\n    territory:any=[];\n    distributorData:any={}\n    territoryLIst:any=[];\n    distributorList:any=[];\n    dropdownSettings1:any={}\n    dropdownSettings2:any={}\n    schemeCode:any;\n    // selectedDistributor:any=[];\n    loader:any=false;\n  currentDate:any = new Date().toJSON().split('T')[0];\n  constructor(@Inject(MAT_DIALOG_DATA) public data,public service:ConstantService,public toast:SnackBarOverview) { \n    this.getTerritoryList();\n    console.log(data);\n    this.schemeCode=data['schemeCode'];\n    this.schemedetail.distributor=data['value'];\n    this.territory=data['territory'];\n    console.log(this.territory);\n    this.getDistributorList(this.territory)\n  }\n\n  form:any={};\n\n  ngOnInit() {\n    this.dropdownSettings1 = {\n      \n      idField: 'territoryID',\n      textField: 'territoryName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings2 = {\n      idField: 'networkId',\n      \n      textField: 'establishment',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n  }\n  selectedTerritory:any=[];\n  newData:any=[];\n  apple:any={};\n  arrayText:any=[];\n  getTerritoryList()\n  {\n    this.service.fetchData({},\"territory/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.territoryLIst=result['data'];\n        console.log(this.territoryLIst);\n        for(let i=0;i<this.territoryLIst.length;i++)\n        {\n          for(let j=0;j<this.territory.length;j++)\n          {\n            \n            if(this.territory[j]==this.territoryLIst[i].territoryID)\n            {\n              this.selectedTerritory.push({territoryID:this.territoryLIst[i].territoryID,territoryName:this.territoryLIst[i].territoryName});\n            }\n          }\n        }\n\n        this.schemedetail.territory=this.selectedTerritory;\n        console.log(this.selectedTerritory);\n        \n      }\n    })\n  }\n\n  getDistributorList(territoriesIds)\n  {\n    this.service.fetchData({territoriesIds:territoriesIds},\"territoriesnetworks/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.distributorList=result['data'];\n      }\n    })\n   \n  }\n  getDistribotorList(territory)\n  {\n    // this.distributoList=[];\n  \n    const territoriesIds=[];\n      this.loader=true;\n      for(let i=0;i<territory.length;i++)\n      {\n        territoriesIds.push(territory[i].territoryID);\n      }\n      console.log(territory);\n     if(territoriesIds.length!=0)\n     {\n      this.service.fetchData({territoriesIds:territoriesIds},\"territoriesnetworks/list\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.distributorList=result['data'];\n          console.log(this.distributorList);\n          \n        }\n      })\n     }\n    \n    \n  }\n  selectedDistributor(distributor)\n  {\n    this.schemedetail.schemeDistributors=[];\n    console.log(distributor);\n\n    for(let i=0;i<this.distributorList.length;i++)\n    {\n      console.log(\"test\");\n      for(let j=0;j<distributor.length;j++)\n      {\n        \n        if(this.distributorList[i].networkId==distributor[j].networkId)\n        {\n            this.schemedetail.schemeDistributors.push({\"distributorID\":this.distributorList[i].networkId,\"distributorTerritoryID\":this.distributorList[i].territoryId,schemeCode:this.schemeCode});\n        }\n      }\n    }\n      console.log(this.schemedetail.schemeDistributors);\n  }\n\n  saveDistributor()\n  {\n    this.service.fetchData({isActive:1,schemeCode:this.schemeCode,schemeDistributors:this.schemedetail.schemeDistributors},\"adddistributor\").subscribe((result)=>{\n      console.log(result);\n      \n    })\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n      </div>\\n    \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/scheme.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Scheme</h2>\\n        <p>Add New Scheme</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\" f.valid && submitDetail()\\\">\\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\" style=\\\"overflow: inherit;\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Scheme INFORMATION</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Tittle\\\" name=\\\"title\\\" id=\\\"title\\\" #title=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : title.invalid }\\\" [(ngModel)]=\\\"scheme.title\\\" required>\\n                      </mat-form-field>\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!title.valid && title.touched\\\">\\n                        Title is required...\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Scheme Start Date\\\" name=\\\"validFrom\\\" #validFrom=\\\"ngModel\\\" [min]='currentDate' [(ngModel)]=\\\"scheme.validFrom\\\" [ngClass]=\\\"{'has-error' : validFrom.invalid }\\\" readonly required  >\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                      </mat-form-field>\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!validFrom.valid && validFrom.touched\\\">\\n                        Scheme Start Date is required...\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput [matDatepicker]=\\\"pickers\\\" placeholder=\\\"Scheme End Date\\\" [min]='scheme.validFrom' name=\\\"validTill\\\" #validTill=\\\"ngModel\\\" [(ngModel)]=\\\"scheme.validTill\\\" [ngClass]=\\\"{'has-error' : validTill.invalid }\\\" required readonly >\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"pickers\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #pickers></mat-datepicker>\\n                      </mat-form-field>\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!validTill.valid && validTill.touched\\\">\\n                        Scheme End Date is required...\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row mt15\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"control-field\\\" >\\n                        <app-ngx-editor [placeholder]=\\\"'Description'\\\"  [spellcheck]=\\\"true\\\"  name=\\\"schemeDescription\\\" #schemeDescription=\\\"ngModel\\\" [(ngModel)]=\\\"scheme.schemeDescription\\\" [ngClass]=\\\"{'has-error' : schemeDescription.invalid }\\\" required></app-ngx-editor>\\n                      </div>\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!schemeDescription.valid && schemeDescription.touched\\\">\\n                        Description is required...\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s6 pr0\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"control-field\\\" >\\n                        <app-ngx-editor [placeholder]=\\\"'Term & Condition'\\\" [spellcheck]=\\\"true\\\"  name=\\\"tc\\\" #tc=\\\"ngModel\\\" [(ngModel)]=\\\"scheme.tc\\\" class=\\\"h100\\\" required></app-ngx-editor>\\n                      </div>\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!tc.valid && tc.touched\\\">\\n                        Term & Condition is required...\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box pt0 mt15\\\" style=\\\"overflow: inherit;\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Scheme Type</h2>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col s12 padding0\\\">\\n                    <div class=\\\"select-one\\\">\\n                        <mat-radio-group (change)=\\\"getSchemeType()\\\" name=\\\"schemeType\\\" #schemeType=\\\"ngModel\\\" [(ngModel)]=\\\"schemedetail.schemeType\\\" aria-label=\\\"Select an option\\\">\\n                            <mat-radio-button [value]=\\\"1\\\">Genric Scheme</mat-radio-button>\\n                            <mat-radio-button [value]=\\\"0\\\">Selected Scheme</mat-radio-button>\\n                          </mat-radio-group>\\n                      </div>\\n                </div>\\n              </div>\\n              <mat-divider class=\\\"mt15 mb15 left-right-15\\\"></mat-divider>\\n              \\n              <div *ngIf=\\\"schemedetail.schemeType==0\\\" class=\\\"row\\\">\\n                <div class=\\\"col s4 pl0\\\">\\n                  <div class=\\\"multi-all-select\\\">\\n                    <label>Territory</label>\\n                    <ng-multiselect-dropdown\\n                    [placeholder]=\\\"'Select Territory'\\\"\\n                    [data]=\\\"territoryLIst\\\"\\n                    [(ngModel)]=\\\"schemedetail.territory\\\"\\n                    name=\\\"territory\\\"\\n                    #territory=\\\"ngModel\\\"\\n                    [settings]=\\\"dropdownSettings1\\\"\\n                    (onSelect)=\\\"getDistribotorList(schemedetail.territory)\\\"\\n                    (onSelectAll)=\\\"getDistribotorList($event)\\\"\\n                    (onDeSelect)=\\\"getDistribotorList(schemedetail.territory)\\\"\\n                    (onDeSelectAll)=\\\"getSelectedDistribotorList($event)\\\"\\n                    \\n                    >\\n                  </ng-multiselect-dropdown>\\n                </div>\\n              </div>\\n              <div class=\\\"col s4 pl0\\\">\\n                <div class=\\\"multi-all-select\\\">\\n                  <label>Distributor</label>\\n                  <ng-multiselect-dropdown\\n                  [placeholder]=\\\"'Select Distributor'\\\"\\n                  [data]=\\\"distributoList\\\"\\n                  [(ngModel)]=\\\"schemeDistributors.schemeDistributors\\\"\\n                  name=\\\"distributor\\\"\\n                  #distributor=\\\"ngModel\\\"\\n                  [settings]=\\\"dropdownSettings2\\\"\\n                  (onSelect)=\\\"selectedDistributor(schemeDistributors.schemeDistributors)\\\"\\n                  (onSelectAll)=\\\"selectedDistributor($event)\\\"\\n                  (onDeSelect)=\\\"selectedDistributor(schemeDistributors.schemeDistributors)\\\"\\n                  (onDeSelectAll)=\\\"selectedDistributor($event)\\\"\\n\\n\\n                  >\\n                </ng-multiselect-dropdown>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>\\n        <div *ngIf=\\\"schemedetail.schemeType!=null\\\" class=\\\"sprate-box pt0 mt15\\\" style=\\\"overflow: inherit;\\\">\\n          <div class=\\\"cs-heading\\\">\\n            <h2>PRODUCT INFORMATION</h2>\\n          </div>\\n          \\n          <div class=\\\"from-fields\\\">\\n            <div class=\\\"row mt10 mb15\\\">\\n              <div class=\\\"col s4 pl0\\\">\\n                <div class=\\\"multi-all-select\\\">\\n                  <label>Part Number</label>\\n                  <ng-multiselect-dropdown\\n                  [placeholder]=\\\"'Select Part Number'\\\"\\n                  [data]=\\\"productList\\\"\\n                  [(ngModel)]=\\\"schemedetail.partNumber\\\"\\n                  name=\\\"partNumber\\\"\\n                  #partNumber=\\\"ngModel\\\"\\n                  [settings]=\\\"dropdownSettings\\\"\\n                  (onSelect)=\\\"selectedPartNumber($event)\\\"\\n                  >\\n                </ng-multiselect-dropdown>\\n              </div>\\n            </div>\\n            <div class=\\\"col s8 pr0\\\">\\n              <div class=\\\"control-field pr80\\\">\\n                <mat-form-field class=\\\"cs-input\\\">\\n                  <!-- <app-ngx-editor [placeholder]=\\\"'Description'\\\" [spellcheck]=\\\"true\\\"  name=\\\"prodesc\\\" #prodesc=\\\"ngModel\\\" [(ngModel)]=\\\"schemedetail.prodesc\\\" ></app-ngx-editor> -->\\n                  <textarea matInput placeholder=\\\"Scheme Description\\\" name=\\\"prodesc\\\" #prodesc=\\\"ngModel\\\" [(ngModel)]=\\\"schemedetail.prodesc\\\" class=\\\"h100\\\"></textarea>\\n                </mat-form-field>\\n                <div class=\\\"plus-btn\\\">\\n                  <button type=\\\"button\\\" (click)=\\\"addScheme(schemedetail.partNumber,schemedetail.prodesc)\\\" mat-raised-button color=\\\"accent\\\">\\n                    <i class=\\\"material-icons\\\"  >add</i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>\\n        \\n        \\n        <div *ngIf=\\\"schemeProductDetails.length!=0\\\" class=\\\"row\\\">\\n          <div class=\\\"cs-table left-right-15\\\">\\n            <div class=\\\"table-head\\\">\\n              <table>\\n                <tr>\\n                  <th class=\\\"w230\\\">Product Code</th>\\n                  <th class=\\\" bdr0\\\">Scheme Information</th>\\n                  <th class=\\\"w130\\\">&nbsp;</th>\\n                </tr>\\n              </table>\\n            </div>\\n            \\n            <div  class=\\\"table-container\\\">\\n              <div class=\\\"table-content none-shadow\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let scheme of schemeProductDetails;let i=index\\\">\\n                    <td class=\\\"w230\\\">{{scheme.partNumberCode}}</td>\\n                    <td [innerHTML]=\\\"scheme.offerDescription\\\" >{{scheme.offerDescription}}</td>\\n                    <td class=\\\"w130\\\">\\n                      <a mat-button class=\\\"del-btn\\\" type=\\\"button\\\" (click)=\\\"removeScheme(i)\\\">Delete</a>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col s12\\\">\\n      <div class=\\\"cs-btn fixedd mt15 text-right\\\">\\n        <div class=\\\"in-btn\\\">\\n          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"schemeProductDetails.length==0\\\" (click)=\\\"setFocus(f.form)\\\">Save</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n</form>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as $ from 'jquery';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { SnackBarOverview } from 'src/app/toast';\n\n@Component({\n  selector: 'app-add-scheme',\n  templateUrl: './add-scheme.component.html'\n})\nexport class AddSchemeComponent implements OnInit {\n\n  scheme:any={};\n  currentDate:any = new Date().toJSON().split('T')[0];\n  dropdownSettings:any={};\n  dropdownSettings1:any={};\n  dropdownSettings2:any={};\n  schemeDistributors:any={}\n  productList:any=[];\n  loader:any=false;\n  schemeProductDetails:any=[];\n  schemedetail:any={\"partNumber\":\"\",\"prodesc\":\"\"};\n  territoryLIst:any=[];\n  constructor(@Inject(PLATFORM_ID) private platformId: Object,public service:ConstantService,public router:Router,public toast:SnackBarOverview) {\n    \n    this.schemedetail.schemeType=1;\n    this.getProductList();\n    this.getTerritoryList();\n  }\n\n  ngOnInit() {\n    this.dropdownSettings = {\n      singleSelection: false,\n      closeDropDownOnSelection:true,\n      idField: 'partNumber',\n      textField: 'partNumberCode',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings1 = {\n      \n      idField: 'territoryID',\n      textField: 'territoryName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings2 = {\n      idField: 'networkId',\n      \n      textField: 'establishment',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n  }\n\n  setFocus(form) {\n    for (var key in form.controls)\n     {\n      if (form.controls.hasOwnProperty(key)) {\n        if(form.controls[key].status=='INVALID')\n        {\n          if (isPlatformBrowser(this.platformId)) {\n                    $('#'+key).focus();\n                  }\n                  break;\n        }\n          console.log(key + \" -> \" + form.controls[key].status);\n      }\n  }\n    \n  }\n  submitDetail()\n  {\n\n    this.scheme.schemeDistributors=this.schemedetail.schemeDistributors;\n    this.scheme.validFrom=moment(this.scheme.validFrom).format('YYYY-MM-DD');\n    this.scheme.validTill=moment(this.scheme.validTill).format('YYYY-MM-DD');\n\n    this.loader=true; \n    this.scheme.schemeProductDetails=this.schemeProductDetails;\n    this.scheme.isActive=1;\n    this.scheme.schemeType=this.schemedetail.schemeType;\n    console.log(this.scheme);\n    this.service.fetchData(this.scheme,\"createscheme\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['message']=='Success')\n      {\n        this.toast.openSucess('Scheme ','Added successfully');\n\n        this.router.navigate(['/scheme-list']);\n\n      }\n    })\n    \n  }\n\n  getSchemeType()\n  {\n    console.log(this.schemedetail.schemeType);\n    \n  }\n\n  getTerritoryList()\n  {\n    this.service.fetchData({},\"territory/list\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.territoryLIst=result['data'];\n        console.log(this.territoryLIst);\n        \n      }\n    })\n  }\n\n  distributoList:any=[];\n  getDistribotorList(territory)\n  {\n    // this.distributoList=[];\n  \n    const territoriesIds=[];\n      this.loader=true;\n      for(let i=0;i<territory.length;i++)\n      {\n        territoriesIds.push(territory[i].territoryID);\n      }\n      console.log(territory);\n     if(territoriesIds.length!=0)\n     {\n      this.service.fetchData({territoriesIds:territoriesIds},\"territoriesnetworks/list\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.distributoList=result['data'];\n          console.log(this.distributoList);\n          \n        }\n      })\n     }\n    \n    \n  }\n  getSelectedDistribotorList()\n  {\n    this.distributoList=[];\n    \n  }\n\n  selectedDistributor(distributor)\n  {\n    this.schemedetail.schemeDistributors=[];\n    console.log(distributor);\n\n    for(let i=0;i<this.distributoList.length;i++)\n    {\n      console.log(\"test\");\n      for(let j=0;j<distributor.length;j++)\n      {\n        \n        if(this.distributoList[i].networkId==distributor[j].networkId)\n        {\n            this.schemedetail.schemeDistributors.push({\"distributorID\":this.distributoList[i].networkId,\"distributorTerritoryID\":this.distributoList[i].territoryId});\n        }\n      }\n    }\n      console.log(this.schemedetail.schemeDistributors);\n  }\n\n  getProductList()\n  {\n    this.loader=true;\n    this.service.fetchData({\"currentPage\": 1,\"pageSize\": 500},\"product/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n        this.productList=result['data'];\n      }\n    })\n  }\n  partCode:any;\n  selectedPartNumber(event)\n  {\n    this.partCode=event;\n  }\n\n  addScheme(product,des)\n  {\n    console.log(product);\n    console.log(des);\n    \n    for(let i=0;i<product.length;i++)\n    {\n      this.schemeProductDetails.push({\"partNumberCode\":product[i],\"offerDescription\":des});\n    }\n    \n    this.schemedetail.partNumber='';\n    this.schemedetail.prodesc='';\n    \n  }\n\n  removeScheme(index)\n  {\n    this.schemeProductDetails.splice(index,1);\n  }\n\n}\n","module.exports = \"<div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n\\n<div class=\\\"edit-modal\\\">\\n  <p class=\\\"heading\\\">Update Scheme</p>\\n  <div mat-dialog-content *ngIf=\\\"schemeData.field!='validFrom' && schemeData.field!='validTill'\\\">\\n    <div class=\\\"row from-fields\\\">\\n      <div class=\\\"col s12 control-field\\\" >\\n        <mat-form-field class=\\\"cs-input\\\" >\\n          <input [innerHTML]=\\\"schemeData.value\\\" matInput placeholder=\\\"Vlaue\\\" name=\\\"value\\\" [(ngModel)]=\\\"schemeData.value\\\" >\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div mat-dialog-content style=\\\"overflow: hidden;\\\" *ngIf=\\\"schemeData.field=='validFrom' || schemeData.field=='validTill'\\\">\\n    <div class=\\\"row from-fields\\\">\\n      <div class=\\\"control-field\\\">\\n        <mat-form-field class=\\\"cs-input\\\">\\n          <input matInput [matDatepicker]=\\\"pickers\\\" readonly placeholder=\\\"Scheme End Date\\\" [min]='currentDate' name=\\\"value\\\" [(ngModel)]=\\\"schemeData.value\\\" >\\n          <mat-datepicker-toggle matSuffix [for]=\\\"pickers\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #pickers></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n    <button mat-raised-button color=\\\"accent\\\" [mat-dialog-close]=\\\"true\\\" (click)=\\\"updateScheme()\\\" >Save</button>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9lZGl0LXNjaGVtZS9lZGl0LXNjaGVtZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { LoginComponent } from 'src/app/login/login.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\n\n@Component({\n  selector: 'app-edit-scheme',\n  templateUrl: './edit-scheme.component.html',\n  styleUrls: ['./edit-scheme.component.scss']\n})\nexport class EditSchemeComponent implements OnInit {\n\n  schemeData:any={}\n  currentDate:any = new Date().toJSON().split('T')[0];\n  constructor(@Inject(MAT_DIALOG_DATA) public data,public service:ConstantService,public toast:SnackBarOverview) { \n    console.log(data);\n    this.schemeData=data;\n\n  }\n\n  ngOnInit() {\n  }\n\n  value:any={};\n  updateScheme()\n  {\n    console.log(this.schemeData.isActive);\n    \n    this.value.schemeCode=this.schemeData.schemeCode;\n    this.value.isActive=this.schemeData.isActive;\n    console.log(this.schemeData);\n    if(this.schemeData.field=='title')\n    {\n      this.value.title=this.schemeData.value\n    }\n    if(this.schemeData.field=='schemeDescription')\n    {\n      this.value.schemeDescription=this.schemeData.value\n      \n    }\n    if(this.schemeData.field=='validFrom')\n    {\n      this.value.validFrom=this.schemeData.value      \n    }\n    if(this.schemeData.field=='validTill')\n    {\n      this.value.validTill=this.schemeData.value\n      \n    }\n    if(this.schemeData.field=='tc')\n    {\n      this.value.tc=this.schemeData.value\n      \n    }\n    console.log(this.value);\n    this.service.fetchData(this.value,\"/modifyscheme\").subscribe((result)=>{\n      console.log(result);\n      if(result['message']=='Success')\n      {\n        this.toast.openSucess(\"Scheme\",\"Update SuccessFully\")\n      }\n      \n    })\n    \n  }\n\n}\n","module.exports = \"<div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n\\n<div class=\\\"edit-modal\\\">\\n  <p class=\\\"heading\\\">Update Scheme</p>\\n  <div mat-dialog-content style=\\\"overflow: hidden;\\\">\\n    <div class=\\\"row from-fields\\\">\\n      <div class=\\\"control-field\\\">\\n        <mat-form-field  class=\\\"cs-input\\\">\\n          <input matInput (dateChange)=\\\"checkValid()\\\" [matDatepicker]=\\\"pickers\\\" readonly placeholder=\\\"Scheme Start Date\\\" [min]='currentDate' name=\\\"value\\\" [(ngModel)]=\\\"schemeData.validFrom\\\" >\\n          <mat-datepicker-toggle  matSuffix [for]=\\\"pickers\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #pickers></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n    <div class=\\\"row from-fields\\\">\\n      <div class=\\\"control-field\\\">\\n        <mat-form-field class=\\\"cs-input\\\">\\n          <input matInput [matDatepicker]=\\\"pickers1\\\" readonly placeholder=\\\"Scheme End Date\\\" [min]='schemeData.validFrom' name=\\\"value\\\" [(ngModel)]=\\\"schemeData.validTill\\\" >\\n          <mat-datepicker-toggle matSuffix [for]=\\\"pickers1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #pickers1></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n    <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!schemeData.validFrom||!schemeData.validTill\\\" [mat-dialog-close]=\\\"true\\\" (click)=\\\"updateScheme()\\\" >Save</button>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9lZGl0ZGF0ZS1zY2hlbWUvZWRpdGRhdGUtc2NoZW1lLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { ConstantService } from 'src/app/constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-editdate-scheme',\n  templateUrl: './editdate-scheme.component.html',\n  styleUrls: ['./editdate-scheme.component.scss']\n})\nexport class EditdateSchemeComponent implements OnInit {\n\n  schemeData:any={}\n  currentDate:any = new Date().toJSON().split('T')[0];\n  constructor(@Inject(MAT_DIALOG_DATA) public data,public service:ConstantService,public toast:SnackBarOverview) { \n    console.log(data);\n    this.schemeData=data;\n  }\n  ngOnInit() {\n  }\n  \n  checkValid()\n  {\n    if(moment(this.schemeData.validFrom).format('YYYY-MM-DD')>moment(this.schemeData.validTill).format('YYYY-MM-DD'))\n    {\n      this.schemeData.validTill=null;\n    }\n  }\n  updateScheme()\n  {\n    console.log(this.schemeData.validFrom);\n    \n    let value={validFrom:moment(this.schemeData.validFrom).format('YYYY-MM-DD'),validTill:moment(this.schemeData.validTill).format('YYYY-MM-DD'),schemeCode:this.schemeData.schemeCode,isActive:this.schemeData.isActive}\n    this.service.fetchData(value,\"/modifyscheme\").subscribe((result)=>{\n      console.log(result);\n      if(result['message']=='Success')\n      {\n        this.toast.openSucess(\"Scheme\",\"Update SuccessFully\")\n      }\n      \n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n      </div>\\n    \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/scheme-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>Scheme {{schemeDetail.title}}  <a class=\\\"edit-heading\\\" color=\\\"accent\\\" matTooltip=\\\"EDIT\\\"  (click)=\\\"openEditDialog('title',schemeDetail.title)\\\"><i class=\\\"material-icons\\\">create</i></a></h2>\\n        \\n        <p class=\\\"light\\\">{{totalProduct.length}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"multi-btn\\\">\\n      <ul>\\n      </ul>\\n    </div>\\n  </div>\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"basic-details\\\">\\n              <a mat-button class=\\\"figure-edit\\\" matTooltip=\\\"Edit\\\" color=\\\"accent\\\" (click)=\\\"openEditDateDialog('date')\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n              <div class=\\\"profile-info\\\">\\n                <ul>\\n                  <li class=\\\"col s4\\\">\\n                    <div class=\\\"cs-box\\\">\\n                      <img  src=\\\"assets/img/scheme-detail.svg\\\" class=\\\"fix-img\\\">\\n                      <span>SCHEME TYPE</span>\\n                      <p *ngIf=\\\"schemeDetail.schemeType==0\\\">SELECTED</p>\\n                      <p *ngIf=\\\"schemeDetail.schemeType==1\\\">GENRIC</p>\\n                      \\n                    </div>\\n                  </li>\\n                  <li class=\\\"col s4\\\">\\n                    <div class=\\\"cs-box\\\">\\n                      <img  src=\\\"assets/img/calendar.svg\\\" class=\\\"fix-img\\\">\\n                      <span>CREATED DATE</span>\\n                      <p class=\\\"link-clr\\\">{{schemeDetail.createdOn| date:'EEEE, MMMM d, y'}}</p>\\n                      \\n                    </div>\\n                  </li>\\n                  <li  class=\\\"col s4\\\">\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/calendar.svg\\\" class=\\\"fix-img\\\">\\n                      <span>VALID FROM</span>\\n                      <p>{{schemeDetail.validFrom| date:'EEEE, MMMM d, y'}}</p>\\n                      <!-- <a class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEditDialog('validFrom',schemeDetail.validFrom)\\\"><i class=\\\"material-icons\\\">create</i></a> -->\\n                    </div>\\n                  </li>\\n                  <li  class=\\\"col s4\\\">\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/calendar.svg\\\" class=\\\"fix-img\\\">\\n                      <span>VALID TILL</span>\\n                      <p>{{schemeDetail.validTill| date:'EEEE, MMMM d, y'}}</p>\\n                      <!-- <a class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEditDialog('validTill',schemeDetail.validTill)\\\"><i class=\\\"material-icons\\\">create</i></a> -->\\n                    </div>\\n                  </li>\\n                  \\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row mb15\\\" *ngIf=\\\"schemeDetail.schemeDistributors.length!=0 && schemeDetail.schemeType==0\\\">\\n        \\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"sprate-box pt0 \\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>DISTRIBUTOR INFORMATION</h2>\\n                <a mat-button class=\\\"edit-icon\\\" matTooltip=\\\"Add\\\" color=\\\"accent\\\" (click)=\\\"addDistributor(distributoList)\\\"><i class=\\\"material-icons\\\">add</i></a>  \\n              </div>\\n              <div class=\\\"cs-table left-right-15\\\">\\n                  <div class=\\\"table-head\\\">\\n                    <table>\\n                      <tr>\\n                        <th class=\\\"w150\\\">Distributor Name</th>\\n                        \\n                      </tr>\\n                    </table>\\n                  </div>\\n                  <div class=\\\"table-container\\\">\\n                    <div class=\\\"table-content none-shadow\\\">\\n                      <table>\\n                        <tr *ngFor=\\\"let name of distributoList\\\">\\n                          <td class=\\\"w150\\\">{{name.establishment}}\\n                            \\n                            <div class=\\\"action-btns\\\">\\n                              <button mat-button class=\\\"delete\\\" (click)=\\\"removeDistributor(name.networkId,schemeDetail.schemeCode)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                            </div>\\n                          </td>\\n                          \\n                        </tr>\\n                      </table>\\n                    </div>\\n                  </div>\\n                  <!-- <div class=\\\"row\\\">\\n                    <div class=\\\"col s4 pl0\\\">\\n                      <div class=\\\"multi-all-select\\\">\\n                        <label>Territory</label>\\n                        <ng-multiselect-dropdown\\n                        [placeholder]=\\\"'Select Territory'\\\"\\n                        \\n                        \\n                        [settings]=\\\"dropdownSettings1\\\"\\n                        (onSelect)=\\\"getDistribotorList(schemedetail.territory)\\\"\\n                        (onSelectAll)=\\\"getDistribotorList($event)\\\"\\n                        (onDeSelect)=\\\"getDistribotorList(schemedetail.territory)\\\"\\n                        (onDeSelectAll)=\\\"getSelectedDistribotorList($event)\\\"\\n                        \\n                        >\\n                      </ng-multiselect-dropdown>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"multi-all-select\\\">\\n                      <label>Distributor</label>\\n                      <ng-multiselect-dropdown\\n                      [placeholder]=\\\"'Select Distributor'\\\"\\n                      \\n                      \\n                      [settings]=\\\"dropdownSettings2\\\"\\n                      (onSelect)=\\\"selectedDistributor($event)\\\"\\n                      (onSelectAll)=\\\"selectedDistributor($event)\\\"\\n                      (onDeSelect)=\\\"selectedDistributor(schemeDistributors.schemeDistributors)\\\"\\n                      (onDeSelectAll)=\\\"selectedDistributor($event)\\\"\\n                      >\\n                    </ng-multiselect-dropdown>\\n                  </div>\\n                </div>\\n              </div> -->\\n            </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n  <div class=\\\"row mb15\\\" *ngIf=\\\"totalProduct.length!=0\\\">\\n    <div class=\\\"col s12\\\">\\n      <div class=\\\"sprate-box pt0 \\\">\\n        <div class=\\\"cs-heading\\\">\\n          <h2>PRODUCT SCHEME DETAIL</h2>\\n        </div>\\n        <div class=\\\"cs-table left-right-15\\\">\\n          <div class=\\\"table-head\\\">\\n            <table>\\n              <tr>\\n                <th class=\\\"w150\\\">Part Number</th>\\n                <th >Description</th>\\n                <th class=\\\"w140 text-center\\\">Action</th>\\n              </tr>\\n            </table>\\n          </div>\\n          <div class=\\\"table-container\\\">\\n            <div class=\\\"table-content none-shadow\\\">\\n              <table>\\n                <tr *ngFor=\\\"let scheme of schemeDetail.schemeProductDetails\\\">\\n                  <td class=\\\"w150\\\">{{scheme.partNumberCode}}</td>\\n                  <td [innerHTML]=\\\"scheme.offerDescription\\\">{{scheme.offerDescription}}\\n                    \\n                  </td>\\n                  <td class=\\\"w140\\\">\\n                    <div class=\\\"action-btns default-action\\\">\\n                      <button mat-button class=\\\"delete\\\" (click)=\\\"removeScheme(scheme.partNumberCode)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s6\\\" >\\n      <div  class=\\\"sprate-box pt0\\\">\\n        <div class=\\\"cs-heading\\\">\\n          <h2>TERM & CONDITION</h2>\\n          <a class=\\\"edit-icon\\\" color=\\\"accent\\\" mat-button matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEditDialog('tc',schemeDetail.tc)\\\"><i class=\\\"material-icons\\\">create</i></a>\\n        </div>\\n        <div class=\\\"cs-pragraph\\\">\\n          <p  [innerHTML]=\\\"schemeDetail.tc\\\">{{schemeDetail.tc}}</p>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"col s6\\\">\\n      <div  class=\\\"sprate-box pt0\\\">\\n        <div class=\\\"cs-heading\\\">\\n          <h2>DESCRIPTION</h2>\\n          <a class=\\\"edit-icon\\\" color=\\\"accent\\\" mat-button matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEditDialog('schemeDescription',schemeDetail.schemeDescription)\\\"><i class=\\\"material-icons\\\">create</i></a>\\n        </div>\\n        <div class=\\\"cs-pragraph\\\">\\n          <p  [innerHTML]=\\\"schemeDetail.schemeDescription\\\">{{schemeDetail.schemeDescription}}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9zY2hlbWUtZGV0YWlsL3NjaGVtZS1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { EditSchemeComponent } from '../edit-scheme/edit-scheme.component';\nimport { DialogComponent } from 'src/app/dialog';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { EditdateSchemeComponent } from '../editdate-scheme/editdate-scheme.component';\nimport { AddDistributorComponent } from '../add-distributor/add-distributor.component';\n\n@Component({\n  selector: 'app-scheme-detail',\n  templateUrl: './scheme-detail.component.html',\n  styleUrls: ['./scheme-detail.component.scss']\n})\nexport class SchemeDetailComponent implements OnInit {\n\n  schemeCode:any;\n  schemeDetail:any={};\n  totalProduct:any=[];\n  loader:any=false;\n  dropdownSettings1:any={}\ndropdownSettings2:any={}\n  constructor(public service:ConstantService,public route:ActivatedRoute,public dialog: MatDialog,public alert:DialogComponent,public toast:SnackBarOverview) { \n\n    this.route.params.subscribe(params=>{\n      console.log(params);\n      this.schemeCode = params.id;\n      console.log(this.schemeCode);\n      if(this.schemeCode)\n      {\n        this.getSchemeDetail();\n      }\n     \n});\n  }\n\n  ngOnInit() {\n    this.dropdownSettings1 = {\n      \n      idField: 'territoryID',\n      textField: 'territoryName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n    this.dropdownSettings2 = {\n      \n      idField: 'networkId',\n      textField: 'establishment',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n    };\n  }\n\n  getSchemeDetail()\n  {\n    this.loader=true;\n    this.service.fetchData({\"schemeCode\": this.schemeCode},\"/getschemedescription\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['message']=='Success')\n      {\n        this.schemeDetail=result['data'];\n        this.totalProduct=this.schemeDetail.schemeProductDetails;\n        this.getDistribotorList(this.schemeDetail.schemeDistributors)\n      }\n    })\n  }\n  selectedTerritory:any=[];\n  distributoList:any=[];\n  tmpDistributorList:any=[];\n  getDistribotorList(territory)\n  {\n    this.distributoList=[];\n    const territoriesIds=[];\n      // this.loader=true;\n      for(let i=0;i<territory.length;i++)\n      {\n        if(territoriesIds.length==0)\n        {\n          territoriesIds.push(territory[i].distributorTerritoryID);\n        }\n        else{\n          let idIndex=territoriesIds.findIndex(row=>row!=territory[i].distributorTerritoryID);\n          if(idIndex!= -1)\n          {\n          territoriesIds.push(territory[i].distributorTerritoryID);\n\n          }\n        }\n      }\n      console.log(territoriesIds);\n      this.selectedTerritory=territoriesIds;\n     if(territoriesIds.length!=0)\n     {\n      this.service.fetchData({territoriesIds:territoriesIds},\"territoriesnetworks/list\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.tmpDistributorList=result['data'];\n\n          for(let i=0;i<this.tmpDistributorList.length;i++)\n          {\n            for(let j=0;j<territory.length;j++)\n            {\n              if(this.tmpDistributorList[i].networkId==territory[j].distributorID)\n              {\n                this.distributoList.push(this.tmpDistributorList[i]);\n              }\n            }\n          }\n          // console.log(this.distributoList);\n          \n        }\n      })\n     }\n    \n    \n  }\n\n  addDistributor(value)\n  {\n    console.log(value);\n    \n    const dialogRef = this.dialog.open(AddDistributorComponent,\n      {\n        width: '800px',\n         data:{'territory':this.selectedTerritory,value,'schemeCode':this.schemeDetail.schemeCode}\n      });\n    dialogRef.afterClosed().subscribe(result => {\n    this.getSchemeDetail();\n  });\n  }\n\n  openEditDialog(field,value)\n  {\n    const dialogRef = this.dialog.open(EditSchemeComponent,\n        {\n          width: '512px',\n           data:{field,\n           value,'schemeCode':this.schemeDetail.schemeCode,\"isActive\":this.schemeDetail.isActive}\n        });\n      dialogRef.afterClosed().subscribe(result => {\n      this.getSchemeDetail();\n    });\n  }\n\n  openEditDateDialog(field)\n  {\n    const dialogRef = this.dialog.open(EditdateSchemeComponent,\n        {\n          width: '512px',\n           data:this.schemeDetail\n        });\n      dialogRef.afterClosed().subscribe(result => {\n      this.getSchemeDetail();\n    });\n  }\n  removeScheme(partNumber)\n  {\n    console.log(partNumber);\n    \n    this.alert.delete(\"Scheme\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.service.fetchData({\"partNumberCode\": partNumber,\"schemeCode\": this.schemeDetail.schemeCode},\"/removeschemefromproduct\").subscribe((result)=>{\n          console.log(result);\n          if(result['message']=='Success')\n          {\n            this.toast.openSucess('Scheme ','Removed successfully');\n            this.getSchemeDetail();\n          }\n          \n        })\n      }\n    });\n   \n  }\n  removeDistributor(id,code)\n  {\n    console.log(id);\n    \n    this.alert.delete(\"Scheme\").then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.service.fetchData({\"distributorID\": id,\"schemeCode\": code},\"removedistributor\").subscribe((result)=>{\n          console.log(result);\n          if(result['message']=='Success')\n          {\n            this.toast.openSucess('Scheme ','Removed successfully');\n            this.getSchemeDetail();\n          }\n          \n        })\n      }\n    });\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/scheme.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Scheme</h2>\\n        <p>Number of Scheme : <span>{{schemeList.length}}</span></p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n\\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n            <div class=\\\"table-head\\\">\\n              <table class=\\\"sno-border\\\"> \\n                <tr>\\n                  <th class=\\\"w30\\\">&nbsp;</th>\\n                  <th class=\\\"w100\\\">Date</th>\\n                  <th class=\\\"w170\\\">Tittle</th>\\n                  <th class=\\\"w110\\\">VALID FROM</th>\\n                  <th class=\\\"w110\\\">VALIT TILL</th>\\n                  <th class=\\\"w170\\\">Total Prodcut Code</th>\\n                  <th>Description</th>\\n                  <th class=\\\"w80\\\">STATUS</th>\\n                  \\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"table-container\\\">\\n            <div class=\\\"table-content\\\">\\n              <table class=\\\"sno-border\\\">\\n                \\n                <tr *ngFor=\\\"let scheme of schemeList ; let i=index\\\">\\n                  <td class=\\\"w30\\\">{{i+1}}</td>\\n                  <td class=\\\"w100\\\">{{scheme.createdOn | date:'EEEE, MMMM d, y'}}</td>\\n                  <td class=\\\"w170\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/scheme-detail/{{scheme.schemeCode}}\\\" routerLinkActive=\\\"active\\\">{{scheme.title}}</a></td>\\n                  <td class=\\\"w110\\\">{{scheme.validFrom | date:' MMMM d, y'}}</td>\\n                  <td class=\\\"w110\\\">{{scheme.validTill | date:' MMMM d, y'}}</td>\\n                  <td class=\\\"w170\\\"><a class=\\\"link-btn\\\" mat-button routerLink=\\\"/scheme-detail/{{scheme.schemeCode}}\\\" routerLinkActive=\\\"active\\\">{{scheme.schemeProductDetails.length}}</a>\\n                  </td>\\n                  <td [innerHTML]=\\\"scheme.schemeDescription\\\">{{scheme.schemeDescription}}\\n                    <div class=\\\"action-btns\\\">\\n                      <!-- <a mat-button class=\\\"edit\\\"><i class=\\\"material-icons\\\">create</i> view</a> -->\\n                      <button mat-button class=\\\"delete\\\" (click)=\\\"removeScheme(scheme.schemeCode)\\\" ><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                    </div>\\n                  </td>\\n                  <td class=\\\"w80\\\">\\n                    <mat-slide-toggle class=\\\"switch-toggle\\\" color=\\\"accent\\\" [checked]=\\\"scheme.isActive==1\\\" (change)=\\\"isactive(scheme.schemeCode,scheme.isActive)\\\"></mat-slide-toggle>\\n                  </td>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </div>\\n    </div>\\n    \\n  </div>\\n  <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n    <div class=\\\"outer\\\">\\n      <div class=\\\"iinear\\\">\\n        <div class=\\\"figure\\\" matRipple>\\n          <div class=\\\"header\\\">\\n            <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n          </div>\\n          <div class=\\\"description\\\">\\n            \\n            <div class=\\\"img\\\">\\n              <i class=\\\"material-icons\\\">error_outline</i>\\n            </div>\\n            \\n            <div class=\\\"cs-heading\\\">\\n              <h2>Data Not Available</h2>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n</div>\\n<div *ngIf=\\\"userType==1\\\" class=\\\"fixed-multibtn-botm\\\">\\n  <ul>\\n    <li><a  matTooltip=\\\"Add New\\\" matRipple routerLink=\\\"/add-scheme\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">add</i></a></li>\\n  </ul>\\n</div>\\n<div class=\\\"h50\\\"></div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { DialogComponent } from 'src/app/dialog';\nimport { SnackBarOverview } from 'src/app/toast';\n\n@Component({\n  selector: 'app-scheme-list',\n  templateUrl: './scheme-list.component.html'\n})\nexport class SchemeListComponent implements OnInit {\n  \n  schemeList:any=[];\n  div:boolean=false;\n  loader:any=false;\n\n  user:any;\n  userType:any;\n  constructor(public service:ConstantService,public dialog:DialogComponent,public toast:SnackBarOverview) { \n    this.productSchemeList();\n  }\n  \n  ngOnInit() {\n\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n\n    console.log(this.userType);\n  }\n  \n  productSchemeList()\n  {\n    this.loader=true;\n    this.service.fetchData({isActive:2},\"getallscheme\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['message']=='Success')\n      {\n        this.schemeList=result['data'];\n      }\n      else{\n        this.div=true;\n        this.schemeList=[];\n      }\n    })\n  }\n  \n  // removeScheme(schemeCode)\n  // {\n  //   this.dialog.delete(\"Scheme\").then((result) => {\n  //     console.log(result);\n  //     if(result)\n  //     {\n  //       this.service.fetchData({schemeCode:schemeCode},\"/deactivatescheme\").subscribe((result)=>{\n  //         console.log(result);\n  //         if(result['message']=='Success')\n  //         {\n  //           this.toast.openSucess('Scheme removed successfully','');\n  //           this.productSchemeList();\n  //         }\n          \n  //       })\n  //     }\n  //   });\n    \n  // }\n  \n  isactive(schemeCode,isActive)\n  {\n    console.log(isActive,schemeCode);\n    \n    if(isActive=='1')\n    {\n      this.service.fetchData({schemeCode:schemeCode},\"deactivatescheme\").subscribe((result)=>{\n        console.log(result);\n        if(result['message']==\"Success\")\n        {\n          this.toast.openSucess('Scheme ','Deactivated');\n          this.productSchemeList();\n        }\n      })\n    }\n    else\n    {\n      this.service.fetchData({schemeCode:schemeCode,isActive: 1},\"modifyscheme\").subscribe((result)=>{\n        console.log(result);\n        if(result['message']==\"Success\")\n        {\n          this.toast.openSucess('Scheme ','Activated');\n          this.productSchemeList();\n        }\n      })\n      \n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router,RouterModule,Routes, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, ActivatedRoute } from '@angular/router';\nimport { sessionStorage }  from './local-storage.service';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Location } from '@angular/common';\n\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    \n    user:any = [];\n    token:any;\n    href:any = '';\n    can_active:any;\n    constructor(public loc: Location, private router: Router, public ses: sessionStorage,public service: ConstantService) {\n    }\n    \n    \n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        \n        \n        this.ses.getSe().subscribe(\n            data => {\n                this.user = data;\n                console.log(this.user);\n            },\n            error => {\n                console.log('err');\n                \n            });\n            \n            \n            if (this.user.st_log)\n            {\n                console.log(this.user);\n                // const location: RouterStateSnapshot = this.loc.location;\n                // (this.loc.Location._platformStrategy._platformLocation.location)\n                // const snapshot: RouterStateSnapshot = this.router.routerState.snapshot;\n                // console.log(snapshot);\n                // console.log(this.router);\n                // console.log(this.router.url,\"Current URL\");\n                // this.href = this.router.url;\n                // this.href = window.location.href;\n                // console.log(this.href);\n                console.log(this.user);\n                this.service.datauser = this.user;\n                this.service.can_active = '1';\n                this.user.url =  this.href;\n                console.log(this.service.can_active);\n                return true;\n            }\n            else\n            {\n                this.service.can_active = '';\n                this.service.datauser = {};\n                this.router.navigate([''], { queryParams: { returnUrl: state.url }});\n                return false;\n            }\n        \n            \n        }\n        \n        \n    }","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'myfilter',\n    pure: false\n})\nexport class MyFilterPipe implements PipeTransform {\n    transform(items: any[], filter: any): any {\n        \n        if (!items || !filter.search) {\n            return items;\n        }\n        // filter items array, items which match and return true will be\n        // kept, false will be filtered out\n\n        if (filter.src === 'state') {\n           return items.filter(item => item.indexOf(filter.search.toUpperCase()) !== -1);\n        }\n\n        if(filter.src === 'territoryState') {\n            return items.filter(item => item.stateName.indexOf(filter.search.toUpperCase()) !== -1);\n        }\n        if(filter.src === 'territory') {\n            return items.filter(item => item.territoryName.toUpperCase().indexOf(filter.search.toUpperCase())!== -1);\n        }\n\n        if (filter.src === 'district') {\n            return items.filter(item => item.districtName.toUpperCase().indexOf(filter.search.toUpperCase()) !== -1);\n        }\n\n        if (filter.src === 'territoryCity') {\n\n            return items.filter(item => item.cityName.toUpperCase().indexOf(filter.search.toUpperCase()) !== -1);\n        }\n\n\n        if (filter.src === 'territoryPincode') {\n\n            return items.filter(item => ((item.pincode).toString()).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1);\n        }\n\n        if (filter.src === 'territoryDistrict') {\n\n            return items.filter(item => (item.districtName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1);\n        }\n\n        if(filter.src == 'selectedPincodes') {\n\n            return items.filter(item => (item.stateName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1 || (item.districtName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1 || (item.cityName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1 || ((item.pincode).toString()).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1);\n\n        }\n\n        if(filter.src == 'userSearch') {\n\n            return items.filter(item => (item.userName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1);\n\n        }\n\n\n        if(filter.src == 'networkSearch') {\n\n            return items.filter(item => (item.establishment).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1);\n\n        }\n\n        if(filter.src == 'junior') {\n\n            return items.filter(item => (item.userName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1);\n\n        }\n\n    }\n}","module.exports = \"<div *ngIf=\\\"loader\\\"> \\n  <div class=\\\"cs-loader\\\">\\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n  </div>\\n</div>\\n<form [formGroup]=\\\"addTask\\\" (ngSubmit)=\\\"saveTask()\\\" ngxScrollToFirstInvalid >\\n  <div class=\\\"main-container\\\">\\n    <div class=\\\"middle-container\\\">\\n      <div class=\\\"page-heading\\\">\\n        <img src=\\\"assets/img/task.svg\\\" class=\\\"h-icon\\\">\\n        <div class=\\\"heading-text\\\">\\n          <h2>Add New Task</h2>\\n          <p>Assign new task </p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Creat New Task</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"Select Role Type\\\" formControlName=\\\"role\\\" required >\\n                          <mat-option (click)=\\\"userList(user.roleId)\\\" *ngFor=\\\"let user of AllUserList \\\" value={{user.roleId}}>{{user.roleName}}</mat-option>\\n                          <!-- <mat-option (click)=\\\"oherUserDiv()\\\" value=null>Other</mat-option> -->\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"submitted && e.role.errors\\\" >Network Type required</mat-error>\\n                    </div>\\n                  </div>\\n                 <div class=\\\"col s6\\\">\\n                  <div *ngIf=\\\"other\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Other User Name\\\" formControlName=\\\"other\\\" required>\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                 <div class=\\\"multi-all-select\\\" *ngIf=\\\"other==false\\\">\\n                    <label>Sales User</label>\\n                  <ng-multiselect-dropdown \\n                  [placeholder]=\\\"'Select'\\\"\\n                  [data]=\\\"saleslist\\\"\\n                  [settings]=\\\"dropdownSettings\\\"\\n                  formControlName=\\\"userId\\\"\\n                  >\\n                </ng-multiselect-dropdown>\\n                 </div>\\n                 </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput [matDatepicker]=\\\"days\\\" [min]='currentDate' readonly placeholder=\\\"To Be Compelted By\\\" formControlName=\\\"deadline\\\"  required>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"days\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #days></mat-datepicker>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"submitted && e.deadline.errors\\\" >Task Deadline is required</mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s6\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"Critical\\\" formControlName=\\\"taskPriority\\\"  >\\n                          <mat-option value='1'>Currently Critical</mat-option>\\n                          <mat-option value='2'>Potentially Critical</mat-option>\\n                          <mat-option value='3'>Necessary</mat-option>\\n                          <mat-option value='4'>Recommended </mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"submitted && e.taskPriority.errors\\\" >Task Priority is required</mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s12\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <textarea matInput placeholder=\\\"Remark\\\" class=\\\"h120\\\" formControlName=\\\"remarks\\\" required></textarea>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"submitted && e.remarks.errors\\\" >Remarks is required</mat-error>\\n                    </div>\\n                  </div>\\n               </div>\\n            </div>\\n          <div>\\n        </div>\\n      </div>\\n      <div class=\\\"col s8\\\">\\n        <div class=\\\"highlights\\\">\\n          <ul>\\n            <!-- <li>Financial loss and Safety Related issues</li>\\n            <li>Potential Financial or reputation loss, relationships with customer, statutory requirements</li> -->\\n            <li *ngIf=\\\"addTask.value.taskPriority==1\\\">Financial loss and Safety Related issues</li>\\n                      <li *ngIf=\\\"addTask.value.taskPriority==2\\\">Potential Financial or reputation loss, relationships with customer, statutory requirements</li>\\n                      <li *ngIf=\\\"addTask.value.taskPriority==3\\\">Policies and instructions from management</li>\\n                      <li *ngIf=\\\"addTask.value.taskPriority==4\\\">All others (no business impact)</li>\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"col s4\\\">\\n        <div class=\\\"cs-btn fixedd mt15 text-right\\\">\\n          <div class=\\\"in-btn\\\">\\n            <button mat-raised-button color=\\\"accent\\\">Save</button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col s2\\\">&nbsp;</div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<div class=\\\"h50\\\"></div>\\n</div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport {Validators,FormGroup,FormBuilder} from '@angular/forms';\nimport * as $ from 'jquery';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html'\n})\nexport class AddTaskComponent implements OnInit {\n  submitted = false; //for login button\n  \n  addTask: FormGroup;\n  rolelists:any=[];\n  taskForm:any={};\n  rolelisttask:any=[];\n  distributorList:any=[];\n  saleslist:any=[];\n  message:any;\n  rolename:any;\n  territory:any=[];\n  loader:boolean;\n  other:any=false;\n  user:any={}\n  userType:any;\n  userId:any;\n  userRole:any;\n  dropdownSettings:any={};\n  currentDate:any = new Date();\n  \n  constructor(public db:ConstantService,public toast:SnackBarOverview,  public router:Router, \n    public route:ActivatedRoute,public dialog:DialogComponent,private formBuilder: FormBuilder) {\n      this.user = JSON.parse(localStorage.getItem('user')) || [];\n      console.log(this.user);\n      this.userType = this.user.data.userType;\n      this.userId = this.user.data.userId;\n      this.userRole=this.user.data.role;\n    }\n    \n    ngOnInit() {\n      this.dropdownSettings = {\n        singleSelection: false,\n        idField: 'userId',\n        textField: 'userName',\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        allowSearchFilter: true,\n        maxHeight: 197\n  };\n      this.rolelist();\n      this.addTask = this.formBuilder.group({\n        role: [''],\n        deadline:['', Validators.required],\n        taskPriority:['', Validators.required],\n        userId: [''],\n        remarks: ['', Validators.required],\n        other: ['']\n      });\n    }\n    get e() { return this.addTask.controls; }\n    active:any = {};\n    toggleterritory(key,action)\n    {\n      console.log(action);\n      console.log(key);\n      \n      if(action == 'open')\n      { this.active[key] = true;\n        $('#'+key).focus();\n      }\n      if(action == 'close')\n      { this.active[key] = false;}\n      console.log(this.active);\n    }\n\n\n\n    rolelisttask1:any=[];\n    AllUserList:any=[];\n    rolelist() {\n      this.loader=true;\n      this.db.fileData('','usertype/list').subscribe((response)=>{\n            console.log(response);\n            this.rolelists=response['data'];\n            this.loader=false;\n            let systemuser= this.rolelists.filter(x => x.userTypeId==1);\n            this.rolelisttask1=systemuser[0].roles;\n            let filterrolelead= this.rolelists.filter(x => x.userTypeId==2);\n            this.rolelisttask=filterrolelead[0].roles;\n              this.AllUserList=this.rolelisttask.concat(this.rolelisttask1);\n              console.log(this.AllUserList);\n            console.log(this.rolelisttask1);\n            console.log(this.AllUserList);\n            console.log(this.rolelisttask);\n            if(this.userRole==1) {\n              const filterArray=this.AllUserList.filter(row=>row.roleId !=1);\n              console.log(filterArray);\n              this.AllUserList=filterArray;\n        }\n            if(this.userRole==6) {\n                  const filterArray=this.AllUserList.filter(row=>row.roleId !=6 && row.roleId !=1 && row.roleId !=2 && row.roleId !=3 && row.roleId !=4 && row.roleId !=5 && row.roleId !=16 && row.roleId !=17 );\n                  console.log(filterArray);\n                  this.AllUserList=filterArray;\n            }\n            if(this.userRole==7) {\n                  const filterArray=this.AllUserList.filter(row=>row.roleId !=6 && row.roleId!=7 && row.roleId !=1 && row.roleId !=2 && row.roleId !=3 && row.roleId !=4 && row.roleId !=5 && row.roleId !=16 && row.roleId !=17 );\n                  console.log(filterArray);\n                  this.AllUserList=filterArray;\n            }\n            if(this.userRole==8) {\n                  const filterArray=this.AllUserList.filter(row=>row.roleId !=6 && row.roleId!=7 && row.roleId!=8 && row.roleId !=1 && row.roleId !=2 && row.roleId !=3 && row.roleId !=4 && row.roleId !=5 && row.roleId !=16 && row.roleId !=17 );\n                  console.log(filterArray);\n                  this.AllUserList=filterArray;\n            }\n            console.log(this.AllUserList);\n      });\n    }\n    saleuserdatalist:any=[];\n    rsm:any=[];\n    asm:any=[];\n    ti:any=[];\n    finalsalesuser:any=[];\n    tmpUserList:any=[];\n    userList(role)\n    {\n      this.saleslist=[];\n      console.log(role);\n      console.log(this.userType)\n      if(this.userType==1){\n      console.log(role);\n      // console.log(id);\n      this.other=false;\n      this.loader=true;\n      this.db.fetchData( {\"role\":role,\"currentPage\": 1,\"pageSize\": 50},\"user/list\").subscribe((result)=>{\n        console.log(result);\n        this.loader=false;\n        if(result['status']=='Success')\n        {\n          this.saleslist=result['data'];\n          console.log(this.saleslist);\n          this.tmpUserList=this.saleslist;\n        }\n      })\n    }else{\n\n      this.saleuserdatalist=this.user.data.salesUser.staffWithJuniors.juniors;\n      console.log(this.saleuserdatalist);\n      console.log(role);\n      if(this.userRole==6 && role==10) {\n\n              for(var i=0;i < this.saleuserdatalist.length;i++)\n              {           \n                        this.rsm.push(this.saleuserdatalist[i]);\n              }\n\n              for(var k=0;k < this.rsm.length;k++)\n                {\n                    for(var q=0;q<this.rsm[k].juniors.length;q++)\n                    {\n                        this.asm.push(this.rsm[k].juniors[q]);\n                    }\n              }\n\n              for(var j=0;j < this.asm.length;j++)\n              { \n                  for(var z=0;z<this.asm[j].juniors.length;z++)\n                  {\n                      this.ti.push(this.asm[j].juniors[z]);\n                  }\n              }\n        }\n        if(this.userRole==6 && role==8) {\n\n          for(var i=0;i < this.saleuserdatalist.length;i++)\n          {           \n                    this.rsm.push(this.saleuserdatalist[i]);\n          }\n\n          for(var k=0;k < this.rsm.length;k++)\n            {\n                for(var q=0;q<this.rsm[k].juniors.length;q++)\n                {\n                    this.asm.push(this.rsm[k].juniors[q]);\n                }\n          }\n    }\n    if(this.userRole==6 && role==7) {\n\n            for(var i=0;i < this.saleuserdatalist.length;i++)\n            {           \n                      this.rsm.push(this.saleuserdatalist[i]);\n            }\n        }\n\n        if(this.userRole==7 && role==10) {\n\n          for(var i=0;i < this.saleuserdatalist.length;i++)\n          {           \n                    this.asm.push(this.saleuserdatalist[i]);\n          }\n\n          for(var k=0;k < this.asm.length;k++)\n            {\n                for(var q=0;q<this.asm[k].juniors.length;q++)\n                {\n                    this.ti.push(this.asm[k].juniors[q]);\n                }\n          }\n    }\n    if(this.userRole==7 && role==8) {\n\n            for(var i=0;i < this.saleuserdatalist.length;i++)\n            {           \n                      this.asm.push(this.saleuserdatalist[i]);\n            }\n      }\n\n      if(this.userRole==7 && role==10) {\n\n        for(var i=0;i < this.saleuserdatalist.length;i++)\n        {           \n                  this.asm.push(this.saleuserdatalist[i]);\n        }\n\n        for(var k=0;k < this.asm.length;k++)\n          {\n              for(var q=0;q<this.asm[k].juniors.length;q++)\n              {\n                  this.ti.push(this.asm[k].juniors[q]);\n              }\n        }\n  }\n  if(this.userRole==8 && role==10) {\n\n          for(var i=0;i < this.saleuserdatalist.length;i++)\n          {           \n                    this.ti.push(this.saleuserdatalist[i]);\n          }\n    }\n\n\n\n\n      if(role==10) {\n\n            for(var a=0;a< this.ti.length;a++) {\n\n                 const indexExist = this.saleslist.findIndex(row => row.userId == this.ti[a].userId);\n\n                 if(indexExist == -1) {\n                    this.saleslist.push(this.ti[a]);\n                 }\n            }\n\n      }  else if(role==8) {\n        for(var a=0;a< this.asm.length;a++) {\n\n          const indexExist = this.saleslist.findIndex(row => row.userId == this.asm[a].userId);\n          \n          if(indexExist == -1) {\n\n             this.saleslist.push(this.asm[a]);\n          }\n     }\n      }  else  {\n        for(var a=0;a< this.rsm.length;a++) {\n\n          const indexExist = this.saleslist.findIndex(row => row.userId == this.rsm[a].userId);\n          \n          if(indexExist == -1) {\n    \n             this.saleslist.push(this.rsm[a]);\n          }\n         }\n      }\n    }\n    console.log(this.saleslist);\n    }\n\n  \n\n\n\n\n    userSearch:any={};\n    searchList:any=[];\n    UserSearch()\n    {\n      this.saleslist=[];\n      for(let i=0;i<this.tmpUserList.length;i++)\n      {\n        this.userSearch.search=this.userSearch.search.toLowerCase();\n        this.searchList=this.tmpUserList[i]['userName'].toLowerCase();\n        if(this.searchList.includes(this.userSearch.search))\n        {\n          this.saleslist.push(this.tmpUserList[i]);\n        } \n      }\n    }\n    oherUserDiv()\n    {\n      this.other=true;\n      // this.addTask.controls['userId'].setValue(null);\n      // this.addTask.controls['role'].setValue(null);\n    }\n    getUserid(id)\n    {\n      console.log(id);\n      this.addTask.controls['userId'].setValue(id);\n    }\n    taskValue:any={};\n    userIds:any=[];\n    roles:any=[];\n    saveTask()\n    {\n      this.submitted = true;\n      console.log(this.addTask.value);\n\n      if (this.addTask.invalid) \n      {\n        console.log(\"*****invalid data*****\");\n        console.log(this.addTask.value);\n        return;\n      }\n      else\n      {\n        for(let i=0;i<this.addTask.value.userId.length;i++)\n        {\n          this.userIds.push(this.addTask.value.userId[i]['userId']);\n          this.roles.push(parseInt(this.addTask.value.role));\n        }\n\n       if(this.addTask.value.other!='')\n       {\n         this.taskValue={\"other\":this.addTask.value.other,\"deadline\":moment(this.addTask.value.deadline).format('YYYY-MM-DD '),\"remarks\":this.addTask.value.remarks,\"taskPriority\":this.addTask.value.taskPriority}\n       } \n       else{\n         this.taskValue={\"userIds\":this.userIds,\"roles\":this.roles,\"deadline\":moment(this.addTask.value.deadline).format('YYYY-MM-DD '),\"remarks\":this.addTask.value.remarks,\"taskPriority\":parseInt(this.addTask.value.taskPriority)}\n       }\n        console.log(this.addTask.value);\n        this.db.fetchData(this.taskValue,\"task/add\").subscribe((result)=>{\n          console.log(result);\n          if(result['status']=='Success')\n          {\n            this.dialog.success();\n            this.router.navigate(['/task-list'])\n          }\n        })\n      }\n      \n    }\n   \n    // getDistributorList(id){\n    //   this.loader=true;\n    //   console.log(id);\n    //   this.taskForm.role=id;\n    //   // console.log(this.rolelisttask);\n    //   console.log(this.taskForm.role);\n    //   for(let i=0;i<this.rolelisttask.length;i++){\n    //     if(this.rolelisttask[i].roleId==this.taskForm.role)\n    //     {\n    //       this.rolename=this.rolelisttask[i].roleName;\n    //     }\n    //   }\n    //   console.log(this.rolename);\n    //   this.db.fetchData({\"role\":this.taskForm.role},'network/list').subscribe((response)=>{\n    //     console.log(response);\n    //     this.loader=false;\n    //     this.distributorList=response['data'];\n    //   });\n    // }\n    // getSalesList(pin){\n    //   this.loader=true;\n    //   this.db.fileData(pin,'territorybypin/').subscribe((response)=>{\n    //     console.log(response);\n    //     this.loader=false;\n    //     this.territory=response['data'];\n    //     console.log(this.territory);\n    //     this.sale(this.territory);\n    //   });\n    // }\n    // sale(salesid){\n    //   console.log(salesid);\n    //   this.db.fetchData({'territoryID':salesid},'territory/detail').subscribe((response)=>{\n    //     console.log(response);\n    //     this.salesList=response['data'][0]; \n    //     console.log(this.salesList);\n    //   });\n    // }\n    // onSubmit(){\n    //   this.loader=true;\n    //   console.log(this.taskForm);\n    \n    //   this.db.fetchData({\n    //     \"userId\": this.taskForm.sales,\n    //   \"taskType\": this.taskForm.taskType,\n    //   \"role\": this.taskForm.role,\n    //   \"networkId\":this.taskForm.distributor,\n    //   \"remarks\": this.taskForm.remarks,\n    //     },'task/add').subscribe((response)=>{\n    //     console.log(response);\n    //     this.loader=false;\n    //     this.message=response['message'];\n    //     if(this.message==\"Task created successfully\")\n    //     {\n    //       this.toast.openSucess('Task created successfully','');\n    //       this.router.navigate(['/task-list'])\n    //     }\n    //     else\n    //     {\n    //       this.dialog.error(this.message);\n    //       // this.toast.openError('Email or Phone Can Not Be Duplicate or Invalid Please Try Again!!','');\n    //     }\n    //   });\n    // }\n    \n    // territoryList:any=[];\n    // getSalseUserList()\n    // {\n    \n    //   this.db.fetchData({\"userType\": 2,\"currentPage\": 1,\"pageSize\": 50},'user/list').subscribe((result)=>{\n    //     console.log(result);\n    //     if(result['status']=='Success')\n    //     {\n    //       this.saleslist=result['data'];\n    \n    //       const role=this.saleslist.filter(x=>x.role==10)\n    //           if(role.length!=0)\n    //           {\n    //             console.log(role);\n    //             this.territoryList=role;\n    \n    //           }\n    //           else{\n    //             const role=this.saleslist.filter(x=>x.role==8)\n    //             if(role.length!=0)\n    //             {\n    //               console.log(role);\n    //               this.territoryList=role;\n    //             }\n    //             else\n    //             {\n    //                 const role=this.saleslist.filter(x=>x.role==7)\n    //                 if(role.length!=0)\n    //                 {\n    //                   console.log(role);\n    //                   this.territoryList=role;\n    //                 }\n    //                 else{\n    //                   const role=this.saleslist.filter(x=>x.role==6)\n    //                 if(role.length!=0)\n    //                 {\n    //                   console.log(role);\n    //                   this.territoryList=role;\n    //                 }\n    //                 }\n    //             }\n    //           }\n    //     }\n    //   })\n    // }\n    \n    // getDistributorList(id)\n    // {\n    //   this.loader=true\n    //   this.territory=[];\n    //   this.other=false;\n    //   console.log(id);\n    \n    //   console.log(this.taskForm.sales);\n    \n    //   this.db.fetchData({salesUserId:this.taskForm.sales,\"role\":id},'mynetwork/detail').subscribe((result)=>{\n    //     console.log(result);\n    //     this.loader=false\n    //     if(result['status']=='Success')\n    //     {\n    //       this.territory=result['data'];\n    //       console.log(this.territory);\n    \n    //     }\n    //   })\n    \n    // }\n    \n    // otherType(id)\n    // {\n    //   console.log(id);\n    \n    //   console.log(this.taskForm.sales);\n    //   this.other=true;\n    // }\n    \n    \n  }\n  ","module.exports = \"\\n<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.valid && onSubmit()\\\">\\n  <div class=\\\"main-container\\\">\\n    <div *ngIf=\\\"loader\\\"> \\n      <div class=\\\"cs-loader\\\">\\n        <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n      </div>\\n    </div>\\n    <div class=\\\"middle-container\\\">\\n      <div class=\\\"page-heading\\\">\\n        <img src=\\\"assets/img/task.svg\\\" class=\\\"h-icon\\\">\\n        <div class=\\\"heading-text\\\">\\n          <h2>Assign Lead Task</h2>\\n          <p>Assign Lead Task</p>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s2\\\">&nbsp;</div>\\n          <div class=\\\"col s8\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Assign Task</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"Select {{rolename}}\\\" name=\\\"distributor\\\" #distributor=\\\"ngModel\\\" [(ngModel)]=\\\"taskForm.distributor\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && distributor.invalid }\\\" required>\\n                          <mat-option   (click)=\\\"getSalesList(distributor.pin)\\\" *ngFor=\\\"let distributor of distributorList\\\" value=\\\"{{distributor.establishment}}\\\">\\n                            {{distributor.establishment}}\\n                          </mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && distributor.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"distributor.errors.required\\\">Distributor is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  \\n                  \\n                  \\n                  \\n                  <div class=\\\"col s6 \\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"Territory\\\" id=\\\"tid\\\" name=\\\"tid\\\" #tid=\\\"ngModel\\\" [(ngModel)]=\\\"taskForm.tid\\\">\\n                          <mat-option (click)=\\\"sale()\\\" *ngFor='let territoryId of salesid' value=\\\"{{territoryId.territoryID}}\\\">{{territoryId.territoryName}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      \\n                      <mat-error class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"!salesid || salesid.length==0\\\">No Data Found!</mat-error>\\n                      </mat-error>\\n                      \\n                    </div>\\n                  </div>\\n                  \\n                  \\n                  \\n                  <div class=\\\"col s6\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <input matInput [matDatepicker]=\\\"days\\\" [min]='currentDate' readonly placeholder=\\\"To Be Compelted By\\\" name=\\\"deadline\\\" [(ngModel)]=\\\"taskForm.deadline\\\"  required>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"days\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #days></mat-datepicker>\\n                      </mat-form-field>\\n                      <!-- <mat-error *ngIf=\\\"submitted && e.deadline.errors\\\" >Task Deadline is required</mat-error> -->\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s6\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"Critical\\\" name=\\\"taskPriority\\\" [(ngModel)]=\\\"taskForm.taskPriority\\\"  >\\n                          <mat-option value=1>Currently Critical</mat-option>\\n                          <mat-option value=2>Potentially Critical</mat-option>\\n                          <mat-option value=3>Necessary</mat-option>\\n                          <mat-option value=4>Recommended </mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      \\n                      <!-- <mat-error *ngIf=\\\"submitted && e.taskPriority.errors\\\" >Task Priority is required</mat-error> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s6\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"Select Sales User\\\" name=\\\"sales\\\" #sales=\\\"ngModel\\\" [(ngModel)]=\\\"taskForm.sales\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && sales.invalid }\\\" required>\\n                          <span *ngFor=\\\"let sales of salesList\\\">\\n                            <mat-option  value=\\\"{{sales.userId}}\\\" >\\n                              {{sales.userName}}\\n                            </mat-option>\\n                          </span>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <mat-error  class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"salesList.length==0 && taskForm.tid\\\">No Data Found!</mat-error>\\n                      </mat-error>\\n                      <mat-error *ngIf=\\\"f.submitted && sales.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"sales.errors.required\\\">Sales user is required</mat-error>\\n                      </mat-error>\\n                      \\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s6\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"control-field\\\" >\\n                        <mat-form-field class=\\\"cs-input wp100 h-input\\\">\\n                          <textarea matInput placeholder=\\\"Description\\\"  name=\\\"remarks\\\" [(ngModel)]=\\\"taskForm.remarks\\\"  #remarks=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && remarks.invalid }\\\" required></textarea>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && remarks.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"remarks.errors.required\\\">Remark is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <!-- <div class=\\\"col s12\\\">\\n                    <div class=\\\"from-fields\\\">\\n                      <div class=\\\"control-field\\\" >\\n                        <mat-form-field class=\\\"cs-input wp100 h-input\\\">\\n                          <textarea matInput placeholder=\\\"Description\\\"  name=\\\"remarks\\\" [(ngModel)]=\\\"taskForm.remarks\\\"  #remarks=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && remarks.invalid }\\\" required></textarea>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && remarks.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"remarks.errors.required\\\">Remark is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                  </div> -->\\n                </div>\\n                <div class=\\\"col s8\\\">\\n                  <div class=\\\"highlights\\\">\\n                    <ul>\\n                      <li *ngIf=\\\"taskForm.taskPriority==1\\\">Financial loss and Safety Related issues</li>\\n                      <li *ngIf=\\\"taskForm.taskPriority==2\\\">Potential Financial or reputation loss, relationships with customer, statutory requirements</li>\\n                      <li *ngIf=\\\"taskForm.taskPriority==3\\\">Policies and instructions from management</li>\\n                      <li *ngIf=\\\"taskForm.taskPriority==4\\\">All others (no business impact)</li>\\n                    </ul>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col s2\\\">&nbsp;</div>\\n            <div class=\\\"col s2\\\">&nbsp;</div>\\n            <div class=\\\"col s8\\\">\\n              <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button mat-raised-button color=\\\"accent\\\">Save</button>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col s2\\\">&nbsp;</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"h50\\\"></div>\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svYXNzaWdudGFzay9hc3NpZ250YXNrLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\n// import moment = require('moment');\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-assigntask',\n  templateUrl: './assigntask.component.html',\n  styleUrls: ['./assigntask.component.scss']\n})\nexport class AssigntaskComponent implements OnInit {\n  rolelists:any=[];\n  rolename:any;\n  loader:boolean;\n  taskForm:any={};\n  salesid:any=[];\n  rolelisttask:any=[];\n  distributorList:any=[];\n  segments:any=[];\n  salesList:any=[];\n  networklist:any=[];\n  segdata:any=[];\n  distlist:any=[];\n  message:any;\n  id:any;\n  currentDate=new Date();\n  constructor(public db:ConstantService,public toast:SnackBarOverview,  public router:Router, \n    public route:ActivatedRoute,public dialog:DialogComponent) { }\n    ngOnInit() {\n        this.route.params.subscribe(params=>{\n              console.log(params);\n              this.id = params.id;\n              console.log(this.id);\n              this.db.fetchData({\"leadId\":this.id},'lead/list').subscribe((response)=>{\n                    console.log(response)\n                    this.networklist=response['data'][0];\n                    console.log(this.networklist);\n                    this.taskForm.distributor=this.networklist.establishment;\n                    console.log(this.taskForm.distributor);\n                    this.getDistributorList(this.id);\n              });\n        });\n    }\n\n  \n    getDistributorList(id) {\n\n        console.log(id);\n        this.loader=true;\n        this.db.fetchData({\"leadId\":id},'lead/list').subscribe((response)=>{\n              console.log(response);\n              this.loader=false;\n              this.distributorList=response['data'];\n              this.distlist=response['data'][0];\n              this.segments=response['data'][0]['leadSegments'];\n              console.log(this.distributorList);\n              console.log(this.segments)\n           \n              for( var j=0;j<this.segments.length;j++){\n                this.segdata.push(this.segments[j].segmentCode);\n              }\n              console.log(this.segdata);\n              this.getSalesList( this.distlist.pin);\n        });\n    }\n\n\n\n\n    getSalesList(pin) {\n          this.loader=true;\n          console.log(pin);\n          console.log(this.segdata);\n          this.db.fetchData({'pinCode':pin,'segments':this.segdata},'territory/list').subscribe((response)=>{\n                console.log(response);\n                this.loader=false;\n                this.salesid=response['data'];\n                console.log(this.salesid);\n          });\n          \n    }\n\n\n\n\n    sale() {\n        this.loader=true;\n        console.log(this.taskForm.tid);\n          this.db.fetchData({},'territory/salesusers?territoryIds='+this.taskForm.tid).subscribe((response)=>{\n                console.log(response);\n                this.loader=false;\n                this.salesList=response['data'];\n                console.log(\"check data\");\n                console.log(\"check htis\"+this.salesList);\n                \n                \n          });\n        this.taskForm.salesid=this.salesid;\n    }\n\n\n\n\n    onSubmit()  {\n          this.loader=true;\n          console.log(this.taskForm);\n          this.db.fetchData(\n            {\n                \"leadId\": this.id,\n                \"userId\": this.taskForm.sales,\n                \"remarks\": this.taskForm.remarks,\n                \"deadline\":moment(this.taskForm.deadline).format('YYYY-MM-DD'),\n                \"taskPriority\":this.taskForm.taskPriority\n            }, 'lead/assign').subscribe((response) => {\n                    console.log(response);\n                    this.loader=false;\n                    if(response['status']=='Success')\n                    {\n                      this.toast.openSucess('Task assign successfully','');\n                      this.router.navigate(['/task-list'])\n                    }\n                    this.message=response['message'];\n           });\n    }\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    \\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/task-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <!-- <h2 *ngIf=\\\"user.data.role!='10'\\\">{{taskdetail.userName}}</h2> -->\\n        <p class=\\\"light\\\"></p>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"left-auto\\\">\\n      <div class=\\\"cs-btn fixedd\\\" *ngIf=\\\"((user.data.role=='1' && taskdetail.taskStatusName=='Completed') || (userId==taskdetail.createBy && taskdetail.taskStatusName=='Completed'))\\\">\\n        <div class=\\\"in-btn\\\" *ngIf=\\\"reopenDiv==false\\\">\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"reOpenDiv()\\\" mat-stroked-button >Reopen</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col {{(taskdetail?.taskStatusName=='Completed' && !reopenDiv) ? 's12' : 's8'}}\\\">\\n          <div class=\\\"details-info padding0\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"col s12 cs-figure padding0\\\">\\n                <h2>Task Detail</h2>\\n                <ul>\\n                  <!-- <li *ngIf=\\\"userType==1\\\"> -->\\n                      <li *ngIf=\\\"user.data.role!='10'\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Assigned To</span>\\n                        <p>{{taskdetail.userName}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <!-- <li *ngIf=\\\"userType==1\\\"> -->\\n                      <li *ngIf=\\\"user.data.role!='10'\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Role</span>\\n                        <!-- <p *ngIf=\\\"taskdetail.establishmentName!=''\\\">Other</p> -->\\n                        <p >{{roleName}}</p>\\n                        \\n                      </div>\\n                    </div>\\n                  </li>\\n\\n                  <li *ngIf=\\\"taskdetail.leadEstablishment\\\">\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Lead Name</span>\\n                          <!-- <p>{{taskdetail.leadEstablishment}}routerLink=\\\"/lead-detail/{{taskdetail.referenceId}}\\\" routerLinkActive=\\\"active\\\"</p> -->\\n                          <p *ngIf=\\\"taskdetail.taskTypeName=='Lead'\\\"><a class=\\\"link-btn\\\" (click)=\\\"openleaddetail(taskdetail.referenceId)\\\"  routerLinkActive=\\\"active\\\" >{{taskdetail.leadEstablishment}}</a></p>\\n                          \\n                        </div>\\n                      </div>\\n                  </li>\\n\\n\\n                  <li *ngIf=\\\"taskdetail.leadEstablishment && taskdetail.taskStatusName=='Completed'\\\">\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Interested</span>\\n                          <p *ngIf=\\\"taskdetail.leadConverted\\\">Yes</p>\\n                          <p *ngIf=\\\"!taskdetail.leadConverted\\\">No</p>\\n                        </div>\\n                      </div>\\n                  </li>\\n                  <li *ngIf=\\\"taskdetail.taskTypeName != 'Lead'\\\">\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Created On</span>\\n                          <p>{{taskdetail.createdOn|date:'d MMM y'}}</p>\\n                        </div>\\n                      </div>\\n                  </li>\\n                  <li *ngIf=\\\"taskdetail.taskTypeName == 'Lead'\\\">\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Date Created</span>\\n                          <p>{{taskdetail.createdOn |date:'d MMM y'}}</p>\\n                          \\n                        </div>\\n                      </div>\\n                  </li>\\n                  \\n                  <li *ngIf=\\\"taskdetail.createdByName!=''\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Created By</span>\\n                        <p>{{taskdetail.createdByName}}</p>\\n                        \\n                      </div>\\n                    </div>\\n                </li>\\n                <li *ngIf=\\\"taskdetail.taskStatusName=='Completed'\\\" >\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Completed By</span>\\n                        <p>{{taskdetail.modifiedByName}}</p>\\n                      </div>\\n                    </div>\\n                </li>\\n\\n                  \\n                  <!-- <li *ngIf=\\\"taskdetail.taskTypeName!='Lead'\\\">\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Created On</span>\\n                          <p>{{taskdetail.createdOn|date:'d MMM y'}}</p>\\n                        </div>\\n                      </div>\\n                  </li>\\n                  <li *ngIf=\\\"taskdetail.taskStatusName=='Completed'\\\" >\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Completed By</span>\\n                          <p>{{taskdetail.modifiedByName}}</p>\\n                        </div>\\n                      </div>\\n                  </li> -->\\n                  \\n                </ul>\\n                <ul class=\\\"mt15\\\">\\n                  <li *ngIf=\\\"taskdetail.taskTypeName=='Lead'\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Task Type</span>\\n                        <p>{{taskdetail.taskTypeName}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Status</span>\\n                          <p>{{taskdetail.taskStatusName}}</p>\\n                        </div>\\n                      </div>\\n                  </li>\\n                  <li *ngIf=\\\"taskdetail.taskPriorityName\\\">\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Priority</span>\\n                          <p *ngIf=\\\"taskdetail.taskPriority==1\\\">Currently Critical</p>\\n                            <p *ngIf=\\\"taskdetail.taskPriority==2\\\">Potentially Critical</p>\\n                            <p *ngIf=\\\"taskdetail.taskPriority==3\\\">Necessary</p>\\n                            <p *ngIf=\\\"taskdetail.taskPriority==4\\\">Recommended</p>\\n                        </div>\\n                      </div>\\n                  </li>\\n                  <!-- <li *ngIf=\\\"taskdetail.taskTypeName=='Lead'\\\">\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Date Created</span>\\n                          <p>{{taskdetail.createdOn |date:'d MMM y'}}</p>\\n                          \\n                        </div>\\n                      </div>\\n                  </li>\\n                  <li *ngIf=\\\"taskdetail.createdByName!=''\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Created By</span>\\n                        <p>{{taskdetail.createdByName}}</p>\\n                        \\n                      </div>\\n                    </div>\\n                </li> -->\\n                <li *ngIf=\\\"taskdetail.modifiedByName\\\">\\n                  <div class=\\\"outer\\\">\\n                    <div class=\\\"inner\\\">\\n                      <span>Updated On</span>\\n                      <p >{{taskdetail.modifiedOn |date:'d MMM y'}}</p>\\n                    </div>\\n                  </div>\\n              </li>\\n                <li *ngIf=\\\"taskdetail.modifiedByName\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Updated By</span>\\n                        <p >{{taskdetail.modifiedByName}}</p>\\n                      </div>\\n                    </div>\\n                </li>\\n\\n\\n                 \\n                </ul>\\n\\n                <ul class=\\\"mt15\\\">\\n                  <li style=\\\"border-left: 1px solid #B29D9D; min-height: 100px;\\\">\\n                      <span>Description</span>\\n                      <p>{{taskdetail.remarks}}</p>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n\\n        <div *ngIf=\\\"taskdetail.taskStatusName && ((taskdetail.taskStatusName != 'Completed') || (taskdetail.taskStatusName=='Completed' && reopenDiv))\\\" class=\\\"col s4\\\">\\n\\n          <div class=\\\"details-info padding0\\\">\\n            <div class=\\\"basic-details\\\">\\n\\n              <div *ngIf=\\\"taskdetail.taskStatusName=='InProcess' || taskdetail.taskStatusName=='Reopen'\\\" class=\\\"cs-figure\\\">\\n                <h2 class=\\\"pb0\\\">Update Task</h2>\\n              </div>\\n\\n              <div *ngIf=\\\"taskdetail.taskStatusName=='InProcess' || taskdetail.taskStatusName=='Reopen'\\\" class=\\\"from-fields\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col s12 padding0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                          <mat-select placeholder=\\\"Select Action Type\\\" name=\\\"action\\\" (ngModelChange)=\\\"actionOnTask($event)\\\" #action=\\\"ngModel\\\" [(ngModel)]=\\\"taskaction.action\\\">\\n                            <mat-option value=\\\"1\\\">Leave a Remark</mat-option>\\n                            <mat-option value=\\\"2\\\">Close Task</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"taskaction.action\\\" class=\\\"col s12 padding0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field   class=\\\"cs-input infix-bodr8\\\">\\n                          <textarea matInput placeholder=\\\"Leave a Remark\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"data.remarks\\\" class=\\\"h60\\\"></textarea>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"taskaction.action==1\\\" class=\\\"col s12\\\">\\n                      <div  class=\\\"cs-btn fixedd mt15 text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" mat-stroked-button [disabled]=\\\"!data.remarks\\\" (click)=\\\"UpdateRemark(taskdetail.taskId)\\\" >Save</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"taskaction.action==2 && taskdetail.taskType!=1\\\" class=\\\"col s12\\\">\\n                      <div class=\\\"cs-btn mt15 text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" mat-stroked-button (click)=\\\"closetask(taskdetail.taskId)\\\" >Save</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    \\n                    <div *ngIf=\\\"taskaction.action==2 && taskdetail.taskType==1\\\" class=\\\"col s12 padding0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <mat-select placeholder=\\\"Lead Status\\\" name=\\\"leadConverted\\\" #leadConverted=\\\"ngModel\\\" [(ngModel)]=\\\"data.leadConverted\\\">\\n                            <mat-option value=true>Accept</mat-option>\\n                            <mat-option value=false>Reject</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </div>\\n                    </div> \\n                    <div  *ngIf=\\\"taskaction.action==2 && taskdetail.taskType==1\\\" class=\\\"col s12\\\">\\n                      <div class=\\\"cs-btn  mt15 text-right\\\">\\n                        <div class=\\\"in-btn\\\">\\n                          <button mat-raised-button color=\\\"accent\\\" mat-stroked-button (click)=\\\"closeLead(taskdetail.taskId)\\\" >Save</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n              </div>\\n\\n              <div *ngIf=\\\"taskdetail.taskStatusName=='Completed' && reopenDiv==true\\\" class=\\\"cs-figure\\\">\\n                  <h2 class=\\\"pb0\\\">Update Reopen Remark</h2>\\n              </div>\\n\\n              <div *ngIf=\\\"taskdetail.taskStatusName=='Completed' && reopenDiv==true\\\" class=\\\"from-fields\\\">\\n                  <div  class=\\\"row\\\">\\n                    <div>\\n                      <div  class=\\\"col s12 padding0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                            <textarea matInput placeholder=\\\"Leave a Remark\\\" name=\\\"remarks\\\" #remarks=\\\"ngModel\\\" [(ngModel)]=\\\"data.remarks\\\" class=\\\"h120\\\"></textarea>\\n                          </mat-form-field>\\n                        </div>\\n                        <div class=\\\"cs-btn text-right mt15\\\">\\n                          <div class=\\\"in-btn\\\">\\n                            <button (click)=\\\"reopenDiv=false\\\" mat-raised-button color=\\\"warn\\\" mat-stroked-button >Cancel</button>\\n\\n                            <button mat-raised-button color=\\\"accent\\\" mat-stroked-button (click)=\\\"reOpenTask(taskdetail.taskId)\\\" >Submit</button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"taskdetail.taskDetails && taskdetail.taskDetails.length>0\\\" class=\\\"row mt15\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>Remark Detail</h2>\\n              </div>\\n              <div class=\\\"cs-table\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table>\\n                    <tr>\\n                      <th class=\\\"w180\\\">Date</th>\\n                      <th class=\\\"w180\\\">User</th>\\n                      <th class=\\\"w150\\\">Role</th>\\n                      <th>Remark</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                \\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content none-shadow\\\">\\n                    <table>\\n                      <tr *ngFor=\\\"let list of taskdetail.taskDetails;let index=index\\\">\\n                        <td class=\\\"w180\\\">{{list.createdOn | date :'EEEE, MMMM d, y'}}</td>\\n                        <td class=\\\"w180\\\">{{list.createdByName}}</td>\\n                        <td *ngIf=\\\"list.role==1\\\" class=\\\"w150\\\">Admin</td>\\n                        <td *ngIf=\\\"list.role==6\\\" class=\\\"w150\\\">N.S.M</td>\\n                        <td *ngIf=\\\"list.role==7\\\" class=\\\"w150\\\">R.S.M</td>\\n                        <td *ngIf=\\\"list.role==8\\\" class=\\\"w150\\\">A.S.M</td>\\n                        <td *ngIf=\\\"list.role==10\\\" class=\\\"w150\\\">Territory Incharge</td>\\n                        <td>{{list.remarks}}\\n                            <div *ngIf=\\\"userId==list.createBy && taskdetail.taskStatusName !='Completed'\\\" class=\\\"action-btns\\\">\\n                                <a mat-button class=\\\"edit\\\" (click)=\\\"edit_remarks(index)\\\"><i class=\\\"material-icons\\\"  >create</i>Edit</a>\\n                                <a mat-button class=\\\"delete\\\" (click)=\\\"delete_remarks(list.taskDetailId)\\\"><i class=\\\"material-icons\\\" >delete_sweep</i>Delete</a>\\n                            </div>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col s4 empty\\\">&nbsp;</div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n\\n<div class=\\\"h50\\\"></div>\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {MatDialog} from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { UpdateNetworkComponent } from '../../distribution/update-network/update-network.component';\n// import { NavigationComponent } from '../../navigation/navigation.component';\n// import { Navigation } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n})\nexport class TaskDetailComponent implements OnInit {\n  task_id:any;\n  loader:any=false;\n  taskdetail:any={};\n  data:any={};\n  user:any={};\n  userType:any;\n  taskdata:any={};\n  userId:any;\n  userRole:any;\n  // @Input NavigationComponent\n  constructor( public alrt:DialogComponent,public db:ConstantService,public router:Router, public route:ActivatedRoute, public dialog: MatDialog,public toast:SnackBarOverview) {\n    // this.loader=true;\n    this.route.params.subscribe(params=>{\n    console.log(params);\n    this.task_id = params.id;\n    console.log(this.task_id);\n   });\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    this.rolelist();\n  }\n\n\n\n  ngOnInit(){\n  }\n\n\n\n  roleName:any;\n  task_detail(){\n    this.loader=true;\n    this.db.fileData('','task/detail/'+this.task_id).subscribe((response)=>{\n      console.log(response);\n      setTimeout (() => {\n        this.loader=false;\n    }, 700);\n      if(response['status']==\"Success\")\n      {\n        this.taskdetail=response['data'];\n        console.log(this.taskdetail);\n        for(let i=0;i<this.rolelistsales1.length;i++)\n        {\n          if(this.taskdetail['role']==this.rolelistsales1[i]['roleId'])\n          {\n            this.roleName=this.rolelistsales1[i]['roleName'];\n          }\n        }\n        console.log(this.roleName);\n      }\n    });\n  }\n\n\n\n  \n\n\n  UpdateRemark(uid)\n  {\n    let value={\"taskId\":uid,\"remarks\": this.data['remarks'],\"taskStatus\":1,\"userId\":this.userId}\n    this.data.taskId=uid;\n    this.data.userId=this.userId;\n    console.log(this.data);\n    this.db.fetchData(value,\"taskdetail/add\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.data={};\n        this.toast.openSucess(\"Remark Update\",\"SuccessFully\");\n        this.task_detail();\n        this.taskaction.action=null;\n      }\n    })\n  }\n\n\n\n  tasklist:any=[];\n  rolelists:any=[];\n  rolelistsales1:any=[];\n  rolelist(){\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      if(response['status']=='Success')\n      {\n        this.rolelists=response['data'];\n\n      }\n      this.task_detail();\n      let filterrolesales= this.rolelists.filter(x => x.userTypeId==2);\n      this.rolelistsales1=filterrolesales[0].roles;\n      console.log(this.rolelistsales1);\n    });\n  }\n\n\n\n\nmsg:any\n  delete_remarks(id){\n    console.log(id);\n    this.msg=\"remark\"\n    this.alrt.delete(this.msg).then((result) => {\n      console.log(result);\n      if(result)\n      {\n        this.db.fetchData({},'taskdetail/delete/'+id).subscribe((response)=>{\n          console.log(response);\n          if(response['status']=='Success')\n          {\n            this.task_detail();\n          }\n          })\n          }else{\n            this.msg.error('Remark Not Deleted !!');\n          }\n          })\n     }\n\n\n     taskremarks:any=[];\n     edit_remarks(index){\n      console.log(index)\n      this.taskremarks=this.taskdetail.taskDetails[index];\n      this.taskremarks['type']='taskremarks';\n      console.log(this.taskremarks);\n      const dialogRef = this.dialog.open(UpdateNetworkComponent,{width : '1000px' ,data:this.taskremarks});\n      dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      this.taskremarks=[];\n      this.task_detail();\n    });\n\n       }\n      \n\n\n\n  openleaddetail(id){\n    // window.open(`/lead-detail/`+id);\n    window.open('./lead-detail/'+id);\n  }\n\n\n  taskaction:any={};\n  actionOnTask(value)\n  {\n    console.log(value);\n  }\n\n  \n  closetask(taskId)\n  {\n    let value={\"taskId\":taskId,\"userId\":this.userId,\"taskStatus\":2,'taskType':this.taskdetail.taskType,\"remarks\": this.data.remarks};\n    console.log(value);\n    \n    this.db.fetchData(value,\"task/update\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        this.data={};\n        this.toast.openSucess(\"Task Close \",\"SuccessFully\");\n        this.task_detail();\n        this.taskdetail={};\n        this.taskaction.action=null;\n      }\n    })\n  }\n\n\n\n  closeLead(taskId)\n  {\n    console.log(taskId);\n    this.taskdetail.task_id=this.task_id;\n    console.log(this.data);\n    console.log(this.taskdetail.referenceId)\n    console.log(this.data.leadConverted);\n    let value={\"taskId\":taskId,\"userId\":this.userId,\"taskStatus\":2,\"leadConverted\":this.data.leadConverted,\"referenceId\":this.taskdetail.referenceId,'taskType':this.taskdetail.taskType};\n    this.db.fetchData(value,\"task/update\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']=='Success')\n      {\n        if(this.data.leadConverted=='false'){\n        console.log(\"heelllo\");\n        this.router.navigate(['/lead-list'])}else{ \n          localStorage.setItem('leadId', JSON.stringify(this.taskdetail));\n          this.router.navigate(['/add-distribution']);\n          console.log(localStorage);\n          // this.navPage.count_list();\n        }\n      }\n    })\n  }\n\n\n\n\n  reOpenTask(taskId)\n  {\n    console.log(\"reopen Function call\");\n    let value={\"taskId\":taskId,\"userId\":this.userId,\"remarks\":'ReopenTask',\"taskStatus\":3};\n    this.db.fetchData(value,\"taskdetail/add\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']='Success')\n      {\n        this.task_detail();\n      }\n    })\n  }\n\n\n\n\n  reopenDiv:any=false\n  reOpenDiv()\n  {\n    this.reopenDiv=true;\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n    <div *ngIf=\\\"loader\\\"> \\n        <div class=\\\"cs-loader\\\">\\n          <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n        </div>\\n      </div>\\n    \\n    <div class=\\\"middle-container pb15\\\">\\n        <div class=\\\"page-heading\\\">\\n            <img src=\\\"assets/img/task.svg\\\" class=\\\"h-icon\\\">\\n            <div class=\\\"heading-text flex-heading\\\">\\n                <div class=\\\"content\\\">\\n                    <h2>Task List</h2>\\n                    <p>Total Task 15</p>\\n                </div>\\n                <div class=\\\"item-filter\\\" *ngIf=\\\"userRole!=1 && userRole!=10\\\">\\n                    <mat-form-field class=\\\"wp100\\\">\\n                        <mat-select  name=\\\"role\\\" id=\\\"role\\\" [(ngModel)]=\\\"filter.assignedToMe\\\" #assignedToMe=\\\"ngModel\\\" >\\n                            <mat-option *ngIf=\\\"userRole!=1\\\" [value]=\\\"true\\\" (click)=\\\"filter.assignedToMe=true;filter.assignedByMe=false;filter.junoiourtask=false;taskList()\\\">Assigned To Me</mat-option>\\n                            <mat-option  [value]=\\\"false\\\" (click)=\\\"filter.assignedToMe=false;filter.assignedByMe=true;filter.junoiourtask=false; taskList()\\\">Assigned By Me</mat-option>\\n                            <mat-option [value]=\\\"false\\\" (click)=\\\"filter.assignedToMe=false;filter.assignedByMe=false;filter.junoiourtask=true; taskList()\\\">Juniour's Task</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"left-auto\\\">\\n            <div *ngIf=\\\"filter.userName || filter.role || filter.taskPriority\\\" class=\\\"filter-container mr15\\\">\\n                <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n                    <button mat-button >CLEAR FILTER</button>\\n                </div>\\n            </div>\\n            <div class=\\\"tabs right-tab none-af\\\">\\n                <ul>\\n                    <li><a class=\\\"pr40 inprocess\\\" [ngClass]= \\\"{'tab-active' : filter.status==1}\\\" (click)=\\\"filter.status=1;check(filter.status)\\\">InProcess<span  class=\\\"counter\\\">{{inprocess}}</span></a></li>\\n                    <li><a class=\\\"pr40 complete\\\" [ngClass]= \\\"{'tab-active' : filter.status==2}\\\" (click)=\\\"filter.status=2;check(filter.status)\\\">Completed <span  class=\\\"counter\\\">{{completed}}</span></a></li>\\n                    <li><a class=\\\"pr40 reopen\\\" [ngClass]= \\\"{'tab-active' : filter.status==3}\\\" (click)=\\\"filter.status=3;check(filter.status)\\\">Reopen <span  class=\\\"counter\\\">{{reopen}}</span></a></li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"container-outer pt0\\\">\\n        <div class=\\\"container\\\" >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col s12\\\">\\n                    <div class=\\\"cs-table left-right-20\\\">\\n                        <div class=\\\"sticky-head\\\">\\n                            <div class=\\\"table-head\\\">\\n                                <table  class=\\\"sno-border\\\">\\n                                    <tr>\\n                                        <th class=\\\"w30\\\">&nbsp;</th>\\n                                        <th class=\\\"w110\\\">Date</th>\\n                                        <th class=\\\"w180\\\" *ngIf=\\\"filter.assignedToMe==false\\\">Name</th>\\n                                        <th *ngIf=\\\"userType!=2\\\" class=\\\"w180\\\">Role</th>\\n                                        <th>Company Name</th>\\n                                        <th *ngIf=\\\"filter.assignedToMe==true\\\" class=\\\"w220\\\">Created By</th>\\n                                        <th class=\\\"w140\\\">Completed by</th>\\n                                        <th class=\\\"w170\\\">Critical</th>\\n                                        <!-- <th class=\\\"w110\\\">Status</th> -->\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                            \\n                            <div class=\\\"table-head bdrt\\\">\\n                                <table class=\\\"sno-border\\\">\\n                                    <tr>\\n                                        <th class=\\\"w30\\\">&nbsp;</th>\\n                                        <th class=\\\"w110\\\">&nbsp;</th>\\n                                        <th class=\\\"w180\\\"  *ngIf=\\\"filter.assignedToMe==false\\\">\\n                                            <div class=\\\"th-search\\\">\\n                                                <input type=\\\"text\\\" (keyup)=\\\"taskList()\\\" name=\\\"userName\\\" #userName=\\\"ngModel\\\" [(ngModel)]=\\\"filter.userName\\\" placeholder=\\\"Search....\\\">\\n                                            </div>\\n                                        </th>\\n                                        <th *ngIf=\\\"userType!=2\\\" class=\\\"w180\\\">\\n                                            <div class=\\\"th-search\\\" >\\n                                                <mat-select placeholder=\\\"Select role\\\" id=\\\"role\\\" name=\\\"status\\\" [(ngModel)]=\\\"filter.role\\\" #role=\\\"ngModel\\\">\\n                                                    <mat-option value=\\\"\\\" (click)=\\\"taskList()\\\">All</mat-option>\\n                                                    <mat-option value=\\\"6\\\" (click)=\\\"taskList()\\\">National Maneger</mat-option>\\n                                                    <mat-option value=\\\"7\\\" (click)=\\\"taskList()\\\">Reginal Maneger</mat-option>\\n                                                    <mat-option value=\\\"8\\\" (click)=\\\"taskList()\\\">Area Maneger</mat-option>\\n                                                    <mat-option value=\\\"10\\\" (click)=\\\"taskList()\\\">Territory Incharge</mat-option>\\n                                                </mat-select>\\n                                            </div>\\n                                        </th>\\n                                        <th >&nbsp;</th>\\n                                        <th *ngIf=\\\"filter.assignedToMe==true\\\" class=\\\"w220\\\">&nbsp;</th>\\n                                        <th class=\\\"w140\\\">&nbsp;</th>\\n                                        \\n                                        <th class=\\\"w170\\\">\\n                                            <div class=\\\"th-search\\\" >\\n                                                <mat-select placeholder=\\\"Select Task Priority\\\" id=\\\"taskPriority\\\" name=\\\"taskPriority\\\" [(ngModel)]=\\\"filter.taskPriority\\\" #taskPriority=\\\"ngModel\\\">\\n                                                    <mat-option value=\\\"\\\" (click)=\\\"taskList()\\\">All</mat-option>\\n                                                    <mat-option value=\\\"1\\\" (click)=\\\"taskList()\\\">Currently Critical</mat-option>\\n                                                    <mat-option value=\\\"2\\\" (click)=\\\"taskList()\\\">Potentially Critical</mat-option>\\n                                                    <mat-option value=\\\"3\\\" (click)=\\\"taskList()\\\">Necessary</mat-option>\\n                                                    <mat-option value=\\\"4\\\" (click)=\\\"taskList()\\\">Recommended</mat-option>\\n                                                </mat-select>\\n                                            </div>\\n                                        </th>\\n                                        <!-- <th class=\\\"w110\\\">\\n                                            <div class=\\\"th-search\\\" >\\n                                                <mat-select placeholder=\\\"Select status\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"filter.status\\\" #status=\\\"ngModel\\\">\\n                                                    <mat-option value=\\\"\\\" (click)=\\\"taskList()\\\">All</mat-option>\\n                                                    <mat-option value=\\\"1\\\" (click)=\\\"taskList()\\\">InProcess</mat-option>\\n                                                    <mat-option value=\\\"2\\\" (click)=\\\"taskList()\\\">Completed</mat-option>\\n                                                    <mat-option value=\\\"3\\\" (click)=\\\"taskList()\\\">Reopen</mat-option>\\n                                                </mat-select>\\n                                            </div>\\n                                        </th> -->\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"table-container \\\">\\n                            <div class=\\\"table-content\\\">\\n                                <table class=\\\"sno-border\\\">\\n                                    <tr *ngFor=\\\"let task of tasklist;let i=index\\\">\\n                                        <td class=\\\"w30 text-center\\\">{{i+1}}</td>\\n                                        <td class=\\\"w110\\\">{{task.createdOn|date :'MMMM d, y'}} </td>\\n                                        <td class=\\\"w180\\\" *ngIf=\\\"filter.assignedToMe==false\\\">\\n                                            <a class=\\\"link-btn\\\" *ngIf=\\\"filter.assignedToMe==false\\\" (click)=\\\"goToDetail(task.taskId)\\\">{{task.userName}} </a>\\n                                        </td>\\n                                        <td *ngIf=\\\"userType!=2\\\" class=\\\"w180\\\">\\n                                            <span *ngIf=\\\"task.role==6\\\">National Maneger</span>\\n                                            <span *ngIf=\\\"task.role==7\\\">Reginal Maneger</span>\\n                                            <span *ngIf=\\\"task.role==8\\\">Area Maneger</span>\\n                                            <span *ngIf=\\\"task.role==10\\\">Territory Incharge</span>\\n                                        </td>\\n                                        <td >\\n                                            <span *ngIf=\\\"task.leadEstablishment!=''\\\">{{task.leadEstablishment}}</span>\\n                                        </td>\\n                                        <td *ngIf=\\\"filter.assignedToMe==true\\\" class=\\\"w220\\\">{{task.createdByName}}</td>\\n                                        <td class=\\\"w140\\\">{{task.deadline|date :' MMMM d, y'}}</td>\\n                                        <td class=\\\"w170\\\">\\n                                            <span *ngIf=\\\"task.taskPriority==1\\\">Currently Critical</span>\\n                                            <span *ngIf=\\\"task.taskPriority==2\\\">Potentially Critical</span>\\n                                            <span *ngIf=\\\"task.taskPriority==3\\\">Necessary</span>\\n                                            <span *ngIf=\\\"task.taskPriority==4\\\">Recommended</span>\\n                                            <div class=\\\"action-btns\\\">\\n                                                <a mat-button class=\\\"view\\\" (click)=\\\"goToDetail(task.taskId)\\\"><i class=\\\"material-icons\\\"  >remove_red_eye</i> View</a>\\n                                            </div>\\n                                        </td>\\n                                        <!-- <td class=\\\"w110 text-center yellow-clr\\\">{{task.taskStatusName}}\\n                                            <div class=\\\"action-btns\\\">\\n                                                <a mat-button class=\\\"view\\\" (click)=\\\"goToDetail(task.taskId)\\\"><i class=\\\"material-icons\\\"  >remove_red_eye</i> View</a>\\n                                            </div>\\n                                        </td> -->\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n            <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n                <div class=\\\"outer\\\">\\n                    <div class=\\\"iinear\\\">\\n                        <div class=\\\"figure\\\" matRipple>\\n                            <div class=\\\"header\\\">\\n                                <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                            </div>\\n                            <div class=\\\"description\\\">\\n                                <div class=\\\"img\\\">\\n                                    <i class=\\\"material-icons\\\">error_outline</i>\\n                                </div>\\n                                <div class=\\\"psc\\\">\\n                                    <p>data not available</p>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n        </div>\\n    </div>\\n    \\n    <div *ngIf=\\\"userRole==1 || (userType==2 && userRole != 10)\\\" class=\\\"fixed-multibtn-botm\\\">\\n        <ul>\\n            <li><a  matTooltip=\\\"Add New\\\" matRipple><i class=\\\"material-icons\\\" routerLink=\\\"/add-task\\\" routerLinkActive=\\\"active\\\" >add</i></a></li>\\n        </ul>\\n    </div>\\n    \\n</div>\\n\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport { ifStmt } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html'\n})\nexport class TaskListComponent implements OnInit {\n\n  user:any={};\n  userType:any;\n  userId:any;\n  userRole:any;\n  loader:any=false;\n  filterarray:any=[];\n  filter:any={};\n  div:any=false;\n  // assignedToMe:any=true;\n  // name:any;\n  // tasktype:any;\n  // nettype:any;\n  constructor(public db:ConstantService,public router:Router,public dialog:DialogComponent) {\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    \n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    console.log(this.userRole);\n    if(this.userRole==1){\n          this.filter.assignedToMe=false;\n          console.log(this.filter.assignedToMe);\n        }else{\n      this.filter.assignedToMe=true;\n      console.log(this.filter.assignedToMe);\n    }\n    if(this.user)\n    {\n      if(this.userType)\n      {\n        setTimeout(() => {\n          this.taskList();\n        }, 500);\n      }\n    }\n  }\n  tasklist:any=[];\n  rolelists:any=[];\n  rolelistsales1:any=[];\n  ngOnInit() {\n  this.filter.status=1;\n  }\n\n\n  clearfilter(){\n    const activitydata2 = JSON.parse(JSON.stringify(this.filter));\n    delete activitydata2['role'];\n        delete activitydata2['userName'];\n        delete activitydata2['taskPriority'];\n        console.log(activitydata2);\n    this.filter=activitydata2;\n    this.taskList();\n  }\n  rolelist(){\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.rolelists=response['data'];\n      this.taskList();\n      let filterrolesales= this.rolelists.filter(x => x.userTypeId==3);\n      this.rolelistsales1=filterrolesales[0].roles;\n      console.log(this.rolelistsales1);\n    });\n  }\n\n  resquestData:any={};\n  tmp_task:any=[];\n  inprocess:any;\n  completed:any;\n  reopen:any;\ntaskList()\n{\n  console.log(this.filter.role);\n  this.div=false;\n  this.loader=true;\n  let apiURL;\nconsole.log(this.filter.assignedToMe);\n  \n  if(this.userRole==1)\n  {\n    console.log(\"admin task list\");\n    this.resquestData={'taskPriority':this.filter.taskPriority,'role':this.filter.role,'userName':this.filter.userName,'establishmentName':this.filter.companyname,'taskType':this.filter.tasktype,'currentPage': 1,'pageSize': 50}\n    apiURL=\"admintask/list\"\n    \n  }\n if(this.filter.assignedToMe==true){\n    console.log(\"assigned to me working\");\n    this.resquestData={'taskPriority':this.filter.taskPriority,'role':this.filter.role,'userName':this.filter.userName,'establishmentName':this.filter.companyname,'taskType':this.filter.tasktype,'currentPage': 1,'pageSize': 50}\n    apiURL=\"mytask/list\"\n  }\n  if(this.filter.assignedByMe==true)\n  {\n    console.log(\"assigned by me\");\n    this.resquestData={'createdBy':this.userId,'taskPriority':this.filter.taskPriority,'role':this.filter.role,'userName':this.filter.userName,'establishmentName':this.filter.companyname,'taskType':this.filter.tasktype,'currentPage': 1,'pageSize': 50}\n    apiURL=\"taskbyme/list\"\n  }\n  if(this.filter.junoiourtask==true){\n    console.log(\"juniour task working in esle loop\");\n    this.resquestData={'taskPriority':this.filter.taskPriority,'role':this.filter.role,'userName':this.filter.userName,'establishmentName':this.filter.companyname,'taskType':this.filter.tasktype,'currentPage': 1,'pageSize': 50}\n    apiURL=\"juniourstask/list\"\n  }\n  console.log(this.filter.status);\n  this.db.fetchData(this.resquestData,apiURL).subscribe((response)=>{\n      this.loader=false;\n    console.log(response);\n    if(response['status']=='Success'){\n      this.tasklist=response['data'];\n      this.filterarray=this.tasklist;\n    }\n    if(response['status']=='Failed')\n    {\n      this.tasklist=[];\n      this.filterarray=[];\n      this.div=true;\n    }\n    console.log(this.tasklist);\n      let inprocesscount= this.tasklist.filter(x => x.taskStatus==1);\n      this.inprocess=inprocesscount.length;\n      console.log(this.inprocess);\n      let inprocesscount2= this.tasklist.filter(x => x.taskStatus==2);\n      this.completed=inprocesscount2.length;\n      console.log(this.completed);\n      let inprocesscount3= this.tasklist.filter(x => x.taskStatus==3);\n      this.reopen=inprocesscount3.length;\n      console.log(this.reopen);\n    for(let i=0;i<this.tasklist.length;i++){   \n       for(let j=0;j<this.rolelistsales1.length;j++){\n         if(this.tasklist[i].role==this.rolelistsales1[j].roleId)\n         {\n          console.log(this.tasklist[i].role,this.rolelistsales1[j].roleId);\n           this.tasklist[i].rolename=this.rolelistsales1[j].roleName;\n           console.log(this.tasklist[i].rolename);\n         }\n       }\n   }\n   this.check(this.filter.status);\n  })\n// else{\n//   this.loader=true;\n//   this.db.fetchData({'taskStatus':this.filter.taskStatus,'establishmentName':this.filter.companyname,'role': this.filter.nettype,'taskType':this.filter.tasktype,'currentPage': 1,'pageSize': 50},'task/list').subscribe((response)=>{\n//       this.loader=false;\n//     console.log(response);\n//     this.tasklist=response['data'];\n//     for(let i=0;i<this.tasklist.length;i++){\n//        for(let j=0;j<this.rolelistsales1.length;j++){\n//         // console.log(this.tasklist[i].role,this.rolelistsales1[j].roleId);\n//          if(this.tasklist[i].role==this.rolelistsales1[j].roleId)\n//          {\n//           console.log(this.tasklist[i].role,this.rolelistsales1[j].roleId);\n//            this.tasklist[i].rolename=this.rolelistsales1[j].roleName;\n//            console.log(this.tasklist[i].rolename);\n//          }\n//        }\n//    }\n//   })\n\n// }\n}\n\ncheck(status){\nconsole.log(status);\nlet inprocesscount2= this.filterarray.filter(x => x.taskStatus==status);\n      this.tmp_task=inprocesscount2;\n      console.log(this.tmp_task);\n      this.tasklist=this.tmp_task;\n}\n\n\ngoToDetail(id)\n{\n  console.log(\"hello\");\n  \n  this.router.navigate(['/task-detail/'+id])\n}\n\ndeleteTask(id)\n{\n  \n  this.dialog.delete('Sales User  !').then((result) => {\n    if(result)\n    {\n      this.db.fileData(\"\",\"task/delete/\"+id).subscribe((result)=>{\n        console.log(result);\n        if(result['status']=='Success')\n        {\n          this.taskList();\n        }\n      })\n    }})\n}\n\n// usertaskList()\n// {\n// this.loader=true;\n//   this.db.fetchData({\"userId\":this.userId},'task/list').subscribe((response)=>{\n//     setTimeout (() => {\n//       this.loader=false;\n//   }, 700);\n//     if(response['status']==\"Success\")\n//     {\n//       this.tasklist=response['data'];\n//       for(let i=0;i<this.tasklist.length;i++){\n//          for(let j=0;j<this.rolelistsales1.length;j++){\n//           console.log(this.tasklist[i].role,this.rolelistsales1[j].roleId);\n//            if(this.tasklist[i].role==this.rolelistsales1[j].roleId)\n//            {\n//             console.log(this.tasklist[i].role,this.rolelistsales1[j].roleId);\n//              this.tasklist[i].rolename=this.rolelistsales1[j].roleName;\n//              console.log(this.tasklist[i].rolename);\n//            }\n//          }\n//      }\n//     }\n   \n//   })\n// }\n}\n","module.exports = \"<style>\\n   .mat-dialog-content\\n  {\\n    overflow: inherit !important;\\n  }\\n</style>\\n\\n\\n<div *ngIf=\\\"loader\\\"> \\n  <div class=\\\"cs-loader\\\">\\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n  </div>\\n</div>\\n\\n<div class=\\\"edit-modal\\\">\\n  \\n  <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updateTerritoryData()\\\"  #f=\\\"ngForm\\\" novalidate>\\n    \\n    <div mat-dialog-content class=\\\"h300\\\">\\n      \\n      <p class=\\\"heading\\\">Update {{data.popupType}}</p>\\n      \\n      <div class=\\\"from-fields\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s6\\\">\\n            <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input select-input\\\">\\n                \\n                <mat-select placeholder=\\\"Select Segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"data.segment\\\" #segment=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && segment.invalid }\\\" multiple required>\\n                  \\n                  <mat-option (click)=\\\"getSegmentChangeHandler()\\\" value=\\\"{{segment.text}}\\\"  *ngFor='let segment of data.allSegmentList'>{{segment.text}}</mat-option>\\n                  \\n                </mat-select>\\n                \\n              </mat-form-field>\\n              \\n              <mat-error *ngIf=\\\"f.submitted && segment.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <mat-error *ngIf=\\\"segment.errors.required\\\">Segment is required</mat-error>\\n              </mat-error>\\n            </div>\\n            \\n          </div>\\n          \\n          <div class=\\\"col s6\\\">\\n            <div class=\\\"control-field\\\">\\n              \\n              <mat-form-field class=\\\"cs-input\\\">\\n                \\n                <mat-select placeholder=\\\"Select Sales Role\\\" name=\\\"selectRoleArr\\\" [(ngModel)]=\\\"data.roleSelected\\\" #selectRoleArr=\\\"ngModel\\\">\\n                  \\n                  <mat-option disabled value=\\\"\\\">Select an Option</mat-option>\\n                  \\n                  <span *ngFor='let list of data.userRolesArr'>\\n                    \\n                    <mat-option *ngIf=\\\"list.roleId != 6\\\" (click)=\\\"getRoleWiseUserList(list.roleId, data.segment, 'onForm')\\\" [value]=\\\"list.roleId\\\">{{list.roleName}}</mat-option>\\n                    \\n                  </span>\\n                  \\n                </mat-select>\\n                \\n              </mat-form-field>\\n              \\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"control-field\\\">\\n              <div class=\\\"multi-all-select\\\">\\n                <label>Users</label>\\n              <ng-multiselect-dropdown\\n              [placeholder]=\\\"'Select Sales User'\\\"\\n              [data]=\\\"salesNetworkData\\\"\\n              [(ngModel)]=\\\"data.salesUsers\\\"\\n              name=\\\"salesUser\\\"\\n              #salesUser=\\\"ngModel\\\"\\n              [settings]=\\\"dropdownSettings\\\">\\n            </ng-multiselect-dropdown>\\n          </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n    <button style=\\\"color: #fff;\\\" mat-raised-button color=\\\"accent\\\" >Save</button>\\n  </div>\\n  \\n</form>\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { Select2OptionData } from 'ng2-select2';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\n\n@Component({\n  selector: 'app-place-modal',\n  templateUrl: './place-modal.component.html'\n})\nexport class PlaceModalComponent implements OnInit {\n\n  public salesNetworkData: Array<Select2OptionData>;\n  dropdownSettings:any = {};\n  loader: boolean;\n\n  data:any = {};\n\n  constructor(public dialogRef: MatDialogRef<PlaceModalComponent>, @Inject(MAT_DIALOG_DATA) public popUpData:any, public db: ConstantService, public toast: SnackBarOverview,) { \n\n      console.log(popUpData);\n\n      this.data = popUpData;\n\n      this.data.segment = this.data.segments;\n\n      if(this.data.salesUsers.length > 0) {\n\n           this.data.roleSelected = this.data.salesUsers[0].role;\n           this.getRoleWiseUserList(this.data.salesUsers[0].role, this.data.segments, 'onLoad');\n           console.log(this.data.roleSelected);\n      }\n  }\n\n  ngOnInit() {\n\n\n    this.dropdownSettings = {\n        singleSelection: false,\n        idField: 'userId',\n        textField: 'userName',\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        allowSearchFilter: true,\n        maxHeight: 197\n    };\n\n  }\n\n  getSegmentChangeHandler() {\n\n      console.log(this.data.segment);\n      console.log(this.data.salesUsers);\n\n      if (this.data.segment.length == 0) {\n\n            this.data.roleSelected = '';\n            this.salesNetworkData = [];\n            this.data.salesUsers = [];\n      }\n\n      if (this.data.segment.length > 0 && this.data.roleSelected) {\n            this.getRoleWiseUserList(this.data.roleSelected, this.data.segment, 'onForm');\n      }\n  }\n\n\n  getRoleWiseUserList(userRoleId, segmentList, target) {\n\n        // this.loader = true;\n\n        console.log(segmentList);\n\n        this.salesNetworkData = [];\n\n        if(target == 'onForm') {\n\n           this.data.salesUsers = [];\n        }\n        \n        this.db.fetchData(\n        {\n            'userType': 2,\n            'role': userRoleId,\n            'segments': segmentList,\n            'currentPage': 1,\n            'pageSize': 200\n\n        }, 'user/list').subscribe((response: any) => {\n\n            console.log(response);\n            // this.loader = false;\n\n            if (response.data) {\n                \n                    const salesData = [];\n\n                    for (let index = 0; index < response.data.length; index++) {\n\n                        salesData.push({userId : response.data[index].userId, userName: response.data[index].userName + ' / ' + response.data[index].cityOffice, cityOffice: response.data[index].cityOffice});\n                    }\n\n                    this.salesNetworkData = salesData;\n                    console.log(this.salesNetworkData);\n            }\n\n            console.log(this.salesNetworkData);\n        });\n  }\n\n\n  updateTerritoryData() {\n\n        console.log(\"submit\");\n\n        if (!this.data.segment || this.data.segment.length == 0) {\n            return;\n        }\n\n        const userArr = [];\n\n        console.log(this.data.salesUsers);\n\n        if(this.data.salesUsers && this.data.salesUsers.length > 0) {\n\n            for (let index = 0; index < this.data.salesUsers.length; index++) {\n                userArr.push(this.data.salesUsers[index].userId);\n            }\n        }\n        \n        \n        console.log(userArr);\n\n        this.loader = true;\n\n        let callApiObject = {'territoryID': this.data.territoryID, 'segments': this.data.segment, 'salesUsers': userArr};\n\n        let callApiUrl = 'territory/update';\n\n        console.log(callApiObject);\n        console.log(callApiUrl);\n\n        this.db.fetchData(callApiObject, callApiUrl)\n        .subscribe((response: any) => {\n              console.log(response);\n              this.loader = false;\n              this.dialogRef.close();\n              this.toast.openSucess('Territory Updated Sucessfully!', '');\n        });\n  }\n\n\n\n  closeModel() {\n\n      this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"main-container\\\">\\n  \\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        \\n        <div  class=\\\"back-btn\\\">\\n          <a *ngIf=\\\"!isDetailPincodeBtnClicked\\\"  mat-button routerLink=\\\"/territory-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n          \\n          <a *ngIf=\\\"isDetailPincodeBtnClicked\\\" mat-button (click)=\\\"isDetailPincodeBtnClicked = false\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        \\n        <h2 *ngIf=\\\"territoryId != '0'\\\">{{existingTerritoryArr.territoryName}}</h2>\\n        <!--  <p *ngIf=\\\"territoryId != '0'\\\" class=\\\"light\\\">{{existingTerritoryArr.pinCodesCount}} Pincode</p> -->\\n        \\n        <h2 *ngIf=\\\"territoryId == '0'\\\">Postal / Territory Master</h2>\\n        <p *ngIf=\\\"territoryId == '0'\\\">{{territoryId != '0' ? 'Update Territory Pincodes' : 'Create New Territory'}}</p>\\n        \\n      </div>\\n    </div>\\n    \\n    <div class=\\\"left-auto\\\">\\n      <div class=\\\"cs-btn text-right\\\">\\n        <div class=\\\"in-btn\\\">\\n          <a mat-raised-button color=\\\"accent\\\" *ngIf=\\\"territoryId != '0' && !isDetailPincodeBtnClicked\\\" (click)=\\\"emptyFinalPincodeArr()\\\">Add Pincodes</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div *ngIf=\\\"territoryId != '0' && !isDetailPincodeBtnClicked\\\" class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"basic-details pb0\\\" >\\n              <a mat-button class=\\\"hov-action\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\" (click)=\\\"openDialog()\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n              <div class=\\\"profile-info\\\">\\n                <ul>\\n                  <li class=\\\"col s3\\\">\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/map-location.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Name</span>\\n                      <p>{{existingTerritoryArr.territoryName}}</p>\\n                    </div>\\n                  </li>\\n                  <li  class=\\\"col s8\\\">\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/segment.svg\\\" class=\\\"fix-img h20\\\">\\n                      <span>Segment</span>\\n                      <!-- <p>0129 625874</p> -->\\n                      <ul class=\\\"segment-code\\\">\\n                        <li >\\n                          <span *ngFor=\\\"let val of existingTerritoryArr.segments\\\">{{val}}\\n                            <!-- <a><i class=\\\"material-icons\\\">delete_sweep</i></a> -->\\n                          </span>\\n                        </li>\\n                      </ul>\\n                      \\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n              <mat-divider class=\\\"mt15 mb15\\\"></mat-divider>\\n              <div class=\\\"col s12 padding0\\\">\\n                <div class=\\\"add-field user-heading mb5\\\">\\n                  <div class=\\\"heading\\\">\\n                    <h2 class=\\\"grey-clr\\\">Assign Users</h2>\\n                  </div>\\n                </div>\\n                <div class=\\\"cs-figure field-figure\\\">\\n                  <ul>\\n                    <li *ngFor=\\\"let list of existingTerritoryArr.salesUsers\\\">\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <p>{{list.userName}}</p>\\n                          <span *ngIf=\\\"list.role == '10'\\\">Territory Incharge</span>\\n                          <span *ngIf=\\\"list.role == '8'\\\">ASM</span>\\n                          <span *ngIf=\\\"list.role == '7'\\\">RSM</span>\\n                        </div>\\n                        <!-- <a class=\\\"del-btn\\\" matRipple ><i class=\\\"material-icons\\\">delete_sweep</i></a> -->\\n                      </div>\\n                    </li>\\n                  </ul>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col {{isCityClicked ? 's8' : 's12'}}\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>Pincode Description</h2>\\n                <!-- <div class=\\\"top-search wp30 ml20 right-serach\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"data.detailDescriptionSearch\\\" placeholder=\\\"SEARCH. . .\\\">\\n                  <i class=\\\"material-icons\\\">search</i>\\n                </div> -->\\n              </div>\\n              \\n              <div class=\\\"state-table\\\">\\n                \\n                <table *ngFor=\\\"let list of existingTerritoryArr.states\\\">\\n                  \\n                  <tr>\\n                    <td>\\n                      <table>\\n                        <tr>\\n                          <td>\\n                            {{list.stateName}}\\n                            <a (click) = \\\"territoryStateDelete(list.stateName)\\\" class=\\\"del-btn\\\">Delete</a>\\n                          </td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                  </tr>\\n                  \\n                  <tr>\\n                    \\n                    <td>\\n                      <table>\\n                        \\n                        <tr *ngFor=\\\"let districtList of list.distrcits\\\">\\n                          \\n                          <td class=\\\"w250\\\">\\n                            {{districtList.districtName}}\\n                          </td>\\n                          \\n                          <td class=\\\"pb0\\\">\\n                            <ul class=\\\"area-code\\\">\\n                              <li (click)=\\\"detailCityClickHandler(cityList.stateMasterId)\\\" class=\\\"{{cityList.checked ? 'active' : ''}}\\\" *ngFor=\\\"let cityList of districtList.cities\\\" >\\n                                <a>{{cityList.cityName}} <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                            </ul>\\n                          </td>\\n                          \\n                        </tr>\\n                        \\n                      </table>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"col s4 right-sticky {{isCityClicked ? '' : 'ds-none'}}\\\">\\n          <div class=\\\"territory-info\\\">\\n            \\n            <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.districts==true}\\\" style=\\\"padding: 13px 15px;\\\">\\n              <h2>{{clickedCityDetail.stateName}} / {{clickedCityDetail.districtName}}</h2>\\n              <!--  <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('districts','open')\\\"  matRipple style=\\\"right: 15px;\\\">search</i> -->\\n              <!--   <input type=\\\"text\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\"> -->\\n              <!--    <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('districts','close')\\\" matRipple>clear</i> -->\\n            </div>\\n            \\n            <div class=\\\"cs-checkbox\\\">\\n              <div class=\\\"checkbox-outer auto-height-scroll\\\">\\n                <p class=\\\"head-cs\\\">{{clickedCityDetail.cityName}}</p>\\n                <section class=\\\"checkbox-inner\\\">\\n                  <div class=\\\"cs-table\\\">\\n                    <div class=\\\"table-head sticky-small\\\">\\n                      <table class=\\\"sno-border\\\">\\n                        <tr>\\n                          <th class=\\\"w30\\\">&nbsp;</th>\\n                          <th>Pincode</th>\\n                          <!-- <th class=\\\"w50\\\">&nbsp;</th> -->\\n                        </tr>\\n                      </table>\\n                    </div>\\n                    \\n                    <div class=\\\"table-container\\\">\\n                      <div class=\\\"table-content\\\">\\n                        <table class=\\\"sno-border\\\">\\n                          <tr *ngFor=\\\"let val of clickedCityDetail.pincodeArr; let pincodeIndex = index\\\">\\n                            <td class=\\\"w30\\\">{{pincodeIndex + 1}}</td>\\n                            <td>{{val}}</td>\\n                            <!-- <td class=\\\"w50\\\" matRipple><a class=\\\"pointer\\\"><i class=\\\"material-icons red-clr\\\">delete_sweep</i></a></td> -->\\n                          </tr>\\n                        </table>\\n                      </div>\\n                    </div>\\n                    \\n                  </div>\\n                </section>\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  \\n  <!-- Add Pincode HTML Start -->\\n  \\n  <div *ngIf=\\\"territoryId == '0' || isDetailPincodeBtnClicked\\\" class=\\\"container-outer\\\">\\n    <!-- <app-master-tab></app-master-tab> -->\\n    \\n    <!-- <div class=\\\"container tab-container\\\" > -->\\n      <div class=\\\"row\\\">\\n        <form name=\\\"form\\\" #f=\\\"ngForm\\\" novalidate>\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>{{isDetailPincodeBtnClicked ? 'UPDATE TERRITORY PINCODES' : 'CREATE TERRITORY'}}</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>          \\n              \\n              <div [hidden]=\\\"isDetailPincodeBtnClicked\\\" class=\\\"from-fields\\\">\\n                <div class=\\\"row mt5\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\" [ngClass]=\\\"{ 'has-error': !territory_form.name && f.submitted }\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8 \\\">\\n                        <input matInput [(ngModel)]=\\\"data.territory\\\" placeholder=\\\"Territory Name\\\" name=\\\"territory\\\" #territory=\\\"ngModel\\\" id=\\\"territoryName\\\" [ngClass]=\\\"{ 'is-invalid':  territory.invalid }\\\" [required]=\\\"!isDetailPincodeBtnClicked\\\">\\n                      </mat-form-field>\\n                      \\n                      \\n                      <mat-error *ngIf=\\\"!isDetailPincodeBtnClicked && territory.invalid && territory.errors.required\\\" class=\\\"invalid-feedback\\\">*Territory Required!</mat-error>\\n                      \\n                    </div>\\n                    \\n                  </div>\\n                  \\n                  <div class=\\\"col s4\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <div class=\\\"multi-all-select\\\">\\n                        <label >Select Segment</label>\\n                        <ng-multiselect-dropdown\\n                        [placeholder]=\\\"'Select Segment'\\\"\\n                        [data]=\\\"segmentlist\\\"\\n                        [(ngModel)]=\\\"data.segment\\\"\\n                        name=\\\"segment\\\"\\n                        #selectRoleArr=\\\"ngModel\\\"\\n                        [settings]=\\\"segmentDropdownSettings\\\"\\n                        (onSelect)=\\\"getSegmentChangeHandler()\\\"\\n                        (onDeSelect)=\\\"getSegmentChangeHandler()\\\"\\n                        (onDeSelectAll)=\\\"getSegmentChangeHandler()\\\"\\n                        (onSelectAll)=\\\"getSegmentChangeHandler()\\\">\\n                      </ng-multiselect-dropdown>\\n                    </div>\\n                    \\n                    <mat-error *ngIf=\\\"!isDetailPincodeBtnClicked && (!data.segment || data.segment.length == 0)\\\" class=\\\"invalid-feedback\\\">\\n                      Segment is required</mat-error>\\n                      \\n                      <!-- <mat-form-field class=\\\"cs-input infix-bodr8 \\\">\\n                        \\n                        <mat-select placeholder=\\\"Select Segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"data.segment\\\" #segment=\\\"ngModel\\\" id=\\\"segmentName\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && segment.invalid }\\\" multiple [required]=\\\"!isDetailPincodeBtnClicked\\\">\\n                          <mat-option (click)=\\\"getSegmentChangeHandler()\\\" value=\\\"{{segment.text}}\\\"  *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field> -->\\n                      \\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s4 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <!-- <mat-form-field *ngIf=\\\"data.segment && data.segment.length > 0\\\" class=\\\"cs-input infix-bodr8\\\"> -->\\n                        <div class=\\\"multi-all-select\\\">\\n                          <label >Select Sales Role</label>\\n                          <ng-multiselect-dropdown\\n                          [placeholder]=\\\"'Select Sales Role'\\\"\\n                          [data]=\\\"userRolesArr\\\"\\n                          [(ngModel)]=\\\"data.roleSelected\\\"\\n                          name=\\\"selectRoleArr\\\"\\n                          #selectRoleArr=\\\"ngModel\\\"\\n                          [settings]=\\\"rolesDropdownSettings\\\"\\n                          (onSelect)=\\\"onItemSelect($event)\\\"\\n                          (onDeSelect)=\\\"onItemDeselect($event)\\\"\\n                          (onDeSelectAll)=\\\"onItemDeselectAll($event)\\\"\\n                          (onSelectAll)=\\\"onSelectAll($event)\\\">\\n                        </ng-multiselect-dropdown>\\n                      </div>\\n                      \\n                      \\n                      <!-- <mat-select placeholder=\\\"Select Sales Role\\\" name=\\\"selectRoleArr\\\" [(ngModel)]=\\\"data.roleSelected\\\" #selectRoleArr=\\\"ngModel\\\">\\n                        <mat-option disabled value=\\\"\\\">Select an Option</mat-option>\\n                        <span *ngFor='let list of userRolesArr'>\\n                          <mat-option *ngIf=\\\"list.roleId != 6\\\" (click)=\\\"getRoleWiseUserList(list.roleId)\\\" [value]=\\\"list.roleId\\\">{{list.roleName}}</mat-option>\\n                        </span>\\n                      </mat-select> -->\\n                      <!-- </mat-form-field> -->\\n                    </div>\\n                  </div>\\n                  \\n                  \\n                </div>\\n                \\n                \\n                \\n                <div *ngIf=\\\"data.segment  && data.segment.length > 0\\\" class=\\\"row mt10\\\">\\n                  \\n                  <div class=\\\"col s4 pl0 \\\">\\n                    <div class=\\\"multi-all-select\\\">\\n                      <label >Sales User</label>\\n                      <ng-multiselect-dropdown\\n                      [placeholder]=\\\"'Select Sales User'\\\"\\n                      [data]=\\\"salesNetworkData\\\"\\n                      [(ngModel)]=\\\"data.salesUsers\\\"\\n                      name=\\\"salesUser\\\"\\n                      #salesUser=\\\"ngModel\\\"\\n                      [settings]=\\\"dropdownSettings\\\">\\n                    </ng-multiselect-dropdown>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n            </div>\\n            \\n            \\n            <div class=\\\"row mt15\\\">\\n              \\n              <div class=\\\"col s4 pl0\\\">\\n                <div class=\\\"territory-info\\\">\\n                  \\n                  <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.state==true}\\\">\\n                    <h2>STATE</h2>\\n                    \\n                    <!-- <mat-checkbox class=\\\"fix-check\\\"  (change)=\\\"selectall('st',$event)\\\">&nbsp;</mat-checkbox> -->\\n                    \\n                    <i class=\\\"material-icons search-icon right20\\\" (click)=\\\"toggleterritory('state','open')\\\"  matRipple>search</i>\\n                    \\n                    <input type=\\\"text\\\" id=\\\"state\\\" [(ngModel)]=\\\"data.stateSearch\\\" name=\\\"stateSearch\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                    \\n                    <i class=\\\"material-icons close-icon\\\" (click)=\\\"data.stateSearch='';toggleterritory('state','close')\\\" matRipple>clear</i>\\n                    \\n                  </div>\\n                  \\n                  <div class=\\\"cs-checkbox\\\">\\n                    <div class=\\\"checkbox-outer\\\">\\n                      <section class=\\\"checkbox-inner\\\">\\n                        \\n                        <ng-container *ngFor=\\\"let list of masterArr | myfilter:{src: 'territoryState', search: data.stateSearch};let stateIndex=index;\\\"> \\n                          \\n                          <mat-checkbox class=\\\"check-list\\\" (change)=\\\"getDistrictList(list.stateName, list.checked, false)\\\"\\n                          [(ngModel)] = \\\"list.checked\\\" name=\\\"{{list.stateName}}a\\\">{{list.stateName}}</mat-checkbox>\\n                          \\n                        </ng-container>\\n                      </section>\\n                    </div>\\n                    \\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"col s4\\\">\\n                <div class=\\\"territory-info\\\">\\n                  \\n                  <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.districts==true}\\\">\\n                    <h2>DISTRICTS</h2>\\n                    \\n                    <!-- <mat-checkbox class=\\\"fix-check\\\"  (change)=\\\"selectall('dst',$event)\\\">&nbsp;</mat-checkbox> -->\\n                    <i class=\\\"material-icons search-icon right20\\\" (click)=\\\"toggleterritory('districts','open')\\\"  matRipple>search</i>\\n                    \\n                    <input type=\\\"text\\\" id=\\\"districts\\\" [(ngModel)]=\\\"data.districtSearch\\\" name=\\\"districtSearch\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                    \\n                    <i class=\\\"material-icons close-icon\\\" (click)=\\\"data.districtSearch='';toggleterritory('districts','close')\\\" matRipple>clear</i>\\n                    \\n                  </div>\\n                  \\n                  <div *ngIf=\\\"!isAnyStateSelected\\\" class=\\\"not-data\\\">\\n                    <div class=\\\"inner-data\\\">\\n                      <p>No Data</p>\\n                    </div>\\n                  </div>\\n                  \\n                  <div *ngIf=\\\"isAnyStateSelected\\\" class=\\\"cs-checkbox\\\">\\n                    <div class=\\\"checkbox-outer\\\">\\n                      <section class=\\\"checkbox-inner\\\">\\n                        <ng-container *ngFor= \\\"let list of masterArr; let stateIndex=index\\\">\\n                          <span *ngIf=\\\"list.checked\\\">\\n                            <span [hidden]=\\\"data.districtSearch\\\">\\n                              <mat-checkbox [(ngModel)]=\\\"list.allChecked\\\" (change)=\\\"masterActionHandler('state', list.stateName, null, null, null, list.allChecked, null)\\\" class=\\\"check-list bg-list text-center\\\" name=\\\"{{list.stateName}}\\\" style=\\\"background:#eee;color: #111;\\\">{{list.stateName}}</mat-checkbox>\\n                            </span>\\n                            <mat-checkbox *ngFor= \\\"let districtRow of list.districtData | myfilter:{src: 'territoryDistrict', search: data.districtSearch}; let districtIndex=index\\\"  [(ngModel)]=\\\"districtRow.checked\\\" (change)=\\\"getCityList(list.stateName,districtRow.districtName,districtRow.checked, false, 'single')\\\" class=\\\"check-list\\\" name=\\\"{{districtRow.districtName}}bb\\\">{{districtRow.districtName}} {{data.districtSearch ? '('+list.stateName+')' : ''}}</mat-checkbox>              \\n                          </span>                                      \\n                        </ng-container>\\n                        \\n                      </section>\\n                    </div>\\n                    \\n                  </div>\\n                </div>\\n              </div> \\n              \\n              \\n              <div class=\\\"col s4 pr0\\\">\\n                <div class=\\\"territory-info\\\">\\n                  \\n                  <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.pincode==true}\\\">\\n                    <h2>AREA PINCODES</h2>\\n                    <span *ngIf=\\\"showSelectAll\\\">\\n                      <mat-checkbox class=\\\"fix-check\\\" [(ngModel)]=\\\"data.pincodeSelectAll\\\" (change)=\\\"getAllPincodeHandler(data.pincodeSelectAll)\\\" name=\\\"pincodeSelectAll\\\">&nbsp;</mat-checkbox>\\n                    </span>\\n                    <i class=\\\"material-icons search-icon right60\\\"  (click)=\\\"toggleterritory('pincode','open')\\\"  matRipple>search</i>\\n                    <input type=\\\"text\\\" id=\\\"pincode\\\" [(ngModel)]=\\\"data.citySearch\\\" name=\\\"citySearch\\\" placeholder=\\\"City Search...\\\" class=\\\"fix-search\\\">\\n                    <i class=\\\"material-icons close-icon\\\" (click)=\\\"data.citySearch='';toggleterritory('pincode','close')\\\" matRipple>clear</i>\\n                  </div>\\n                  \\n                  <div  *ngIf=\\\"!isAnyDistrictSelected\\\" class=\\\"not-data\\\">\\n                    <div class=\\\"inner-data\\\">\\n                      <p>No Data</p>\\n                    </div>\\n                  </div>\\n                  \\n                  <div  *ngIf=\\\"isAnyDistrictSelected\\\"  class=\\\"cs-checkbox\\\">\\n                    <div class=\\\"checkbox-outer\\\">\\n                      <section class=\\\"checkbox-inner\\\">\\n                        <ng-container *ngFor=\\\"let list of masterArr;let stateIndex=index;\\\">\\n                          \\n                          <span *ngIf=\\\"list.checked\\\">\\n                            \\n                            <ng-container *ngFor=\\\"let districtRow of list.districtData;let districtIndex=index;\\\">\\n                              \\n                              <span *ngIf=\\\"districtRow.checked\\\">\\n                                \\n                                <ng-container *ngFor=\\\"let cityRow of districtRow.cities  | myfilter:{src: 'territoryCity', search: data.citySearch}; let cityIndex=index;\\\">\\n                                  \\n                                  <div [hidden]=\\\"!data.citySearch && data.pincodeSearch\\\" style=\\\"position: relative;\\\">\\n                                    \\n                                    <mat-checkbox [(ngModel)]=\\\"cityRow.checked\\\" class=\\\"check-list bg-list text-center\\\" (change)=\\\"masterActionHandler('city', list.stateName, districtRow.districtName, cityRow.cityName, null, cityRow.checked, cityRow.stateMasterId)\\\" name=\\\"{{cityRow.cityName}}\\\" style=\\\"background:#eee;color: #111;\\\">{{cityRow.cityName}} ({{ districtRow.districtName}})</mat-checkbox> \\n                                    \\n                                    <!-- <a class=\\\"drop-icon\\\" (click)=\\\"drop_me = ( drop_me == cityIndex ) ? '-1': cityIndex \\\">&nbsp;</a> -->\\n                                  </div>\\n                                  \\n                                  <ng-container *ngFor=\\\"let pincodeRow of cityRow.pincodeArr | myfilter:{src: 'territoryPincode', cityArr: cityRow, search: data.pincodeSearch}; let pincodeIndex=index\\\" #pincodeExist>\\n                                    \\n                                    <mat-checkbox  class=\\\"check-list\\\" [(ngModel)]=\\\"pincodeRow.checked\\\"  name=\\\"{{pincodeRow.pincode}}\\\" (change)=\\\"masterActionHandler('pincode', list.stateName, districtRow.districtName, cityRow.cityName, pincodeRow.pincode, pincodeRow.checked, null)\\\">{{pincodeRow.pincode}} {{(!data.citySearch && data.pincodeSearch ? ' - ' + cityRow.cityName + ' (' + districtRow.districtName+ ')' : '')}}</mat-checkbox>\\n                                    \\n                                  </ng-container>\\n                                  \\n                                </ng-container>\\n                                \\n                              </span>\\n                              \\n                            </ng-container>\\n                            \\n                          </span>\\n                          \\n                        </ng-container>\\n                      </section>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div> \\n            </div>\\n            \\n            \\n            <mat-error *ngIf=\\\"data.pincodeEmpty\\\"  class=\\\"invalid-feedback\\\">\\n              *Atleast one Pincode Required!</mat-error>\\n              \\n            </div>\\n            \\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s12\\\">\\n                <div  class=\\\"cs-btn text-right mt15\\\">\\n                  <div class=\\\"in-btn\\\">\\n                    <button (click)=\\\"onFinalPinCodesHandler()\\\" type=\\\"button\\\" mat-raised-button color=\\\"accent\\\" >Add to Pincode List</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div *ngIf=\\\"(territoryId == '0' || (territoryId != '0' && isDetailPincodeBtnClicked)) && finalPincodesDetailArr.length > 0\\\"  class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2 class=\\\"pr40\\\">Selected Pincodes \\n                  <span class=\\\"counter-number\\\" style=\\\"text-align:right\\\">{{finalPincodesDetailArr.length}}</span>\\n                </h2> \\n                <div class=\\\"top-search ml50\\\">\\n                  <input type=\\\"text\\\" placeholder=\\\"SEARCH. . .\\\" [(ngModel)]=\\\"data.selectedPincodeSearch\\\" name=\\\"selectedPincodeSearch\\\" >\\n                  <i class=\\\"material-icons\\\">search</i>\\n                </div>\\n                <div class=\\\"action-menu\\\">\\n                  <button class=\\\"action-menu-btn\\\" mat-button [matMenuTriggerFor]=\\\"menu\\\"><i class=\\\"material-icons\\\">more_vert</i></button>\\n                  <mat-menu class=\\\"action-dropdown\\\" #menu=\\\"matMenu\\\">\\n                    <button disabled mat-menu-item class=\\\"alert-btn red-clr\\\" style=\\\"border-bottom: 1px solid #ccc;\\\">Delete Statewise</button>\\n                    <button mat-menu-item (click)=\\\"deleteSelectedPincode(stateName, '')\\\" *ngFor='let stateName of distinctSelectedState'>{{stateName}}</button>\\n                  </mat-menu>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"cs-table left-right-15 mt15\\\">\\n                <div class=\\\"table-head \\\">\\n                  <table>\\n                    <tr>\\n                      <th>State Name</th>\\n                      <th>District Name</th>\\n                      <th>City</th>\\n                      <th>Pincode</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                <div class=\\\"table-container height-scroll\\\">\\n                  <div class=\\\"table-content shadow-none\\\">\\n                    <table>\\n                      <tr *ngFor=\\\"let list of finalPincodesDetailArr | myfilter:{src: 'selectedPincodes', search: data.selectedPincodeSearch};\\\">\\n                        <td>{{list.stateName}}</td>\\n                        <td>{{list.districtName}}</td>\\n                        <td>{{list.cityName}}</td>\\n                        <td>\\n                          <div class=\\\"action-btns\\\">\\n                            <!-- <a mat-button class=\\\"view\\\" (click)=\\\"detailPlan(list.travelPlanID)\\\"><i class=\\\"material-icons\\\">remove_red_eye</i> View</a> -->\\n                            <button type=\\\"button\\\" mat-button class=\\\"delete\\\" (click)=\\\"deleteSelectedPincode('Pincode', list)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                          </div>\\n                          <span> {{list.pincode}}</span>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          \\n        </form>\\n        \\n        <div *ngIf=\\\"finalPincodesDetailArr.length > 0\\\" class=\\\"col s12\\\">\\n          <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n            <div *ngIf=\\\"territoryId != '0'\\\" class=\\\"in-btn mr15\\\">\\n              <button type=\\\"button\\\" (click)=\\\"isDetailPincodeBtnClicked = false\\\" type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">Cancel</button>\\n            </div>\\n            <div class=\\\"in-btn\\\">\\n              <button type=\\\"button\\\" (click)=\\\"save_territory()\\\" type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\">Save</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- </div> -->\\n    </div>\\n    \\n    \\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\\n  \\n  <!-- Add Pincode HTML END -->\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport * as $ from 'jquery';\nimport { Select2OptionData } from 'ng2-select2';\n\nimport {MatDialog, MatDialogRef} from '@angular/material';\nimport { PlaceModalComponent } from '../place-modal/place-modal.component';\n\n@Component({\n  selector: 'app-territory-add',\n  templateUrl: './territory-add.component.html',\n  animations: [slideToTop()],\n})\n\nexport class TerritoryAddComponent implements OnInit {\n    public salesNetworkData: Array<Select2OptionData>;\n    public userRolesArr: Array<Select2OptionData>;\n    public options: Select2Options;\n    public value: string[];\n    public current: string;\n    rolesDropdownSettings:any = {};\n    dropdownSettings:any = {};\n    segmentDropdownSettings:any = {};\n\n    salesData = [];\n\n\n    isDetailPincodeBtnClicked:any = false;\n\n  drop_me: any = '-1';\n  territory_form: any = {};\n\n  masterArr: any = [];\n\n  data: any = {};\n  showSelectAll:any = false;\n\n  finalPincodesArr: any = [];\n  finalPincodesDetailArr: any = [];\n\n  distinctSelectedState:any = [];\n\n  territoryId: any = '';\n  existingTerritoryArr: any = [];\n  loader: boolean;\n\n  tmpTerr:any=[];\n  formSubmit:any = false;\n\n  segmentlist:any=[];\n  isCityClicked:any = false;\n  clickedCityDetail:any = {};\n\n  isAnyStateSelected:any = false;\n  isAnyDistrictSelected:any = false;\n\n  constructor(public db: ConstantService,\n              public router: Router,\n              public route:ActivatedRoute,\n              public toast: SnackBarOverview,\n              public dialog:DialogComponent,\n              public matDialog: MatDialog) {\n\n      this.data = {};\n      this.data.segment = [];\n      this.data.salesUsers = [];\n      this.existingTerritoryArr = [];\n\n      this.salesNetworkData = [];\n      this.data.salesUsers = [];\n\n      this.data.pincodeEmpty = false;\n      this.data.userEmpty = false;\n  }\n\n\n  openDialog(popupType): void {\n\n        this.existingTerritoryArr.popupType = popupType;\n\n        this.existingTerritoryArr.allSegmentList = this.segmentlist;\n\n        this.existingTerritoryArr.userRolesArr = this.userRolesArr;\n\n        const dialogRef = this.matDialog.open(PlaceModalComponent, { width: '768px',  data: this.existingTerritoryArr});\n        dialogRef.afterClosed().subscribe(result => {\n            this.onExistingTerritoryHandler();\n            console.log(result);\n        });\n  }\n\n\n  onItemSelect(item: any) {\n\n      console.log(item);\n      this.getRoleWiseUserList(item.roleId);\n  }\n\n  onItemDeselect(item: any) {\n\n      console.log(item);\n\n      this.salesData =  this.salesData.filter(row => row.roleId != item.roleId);\n      this.salesNetworkData = JSON.parse(JSON.stringify(this.salesData));\n\n  }\n\n  onSelectAll(items: any) {\n       console.log(items);\n\n       for (let index = 0; index < items.length; index++) {\n             this.getRoleWiseUserList(items[index].roleId);\n       }\n  }\n\n  onItemDeselectAll(items:any) {\n\n      console.log(items);\n\n      this.salesData =  [];\n      this.salesNetworkData = JSON.parse(JSON.stringify(this.salesData));\n  }\n\n\n  ngOnInit() {\n  \n     this.route.params.subscribe(params=>{\n\n            console.log(params);\n            this.formSubmit = false;\n            this.data = {};\n            this.territoryId = params.id;\n            console.log(this.territoryId);\n\n            this.onStateListHandler();\n\n            if (this.territoryId != '0') {\n                this.onExistingTerritoryHandler();\n            } else {\n\n                this.masterArr = [];\n                this.finalPincodesArr = [];\n                this.finalPincodesDetailArr = [];\n\n                this.isDetailPincodeBtnClicked = false;\n\n                console.log(this.masterArr);\n                console.log(this.finalPincodesArr);\n                console.log(this.finalPincodesDetailArr);\n                this.getUserTypeRoles();\n            }\n\n            this.segment_list();\n      });\n\n      this.options = {\n        multiple: true\n      }\n\n      this.options = {\n          multiple: true\n      }\n\n      this.dropdownSettings = {\n            singleSelection: false,\n            idField: 'userId',\n            textField: 'userName',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            allowSearchFilter: true,\n            maxHeight: 197\n      };\n\n      this.rolesDropdownSettings = {\n            singleSelection: false,\n            idField: 'roleId',\n            textField: 'roleName',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            allowSearchFilter: true,\n            maxHeight: 197\n      };\n\n      this.segmentDropdownSettings = {\n            closeDropDownOnSelection:true,\n            singleSelection: false,\n            idField: 'text',\n            textField: 'text',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            allowSearchFilter: true,\n            maxHeight: 197\n      };\n\n  }\n\n\n  territoryStateDelete(stateName) {\n\n     this.loader = true;\n\n     this.db.fetchData({\n\n        'territoryId': this.territoryId,\n        'state': stateName\n\n      }, 'territory/pincode/delete')\n\n     .subscribe((response: any) => {\n           console.log(response);\n           this.loader = false;\n           this.toast.openSucess('Deleted Sucessfully!', '');\n\n           this.clickedCityDetail.pincodeArr = [];\n           this.isCityClicked = false;\n           this.onExistingTerritoryHandler();\n     });\n\n  }\n\n\n  segment_list() {\n   \n        this.db.fileData('','segment/list/').subscribe((response)=>{\n            console.log(response);\n            this.segmentlist=response['data'];\n        });\n  }\n\n\n  getSegmentChangeHandler(event) {\n\n      console.log(this.data.segment);\n      console.log(this.data.salesUsers);\n\n      if (this.data.segment.length == 0) {\n\n           this.data.roleSelected = '';\n           this.salesNetworkData = [];\n           this.data.salesUsers = [];\n      }\n\n\n      console.log(this.data.roleSelected);\n\n\n      if(this.data.segment.length > 0 && this.data.roleSelected) {\n\n            for (let index = 0; index < this.data.roleSelected.length; index++) {\n                 this.getRoleWiseUserList(this.data.roleSelected[index].roleId);\n            }\n      }\n  }\n\n\n  onStateListHandler() {\n\n        this.loader = true;\n\n        this.db.fileData('', 'state/list/').subscribe((response) => {\n            this.masterArr = [];\n            console.log(response);\n            if (response['data']) {\n\n                for (let index = 0; index < response['data'].length; index++) {\n                    this.masterArr.push({stateName: response['data'][index], districtData: []});\n                }\n\n                this.loader = false;\n            }\n\n            this.stateCheckedHandler();\n            this.districtCheckedHandler();\n\n            console.log(this.masterArr);\n        });\n  }\n\n\n  /*  Territory Edit Set Function Start */\n  onExistingTerritoryHandler() {\n\n        this.tmpTerr.push(this.territoryId);\n        console.log(this.tmpTerr);\n        \n        this.loader = true;\n        this.db.fileData('' , 'territory/detail/' + this.territoryId).subscribe((response:any)=>{\n             console.log(response);\n             this.existingTerritoryArr = response.data;\n\n             console.log(this.existingTerritoryArr);\n            //  this.data.territory = this.existingTerritoryArr.territoryName;\n             this.loader = false;\n            \n             this.onSetCityPincodeHandler();\n             this.getUserTypeRoles();\n\n        });\n  }\n\n\n  detailCityClickHandler(stateMasterId) {\n\n         this.isCityClicked = true;\n      \n         for (let index = 0; index < this.existingTerritoryArr.states.length; index++) {\n               \n               for (let index1 = 0; index1 < this.existingTerritoryArr.states[index].distrcits.length; index1++) {\n\n                       for (let index2 = 0; index2 < this.existingTerritoryArr.states[index].distrcits[index1].cities.length; index2++) {\n\n                              if(this.existingTerritoryArr.states[index].distrcits[index1].cities[index2].stateMasterId == stateMasterId) {\n\n                                console.log(this.existingTerritoryArr.states[index].distrcits[index1].cities[index2]);\n\n                                  this.existingTerritoryArr.states[index].distrcits[index1].cities[index2].checked = true;\n\n                                  this.clickedCityDetail.stateName = this.existingTerritoryArr.states[index].stateName;\n\n                                  this.clickedCityDetail.districtName = this.existingTerritoryArr.states[index].distrcits[index1].districtName;\n\n                                  this.clickedCityDetail.cityName = this.existingTerritoryArr.states[index].distrcits[index1].cities[index2].cityName;\n\n\n                                    this.loader = true;\n                                    this.db.fetchData({'stateMasterIds': [stateMasterId]}, 'city/pincodes').subscribe((response: any) => {\n                            \n                                            console.log(response);\n                                            setTimeout(() => {\n                                                this.loader = false;\n                                            }, 1000);\n\n                                            const pincodeArr = [];\n\n                                            if(response.data[0]) {\n\n                                                for (let cityPincodeIndex = 0; cityPincodeIndex < response.data[0]['pinCodes'].length; cityPincodeIndex++) {\n\n                                                    pincodeArr.push(response.data[0]['pinCodes'][cityPincodeIndex]);\n                                                }\n                                            }\n\n                                            this.clickedCityDetail.pincodeArr = pincodeArr;\n\n                                            console.log(pincodeArr);\n                                    });\n\n                                 \n\n                                  console.log(this.clickedCityDetail);\n\n                              } else {\n\n                                  this.existingTerritoryArr.states[index].distrcits[index1].cities[index2].checked = false;\n                              }\n                       }     \n                   \n               }\n        \n         }\n        \n  }\n\n\n  onSetCityPincodeHandler() {\n\n        const territoryStates = this.existingTerritoryArr['states'];\n\n        console.log(territoryStates);\n\n        for (let index = 0; index < territoryStates.length; index++) {\n\n                for (let index1 = 0; index1 < territoryStates[index]['distrcits'].length; index1++) {\n\n                        for (let index2 = 0; index2 < territoryStates[index]['distrcits'][index1]['cities'].length; index2++) {\n\n                                for (let index3 = 0; index3 < territoryStates[index]['distrcits'][index1]['cities'][index2]['pinCodes'].length; index3++) {\n\n                                    this.finalPincodesArr.push({stateMasterId: territoryStates[index]['distrcits'][index1]['cities'][index2].stateMasterId, pincode: territoryStates[index]['distrcits'][index1]['cities'][index2]['pinCodes'][index3]});\n\n                                    this.finalPincodesDetailArr.push({stateMasterId: territoryStates[index]['distrcits'][index1]['cities'][index2].stateMasterId, stateName: territoryStates[index].stateName, districtName: territoryStates[index]['distrcits'][index1]['districtName'], cityName: territoryStates[index]['distrcits'][index1]['cities'][index2].cityName, pincode: territoryStates[index]['distrcits'][index1]['cities'][index2]['pinCodes'][index3]});\n\n                                }\n                        }\n                }\n        }\n\n        console.log(this.finalPincodesArr);\n        console.log(this.finalPincodesDetailArr);\n    }\n\n\n    onSetTerritoryInchargeHandler() {\n\n        // for (let index = 0; index < this.salesNetworkData.length; index++) {\n\n        //     if(this.salesNetworkData[index].roleId == 10) {\n\n        //         for (let index1 = 0; index1 < this.salesNetworkData[index].roleDataArr.length; index1++) {\n\n        //                 const isIndexExist = this.existingTerritoryArr.salesUsers.findIndex(row => row.userId == this.salesNetworkData[index].roleDataArr[index1].userId);\n\n        //                 if (isIndexExist !== -1) {\n        //                     this.salesNetworkData[index].roleDataArr[index1].checked = true;\n        //                 }\n        //         }\n        //     }\n        // }\n    }\n\n    /*  Territory Edit Set Function ENd */\n\n\n  getUserTypeRoles() {\n\n      this.loader = true;\n\n      this.userRolesArr = [];\n      this.db.fileData( '' , 'usertype/list').subscribe((response:any)=>{\n          console.log(response);\n          this.loader = false;\n\n          for (let index = 0; index < response.data.length; index++) {\n\n               if (response.data[index].userTypeId === 2) {\n\n                  const userRoleData = [];\n\n                  for (let index1 = 0; index1 < response.data[index].roles.length; index1++) {\n\n                      const typeRoles = response.data[index].roles[index1];\n                      userRoleData.push({userTypeId: response.data[index].userTypeId,\n                                              roleId: typeRoles.roleId,\n                                              roleName: typeRoles.roleName });\n                  }\n\n                  this.userRolesArr = userRoleData;\n               }\n          }\n\n          console.log(this.userRolesArr);\n      });\n  }\n\n  getRoleWiseUserList(userRoleId) {\n\n            this.loader = true;\n            \n            this.db.fetchData(\n            {\n                'userType': 2,\n                'role': userRoleId,\n                'segments': this.data.segment,\n                'currentPage': 1,\n                'pageSize': 50\n\n            }, 'user/list').subscribe((response: any) => {\n\n                console.log(response);\n                this.loader = false;\n\n                if (response.data) {\n                \n                    for (let index = 0; index < response.data.length; index++) {\n\n                        const salesIndex = this.salesData.findIndex(row=> row.userId == response.data[index].userId);\n\n                        if(salesIndex == -1) {\n                             \n                            this.salesData.push({roleId: response.data[index].role, userId : response.data[index].userId, userName: response.data[index].userName + ' / ' + response.data[index].cityOffice, cityOffice: response.data[index].cityOffice});\n\n                        }\n                    }\n\n                    this.salesNetworkData = JSON.parse(JSON.stringify(this.salesData));\n\n                    console.log(this.salesNetworkData);\n\n                    if (this.territoryId != '0') {\n                        this.onSetTerritoryInchargeHandler();\n                    }\n\n                }\n\n                console.log(this.salesNetworkData);\n            });\n  }\n\n\n  getDistrictList(stateName, isChecked, onPageLoad) {\n\n      const stateIndex = this.masterArr.findIndex(row => row.stateName == stateName);\n\n\n      if (isChecked) {\n\n            this.loader = true;\n            \n            this.db.fetchData([stateName] , 'district/list').subscribe((response: any) => {\n                console.log(response);\n\n                this.loader = false;\n\n                 if (response.data && response.data[0]) {\n\n                      this.masterArr[stateIndex].districtData = response.data[0]['distrcits'];\n                 }\n\n                 console.log(this.masterArr);\n            });\n\n      } else {\n            this.masterArr[stateIndex].districtData = [];\n            this.data.pincodeSelectAll = false;\n            // this.onFinalPinCodesHandler();\n      }\n\n      this.stateCheckedHandler();\n\n  }\n\n\n\n  stateCheckedHandler() {\n\n        let isChecked = false;\n\n        for (let index = 0; index < this.masterArr.length; index++) {\n             \n              if(this.masterArr[index].checked) {\n                   isChecked = true;\n              }\n        }\n\n        this.isAnyStateSelected = isChecked;\n  }\n\n\n  getCityList(stateName, districtName, isChecked, onPageLoad, districtType) {\n\n    console.log(stateName, districtName, isChecked);\n\n    const stateIndex = this.masterArr.findIndex(row => row.stateName == stateName);\n\n    let districtIndex = 0;\n    if (districtType == 'single') {\n        districtIndex = this.masterArr[stateIndex]['districtData'].findIndex(row => row.districtName == districtName);\n    }\n\n    if (isChecked) {\n\n        setTimeout(() => {\n\n            let districtDBArray = [];\n\n            if (districtType == 'single') {\n                districtDBArray = [{ 'districtName': districtName }];\n            }\n\n            if (districtType == 'all') {\n\n                for (let index = 0; index < this.masterArr[stateIndex]['districtData'].length; index++){ \n                    districtDBArray.push({'districtName' : this.masterArr[stateIndex]['districtData'][index]['districtName']});\n\n                }\n            }\n\n            console.log(districtDBArray);\n\n            this.loader = true;\n            this.db.fetchData([\n                {\n                  'stateName': stateName,\n                  'distrcits': districtDBArray,\n                  'unusedPin': false\n\n                }], 'city/list').subscribe((response: any) => {\n    \n                console.log(response);\n                setTimeout(() => {\n                  this.loader = false;\n                }, 1000);\n\n                this.showSelectAll = true;\n    \n                if (response.data && response.data[0]) {\n                    \n                    for (let districtTempIndex = 0; districtTempIndex < response.data[0]['distrcits'].length; districtTempIndex++) {\n\n                            const cityArr = [];\n\n                            for (let index = 0; index < response.data[0]['distrcits'][districtTempIndex]['cities'].length; index++) {\n\n                                    const pincodeArr = [];\n\n                                    cityArr.push({cityName: response.data[0]['distrcits'][districtTempIndex]['cities'][index]['cityName'], pincodeArr: pincodeArr, stateMasterId: response.data[0]['distrcits'][districtTempIndex]['cities'][index]['stateMasterId']});\n                            }\n\n                            console.log(cityArr);\n\n                            if (districtType == 'single') {\n                                this.masterArr[stateIndex].districtData[districtIndex]['cities'] = cityArr;\n                            }\n        \n                            if (districtType == 'all') {\n                                this.masterArr[stateIndex].districtData[districtTempIndex]['cities'] = cityArr;\n                            }\n                    }\n\n                    console.log(this.masterArr[stateIndex].districtData);\n                }\n\n            });\n\n        }, 500);\n\n        console.log(this.masterArr[stateIndex]['districtData']);\n\n    } else {\n      \n        this.masterArr[stateIndex].districtData[districtIndex]['cities'] = [];\n        this.data.pincodeSelectAll = false;\n        // this.onFinalPinCodesHandler();\n    }\n\n    this.districtCheckedHandler();\n\n  }\n\n\n  districtCheckedHandler() {\n\n        let isChecked = false;\n\n        for (let index = 0; index < this.masterArr.length; index++) {\n            \n            if(this.masterArr[index].checked) {\n\n\n                for (let index1 = 0; index1 < this.masterArr[index].districtData.length; index1++) {\n                        \n                        if (this.masterArr[index].districtData[index1].checked) {\n                            isChecked = true;\n                        }\n                }\n                \n            }\n        }\n\n        this.isAnyDistrictSelected = isChecked;\n\n        console.log(this.isAnyDistrictSelected);\n  }\n\n\n  masterActionHandler(target, stateName, districtName, cityName, pincode, isChecked, stateMasterId) {\n\n       const stateIndex = this.masterArr.findIndex(row => row.stateName == stateName );\n\n       console.log(target, stateIndex, stateName, districtName, cityName, pincode, isChecked);\n\n       let districtIndex = '';\n       let cityIndex = '';\n       let pincodeIndex = '';\n\n       if(districtName && districtName != null) {\n\n            districtIndex = this.masterArr[stateIndex]['districtData'].findIndex(row => row.districtName == districtName );\n       }\n      \n       if (cityName && cityName != null) {\n\n            cityIndex = this.masterArr[stateIndex]['districtData'][districtIndex]['cities'].findIndex(row => row.stateMasterId == stateMasterId );\n\n            console.log(cityIndex);\n       }\n\n        if (pincode && pincode != null) {\n\n             pincodeIndex = this.masterArr[stateIndex]['districtData'][districtIndex]['cities'][cityIndex]['pincodeArr'].findIndex(row => row.pincode == pincode );\n        }\n\n\n        if (target === 'state') {\n\n            this.loader = true;\n\n            setTimeout(() => {\n\n                const stateDistrictArr = this.masterArr[stateIndex].districtData;\n\n                for (let index = 0; index < stateDistrictArr.length; index++) {\n                    \n                    stateDistrictArr[index].checked = isChecked;\n\n                    if (isChecked == false) {\n                        stateDistrictArr[index].cities = [];\n                    }\n\n                    if(isChecked == false && index == stateDistrictArr.length-1) {\n                        // this.onFinalPinCodesHandler();\n                    }\n\n                    if (isChecked  === true && index == stateDistrictArr.length-1) {\n                        this.getCityList(stateName, true, true, false, 'all');\n                    }\n                }\n\n                if(isChecked == false) {\n                    this.data.pincodeSelectAll = false;\n                }\n\n                this.loader = false;\n\n            }, 1000);\n\n        }\n\n        if (target === 'city') {\n\n               if(isChecked) {\n\n                    console.log(stateMasterId);\n\n                    this.loader = true;\n                    this.db.fetchData({'stateMasterIds': [stateMasterId]}, 'city/pincodes').subscribe((response: any) => {\n            \n                            console.log(response);\n                            setTimeout(() => {\n                                this.loader = false;\n                            }, 1000);\n\n                            const pincodeArr = [];\n\n                            if(response.data[0]) {\n\n                                for (let index = 0; index < response.data[0]['pinCodes'].length; index++) {\n\n                                     pincodeArr.push({pincode: response.data[0]['pinCodes'][index], stateMasterId: this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex]['stateMasterId'], checked : true});\n                                }\n                            }\n\n                            this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex].pincodeArr = pincodeArr;\n\n                            console.log(pincodeArr);\n                    });\n\n               } else {\n\n\n                    for (let index = 0; index < this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex].pincodeArr.length; index++) {\n\n                        this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex].pincodeArr[index].checked = false;\n                    }\n               }\n        }\n\n\n        if (target === 'pincode') {\n\n            const pincodeArr = this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex]['pincodeArr'][pincodeIndex];\n\n            pincodeArr.checked = isChecked;\n\n            // this.onFinalPinCodesHandler();\n        }\n\n        console.log(this.masterArr);\n  }\n\n\n  onFinalPinCodesHandler() {\n\n        let isAnyPincodeSelected = false;\n        this.loader = true;\n\n        setTimeout(() => {\n\n            for (let index = 0; index < this.masterArr.length; index++) {\n\n                if (this.masterArr[index].checked) {\n\n                    for (let index2 = 0; index2 < this.masterArr[index]['districtData'].length; index2++) {\n\n                        if (this.masterArr[index]['districtData'][index2].checked) {\n\n                            for (let index3 = 0; index3 < this.masterArr[index]['districtData'][index2]['cities'].length; index3++) {\n\n                                if (this.masterArr[index]['districtData'][index2]['cities'][index3]) {\n\n                                    for (let index4 = 0; index4 < this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'].length; index4++) {\n\n                                        if (this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].checked) {\n\n                                            const isPincodeExist = this.finalPincodesArr.findIndex(pincode => pincode == this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].pincode);\n\n                                            isAnyPincodeSelected = true;\n\n                                            if(isPincodeExist === -1) {\n\n                                                   console.log(this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr']);\n\n                                                    this.finalPincodesArr.push({stateMasterId :this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].stateMasterId,  pincode: this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].pincode});\n\n                                                    this.finalPincodesDetailArr.push({stateMasterId :this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].stateMasterId, stateName: this.masterArr[index].stateName, districtName: this.masterArr[index]['districtData'][index2]['districtName'], cityName: this.masterArr[index]['districtData'][index2]['cities'][index3].cityName, pincode: this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].pincode});\n                                            }\n                    \n                                        }\n                                    }\n                                }\n                            }\n\n                        }\n                    }\n\n                }\n\n\n                if(index == this.masterArr.length - 1) {\n\n                    setTimeout(() => {\n\n                        this.loader = false;\n\n                        if(isAnyPincodeSelected) {\n\n                            this.onStateListHandler();\n                            this.showSelectAll = false;\n                            this.data.pincodeSelectAll = false;\n\n                            this.distinctSelectedState = [];\n                            for (let finalIndex = 0; finalIndex < this.finalPincodesDetailArr.length; finalIndex++) {\n\n                                const existIndex = this.distinctSelectedState.findIndex(stateName => stateName == this.finalPincodesDetailArr[finalIndex].stateName);\n\n                                if(existIndex == -1) {\n                                    this.distinctSelectedState.push(this.finalPincodesDetailArr[finalIndex].stateName);\n                                }\n                                \n                            }\n\n                            this.toast.openSucess('PincodeList Updated!', '');\n\n\n                        } else {\n                            this.toast.openSucess('No Pincode Selected!', '');\n                        }\n\n                    }, 500);\n                }\n            }\n\n        }, 1000);\n\n\n        console.log(this.finalPincodesDetailArr);\n  }\n\n\n  save_territory() {\n\n       console.log(\"submit\");\n\n\n       if(!this.isDetailPincodeBtnClicked && !this.data.territory) {\n\n        console.log('hello');\n           $('#territoryName').focus();\n           return;\n       }\n\n\n       if (!this.isDetailPincodeBtnClicked && (!this.data.segment || this.data.segment.length == 0)) {\n\n            if(!this.data.segment || this.data.segment.length == 0) {\n                $('#segmentName').focus();\n            }\n\n            return;\n       }\n\n        console.log(this.finalPincodesArr);\n\n        const userArr = [];\n\n        console.log(this.data.salesUsers);\n\n        if(!this.isDetailPincodeBtnClicked && this.data.salesUsers && this.data.salesUsers.length > 0) {\n\n            for (let index = 0; index < this.data.salesUsers.length; index++) {\n                userArr.push(this.data.salesUsers[index].userId);\n            }\n        }\n        \n        \n        console.log(userArr);\n\n        if (this.finalPincodesArr.length === 0) {\n          this.data.pincodeEmpty = true;\n        } else {\n          this.data.pincodeEmpty = false;\n        }\n\n        // if (userArr.length === 0) {\n        //    this.data.userEmpty = true;\n        // } else {\n        //    this.data.userEmpty = false;\n        // }\n\n        if (this.data.pincodeEmpty) {\n            return;\n        }\n\n        this.loader = true;\n\n        let callApiObject = {};\n        let callApiUrl = '';\n\n        if(this.territoryId != '0') {\n\n            callApiObject = {'territoryID': this.territoryId, 'territoryPinCodes': this.finalPincodesArr};\n            callApiUrl = 'territory/pincode/add';\n\n        } else {\n\n            callApiObject = {'territoryName': this.data.territory, 'segments': this.data.segment, 'territoryPinCodes': this.finalPincodesArr, 'salesUsers': userArr};\n            callApiUrl = 'territory/add';\n        }\n\n        console.log(callApiObject);\n        console.log(callApiUrl);\n\n        this.db.fetchData(callApiObject, callApiUrl)\n        .subscribe((response: any) => {\n              console.log(response);\n              this.loader = false;\n\n              if(response.status == 'Success') {\n\n                    this.toast.openSucess('Territory Saved Sucessfully!', '');\n\n                    if(this.isDetailPincodeBtnClicked) {\n                        \n                    this.isDetailPincodeBtnClicked = false;\n                    this.onExistingTerritoryHandler();\n    \n                    } else {\n    \n                    this.router.navigate(['/territory-list'])\n                    }\n              } else {\n                   this.dialog.alertWarning(response.message);\n              }\n              \n        });\n  }\n\n\n\n   getAllPincodeHandler(isChecked) {\n\n        if(isChecked) {\n\n            const stateMasterIdArr = [];\n\n            for (let index = 0; index < this.masterArr.length; index++) {\n    \n                if (this.masterArr[index].checked) {\n    \n                    for (let index2 = 0; index2 < this.masterArr[index]['districtData'].length; index2++) {\n    \n                        if (this.masterArr[index]['districtData'][index2].checked) {\n    \n                            for (let index3 = 0; index3 < this.masterArr[index]['districtData'][index2]['cities'].length; index3++) {\n    \n                                if (this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'].length === 0) {\n\n                                    stateMasterIdArr.push(this.masterArr[index]['districtData'][index2]['cities'][index3].stateMasterId);\n                                }\n                            }\n                        }\n                    }\n    \n                }\n            }\n\n            console.log(stateMasterIdArr);\n\n\n            if(stateMasterIdArr.length > 0) {\n\n                this.loader = true;\n                this.db.fetchData({'stateMasterIds': stateMasterIdArr}, 'city/pincodes').subscribe((response: any) => {\n    \n                        console.log(response);\n                        setTimeout(() => {\n                            this.loader = false;\n                        }, 1000);\n    \n                      \n    \n                        for (let index = 0; index < response.data.length; index++) {\n\n                                const pincodeArr = [];\n\n                                for (let index1 = 0; index1 < response.data[index]['pinCodes'].length; index1++) {\n    \n                                    pincodeArr.push({pincode: response.data[index]['pinCodes'][index1], stateMasterId: response.data[index].stateMasterId, checked : true});\n                                }\n    \n    \n                                for (let masterIndex = 0; masterIndex < this.masterArr.length; masterIndex++) {\n    \n                                    if (this.masterArr[masterIndex].checked) {\n                        \n                                        for (let masterindex2 = 0; masterindex2 < this.masterArr[masterIndex]['districtData'].length; masterindex2++) {\n                        \n                                            if (this.masterArr[masterIndex]['districtData'][masterindex2].checked) {\n                        \n                                                for (let masterindex3 = 0; masterindex3 < this.masterArr[masterIndex]['districtData'][masterindex2]['cities'].length; masterindex3++) {\n                        \n                                                    if (this.masterArr[masterIndex]['districtData'][masterindex2]['cities'][masterindex3].stateMasterId == response.data[index].stateMasterId) {\n    \n                                                         this.masterArr[masterIndex]['districtData'][masterindex2]['cities'][masterindex3].checked = true;\n                        \n                                                         this.masterArr[masterIndex]['districtData'][masterindex2]['cities'][masterindex3].pincodeArr = pincodeArr;\n    \n                                                    }\n                                                }\n                                            }\n                                        }\n                        \n                                    }\n                                }\n                        }\n                });\n\n            } else {\n\n                this.pincodeSelectAllHandler(isChecked);\n            }\n\n        } else {\n\n            this.pincodeSelectAllHandler(isChecked);\n        }\n\n   }\n\n\n   pincodeSelectAllHandler(isChecked) {\n\n        this.loader= true;\n\n        setTimeout(() => {\n\n            for (let index = 0; index < this.masterArr.length; index++) {\n\n                if (this.masterArr[index].checked) {\n    \n                    for (let index2 = 0; index2 < this.masterArr[index]['districtData'].length; index2++) {\n    \n                        if (this.masterArr[index]['districtData'][index2].checked) {\n    \n                            for (let index3 = 0; index3 < this.masterArr[index]['districtData'][index2]['cities'].length; index3++) {\n    \n                                if (this.masterArr[index]['districtData'][index2]['cities'][index3]) {\n    \n                                    this.masterArr[index]['districtData'][index2]['cities'][index3].checked = isChecked;\n    \n                                    for (let index4 = 0; index4 < this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'].length; index4++) {\n                                        \n                                        this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].checked = isChecked;\n    \n                                    }\n                                }\n                            }\n                        }\n                    }\n    \n                }\n\n                if(index == this.masterArr.length -1) {\n                    this.loader= false;\n                }\n            }\n            \n        }, 1000);\n  }\n\n\n  emptyFinalPincodeArr() {\n\n      this.isDetailPincodeBtnClicked=true;\n\n      this.finalPincodesDetailArr = [];\n      this.finalPincodesArr = [];\n\n  }\n\n\n  deleteSelectedPincode(pincodeType, pincodeRowSelected) {\n\n        console.log(pincodeType);\n\n        this.dialog.delete(pincodeType).then((result) => {\n\n            console.log(result);\n\n            if(result) {\n\n                if(pincodeType == 'Pincode') {\n\n                    console.log(pincodeRowSelected);\n\n                    this.finalPincodesArr = this.finalPincodesArr.filter(pincodeRow => pincodeRow.stateMasterId != pincodeRowSelected.stateMasterId && pincodeRow.pincode != pincodeRowSelected.pincode);\n\n                    this.finalPincodesDetailArr = this.finalPincodesDetailArr.filter(pincodeRow =>  pincodeRow.stateMasterId != pincodeRowSelected.stateMasterId && pincodeRow.pincode != pincodeRowSelected.pincode);\n\n                    console.log(this.finalPincodesArr);\n                    console.log(this.finalPincodesDetailArr);\n\n                } else if(pincodeType == 'all') {\n\n                    this.finalPincodesArr = [];\n                    this.finalPincodesDetailArr = [];\n\n                } else {\n\n                    const statePincodeArr = this.finalPincodesDetailArr.filter(pincodeRow =>  pincodeRow.stateName ==  pincodeType);\n\n                    for (let index = 0; index < statePincodeArr.length; index++) {\n                        \n                        this.finalPincodesArr = this.finalPincodesArr.filter(pincodeRow => pincodeRow.pincode != statePincodeArr[index].pincode);\n                    }\n\n                    this.finalPincodesDetailArr = this.finalPincodesDetailArr.filter(pincodeRow =>  pincodeRow.stateName !=  pincodeType);\n\n                    console.log(this.finalPincodesArr);\n                }\n\n                this.data.deleteAllSelected = '';\n\n                this.distinctSelectedState = [];\n                for (let finalIndex = 0; finalIndex < this.finalPincodesDetailArr.length; finalIndex++){\n\n                    const existIndex = this.distinctSelectedState.findIndex(stateName => stateName == this.finalPincodesDetailArr[finalIndex].stateName);\n\n                    if(existIndex == -1 && this.finalPincodesDetailArr[finalIndex].stateName) {\n                        this.distinctSelectedState.push(this.finalPincodesDetailArr[finalIndex].stateName);\n                    }\n                }\n\n                this.toast.openSucess('Pincode Deleted!', '');\n\n            } else {\n                this.data.deleteAllSelected = '';\n            }\n            \n        })\n  }\n\n  active: any = {};\n  toggleterritory(key, action)\n  {\n      console.log(action);\n      console.log(key);\n      if (action === 'open')\n      {\n         this.active[key] = true;\n\n         $('#'+key).focus();\n      }\n\n      if (action === 'close')\n      {\n         this.active[key] = false;\n      }\n\n      console.log(this.active);\n  }\n\n\n}","module.exports = \"<div class=\\\"main-container\\\">\\n \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/territory-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>Golden Place</h2>\\n        <p class=\\\"light\\\">32 Pincode</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"sprate-box pb0\\\">\\n              <div class=\\\"basic-details padding0\\\">\\n                <div class=\\\"profile-info\\\">\\n                  <ul>\\n                    <li class=\\\"col s5\\\">\\n                      <div class=\\\"cs-box\\\">\\n                        <img src=\\\"assets/img/map-location.svg\\\" class=\\\"fix-img\\\">\\n                        <span>Name</span>\\n                        <p>Golden Place</p>\\n                        <a class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openDialog()\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                      </div>\\n                    </li>\\n                    <li  class=\\\"col s7\\\">\\n                      <div class=\\\"cs-box\\\">\\n                        <img src=\\\"assets/img/segment.svg\\\" class=\\\"fix-img h20\\\">\\n                        <span>Segment</span>\\n                        <!-- <p>0129 625874</p> -->\\n                        <ul class=\\\"segment-code\\\">\\n                          <li>\\n                            <span>2 Wheeler<a><i class=\\\"material-icons\\\">delete_sweep</i></a></span>\\n                          </li>\\n                          <li>\\n                            <span>4 Wheeler<a><i class=\\\"material-icons\\\">delete_sweep</i></a></span>\\n                          </li>\\n                          <li>\\n                            <span>3 Wheeler<a><i class=\\\"material-icons\\\">delete_sweep</i></a></span>\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </li>\\n                  </ul>\\n                </div>\\n                \\n                <mat-divider class=\\\"mt15 mb15\\\"></mat-divider>\\n                <div class=\\\"col s12\\\">\\n                  <div class=\\\"add-field mb15\\\">\\n                    <div class=\\\"heading\\\">\\n                      <h2>Assign Users <a><i class=\\\"material-icons\\\">add</i></a></h2>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"cs-figure field-figure\\\">\\n                    <ul>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <p>Ram Kumar Verma</p>\\n                            <span>RSM</span>\\n                          </div>\\n                          <a class=\\\"del-btn\\\" matRipple ><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                        </div>\\n                      </li>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <p>Pankaj Verma</p>\\n                          </div>\\n                          <a class=\\\"del-btn\\\" matRipple ><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                        </div>\\n                      </li>\\n                    </ul>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>HEADING</h2>\\n                <div class=\\\"top-search wp20 ml20 right-serach\\\">\\n                  <input type=\\\"text\\\" placeholder=\\\"SEARCH. . .\\\">\\n                  <i class=\\\"material-icons\\\">search</i>\\n                </div>\\n              </div>\\n              <div class=\\\"state-table\\\">\\n                <table>\\n                  <tr>\\n                    <td>\\n                      <table>\\n                        <tr>\\n                          <td>\\n                            Haryana\\n                            <a class=\\\"del-btn\\\">Delete</a>\\n                          </td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <table>\\n                        <tr>\\n                          <td class=\\\"w250\\\">\\n                            Faridabad\\n                          </td>\\n                          <td class=\\\"pb0\\\">\\n                            <ul class=\\\"area-code\\\">\\n                              <li matRipple >\\n                                <a>N.I.T 5 <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                              <li matRipple >\\n                                <a>Alampur <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                              <li matRipple >\\n                                <a>Badarpur Said<i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                            </ul>\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Palwal\\n                          </td>\\n                          <td class=\\\"pb0\\\">\\n                            <ul class=\\\"area-code\\\">\\n                              <li matRipple >\\n                                <a>Palwal Municipal Council <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                              <li matRipple >\\n                                <a>Baghola Census Town <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                              <li matRipple class=\\\"active\\\">\\n                                <a>Amru <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                            </ul>\\n                          </td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                  </tr>\\n                </table>\\n                <table>\\n                  <tr>\\n                    <td>\\n                      <table>\\n                        <tr>\\n                          <td>\\n                            Uttar Pradesh\\n                            <a class=\\\"del-btn\\\">Delete</a>\\n                          </td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <table>\\n                        <tr>\\n                          <td class=\\\"w250\\\">\\n                            Faridabad\\n                          </td>\\n                          <td class=\\\"pb0\\\">\\n                            <ul class=\\\"area-code\\\">\\n                              <li matRipple >\\n                                <a>N.I.T 5 <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                              <li matRipple >\\n                                <a>Alampur <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                              <li matRipple >\\n                                <a>Badarpur Said<i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                            </ul>\\n                          </td>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            Palwal\\n                          </td>\\n                          <td class=\\\"pb0\\\">\\n                            <ul class=\\\"area-code\\\">\\n                              <li matRipple >\\n                                <a>Palwal Municipal Council <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                              <li matRipple >\\n                                <a>Baghola Census Town <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                              <li matRipple class=\\\"active\\\">\\n                                <a>Amru <i class=\\\"material-icons\\\">keyboard_arrow_right</i></a>\\n                              </li>\\n                            </ul>\\n                          </td>\\n                        </tr>\\n                      </table>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"territory-info\\\">\\n          \\n            <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.districts==true}\\\">\\n              <h2>HARYANA / PALWAL</h2>\\n              <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('districts','open')\\\"  matRipple style=\\\"right: 15px;\\\">search</i>\\n              <input type=\\\"text\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n              <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('districts','close')\\\" matRipple>clear</i>\\n            </div>\\n\\n            <div class=\\\"cs-checkbox\\\">\\n              <div class=\\\"checkbox-outer\\\">\\n                <p class=\\\"head-cs\\\">Baghola Census Town</p>\\n                <section class=\\\"checkbox-inner\\\">\\n                  <div class=\\\"cs-table\\\">\\n                    <div class=\\\"table-head sticky-small\\\">\\n                      <table class=\\\"sno-border\\\">\\n                        <tr>\\n                          <th class=\\\"w30\\\">&nbsp;</th>\\n                          <th>Pincode</th>\\n                          <th class=\\\"w50\\\">&nbsp;</th>\\n                        </tr>\\n                      </table>\\n                    </div>\\n                    \\n                    <div class=\\\"table-container\\\">\\n                      <div class=\\\"table-content\\\">\\n                        <table class=\\\"sno-border\\\">\\n                          <tr>\\n                            <td class=\\\"w30\\\">1</td>\\n                            <td>1234</td>\\n                            <td class=\\\"w50\\\" matRipple><a class=\\\"pointer\\\"><i class=\\\"material-icons red-clr\\\">delete_sweep</i></a></td>\\n                          </tr>\\n                          <tr>\\n                            <td>2</td>\\n                            <td>1234</td>\\n                            <td matRipple><a class=\\\"pointer\\\"><i class=\\\"material-icons red-clr\\\">delete_sweep</i></a></td>\\n                          </tr>\\n                          <tr>\\n                            <td>4</td>\\n                            <td>1234</td>\\n                            <td matRipple><a class=\\\"pointer\\\"><i class=\\\"material-icons red-clr\\\">delete_sweep</i></a></td>\\n                          </tr>\\n                          \\n                        </table>\\n                      </div>\\n                    </div>\\n                    \\n                  </div>\\n                </section>\\n              </div>\\n            </div>\\n          </div>\\n        </div> \\n      </div>\\n    </div>\\n  </div>\\n  \\n  <a class=\\\"cs-fix-btn\\\" matRipple >Add Pincode</a>\\n\\n  </div>\\n\\n  <div class=\\\"h50\\\"></div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material';\n\nimport { PlaceModalComponent } from '../place-modal/place-modal.component';\n\n@Component({\n  selector: 'app-territory-detail',\n  templateUrl: './territory-detail.component.html'\n})\nexport class TerritoryDetailComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit() {\n\n  }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(PlaceModalComponent, {\n      width: '500px',\n    });\n  }\n\n  active:any = {};\n  toggleterritory(key,action)\n  {\n      console.log(action);\n      console.log(key);\n      \n      if (action == 'open')\n      {\n         this.active[key] = true; \n      }\n\n      if (action == 'close')\n      {\n          this.active[key] = false;\n      }\n\n      console.log(this.active);\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/territory.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Postal / Territory Master</h2>\\n        <p>Add New Location</p>\\n      </div>\\n    </div>\\n\\n    <div  *ngIf=\\\"filter.name || filter.segment || filter.pincode \\\" class=\\\"filter-container left-auto\\\">\\n      <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n        <button mat-button >CLEAR FILTER</button>\\n      </div>\\n    </div>\\n  </div>\\n  \\n\\n  <div class=\\\"container-outer pt0\\\">\\n  <!-- <app-master-tab-list></app-master-tab-list> -->\\n  \\n  <div >\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"cs-table left-right-20\\\">\\n          <div class=\\\"sticky-head\\\">\\n          <div class=\\\"table-head\\\">\\n            <table>\\n              <tr>\\n                <th >Territory Name</th>\\n                <th class=\\\"w150 text-center\\\">Segments</th>\\n                <th class=\\\"w150 text-center\\\">Sales Users</th>\\n                <th class=\\\"w150 text-center\\\">Distributors</th>\\n                <th class=\\\"w150 text-center\\\">States</th>\\n                <th class=\\\"w150 text-center\\\">Districts</th>\\n                <th class=\\\"w150 text-center\\\">Pincodes</th>\\n              </tr>\\n            </table>\\n          </div>\\n          <div class=\\\"table-head bdrt\\\">\\n             <table>\\n              <tr>\\n                  <th >\\n                    <div class=\\\"th-search-acmt\\\" [ngClass]=\\\"{ 'clear-feilds' : removename == true}\\\">\\n                          <mat-form-field>\\n                                  <input type=\\\"text\\\"  name=\\\"name\\\" [(ngModel)]=\\\"filter.name\\\" (ngModelChange)=\\\"nameList()\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\n                                  <mat-autocomplete #auto1=\\\"matAutocomplete\\\" >\\n                                      <mat-option *ngFor=\\\"let name of namelist\\\" (click)=\\\"nameFilter()\\\" value=\\\"{{name.territoryName}}\\\">{{name.territoryName}}</mat-option>\\n                                  </mat-autocomplete>\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removenamefilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                          </mat-form-field> \\n                    </div>\\n                  </th>\\n\\n                  <th class=\\\"w150 text-center\\\">\\n                    <div class=\\\"th-search-acmt\\\" [ngClass]=\\\"{ 'clear-feilds' : filter.segment}\\\">\\n                          <mat-form-field>\\n\\n                            <input type=\\\"text\\\"  name=\\\"segment\\\" [(ngModel)]=\\\"filter.segment\\\" (ngModelChange)=\\\"segmentList()\\\" matInput [matAutocomplete]=\\\"auto2\\\">\\n\\n                          <mat-autocomplete #auto2=\\\"matAutocomplete\\\" >\\n                              <mat-option *ngFor=\\\"let list of segmentlist\\\" (click)=\\\"segmentFilter()\\\" value=\\\"{{list.text}}\\\">{{list.text}}</mat-option>\\n                          </mat-autocomplete>\\n\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removeSegmentFilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                          </mat-form-field> \\n                    </div>\\n                  </th>\\n\\n                  <th class=\\\"w150 text-center\\\">&nbsp;</th>\\n\\n                  <th class=\\\"w150 text-center\\\">&nbsp;</th>\\n\\n                  <th class=\\\"w150 text-center\\\">&nbsp;</th>\\n                  <th class=\\\"w150 text-center\\\">&nbsp;</th>\\n                  <th class=\\\"w150 text-center\\\">\\n                      <div class=\\\"th-search-acmt\\\" [ngClass]=\\\"{ 'clear-feilds' : filter.pincode && filter.pincode != null}\\\">\\n                            <mat-form-field>\\n                                    <input type=\\\"text\\\"  name=\\\"pincode\\\" [(ngModel)]=\\\"filter.pincode\\\" (ngModelChange)=\\\"pincodeTerritoryList()\\\" maxlength=\\\"6\\\" matInput [matAutocomplete]=\\\"auto3\\\">\\n\\n                            <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\" (click)=\\\" removePinFilter()\\\"><i class=\\\"material-icons\\\">clear</i></a>\\n                            </mat-form-field> \\n                      </div>\\n                  </th>\\n                </tr>\\n                </table>\\n                \\n          </div>\\n        </div>\\n          <div class=\\\"table-container\\\">\\n            <div class=\\\"table-content\\\">\\n              <table>\\n                <tr *ngFor=\\\"let list of data; let i=index;\\\">\\n\\n                  <td >\\n                     <a class=\\\"link-btn\\\" routerLink=\\\"/territory-add/{{list.territoryID}}\\\" routerLinkActive=\\\"active\\\" mat-button>{{list.territoryName}}</a>\\n                  </td>\\n\\n                  <td class=\\\"w150 text-center f12 segment-red\\\">   \\n                    {{list.segmentsCount}}\\n                  </td>\\n                \\n\\n                  <td class=\\\"w150 text-center f12 user-blue\\\">\\n                      {{list.salesUsersCount}}\\n                  </td>\\n\\n                  <td class=\\\"w150 text-center f12 user-blue\\\">\\n                    {{list.networkCount}}\\n                  </td>\\n                 \\n                  <td class=\\\"w150 text-center f12 state-yellow\\\">\\n                      {{list.statesCount}}\\n                  </td>\\n\\n                  <td class=\\\"w150 text-center f12 district-green\\\">\\n                      {{list.districtsCount}}\\n                  </td>\\n\\n                  <td class=\\\"w150 text-center f12 pincode-pink\\\">\\n                      {{list.pinCodesCount}}\\n                      <div class=\\\"action-btns\\\">\\n                          <a mat-button class=\\\"view\\\" routerLink=\\\"/territory-add/{{list.territoryID}}\\\" routerLinkActive=\\\"active\\\">\\n                             <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                          <button mat-button class=\\\"delete\\\" (click)=\\\"deleteTerritory(list.territoryID)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                        </div>\\n                  </td>\\n\\n                </tr>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n      <div class=\\\"outer\\\">\\n          <div class=\\\"iinear\\\">\\n              <div class=\\\"figure\\\" matRipple>\\n                  <div class=\\\"header\\\">\\n                      <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                  </div>\\n                  \\n                  <div class=\\\"description\\\">\\n                      <!-- <div class=\\\"cs-heading\\\">\\n                          <h2>No Territory List</h2>\\n                      </div> -->\\n                      <div class=\\\"img\\\">\\n                              <i class=\\\"material-icons\\\">error_outline</i>\\n                      </div>\\n                      <div class=\\\"psc\\\">\\n                          <p>data not available</p>\\n                          <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n  </div>\\n  <div class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" matRipple routerLink=\\\"/territory-add/0\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-territory-list',\n  templateUrl: './territory-list.component.html',\n  animations: [slideToTop()]\n\n})\nexport class TerritoryListComponent implements OnInit {\nterritorylist:any=[];\ndata:any;\n\nauto3:any = '';\nfilter:any={};\nloader:boolean;\nnamelist:any=[];\npinlist:any=[];\npinlist1:any=[];\nremovename:boolean=false;\nremovepin:boolean=false;\nremovesegment:boolean=false;\ndiv:any=false;\n\nsegmentlist:any = [];\n\n  constructor(public db:ConstantService,public dialog:DialogComponent) {\n    this.getTerritoryList({});\n    \n   }\n\n   deleteTerritory(id)\n   {\n     console.log(id);\n     \n     this.dialog.delete('Territory User  !').then((result) => {\n\n          if(result)\n          {\n                console.log(id);\n                this.db.fileData(\"\",\"territory/delete/\"+id).subscribe((result)=>{\n\n                    console.log(result);\n                    \n                    if(result['status']==\"Success\")\n                    {\n                        this.getTerritoryList({});\n                    }\n                })\n            }\n      })\n   }\n\n\n  ngOnInit() {\n\n\n  }\n\n  clearfilter(){\n    this.removename=false;\n    this.filter={};\n    this.getTerritoryList({});\n  }\n  getTerritoryList(requestData)\n  {\n        this.div = false;\n        this.loader = true;\n\n        console.log(requestData);\n\n        this.db.fetchData(requestData, 'territory/list').subscribe((response)=>{\n\n              console.log(response);\n\n              if(response['status']=='Success')\n              {\n                  this.territorylist = response;\n              } else {\n                this.div = true;\n                  this.territorylist = [];\n              }\n\n              this.loader = false;\n              this.data = this.territorylist.data;\n              console.log(this.data);\n        });\n  }\n\n\n\n  modifyFilterData() {\n\n        const selectedData = {};\n\n        if(this.filter.name) {\n            selectedData['territoryName'] = this.filter.name;\n        }\n\n        if (this.filter.segment) {\n            selectedData['segments'] = [this.filter.segment];\n        }\n\n        if (this.filter.pincode) {\n           selectedData['pinCode'] = this.filter.pincode;\n        }\n\n        console.log(selectedData);\n\n        return selectedData;\n  }\n  \n\n  nameList() {\n\n      this.db.fetchData({ \"territoryName\":this.filter.name},'territory/list').subscribe((response)=>{\n          console.log(response);\n          this.namelist=response['data'];\n          console.log(this.namelist);\n      });  \n  }\n\n  nameFilter() {\n\n      console.log(this.filter.name);\n      const selectedData = this.modifyFilterData();\n      this.getTerritoryList(selectedData);\n      this.removename=true;\n  }\n\n  removenamefilter() {\n\n      this.filter.name = '';\n      this.namelist = [];\n\n      const selectedData = this.modifyFilterData();\n      this.getTerritoryList(selectedData);\n      this.removename=false;\n  }\n\n  pincodeTerritoryList() {\n\n      console.log(this.filter.pincode.length);\n\n      if(this.filter.pincode && (this.filter.pincode).length == 6) {\n\n           const selectedData = this.modifyFilterData();\n           this.getTerritoryList(selectedData);\n      }\n\n      if(!this.filter.pincode || (this.filter.pincode).length == 0) {\n\n          const selectedData = this.modifyFilterData();\n          this.getTerritoryList({});\n      }\n  }\n  \n  removePinFilter() {\n      this.filter.pincode='';\n      const selectedData = this.modifyFilterData();\n      this.getTerritoryList(selectedData);\n      this.removepin=false;\n  }\n\n\n  segmentList() {\n\n    this.db.fileData('','segment/list/' + this.filter.segment).subscribe((response)=>{\n        console.log(response);\n        this.segmentlist=response['data']});\n  }\n\n\n  segmentFilter() {\n\n      const selectedData = this.modifyFilterData();\n      this.getTerritoryList(selectedData);\n      this.removesegment=true;\n  }\n\n  removeSegmentFilter() {\n\n      this.filter.segment='';\n\n      const selectedData = this.modifyFilterData();\n      this.getTerritoryList(selectedData);\n\n      this.segmentlist=[];\n      this.removesegment=false;\n  }\n\n\n\n\n  pinList(){\n    this.loader=true;\n    this.db.fetchData({ \"pincode\":this.filter.pincode},'territory/detail').subscribe((response)=>{\n      console.log(response);\n      this.loader=false\n        this.pinlist=response['data']});\n        console.log(this.pinlist);\n        for (let indexp = 0; indexp < this.pinlist.length; indexp++) {\n\n          const terrPincodeArrp = [];\n\n          const stateArrp = this.pinlist[indexp]['states'];\n\n          for (let index2p = 0; index2p < stateArrp.length; index2p++) {\n\n              const districtArrp = stateArrp[index2p]['distrcits'];\n\n              for (let index3p = 0; index3p < districtArrp.length; index3p++) {\n\n                  const cityArrp =  districtArrp[index3p]['cities'];\n                  for (let index4p = 0; index4p < cityArrp.length; index4p++) {\n\n                    const areaArrp = cityArrp[index4p]['pinCodes']\n\n                    for (let index5p = 0; index5p < areaArrp.length; index5p++) {\n                  \n                         terrPincodeArrp.push(areaArrp[index5p]);\n                    }\n\n                  }\n              }\n            \n          }\n\n          this.pinlist[indexp].pincodeArr = terrPincodeArrp;\n    }\n        console.log(this.pinlist)\n        this.pinlist1=[];\n        for(let i=0;i<this.pinlist.length;i++){\n          for(let j=0;j<this.pinlist[i].pincodeArr.length;j++){\n            this.pinlist1.push(this.pinlist[i].pincodeArr[j]);\n          }\n        }\n        console.log(this.pinlist1);\n  }\n  pinFilter(){\n    this.filter.name='';\n    this.removename=false;\n    console.log(this.filter.pincode);\n    this.getTerritoryList({ \"pincode\":this.filter.pincode});\n      this.removepin=true;\n  }\n  removepinfilter(){\n    this.filter.pincode='';\n    this.getTerritoryList({ \"pincode\":this.filter.pincode});\n    this.removepin=false;\n  }\n   goToEditTerritoryPage() {\n\n\n\n\n   }\n\n}\n","import { OnInit, Injectable } from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\n\r\nexport class SnackBarOverview implements OnInit {\r\n  \r\n  constructor(public snackBar: MatSnackBar) { }\r\n  \r\n  ngOnInit() {\r\n  } \r\n  \r\n  openSucess(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2500,\r\n   \r\n      verticalPosition: 'top'\r\n    });\r\n  }\r\n\r\n  openError(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2500,\r\n      verticalPosition: 'top',\r\n    });\r\n  }\r\n      \r\n}\r\n","module.exports = \"<div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n\\n<div class=\\\"edit-modal\\\" >\\n    <p class=\\\"heading\\\">ADD TRAVEL</p>\\n    <div mat-dialog-content style=\\\"min-height: 370px;\\\">\\n      <div class=\\\"from-fields\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"tmpdate==0\\\">\\n            <div class=\\\"col s4\\\">\\n                <div class=\\\"control-field\\\">\\n                  <mat-form-field class=\\\"cs-input\\\">\\n                    <mat-select placeholder=\\\"Select Date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" [(ngModel)]=\\\"planDate\\\" required>\\n                      <mat-option *ngFor=\\\"let day of dayArray;let i=index\\\" value=\\\"{{day}}\\\"> {{day | date :'EEEE, MMMM d, y'}}</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n        </div>\\n        <div class=\\\"row mt15\\\">\\n            <div class=\\\"col s4\\\">\\n                <div class=\\\"multi-all-select\\\">{{state}}\\n                  <label>State</label>\\n                  <ng-multiselect-dropdown\\n                  name=\\\"state\\\"\\n                  [placeholder]=\\\"'Select State'\\\"\\n                  [data]=\\\"gState\\\"\\n                  [(ngModel)]=\\\"selectedState.state\\\"\\n                  name=\\\"state\\\"            \\n                  [settings]=\\\"dropdownSettings\\\"           \\n                  (onSelect)=\\\"getDistrict(selectedState.state)\\\"\\n                >\\n                </ng-multiselect-dropdown>\\n              </div>\\n            </div>\\n            <div class=\\\"col s4\\\">\\n              <div class=\\\"multi-all-select\\\">\\n                <label>District</label>\\n                <ng-multiselect-dropdown\\n                name=\\\"district\\\"\\n                [placeholder]=\\\"'Select District'\\\"\\n                [data]=\\\"tmpDistrictArray\\\"\\n                [(ngModel)]=\\\"selectedDistrict.district\\\"\\n                [settings]=\\\"dropdownSettings1\\\" \\n                (onSelect)=\\\"getCity(selectedDistrict.district)\\\"\\n                >\\n              </ng-multiselect-dropdown>\\n            </div>\\n          </div>\\n      <div class=\\\"col s4\\\">\\n        <div class=\\\"control-field pr80\\\">\\n          <div class=\\\"multi-all-select\\\">\\n            <label>City</label>\\n            <ng-multiselect-dropdown\\n            name=\\\"city\\\"\\n            [placeholder]=\\\"'Select City'\\\"\\n            [data]=\\\"gCity\\\"\\n            [(ngModel)]=\\\"myselectedcity.city\\\"\\n            name=\\\"city\\\"\\n            [settings]=\\\"dropdownSettings2\\\"\\n            (onSelect)=\\\"onCitySelect(myselectedcity.city)\\\"\\n            >\\n          </ng-multiselect-dropdown>\\n        </div>\\n        <div class=\\\"plus-btn\\\">\\n            <button type=\\\"button\\\" (click)=\\\"addTravelOnDetail()\\\" mat-raised-button color=\\\"accent\\\">\\n              <i class=\\\"material-icons\\\" >add</i>\\n            </button>\\n        </div>\\n       </div>\\n      </div>\\n     \\n  </div>\\n    </div>\\n   \\n\\n  \\n  <div *ngIf=\\\"newTravelonDate.length!=0\\\" class=\\\"row mt15\\\">\\n    <div class=\\\"col s12 padding0\\\">\\n      <div class=\\\"cs-table left-right-20\\\">\\n        <div class=\\\"table-head\\\">\\n          <table>\\n            <tr>\\n              <th class=\\\"w180\\\">State</th>\\n              <th class=\\\"w180\\\">District</th>\\n              <th class=\\\"w150\\\">City</th>\\n              <th> Sales Activity </th>\\n              <th class=\\\"w80\\\">Action</th>\\n            </tr>\\n          </table>\\n        </div>\\n        <div class=\\\"table-container scroll\\\">\\n          <div class=\\\"table-content none-shadow\\\">\\n            <table>\\n              <tr *ngFor=\\\"let detail of newTravelonDate ; let indx=index\\\">\\n                <td class=\\\"w180\\\">{{detail.state}}</td>\\n                <td class=\\\"w180\\\">{{detail.district}}</td>\\n                <td class=\\\"w150\\\">{{detail.city}}</td>\\n                <td>\\n                  <div class=\\\"from-fields \\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s12\\\">\\n                        <div class=\\\"select-one pt10\\\">\\n                          <span>Do you want any sales activity ?</span>\\n                          <mat-radio-group style=\\\"display: flex;\\\"  [(ngModel)]=\\\"detail.isSalesActivity\\\" name=\\\"isSalesActivity{{indx}}\\\" >\\n                            <mat-radio-button [value]=true >Yes</mat-radio-button>\\n                            <mat-radio-button [value]=false >No</mat-radio-button>\\n                          </mat-radio-group>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"row\\\" *ngIf=\\\"detail.isSalesActivity==true\\\">\\n                        <div class=\\\"col s6\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                              <mat-select placeholder=\\\"Select\\\" name=\\\"activityType{{indx}}\\\" [(ngModel)]=\\\"detail.activityType\\\">\\n                                <mat-option value=1>Mechanic get together</mat-option>\\n                                <mat-option value=2>Retailer get together</mat-option>\\n                                <mat-option value=3>van Campaign</mat-option>\\n                                <mat-option value=4>Stall Campaign</mat-option>\\n                                <mat-option value=5>Exhibition Participation</mat-option>\\n                                <mat-option value=6>Signboard</mat-option>\\n                                <mat-option value=7>Wall/Shop Painting</mat-option>\\n                                <mat-option value=8>GiveAways</mat-option>\\n                                <mat-option value=9>Printing Of Lesafelts,banners, posters etc.</mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s6\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                              <input matInput type=\\\"number\\\" placeholder=\\\"Budget\\\" name=\\\"salesBudget{{indx}}\\\" [(ngModel)]=\\\"detail.salesBudget\\\">\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                  </div>\\n                </td>\\n                <td class=\\\"w80\\\">\\n                    <div class=\\\"action-btns default-action\\\">\\n                        <a  mat-button class=\\\"delete\\\" (click)=\\\"removePlan(indx)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></a>\\n                      </div>\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n \\n  </div>\\n\\n  <div mat-dialog-actions>\\n      <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]=\\\"false\\\" class=\\\"mr15\\\">Cancel</button>\\n      <div >\\n          <button mat-raised-button  [mat-dialog-close]=\\\"true\\\" color=\\\"accent\\\" (click)=\\\"onClick()\\\">Save</button>\\n        </div>\\n      </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYXZlbC9hZGQtb24tZGV0YWlsL2FkZC1vbi1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { ConstantService } from 'src/app/constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\n\n\n@Component({\n  selector: 'app-add-on-detail',\n  templateUrl: './add-on-detail.component.html',\n  styleUrls: ['./add-on-detail.component.scss']\n})\nexport class AddOnDetailComponent implements OnInit {\n  loader:any=false;\n dropdownSettings:any={}\n dropdownSettings1:any={}\n dropdownSettings2:any={}\n tmpDistrictArray:any=[];\n selectedState:any={};\n selectedDistrict:any={};\n myselectedcity:any={};\n planDate:any;\n travelPlanID:any;\n userId:any;\n month:any;\n status:any;\n oldTravelDetail:any=[];\ntravelData:any={};\ndayArray:any=[];\nyear:any\ntmpdate:any;\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public service:ConstantService,public dialog:MatDialog,public toast:SnackBarOverview,public rout:Router) { \n    this.travelData=data.olddata\n    // this.getStateList();\n    console.log(data);\n    this.oldTravelDetail=data.olddata.travelDetails;\n    this.travelPlanID=data['id'];\n    this.planDate=data['date'];\n    this.tmpdate=this.planDate;\n    this.userId=data['userId'];\n    this.status=data['status'];\n    this.month=data['olddata']['month'];\n    this.year=data['olddata']['year'];\n    console.log(this.month);    \n    console.log( this.year);\n    // if()\n    console.log(this.planDate);\n    \n        \n  }\n\n  ngOnInit()\n  {\n    this.getState();\n  this.seletDate(this.month)\n  \n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'state',\n      textField: 'state',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      \n      allowSearchFilter: true\n    };\n    this.dropdownSettings1 = {\n      singleSelection: false,\n      idField: 'districtName',\n      textField: 'districtName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      \n      allowSearchFilter: true\n    };\n\n    this.dropdownSettings2 = {\n      singleSelection: false,\n      idField: 'city',\n      textField: 'city',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true\n    };\n  }\ngState:any=[];\ngDistrict:any=[];\ngCity:any=[];\n\nseletDate(month)\n{ \n   \n  if(month=='January' || month=='March' || month=='May' || month=='July'|| month=='August' || month=='October' || month=='December')\n  {\n     for(let i=1;i<=31;i++)\n   {\n    let planDate=month+\"/\"+i+\"/\"+this.year;\n    let date=moment(planDate).format('YYYY-MM-DD hh:mm:ss');\n    this.dayArray.push(date);\n  \n   } \n  }\n  else if(month=='February')\n  {\n   let days;\n   if(parseInt(this.data.year)%4==0)\n   {\n     days=29;\n   }\n   else\n   {\n     days=28;\n   }\n   for(let j=1;j<=days;j++)\n   {\n\n    let planDate=month+\"/\"+j+\"/\"+this.year;\n    let date=moment(planDate).format('YYYY-MM-DD hh:mm:ss');\n    this.dayArray.push(date);\n\n   } \n } \nelse\n{\n  for(let k=1;k<=30;k++)\n  {\n   let planDate=month+\"/\"+k+\"/\"+this.year;\n   let date=moment(planDate).format('YYYY-MM-DD hh:mm:ss ');\n   this.dayArray.push(date);\n\n }\n}\nthis.loader=false;\n}\n\n\ngetState()\n{\n      this.loader=true;\n      this.service.fileData('','state/list/').subscribe((response)=>{\n      this.loader=false;\n      console.log(response);\n      this.gState=response['data'];\n      console.log(this.gState);\n      \n      });\n}\n\ngetDistrict(state)\n{\n  this.tmpDistrictArray=[];\n  this.loader=true;\n  this.service.fetchData({states:state},'districtinstate/list').subscribe((response)=>{\n    this.loader=false;\n    console.log(response);\n    this.gDistrict=response['data']\n    const districtArray = [];\n        for( let i=0;i<this.gDistrict.length;i++)\n        {\n          let index=districtArray.findIndex(row=>row.districtName===this.gDistrict[i].districtName);\n          if(index==-1)\n          {\n            districtArray.push(this.gDistrict[i]);\n          }\n        }\n\n        this.tmpDistrictArray = districtArray;\n\n        console.log(this.tmpDistrictArray);\n  });\n}\ngetCity(district)\n{\n  this.gCity=[];\n  this.loader=true;\n  this.service.fetchData({districts:district},'citiesindistrict/list').subscribe((response)=>{\n    console.log(response);\n    this.loader=false\n    this.gCity=response['data'];\n    console.log(this.gCity);\n  });\n}\n\nselectedcity:any=[];\ntraveldetail:any=[];\nnewTravelonDate:any=[];\nonCitySelect(cityName)\n{\n  console.log(cityName);\n  this.selectedcity=cityName;\n}\n\n// calculateBudget(budget)\n// {\n//   console.log(budget);\n//   this.data.salesBudget=parseInt(this.data.salesBudget)+parseInt(budget);\n// }\n\naddTravelOnDetail()\n{ \n  console.log(this.planDate);\n  \n  console.log(this.selectedcity);\n\n  for(let i=0;i<this.selectedcity.length;i++)\n    {\n        for(let j=0;j<this.gCity.length;j++)\n        {\n        if(this.selectedcity[i]==this.gCity[j].city)\n        {\n          this.traveldetail.push({district:this.gCity[j].districtName,city:this.selectedcity[i]})\n        }\n        }\n    }\n  \n      for(let i=0;i<this.traveldetail.length;i++)\n      {\n        for(let j=0;j<this.tmpDistrictArray.length;j++)\n        {\n        if(this.traveldetail[i].district==this.tmpDistrictArray[j].districtName)\n        {\n          this.newTravelonDate.push({planDate:this.planDate,state:this.tmpDistrictArray[j].stateName,district:this.traveldetail[i].district,city:this.traveldetail[i].city,isSalesActivity:false,activityType:0,salesBudget:0})\n        }\n      }\n    }\n    console.log(this.newTravelonDate);\n    this.selectedDistrict.districtName=[]\n    this.myselectedcity.city=[]\n    this.selectedState.state=[]\n    \n}\nonClick()\n{\n  this.loader=true;\n\n  console.log(this.newTravelonDate);\n  for(let i=0;i<this.newTravelonDate.length;i++)\n  {\n    this.oldTravelDetail.push(this.newTravelonDate[i]);\n    if(this.newTravelonDate[i].isSalesActivity!=null)\n    {\n      this.travelData.budget=parseInt(this.travelData.budget)+parseInt(this.newTravelonDate[i].salesBudget)\n      this.travelData.salesBudget=parseInt(this.travelData.salesBudget)+parseInt(this.newTravelonDate[i].salesBudget)\n    }\n  }\n  console.log(this.travelData);\n  \n\n//   let value={'travelPlanID':this.travelPlanID,'userId':this.userId,'status':this.status,'month':this.month,'travelDetails':this.newTravelonDate}\n// console.log(value);\n\nthis.service.fetchData(this.travelData,\"travelplan/update\").subscribe((result)=>{\n  console.log(result);\n  this.loader=false\n\n  if(result['status']=='Success')\n      {\n          // this.rout.navigate(['detail-travel']);\n          this.toast.openSucess(result['message'],\"Success\");\n      }\n      else{\n        this.toast.openError(result['message'],\"Error\");\n      }\n  \n});\n    \n}\n\nremovePlan(index) {\n  // this.data.budget=parseInt(this.data.travelBudget)-parseInt(this.dayArray[i].details.salesBudget)\n  this.newTravelonDate.splice(index,1);\n\n} \n\n}  \n\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/travel.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Travel Plan</h2>\\n        <p>Add Travel Plan</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <form (ngSubmit)=\\\"f.form.valid && onClick()\\\" #f=\\\"ngForm\\\">\\n    <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Basic Details</h2>\\n                <span class=\\\"required\\\">Indicates required fields ( <sup>*</sup> )</span>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s3 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <mat-select placeholder=\\\"Select Year\\\" name=\\\"year\\\" #year=\\\"ngModel\\\" [(ngModel)]=\\\"data.year\\\" required>\\n                          <mat-option (click)=\\\"divmonth(data.year)\\\" *ngFor=\\\"let year of yearArray\\\" value={{year}}>{{year}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && year.invalid \\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"year.errors.required\\\">Year is required....</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"monthDiv\\\"> \\n                    <div  class=\\\"col s3 \\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <mat-select placeholder=\\\" Select Month\\\" name=\\\"month\\\" #month=\\\"ngModel\\\" [(ngModel)]=\\\"data.month\\\" required>\\n                            <mat-option (click)=\\\"addTravel(day)\\\" *ngFor=\\\"let day of monthArray;let i=index\\\" value={{i+1}}>{{day}}</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && month.invalid \\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"month.errors.required\\\">Month is required....</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s2 pr0\\\" >\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <mat-select placeholder=\\\"Select Senior For Approval\\\" name=\\\"travelApprover\\\" #travelApprover=\\\"ngModel\\\" [(ngModel)]=\\\"data.travelApprover\\\" required>\\n                            <mat-option (click)=\\\"getSenior()\\\" *ngFor=\\\"let senior of seniors\\\" value={{senior.userId}}>{{senior.userName}}</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && travelApprover.invalid \\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"travelApprover.errors.required\\\">Approver is required....</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s2 pr0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput type=\\\"number\\\" placeholder=\\\"Travel Budget\\\" #travelBudget=\\\"ngModel\\\" name=\\\"travelBudget\\\" [(ngModel)]=\\\"data.travelBudget\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && travelBudget.invalid \\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"travelBudget.errors.required\\\">Travel Budget required...</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                   \\n                    <div class=\\\"col s2 pr0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput type=\\\"number\\\" readonly placeholder=\\\"Sales Budget\\\" #salesBudget=\\\"ngModel\\\" name=\\\"salesBudget\\\" [(ngModel)]=\\\"data.salesBudget\\\" required>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                    <!-- <div class=\\\"col s2 pr0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput type=\\\"number\\\" readonly placeholder=\\\"Budget\\\" #budget=\\\"ngModel\\\" name=\\\"budget\\\" [(ngModel)]=\\\"data.budget\\\" required>\\n                        </mat-form-field>\\n                      </div>\\n                    </div> -->\\n                  </div>\\n                  \\n                </div>\\n              </div>\\n            </div>\\n            \\n            \\n            <div class=\\\"row\\\" >\\n              <div class=\\\"sprate-box pt0 mt15\\\" style=\\\"overflow: inherit;\\\">\\n                <div class=\\\"cs-heading\\\" style=\\\"border-radius: 6px 6px 0px 0px;\\\">\\n                  <h2>Travel Details</h2>\\n                </div>\\n                <div class=\\\"collaps flat-collaps mt15\\\" >\\n                  <div class=\\\"collaps-area\\\">\\n                    <mat-accordion>\\n                      <mat-expansion-panel  style=\\\"overflow: inherit;\\\" *ngFor=\\\"let day of dayArray;let i=index;let detail of planDetail\\\">\\n                        <mat-expansion-panel-header class=\\\"outer-panel mb10\\\">\\n                          <mat-panel-title>\\n                            {{day.planDate | date :'EEEE, MMMM d, y'}}\\n                          </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div>\\n                          <mat-divider class=\\\"mb15 mt15 left-right-20\\\"></mat-divider>\\n                          <div class=\\\"row\\\" >\\n                            <div class=\\\"from-fields\\\">\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col s4\\\">\\n                                  <div class=\\\"multi-all-select\\\">\\n                                    <label>State</label>\\n                                    <ng-multiselect-dropdown\\n                                    [placeholder]=\\\"'Select State'\\\"\\n                                    [data]=\\\"shippingState\\\"\\n                                    [(ngModel)]=\\\"detail.state\\\"                                    \\n                                    name=\\\"state\\\"\\n                                    [settings]=\\\"dropdownSettings\\\"\\n                                    (onSelect)=\\\"getShippingDistrict(detail.state,i)\\\">\\n                                  </ng-multiselect-dropdown>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col s4\\\">\\n                                <div class=\\\"multi-all-select\\\">\\n                                  <label>District</label>\\n                                  <ng-multiselect-dropdown\\n                                  [placeholder]=\\\"'Select District'\\\"\\n                                  [data]=\\\"tmpDistrictArray\\\"\\n                                  [(ngModel)]=\\\"detail.district\\\"                                  \\n                                  name=\\\"district\\\"\\n                                  [settings]=\\\"dropdownSettings1\\\"\\n                                  (onSelect)=\\\"getShippingCity(detail.district,i)\\\">\\n                                </ng-multiselect-dropdown>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"col s4\\\">\\n                              <div class=\\\"control-field pr80\\\">\\n                                <div class=\\\"multi-all-select\\\">\\n                                  <label>City</label>\\n                                  <ng-multiselect-dropdown\\n                                  [placeholder]=\\\"'Select City'\\\"\\n                                  [data]=\\\"shippingCity\\\"\\n                                  [(ngModel)]=\\\"detail.city\\\"                                  \\n                                  name=\\\"city\\\"\\n                                  [settings]=\\\"dropdownSettings2\\\"\\n                                  (onSelect)=\\\"travelcity(detail.city,i)\\\">\\n                                </ng-multiselect-dropdown>\\n                              </div>\\n                              <div class=\\\"plus-btn\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"travelList(i)\\\" mat-raised-button color=\\\"accent\\\">\\n                                  <i class=\\\"material-icons\\\" >add</i>\\n                                </button>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n                    \\n                    <div *ngIf=\\\"day.details.length!=0\\\" class=\\\"row mt15\\\">\\n                      <div class=\\\"col s12 padding0\\\">\\n                        <div class=\\\"cs-table left-right-20\\\">\\n                          <div class=\\\"table-head\\\">\\n                            <table>\\n                              <tr>\\n                                <th class=\\\"w180\\\">State</th>\\n                                <th class=\\\"w180\\\">District</th>\\n                                <th class=\\\"w150\\\">City</th>\\n                                <th> Sales Activity </th>\\n                                <th class=\\\"w90\\\">&nbsp;</th>\\n                              </tr>\\n                            </table>\\n                          </div>\\n                          <div class=\\\"table-container\\\">\\n                            <div class=\\\"table-content none-shadow\\\">\\n                              <table>\\n                                <tr *ngFor=\\\"let detail of day.details ; let indx=index\\\">\\n                                  <td class=\\\"w180\\\">{{detail.state}}</td>\\n                                  <td class=\\\"w180\\\">{{detail.district}}</td>\\n                                  <td class=\\\"w150\\\">{{detail.city}}</td>\\n                                  <td>\\n                                    <div class=\\\"from-fields \\\">\\n                                      <div class=\\\"row\\\">\\n                                        <div class=\\\"col s4\\\">\\n                                          <div class=\\\"select-one pt10\\\">\\n                                            <span>Do you want any sales activity ?</span>\\n                                            <mat-radio-group style=\\\"display: flex;\\\"  [(ngModel)]=\\\"detail.isSalesActivity\\\" name=\\\"isSalesActivity{{indx}}\\\" >\\n                                              <mat-radio-button value='Yes' >Yes</mat-radio-button>\\n                                              <mat-radio-button value='No' >No</mat-radio-button>\\n                                            </mat-radio-group>\\n                                          </div>\\n                                        </div>\\n                                        <div *ngIf=\\\"detail.isSalesActivity=='Yes'\\\">\\n                                          <div class=\\\"col s4\\\">\\n                                            <div class=\\\"control-field\\\">\\n                                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                                <mat-select placeholder=\\\"Select\\\" name=\\\"activityType{{indx}}\\\" [(ngModel)]=\\\"detail.activityType\\\">\\n                                                  <mat-option value=\\\"1\\\">Mechanic get together</mat-option>\\n                                                  <mat-option value=\\\"2\\\">Retailer get together</mat-option>\\n                                                  <mat-option value=\\\"3\\\">van Campaign</mat-option>\\n                                                  <mat-option value=\\\"4\\\">Stall Campaign</mat-option>\\n                                                  <mat-option value=\\\"5\\\">Exhibition Participation</mat-option>\\n                                                  <mat-option value=\\\"6\\\">Signboard</mat-option>\\n                                                  <mat-option value=\\\"7\\\">Wall/Shop Painting</mat-option>\\n                                                  <mat-option value=\\\"8\\\">GiveAways</mat-option>\\n                                                  <mat-option value=\\\"9\\\">Printing Of Lesafelts,banners, posters etc.</mat-option>\\n                                                </mat-select>\\n                                              </mat-form-field>\\n                                            </div>\\n                                          </div>\\n                                          <div class=\\\"col s4\\\">\\n                                            <div class=\\\"control-field\\\">\\n                                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                                <input matInput type=\\\"number\\\" placeholder=\\\"Budget\\\" (change)=\\\"calculateBudget(detail.salesBudget)\\\" name=\\\"salesBudget{{indx}}\\\" [(ngModel)]=\\\"detail.salesBudget\\\">\\n                                              </mat-form-field>\\n                                            </div>\\n                                          </div>\\n                                        </div>\\n                                      </div>\\n                                      \\n                                    </div>\\n                                  </td>\\n                                  <td class=\\\"w90\\\">\\n                                    <a mat-button class=\\\"del-btn\\\" (click)=\\\"removePlan(i,indx)\\\">Delete</a>\\n                                  </td>\\n                                </tr>\\n                              </table>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </div>\\n          </div>\\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n  \\n  </div>\\n  \\n  <div class=\\\"col s12\\\">\\n    <div class=\\\"cs-btn mt15 text-right\\\">\\n      <div class=\\\"in-btn\\\">\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"travelStatus(1)\\\">Save As Draft</button>\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"travelStatus(2)\\\" >Save For Approvel</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n</form>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport * as moment from 'moment';\nimport { DialogComponent } from 'src/app/dialog';\n@Component({\n  selector: 'app-add-travel',\n  templateUrl: './add-travel.component.html'\n})\nexport class AddTravelComponent implements OnInit {\n\n  tmp_month:any=[];\n  data:any={};\n    user:any={};\n    userType:any;\n  userId:any;\n  userRole:any;\n  loader:any=false;\n  shippingState:any=[];\n  shippingDistrict:any=[];\n  shippingCity:any=[];\n  day:any={};\n  state:any=[];\nmonthArray:any=[\"January\",\n \"February\",\n \"March\",\n \"April\",\n \"May\",\n \"June\",\n \"July\",\n \"August\",\n \"September\",\n \"October\",\n \"November\",\n \"December\"];\n\n tmpArray=[]=this.monthArray;\n dropdownSettings:any={}\n dropdownSettings1:any={}\n dropdownSettings2:any={}\n tmpDistrictArray:any=[];\n seniors:any=[];\n\n  constructor(public service:ConstantService,public rout:Router,public toast:SnackBarOverview,public alrt:DialogComponent) {\n\n    this.data.travelBudget=0;\n    this.data.salesBudget=0;\n    this.data.budget=0;\n\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    // if(this.user)\n    // {\n    //   if(this.userType==2)\n    //   {\n    //     // this.loader=true;\n    //     // this.categoryList()\n    //     // this.userTypeList();\n    //     // this.getSegmentList();\n    //     // this.getOemList();\n    //   }\n\n    // }\n    let month=moment().format('M');\n    for(let i=parseInt(month)-1;i<this.monthArray.length;i++)\n    {\n     this.tmp_month.push(this.monthArray[i]); \n    }\n\n   }\n\n   yearArray:any=[];\n  ngOnInit() {\n    this.getSenior();\n\n    let currentyear=moment().format('YYYY');\n     \n    this.yearArray.push(currentyear);\n    this.yearArray.push(parseInt(currentyear)+1);\n    this.yearArray.push(parseInt(currentyear)+2);\n    console.log(this.yearArray);\n    this.getshippingState();\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'state',\n      textField: 'state',\n      closeDropDownOnSelection:true,\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true,\n      maxHeight: 197\n};\nthis.dropdownSettings1 = {\n  singleSelection: false,\n  idField: 'districtName',\n  textField: 'districtName',\n  selectAllText: 'Select All',\n  unSelectAllText: 'UnSelect All',\n  allowSearchFilter: true,\n  maxHeight: 197\n}; \n\nthis.dropdownSettings2 = {\n  singleSelection: false,\n  idField: 'city',\n  textField: 'city',\n  selectAllText: 'Select All',\n  unSelectAllText: 'UnSelect All',\n  allowSearchFilter: true,\n  maxHeight: 197\n};\n  }\n\ngetSenior()\n{\n  this.service.fileData(\" \",'getseniors/list').subscribe((response)=>{\n    this.loader=false;\n    console.log(response);\n    if(response['status']=='Success')\n      {\n        this.seniors=response['data'];\n        console.log(this.seniors);\n        \n      }\n  });\n}\n  // day:any={};\n  planArray:any=[];\n  onClick()\n  {\n    for(let i=0;i<this.dayArray.length;i++)\n    {\n      if(this.dayArray[i].details.length!=0)\n      {\n        for(let j=0;j<this.dayArray[i].details.length;j++)\n        {\n         console.log(this.dayArray[i].details);\n         \n          if(this.dayArray[i].details[j].isSalesActivity=='Yes')\n          {\n            console.log(this.dayArray[i].details[j].activityType);\n            \n            this.planArray.push({planDate:moment(this.dayArray[i].planDate).format('YYYY-MM-DD'),state:this.dayArray[i].details[j].state,district:this.dayArray[i].details[j].district,city:this.dayArray[i].details[j].city,isSalesActivity:true,salesBudget:this.dayArray[i].details[j].salesBudget,activityType:this.dayArray[i].details[j].activityType});\n          }\n          else{\n            this.planArray.push({planDate:moment(this.dayArray[i].planDate).format('YYYY-MM-DD'),state:this.dayArray[i].details[j].state,district:this.dayArray[i].details[j].district,city:this.dayArray[i].details[j].city,isSalesActivity:false});\n          }\n        }\n      }\n    }\n    \n\n    console.log(this.planArray);\n    \n    this.loader=true;\n    console.log(this.dayArray);\n    this.data.month=this.numberofMonth;\n    this.data.userId=this.userId;\n    this.data.travelDetails=this.planArray;\n    if(this.seniors.length==0)\n    {\n      this.data.travelApprover=1;\n    }\n    console.log(this.data);\n    this.service.fetchData(this.data,\"travelplan/add\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false\n      if(result['status']=='Success')\n      {\n          this.rout.navigate(['list-travel']);\n          this.toast.openSucess(result['message'],\"Success\");\n      }\n      else{\n        this.toast.openError(result['message'],\"Error\");\n      }\n    })\n  }\n\n  travelStatus(status)\n  {\n    this.data.status=status;\n  }\n \n  // files: FileList; \n  //   filestring: string; \n  //   uploadFile(event) { \n  //       this.files = event.target.files; \n  //       var reader = new FileReader(); \n  //       reader.onload = this._handleReaderLoaded.bind(this); \n  //       reader.readAsBinaryString(this.files[0]); \n  //   } \n \n  //   _handleReaderLoaded(readerEvt) { \n  //       var binaryString = readerEvt.target.result; \n  //       this.filestring = btoa(binaryString);\n  //       this.data.excelFile=this.filestring;\n        \n  //       console.log(this.data);\n            \n  //  } \n\n   monthDiv:any=false;\n   divmonth(year)\n   {\n    console.log(year);\n     if(year==moment().format('YYYY'))\n     {\n       this.monthArray=[];\n       this.monthArray=this.tmp_month;\n       console.log(\"true\");\n     }\n     else{\n      this.monthArray=this.tmpArray;\n     }\n\n      this.monthDiv=true;\n   }\n \n   numberofMonth:any;\n   dayArray:any=[];\n   planDetail:any=[];\n   addTravel(month)\n   {\n     this.loader=true;\n     console.log(month);\n    \n    //  let currentmonth=moment().format('M');\n     this.numberofMonth=moment().month(month).format(\"M\");\n     this.dayArray=[];\n    \n        if(month=='January' || month=='March' || month=='May' || month=='July'|| month=='August' || month=='October' || month=='December')\n        {\n         for(let i=1;i<=31;i++)\n         {\n           let planDate=month+\"/\"+i+\"/\"+this.data.year;\n           let date=moment(planDate).format('YYYY-MM-DD hh:mm:ss a Z');\n           this.planDetail.push({state:'',district:'',city:''});\n           this.dayArray.push({planDate:date, details: [],salesactivity:'No'});\n         } \n        }\n        else if(month=='February')\n        {\n          let days;\n          if(parseInt(this.data.year)%4==0)\n          {\n            days=29;\n          }\n          else{\n            days=28;\n          }\n         for(let j=1;j<=days;j++)\n         {\n   \n           let planDate=month+\"/\"+j+\"/\"+this.data.year;\n           let date=moment(planDate).format('YYYY-MM-DD hh:mm:ss a Z');\n           this.planDetail.push({state:'',district:'',city:''});\n           this.dayArray.push({planDate:date, details: [],salesactivity:'No'});\n   \n         } \n        }\n        else{\n         for(let k=1;k<=30;k++)\n         {\n           let planDate=month+\"/\"+k+\"/\"+this.data.year;\n           let date=moment(planDate).format('YYYY-MM-DD hh:mm:ss a Z');\n           this.planDetail.push({state:'sdfd',district:'sdfdf',city:'sfdsf'});\n           this.dayArray.push({planDate:date, details: [],salesactivity:'No'});\n   \n         }\n        }\n        this.loader=false;\n      }\n     \n      getshippingState()\n      {\n        this.loader=true;\n        this.service.fileData('','state/list/').subscribe((response)=>{\n          console.log(response);\n          this.loader=false;\n          this.shippingState=response['data'];\n        });\n      }\n    getShippingDistrict(state,i)\n    {\n      console.log(state);\n      \n      // this.planDetail[i].state=state;\n      // console.log(state);\n      // let statename=state[state.length-1];\n      //  console.log(statename);\n\n      // console.log(this.planDetail[i]);\n      this.state=state;\n        \n      this.loader=true;\n      this.service.fetchData({states:state},'districtinstate/list').subscribe((response)=>{\n        this.loader=false;\n        console.log(response);\n        this.shippingDistrict=response['data']\n\n        const districtArray = [];\n        for( let i=0;i<this.shippingDistrict.length;i++)\n        {\n          let index=districtArray.findIndex(row=>row.districtName===this.shippingDistrict[i].districtName);\n          if(index==-1)\n          {\n            districtArray.push(this.shippingDistrict[i]);\n          }\n        }\n\n        this.tmpDistrictArray = districtArray;\n\n        console.log(this.tmpDistrictArray);\n        \n        // console.log(this.shippingDistrict);\n        \n        // console.log(this.district1);\n      });\n      \n    }\n    \n    selectedDistrictArray:any=[];\n    finalCityArray:any=[];\n    getShippingCity(district,i)\n    {\n      console.log(district);\n      \n      console.log(this.tmpDistrictArray);\n      \n      console.log(this.selectedDistrictArray);\n      this.planDetail[i].district=district\n      console.log(this.planDetail[i].district);\n      \n      this.loader=true;\n      this.service.fetchData({districts:district},'citiesindistrict/list').subscribe((response)=>{\n        console.log(response);\n        this.loader=false\n        this.shippingCity=response['data'];\n        console.log(this.shippingCity);\n      });\n    }\n\n    traveldetail:any=[];\n    selectedcity:any=[];\n    finaldetail:any=[];\n\n    travelcity(city,i)\n    {\n      console.log(city);\n      this.selectedcity=city;\n      this.planDetail[i].city=city\n    }\n\n    calculateBudget(budget)\n    {\n      console.log(budget);\n      this.data.salesBudget=parseInt(this.data.salesBudget)+parseInt(budget);\n      this.data.budget=parseInt(this.data.travelBudget)+parseInt(this.data.salesBudget);\n      \n    }\n   original_data=[];\n   \n    travelList(index)\n    {\n     \n      for(let i=0;i<this.selectedcity.length;i++)\n      {\n        for(let j=0;j<this.shippingCity.length;j++)\n        {\n        if(this.selectedcity[i]==this.shippingCity[j].city)\n        {\n          this.traveldetail.push({district:this.shippingCity[j].districtName,city:this.selectedcity[i]})\n        }\n        }\n      }\n      console.log(this.traveldetail);\n      \n      for(let i=0;i<this.traveldetail.length;i++)\n      {\n        for(let j=0;j<this.tmpDistrictArray.length;j++)\n        {\n        if(this.traveldetail[i].district==this.tmpDistrictArray[j].districtName)\n        {\n          this.dayArray[index].details.push({state:this.tmpDistrictArray[j].stateName,district:this.traveldetail[i].district,city:this.traveldetail[i].city,isSalesActivity:'No',activityType:'',salesBudget:0});\n          // this.data.budget=parseInt(this.data.travelBudget)+parseInt(this.dayArray[index].details.salesBudget);\n        }\n        }\n      }\n      console.log(this.finaldetail);\n\n      // console.log(this.planDetail);\n      // this.dayArray[index].details.push(this.finaldetail);\n      this.finaldetail=[];\n      console.log(this.dayArray[index]);\n      console.log(this.dayArray);\n      // console.log(this.planDetail[index].state);\n      \n      // this.shippingDistrict=[]\n      // this.shippingCity=[];\n     \n      this.dayArray[index].state='';\n      this.dayArray[index].district='';\n      this.dayArray[index].city='';\n\n      // console.log(this.planDetail[index].state);\n\n      \n    }   \n    removePlan(i,index) {\n      this.data.budget=parseInt(this.data.travelBudget)-parseInt(this.dayArray[i].details.salesBudget)\n      this.dayArray[i].details.splice(index,1);\n\n    } \n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/list-travel\\\" routerLinkActive=\\\"active\\\" ><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{travelDetail.userName}}</h2>\\n        <!-- <p class=\\\"light\\\">Sub Admin</p> -->\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"left-auto\\\" *ngIf=\\\"travelDetail.status==1\\\">\\n      <div class=\\\"cs-btn text-right\\\">\\n        <div class=\\\"in-btn\\\">\\n          <a mat-raised-button color=\\\"accent\\\" (click)=\\\"addOnDetail(0)\\\" >Add New Date</a>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div class=\\\"tabs right-tab\\\">\\n      <ul>\\n        <li><a routerLink=\\\"/sale-user-detail\\\" routerLinkActive=\\\"active\\\">DETAIL</a></li>\\n        <li><a routerLink=\\\"/my-network\\\" routerLinkActive=\\\"active\\\">My Network</a></li>\\n        <li><a routerLink=\\\"/user-order\\\" routerLinkActive=\\\"active\\\">ORDERS</a></li>\\n        <li><a>LEADS</a></li>\\n        <li><a>FOLLOWUP</a></li>\\n        <li><a routerLink=\\\"/target\\\" routerLinkActive=\\\"active\\\">Target</a></li>\\n        <li><a routerLink=\\\"/travel-plan\\\" routerLinkActive=\\\"active\\\">Travel Plan</a></li>\\n      </ul>\\n    </div> -->\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12 padding0\\\">\\n          <div class=\\\"sprate-box pt0  mb15\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>Travel Detail</h2>\\n            </div>\\n            <div class=\\\"row mt15 mb15\\\">\\n              <div class=\\\"col s12 cs-figure\\\">\\n                <ul>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Year</span>\\n                        <p>{{travelDetail.year}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Month</span>\\n                        <p *ngIf=\\\"travelDetail.month==1\\\" >January</p>\\n                        <p *ngIf=\\\"travelDetail.month==2\\\">February</p>\\n                        <p *ngIf=\\\"travelDetail.month==3\\\">March</p>\\n                        <p *ngIf=\\\"travelDetail.month==4\\\">April</p>\\n                        <p *ngIf=\\\"travelDetail.month==5\\\">May</p>\\n                        <p *ngIf=\\\"travelDetail.month==6\\\">June</p>\\n                        <p *ngIf=\\\"travelDetail.month==7\\\">July</p>\\n                        <p *ngIf=\\\"travelDetail.month==8\\\">August</p>\\n                        <p *ngIf=\\\"travelDetail.month==9\\\">September</p>\\n                        <p *ngIf=\\\"travelDetail.month==10\\\">October</p>\\n                        <p *ngIf=\\\"travelDetail.month==11\\\">November</p>\\n                        <p *ngIf=\\\"travelDetail.month==12\\\">December</p>\\n                        <!-- <p>{{travelDetail.month}}</p> -->\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Travel Budget</span>\\n                        <p>&#8377;  {{travelDetail.travelBudget}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Sales Budget</span>\\n                        <p>&#8377;  {{travelDetail.salesBudget}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  \\n                  \\n                  <li *ngIf=\\\"travelDetail.status==2||travelDetail.status==3\\\" class=\\\"pending\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Status</span>\\n                        <p>Pending</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li *ngIf=\\\"travelDetail.status==5\\\" class=\\\"approved\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Status</span>\\n                        <p>Approve</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li *ngIf=\\\"travelDetail.status==4||travelDetail.status==6\\\" class=\\\"reject\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Status</span>\\n                        <p>Reject</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li *ngIf=\\\"userId==travelDetail.createBy && travelDetail.status==1\\\" class=\\\"draft\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Status</span>\\n                        <p>Draft</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"travelDetail.status==2 && travelDetail.createBy!=userId\\\" class=\\\"row mt15 mb15\\\">\\n              <div class=\\\"col s6 cs-figure\\\">\\n                <ul>\\n                  <li style=\\\"border: 1px solid #B29D9D\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <div class=\\\"from-fields\\\">\\n                          <div class=\\\"dflex\\\">\\n                            <div class=\\\"control-field wp100\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <mat-select placeholder=\\\"Select Travel Plan Status\\\" #status=\\\"ngModel\\\" [(ngModel)]=\\\"travel.status\\\" >\\n                                  <mat-option value=3>Approve</mat-option>\\n                                  <mat-option value=4>Reject</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                            </div>\\n                            \\n                            <div class=\\\"control-field  wp100 ml10\\\" *ngIf=\\\"travel.status==3\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <mat-select placeholder=\\\"Select For Sales Budget Approval\\\" name=\\\"travelApprovedBy\\\" #travelApprovedBy=\\\"ngModel\\\" [(ngModel)]=\\\"travel.travelApprovedBy\\\" >\\n                                  <mat-option *ngFor=\\\"let user of financeUserList\\\" value=\\\"{{user.userId}}\\\">{{user.userName}}</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                            </div>\\n                            \\n                            <div class=\\\"control-field wp100 ml10\\\" *ngIf=\\\"travel.status==4\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <textarea matInput placeholder=\\\"Reason for Rejection\\\" name=\\\"travelRejectionReason\\\" #travelRejectionReason=\\\"ngModel\\\" [(ngModel)]=\\\"travel.travelRejectionReason\\\" class=\\\"h45\\\"></textarea>\\n                              </mat-form-field>\\n                            </div>\\n                            \\n                            <div class=\\\"cs-btn ml10\\\">\\n                              <div class=\\\"in-btn\\\">\\n                                <button mat-raised-button color=\\\"accent\\\"  mat-stroked-button (click)=\\\"saveTravelStatus()\\\" >Save</button>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n            \\n            <div *ngIf=\\\"travelDetail.status==3 && userRole==17\\\" class=\\\"row mt15 mb15\\\">\\n              <div class=\\\"col s6 cs-figure\\\">\\n                <ul>\\n                  <li style=\\\"border: 1px solid #B29D9D\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <div class=\\\"from-fields\\\">\\n                          <div class=\\\"dflex\\\">\\n                            <div class=\\\"control-field wp100\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <mat-select placeholder=\\\"Select Travel Plan Status\\\" #status=\\\"ngModel\\\" [(ngModel)]=\\\"travel.status\\\" >\\n                                  <mat-option value=5>Approve</mat-option>\\n                                  <mat-option value=6>Reject</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                            </div>\\n                            <div class=\\\"control-field wp100 ml10\\\" *ngIf=\\\"travel.status==6\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                <textarea matInput placeholder=\\\"Reason for Rejection\\\" name=\\\"salesRejectionReason\\\" #salesRejectionReason=\\\"ngModel\\\" [(ngModel)]=\\\"travel.salesRejectionReason\\\" class=\\\"h45\\\"></textarea>\\n                              </mat-form-field>\\n                            </div>\\n                            <div class=\\\"cs-btn ml10\\\">\\n                              <div class=\\\"in-btn\\\">\\n                                <button mat-raised-button color=\\\"accent\\\"  mat-stroked-button (click)=\\\"saveSalesStatus()\\\" >Save</button>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"cs-table left-right-15\\\">\\n            <div class=\\\"table-head sticky-head top130\\\">\\n              <table class=\\\"sno-border\\\">\\n                <tr>\\n                  <th class=\\\"w30\\\">&nbsp;</th>\\n                  <th class=\\\"w170\\\">Date</th>\\n                  <th class=\\\"padding0\\\">\\n                    <table>\\n                      <tr>\\n                        <th>State</th>\\n                        <th>District</th>\\n                        <th>City</th>\\n                        <th class=\\\"w130 text-center\\\">Sales Activity</th>\\n                        <th class=\\\"w120 text-right\\\">Sales Budget</th>\\n                        <th *ngIf=\\\"travelDetail.status!=5 && userId==travelDetail.createBy && travelDetail.status!=3\\\" class=\\\"w110 text-center\\\">Action</th>\\n                        <th *ngIf=\\\"travelDetail.status!=5 && userId==travelDetail.createBy && travelDetail.status!=3\\\"class=\\\"w80 text-center\\\">ADD</th>\\n                      </tr>\\n                    </table>\\n                  </th>\\n                </tr>\\n              </table>\\n            </div>\\n            <div class=\\\"table-container \\\">\\n              <div class=\\\"table-content\\\">\\n                <!-- <table>\\n                  <tr *ngFor=\\\"let list of travelDetail.travelDetails\\\">\\n                    <td class=\\\"w300\\\">{{list.planDate | date :'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"w220\\\">{{list.details}}</td>\\n                    <td class=\\\"w200\\\">{{list.actual}}</td>\\n                    <td>{{list.reasonForDeviation}}\\n                      <div class=\\\"action-btns\\\" *ngIf=\\\"travelDetail.status==1\\\">\\n                        <a mat-button class=\\\"view\\\" (click)=\\\"updateTravel(list)\\\"><i class=\\\"material-icons\\\">edit</i> Edit</a>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </table> -->\\n                \\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor=\\\"let plan of planArray;let i=index\\\">\\n                    <td class=\\\"w30\\\">{{i+1}}</td>\\n                    <td class=\\\"w170\\\">{{plan.planDate | date :'EEEE, MMMM d, y'}}</td>\\n                    <td class=\\\"padding0\\\">\\n                      <table class=\\\"inner-table\\\">\\n                        <tr *ngFor=\\\"let detail of plan.plandDetail\\\">\\n                          <td >{{detail.state}}</td>\\n                          <td>{{detail.district}}</td>\\n                          <td>{{detail.city}}</td>\\n                          <td class=\\\"w130 text-center\\\">{{detail.salesActivity?'Yes':'No'}}</td>\\n                          <td class=\\\"w120 text-right\\\">&#x20B9; {{detail.salesBudget?detail.salesBudget:'NA'}}</td>\\n                          <td *ngIf=\\\"travelDetail.status!=5 && userId==travelDetail.createBy && travelDetail.status!=3\\\" class=\\\"w110\\\">\\n                            <div class=\\\"action-btns default-action\\\" style=\\\"right: 3px;\\\">\\n                              <a mat-button class=\\\"edit\\\" (click)=\\\"updateTravel(detail)\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                              <button  mat-button class=\\\"delete\\\" (click)=\\\"deleteTravelPlan(detail.travelDetailId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i></button>\\n                            </div>\\n                          </td>\\n                          \\n                        </tr>\\n                        \\n                      </table>\\n                    </td>\\n                    <td *ngIf=\\\"travelDetail.status!=5 && userId==travelDetail.createBy && travelDetail.status!=3\\\" class=\\\"w80 text-center\\\">\\n                      <div class=\\\"in-btn\\\">\\n                        <a mat-button color=\\\"accent\\\" matTooltip=\\\"Add Plan\\\" (click)=\\\"addOnDetail(plan.planDate)\\\"><i class=\\\"material-icons\\\">\\n                          add_circle\\n                        </i></a>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12 padding0\\\" *ngIf=\\\"travelDetail.status==1\\\">\\n        <div class=\\\"cs-btn fixedd mt15 text-right\\\">\\n          <div class=\\\"in-btn\\\">\\n            <button mat-raised-button color=\\\"accent\\\"(click)=\\\"updatedstatus(travelDetail.travelPlanID,2)\\\" >Submit</button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col s12 padding0\\\" *ngIf=\\\"travelDetail.status==4||travelDetail.status==6\\\" >\\n        <div class=\\\"cs-btn mt15 text-right\\\">\\n          <div class=\\\"in-btn\\\">\\n            <button mat-raised-button color=\\\"accent\\\"(click)=\\\"updatedstatus(travelDetail.travelPlanID,2)\\\">Re-submit</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n\\n<div class=\\\"h50\\\"></div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport { MatDialog } from '@angular/material';\nimport { UpdateTravelComponent } from '../update-travel/update-travel.component';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { AddOnDetailComponent } from '../add-on-detail/add-on-detail.component';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-detail-travel',\n  templateUrl: './detail-travel.component.html'\n})\nexport class DetailTravelComponent implements OnInit {\n  \n  activeStatus1:any='';\n  activeStatus2:any='';\n  activeStatus3:any='';\n  travelId:any;\n  travelDetail:any=[];\n  user:any={};\n  userType:any;\n  userId:any;\n  loader:any=false;\n  userRole:any;\n  travel:any={};\n  constructor(public route:ActivatedRoute,public service:ConstantService,public dialog: MatDialog,public toast:SnackBarOverview,public alrt:DialogComponent) {\n    \n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n    \n    this.route.params.subscribe( params => {\n      console.log(params);\n      this.travelId = params.id;\n      console.log(this.travelId);\n      this.getUserList();\n      if(this.travelId)\n      {\n        this.getTravelDetail();\n      }\n    });\n  }\n  \n  ngOnInit() {\n  }\n  \n  planArray:any=[]\n  getTravelDetail()\n  {\n    this.planArray=[];\n    this.loader=true;\n    this.service.fetchData({\"travelPlanID\":this.travelId},\"travelplan/list\").subscribe((result)=>{\n      console.log(result);\n      setTimeout (() => {\n        this.loader=false;\n      }, 700);\n      if(result['status']==\"Success\")\n      {\n        this.travelDetail=result['data'][0];\n        console.log(this.travelDetail);\n        \n        for(let i=0;i<this.travelDetail.travelDetails.length;i++)\n        {\n          \n          if(this.planArray.length==0)\n          {\n            this.planArray.push({planDate:this.travelDetail.travelDetails[i].planDate,plandDetail:[{state:this.travelDetail.travelDetails[i].state,district:this.travelDetail.travelDetails[i].district,city:this.travelDetail.travelDetails[i].city,travelDetailId:this.travelDetail.travelDetails[i].travelDetailId,salesActivity:this.travelDetail.travelDetails[i].isSalesActivity,salesBudget:this.travelDetail.travelDetails[i].salesBudget,activityType:this.travelDetail.travelDetails[i].activityType}]})\n          }\n          else{\n            \n            let index= this.planArray.findIndex(row=>row.planDate===this.travelDetail.travelDetails[i].planDate);\n            if(index!=-1)\n            {\n              this.planArray[index].plandDetail.push({state:this.travelDetail.travelDetails[i].state,district:this.travelDetail.travelDetails[i].district,city:this.travelDetail.travelDetails[i].city,travelDetailId:this.travelDetail.travelDetails[i].travelDetailId,salesActivity:this.travelDetail.travelDetails[i].isSalesActivity,salesBudget:this.travelDetail.travelDetails[i].salesBudget,activityType:this.travelDetail.travelDetails[i].activityType})\n            }\n            else{\n              this.planArray.push({planDate:this.travelDetail.travelDetails[i].planDate,plandDetail:[{state:this.travelDetail.travelDetails[i].state,district:this.travelDetail.travelDetails[i].district,city:this.travelDetail.travelDetails[i].city,travelDetailId:this.travelDetail.travelDetails[i].travelDetailId,salesActivity:this.travelDetail.travelDetails[i].isSalesActivity,salesBudget:this.travelDetail.travelDetails[i].salesBudget,activityType:this.travelDetail.travelDetails[i].activityType}]})\n            }\n          }\n        }\n        console.log(this.planArray);\n        \n        \n        if(this.travelDetail['status']==1)\n        {\n          this.activeStatus1='pending';\n        }\n        if(this.travelDetail['status']==2)\n        {\n          this.activeStatus2='approved';\n        }\n        if(this.travelDetail['status']==3)\n        {\n          this.activeStatus3='reject';\n        }\n      }\n    })\n  }\n  \n  updateTravel(value)\n  {\n    console.log(value);\n    \n    const dialogRef = this.dialog.open(UpdateTravelComponent, {\n      width: '1024px',\n      data:{\n        id:this.travelDetail.travelPlanID,\n        value\n      }});\n      dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n        console.log('The dialog was closed');\n        if(result)\n            {\n              this.getTravelDetail();\n            }\n      });\n    }\n    \n    deleteTravelPlan(travelDetailID)\n    {\n      this.alrt.delete('Travel Plan  !').then((result) => {\n        if(result)\n        { \n          console.log(travelDetailID);\n          \n          this.loader=true;\n          this.service.fileData(\"\",\"traveldetail/delete/\"+travelDetailID).subscribe((result)=>{\n            console.log(result);\n            this.loader=false;\n            if(result['status']=='Success')\n            {\n              this.getTravelDetail\n              \n            }\n          })\n        }})\n      }\n\n      financeUserList:any=[];\n      getUserList()\n      {\n        this.loader=true;\n        this.service.fetchData({role:17, \"currentPage\": 1,\"pageSize\": 50},\"user/list\").subscribe((result)=>{\n          console.log(result);\n          this.loader=false;\n          if(result['status']=='Success')\n          {\n            this.financeUserList=result['data'];\n          }\n        })\n      }\n      \n      // updateTravelStatus(id,status)\n      // {\n      //   this.travel.travelPlanID=id;\n      //   console.log(status.value);\n        \n      // }\n      updatedstatus(id,status)\n      {\n        this.travel.travelPlanID=id;\n        console.log(status);\n        this.travel.status=status;\n        \n        this.saveStatus()\n        \n      }\n\n      saveStatus()\n      {\n          this.value={\"travelPlanID\": this.travel.travelPlanID,\"status\": this.travel.status}\n          \n        console.log(this.value);\n        \n        this.service.fetchData(this.value,\"travelplan/travelapproval\").subscribe((result)=>{\n          console.log(result);\n          if(result['status']==['Success'])\n          {\n            this.toast.openSucess('Status updated successfully','');\n            this.getTravelDetail();\n          }\n        })\n      }\n      value:any={}\n      \n      saveTravelStatus()\n      {\n        if(this.travel.status==4)\n        {\n          this.travel.travelRejectedBy=this.userId;\n        }\n        this.travel.travelPlanID=this.travelId\n        console.log(this.travel);\n        \n        this.service.fetchData(this.travel,\"travelplan/travelapproval\").subscribe((result)=>{\n          console.log(result);\n          if(result['status']=='Success')\n          {\n            this.getTravelDetail();\n          }\n        })\n      }\n\n      saveSalesStatus()\n      {\n        if(this.travel.status==6)\n        {\n          this.travel.salesRejectedBy=this.userId;\n        }\n        else{\n          this.travel.salesApprovedBy=this.userId\n        }\n        this.travel.travelPlanID=this.travelId\n        console.log(this.travel);\n        this.service.fetchData(this.travel,\"travelplan/salesapproval\").subscribe((result)=>{\n          console.log(result);\n          if(result['status']=='Success')\n          {\n            this.getTravelDetail();\n          }\n        })        \n        \n      }\n      addOnDetail(date)\n      {\n        \n        console.log(\"hello\");\n        \n        const dialogRef = this.dialog.open(AddOnDetailComponent, {\n          width: '1024px',\n          data:{\n            olddata:this.travelDetail,\n            date:date\n          }});\n          dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n            if(result)\n            {\n              this.getTravelDetail();\n            }\n            console.log('The dialog was closed');\n          });\n        }\n        \n        \n      }\n      ","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  \\n  <div class=\\\"middle-container pb15\\\">\\n    \\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/travel.svg\\\" class=\\\"h-icon\\\">\\n      \\n      <div class=\\\"heading-text flex-heading\\\">\\n        <div class=\\\"content\\\">\\n          <h2>{{userRole==17?'Sales Promotion':'Travel List'}}</h2>\\n        </div>\\n        <div class=\\\"item-filter\\\" *ngIf=\\\"userRole!=10 && userRole!=17\\\">\\n          <mat-form-field class=\\\"wp100\\\">\\n            <mat-select  name=\\\"travelPlanApprovel\\\" #travelPlanApprovel=\\\"ngModel\\\" [(ngModel)]=\\\"forApprovel\\\">\\n              <mat-option (click)=\\\"getTravelList(1,travelStatus)\\\" [value]=1>My Travel Plan</mat-option>\\n              <mat-option (click)=\\\"getTravelList(2,travelStatus)\\\" [value]=2>Wating For Approvel</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"left-auto\\\">\\n      <div  *ngIf=\\\"filterData.createdByName || filterData.designation || filterData.month || filterData.createdOn\\\" class=\\\"filter-container\\\">\\n        <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n          <button mat-button >CLEAR FILTER</button>\\n        </div>\\n      </div>\\n      <div class=\\\"tabs right-tab none-af\\\">\\n        <ul>\\n          <li><a class=\\\"pending\\\" [ngClass]=\\\"{'tab-active':travelStatus==2}\\\" (click)=\\\"getTravelList(forApprovel,2)\\\" >PENDING</a></li>\\n          <li><a class=\\\"approved\\\" [ngClass]=\\\"{'tab-active':travelStatus==5}\\\" (click)=\\\"getTravelList(forApprovel,5)\\\" >APPROVE</a></li>\\n          <li><a class=\\\"reject\\\" [ngClass]=\\\"{'tab-active':travelStatus==6}\\\" (click)=\\\"getTravelList(forApprovel,6)\\\" >REJECT</a></li>\\n          <li class=\\\"draft\\\" *ngIf=\\\"forApprovel==1 && userRole!=17\\\"><a [ngClass]=\\\"{'tab-active':travelStatus==1}\\\" (click)=\\\"getTravelList(forApprovel,1)\\\" >DRAFT</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n    \\n    \\n  </div>\\n  \\n  \\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr>\\n                    <th class=\\\"w30\\\">&nbsp;</th>\\n                    <th class=\\\"w200\\\">Date</th>\\n                    <th *ngIf=\\\"forApprovel==2\\\">User Name</th>\\n                    <th class=\\\"w170\\\" *ngIf=\\\"forApprovel==2\\\">Designation Name</th>\\n                    <th class=\\\"w130\\\">Travel Month</th>\\n                    <th class=\\\"w100 text-center\\\">Year</th>\\n                    <th class=\\\"w130 text-right\\\">Budget</th>\\n                    <th class=\\\"w120\\\">Status</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"table-head bdrt\\\">\\n                <form>\\n                  <table class=\\\"sno-border\\\">\\n                    <tr>\\n                      <th class=\\\"w30\\\">&nbsp;</th>\\n                      <th class=\\\"w200\\\">&nbsp;\\n                        <!-- <div class=\\\"th-search padding0\\\" >\\n                          <mat-form-field class=\\\"wp100 toggle-date-picker\\\">\\n                            <input matInput (dateChange)=\\\"getTravelList(forApprovel,travelStatus)\\\" name=\\\"createdOn\\\" [(ngModel)]=\\\"filterData.createdOn\\\" [matDatepicker]=\\\"picker\\\" >\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker  #picker></mat-datepicker>\\n                          </mat-form-field>\\n                        </div> -->\\n                      </th>\\n                      <th *ngIf=\\\"forApprovel==2\\\">\\n                        <div class=\\\"th-search\\\" >\\n                          <input type=\\\"text\\\" (input)=\\\"getTravelList(forApprovel,travelStatus)\\\" name=\\\"createdByName\\\" #createdByName=\\\"ngModel\\\" [(ngModel)]=\\\"filterData.createdByName\\\" placeholder=\\\"Search....\\\">\\n                          <a class=\\\"close-mat\\\" matRipple  matTooltip=\\\"Clear\\\"></a>\\n                          \\n                        </div>\\n                      </th>\\n                      <th  class=\\\"w170\\\" *ngIf=\\\"forApprovel==2\\\">&nbsp;\\n                        <!-- <div class=\\\"th-search\\\">\\n                          <mat-select placeholder=\\\"Select designation\\\" name=\\\"designation\\\"  #designation=\\\"ngModel\\\" [(ngModel)]=\\\"filter.designation\\\">\\n                            <mat-option *ngFor='let list of designationData' (click)=\\\"getTravelList(travelStatus)\\\" [value]=\\\"list.designation\\\">{{list.designationName}}</mat-option>\\n                            \\n                          </mat-select>\\n                        </div> -->\\n                      </th>\\n                      <th class=\\\"w130\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <mat-select placeholder=\\\"Select\\\" name=\\\"month\\\" #month=\\\"ngModel\\\" [(ngModel)]=\\\"filterData.month\\\" >\\n                            <mat-option  value={{i+1}} (click)=\\\"getTravelList(forApprovel,travelStatus)\\\" *ngFor=\\\"let month of monthArray;let i=index\\\">{{month}}</mat-option>\\n                          </mat-select>\\n                          \\n                        </div>\\n                      </th>\\n                      <th class=\\\"w100\\\">&nbsp;</th>\\n                      <th class=\\\"w130\\\">&nbsp;</th>\\n                      <th class=\\\"w120\\\">&nbsp;</th>\\n                    </tr>\\n                  </table>\\n                </form>\\n              </div>\\n            </div>\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor=\\\"let list of trvelPlanLIst;let i=index\\\">\\n                    <td class=\\\"w30\\\">{{i+1}}</td>\\n                    <td class=\\\"w200\\\">{{list.createdOn|date :'EEEE, MMMM d, y'}}</td>\\n                    <td *ngIf=\\\"forApprovel==2\\\"><a class=\\\"link-btn\\\" routerLink=\\\"/detail-travel/{{list.travelPlanID}}\\\" routerLinkActive=\\\"active\\\" mat-button>{{list.userName}}</a></td>\\n                    <td class=\\\"w170\\\" *ngIf=\\\"forApprovel==2\\\">\\n                      <span >{{list.designationName}}</span>\\n                    </td>\\n                    <td class=\\\"w130\\\">\\n                      <span *ngIf=\\\"list.month==1\\\" >January</span>\\n                      <span *ngIf=\\\"list.month==2\\\">February</span>\\n                      <span *ngIf=\\\"list.month==3\\\">March</span>\\n                      <span *ngIf=\\\"list.month==4\\\">April</span>\\n                      <span *ngIf=\\\"list.month==5\\\">May</span>\\n                      <span *ngIf=\\\"list.month==6\\\">June</span>\\n                      <span *ngIf=\\\"list.month==7\\\">July</span>\\n                      <span *ngIf=\\\"list.month==8\\\">August</span>\\n                      <span *ngIf=\\\"list.month==9\\\">September</span>\\n                      <span *ngIf=\\\"list.month==10\\\">October</span>\\n                      <span *ngIf=\\\"list.month==11\\\">November</span>\\n                      <span *ngIf=\\\"list.month==12\\\">December</span>\\n                    </td>\\n                    <td class=\\\"w100 text-center\\\">{{list.year}}</td>\\n                    <td class=\\\"w130 text-right\\\">&#x20B9; {{list.budget}}</td>\\n                    <td [ngClass]=\\\"{'pending':list.status==2||list.status==3,'approved':list.status==5,'reject':list.status==4||list.status==6,'draft':list.status==1}\\\" class=\\\"w120\\\">\\n                      <span *ngIf=\\\"list.status==2||list.status==3\\\" >PENDING</span>\\n                      <span *ngIf=\\\"list.status==5\\\" >APPROVED</span>\\n                      <span *ngIf=\\\"list.status==4||list.status==6\\\">REJECT</span>\\n                      <span *ngIf=\\\"list.status==1\\\" >DRAFT</span>                          \\n                      <div class=\\\"action-btns\\\">\\n                        <a mat-button class=\\\"view\\\" (click)=\\\"detailPlan(list.travelPlanID)\\\"><i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                      </div>\\n                    </td>\\n                    <!-- <button *ngIf=\\\"userRole!=1\\\" mat-button class=\\\"delete\\\" (click)=\\\"deletePlan(list.travelPlanID)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button> -->\\n                  </tr>\\n                  \\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"data-not-available\\\" *ngIf=\\\"div\\\">\\n        <div class=\\\"outer\\\">\\n          <div class=\\\"iinear\\\">\\n            <div class=\\\"figure\\\" matRipple>\\n              <div class=\\\"header\\\">\\n                <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n              </div>\\n              \\n              <div class=\\\"description\\\">\\n                <!-- <div class=\\\"cs-heading\\\">\\n                  <h2>No Travel Plane</h2>\\n                </div> -->\\n                <div class=\\\"img\\\">\\n                  <i class=\\\"material-icons\\\">error_outline</i>\\n                </div>\\n                <div class=\\\"psc\\\">\\n                  <p>data not available</p>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"fixed-multibtn-botm\\\">\\n      <ul>\\n        <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/add-travel\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport * as moment from 'moment';\n// import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-list-travel',\n  templateUrl: './list-travel.component.html'\n})\nexport class ListTravelComponent implements OnInit {\n  filter:any={};\n  forApprovel:any='1';\n  user:any={};\n  userType:any;\n  userId:any;\n  userRole:any;\n  trvelPlanLIst:any=[];\n  loader:any=false;\n  div:any=false;\n  travelStatus:any=2;\n\n  // travelStatus:any=2;\n  monthArray:any=[\"January\",\n \"February\",\n \"March\",\n \"April\",\n \"May\",\n \"June\",\n \"July\",\n \"August\",\n \"September\",\n \"October\",\n \"November\",\n \"December\"];\n\n designationData = [\n\n  { designationName: 'Vice President', designation: 1},\n  { designationName: 'Deputy General Manager', designation: 2},\n  { designationName: 'General Manager', designation: 3},\n  { designationName: 'Assistant General Manager', designation: 4},\n  { designationName: 'Sr Manager', designation: 5},\n  { designationName: 'Manager', designation: 6},\n  { designationName: 'Deputy Manager', designation: 7},\n  { designationName: 'Sr Executive', designation: 8},\n  { designationName: 'Executive', designation: 9},\n  { designationName: 'Assistant Manager', designation: 10},\n  { designationName: 'Assistant', designation: 11},\n  { designationName: 'Trainee', designation: 12},\n  { designationName: 'Others', designation: 13}\n];\n  constructor( public service:ConstantService,public route:Router,public dialog:DialogComponent) {\n\n    this.user = JSON.parse(localStorage.getItem('user')) || [];\n    console.log(this.user);\n    this.userType = this.user.data.userType;\n    this.userId = this.user.data.userId;\n    this.userRole=this.user.data.role;\n    // this.filter.createdOn='';\n    this.forApprovel=2;\n      this.travelStatus==2;\n    if(this.userId)\n    {\n        this.getTravelList(this.forApprovel,this.travelStatus);\n    }\n    console.log(this.userType ,\"&\" , this.userId, \"&\" ,this.userRole);\n   }\n\n  ngOnInit() {\n  }\n  // creaatedDate:any;\n \n  filterData:any={}\n  getTravelList(planList,filterStatus)\n  {\n    console.log(planList,filterStatus);\n    this.forApprovel=planList;\n    \n    this.travelStatus=filterStatus;\n    if(this.filterData.createdOn)\n    {\n      this.filterData.createdOn=moment(this.filterData.createdOn).format('YYYY-MM-DD');\n    }\n      this.trvelPlanLIst=[];\n      if(this.forApprovel==1)\n      {\n        this.filterData.currentPage=1;\n        this.filterData.pageSize=50;\n        this.filterData.createdById=this.userId;\n        this.filterData.status=filterStatus;\n\n      }\n      else if(this.forApprovel==2)\n      {\n        this.filterData.currentPage=1;\n        this.filterData.pageSize=50;\n        this.filterData.createdById=undefined;\n        if(this.userRole==17 && filterStatus==2)\n        {\n          this.filterData.status=3;\n        }\n        else{\n          this.filterData.status=filterStatus;\n        }\n      }\n      this.loader=true;\n    this.service.fetchData(this.filterData,\"travelplan/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.trvelPlanLIst=result['data'];\n        if(this.forApprovel==2)\n        {\n          const travelArray=this.trvelPlanLIst.filter(row=>row.createBy!=this.userId);\n          this.trvelPlanLIst=travelArray;\n        }\n      }\n      if(this.forApprovel==1)\n      {\n        if(filterStatus==2)\n        {\n          this.getTravelApproverList(3)\n        }\n        if(filterStatus==6)\n        {\n          this.getTravelApproverList(4)\n        }\n      }\n      if(result['status']=='Failed')\n      {\n        this.div=true;\n        this.trvelPlanLIst=[];\n      }\n\n    })\n  }\n\n  tmpTravelList:any=[];\n  getTravelApproverList(status)\n  {\n    this.loader=true;\n    this.filterData.status=status;\n    this.filterData.createdById=this.userId;\n    this.service.fetchData(this.filterData,\"travelplan/list\").subscribe((result)=>{\n      console.log(result);\n      this.loader=false;\n      if(result['status']=='Success')\n      {\n        this.tmpTravelList=result['data'];\n        this.trvelPlanLIst=this.trvelPlanLIst.concat(this.tmpTravelList);\n      }\n    })\n  }\n  clearfilter(){\n    this.filterData={};\n    this.filterData.createdOn=undefined;\n    this.getTravelList(this.forApprovel,this.travelStatus);\n  }\n\n  detailPlan(id)\n  {\n    console.log(\"hello\");\n    \n    this.route.navigate(['/detail-travel/'+id]);\n  }\n\n  deletePlan(id)\n  {\n    this.dialog.delete('Travel Plan !').then((result) => {\n\n      if(result)\n      {\n        this.service.fileData(\"\",\"travel/delete/\"+id).subscribe((result)=>{\n          console.log(result);\n          if(result['status']==\"Success\")\n          {\n            // this.getTravelList('2');\n          }\n        })\n      }\n    \n\n  })\n  }\n  \n}\n","module.exports = \"<div class=\\\"edit-modal\\\" >\\n  <p class=\\\"heading\\\">Update Travel</p>\\n  <div mat-dialog-content style=\\\"overflow-y: inherit; overflow-x: hidden; overflow: inherit;\\\">\\n    <div class=\\\"from-fields\\\">\\n      <div class=\\\"row mt15\\\">\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"multi-all-select\\\">\\n            <label>State</label>\\n            <ng-multiselect-dropdown\\n            [placeholder]=\\\"'Select State'\\\"\\n            [data]=\\\"travelStateList\\\"\\n            [(ngModel)]=\\\"planData.state\\\"\\n            [settings]=\\\"dropdownSettings\\\"\\n            (onSelect)=\\\"getDistrictList($event)\\\"\\n           \\n            >\\n          </ng-multiselect-dropdown>\\n        </div>\\n      </div>\\n      <div class=\\\"col s4\\\">\\n        <div class=\\\"multi-all-select\\\">\\n          <label>District</label>\\n          <ng-multiselect-dropdown\\n          [placeholder]=\\\"'Select District'\\\"\\n          [data]=\\\"travelDistrictList\\\"\\n          [(ngModel)]=\\\"planData.districtName\\\"\\n          [settings]=\\\"dropdownSettings1\\\"\\n          (onSelect)=\\\"getCityList($event)\\\"\\n         \\n          >\\n        </ng-multiselect-dropdown>\\n      </div>\\n    </div>\\n    <div class=\\\"col s4\\\">\\n      <div class=\\\"control-field pr80\\\">\\n        <div class=\\\"multi-all-select\\\">\\n          <label>City</label>\\n          <ng-multiselect-dropdown\\n          [placeholder]=\\\"'Select City'\\\"\\n          [data]=\\\"travelCityList\\\"\\n          [(ngModel)]=\\\"planData.cityName\\\"\\n          [settings]=\\\"dropdownSettings2\\\"\\n          (onSelect)=\\\"onItemSelect(planData.cityName)\\\"\\n         \\n          >\\n        </ng-multiselect-dropdown>\\n      </div>\\n      <!-- <div class=\\\"plus-btn\\\">\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"accent\\\">\\n          <i class=\\\"material-icons\\\">add</i>\\n        </button>\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"col s12\\\">\\n    <div class=\\\"select-one pt10\\\">\\n      <span>Do you want any sales activity ?</span>\\n      <mat-radio-group style=\\\"display: flex;\\\"  name=\\\"isSalesActivity\\\" #isSalesActivity=\\\"ngModel\\\" [(ngModel)]=\\\"sendData.isSalesActivity\\\" >\\n        <mat-radio-button [value]=true >Yes</mat-radio-button>\\n        <mat-radio-button [value]=false >No</mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"sendData.isSalesActivity==true\\\">\\n    <div class=\\\"col s6\\\">\\n      <div class=\\\"control-field\\\">\\n        <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n          <mat-select placeholder=\\\"Select\\\" name=\\\"activityType\\\" #activityType=\\\"ngModel\\\" [(ngModel)]=\\\"sendData.activityType\\\">\\n            <mat-option [value]=1>Mechanic get together</mat-option>\\n            <mat-option [value]=2>Retailer get together</mat-option>\\n            <mat-option [value]=3>van Campaign</mat-option>\\n            <mat-option [value]=4>Stall Campaign</mat-option>\\n            <mat-option [value]=5>Exhibition Participation</mat-option>\\n            <mat-option [value]=6>Signboard</mat-option>\\n            <mat-option [value]=7>Wall/Shop Painting</mat-option>\\n            <mat-option [value]=8>GiveAways</mat-option>\\n            <mat-option [value]=9>Printing Of Lesafelts,banners, posters etc.</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n    <div class=\\\"col s6\\\">\\n      <div class=\\\"control-field\\\">\\n        <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n          <input matInput type=\\\"number\\\" placeholder=\\\"Budget\\\" name=\\\"salesBudget\\\" #salesBudget=\\\"ngModel\\\" [(ngModel)]=\\\"sendData.salesBudget\\\" >\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<!-- <div class=\\\"row mt15\\\">\\n  <div class=\\\"col s12 padding0\\\">\\n    <div class=\\\"cs-table left-right-20\\\">\\n      <div class=\\\"table-head\\\">\\n        <table>\\n          <tr>\\n            <th>State</th>\\n            <th class=\\\"w220\\\">District</th>\\n            <th class=\\\"w220 \\\">City</th>\\n            <th class=\\\"w130 text-center\\\">Action</th>\\n          </tr>\\n        </table>\\n      </div>\\n      <div class=\\\"table-container\\\">\\n        <div class=\\\"table-content\\\">\\n          <table>\\n            <tr>\\n              <td>Haryana</td>\\n              <td class=\\\"w220\\\">Faridabad</td>\\n              <td class=\\\"w220\\\">Faridabad</td>\\n              <td class=\\\"w130\\\">\\n                <div class=\\\"action-btns default-action\\\">\\n                  <a mat-button class=\\\"delete\\\"  (click)=\\\"removePlan(i,indx)\\\"><i class=\\\"material-icons\\\">delete_sweep</i>Delete</a>\\n                </div>     \\n                <a mat-button class=\\\"del-btn\\\" (click)=\\\"removePlan(i,indx)\\\">Delete</a>\\n              </td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-raised-button color=\\\"warn\\\"  [mat-dialog-close]=\\\"false\\\" class=\\\"mr15\\\">Cancel</button>\\n  <div >\\n    <!-- [disabled]=\\\"!travelData.details||!travelData.actual||!travelData.reasonForDeviation\\\" (click)=\\\"update_travel()\\\" -->\\n    <button mat-raised-button  [mat-dialog-close]=\\\"true\\\" color=\\\"accent\\\" (click)=\\\"update_travel()\\\">Save</button>\\n  </div>\\n</div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYXZlbC91cGRhdGUtdHJhdmVsL3VwZGF0ZS10cmF2ZWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { ConstantService } from 'src/app/constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\n\n\n@Component({\n  selector: 'app-update-travel',\n  templateUrl: './update-travel.component.html',\n  styleUrls: ['./update-travel.component.scss']\n})\nexport class UpdateTravelComponent implements OnInit {\n\n  travelData:any={};\n  planData:any={};\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings = {};\n  dropdownSettings1 = {};\n  dropdownSettings2 = {};\n  sendData:any={};\n  loader:any=false;\n  constructor(@Inject(MAT_DIALOG_DATA)public data,public service:ConstantService,public dialog:MatDialog,public toast:SnackBarOverview) {\n    console.log(data);\n    this.travelData=data['value'];\n    if(data!=null)\n    {\n      this.planData=data['value']\n      console.log(this.planData);\n      \n      this.planData.state=[this.travelData.state];\n      this.planData.districtName=[this.travelData.district];\n      console.log(this.planData.districtName); \n      this.planData.cityName=[this.travelData.city];\n      // this.sendData.state=this.planData.state;\n      // this.sendData.city=this.planData.cityName;\n      // this.sendData.district=this.planData.districtNames;\n      // this.sendData.salesActivity=this.travelData.salesActivity;\n      this.sendData.salesBudget=this.travelData.salesBudget;\n      this.sendData.travelDetailId=this.travelData.travelDetailId;\n      this.sendData.travelPlanID=data['id']; \n      this.sendData.isSalesActivity=this.travelData.salesActivity;\n      this.sendData.activityType=this.travelData.activityType;\n     \n      console.log(this.sendData);\n      this.getStateList();\n    }\n    \n    \n\n    console.log(this.planData);\n    \n\n   }\n\n  ngOnInit() {\n\n    // this.dropdownList = [\n    //   { item_id: 1, item_text: 'Mumbai' },\n    //   { item_id: 2, item_text: 'Bangaluru' },\n    //   { item_id: 3, item_text: 'Pune' },\n    //   { item_id: 4, item_text: 'Navsari' },\n    //   { item_id: 5, item_text: 'New Delhi' }\n    // ];\n    // this.selectedItems = [\n    //   { item_id: 3, item_text: 'Pune' },\n    //   { item_id: 4, item_text: 'Navsari' }\n    // ];\n    this.dropdownSettings = {\n      singleSelection: true,\n      idField: 'state',\n      textField: 'state',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      \n      allowSearchFilter: true\n    };\n    this.dropdownSettings1 = {\n      singleSelection: true,\n      idField: 'districtName',\n      textField: 'districtName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      \n      allowSearchFilter: true\n    };\n    this.dropdownSettings2 = {\n      singleSelection: true,\n      idField: 'cityName',\n      textField: 'cityName',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n     \n      allowSearchFilter: true\n    };\n  }\n  onItemSelect(item: any) {\n    this.sendData.city=item[0];\n    console.log(item);\n  }\n  onSelectAll(items: any) {\n    console.log(items);\n  }\n    \n\n  update_travel()\n  {\n    console.log(this.sendData);\n    this.service.fetchData(this.sendData,\"traveldetail/update\").subscribe((result)=>{\n      console.log(result);\n      if(result['status']==\"Success\")\n      {\n        this.toast.openSucess(\"Travel Plan Update\",\"SuccessFully\");\n        this.dialog.closeAll();\n      }\n    })\n    \n  }\n  travelStateList:any=[];\n  getStateList()\n  {\n    \n    this.loader=true;\n    this.service.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      if(response['status']=='Success')\n      {\n        this.travelStateList=response['data'];\n        this.getDistrictList(this.planData.state);\n      }\n    });\n  }\n  travelDistrictList:any=[];\ngetDistrictList(state)\n{  \n  console.log(state);\n  this.sendData.state=state[0];\n  this.travelDistrictList=[];\n  // console.log(state);\n  \n  this.loader=true;\n  this.service.fetchData(this.planData.state,'district/list/').subscribe((response)=>{\n    this.loader=false;\n    console.log(response);\n    if(response['status']=='Success')\n    {\n      this.travelDistrictList=response['data'][0].distrcits;\n      this.getCityList(this.planData.city)\n    }\n    // console.log(this.district1);\n  });\n}\ntravelCityList:any=[];\ngetCityList(district)\n{\n  this.travelCityList=[];\n  this.sendData.district=district;\n  console.log(district);\n  // this.planDetail[i].district=district\n  this.loader=true;\n  this.service.fetchData(Array({\"stateName\":this.planData.state[0],\"distrcits\":Array({'districtName':this.planData.districtName[0]})}),'city/list').subscribe((response)=>{\n    console.log(response);\n    this.loader=false\n    if(response['status']=='Success')\n    {this.travelCityList=response['data'][0].distrcits[0].cities;}\n    // console.log(this.shippingCity);\n  });\n}\ntravelcity(city,i)\n{\n  // this.planDetail[i].city=city\n}\n\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div mat-dialog-content>\\n    \\n    <p class=\\\"heading\\\">Update Address</p>\\n    <div class=\\\"from-fields\\\">\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n              <mat-select placeholder=\\\"State\\\" name=\\\"state\\\" #state=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.state\\\" [ngClass]=\\\"{'has-error' : state.invalid } \\\" required>\\n                <mat-option (click)=\\\"get_district()\\\"  *ngFor=\\\"let state of statelist\\\" value=\\\"{{state}}\\\">{{state}}</mat-option>\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!state.valid && state.touched\\\">\\n                  State is required....\\n                </div>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">                \\n              <mat-select placeholder=\\\"District\\\"   name=\\\"district\\\" #district=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.district\\\" [ngClass]=\\\"{'has-error' : district.invalid } \\\" >\\n                <mat-option (click)=\\\"get_city()\\\"  *ngFor=\\\"let district of district1\\\" value=\\\"{{district.districtName}}\\\">{{district.districtName}}</mat-option>\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!district.valid && district.touched\\\">\\n                  District is required....\\n                </div>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n              <mat-select placeholder=\\\"City\\\"  name=\\\"city\\\" #city=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.city\\\" [ngClass]=\\\"{'has-error' : city.invalid } \\\" >\\n                <mat-option  (click)= \\\"get_pincode()\\\" *ngFor=\\\"let city of cities\\\" value=\\\"{{city.cityName}}\\\">{{city.cityName}}</mat-option>\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!city.valid && city.touched\\\">\\n                  City is required....\\n                </div>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col s6\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n              <mat-select placeholder=\\\"Pin\\\"  name=\\\"pin\\\" #pin=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.pin\\\"  [ngClass]=\\\"{'has-error' : pin.invalid } \\\" >\\n                <mat-option   *ngFor=\\\"let pin of areas\\\" value=\\\"{{pin}}\\\">{{pin}}</mat-option>\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!pin.valid && pin.touched\\\">\\n                  Pin is required....\\n                </div>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"control-field\\\">\\n            <mat-form-field class=\\\"cs-input infix-bodr8\\\" >\\n              <textarea matInput placeholder=\\\"Address\\\" name=\\\"street\\\" #street=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.street\\\" class=\\\"h90\\\"></textarea>\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!street.valid && street.touched\\\">\\n                Street is required....\\n              </div>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n    <ng-container *ngIf=\\\"district.valid\\\">\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"update_salesuser()\\\">Save</button>\\n    </ng-container>\\n  </div>\\n  \\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-address-modal',\n  templateUrl: './address-modal.component.html',\n})\nexport class AddressModalComponent implements OnInit {\nsales_data:any={};\nstatelist:any=[];\ndistrictlist:any=[];\nst:any=[];\ndistrict1:any=[];\ncitylist:any=[];\ncities:any=[];\ndistricts2:any=[];\ncities1:any=[];\nareas:any=[];\ndistricts1:any=[];\nmessage:any;\nloader:any;\n  constructor( public toast: SnackBarOverview,public router:Router,public dialogRef: MatDialogRef<AddressModalComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService) {\n    \n    this.sales_data=this.data;\n    this.sales_data.district=this.data.district.charAt(0).toUpperCase()+ this.data.district.substr(1).toLowerCase();\n    this.sales_data.city=this.data.city.charAt(0).toUpperCase()+ this.data.city.substr(1).toLowerCase();\n    console.log(this.sales_data);\n    this.get_state();\n    this.get_district();\n    this.get_city();\n    this.get_pincode();\n   }\n\n\n\n  ngOnInit() { \n    \n  }\n  get_state(){\n    // this.sales_data.state='';/\n    this.db.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.statelist=response['data'];  \n      console.log(this.statelist);\n        this.get_district();\n    });\n  }\n  get_district(){\n    // this.sales_data.district='';\n    console.log(this.sales_data.state);\n    this.st=Array(this.sales_data.state)\n    this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n      console.log(response);\n      this.districtlist=response['data'];\n      this.district1=this.districtlist[0].distrcits;\n    });\n  this.get_city()\n  }\n  get_city(){\n    // this.sales_data.city='';\n    console.log(this.sales_data.state,this.sales_data.district);\n    console.log(this.sales_data.district);\n    this.db.fetchData(Array({\"stateName\":this.sales_data.state,\"distrcits\":Array({\"districtName\":this.sales_data.district})}),'city/list').subscribe((response)=>{\n      console.log(response);\n      if(response['status']=='Success')\n      {\n        this.citylist=response['data'];\n        this.districts1=this.citylist[0].distrcits;\n        this.cities=this.districts1[0].cities;\n        // this. get_pincode();\n\n      }\n     \n      console.log(this.cities);\n    });\n  }\n  get_pincode(){\n    // this.sales_data.pin='';/\n    console.log(this.sales_data.state,this.sales_data.district,this.sales_data.city);\n    this.db.fetchData(Array({\"stateName\":this.sales_data.state,\"distrcits\":Array({\"districtName\":this.sales_data.district})}),'city/list').subscribe((response)=>{\n      console.log(response);\n      if(response['status']=='Success')\n      {\n        this.cities1=response['data'][0]['distrcits'][0]['cities'];\n        let filterpincode= this.cities1.filter(x => x.cityName.toLowerCase(x.cityName)===this.sales_data.city.toLowerCase(this.sales_data.city));\n        this.areas=filterpincode[0].pinCodes;\n      }\n     \n    });\n  }\n  update_salesuser(){\n    this.loader=true;\n    console.log(this.data);\n   this.db.fetchData(this.sales_data,'user/update').subscribe((response)=>{\n     console.log(response)\n     this.loader=false;\n     this.message=response['message'];\n    if(this.message==\"User updated successfully\")\n    {\n      this.toast.openSucess('Address updated successfully','');\n    }\n    else\n    {\n      this.toast.openError('Something went wrong Please Try Again!!','');\n    }\n  });\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updateMobileEmail()\\\"  #f=\\\"ngForm\\\" novalidate>\\n        <div *ngIf=\\\"loader\\\"> \\n                <div class=\\\"cs-loader\\\">\\n                  <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n                </div>\\n         </div>\\n\\n\\n\\n<div *ngIf=\\\"data.type=='userName'\\\" mat-dialog-content>\\n                <p class=\\\"heading\\\">Update User Detail</p>\\n                \\n                <div class=\\\"row\\\">\\n                        <div class=\\\"from-fields col s12\\\">\\n                                <div class=\\\"control-field\\\">\\n                                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                                                <!-- <input matInput placeholder=\\\"Email\\\" value=\\\"email\\\" [(ngModel)]=\\\"data.email\\\"> -->\\n                                                <input matInput placeholder=\\\"Name\\\" name=\\\"username\\\"  [(ngModel)]=\\\"data.userName\\\" #userName=\\\"ngModel\\\" required>\\n                                        </mat-form-field>\\n                                </div>\\n                                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!data.userName\\\">\\n                                        Name Required!\\n                                </div>\\n                        </div>\\n                </div>\\n\\n\\n                <div class=\\\"row\\\">\\n                        <div class=\\\"from-fields col s12\\\">\\n\\n                                <div class=\\\"control-field\\\">\\n                                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                                <mat-select placeholder=\\\"Role\\\" name=\\\"role\\\" [(ngModel)]=\\\"data.role\\\"  #role=\\\"ngModel\\\" required>\\n                                                        <mat-option *ngFor='let role of roleData' [value]=\\\"role.roleId\\\">{{role.roleName}}</mat-option>\\n                                                </mat-select>\\n                                        </mat-form-field>\\n                                </div>\\n\\n                                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!data.role\\\">\\n                                        Role Required!\\n                                </div>\\n                        </div>\\n                </div>\\n                \\n        </div>\\n        \\n\\n        <div *ngIf=\\\"data.type=='target'\\\" mat-dialog-content>\\n                        <p class=\\\"heading\\\">Update Yearly Target</p>\\n                        \\n                <div class=\\\"row\\\">\\n                        <div class=\\\"from-fields col s12\\\">\\n                                <div class=\\\"control-field\\\">\\n                                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                                                <!-- <input matInput placeholder=\\\"Email\\\" value=\\\"email\\\" [(ngModel)]=\\\"data.email\\\"> -->\\n                                                <input matInput placeholder=\\\"Yearly Target\\\" name=\\\"target\\\" id=\\\"target\\\" [(ngModel)]=\\\"data.totalTarget\\\" #target=\\\"ngModel\\\" maxlength=\\\"10\\\" (keypress)=\\\"MobileNumber($event)\\\"  required>\\n                                        </mat-form-field>\\n                                </div>\\n                                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!data.userName\\\">\\n                                        Target Required!\\n                                </div>\\n                        </div>\\n                </div>\\n        </div>\\n\\n\\n\\n<div *ngIf=\\\"data.type=='email'\\\" mat-dialog-content>\\n<p class=\\\"heading\\\">Update Email</p>\\n\\n<div class=\\\"row\\\">\\n        <div class=\\\"from-fields col s12\\\">\\n                <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                                <!-- <input matInput placeholder=\\\"Email\\\" value=\\\"email\\\" [(ngModel)]=\\\"data.email\\\"> -->\\n                                <input matInput placeholder=\\\"Email-ID\\\" name=\\\"email\\\" value=\\\"email\\\" [(ngModel)]=\\\"data.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>\\n                        </mat-form-field>\\n                </div>\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n                        Please Enter Valid Email....\\n                </div>\\n        </div>\\n</div>\\n</div>\\n\\n\\n<div *ngIf=\\\"data.type=='mobile'\\\" mat-dialog-content>\\n<p class=\\\"heading\\\">Update Mobile</p>\\n<div class=\\\"row\\\">\\n        <div class=\\\"from-fields col s12\\\">\\n                <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                                <input matInput type=\\\"text\\\"  maxlength=\\\"10\\\"  placeholder=\\\"Mobile\\\" name=\\\"mobile\\\"   value=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" #mobile=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobile.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\" required>\\n                                <!-- <input matInput placeholder=\\\"Mobile\\\" value=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\"> -->\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!mobile.valid && mobile.touched\\\">\\n                                Please Enter Valid Mobile....\\n                        </div>\\n                </div>\\n        </div>\\n</div>\\n\\n\\n</div>\\n\\n\\n<div *ngIf=\\\"data.type=='concern_approval'\\\" mat-dialog-content>\\n\\n<p class=\\\"heading\\\">Update Concern Right</p>\\n<div class=\\\"row\\\">\\n        <div class=\\\"from-fields col s12\\\">\\n                <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input\\\">\\n                                <mat-select placeholder=\\\"Select Concern Right\\\" name=\\\"concern_approval\\\" [(ngModel)]=\\\"data.concernApprovalAccess\\\">\\n                                        <mat-option [value] =\\\"true\\\" >Yes</mat-option>\\n                                        <mat-option [value] =\\\"false\\\" >No</mat-option>\\n                                </mat-select>\\n                        </mat-form-field>\\n                </div>\\n        </div>\\n</div>\\n\\n</div>\\n\\n\\n<div *ngIf=\\\"data.type=='designationName'\\\" mat-dialog-content>\\n\\n<p class=\\\"heading\\\">Update Designation</p>\\n<div class=\\\"row\\\">\\n        <div class=\\\"from-fields col s12\\\">\\n                <div class=\\\"control-field\\\">\\n\\n                <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"Designation\\\" name=\\\"designation\\\" id=\\\"designation\\\" [(ngModel)]=\\\"data.designation\\\"  #designation=\\\"ngModel\\\">\\n                                <mat-option *ngFor='let list of designationData' [value]=\\\"list.designation\\\">{{list.designationName}}</mat-option>\\n                        </mat-select>\\n                </mat-form-field>\\n                </div>\\n        </div>\\n</div>\\n\\n</div>\\n\\n\\n\\n<div *ngIf=\\\"data.type=='territory'\\\" mat-dialog-content>\\n<p class=\\\"heading\\\">Update Territories</p>\\n<div class=\\\"row\\\">\\n        <div class=\\\"from-fields col s12\\\">\\n                <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input\\\">\\n                                <mat-select placeholder=\\\"Select territory\\\" name=\\\"territory\\\" [(ngModel)]=\\\"data.territory\\\" multiple>\\n                                        <mat-option *ngFor='let territory of territorylist' value=\\\"{{territory.territoryID}}\\\" >{{territory.territoryName}}</mat-option>\\n                                </mat-select>\\n                        </mat-form-field>\\n                </div>\\n        </div>\\n</div>\\n\\n\\n</div>  \\n<div *ngIf=\\\"data.type=='segment'\\\" mat-dialog-content>\\n<p class=\\\"heading\\\">Update Segment</p>\\n<div class=\\\"row\\\">\\n        <div class=\\\"from-fields col s12\\\">\\n                <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input\\\">\\n                                <mat-select placeholder=\\\"Select segment\\\" name=\\\"segment\\\" [(ngModel)]=\\\"data.segment\\\" multiple>\\n                                        <mat-option *ngFor='let segment of segmentlist' value=\\\"{{segment.text}}\\\" >{{segment.text}}</mat-option>\\n                                </mat-select>\\n                        </mat-form-field>\\n                </div>\\n        </div>\\n</div>\\n\\n</div>\\n<div *ngIf=\\\"data.type=='assign'\\\" mat-dialog-content>\\n<p class=\\\"heading\\\">Update Juniors</p>\\n\\n<div class=\\\"row\\\">\\n        <div class=\\\"from-fields col s12\\\">\\n                <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input\\\">\\n                                <mat-select placeholder=\\\"Select Juniors\\\" name=\\\"Juniors\\\" [(ngModel)]=\\\"data.Juniors\\\" multiple>\\n                                        <mat-option *ngFor='let junior of junior' value=\\\"{{junior.userId}}\\\" >{{junior.userName}}</mat-option>\\n                                </mat-select>\\n                        </mat-form-field>\\n                </div>\\n        </div>\\n</div>\\n</div>\\n<div mat-dialog-actions>\\n<button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n<button mat-raised-button color=\\\"accent\\\">Save</button>\\n</div>\\n</form>\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { Router } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\n@Component({\n  selector: 'app-email-modal',\n  templateUrl: './email-modal.component.html',\n})\nexport class EmailModalComponent implements OnInit {\n  message:any;\n  loader:any;\n  id:any;\n  juniordata:any={}\n  role:any;\n  junior:any=[];\n  segmentlist:any=[];\n  staffSegments:any=[];\n  territories:any=[];\n  territorylist:any=[];\n  saleHierarchies:any=[];\n  designationData:any = [];\n  roleData:any = [];\n\n  constructor(public toast:SnackBarOverview,public router:Router,public dialogRef: MatDialogRef<EmailModalComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService)\n   { \n     console.log(data);\n\n     this.designationData = [\n\n      { designationName: 'Vice President', designation: 1},\n      { designationName: 'Deputy General Manager', designation: 2},\n      { designationName: 'General Manager', designation: 3},\n      { designationName: 'Assistant General Manager', designation: 4},\n      { designationName: 'Sr Manager', designation: 5},\n      { designationName: 'Manager', designation: 6},\n      { designationName: 'Deputy Manager', designation: 7},\n      { designationName: 'Sr Executive', designation: 8},\n      { designationName: 'Executive', designation: 9},\n      { designationName: 'Assistant Manager', designation: 10},\n      { designationName: 'Assistant', designation: 11},\n      { designationName: 'Trainee', designation: 12},\n      { designationName: 'Others', designation: 13}\n  ];\n     \n   }\n  \n  ngOnInit() {\n    this.rolelist();\n    this.get_territory();\n    this.segment_list();\n    this.get_juniors();\n  }\n\n  segment_list(){\n\n   \n    this.db.fileData('','segment/list/').subscribe((response)=>{\n      console.log(response);\n      this.segmentlist=response['data'];\n    });\n  }\n\n  get_juniors(){\n    if(this.data.role==8){\n      this.role=parseInt(this.data.role)+2;}else\n      {this.role=parseInt(this.data.role)+1;}\n      this.db.fetchData({'role':this.role,'currentPage': 1,\n      'pageSize': 50,},'user/list').subscribe((response)=>{\n        console.log(response);\n      this.junior=response['data'];\n      console.log(this.junior);\n     });\n  }\n\n  get_territory() {\n    this.db.fetchData({},'territory/detail').subscribe((response)=>{\n      console.log(response);\n      this.territorylist = response['data'];\n      console.log(this.territorylist);\n    });\n  }\n\n  \n\n  MobileNumber(event: any) \n  {\n      const pattern = /[0-9\\+\\-\\ ]/;\n      let inputChar = String.fromCharCode(event.charCode);\n      if (event.keyCode != 8 && !pattern.test(inputChar)) \n      {event.preventDefault(); }\n  }\n\n  rolelist() {\n\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n\n          console.log(response);\n\n          const roleArr = response['data'].filter(x => x.userTypeId==2);\n          this.roleData = roleArr[0].roles;\n          console.log(this.roleData);\n      });\n  }\n\n\n  updateMobileEmail() {\n\n        console.log(this.data);\n        if(this.data.type=='territory') {\n\n            for(let i=0;i<this.data.territory.length;i++){\n                this.territories.push(this.data.territory[i]);\n                console.log(this.territories);\n            }\n            this.data.territories=this.territories;\n            this.data.landline=\"9050801272\";\n            this.data.country=\"string\";\n\n            this.db.fetchData(this.data,'user/update').subscribe((response)=>{\n\n                  console.log(response);\n                  this.loader=false;\n                  this.message=response['message'];\n                  if(this.message==\"User updated successfully\")\n                  {\n                    this.toast.openSucess('Updated successfully','');\n                    this.router.navigate(['/sales-user-detail/'+this.data.userId]) \n                \n                  }\n                  else\n                  {\n                    this.toast.openError('Something went wrong Please Try Again!!','');\n                  }\n                  this.dialogRef.close();\n\n            });\n      }\n\n      if(this.data.type=='email') {\n\n            console.log('email');\n            console.log(this.data)\n            for(let i=0;i<this.data.userTerritories.length;i++){\n              this.territories.push(this.data.userTerritories[i].territoryId);\n              console.log(this.territories);\n            }\n              this.data.territories=this.territories;\n            console.log(this.data);\n            \n            this.loader=true;\n            console.log(this.data);\n            this.data.landline=\"9050801272\";\n            this.data.country=\"string\";\n            this.db.fetchData(this.data,'user/update').subscribe((response)=>{\n              console.log(response);\n              this.loader=false;\n              this.message=response['message'];\n              if(this.message==\"User updated successfully\")\n              {\n                this.toast.openSucess('Updated successfully','');\n                this.router.navigate(['/sales-user-detail/'+this.data.userId]) \n            \n              }\n              else\n              {\n                this.toast.openError('Something went wrong Please Try Again!!','');\n              }\n              this.dialogRef.close();\n            });\n      }\n\n\n      if(this.data.type=='target') {\n\n            this.loader=true;\n\n            this.db.fetchData(this.data,'user/update').subscribe((response)=>{\n\n                  console.log(response);\n                  this.loader=false;\n                  this.message=response['message'];\n                  this.dialogRef.close();\n\n            });\n      }\n\n\n      if(this.data.type=='mobile') {\n\n            console.log('mobile');\n            for(let i=0;i<this.data.userTerritories.length;i++) {\n\n                  this.territories.push(this.data.userTerritories[i].territoryId);\n                  console.log(this.territories);\n            }\n\n            this.data.territories=this.territories;  \n            this.loader=true;\n            console.log(this.data);\n            this.data.landline=\"9050801272\";\n            this.data.country=\"string\";\n            this.db.fetchData(this.data,'user/update').subscribe((response)=>{\n\n                  console.log(response);\n                  this.loader=false;\n                  this.message=response['message'];\n                  if(this.message==\"User updated successfully\")\n                  {\n                    this.toast.openSucess('Updated successfully','');\n                    this.router.navigate(['/sales-user-detail/'+this.data.userId]) \n                \n                  }\n                  else\n                  {\n                    this.toast.openError('Something went wrong Please Try Again!!','');\n                  }\n                  this.dialogRef.close();\n\n            });\n      }\n\n\n      if(this.data.type=='segment') {\n\n            console.log(this.data.segment);\n            for(let j=0;j<this.data.segment.length;j++){\n              this.staffSegments.push({\"userId\": this.data.userId,\n              \"segmentCode\":this.data.segment[j],\n              \"segment\": this.data.segment[j]})\n            }\n            console.log(this.staffSegments);\n            this.data.staffSegments=this.staffSegments;\n            for(let i=0;i<this.data.userTerritories.length;i++){\n              this.territories.push(this.data.userTerritories[i].territoryId);\n              console.log(this.territories);\n              }\n            this.data.territories=this.territories;    \n            this.loader=true;\n            console.log(this.data);\n            this.data.landline=\"9050801272\";\n            this.data.country=\"string\";\n            this.db.fetchData(this.data,'user/update').subscribe((response)=>{\n              console.log(response);\n              this.loader=false;\n              this.message=response['message'];\n              if(this.message==\"User updated successfully\")\n              {\n                this.toast.openSucess('Updated successfully','');\n                this.router.navigate(['/sales-user-detail/'+this.data.userId]) \n            \n              }\n              else\n              {\n                this.toast.openError('Something went wrong Please Try Again!!','');\n              }\n              this.dialogRef.close();\n            });\n      }\n\n\n      if(this.data.type=='assign')  {\n\n              console.log(\"array junior\");\n              console.log(this.data.Juniors);\n              for (let index = 0; index < this.data.Juniors.length; index++) {\n                  this.saleHierarchies.push( {\"juniorUserID\":this.data.Juniors[index]} );\n              }\n\n              console.log(this.saleHierarchies);\n              this.data.saleHierarchies=this.saleHierarchies;\n              \n              this.db.fetchData(this.data,'user/update').subscribe((response)=>{\n\n                  console.log(response);\n                  this.loader=false;\n                  this.message=response['message'];\n                  if(this.message==\"User updated successfully\")\n                  {\n                    this.toast.openSucess('Updated successfully','');\n                  }\n                  else\n                  {\n                      this.toast.openError('Something went wrong Please Try Again!!','');\n                  }\n                  this.dialogRef.close();\n            });\n      }\n\n\n      if(this.data.type=='concern_approval')  {\n\n            console.log(this.data.concernApprovalAccess);\n\n            this.loader=true;\n            this.db.fetchData({userId: this.data.userId, concernApprovalAccess: this.data.concernApprovalAccess},'user/update').subscribe((response)=>{\n\n                console.log(response);\n                this.loader=false;\n                this.message=response['message'];\n\n                this.toast.openSucess('Updated successfully','');\n                this.dialogRef.close();\n          });\n      }\n\n\n      if(this.data.type=='designationName')  {\n\n        console.log(this.data.designation);\n\n        this.loader=true;\n        this.db.fetchData({userId: this.data.userId, designation: this.data.designation},'user/update').subscribe((response)=>{\n\n            console.log(response);\n            this.loader=false;\n            this.message=response['message'];\n\n            this.toast.openSucess('Updated successfully','');\n            this.dialogRef.close();\n      });\n     }\n\n\n     if(this.data.type=='userName')  {\n\n          console.log(this.data.userName);\n\n          if(!this.data.userName.trim()) {\n                this.data.userName = '';\n                return;\n          }\n\n          this.loader=true;\n          this.db.fetchData({userId: this.data.userId, userName: this.data.userName},'user/update').subscribe((response)=>{\n              console.log(response);\n\n                this.db.fetchData({\n                  'userId': this.data.userId,\n                  'role': this.data.role\n                },'userrole/update').subscribe((responseData)=>{\n\n                    console.log(responseData);\n                    this.loader=false;\n\n                    this.toast.openSucess('Updated successfully','');\n                    this.dialogRef.close();\n              });\n          });\n      }\n\n\n  }\n\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/sale-user-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{salesdata.userName}}  \\n          \\n          <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" name=\\\"userName\\\" (click)=\\\"openEmail('userName')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n        \\n        </h2>\\n        <p class=\\\"light\\\">{{salesdata.roleName}}</p>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"userdata.role ==1 && userdata.superAdmin\\\" class=\\\"tabs right-tab\\\">\\n      \\n        <ul>\\n            <li><a class=\\\"{{currentActiveTab==1 ? 'tab-active' : ''}}\\\" (click)='currentActiveTab=1' routerLinkActive=\\\"active\\\">Details</a></li>\\n  \\n            <li><a  class=\\\"{{currentActiveTab==2 ? 'tab-active' : ''}}\\\" (click)='currentActiveTab=2 ; lead_list()' routerLinkActive=\\\"active\\\">Leads</a></li>\\n  \\n            <li><a class=\\\"{{currentActiveTab==3 ? 'tab-active' : ''}}\\\" (click)=\\\"currentActiveTab=3; getOrderList()\\\" routerLinkActive=\\\"active\\\">Orders</a></li>\\n\\n            <li><a class=\\\"{{currentActiveTab==4 ? 'tab-active' : ''}}\\\" (click)=\\\"currentActiveTab=4; getConcernList()\\\" routerLinkActive=\\\"active\\\">Concern List</a></li>\\n\\n            <li><a class=\\\"{{currentActiveTab==5 ? 'tab-active' : ''}}\\\" (click)='currentActiveTab=5; getTravelList()' routerLinkActive=\\\"active\\\">Travel Plans</a></li>\\n\\n            <li><a class=\\\"{{currentActiveTab==6 ? 'tab-active' : ''}}\\\" (click)=\\\"currentActiveTab=6; getExpenseList()\\\" routerLinkActive=\\\"active\\\">Expenses</a></li>\\n              \\n            <li><a class=\\\"{{currentActiveTab==7 ? 'tab-active' : ''}}\\\" (click)='currentActiveTab=7;getCheckinList()' routerLinkActive=\\\"active\\\">DVR</a></li>\\n\\n  \\n          </ul>\\n\\n      </div>\\n    <!-- <div class=\\\"tabs right-tab\\\">\\n      <ul>\\n        <li><a  routerLink=\\\"/sale-user-detail/{{id}}\\\" routerLinkActive=\\\"active\\\">DETAIL</a></li>\\n        <li><a>ORDERS</a></li>\\n        <li><a>LEADS</a></li>\\n        <li><a>FOLLOWUP</a></li>\\n        <li><a>TARGETS</a></li>\\n        <li><a>TRAVEL PLAN</a></li>\\n      </ul>\\n    </div> -->\\n  </div>\\n\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div *ngIf=\\\"currentActiveTab==1\\\" class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"profile-info\\\">\\n                <ul class=\\\"flex-start\\\">\\n\\n\\n                  <li>\\n                      <div class=\\\"cs-box\\\">\\n                        <img src=\\\"assets/img/gmail.svg\\\" class=\\\"fix-img\\\">\\n                        <span>Designation</span>\\n                        <p class=\\\"link-clr\\\">{{salesdata.designationName}}</p>\\n                        <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" [(ngModel)]=\\\"salesdata.designationName\\\" #designationName=\\\"ngModel\\\" name=\\\"designationName\\\"  (click)=\\\"openEmail('designationName')\\\" ><i class=\\\"material-icons\\\">create</i></a>\\n                      </div>\\n                    </li>\\n\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/gmail.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Email</span>\\n                      <p class=\\\"link-clr\\\">{{salesdata.email}}</p>\\n                      <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" [(ngModel)]=\\\"salesdata.email\\\"  name=\\\"email\\\" (click)=\\\"openEmail('email')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Mobile</span>\\n                      <p>{{salesdata.mobile}}</p>\\n                      <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\"  color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('mobile')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n                  <li *ngIf=\\\"salesdata.role == '10'\\\">\\n                    <div class=\\\"cs-box\\\">\\n                      <!-- <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\"> -->\\n                      <span>Concern Right</span>\\n                      <p *ngIf=\\\"salesdata.concernApprovalAccess\\\">Yes</p>\\n                      <p *ngIf=\\\"!salesdata.concernApprovalAccess\\\">No</p>\\n\\n                      <!-- <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\"  color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('concern_approval')\\\"><i class=\\\"material-icons\\\">create</i></a> -->\\n\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n              <mat-divider class=\\\"mt15 mb15\\\"></mat-divider>\\n              \\n              <div class=\\\"col s10 cs-figure space-li pl0\\\">\\n                <ul>\\n                  <li *ngIf=\\\"salesdata.role==6\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Regional Manager</span>\\n                        <p class=\\\"counter\\\">{{TotalRSM.length}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li *ngIf=\\\"salesdata.role==7\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Area Manager</span>\\n                        <p class=\\\"counter\\\">{{TotalASM.length}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  \\n                  <li *ngIf=\\\"salesdata.role==8\\\">\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Territory Incharge</span>\\n                        <p class=\\\"counter\\\">{{TotalTI.length}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li >\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Territory</span>\\n                        <p class=\\\"counter\\\">{{TotalTerritoy.length}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"outer\\\">\\n                      <div class=\\\"inner\\\">\\n                        <span>Distributor</span>\\n                        <p class=\\\"counter\\\">{{TotalDistributor.length}}</p>\\n                      </div>\\n                    </div>\\n                  </li>\\n\\n\\n                  <li>\\n                      <div class=\\\"outer\\\">\\n                        <div class=\\\"inner\\\">\\n                          <span>Target</span>\\n                          <p class=\\\"counter\\\">&#8377; {{salesdata.totalTarget}}</p>\\n                        </div>\\n\\n                        <a *ngIf=\\\"this.role==1\\\" class=\\\"edit-icon\\\"  color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" (click)=\\\"openEmail('target')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                   \\n                      </div>\\n                    </li>\\n                  \\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"currentActiveTab==1\\\"  class=\\\"row\\\">\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>ADDRESS</h2>\\n              </div>\\n              <a  *ngIf=\\\"this.role==1\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\" (click)=\\\"openDialog()\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n              <div class=\\\"nationality\\\">\\n                <img src=\\\"assets/img/india.svg\\\" alt=\\\"\\\">\\n                <p>India</p>\\n              </div>\\n              <div class=\\\"ds-from-fields\\\">\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>State</p>\\n                    <p>{{salesdata.state}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>District</p>\\n                    <p>{{salesdata.district}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>City</p>\\n                    <p>{{salesdata.city}}</p>\\n                  </div>\\n                  <div class=\\\"static-info w100\\\" style=\\\"min-width: 100px;\\\">\\n                    <p>Pin Code</p>\\n                    <p>{{salesdata.pin}}</p>\\n                  </div>\\n                </div>\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>address</p>\\n                    <p>{{salesdata.street}}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"cs-logs\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>ACCOUNT INFO</h2>\\n              </div>\\n              <div class=\\\"logs-outer\\\">\\n                <div class=\\\"logs-list\\\">\\n                  <div class=\\\"account-details\\\">\\n                    <ul>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <div class=\\\"cs-account\\\">\\n                              <p>User Name</p>\\n                              <h5>{{salesdata.email}}</h5>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </li>\\n                      \\n                      <li *ngIf=\\\"this.role==1\\\" class=\\\"active\\\" style=\\\"padding-top: 0px !important; padding-bottom: 0px !important;\\\">\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <div class=\\\"cs-account\\\">\\n                              <!-- <p>Password</p> -->\\n                              <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updatepassword()\\\"  #f=\\\"ngForm\\\" novalidate>\\n                                <div class=\\\"from-fields\\\">\\n                                  <div class=\\\"control-field pr80\\\">\\n                                    <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                      <input matInput type=\\\"text\\\" placeholder=\\\"Change password\\\" name=\\\"password\\\" [(ngModel)]=\\\"account_form.password\\\" #password=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required>\\n                                    </mat-form-field>\\n                                  </div>\\n                                </div>\\n                                <mat-error *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                  <mat-error *ngIf=\\\"password.errors.required\\\">Password is required</mat-error>\\n                                </mat-error>\\n                                <button style=\\\"color: #fff;\\\" mat-raised-button color=\\\"accent\\\" class=\\\"material-icons pass-icon\\\">Save</button>\\n                              </form>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </li>\\n                    </ul>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n      <div *ngIf=\\\"currentActiveTab==1\\\"  class=\\\"row\\\">\\n          \\n\\n                \\n          <div class=\\\"col s12\\\">\\n              <div class=\\\"sprate-box padding0 mt15\\\">\\n                <div class=\\\"full-address\\\">\\n                  <div class=\\\"top-heading\\\">\\n                    <h2>OFFICE ADDRESS</h2>\\n                  </div>\\n                  <!-- <a  *ngIf=\\\"this.role==1\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\" (click)=\\\"openDialog()\\\"><i class=\\\"material-icons\\\">edit</i></a> -->\\n                  <div class=\\\"nationality\\\">\\n                    <img src=\\\"assets/img/india.svg\\\" alt=\\\"\\\">\\n                    <p>India</p>\\n                  </div>\\n                  <div class=\\\"ds-from-fields\\\">\\n                    <div class=\\\"cs-row\\\">\\n                      <div class=\\\"static-info\\\">\\n                        <p>State</p>\\n                        <p>{{salesdata.stateOffice}}</p>\\n                      </div>\\n                      <div class=\\\"static-info\\\">\\n                        <p>District</p>\\n                        <p>{{salesdata.districtOffice}}</p>\\n                      </div>\\n                      <div class=\\\"static-info\\\">\\n                        <p>City</p>\\n                        <p>{{salesdata.cityOffice}}</p>\\n                      </div>\\n                      <div class=\\\"static-info w100\\\" style=\\\"min-width: 100px;\\\">\\n                        <p>Pin Code</p>\\n                        <p>{{salesdata.pinOffice}}</p>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"cs-row\\\">\\n                      <div class=\\\"static-info\\\">\\n                        <p>address</p>\\n                        <p>{{salesdata.streetOffice}}</p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n         \\n        </div>\\n      \\n      \\n      <div *ngIf=\\\"currentActiveTab==1 && salesdata.seniors && salesdata.seniors.length > 0\\\" class=\\\"sprate-box mt20 padding0\\\">\\n        <div class=\\\"full-address\\\">\\n          <div class=\\\"top-heading\\\">\\n            <h2>Team Detail</h2>\\n          </div>\\n          <div class=\\\"cs-table\\\">\\n            <div class=\\\"table-head\\\">\\n              <table>\\n                <tr>\\n                  <th>Name</th>\\n                  <th>Role</th>\\n                </tr>\\n              </table>\\n            </div>\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let list of salesdata.seniors\\\">\\n                    <td>{{list.userName}}</td>\\n                    <td>\\n                      <span *ngIf=\\\"salesdata.role==10\\\">ASM</span>\\n                      <span *ngIf=\\\"salesdata.role==8\\\">RSM</span>\\n                      <span *ngIf=\\\"salesdata.role==7\\\">NSM</span>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      \\n      <!-- Only View Assigned Detail Start -->\\n      <div *ngIf=\\\"currentActiveTab==1 && this.role==1 && !editAssignedDiv\\\" class=\\\"sprate-box pt0 mt20 mb15\\\">\\n        <div  class=\\\"top-heading left-right-15\\\">\\n          <h2>ASSIGNED INFORMATION</h2>\\n          <a  *ngIf=\\\"this.role==1 && !editAssignedDiv\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\"  (click)=\\\"editAssign();getSegmentRelatedData()\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n        </div>\\n        <div *ngIf=\\\"this.role==1 && !editAssignedDiv\\\" class=\\\"row mt15\\\" >\\n          \\n          <div class=\\\"col s3 pl0\\\">\\n            \\n            <div class=\\\"territory-info\\\">\\n              <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.one==true}\\\">\\n                <h2>Segment</h2>\\n                <!-- <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('one','open')\\\"  matRipple>search</i>\\n                  <input type=\\\"text\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                  <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('one','close')\\\" matRipple>clear</i> -->\\n                </div>\\n                \\n                <div  *ngIf=\\\"!salesdata.staffSegments || salesdata.staffSegments.length == 0\\\" class=\\\"not-data\\\">\\n                  <div class=\\\"inner-data\\\">\\n                    <p>No Data</p>\\n                  </div>\\n                </div>\\n                \\n                <div *ngIf=\\\"salesdata.staffSegments.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                  <div class=\\\"checkbox-outer\\\" >\\n                    <section class=\\\"checkbox-inner bodr0\\\" >\\n                      <mat-checkbox  *ngFor=\\\"let list of salesdata.staffSegments\\\" class=\\\"check-list bg-none check-none check-none check-none check-none\\\" value=\\\"1\\\">\\n                        <div class=\\\"name-outer\\\">\\n                          <div class=\\\"outer\\\">\\n                            <div class=\\\"inner\\\">\\n                              <div class=\\\"name-inner\\\">\\n                                S\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"text-box\\\">\\n                          <h2>{{list.segment}}</h2>\\n                        </div>\\n                      </mat-checkbox>\\n                    </section>\\n                  </div>\\n                </div>\\n              </div>\\n            </div> \\n            \\n            \\n            <div *ngIf=\\\"salesdata.role==8\\\" class=\\\"col s3\\\">\\n              \\n              <div class=\\\"territory-info\\\">\\n                <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.one==true}\\\">\\n                  <h2>Territory Incharge</h2>\\n                  <!-- <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('one','open')\\\"  matRipple>search</i>\\n                    <input type=\\\"text\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                    <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('one','close')\\\" matRipple>clear</i> -->\\n                  </div>\\n                  \\n                  <div  *ngIf=\\\"!TotalTI || TotalTI.length == 0\\\" class=\\\"not-data\\\">\\n                    <div class=\\\"inner-data\\\">\\n                      <p>No Data</p>\\n                    </div>\\n                  </div>\\n                  \\n                  <div *ngIf=\\\"TotalTI.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                    <div class=\\\"checkbox-outer\\\" >\\n                      <section class=\\\"checkbox-inner bodr0\\\" >\\n                        <mat-checkbox class=\\\"check-list bg-none check-none check-none check-none check-hover check-hover\\\" value=\\\"1\\\" *ngFor=\\\"let user of TotalTI\\\">\\n                          <a routerLink=\\\"/sale-user-detail/{{user.userId}}\\\" routerLinkActive=\\\"active\\\">\\n                            <div class=\\\"name-outer\\\">\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"inner\\\">\\n                                  <div *ngIf=\\\"user.userName\\\" class=\\\"name-inner\\\">\\n                                    {{user.userName[0]}}\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"text-box\\\">\\n                              <h2>{{user.userName}}</h2>\\n                            </div>\\n                          </a>\\n                        </mat-checkbox>\\n                      </section>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div> \\n              \\n              \\n              <div *ngIf=\\\"salesdata.role==7\\\" class=\\\"col s3\\\">\\n                \\n                <div class=\\\"territory-info\\\">\\n                  <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.one==true}\\\">\\n                    <h2>Area Manager</h2>\\n                    <!-- <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('one','open')\\\"  matRipple>search</i>\\n                      <input type=\\\"text\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                      <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('one','close')\\\" matRipple>clear</i> -->\\n                    </div>\\n                    \\n                    <div  *ngIf=\\\"!TotalASM || TotalASM.length == 0\\\" class=\\\"not-data\\\">\\n                      <div class=\\\"inner-data\\\">\\n                        <p>No Data</p>\\n                      </div>\\n                    </div>\\n                    \\n                    \\n                    <div *ngIf=\\\"TotalASM.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                      <div class=\\\"checkbox-outer\\\">\\n                        <section class=\\\"checkbox-inner bodr0\\\" >\\n                          <mat-checkbox class=\\\"check-list bg-none check-none check-none check-none check-hover \\\" value=\\\"1\\\" *ngFor=\\\"let asm of TotalASM\\\">\\n                            <a routerLink=\\\"/sale-user-detail/{{asm.userId}}\\\" routerLinkActive=\\\"active\\\">\\n                              <div class=\\\"name-outer\\\">\\n                                <div class=\\\"outer\\\">\\n                                  <div class=\\\"inner\\\">\\n                                    <div class=\\\"name-inner\\\">\\n                                      {{asm.userName[0]}}\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"text-box\\\">\\n                                \\n                                \\n                                <h2>{{asm.userName}}</h2>\\n                                \\n                              </div>\\n                            </a>\\n                          </mat-checkbox>\\n                        </section>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div> \\n                \\n                <div *ngIf=\\\"salesdata.role==6\\\" class=\\\"col s3\\\">\\n                  \\n                  <div class=\\\"territory-info\\\">\\n                    <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.one==true}\\\">\\n                      <h2>Regional Manager</h2>\\n                      <!-- <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('one','open')\\\"  matRipple>search</i>\\n                        <input type=\\\"text\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                        <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('one','close')\\\" matRipple>clear</i> -->\\n                      </div>\\n                      \\n                      <div  *ngIf=\\\"!TotalRSM || TotalRSM.length == 0\\\" class=\\\"not-data\\\">\\n                        <div class=\\\"inner-data\\\">\\n                          <p>No Data</p>\\n                        </div>\\n                      </div>\\n                      \\n                      <div  *ngIf=\\\"TotalRSM.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                        <div class=\\\"checkbox-outer\\\">\\n                          <section class=\\\"checkbox-inner bodr0\\\" >\\n                            <mat-checkbox class=\\\"check-list bg-none check-none check-none check-none check-hover\\\" value=\\\"1\\\" *ngFor=\\\"let rsm of TotalRSM\\\">\\n                              <a  routerLink=\\\"/sale-user-detail/{{rsm.userId}}\\\" routerLinkActive=\\\"active\\\" >\\n                                <div class=\\\"name-outer\\\">\\n                                  <div class=\\\"outer\\\">\\n                                    <div class=\\\"inner\\\">\\n                                      <div class=\\\"name-inner\\\">\\n                                        {{rsm.userName[0]}}\\n                                      </div>\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"text-box\\\">\\n                                  <h2> {{rsm.userName}}</h2>\\n                                </div>\\n                              </a>\\n                            </mat-checkbox>\\n                          </section>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div> \\n                  \\n                  <div class=\\\"col s3\\\">\\n                    \\n                    <div class=\\\"territory-info\\\">\\n                      <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.two==true}\\\">\\n                        <h2>Territory</h2>\\n                        <!-- <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('two','open')\\\"  matRipple>search</i>\\n                          <input type=\\\"text\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                          <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('two','close')\\\" matRipple>clear</i> -->\\n                        </div>\\n                        \\n                        <div  *ngIf=\\\"!TotalTerritoy || TotalTerritoy.length == 0\\\" class=\\\"not-data\\\">\\n                          <div class=\\\"inner-data\\\">\\n                            <p>No Data</p>\\n                          </div>\\n                        </div>\\n                        \\n                        <div *ngIf=\\\"TotalTerritoy.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                          <div class=\\\"checkbox-outer\\\" >\\n                            <section class=\\\"checkbox-inner bodr0\\\" >\\n                              \\n                              <mat-checkbox class=\\\"check-list bg-none check-none check-none check-hover check-none\\\" *ngFor=\\\"let list of TotalTerritoy\\\">\\n                                <a routerLink=\\\"/territory-add/{{list.territoryId}}\\\" routerLinkActive=\\\"active\\\" >\\n                                  <div class=\\\"name-outer\\\">\\n                                    <div class=\\\"outer\\\">\\n                                      <div class=\\\"inner\\\">\\n                                        <div class=\\\"name-inner\\\">\\n                                          {{list.territoryName[0]}}\\n                                        </div>\\n                                      </div>\\n                                    </div>\\n                                  </div>\\n                                  <div class=\\\"text-box\\\">\\n                                    <h2>{{list.territoryName}}</h2>\\n                                  </div>\\n                                </a>\\n                              </mat-checkbox>\\n                            </section>  \\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div> \\n                    \\n                    <div class=\\\"col s3\\\" >\\n                      \\n                      <div class=\\\"territory-info\\\">\\n                        <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.three==true}\\\">\\n                          <h2>DISTRIBUTOR</h2>\\n                          <!-- <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('three','open')\\\"  matRipple>search</i>\\n                            <input type=\\\"text\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                            <i class=\\\"material-icons close-icon\\\" (click)=\\\"toggleterritory('three','close')\\\" matRipple>clear</i> -->\\n                          </div>\\n                          \\n                          \\n                          <div  *ngIf=\\\"!TotalDistributor || TotalDistributor.length == 0\\\" class=\\\"not-data\\\">\\n                            <div class=\\\"inner-data\\\">\\n                              <p>No Data</p>\\n                            </div>\\n                          </div>\\n                          \\n                          \\n                          <div *ngIf=\\\"TotalDistributor && TotalDistributor.length > 0\\\"  class=\\\"cs-checkbox\\\">\\n                            \\n                            <div class=\\\"checkbox-outer\\\" >\\n                              <section class=\\\"checkbox-inner bodr0\\\" >\\n                                <mat-checkbox class=\\\"check-list bg-none check-none check-none check-hover check-hover\\\" value=\\\"1\\\" *ngFor=\\\"let list of TotalDistributor\\\">\\n                                  <a class=\\\"link-btn\\\" mat-button routerLink=\\\"/distribution-detail/{{list.networkId}}\\\" routerLinkActive=\\\"active\\\">\\n                                    <div class=\\\"name-outer\\\">\\n                                      <div class=\\\"outer\\\">\\n                                        <div class=\\\"inner\\\">\\n                                          <div class=\\\"name-inner\\\">\\n                                            {{list.establishment[0]}}\\n                                          </div>\\n                                        </div>\\n                                      </div>\\n                                    </div>\\n                                    <div class=\\\"text-box\\\">\\n                                      <h2>{{list.establishment}}</h2>\\n                                      <!-- <h2>{{list.establishment}} <span>(Territory Incharge)</span></h2> -->\\n                                      <!-- <p>Territory</p> -->\\n                                    </div>\\n                                  </a>\\n                                </mat-checkbox>\\n                              </section>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                      </div>\\n                      \\n                    </div>\\n                  </div>\\n                  \\n                  <!-- Only View Assigned Detail End -->\\n                  \\n                  \\n                  <!-- Edit assigned Detail Start -->\\n                  <div *ngIf=\\\"currentActiveTab==1 &&  editAssignedDiv\\\"  class=\\\"sprate-box pt0  mt20 mb15\\\">\\n                    <div  class=\\\"top-heading left-right-15\\\">\\n                      <h2>UPDATE INFORMATION</h2>\\n                    </div>\\n                    <div class=\\\"row mt15\\\">                     \\n                      <div class=\\\"col s4\\\">\\n                        <div class=\\\"territory-info\\\">\\n                          <div class=\\\"head\\\" >\\n                            <h2>SEGMENT</h2>\\n                          </div>\\n                          \\n                          <div  *ngIf=\\\"!segmentlist || segmentlist.length == 0\\\" class=\\\"not-data\\\">\\n                            <div class=\\\"inner-data\\\">\\n                              <p>No Data</p>\\n                            </div>\\n                          </div>\\n                          \\n                          <div *ngIf=\\\"segmentlist.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                            <div class=\\\"checkbox-outer\\\">\\n                              <section class=\\\"checkbox-inner\\\" >\\n                                <ng-container *ngFor=\\\"let row of segmentlist;let index=index\\\" aria-required=\\\"true\\\">\\n                                  <mat-checkbox class=\\\"check-list\\\" [(ngModel)]=\\\"row.checked\\\" (change)=\\\"getSegmentRelatedData()\\\">{{row.value}}</mat-checkbox>\\n                                </ng-container>\\n                              </section>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div> \\n                      \\n                      <div *ngIf=\\\"salesdata.role==6 || salesdata.role==7 || salesdata.role==8\\\" class=\\\"col s4\\\">\\n                        \\n                        <div class=\\\"territory-info\\\">\\n                          <div class=\\\"head\\\" >\\n                            <h2 *ngIf=\\\"salesdata.role==6\\\">Regional Manager</h2>\\n                            <h2 *ngIf=\\\"salesdata.role==7\\\">Area Manager</h2>\\n                            <h2 *ngIf=\\\"salesdata.role==8\\\">Territory Incharge</h2>\\n                          </div>\\n                          \\n                          <div  *ngIf=\\\"juniorList.length == 0\\\" class=\\\"not-data\\\">\\n                            <div class=\\\"inner-data\\\">\\n                              <p>No Data</p>\\n                            </div>\\n                          </div>\\n                          \\n                          <div *ngIf=\\\"juniorList.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                            <div class=\\\"checkbox-outer\\\">\\n                              <section class=\\\"checkbox-inner\\\" >\\n                                \\n                                <ng-container *ngFor=\\\"let junior of juniorList;let index1=index\\\" aria-required=\\\"true\\\">\\n                                  <mat-checkbox class=\\\"check-list\\\" (change)=\\\"select_territory(junior.userTerritories, junior.check, 'junior')\\\"  [(ngModel)]=\\\"junior.check\\\" value=\\\"{{junior.userId}}\\\">{{junior.userName}}</mat-checkbox>\\n                                </ng-container>\\n                                \\n                                \\n                              </section>\\n                            </div>\\n                          </div>\\n                          \\n                        </div>\\n                      </div> \\n                      \\n                      <div  class=\\\"col s4\\\">\\n                        \\n                        <div class=\\\"territory-info\\\">\\n                          <div class=\\\"head\\\" >\\n                            <h2>Territories</h2>\\n                          </div>\\n\\n                          <div  *ngIf=\\\"territorylist.length == 0\\\" class=\\\"not-data\\\">\\n                            <div class=\\\"inner-data\\\">\\n                              <p>No Data</p>\\n                            </div>\\n                          </div>\\n                          \\n                          <div *ngIf=\\\"territorylist.length != 0\\\" class=\\\"cs-checkbox\\\">\\n                            <div class=\\\"checkbox-outer\\\">\\n                              <section class=\\\"checkbox-inner\\\" >\\n                                <ng-container *ngFor=\\\"let list of territorylist;\\\">\\n                                  <mat-checkbox class=\\\"check-list\\\" (change)=\\\"select_territory(list.territoryID, list.check1, 'territory')\\\"  [(ngModel)]=\\\"list.check1\\\" [disabled]=\\\"list.disabled\\\" name=\\\"{{list.territoryID}}\\\">{{list.territoryName}}</mat-checkbox>\\n                                </ng-container>\\n                              </section>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div> \\n                      \\n                      <div *ngIf=\\\"role > 6\\\"  class=\\\"col s4\\\">\\n                        <div class=\\\"territory-info\\\">\\n                          <div class=\\\"head\\\" >\\n                            <h2>Distributor</h2>\\n                          </div>\\n                          \\n                          <div  *ngIf=\\\"distributionList.length == 0\\\" class=\\\"not-data\\\">\\n                            <div class=\\\"inner-data\\\">\\n                              <p>No Data</p>\\n                            </div>\\n                          </div>\\n                          \\n                          \\n                          \\n                          <div *ngIf=\\\"distributionList.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                            <div class=\\\"checkbox-outer\\\">\\n                              <section class=\\\"checkbox-inner\\\" >\\n                                <ng-container *ngFor=\\\"let list of distributionList;let index1=index\\\" aria-required=\\\"true\\\">\\n                                  <mat-checkbox class=\\\"check-list\\\" [(ngModel)]='list.checked' [disabled]=\\\"list.disabled\\\" value=\\\"{{list.networkId}}\\\">{{list.establishment}} / {{list.territoryName}}</mat-checkbox>\\n                                </ng-container>\\n                              </section>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div> \\n                      \\n                      \\n                    </div>\\n                  </div>\\n                  \\n                  \\n                  <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==1 &&  editAssignedDiv\\\">\\n                    <div class=\\\"col s12\\\">\\n                      <div class=\\\"cs-btn mt15 text-right\\\">\\n                        <button mat-raised-button color=\\\"warn\\\" class=\\\"mr15\\\" (click)=\\\"editAssignedDiv=false\\\">Cancel</button>\\n                        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"updateSalesUser()\\\" style=\\\"color:#fff;\\\">Update</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n\\n                  <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==2\\\">\\n                      <div class=\\\"col s12\\\">\\n                        <div class=\\\"cs-table left-right-20\\\">\\n                          <div class=\\\"table-head tab-sticky-head\\\">\\n                            <table class=\\\"sno-border\\\"> \\n                              <tr>\\n                                <th class=\\\"w120\\\"> Lead Name</th>\\n                                <th class=\\\"w70 text-center\\\">Mobile</th>\\n                                <th class=\\\"w120 text-right\\\">Segment</th>\\n                                <th class=\\\"w180\\\">Address</th>\\n                                <th class=\\\"w180\\\">Action</th>\\n                              </tr>\\n                            </table>\\n                          </div>\\n                          <div class=\\\"table-container\\\">\\n                            <div class=\\\"table-content\\\">\\n                              <table class=\\\"sno-border\\\">\\n                                <tr *ngFor=\\\"let list of leadlist; let index = index\\\">\\n                                  <td class=\\\"w120\\\">{{list.establishment}}</td>\\n                                  <td class=\\\"w70 text-center\\\">{{list.mobile}}</td>\\n                                  <td class=\\\"w120 text-center\\\">{{list.segmentStr}}</td>\\n                                  <td class=\\\"w180 text-right\\\">{{list.state}} {{list.district}} {{list.city}} {{list.pin}}</td>\\n\\n                                  <td class=\\\"w180\\\">\\n\\n                                      <div class=\\\"action-btns default-action\\\">\\n\\n                                          <a mat-button class=\\\"view\\\" routerLink=\\\"/lead-detail/{{list.leadId}}\\\" routerLinkActive=\\\"active\\\">\\n                                            <i class=\\\"material-icons\\\">remove_red_eye</i> View</a> \\n                                    </div> \\n                                  </td>\\n                                </tr>\\n                              </table>\\n                            </div>\\n                          </div>\\n                          \\n                        </div>\\n                        <div class=\\\"data-not-available\\\" *ngIf=\\\"div\\\">\\n                          <div class=\\\"outer\\\">\\n                            <div class=\\\"iinear\\\">\\n                              <div class=\\\"figure\\\" matRipple>\\n                                <div class=\\\"header\\\">\\n                                  <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                </div>\\n                                \\n                                <div class=\\\"description\\\">\\n                                  <div class=\\\"cs-heading\\\">\\n                                    <!-- <h2 *ngIf=\\\"cartActive=='active'\\\">Nothing In Draft</h2> -->\\n                                    <h2 *ngIf=\\\"orderActive=='active'\\\">No Data List</h2>\\n                                    \\n                                  </div>\\n                                  <div class=\\\"img\\\">\\n                                    <i class=\\\"material-icons\\\">error_outline</i>\\n                                  </div>\\n                                  <div class=\\\"psc\\\">\\n                                    <p>data not available</p>\\n                                    <!-- <p>Tap on <a href=\\\"\\\">ADD NEW</a> for Service Plan</p> -->\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    \\n        \\n                    <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==3\\\">\\n        \\n                      <div class=\\\"col s12 padding0\\\">\\n                        <div class=\\\"cs-table left-right-20\\\">\\n                          <div class=\\\"table-head\\\">\\n                            <table>\\n                              <tr >\\n\\n                                  <th class=\\\"w30\\\">&nbsp;</th>\\n                                  <th class=\\\"w150\\\"> Date</th>\\n                                  <th>Company Name</th>\\n                                  <th class=\\\"w115\\\"> Order No</th>\\n                                  <th class=\\\"w70 text-center\\\">QTY.</th>\\n                                  <th class=\\\"w100 text-right\\\">Amount</th>\\n                                  <th  class=\\\"w110\\\"> Dist. Status</th>\\n                                  <th  class=\\\"w130\\\"> Comp. Status</th>\\n                                  <th  class=\\\"w130\\\"> Action</th>\\n                              </tr>\\n                            </table>\\n                          </div>\\n                          <div class=\\\"table-container\\\">\\n                            <div class=\\\"table-content\\\">\\n                              <table>\\n\\n                                <tr *ngFor=\\\"let list of orderList; let index= index\\\">\\n                                  <td class=\\\"w30\\\">&nbsp;</td>\\n                                  <td class=\\\"w150\\\"> {{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\\n                                  <td>{{list.establishment}}</td>\\n                                  <td class=\\\"w115\\\"> {{list.orderNumber}}</td>\\n                                  <td class=\\\"w70 text-center\\\">{{list.quantity}}</td>\\n                                  <td class=\\\"w100 text-right\\\">{{list.totalAmount}}</td>\\n                                  <td  class=\\\"w110\\\"> \\n\\n                                      <span *ngIf=\\\"list.dealerStatus==1\\\">Draft</span>\\n                                      <span *ngIf=\\\"list.dealerStatus==2\\\">Pending</span>\\n                                      <span *ngIf=\\\"list.dealerStatus==3\\\">Approved</span>\\n                                  </td>\\n\\n                                  <td  class=\\\"w130\\\"> \\n                                      <span *ngIf=\\\"list.companyStatus==1\\\">Pending</span>\\n                                      <span *ngIf=\\\"list.companyStatus==2\\\">Approved</span>\\n                                      <span *ngIf=\\\"list.companyStatus==3\\\">Hold</span>\\n                                  </td>\\n\\n                                  <td class=\\\"w130\\\">\\n\\n                                      <a mat-button class=\\\"view\\\" (click)=\\\"orderDetail(index)\\\">\\n                                        <i class=\\\"material-icons\\\">remove_red_eye</i> View</a> \\n\\n                                      \\n                                  </td>\\n\\n                                  </tr>\\n                              </table>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div *ngIf=\\\"orderList.length==0\\\" class=\\\"data-not-available\\\" >\\n                          <div class=\\\"outer\\\">\\n                            <div class=\\\"iinear\\\">\\n                              <div class=\\\"figure\\\" matRipple>\\n                                <div class=\\\"header\\\">\\n                                  <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                </div>\\n                                \\n                                <div class=\\\"description\\\">\\n                                  <div class=\\\"cs-heading\\\">\\n                                  </div>\\n                                  <div class=\\\"img\\\">\\n                                    <i class=\\\"material-icons\\\">error_outline</i>\\n                                  </div>\\n                                  <div class=\\\"psc\\\">\\n                                    <p>data not available</p>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==4\\\">\\n        \\n                        <div class=\\\"col s12 padding0\\\">\\n                          <div class=\\\"cs-table left-right-20\\\">\\n                            <div class=\\\"table-head\\\">\\n                              <table>\\n                                <tr>\\n                                  <th class=\\\"w150\\\">Date</th>\\n                                  <th>Company Name</th>\\n                                  <th class=\\\"w150 text-center\\\">Concern No</th>\\n                                  <th class=\\\"w150 text-center\\\">Concern Type</th>\\n                                  <th class=\\\"w150 text-center\\\">Total Item</th>\\n                                  <th class=\\\"w150 text-center\\\">Total Qty</th>\\n                                  <th class=\\\"w150 text-center\\\">Amount</th>\\n                                  <th class=\\\"w150\\\">Action</th>\\n                                </tr>\\n                              </table>\\n                            </div>\\n                            <div class=\\\"table-container\\\">\\n                              <div class=\\\"table-content\\\">\\n                                <table>\\n                                 <tr *ngFor=\\\"let list of concernList\\\">\\n        \\n                                    <td class=\\\"w150\\\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\\n        \\n                                    <td>{{list.networkEstablishment}}</td>\\n        \\n                                    <td class=\\\"w150\\\"> <a mat-button class=\\\"link-btn\\\" routerLink=\\\"/concern-detail/{{list.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                      {{list.claimNo}}\\n                                    </a></td>\\n\\n                                    <td class=\\\"w150\\\">{{list.concernTypeName}}</td>\\n\\n                                    <td class=\\\"w150\\\">{{list.productConcerns.length}}</td>\\n\\n                                    <td class=\\\"w150\\\">{{list.totalQty}}</td>\\n\\n                                    <td class=\\\"w150\\\">{{list.totalAmount}}</td>\\n        \\n                                    <td class=\\\"w150\\\">\\n                                        <div class=\\\"action-btns default-action\\\">\\n\\n                                            <a mat-button class=\\\"view\\\" routerLink=\\\"/concern-detail/{{list.concernId}}\\\" routerLinkActive=\\\"active\\\">\\n                                              <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                                           \\n                                      </div> \\n                                    </td> \\n        \\n                                   </tr> \\n                                </table>\\n                              </div>\\n                            </div>\\n                          </div>\\n        \\n                          <div *ngIf=\\\"concernList?.length==0 && !loader\\\" class=\\\"data-not-available\\\" >\\n                            <div class=\\\"outer\\\">\\n                              <div class=\\\"iinear\\\">\\n                                <div class=\\\"figure\\\" matRipple>\\n                                  <div class=\\\"header\\\">\\n                                    <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                  </div>\\n                                  \\n                                  <div class=\\\"description\\\">\\n                                    <div class=\\\"cs-heading\\\">\\n                                    </div>\\n                                    <div class=\\\"img\\\">\\n                                      <i class=\\\"material-icons\\\">error_outline</i>\\n                                    </div>\\n                                    <div class=\\\"psc\\\">\\n                                      <p>data not available</p>\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n        \\n        \\n        \\n                      <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==5\\\">\\n        \\n                          <div class=\\\"col s12 padding0\\\">\\n                            <div class=\\\"cs-table left-right-20\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table>\\n                                  <tr >\\n                                    <th class=\\\"w150\\\">Date</th>\\n                                    <th class=\\\"w150\\\">Travel Month </th>\\n                                    <th class=\\\"w150\\\">Travel Year </th>\\n                                    <th class=\\\"w150\\\">Amount</th>\\n                                    <th class=\\\"w150\\\">Status</th>\\n                                    <th class=\\\"w150\\\">Action</th>\\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content\\\">\\n                                  <table>\\n\\n                                      <tr *ngFor=\\\"let list of trvelPlanLIst\\\">\\n                                          <td class=\\\"w150\\\">{{list.createdOn  | date: 'dd-MMM-yyyy'}}</td>\\n                                          <td class=\\\"w150\\\">{{list.monthName}}</td>\\n                                          <td class=\\\"w150\\\">{{list.year}} </td>\\n                                          <td class=\\\"w150\\\">&#8377; {{list.budget}}</td>\\n                                          <td class=\\\"w150\\\">\\n                                            <span *ngIf=\\\"list.status==2\\\">Pending</span>\\n                                            <span *ngIf=\\\"list.status==3\\\">Approved</span>\\n                                            <span *ngIf=\\\"list.status==4\\\">Reject</span>\\n                                          </td>\\n                                          <td class=\\\"w150\\\"> \\n                                            <a mat-button class=\\\"view\\\" routerLink=\\\"/detail-travel/{{list.travelPlanID}}\\\" routerLinkActive=\\\"active\\\">\\n                                            <i class=\\\"material-icons\\\">remove_red_eye</i> View</a></td>\\n                                        </tr>\\n                                    \\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n        \\n                            <div *ngIf=\\\"trvelPlanLIst.length==0\\\" class=\\\"data-not-available\\\" >\\n                              <div class=\\\"outer\\\">\\n                                <div class=\\\"iinear\\\">\\n                                  <div class=\\\"figure\\\" matRipple>\\n                                    <div class=\\\"header\\\">\\n                                      <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                    </div>\\n                                    \\n                                    <div class=\\\"description\\\">\\n                                      <div class=\\\"cs-heading\\\">\\n                                      </div>\\n                                      <div class=\\\"img\\\">\\n                                        <i class=\\\"material-icons\\\">error_outline</i>\\n                                      </div>\\n                                      <div class=\\\"psc\\\">\\n                                        <p>data not available</p>\\n                                      </div>\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==6\\\">\\n                            <div class=\\\"col s12 padding0\\\">\\n                              <div class=\\\"cs-table left-right-20\\\">\\n                                <div class=\\\"table-head\\\">\\n                                  <table>\\n                                    <tr >\\n                                      <th class=\\\"w150\\\">Date</th>\\n                                      <th>Expense Type</th>\\n                                      <th>Expense Amount</th>\\n                                      <th class=\\\"w150\\\">Status</th>\\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                                <div class=\\\"table-container\\\">\\n                                  <div class=\\\"table-content\\\">\\n                                    <table>\\n\\n                                        <tr *ngFor=\\\"let list of expenseList\\\">\\n                                            <td class=\\\"w150\\\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\\n                                            <td>{{list.expenseTypeName}}</td>\\n                                            <td>&#8377; {{list.actualExpenseAmount}}</td>\\n                                            <td class=\\\"w150\\\">\\n                                             <span *ngIf=\\\"list.status==1\\\">Draft </span>\\n                                             <span *ngIf=\\\"list.status==2\\\">Pending </span>\\n                                             <span *ngIf=\\\"list.status==3\\\">Approved </span>\\n                                             <span *ngIf=\\\"list.status==4\\\">Reject </span>\\n                                            </td>\\n                                          </tr>\\n                                      \\n                                    </table>\\n                                  </div>\\n                                </div>\\n                              </div>\\n          \\n                              <div *ngIf=\\\"expenseList?.length==0 && !loader\\\"  class=\\\"data-not-available\\\" >\\n                                <div class=\\\"outer\\\">\\n                                  <div class=\\\"iinear\\\">\\n                                    <div class=\\\"figure\\\" matRipple>\\n                                      <div class=\\\"header\\\">\\n                                        <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                      </div>\\n                                      \\n                                      <div class=\\\"description\\\">\\n                                        <div class=\\\"cs-heading\\\">\\n                                        </div>\\n                                        <div class=\\\"img\\\">\\n                                          <i class=\\\"material-icons\\\">error_outline</i>\\n                                        </div>\\n                                        <div class=\\\"psc\\\">\\n                                          <p>data not available</p>\\n                                        </div>\\n                                      </div>\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                        </div>\\n\\n                  <!-- Edit assigned Detail End -->\\n\\n\\n                  <div class=\\\"row\\\" *ngIf=\\\"currentActiveTab==7\\\">\\n        \\n                      <div class=\\\"col s12 padding0\\\">\\n                        <div class=\\\"cs-table left-right-20\\\">\\n                          <div class=\\\"table-head\\\">\\n                            <table>\\n                              <tr >\\n                                <th class=\\\"w150\\\">Date</th>\\n                                <th class=\\\"w150 text-center\\\">Company Name</th>\\n                                <th class=\\\"w150 text-center\\\">Type</th>\\n                                <th class=\\\"w150 text-center\\\">Checkin Time</th>\\n                                <th class=\\\"w150 text-center\\\">Checkout Time</th>\\n                                <th class=\\\"w150\\\">Action</th>\\n                              </tr>\\n                            </table>\\n                          </div>\\n                          <div class=\\\"table-container\\\">\\n                            <div class=\\\"table-content\\\">\\n                              <table>\\n                               <tr *ngFor=\\\"let list of checkInList\\\">\\n      \\n                                  <td class=\\\"w150\\\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\\n      \\n                                  <td class=\\\"w150\\\">{{list.establishment ? list.establishment : list.establishmentName}}</td>\\n      \\n                                  <td class=\\\"w150\\\">{{list.activityModuleName}}</td>\\n\\n                                  <td class=\\\"w150\\\">{{list.checkInTime|date :'d, MMMM , y, h:mm:ss a'}}</td>\\n\\n                                  <td class=\\\"w150\\\">{{list.checkOutTime|date :'d, MMMM , y, h:mm:ss a'}}</td>\\n      \\n      \\n                                  <td class=\\\"w150\\\">\\n                                      <div class=\\\"action-btns default-action\\\">\\n\\n                                          <a mat-button class=\\\"view\\\" routerLink=\\\"/checkin-detail/{{list.activityId}}\\\" routerLinkActive=\\\"active\\\">\\n                                            <i class=\\\"material-icons\\\">remove_red_eye</i> View</a>\\n                                    </div> \\n                                  </td> \\n      \\n                                 </tr> \\n                              </table>\\n                            </div>\\n                          </div>\\n                        </div>\\n      \\n                        <div *ngIf=\\\"checkInList?.length==0 && !loader\\\" class=\\\"data-not-available\\\" >\\n                          <div class=\\\"outer\\\">\\n                            <div class=\\\"iinear\\\">\\n                              <div class=\\\"figure\\\" matRipple>\\n                                <div class=\\\"header\\\">\\n                                  <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                                </div>\\n                                \\n                                <div class=\\\"description\\\">\\n                                  <div class=\\\"cs-heading\\\">\\n                                  </div>\\n                                  <div class=\\\"img\\\">\\n                                    <i class=\\\"material-icons\\\">error_outline</i>\\n                                  </div>\\n                                  <div class=\\\"psc\\\">\\n                                    <p>data not available</p>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n\\n\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"h50\\\"></div>\\n            \\n            \"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {MatDialog} from '@angular/material';\nimport { AddressModalComponent } from '../address-modal/address-modal.component';\nimport { EmailModalComponent } from '../email-modal/email-modal.component';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { IfStmt } from '@angular/compiler';\n\n@Component({\n    selector: 'app-sale-user-detail',\n    templateUrl: './sale-user-detail.component.html',\n    animations: [slideToTop()]\n})\n\nexport class SaleUserDetailComponent implements OnInit {\n    \n    id:any;\n    loader:boolean;\n    message:any;\n    segment:any=[];\n    staffSegments:any=[];\n    account_form:any={};\n    sales_detail:any=[];\n    salesdata:any={};\n    rolelists:any=[];\n    userdata:any=[];\n    role:any;\n    segmentlist:any=[];\n    territorylist:any=[];\n    territory:any=[];\n    check:boolean;\n    check1:boolean;\n    filterrole:any;\n    checkEmail:any;\n    rolelistsales1:any=[];\n    \n    distributionList:any=[];\n    juniorUserDetail:any=[];\n    active:any = {};\n    \n    territorylistdata:any = [];\n    networkIdsdata:any = [];\n    \n    currentActiveTab:any = '';\n    senddata:any;\n    \n    tiID:any=[];\n    leadlist:any=[];\n    \n    designationData = [\n        \n        { designationName: 'Vice President', designation: 1},\n        { designationName: 'Deputy General Manager', designation: 2},\n        { designationName: 'General Manager', designation: 3},\n        { designationName: 'Assistant General Manager', designation: 4},\n        { designationName: 'Sr Manager', designation: 5},\n        { designationName: 'Manager', designation: 6},\n        { designationName: 'Deputy Manager', designation: 7},\n        { designationName: 'Sr Executive', designation: 8},\n        { designationName: 'Executive', designation: 9},\n        { designationName: 'Assistant Manager', designation: 10},\n        { designationName: 'Assistant', designation: 11},\n        { designationName: 'Trainee', designation: 12},\n        { designationName: 'Others', designation: 13}\n    ];\n    \n    constructor(public db:ConstantService,public router:Router,public user:sessionStorage, public route:ActivatedRoute, public dialog: MatDialog,public toast:SnackBarOverview) { \n        \n        this.loader=true;\n        this.userdata=this.user['user']['data'];\n        this.role=this.userdata['role'];\n        this.route.params.subscribe(params=>{\n            console.log(params);\n            this.id = params.id;\n            console.log(this.id);\n            this.rolelist()\n            if(this.id)\n            {\n                this.salesuserdetail();\n\n            }\n            // this.distributorList();\n        });\n    }\n    \n    ngOnInit() {\n        \n    }\n    \n    \n    \n    rolelist()\n    {\n        console.log(\"role list\");\n        \n        this.loader=true;\n        this.db.fileData('','usertype/list').subscribe((response) => {\n            \n            console.log(response);\n            this.loader=false\n            if(response['status']=='Success')\n            {\n                this.rolelists=response['data'];\n                let filterrolesales= this.rolelists.filter(x => x.userTypeId==2);\n                this.rolelistsales1 = filterrolesales[0].roles;\n                console.log(this.rolelistsales1);\n                this.salesuserdetail();\n            }\n        });\n    }\n    \n    \n    distributorList()\n    {\n        console.log(\"Function call\");\n        \n        this.db.fetchData({},'network/list').subscribe((response)=>\n        {\n            console.log(response);\n            \n            if(response['status']==\"Success\")\n            {\n                this.distributionList=response['data'];\n            }\n            \n            console.log(this.distributionList);\n        });\n    }\n    \n    \n    salesuserdetail() {\n        \n        setTimeout(() => {\n            \n            this.currentActiveTab = 1;\n            \n        }, 200);\n        \n        console.log('hello');\n        \n        this.sales_detail = [];\n        this.juniorUserDetail = [];\n        this.distributionList = [];\n        \n        this.TotalRSM =[];\n        this.TotalASM =[];\n        this.TotalTI =[];\n        this.TotalTerritoy =[];\n        this.TotalDistributor =[];\n        \n        this.loader = true;\n        \n        this.db.fileData('','user/detail/'+this.id).subscribe((response)=>{\n            \n            console.log(response); \n            \n            \n            setTimeout(() => {\n                this.loader=false;\n            }, 200);\n            \n            if(response['status']=='Success')\n            {\n                // this.sales_detail = response;\n                this.salesdata=response['data'];\n                \n                for (let index = 0; index < this.designationData.length; index++) {\n                    \n                    if(this.designationData[index].designation == this.salesdata.designation) {\n                        \n                        this.salesdata.designationName = this.designationData[index].designationName;\n                    }\n                    \n                }\n                \n                \n                \n                this.sales_detail=this.salesdata.staffWithJuniors;\n                this.juniorUserDetail=this.sales_detail;\n                \n                this.juniourDetail(this.juniorUserDetail)\n                console.log(this.juniorUserDetail);\n                \n                console.log(this.salesdata);\n                \n                for(let i=0;i<this.rolelistsales1.length;i++)\n                {\n                    if(this.rolelistsales1[i].roleId==this.salesdata.role)\n                    {\n                        this.salesdata.roleName = this.rolelistsales1[i]['roleName'];\n                    }\n                }\n                \n                if(this.salesdata.role != 10)\n                {\n                    console.log(\"get_juniorUserID function call\");\n                    //   this.get_juniorUserID();\n                }\n            }\n            \n            \n            \n            this.segment_list();\n            \n        });\n    }\n    \n    \n    editAssignedDiv:any=false\n    editAssign()\n    {\n        this.editAssignedDiv=true;\n    }\n    \n    \n    segment_list() {\n\n        console.log('Exist it');\n        \n        this.db.fileData('','segment/list/').subscribe((response)=>{\n            \n            console.log(response);\n            \n            console.log(this.salesdata.staffSegments);\n            \n            if(response['status']=='Success')\n            {\n                this.segmentlist = response['data'];\n                console.log(this.segmentlist);\n                for(let i=0;i < this.segmentlist.length;i++) {\n                    \n                    const isSegmentExist = this.salesdata.staffSegments.findIndex(row => row.segment ==  this.segmentlist[i].value);\n                    \n                    if(isSegmentExist !== -1) {\n                        this.segmentlist[i].checked=true;\n                    }\n                }\n            }\n            \n        });\n    }\n    \n    \n    getSegmentRelatedData() {\n        \n        this.get_juniorUserID();\n        this.get_territory();\n    }\n    \n    \n    get_territory()\n    {\n        const segmentSelectedArr = [];\n        \n        for(let i=0;i < this.segmentlist.length;i++) {\n            \n            if(this.segmentlist[i].checked) {\n                segmentSelectedArr.push(this.segmentlist[i].value);\n            }\n        }\n        \n        if(segmentSelectedArr.length > 0) {\n            \n            this.loader = true;\n            \n            this.db.fetchData({'segments': segmentSelectedArr},'territory/list').subscribe((response)=>{\n                \n                console.log(response);\n                \n                this.loader=false;\n                if(response['status'] == 'Success')\n                {\n                    this.territorylist = response['data'];\n                    console.log(this.territorylist);\n                    console.log(this.TotalTerritoy);\n                    \n                    this.distributionList = [];\n                    \n                    for(let i = 0; i < this.territorylist.length; i++)\n                    {\n                        console.log(this.territorylist[i]);\n                        \n                        const territoryExist = this.TotalTerritoy.findIndex(row => row.territoryId == this.territorylist[i].territoryID);\n                        \n                        if(territoryExist !== -1) {\n                            \n                            this.territorylist[i].check1 = true;\n                            \n                            this.territorylist[i].disabled = this.TotalTerritoy[territoryExist].disabled;\n                            \n                            this.loader=true;\n                            \n                            this.db.fileData('','territory/detail/'+this.territorylist[i].territoryID).subscribe((responseData) => {\n                                \n                                console.log(responseData);\n                                this.loader=false;\n                                this.territorylistdata = responseData['data'];\n                                \n                                for (let j = 0; j < this.territorylistdata.territoryNetworks.length; j++) {\n                                    console.log(this.territorylistdata.territoryNetworks[j]);\n                                    \n                                    this.territorylistdata.territoryNetworks[j].territoryName = this.territorylistdata.territoryName;\n                                    \n                                    const isSelectedIndex = this.TotalDistributor.findIndex(row => row.networkId == this.territorylistdata.territoryNetworks[j].networkId);\n                                    \n                                    console.log(this.TotalDistributor);\n                                    \n                                    if(isSelectedIndex != -1) {\n                                        \n                                        this.territorylistdata.territoryNetworks[j].checked = true;\n                                        \n                                        this.territorylistdata.territoryNetworks[j].disabled = this.TotalDistributor[isSelectedIndex].disabled;\n                                        \n                                    } else {\n                                        \n                                        this.territorylistdata.territoryNetworks[j].checked = false;\n                                    }\n                                    \n                                    console.log(this.territorylistdata.territoryNetworks[j]);\n                                    \n                                    this.distributionList.push(this.territorylistdata.territoryNetworks[j]);\n                                }\n                                \n                                console.log(this.distributionList);\n                            });\n                            \n                        }\n                    }\n                    \n                    \n                    for (let index = 0; index < this.distributionList.length; index++) {\n                        \n                        const recordExist = this.TotalDistributor.findIndex(row => row.networkId == this.distributionList[index].networkId);\n                        \n                        if(recordExist !== -1) {\n                            this.distributionList[index].checked = true;\n                            this.distributionList[index].disabled = this.TotalDistributor[recordExist].disabled;\n                        }\n                    }\n                    \n                    \n                    console.log(this.distributionList);\n                    \n                    let userTempArr = [];\n                    \n                    if(this.salesdata.role == 6)\n                    {\n                        userTempArr = this.TotalRSM;\n                        \n                    } else if(this.salesdata.role == 7) {\n                        \n                        userTempArr = this.TotalASM;\n                        \n                    } else if(this.salesdata.role == 8) {\n                        \n                        userTempArr = this.TotalTI;\n                    }\n                    \n                    for(let i=0;i<this.juniorList.length;i++)\n                    {\n                        const isExist = userTempArr.findIndex(row => row.userId == this.juniorList[i].userId);\n                        \n                        if(isExist != -1) {\n                            this.juniorList[i].check=true;\n                        }\n                    }\n                }\n            });\n            \n        } else {\n            \n            this.juniorList = [];\n            this.territorylist = [];\n            this.distributionList = [];\n        }\n    }\n    \n    \n    juniorList:any=[];\n    userRole:any;\n    get_juniorUserID()\n    {\n        \n        \n        if(this.salesdata.role==8)\n        {\n            this.userRole=parseInt(this.salesdata.role)+2;\n            \n        }\n        else\n        {\n            this.userRole=parseInt(this.salesdata.role)+1;\n        }\n        \n        \n        let juniorSelectedArr = [];\n        \n        if(this.salesdata.role==8)\n        {\n            juniorSelectedArr = this.TotalTI;\n            \n        } else if(this.salesdata.role==7) {\n            \n            juniorSelectedArr = this.TotalASM;\n            \n        } else if(this.salesdata.role==6) {\n            \n            juniorSelectedArr = this.TotalRSM;\n        }\n        \n        console.log(juniorSelectedArr);\n        \n        const segmentSelected = [];\n        for (let index = 0; index < this.segmentlist.length; index++) {\n            \n            if(this.segmentlist[index].checked) {\n                segmentSelected.push(this.segmentlist[index].text);\n            }\n        }\n        \n        console.log(segmentSelected);\n        \n        \n        if(segmentSelected.length > 0) {\n            \n            console.log(this.role);\n            this.loader=true;\n            this.db.fetchData({'role':this.userRole, 'segments': segmentSelected,'currentPage': 1,'pageSize': 200,},'user/list').subscribe((response)=>{\n                \n                console.log(response);\n                this.loader = false;\n                if(response['status']=='Success')\n                {\n                    this.juniorList=response['data'];\n                    \n                    console.log(juniorSelectedArr);\n                    \n                    for(let i=0;i<juniorSelectedArr.length;i++)\n                    {\n                        for(let j=0;j<this.juniorList.length;j++)\n                        {\n                            if(juniorSelectedArr[i]['userId']===this.juniorList[j]['userId'])\n                            {\n                                this.juniorList[j].check=true;\n                            }\n                        }\n                    }\n                }\n                \n                console.log(this.juniorList);\n            });\n        } else {\n            \n            this.juniorList = [];\n        }\n    }\n    \n    \n    TotalRSM:any=[];\n    TotalASM:any=[];\n    TotalTI:any=[];\n    TotalTerritoy:any=[];\n    TotalDistributor:any=[];\n    juniourDetail(juniorList)\n    {\n        // this. get_territory()\n        \n        for(let i=0;i<juniorList.salesUserNetworks.length;i++)\n        {\n            juniorList.salesUserNetworks[i].disabled = false;\n            this.TotalDistributor=this.TotalDistributor.concat(juniorList.salesUserNetworks[i]);\n            console.log(this.TotalDistributor);\n        }\n        \n        for(let j=0;j<juniorList.userTerritories.length;j++)\n        {\n            juniorList.userTerritories[j].disabled = false;\n            this.TotalTerritoy=this.TotalTerritoy.concat(juniorList.userTerritories[j]);\n            console.log(this.TotalTerritoy);\n        }\n        \n        if(this.salesdata.role==8)\n        {\n            \n            console.log(\"role 8\");\n            \n            \n            for(let i=0;i < juniorList.juniors.length;i++)\n            {\n                \n                console.log(juniorList.juniors[i].userId);\n                if(juniorList.juniors[i].userId && juniorList.juniors[i].userName) {\n                    \n                    this.TotalTI=this.TotalTI.concat(juniorList.juniors[i]);\n                    \n                    for(let j=0;j<juniorList.juniors[i].salesUserNetworks.length;j++)\n                    {\n                        const existIndex = this.TotalDistributor.findIndex(row => row.establishment == juniorList.juniors[i].salesUserNetworks[j].establishment);\n                        \n                        if(existIndex == -1 ) {\n                            \n                            juniorList.juniors[i].salesUserNetworks[j].disabled = true;\n                            \n                            this.TotalDistributor=this.TotalDistributor.concat(juniorList.juniors[i].salesUserNetworks[j])\n                        }\n                    }\n                    \n                    for(let j=0;j<juniorList.juniors[i].userTerritories.length;j++)\n                    {\n                        const existIndex = this.TotalTerritoy.findIndex(row => row.territoryId == juniorList.juniors[i].userTerritories[j].territoryId);\n                        \n                        if(existIndex == -1 ) {\n                            \n                            juniorList.juniors[i].userTerritories[j].disabled = true;\n                            \n                            this.TotalTerritoy=this.TotalTerritoy.concat(juniorList.juniors[i].userTerritories[j]);\n                        }\n                    }\n                    \n                }\n                \n                console.log(this.TotalTerritoy);\n            }\n        }\n        \n        \n        if(this.salesdata.role==7)\n        {\n            console.log(\"role 7\");\n            for(let i=0;i<juniorList.juniors.length;i++)\n            {\n                \n                if(juniorList.juniors[i].userId && juniorList.juniors[i].userName) {\n                    \n                    this.TotalASM=this.TotalASM.concat(juniorList.juniors[i]);\n                    console.log(this.TotalASM);\n                    \n                    for(let j=0;j<juniorList.juniors[i].juniors.length;j++)\n                    { \n                        \n                        if(juniorList.juniors[i].juniors[j].userId && juniorList.juniors[i].juniors[j].userName) {\n                            \n                            const asmIndex = this.TotalTI.findIndex(row => row.userName == juniorList.juniors[i].juniors[j].userName);\n                            \n                            if(asmIndex == -1)\n                            {\n                                this.TotalTI=this.TotalTI.concat(juniorList.juniors[i].juniors[j])\n                            }\n                            \n                            for(let k=0;k<juniorList.juniors[i].juniors[j].salesUserNetworks.length;k++)\n                            {\n                                const existIndex = this.TotalDistributor.findIndex(row => row.establishment == juniorList.juniors[i].juniors[j].salesUserNetworks[k].establishment);\n                                \n                                if(existIndex == -1 ) {\n                                    \n                                    juniorList.juniors[i].juniors[j].salesUserNetworks[k].disabled = true;\n                                    \n                                    this.TotalDistributor=this.TotalDistributor.concat(juniorList.juniors[i].juniors[j].salesUserNetworks[k])\n                                }\n                            }\n                            \n                            for(let l=0;l<juniorList.juniors[i].juniors[j].userTerritories.length;l++)\n                            {\n                                console.log(\"territory\");\n                                \n                                const TiIndex = this.TotalTerritoy.findIndex(row => row.territoryName == juniorList.juniors[i].juniors[j].userTerritories[l].territoryName);\n                                if(TiIndex == -1 ) {\n                                    \n                                    juniorList.juniors[i].juniors[j].userTerritories[l].disabled = true;\n                                    \n                                    this.TotalTerritoy=this.TotalTerritoy.concat(juniorList.juniors[i].juniors[j].userTerritories[l]);\n                                }\n                                \n                            }\n                            \n                        }\n                        \n                    }\n                }\n                \n            }\n        }\n        \n        \n        console.log(juniorList);\n        if(this.salesdata.role==6)\n        {\n            console.log(\"role 6\");\n            for(let i=0;i < juniorList.juniors.length;i++)\n            {\n                \n                if(juniorList.juniors[i].userId && juniorList.juniors[i].userName) {\n                    \n                    this.TotalRSM=this.TotalRSM.concat(juniorList.juniors[i]);\n                    console.log(this.TotalRSM);\n                    \n                    for(let a=0;a<juniorList.juniors[i].juniors.length;a++)\n                    {\n                        \n                        if(juniorList.juniors[i].juniors[a].userId && juniorList.juniors[i].juniors[a].userName) {\n                            \n                            const asmIndex = this.TotalASM.findIndex(row => row.userName == juniorList.juniors[i].juniors[a].userName);\n                            if(asmIndex == -1)\n                            {\n                                this.TotalASM=this.TotalASM.concat(juniorList.juniors[i].juniors[a]);\n                            }\n                            \n                            \n                            for(let j=0;j<juniorList.juniors[i].juniors[a].juniors.length;j++)\n                            {\n                                \n                                if(juniorList.juniors[i].juniors[a].juniors[j].userId && juniorList.juniors[i].juniors[a].juniors[j].userName) {\n                                    \n                                    const tiIndex = this.TotalTI.findIndex(row => row.userName == juniorList.juniors[i].juniors[a].juniors[j].userName);\n                                    if(tiIndex == -1)\n                                    {\n                                        this.TotalTI=this.TotalTI.concat(juniorList.juniors[i].juniors[a].juniors[j])\n                                    }\n                                    \n                                    for(let k=0;k<juniorList.juniors[i].juniors[a].juniors[j].salesUserNetworks.length;k++)\n                                    {\n                                        const existIndex = this.TotalDistributor.findIndex(row => row.establishment == juniorList.juniors[i].juniors[a].juniors[j].salesUserNetworks[k].establishment);\n                                        if(existIndex == -1 ) {\n                                            \n                                            juniorList.juniors[i].juniors[a].juniors[j].salesUserNetworks[k].disabled = true;\n                                            \n                                            this.TotalDistributor=this.TotalDistributor.concat(juniorList.juniors[i].juniors[a].juniors[j].salesUserNetworks[k])\n                                        }\n                                    }\n                                    \n                                    for(let l=0;l<juniorList.juniors[i].juniors[a].juniors[j].userTerritories.length;l++)\n                                    {\n                                        console.log(\"territory\");\n                                        \n                                        const TiIndex = this.TotalTerritoy.findIndex(row => row.territoryName == juniorList.juniors[i].juniors[a].juniors[j].userTerritories[l].territoryName);\n                                        \n                                        if(TiIndex == -1 ) {\n                                            \n                                            juniorList.juniors[i].juniors[a].juniors[j].userTerritories[l].disabled = true;\n                                            \n                                            this.TotalTerritoy=this.TotalTerritoy.concat(juniorList.juniors[i].juniors[a].juniors[j].userTerritories[l]);\n                                        }\n                                        \n                                    }\n                                    \n                                }     \n                            }\n                            \n                        }\n                        \n                    }\n                    \n                }\n                \n            }\n        }\n    }\n    \n    \n    select_segment(value,index,event)\n    {\n        if(event.checked)\n        {\n            this.segment.push(value);\n            console.log(this.segment);\n        }\n        else\n        {\n            console.log(index);\n            console.log(this.segment[0]);\n            \n            for( var j=0;j<this.segmentlist.length;j++)\n            {\n                if(this.segmentlist[index]['value']==this.segment[j])\n                {\n                    this.segment.splice(j,1);\n                }\n            }\n            console.log(this.segment);\n            \n        }\n    }\n    \n    \n    select_territory(territoryId, isChecked, src)\n    {\n        console.log(territoryId,isChecked);\n        console.log('Select Territory Clicked');\n        \n        if(isChecked)\n        {\n            console.log(this.territorylist);\n            \n            // this.territory.push(value1);\n            // console.log(this.territory);\n            \n            let territoryArr = [];\n            \n            if(src == 'territory') {\n                \n                territoryArr = [territoryId];\n                \n                this.loader=true;\n                this.db.fileData('', 'territory/detail/'+territoryId).subscribe((response) => {\n                    \n                    console.log(response);\n                    this.loader=false;\n                    this.territorylistdata = response;\n                    \n                    if(this.territorylistdata.data['territoryNetworks']) {\n                        \n                        for (let index = 0; index < this.territorylistdata.data['territoryNetworks'].length; index++) {\n                            \n                            this.territorylistdata.data['territoryNetworks'][index]['territoryName'] = this.territorylistdata.data['territoryName'];\n                            \n                            this.distributionList.push(this.territorylistdata.data['territoryNetworks'][index]);\n                            \n                        }\n                        \n                        console.log(this.distributionList);\n                    }\n                });\n            }\n            \n            if(src == 'junior') {\n                \n                console.log(this.territorylist);\n                \n                for (let index = 0; index < this.territorylist.length; index++) {\n                    \n                    console.log(territoryId);\n                    \n                    const isExist = territoryId.findIndex(row => row.territoryId == this.territorylist[index].territoryID);\n                    \n                    if(isExist != -1) {\n                        \n                        this.territorylist[index].check1 = true;\n                    }\n                }\n            }\n        }\n        else\n        {\n            \n            if(src == 'territory') {\n                \n                this.distributionList = this.distributionList.filter(row => row.territoryId != territoryId);\n                console.log(this.distributionList);\n            }\n        }\n        \n    }\n    \n    \n    updateSalesUser() {\n        \n        const updatedSalesArr = {};\n        updatedSalesArr['userId'] = this.salesdata.userId;\n        \n        const segmentSelected = [];\n        for(let i = 0;i < this.segmentlist.length;i++) {\n            \n            if(this.segmentlist[i].checked) {\n                segmentSelected.push({'userId':this.salesdata.userId, 'segmentCode': this.segmentlist[i].value, 'segment' : this.segmentlist[i].value });\n            }\n        }\n        \n        const territorySelected = [];\n        for (let index = 0; index < this.territorylist.length; index++) {\n            if(this.territorylist[index].check1 && !this.territorylist[index].disabled) {\n                territorySelected.push(this.territorylist[index]['territoryID']);\n            }\n        }\n        \n        \n        const networkSelected = [];\n        for (let index = 0; index < this.distributionList.length; index++) {\n            if(this.distributionList[index].checked  && !this.distributionList[index].disabled) {\n                networkSelected.push({networkId: this.distributionList[index]['networkId'], territoryId: this.distributionList[index]['territoryId']});\n            }\n        }\n        \n        updatedSalesArr['networks'] = networkSelected;\n        \n        if(this.salesdata.role == '8' || this.salesdata.role == '7' || this.salesdata.role == '6') {\n            \n            const salesHierarchies = [];\n            for (let index = 0; index < this.juniorList.length; index++) {\n                \n                if(this.juniorList[index].check) {\n                    salesHierarchies.push({juniorUserID : this.juniorList[index].userId});\n                }\n            }\n            \n            updatedSalesArr['saleHierarchies'] = salesHierarchies;\n        }\n        \n        \n        if(this.salesdata.role != '6') {\n            updatedSalesArr['territories'] = territorySelected;\n        }\n        \n        \n        updatedSalesArr['staffSegments'] = segmentSelected;\n        \n        console.log(updatedSalesArr);\n        \n        this.loader = true;\n        \n        updatedSalesArr['staffSegmentsModified'] = true;\n        updatedSalesArr['salesHeirarchyModified'] = true;\n        updatedSalesArr['territoriesModified'] = true;\n        updatedSalesArr['networksModified'] = true;\n        \n        \n        this.db.fetchData(updatedSalesArr,'user/update').subscribe((response)=>{\n            console.log(response);\n            this.loader=false;\n            this.message=response['message'];\n            this.editAssignedDiv = false;\n            if(this.message==\"User updated successfully\")\n            {\n                this.toast.openSucess('Updated successfully','');\n                this.staffSegments=[];\n                this.salesuserdetail();\n            }\n            else\n            {\n                this.toast.openError('Something went wrong Please Try Again!!','');\n            }\n        });\n    }\n    \n    \n    updateTerritory() {\n        \n        this.salesdata.territories=this.territory;\n        this.salesdata.landline=\"9050801272\";\n        this.salesdata.country=\"string\";\n        \n        this.db.fetchData(this.salesdata,'user/update').subscribe((response)=>{\n            \n            console.log(response);\n            this.loader=false;\n            this.message=response['message'];\n            if(this.message==\"User updated successfully\")\n            {\n                this.toast.openSucess('Updated successfully','');\n            }\n            else\n            {\n                this.toast.openError('Something went wrong Please Try Again!!','');\n            }\n        });\n    }\n    \n    \n    toggleterritory(key,action)\n    {\n        console.log(action);\n        console.log(key);\n        \n        if(action == 'open')\n        { \n            this.active[key] = true; \n        }\n        \n        if(action == 'close')\n        { \n            this.active[key] = false;\n        }\n        \n        console.log(this.active);\n    }\n    \n    openDialog() {\n        const dialogRef = this.dialog.open(AddressModalComponent,{width: '768px', data: this.salesdata});\n        dialogRef.afterClosed().subscribe(result => {\n            console.log(result);\n            this.salesuserdetail();\n        });\n    }\n    \n    openEmail(check) {\n        \n        this.salesdata.type=check;\n        console.log(check);\n        const dialogRef = this.dialog.open(EmailModalComponent,{ width: '520px', data:this.salesdata});\n        dialogRef.afterClosed().subscribe(result => {\n            this.salesuserdetail();\n        });\n    }\n    \n    updatepassword() {\n        \n        console.log('pass');\n        this.db.fetchData({\"userId\": this.id,\"password\":this.account_form.password},'account/changepassword')\n        .subscribe((response)=>{ console.log(response)\n            this.message=response['message'];\n            console.log(this.message);\n            if(this.message==\"Your password has been changed successfully!\")\n            {\n                this.toast.openSucess('Your password has been changed successfully!','');\n            }\n            else\n            {\n                this.toast.openError('Something Went Wrong Please Try Again!!','');\n            }\n        });\n    }\n    \n    \n    lead_list() {\n        \n        this.loader = true;\n        \n        this.senddata = {\"userId\":this.id,\"currentPage\": 1,\"pageSize\": 50,'status':'2','leadType':12, 'isActive':true};\n        \n        this.db.fetchData(this.senddata,'lead/list').subscribe((response)=>{\n            \n            console.log(response);\n            this.loader=false;\n            this.leadlist=response['data'];\n            \n            \n            for (let index = 0; index < this.leadlist.length; index++) {\n                \n                let segmentStr = '';\n                for (let index1 = 0; index1 < this.leadlist[index]['leadSegments'].length; index1++) {\n                    \n                    if(index1 == 0) {\n                        segmentStr = this.leadlist[index]['leadSegments'][index1].segment;\n                    } else {\n                        \n                        segmentStr += ', ' + this.leadlist[index]['leadSegments'][index1].segment;\n                    }\n                }\n                \n                this.leadlist[index].segmentStr = segmentStr;\n                \n            }\n            \n        });\n    }\n    \n    \n    orderList:any = [];\n    getOrderList() {\n        \n        this.loader = true;\n        \n        const senddata={\"userId\":this.id,\"currentPage\": 1,\"pageSize\": 50};\n        \n        this.db.fetchData(senddata,'order/list').subscribe((response)=>{\n            \n            console.log(response);\n            // this.orderActive=true;\n            \n            this.orderList = response['data'];\n            \n            this.loader=false;\n            \n        });\n        \n    }\n    \n    \n    trvelPlanLIst:any = [];\n    getTravelList()\n    {\n        this.loader=true;\n        \n        const monthArr = [{monthId:1, monthName: 'January'},\n        {monthId:2, monthName: 'February'},\n        {monthId:3, monthName: 'March'},\n        {monthId:4, monthName: 'April'},\n        {monthId:5, monthName: 'May'},\n        {monthId:6, monthName: 'June'},\n        {monthId:7, monthName: 'July'},\n        {monthId:8, monthName: 'Augest'},\n        {monthId:9, monthName: 'September'},\n        {monthId:10, monthName: 'October'},\n        {monthId:11, monthName: 'November'},\n        {monthId:12, monthName: 'December'}]\n        \n        this.db.fetchData({\"userId\":this.id,\"currentPage\": 1,\"pageSize\": 50},\"travelplan/list\").subscribe((result)=>{\n            \n            console.log(result);\n            \n            this.trvelPlanLIst = result['data'];\n            \n            \n            for (let index = 0; index < this.trvelPlanLIst.length; index++) {\n                \n                \n                const indexExist = monthArr.findIndex(row => row.monthId == this.trvelPlanLIst[index].month);\n                \n                this.trvelPlanLIst[index].monthName = monthArr[indexExist].monthName;\n                \n            }\n            \n            \n            setTimeout (() => {\n                this.loader=false;\n            }, 700);\n            \n        })\n    }\n    \n    \n    \n    expenseList:any = [];\n    getExpenseList()\n    {\n        this.loader=true;\n        this.db.fetchData({\"userId\": this.id,\"currentPage\": 1,\"pageSize\": 50},\"expense/list\").subscribe((result)=>{\n            \n            console.log(result);\n            this.loader=false;\n            this.expenseList=result['data'];\n            \n        })\n    }\n    \n    \n    orderDetail(index)\n    {\n        if(this.orderList[index].dealerStatus==1)\n        {\n            console.log(\"router work\");\n            this.router.navigate(['edit-order/'+this.orderList[index].orderId])\n        }\n        if(this.orderList[index].dealerStatus==2 || this.orderList[index].dealerStatus==3)\n        {\n            this.router.navigate(['order-detail/'+this.orderList[index].orderId])\n        }\n    }\n    \n    \n    checkInList:any = [];;\n    getCheckinList()\n    {\n        \n        this.loader=true;\n        \n        const requesData={\"userId\":this.id, \"currentPage\": 1,\n        \"pageSize\": 500}\n        \n        this.db.fetchData(requesData,'activity/list').subscribe((response)=>{\n            \n            console.log(response);\n            this.checkInList=response['data'];\n            this.loader=false;\n        });\n    }\n    \n    \n    \n    tmp_concern:any = [];\n    concernList:any = [];\n    \n    getConcernList() {\n        \n        this.loader = true;\n        \n        this.db.fetchData( {\"currentPage\": 1,\n        \"pageSize\": 500, concernStatuses: [3,4,5,6], createdBy:this.id},'concern/list').subscribe((response)=>{\n            console.log(response)\n            this.loader=false;\n            \n            this.concernList = response['data'];\n            \n            \n            for (let index = 0; index < this.concernList.length; index++) {\n                \n                let totalQty = 0;\n                let totalAmount = 0;\n                \n                for (let index1 = 0; index1 < this.concernList[index]['productConcerns'].length; index1++) {\n                    \n                    if(this.concernList[index]['productConcerns'][index1].qunatity) {\n                        totalQty += this.concernList[index]['productConcerns'][index1].qunatity;\n                    }\n                    \n                    totalAmount += this.concernList[index]['productConcerns'][index1].netAmount;\n                }\n                \n                this.concernList[index].totalQty = totalQty;\n                this.concernList[index].totalAmount = totalAmount;\n                \n            }\n            \n            \n            \n            \n            if(response['status']=='Failed')\n            {\n                // this.div=true;\n                // this.concernList=[];\n                // this.tmp_concern=this.concernList\n            }\n            \n            console.log(this.concernList);\n            console.log(this.tmp_concern);\n            \n        })\n    }\n    \n    \n    \n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/user.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text w250\\\">\\n        <h2>Users</h2>\\n        <p>Total User {{users.length}}</p>\\n      </div>\\n    </div>\\n    <div  *ngIf=\\\"filter.name || filter.role || filter.mobileno ||filter.email\\\" class=\\\"filter-container left-auto\\\">\\n      <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n        <button mat-button >CLEAR FILTER</button>\\n      </div>\\n    </div>\\n    <div class=\\\"tabs left-auto\\\">\\n      <ul>\\n        <li><a routerLink=\\\"/sale-user-list\\\" routerLinkActive=\\\"active\\\">SALES USERS</a></li>\\n        <li><a routerLink=\\\"/system-user-list\\\" routerLinkActive=\\\"active\\\">SYSTEM USERS</a></li>\\n      </ul>\\n    </div>\\n   \\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n            <div class=\\\"table-head\\\">\\n              <table>\\n                <tr>\\n                  <th class=\\\"w110\\\">Date</th>\\n                  <th class=\\\"w170\\\">Role</th>\\n                  <th class=\\\"w230\\\">Name</th>\\n                  <th class=\\\"w130\\\">Mobile</th>\\n                  <th class=\\\"w130\\\">Territories</th>\\n                  <th>Target</th>\\n                  <th class=\\\"w200\\\">Account Status</th>\\n                </tr>\\n              </table>\\n            </div>\\n            <div class=\\\"table-head bdrt\\\">\\n              <form>\\n                <table>\\n                  <tr>\\n                    <th class=\\\"w110\\\"> </th>\\n                    <th class=\\\"w170\\\">\\n                      <div class=\\\"th-search\\\">\\n                        <select #role=\\\"ngModel\\\" name=\\\"role\\\" [(ngModel)]=\\\"filter.role\\\" (change)=\\\"userList()\\\">\\n                          <option value=\\\"\\\" selected>Select</option>\\n                          <option value=\\\"{{list.roleId}}\\\" *ngFor=\\\"let list of rolelistsales1\\\">{{list.roleName}}</option>\\n                        </select>\\n                      </div>\\n                    </th>\\n                    <th class=\\\"w230\\\">\\n                      <div class=\\\"th-search\\\">\\n                        <input type=\\\"text\\\"  (keyup)=\\\"userList()\\\" name=\\\"name\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.name\\\" placeholder=\\\"Search....\\\">\\n                        <!-- <i class=\\\"material-icons search-icon\\\">search</i> -->\\n                      </div>\\n                    </th>\\n                    <th class=\\\"w130\\\">\\n                      <div class=\\\"th-search\\\">\\n                        <input type=\\\"text\\\"  (keyup)=\\\"userList()\\\" name=\\\"mobileno\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.mobileno\\\" placeholder=\\\"Search....\\\">\\n                        <!-- <i class=\\\"material-icons search-icon\\\">search</i> -->\\n                      </div>\\n                    </th>\\n\\n                    <th class=\\\"w130\\\">\\n                      &nbsp;\\n                      \\n                    </th>\\n\\n                     <th>\\n                       &nbsp;\\n                     </th>\\n\\n                    <th class=\\\"w200\\\">&nbsp;</th>\\n\\n                  </tr>\\n                </table>\\n              </form>\\n            </div>\\n          </div>\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table>\\n                  <tr *ngFor=\\\"let salesuser of users\\\">\\n\\n                    <td class=\\\"w110\\\">{{ salesuser.createdOn|date:'d MMM y'}}</td>\\n                    <td class=\\\"w170\\\">{{ salesuser.role_name}}</td>\\n                    <td class=\\\"w230\\\"><a class=\\\"link-btn\\\" routerLink=\\\"/sale-user-detail/{{salesuser.userId}}\\\" routerLinkActive=\\\"active\\\" mat-button>{{ salesuser.userName}}</a></td>\\n                    <td class=\\\"w130\\\">{{ salesuser.mobile}}</td>\\n                    \\n                    <td class=\\\"w130\\\">\\n                       <span *ngFor=\\\"let list of salesuser.userTerritories\\\">{{list.territoryName}}</span>\\n                    </td>\\n\\n                    <td>&#8377; {{salesuser.totalTarget}}</td>\\n\\n                      <td class=\\\"w200\\\">\\n\\n                          <mat-slide-toggle class=\\\"right-toggle\\\" [checked]=\\\"salesuser.isActive\\\"  (change)=\\\"accountHandler(salesuser.userId, $event)\\\" ></mat-slide-toggle>\\n                             \\n                          <!-- <div class=\\\"action-btns\\\">\\n                            <button mat-button class=\\\"delete\\\" (click)=\\\"deleteUser(salesuser.userId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button>\\n                          </div> -->\\n\\n                      </td>\\n\\n                    </tr>\\n                </table>\\n                </div>\\n              </div>\\n              \\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n        <div class=\\\"outer\\\">\\n          <div class=\\\"iinear\\\">\\n            <div class=\\\"figure\\\" matRipple>\\n              <div class=\\\"header\\\">\\n                <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n              </div>\\n              <div class=\\\"description\\\">\\n\\n                <div class=\\\"img\\\">\\n                    <i class=\\\"material-icons\\\">error_outline</i>\\n                </div>\\n                  \\n                <div class=\\\"cs-heading\\\">\\n                  <h2>Data Not Available</h2>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"fixed-multibtn-botm\\\">\\n      <ul>\\n        <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/user-add\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n      </ul>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { DialogComponent } from 'src/app/dialog';\nimport { SnackBarOverview } from 'src/app/toast';\n\n@Component({\n  selector: 'app-sale-user-list',\n  templateUrl: './sale-user-list.component.html',\n  animations: [slideToTop()]\n\n})\nexport class SaleUserListComponent implements OnInit {\n  userlist:any=[];\n  users:any=[];\n  loader:boolean;\n  rolelists:any=[];\n  rolelistsales1:any=[];\n  filter:any={};\n  div:boolean=false;\n  constructor(public db:ConstantService,public dialog:DialogComponent, public toast:SnackBarOverview) {\n   \n     this.userList();\n\n   }\n\n  ngOnInit() {\n\n  }\n\n  clearfilter(){\n \n    this.filter={};\n    this.userList();\n  }\n\n\n  deleteUser(id)\n  {\n        this.dialog.delete('Sales User  !').then((result) => {\n          if(result)\n          {\n              console.log(id);\n              this.db.fileData(\"\",\"user/delete/\"+id).subscribe((result)=>{\n\n                  console.log(result);\n                  if(result['status']==\"Success\")\n                  {\n                    this.userList();\n                  }\n            \n              })\n          }\n        })\n  }\n\n\n\n  rolelist(){\n    this.loader=true;\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.rolelists=response['data'];\n      let filterrolesystem= this.rolelists.filter(x => x.userTypeId==2);\n      this.rolelistsales1=filterrolesystem[0].roles;\n      console.log(this.rolelistsales1);\n      for(let i=0;i<this.users.length;i++){\n        let systemIndex=  this.rolelistsales1.findIndex(x => x.roleId==this.users[i].role);\n        console.log(systemIndex);\n        if(systemIndex!=-1){\n        this.users[i].role_name=this.rolelistsales1[systemIndex].roleName;\n        console.log(this.users[i].role_name);\n        }\n      }\n    });\n  }\n\n  userList()\n  {\n\n        this.loader=true;\n\n        const selectedObject = {'userType': 2, 'currentPage': 1,\n        'pageSize': 200};\n\n        if(this.filter.name) {\n            selectedObject['userName'] = this.filter.name;\n        }\n\n        if(this.filter.mobileno) {\n          selectedObject['mobile'] = this.filter.mobileno;\n        }\n\n        if(this.filter.email) {\n          selectedObject['email'] = this.filter.email;\n        }\n\n        if(this.filter.role) {\n          selectedObject['role'] = this.filter.role;\n        }\n\n        this.db.fetchData(selectedObject,'user/list').subscribe((response)=>{\n\n              console.log(response);\n              if(response['status']=='Success')\n              {\n                  this.rolelist();\n                  this.userlist = response;\n                  this.users=this.userlist.data;\n\n              } else {\n\n                  this.div=true;\n                  this.userlist = [];\n                  this.users = [];\n              }\n\n              this.loader=false;\n              \n          // console.log(this.users[25].userTerritories[0]);\n        });\n  }\n\n\n  accountHandler(userId, event) {\n\n         this.loader = true;\n\n         console.log(event.checked);\n\n         this.db.fileData(\"\",\"user/delete/\"+userId+'/'+event.checked).subscribe((result)=>{\n\n              console.log(result);\n              this.loader = false;\n\n              this.toast.openSucess('Account Updated Successfully!','');\n    \n         })\n  }\n\n}\n","module.exports = \"\\n<div   *ngIf=\\\"system_data.type=='address'\\\"  class=\\\"edit-modal\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div mat-dialog-content>\\n  <p class=\\\"heading\\\">Update Address</p>\\n  <div class=\\\"from-fields\\\">\\n    <div class=\\\"col s12\\\">          \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s4 pl0\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <mat-select placeholder=\\\"State\\\" name=\\\"state\\\" [(ngModel)]=\\\"system_data.state\\\" >\\n                  <mat-option (click)=\\\"get_district()\\\"  *ngFor=\\\"let state of statelist\\\" value=\\\"{{state}}\\\">{{state}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      <div class=\\\"col s4 \\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <mat-select placeholder=\\\"District\\\"   name=\\\"district\\\" [(ngModel)]=\\\"system_data.district\\\" >\\n                  <mat-option (click)=\\\"get_city()\\\"  *ngFor=\\\"let district of district1\\\" value=\\\"{{district.districtName}}\\\">{{district.districtName}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      <div class=\\\"col s4 pr0\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\">\\n                <mat-select placeholder=\\\"City\\\"  name=\\\"city\\\" [(ngModel)]=\\\"system_data.city\\\" >\\n                  <mat-option   *ngFor=\\\"let city of cities\\\" value=\\\"{{city.cityName}}\\\">{{city.cityName}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"row mb20\\\">\\n      <div class=\\\"col s8 pl0\\\">\\n          <div class=\\\"control-field\\\">\\n              <mat-form-field class=\\\"cs-input\\\" >\\n                <textarea matInput placeholder=\\\"Address\\\" name=\\\"street\\\" [(ngModel)]=\\\"system_data.street\\\" class=\\\"h45\\\"></textarea>\\n              </mat-form-field>\\n            </div>\\n      </div>\\n      <div class=\\\"col s4 empty\\\"></div>\\n    </div>\\n    </div>\\n  </div>\\n  </div>\\n  <div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n  <button mat-button (click)=\\\"update_salesuser()\\\">Save</button>\\n  </div>\\n</div>\\n  <!-- Email &&&& Mobile Dialog -->\\n  <div *ngIf=\\\"data.type=='email' || data.type=='mobile'\\\" class=\\\"edit-modal\\\">\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updateMobileEmail()\\\"  #f=\\\"ngForm\\\" novalidate>\\n      <div *ngIf=\\\"loader\\\"> \\n              <mat-spinner class=\\\"loader\\\"></mat-spinner> \\n      </div>\\n  <div *ngIf=\\\"data.type=='email'\\\" mat-dialog-content>\\n      <p class=\\\"heading\\\">Update Email</p>\\n      <mat-form-field class=\\\"example-full-width cs-field\\\">\\n         <!-- <input matInput placeholder=\\\"Email\\\" value=\\\"email\\\" [(ngModel)]=\\\"data.email\\\"> -->\\n         <input matInput placeholder=\\\"Email-ID\\\" name=\\\"email\\\" value=\\\"email\\\" [(ngModel)]=\\\"data.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>\\n      </mat-form-field>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n          Please Enter Valid Email....\\n        </div>\\n  </div>\\n  <div *ngIf=\\\"data.type=='mobile'\\\" mat-dialog-content>\\n       <p class=\\\"heading\\\">Update Mobile</p>\\n       <mat-form-field class=\\\"example-full-width cs-field\\\">\\n          <input matInput type=\\\"text\\\"  maxlength=\\\"10\\\" type=text  placeholder=\\\"Mobile\\\" name=\\\"mobile\\\"   value=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" #mobile=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobile.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\" required>\\n          <!-- <input matInput placeholder=\\\"Mobile\\\" value=\\\"mobile\\\" [(ngModel)]=\\\"data.mobile\\\"> -->\\n      </mat-form-field>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!mobile.valid && mobile.touched\\\">\\n        Please Enter Valid Mobile....\\n    </div>\\n  </div>\\n  <div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n  <button mat-button>Save</button>\\n  </div>\\n </form>\\n  </div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-system-modal',\n  templateUrl: './system-modal.component.html',\n})\nexport class SystemModalComponent implements OnInit {\nsystem_data:any={};\nstatelist:any=[];\ndistrictlist:any=[];\nst:any=[];\ndistrict1:any=[];\ncitylist:any=[];\ncities:any=[];\ndistricts1:any=[];\nmessage:any;\nloader:any;\n  constructor( public toast: SnackBarOverview,public router:Router,public dialogRef: MatDialogRef<SystemModalComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService) {\n    \n    this.system_data=this.data;\n    console.log(this.system_data);\n    this.get_state();\n    this.get_district();\n    this.get_city();\n   }\n\n\n\n  ngOnInit() { \n    \n  }\n  MobileNumber(event: any) \n  {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n  get_state(){\n    this.db.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.statelist=response['data'];  \n      console.log(this.statelist);\n        this.get_district();\n    });\n  }\n  get_district(){\n    console.log(this.system_data.state);\n    this.st=Array(this.system_data.state)\n    this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n      console.log(response);\n      this.districtlist=response['data'];\n      this.district1=this.districtlist[0].distrcits;\n    });\n  this.get_city()\n  }\n  get_city(){\n   \n    console.log(this.system_data.state,this.system_data.district);\n    console.log(this.system_data.district);\n    this.db.fetchData(Array({\"stateName\":this.system_data.state,\"distrcits\":Array({\"districtName\":this.system_data.district})}),'city/list').subscribe((response)=>{\n      console.log(response);\n      this.citylist=response['data'];\n      this.districts1=this.citylist[0].distrcits;\n      this.cities=this.districts1[0].cities;\n      console.log(this.cities);\n    });\n  }\n\n  \n  updateMobileEmail(){\n    this.loader=true;\n    console.log(this.data);\n    this.data.landline=\"9050801272\";\n    this.data.country=\"string\";\n    this.db.fetchData(this.data,'user/update').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.message=response['message'];\n      if(this.message==\"User updated successfully\")\n      {\n        this.toast.openSucess('Updated successfully','');\n      }\n      else\n      {\n        this.toast.openError('Something went wrong Please Try Again!!','');\n      }\n      this.dialogRef.close();\n    });\n  }\n  update_salesuser(){\n    this.loader=true;\n    console.log(this.data);\n   this.db.fetchData(this.system_data,'user/update').subscribe((response)=>{\n     console.log(response)\n     this.loader=false;\n     this.message=response['message'];\n    if(this.message==\"User updated successfully\")\n    {\n      this.toast.openSucess('Address updated successfully','');\n    }\n    else\n    {\n      this.toast.openError('Something went wrong Please Try Again!!','');\n    }\n  });\n    this.dialogRef.close();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/system-user-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{systemdata.userName}}</h2>\\n        <p class=\\\"light\\\">{{systemdata.role_name}}</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer\\\">\\n    \\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"profile-info\\\">\\n                <ul class=\\\"flex-start\\\">\\n\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Designation</span>\\n                      <p>{{systemdata.designationName}}</p>\\n                    </div>\\n                  </li>\\n\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/gmail.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Email</span>\\n                      <p class=\\\"link-clr\\\">{{systemdata.email}}</p>\\n                      <a *ngIf=\\\"id!=userId\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" [(ngModel)]=\\\"systemdata.email\\\" (click)=\\\"openEmail('email')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Mobile</span>\\n                      <p>{{systemdata.mobile}}</p>\\n                      <a *ngIf=\\\"id!=userId\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\" [(ngModel)]=\\\"systemdata.mobile\\\" (click)=\\\"openEmail('mobile')\\\"><i class=\\\"material-icons\\\">create</i></a>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>ADDRESS</h2>\\n              </div>\\n              <a *ngIf=\\\"id!=userId\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\"  (click)=\\\"openDialog('address')\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n              <div class=\\\"nationality\\\">\\n                <img src=\\\"assets/img/india.svg\\\" alt=\\\"\\\">\\n                <p>India</p>\\n              </div>\\n              <div class=\\\"ds-from-fields\\\">\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>State</p>\\n                    <p>{{systemdata.state}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>District</p>\\n                    <p>{{systemdata.district}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>City</p>\\n                    <p>{{systemdata.city}}</p>\\n                  </div>\\n                  <div class=\\\"static-info w100\\\" style=\\\"min-width: 100px;\\\">\\n                    <p>Pin Code</p>\\n                    <p>{{systemdata.pin}}</p>\\n                  </div>\\n                </div>\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>address</p>\\n                    <p>{{systemdata.street}}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"cs-logs\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>ACCOUNT INFO</h2>\\n              </div>\\n              <div class=\\\"logs-outer\\\">\\n                <div class=\\\"logs-list\\\">\\n                  <div class=\\\"account-details\\\">\\n                    <ul>\\n                      <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <div class=\\\"cs-account\\\">\\n                              <p>User Name</p>\\n                              <h5>{{systemdata.email}}</h5>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </li>\\n                      \\n                      <li class=\\\"active\\\" [ngClass]=\\\"{'active':systemdata.active==true}\\\" style=\\\"padding-top: 0px !important; padding-bottom: 0px !important;\\\">\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <div class=\\\"cs-account\\\">\\n                              <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updatepassword()\\\"  #f=\\\"ngForm\\\" novalidate>\\n                                <div class=\\\"from-fields\\\">\\n                                  <div class=\\\"control-field pr80\\\">\\n                                    <mat-form-field class=\\\"cs-input infix-bodr\\\">\\n                                      <input matInput type=\\\"text\\\" placeholder=\\\"Change password\\\" name=\\\"password\\\" [(ngModel)]=\\\"account_form.password\\\" #password=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required>\\n                                    </mat-form-field>\\n                                  </div>\\n                                </div>\\n                                <mat-error *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                  <mat-error *ngIf=\\\"password.errors.required\\\">Password is required</mat-error>\\n                                </mat-error>\\n                                <button mat-raised-button color=\\\"accent\\\" class=\\\"material-icons pass-icon\\\">Save</button>\\n                              </form>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </li>\\n                      </ul>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>\\n\\n\\n        <div *ngIf=\\\"!moduleAssignedEdit\\\" class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box padding0\\\">\\n              <div class=\\\"full-address\\\">\\n                <div class=\\\"top-heading\\\">\\n                  <h2>Modules Assigned Details</h2>\\n                </div>\\n\\n                <a *ngIf=\\\"id!=userId\\\" (click)=\\\"editModulesHandler()\\\" mat-button class=\\\"address-edit\\\" matTooltip=\\\"EDIT\\\" color=\\\"accent\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n                <div class=\\\"cs-table\\\">\\n\\n                    <div class=\\\"table-container\\\">\\n                      <div class=\\\"table-content none-shadow\\\">\\n                        <table>\\n                          <tr [hidden]=\\\"!list.show\\\" *ngFor=\\\"let list of dbModuleData.moduleAccesses\\\">\\n                            <td>{{list.module}}</td>\\n                          </tr>\\n                        </table>\\n                      </div>\\n                    </div>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"moduleAssignedEdit\\\" class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box mt15 pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>Modules Rights</h2>\\n              </div>\\n              \\n              <div class=\\\"col s12\\\">\\n                <div class=\\\"collaps flat-collaps mt15\\\">\\n                  <div class=\\\"collaps-area\\\">\\n                    <mat-accordion>\\n                      <mat-expansion-panel  [expanded]=\\\"step === index\\\" (opened)=\\\"setStep(0)\\\">\\n                        <mat-expansion-panel-header class=\\\"outer-panel mb10\\\">\\n                          <mat-panel-title>\\n                            Module Name\\n                          </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"cs-rights\\\">\\n                          <div class=\\\"all-selct\\\" *ngFor=\\\"let list of moduleData; let index = index\\\">\\n                            <mat-checkbox [(ngModel)]=\\\"list.view\\\" name=\\\"list.view\\\">{{list.moduleName}}</mat-checkbox>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col s12\\\">\\n                          <div class=\\\"collaps flat-collaps mt10\\\">\\n                            <div class=\\\"collaps-area\\\">\\n                              <mat-accordion>\\n                                <mat-expansion-panel  >\\n                                  <mat-expansion-panel-header class=\\\"outer-panel mb10\\\">\\n                                    <mat-panel-title>\\n                                      <mat-checkbox (change)=\\\"selectAllHandler($event)\\\">Master</mat-checkbox>\\n                                    </mat-panel-title>\\n                                  </mat-expansion-panel-header>\\n                                  <div class=\\\"cs-rights\\\">\\n                                    <div class=\\\"all-selct\\\" *ngFor=\\\"let list of masterArray; let i = index\\\">\\n                                      <mat-checkbox [(ngModel)]=\\\"list.view\\\" name=\\\"list.view{{i}}\\\">{{list.moduleName}}</mat-checkbox>\\n                                    </div>\\n                                  </div>\\n                                </mat-expansion-panel>\\n                              </mat-accordion>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </mat-accordion>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"key-message\\\" *ngIf=\\\"moduleAssignedEdit && !isModuleSelected\\\">Atleast One Module Right Required!</p>\\n\\n        <div *ngIf=\\\"moduleAssignedEdit\\\" class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"cs-btn text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n               <button mat-raised-button (click)=\\\"moduleAssignedEdit=false\\\" color=\\\"warn\\\" class=\\\"material-icons pass-icon\\\">Cancel</button>\\n                <button mat-raised-button (click)=\\\"saveAccessHandler()\\\" color=\\\"accent\\\" class=\\\"material-icons pass-icon\\\">Save</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"h50\\\"></div>\\n  \\n  \"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ConstantService } from '../../constant.service';\nimport {MatDialog} from '@angular/material';\nimport { SystemModalComponent } from '../system-modal/system-modal.component';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { sessionStorage }  from '../../local-storage.service';\n@Component({\n  selector: 'app-system-user-detail',\n  templateUrl: './system-user-detail.component.html',\n  animations: [slideToTop()]\n})\nexport class SystemUserDetailComponent implements OnInit {\n  \n  id:any;\n  account_form:any={};\n  type:any=[];\n  system_detail:any=[];\n  active:any = {};\n  systemdata:any=[];\n  rolelists:any=[];\n  rolelistsystem1:any=[];\n  userdata:any=[];\n  role:any;\n  loader:any;\n  message:any;\n  userId:any;\n  \n  isModuleSelected:any=false;\n  dbModuleData:any = [];\n  \n  step:any = 0;\n  \n  moduleAssignedEdit:any = false;\n  \n  moduleData = [{ moduleId: '1', moduleName: 'Lead', isSelectAllChecked: false, view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  \n  { moduleId: '2', moduleName: 'Distribution Network', isSelectAllChecked: false, view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  \n  { moduleId: '3',moduleName: 'Task', isSelectAllChecked: false, view: false,  moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  \n  { moduleId: '4', moduleName: 'Order', isSelectAllChecked: false, view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  \n  \n  { moduleId: '5', moduleName: 'Travel Plan', isSelectAllChecked: false, view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  \n  { moduleId: '6', moduleName: 'Expense', isSelectAllChecked: false, view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  \n  { moduleId: '7', moduleName: 'Customer Concern', isSelectAllChecked: false, view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  \n  \n  { moduleId: '8', moduleName: 'DVR', isSelectAllChecked: false, view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  \n  { moduleId: '9', moduleName: 'Followup', isSelectAllChecked: false, view: false, moduleRights: [ \n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  { moduleId: '11', moduleName: 'Sales Leave', view: false, moduleRights: [ \n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  { moduleId: '12', moduleName: 'Pop & Gift Order', view: false, moduleRights: [ \n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  { moduleId: '13', moduleName: 'Schemes', view: false, moduleRights: [ \n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  { moduleId: '14', moduleName: 'Vendors', view: false, moduleRights: [ \n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n  },\n  { moduleId: '23', moduleName: 'Purchase Order', view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n}\n];\n\nmasterArray = [{ moduleId: '16', moduleName: 'Product', view: false, moduleRights: [\n  {name: 'Add', checked: false},\n  {name: 'Edit', checked: false},\n  {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '17', moduleName: 'User', view: false, moduleRights: [\n  {name: 'Add', checked: false},\n  {name: 'Edit', checked: false},\n  {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '18',moduleName: 'Territories', view: false,  moduleRights: [\n  {name: 'Add', checked: false},\n  {name: 'Edit', checked: false},\n  {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '19', moduleName: 'Marketing', view: false, moduleRights: [\n  {name: 'Add', checked: false},\n  {name: 'Edit', checked: false},\n  {name: 'Delete', checked: false}]\n},\n\n\n{ moduleId: '20', moduleName: 'Leaves & Holiday', view: false, moduleRights: [\n  {name: 'Add', checked: false},\n  {name: 'Edit', checked: false},\n  {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '21', moduleName: 'Announcement', view: false, moduleRights: [\n  {name: 'Add', checked: false},\n  {name: 'Edit', checked: false},\n  {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '22', moduleName: 'Allowance', view: false, moduleRights: [\n  {name: 'Add', checked: false},\n  {name: 'Edit', checked: false},\n  {name: 'Delete', checked: false}]\n}\n];\n\n\ndesignationData = [\n  \n  { designationName: 'Vice President', designation: 1},\n  { designationName: 'Deputy General Manager', designation: 2},\n  { designationName: 'General Manager', designation: 3},\n  { designationName: 'Assistant General Manager', designation: 4},\n  { designationName: 'Sr Manager', designation: 5},\n  { designationName: 'Manager', designation: 6},\n  { designationName: 'Deputy Manager', designation: 7},\n  { designationName: 'Sr Executive', designation: 8},\n  { designationName: 'Executive', designation: 9},\n  { designationName: 'Assistant Manager', designation: 10},\n  { designationName: 'Assistant', designation: 11},\n  { designationName: 'Trainee', designation: 12},\n  { designationName: 'Others', designation: 13}\n];\n\n\n\nconstructor(public toast:SnackBarOverview,public user:sessionStorage,public db:ConstantService,public router:Router, public route:ActivatedRoute, public dialog: MatDialog) {\n  this.route.params.subscribe(params=>{\n    this.userdata=this.user['user']['data'];\n    this.role=this.userdata['role'];\n    this.userId=this.userdata['userId'];\n    console.log(params);\n    this.id = params.id;\n    console.log(this.id);\n    this.systemuserdetail(); \n  });\n  \n}\n\nngOnInit() {\n}\n\nsetStep(index: number) {\n  this.step = index;\n}\n\nnextStep() {\n  this.step++;\n}\n\nprevStep() {\n  this.step--;\n}\n\nselectAllHandler(event) \n{\n    if(event.checked)\n    {\n        for (let index = 0; index< this.masterArray.length; index++)\n        {\n            this.masterArray[index].view=true;\n        }\n    }\n    else\n    {\n        for (let index = 0; index< this.masterArray.length; index++)\n        {\n            this.masterArray[index].view=false;\n        }\n    }\n    \n}\n\nsystemuserdetail() {\n  this.loader=true;\n  this.db.fileData('','user/detail/'+this.id).subscribe((response)=>{\n    console.log(response);\n    this.system_detail = response;\n    this.loader=false;\n    this.systemdata=this.system_detail.data;\n    \n    \n    for (let index = 0; index < this.designationData.length; index++) {\n      \n      \n      if(this.designationData[index].designation == this.systemdata['designation']) {\n        this.systemdata.designationName = this.designationData[index].designationName;\n      }\n      \n    }\n    this.rolelist(); \n    \n    this.db.fileData('', 'admin/access/' + this.id).subscribe( ( responseData ) => {\n      \n      console.log(responseData);\n      \n      this.dbModuleData = responseData['data'];\n      this.moduleAssignedEdit = false;\n      \n    }, error => {\n      console.log(error);\n    });\n    \n  },error=>{\n    console.log(error);\n  })\n}\n\n\neditModulesHandler() {\n  \n  \n  for (let index = 0; index < this.moduleData.length; index++) {\n    \n    \n    const indexExist = this.dbModuleData.moduleAccesses.findIndex(row=> row.moduleId == this.moduleData[index].moduleId && row.show);\n    \n    if(indexExist != -1) {\n      \n      this.moduleData[index].view = this.dbModuleData.moduleAccesses[indexExist].show;\n      this.moduleData[index].moduleRights[0]['checked'] = this.dbModuleData.moduleAccesses[indexExist].add;\n      \n      this.moduleData[index].moduleRights[1]['checked'] = this.dbModuleData.moduleAccesses[indexExist].edit;\n      \n      this.moduleData[index].moduleRights[2]['checked'] = this.dbModuleData.moduleAccesses[indexExist].delete;\n      \n      if(this.dbModuleData.moduleAccesses[indexExist].add && this.dbModuleData.moduleAccesses[indexExist].edit && this.dbModuleData.moduleAccesses[indexExist].delete) {\n        \n        this.moduleData[index]['isSelectAllChecked'] = true;\n      }\n      \n    }\n  }\n\n  for (let index = 0; index < this.masterArray.length; index++) {\n    \n    \n    const indexExist = this.dbModuleData.moduleAccesses.findIndex(row=> row.moduleId == this.masterArray[index].moduleId && row.show);\n    \n    if(indexExist != -1) {\n      \n      this.masterArray[index].view = this.dbModuleData.moduleAccesses[indexExist].show;\n      this.masterArray[index].moduleRights[0]['checked'] = this.dbModuleData.moduleAccesses[indexExist].add;\n      \n      this.masterArray[index].moduleRights[1]['checked'] = this.dbModuleData.moduleAccesses[indexExist].edit;\n      \n      this.masterArray[index].moduleRights[2]['checked'] = this.dbModuleData.moduleAccesses[indexExist].delete;\n      \n      if(this.dbModuleData.moduleAccesses[indexExist].add && this.dbModuleData.moduleAccesses[indexExist].edit && this.dbModuleData.moduleAccesses[indexExist].delete) {\n        \n        this.masterArray[index]['isSelectAllChecked'] = true;\n      }\n      \n    }\n  }\n  \n  console.log(this.moduleData);\n  \n  this.moduleAssignedEdit = true;\n  this.isModuleSelected = true;\n}\n\n\nsaveAccessHandler() {\n  \n  const moduleAccesses = [];\n  \n  for (let index = 0; index < this.moduleData.length; index++) {\n    \n    if(this.moduleData[index].view) {\n      \n      if(!this.moduleData[index].moduleRights[0].checked) {\n        this.moduleData[index].moduleRights[0].checked = false;\n      }\n      \n      if(!this.moduleData[index].moduleRights[1].checked) {\n        this.moduleData[index].moduleRights[1].checked = false;\n      }\n      \n      if(!this.moduleData[index].moduleRights[2].checked) {\n        this.moduleData[index].moduleRights[2].checked = false;\n      }\n      \n      moduleAccesses.push({\n        'moduleId': this.moduleData[index].moduleId,\n        'module': this.moduleData[index].moduleName,\n        'show': true,\n        'add': this.moduleData[index].moduleRights[0].checked,\n        'edit': this.moduleData[index].moduleRights[1].checked,\n        'delete': this.moduleData[index].moduleRights[2].checked,\n      });\n    }\n  }\n\n  for (let index = 0; index < this.masterArray.length; index++) {\n    \n    if(this.masterArray[index].view) {\n      \n      if(!this.masterArray[index].moduleRights[0].checked) {\n        this.masterArray[index].moduleRights[0].checked = false;\n      }\n      \n      if(!this.masterArray[index].moduleRights[1].checked) {\n        this.masterArray[index].moduleRights[1].checked = false;\n      }\n      \n      if(!this.masterArray[index].moduleRights[2].checked) {\n        this.masterArray[index].moduleRights[2].checked = false;\n      }\n      \n      moduleAccesses.push({\n        'moduleId': this.masterArray[index].moduleId,\n        'module': this.masterArray[index].moduleName,\n        'show': true,\n        'add': this.masterArray[index].moduleRights[0].checked,\n        'edit': this.masterArray[index].moduleRights[1].checked,\n        'delete': this.masterArray[index].moduleRights[2].checked,\n      });\n    }\n  }\n  \n  console.log(moduleAccesses);\n  \n  \n  if(moduleAccesses.length == 0) {\n    \n    this.isModuleSelected = false;\n    return false;\n    \n  } else {\n    \n    this.isModuleSelected = true;;\n  }\n  \n  console.log(moduleAccesses);\n  \n  const accessData = {};\n  \n  accessData['userId'] = this.systemdata.userId;\n  accessData['moduleAccesses'] = moduleAccesses;\n  \n  this.loader = true;\n  this.db.fetchData(accessData,'admin/saveaccess').subscribe((responseData)=>{\n    \n    console.log(responseData);\n    this.loader=false;\n    this.toast.openSucess('User Updated successfully','');\n    this.systemuserdetail();\n  });\n}\n\n\nrolelist(){\n  this.db.fileData('','usertype/list').subscribe((response)=>{\n    console.log(response);\n    this.rolelists=response['data'];\n    let filterrolesystem= this.rolelists.filter(x => x.userTypeId==1);\n    this.rolelistsystem1=filterrolesystem[0].roles;\n    let filterrolesalesdetail= this.rolelistsystem1.filter(x => x.roleId==this.systemdata.role);\n    this.systemdata.role_name=filterrolesalesdetail[0].roleName;\n    console.log(this.systemdata);\n  });\n}\n\n// selectAllHandler(index) {\n  \n//   console.log(this.moduleData[index]);\n//   console.log(index);\n  \n//   for (let index1 = 0; index1 < this.moduleData[index]['moduleRights'].length; index1++) {\n    \n//     this.moduleData[index]['moduleRights'][index1]['checked'] = this.moduleData[index]['isSelectAllChecked'];\n//   }\n// }\n\n\nopenDialog(check1) {\n  const dialogRef = this.dialog.open(SystemModalComponent,{ data: this.systemdata});\n  this.systemdata.type=check1;\n  console.log( this.systemdata.type);\n  dialogRef.afterClosed().subscribe(result => {\n    console.log(result);\n  });\n}\n\n\nopenEmail(check) {\n  this.systemdata.type=check;\n  console.log(check);\n  const dialogRef = this.dialog.open(SystemModalComponent,{ data:this.systemdata});\n  \n  dialogRef.afterClosed().subscribe(result => {\n  });\n}\ntoggleterritory(key,action)\n{    \n  if(action == 'open')\n  { this.type=\"password\"; \n  this.systemdata.active = true;\n}\nif(action == 'close')\n{\n  this.type=\"text\"; \n  this.systemdata.active = false; \n}\n}\nisactive(isActive){\n  if(isActive==true)\n  {\n    this.systemdata.isActive=true;\n    console.log(this.systemdata);\n  }\n  if(isActive==false)\n  {\n    this.systemdata.isActive=false;\n    console.log(this.systemdata);\n  }\n  console.log(isActive);\n  this.db.fetchData({\n    \"userId\": this.systemdata.userId,\n    \"userName\":this.systemdata.userName ,\n    \"password\": \"xyz\",\n    \"email\": this.systemdata.email,\n    \"mobile\":this.systemdata.mobile,\n    \"landline\": \"string\",\n    \"userType\": this.systemdata.userType,\n    \"role\": this.systemdata.role,\n    \"street\": this.systemdata.street,\n    \"state\": this.systemdata.state,\n    \"district\": \"string\",\n    \"city\": this.systemdata.city,\n    \"country\": \"string\",\n    \"pin\": this.systemdata.pin,\n    \"targetType\": this.systemdata.targetType,\n    \"duration\": this.systemdata.duration,\n    \"amount\": this.systemdata.amount,\n    \"userTerritories\": [\n      \n    ],\n    \"userSegments\": [\n      \n    ],\n    \"token\": \"string\",\n    \"isActive\": this.systemdata.isActive,\n    \"createBy\": 0,\n    \"createdOn\": \"2019-02-11T04:19:25.435Z\",\n    \"modifiedBy\": 0,\n    \"modifiedOn\": \"2019-02-11T04:19:25.435Z\",\n    \"documents\": [\n      \n    ]\n  },'user/update').subscribe((response)=>{\n    console.log(response);\n    this.message=response['message'];\n    console.log(this.message);\n    if(this.message==\"User updated successfully\")\n    {\n      this.toast.openSucess('User Updated successfully','');\n    }\n    else\n    {\n      this.toast.openError('Something Went Wrong Please Try Again!!','');\n    }\n  });\n  \n}\nupdatepassword(){\n  console.log('pass');\n  this.db.fetchData({\"userId\": this.id,\"password\":this.account_form.password},'account/changepassword')\n  .subscribe((response)=>{ console.log(response)\n    this.message=response['message'];\n    console.log(this.message);\n    if(this.message==\"Your password has been changed successfully!\")\n    {\n      this.toast.openSucess('Your password has been changed successfully!','');\n    }\n    else\n    {\n      this.toast.openError('Something Went Wrong Please Try Again!!','');\n    }\n  });\n}\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/user.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text w250\\\">\\n        <h2>Users</h2>\\n        <p>Total User {{users.length}}</p>\\n      </div>\\n    </div>\\n    <div  *ngIf=\\\"filter.name || filter.role || filter.mobileno ||filter.email\\\" class=\\\"filter-container left-auto\\\">\\n      <div (click)=\\\"clearfilter()\\\" class=\\\"filter-btn\\\">\\n        <button mat-button >CLEAR FILTER</button>\\n      </div>\\n    </div>\\n    <div class=\\\"tabs left-auto\\\">\\n      <ul>\\n        <li><a routerLink=\\\"/sale-user-list\\\" routerLinkActive=\\\"active\\\">SALES USERS</a></li>\\n        <li><a routerLink=\\\"/system-user-list\\\" routerLinkActive=\\\"active\\\">SYSTEM USERS</a></li>\\n      </ul>\\n    </div>\\n    \\n  </div>\\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n            <div class=\\\"table-head\\\">\\n              <table>\\n                <tr>\\n                  <th class=\\\"w110\\\">Date</th>\\n                  <th class=\\\"w170\\\">Role</th>\\n                  <th class=\\\"w230\\\">Name</th>\\n                  <th class=\\\"w130\\\">Mobile</th>\\n                  <th>Email</th>\\n                  <th class=\\\"w200\\\">Account Status</th>\\n                  <!-- <th class=\\\"w60\\\">&nbsp;</th> -->\\n                </tr>\\n              </table>\\n            </div>\\n            <div class=\\\"table-head bdrt\\\">\\n              <form>\\n                <table>\\n                  <tr>\\n                    <th class=\\\"w110\\\">\\n                    </th>\\n                    <th class=\\\"w170\\\">\\n                      \\n                      <div class=\\\"th-search\\\">\\n                        <select #role=\\\"ngModel\\\" name=\\\"role\\\" [(ngModel)]=\\\"filter.role\\\" (change)=\\\"userList()\\\">\\n                          <option value=\\\"\\\" selected>Select</option>\\n                          <option value=\\\"{{list.roleId}}\\\" *ngFor=\\\"let list of rolelistsystem1\\\">{{list.roleName}}</option>\\n                        </select>\\n                      </div>\\n                    </th>\\n                    \\n                    <th class=\\\"w230\\\" style=\\\"padding: 20px 10px;\\\">\\n                      <div class=\\\"th-search\\\">\\n                        <input type=\\\"text\\\"  (keyup)=\\\"userList()\\\" name=\\\"name\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.name\\\" placeholder=\\\"Search....\\\">\\n                        <!-- <i class=\\\"material-icons search-icon\\\">search</i> -->\\n                      </div>\\n                    </th>\\n                    <th class=\\\"w130\\\"  style=\\\"padding: 20px 10px;\\\">\\n                      <div class=\\\"th-search\\\">\\n                        <input type=\\\"text\\\"  (keyup)=\\\"userList()\\\" name=\\\"mobileno\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.mobileno\\\" placeholder=\\\"Search....\\\">\\n                        <!-- <i class=\\\"material-icons search-icon\\\">search</i> -->\\n                      </div>\\n                      <th  style=\\\"padding: 20px 10px;\\\">\\n                        <div class=\\\"th-search\\\">\\n                          <input type=\\\"text\\\"  (keyup)=\\\"userList()\\\" name=\\\"email\\\" #companyname=\\\"ngModel\\\" [(ngModel)]=\\\"filter.email\\\" placeholder=\\\"Search....\\\">\\n                          <!-- <i class=\\\"material-icons search-icon\\\">search</i> -->\\n                        </div>\\n                      </th>\\n                      <!-- <th></th> -->\\n                      <th class=\\\"w200\\\"></th>\\n                    </tr>\\n                  </table>\\n                </form>\\n              </div>\\n            </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content\\\">\\n                  <table>\\n                    <tr  *ngFor=\\\"let systemuser of users;let i=index\\\">\\n                      <td class=\\\"w110\\\">{{systemuser.createdOn|date:'d MMM y'}}</td>\\n                      <td class=\\\"w170\\\">{{systemuser.role_name}}</td>\\n                      <td class=\\\"w230\\\"><a class=\\\"link-btn\\\" routerLink=\\\"/system-user-detail/{{systemuser.userId}}\\\" routerLinkActive=\\\"active\\\" mat-button>{{systemuser.userName}}</a></td>\\n                      <td class=\\\"w130\\\">{{systemuser.mobile}}</td>\\n                      <td><p>{{systemuser.email}}</p></td>\\n                      <td class=\\\"w200\\\">\\n                      \\n\\n                            <mat-slide-toggle class=\\\"right-toggle\\\" [checked]=\\\"systemuser.isActive\\\"  (change)=\\\"deleteUser(systemuser.userId, $event)\\\" ></mat-slide-toggle>\\n                          <!-- <a mat-button class=\\\"view\\\" (click)=\\\"detailPlan(list.travelPlanID)\\\"><i class=\\\"material-icons\\\">remove_red_eye</i> View</a> -->\\n                          <!-- <button mat-button class=\\\"delete\\\" (click)=\\\"deleteUser(systemuser.userId)\\\"><i class=\\\"material-icons\\\">delete_sweep</i> Delete</button> -->\\n                      </td>\\n                      <!-- <td class=\\\"w230\\\">\\n                        <div class=\\\"td-input\\\" >\\n                          <p>{{systemuser.password}}</p> -->\\n                          <!-- <input type=\\\"{{systemuser.active? 'password' : 'text'}}\\\"  placeholder=\\\"\\\" [(ngModel)]=\\\"systemuser.password\\\">\\n                            [ngClass]=\\\"{'active':systemuser.active==true}\\\"\\n                            <i class=\\\"material-icons password show-pass\\\" (click)=\\\"toggleterritory(systemuser.active,'open',i)\\\" >visibility</i>\\n                            <i class=\\\"material-icons password show-hide\\\" (click)=\\\"toggleterritory(systemuser.active,'close',i)\\\">visibility_off</i> -->\\n                            <!-- </div>\\n                            </td> -->\\n                            <!-- <td class=\\\"w60\\\">\\n                              <mat-slide-toggle class=\\\"switch-toggle\\\" color=\\\"warn\\\" [(ngModel)]='systemuser.isActive' (change)=\\\"isactive(systemuser.isActive,i)\\\"></mat-slide-toggle>\\n                            </td> -->\\n                          </tr>\\n                        </table>\\n                      </div>\\n                    </div>\\n                    \\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"div\\\" class=\\\"data-not-available\\\" >\\n              <div class=\\\"outer\\\">\\n                <div class=\\\"iinear\\\">\\n                  <div class=\\\"figure\\\" matRipple>\\n                    <div class=\\\"header\\\">\\n                      <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                    </div>\\n                    <div class=\\\"description\\\">\\n  \\n                      <div class=\\\"img\\\">\\n                          <i class=\\\"material-icons\\\">error_outline</i>\\n                      </div>\\n                        \\n                      <div class=\\\"cs-heading\\\">\\n                        <h2>Data Not Available</h2>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"fixed-multibtn-botm\\\">\\n            <ul>\\n              <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/user-add\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n            </ul>\\n          </div>\\n        </div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\n\n@Component({\n  selector: 'app-system-user-list',\n  templateUrl: './system-user-list.component.html',\n  animations: [slideToTop()]\n})\nexport class SystemUserListComponent implements OnInit {\n  userlist:any=[];\n  users:any=[];\n  active:any = {};\n  type:any;\n  rolelists:any=[];\n  div:boolean=false;\n  rolelistsystem1:any=[];\n  loader:boolean;\n  message:any;\n  filter:any={};\n  constructor(public db:ConstantService, public router:Router,public toast: SnackBarOverview,public dialog:DialogComponent) { \n    this.userList();\n   \n}\n\n  ngOnInit() {\n   \n  }\n  clearfilter(){\n    this.filter={};\n    this.userList();\n  }\n  rolelist(){\n    this.loader=true;\n    this.db.fileData('','usertype/list').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.rolelists=response['data'];\n      let filterrolesystem= this.rolelists.filter(x => x.userTypeId==1);\n      this.rolelistsystem1=filterrolesystem[0].roles;\n      console.log(this.rolelistsystem1);\n      for(let i=0;i<this.users.length;i++){\n        let systemIndex=  this.rolelistsystem1.findIndex(x => x.roleId==this.users[i].role);\n        console.log(systemIndex);\n        if(systemIndex!=-1){\n        this.users[i].role_name=this.rolelistsystem1[systemIndex].roleName;\n        console.log(this.users[i].role_name);\n        }\n      }\n    });\n  }\n isactive(isActive,index){\n   if(isActive==true)\n   {\n     this.users[index].isActive=true;\n     console.log(this.users);\n   }\n   if(isActive==false)\n   {\n     this.users[index].isActive=false;\n     console.log(this.users);\n   }\n   console.log(isActive);\n   this.db.fetchData({\n    \"userId\": this.users[index].userId,\n    \"userName\":this.users[index].userName ,\n    \"password\": \"xyz\",\n    \"email\": this.users[index].email,\n    \"mobile\":this.users[index].mobile,\n    \"landline\": \"string\",\n    \"userType\": this.users[index].userType,\n    \"role\": this.users[index].role,\n    \"street\": this.users[index].street,\n    \"state\": this.users[index].state,\n    \"district\": \"string\",\n    \"city\": this.users[index].city,\n    \"country\": \"string\",\n    \"pin\": this.users[index].pin,\n    \"targetType\": this.users[index].targetType,\n    \"duration\": this.users[index].duration,\n    \"amount\": this.users[index].amount,\n    \"userTerritories\": [\n     \n    ],\n    \"userSegments\": [\n   \n    ],\n    \"token\": \"string\",\n    \"isActive\": this.users[index].isActive,\n    \"createBy\": 0,\n    \"createdOn\": \"2019-02-11T04:19:25.435Z\",\n    \"modifiedBy\": 0,\n    \"modifiedOn\": \"2019-02-11T04:19:25.435Z\",\n    \"documents\": [\n       \n    ]\n  },'user/update').subscribe((response)=>{\n     console.log(response);\n     this.message=response['message'];\n     console.log(this.message);\n     if(this.message==\"User updated successfully\")\n     {\n       this.toast.openSucess('User Updated successfully','');\n     }\n     else\n     {\n       this.toast.openError('Something Went Wrong Please Try Again!!','');\n     }\n   });\n  \n }\n  toggleterritory(key,action,index)\n  {    \n    if(action == 'open')\n    { this.type=\"password\"; \n      this.users[index].active = true;\n    }\n    if(action == 'close')\n    {\n      this.type=\"text\"; \n      this.users[index].active = false; \n    }\n  }\n\n  userList()\n  {\n    this.loader=true;\n\n    const selectedObject = {'userType': 1, 'currentPage': 1,\n    'pageSize': 200};\n\n    if(this.filter.name) {\n        selectedObject['userName'] = this.filter.name;\n    }\n\n    if(this.filter.mobileno) {\n      selectedObject['mobile'] = this.filter.mobileno;\n    }\n\n    if(this.filter.email) {\n       selectedObject['email'] = this.filter.email;\n    }\n\n    if(this.filter.role) {\n      selectedObject['role'] = this.filter.role;\n    }\n\n\n    this.db.fetchData(selectedObject, 'user/list').subscribe((response)=>{\n    console.log(response);\n    this.loader=false;\n    if(response['status']=='Success')\n    {\n     this.rolelist();\n     this.userlist = response;\n     this.users=this.userlist.data;\n    } else {\n     this.div=true;\n      this.userlist = [];\n      this.users = [];\n    }\n    // this.userlist = response;\n    // this.users=this.userlist.data\n    // console.log(this.users);\n    // this.rolelist();  \n    // console.log(this.users);\n  }); \n  }\n\n  deleteUser(id, event)\n  {\n        this.loader = true;\n        this.db.fileData(\"\",\"user/delete/\"+id+'/'+event.checked).subscribe((result)=>{\n          \n              console.log(result);\n\n              this.loader = false;\n\n              this.toast.openSucess('Account Updated Successfully!','');\n              \n        })\n  }\n\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/profile.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>User</h2>\\n        <p>Add New User</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"container-outer\\\">\\n    \\n    <!-- <app-master-tab></app-master-tab> -->\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && onSubmit() \\\" novalidate>\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>USER TYPE</h2>\\n                <span class=\\\"required\\\">Indicates Required Fields ( <sup>*</sup> )</span>\\n              </div>\\n              \\n              \\n              <div class=\\\"row mb0\\\">\\n                \\n                <div class=\\\"col s3 from-fields pl0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select placeholder=\\\"Role\\\" name=\\\"role\\\" id=\\\"role\\\" [(ngModel)]=\\\"user_type.role\\\"  #role=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && role.invalid }\\\" required>\\n                        <mat-option *ngFor='let role of rolelistsystem1' (click)=\\\"roles(role.userType);setplaceholder()\\\" value=\\\"{{role.roleId}}\\\">{{role.roleName}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && role.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"role.errors.required\\\">Role is required</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n                \\n                <div *ngIf=\\\"user_type.role\\\" class=\\\"col s3 from-fields pl0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select placeholder=\\\"Designation\\\" name=\\\"designation\\\" id=\\\"designation\\\" [(ngModel)]=\\\"user_type.designation\\\"  #designation=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && designation.invalid }\\\" required>\\n                        <mat-option (click)=\\\"filterDesignaton(user_type.designation)\\\" *ngFor='let list of desginationList' [value]=\\\"list.order\\\">{{list.designationName}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <mat-error *ngIf=\\\"f.submitted && designation.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"designation.errors.required\\\">Designation is required</mat-error>\\n                    </mat-error>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"user_type.type==1\\\">\\n                <div class=\\\"col s3 from-fields pl0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select placeholder=\\\"Senior Designation\\\" name=\\\"role\\\" >\\n                        <mat-option (click)=\\\"seniorUserList(role.order)\\\" *ngFor='let role of seniorUserDesignation' value=\\\"{{role.order}}\\\">{{role.designationName}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"col s3 from-fields pl0\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select placeholder=\\\"Select Senior User\\\" name=\\\"leaveApprover\\\" #leaveApprover=\\\"ngModel\\\" [(ngModel)]=\\\"user_type.leaveApprover\\\">\\n                        <mat-option *ngFor='let user of userList' value=\\\"{{user.userId}}\\\">{{user.userName}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"col s12\\\" *ngIf=\\\"user_type.type ==2\\\">\\n            <div class=\\\"sprate-box mt15 pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>BASIC INFORMATION</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row mb0\\\">\\n                  \\n                  <div class=\\\"col s3 pl0\\\">\\n                    <div class=\\\"control-field\\\" >\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Name \\\" name=\\\"username\\\" [(ngModel)]=\\\"sales_data.username\\\" #username=\\\"ngModel\\\" id=\\\"username\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && username.invalid }\\\" required>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && username.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"username.errors.required\\\">Name is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s3 \\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput type=\\\"text\\\"  maxlength=\\\"10\\\" type=text  placeholder=\\\"Mobile No.\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"sales_data.mobile\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" #mobile=\\\"ngModel\\\" id=\\\"mobile\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobile.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\" required>\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"f.submitted && mobile.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"mobile.errors.required || mobile.errors.invalid\\\">Mobile is invalid</mat-error>\\n                        <mat-error *ngIf=\\\"mobile.errors.minlength || mobile.errors.maxlength\\\">Mobile must be 10 Digit</mat-error>\\n                      </mat-error>\\n                      \\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s3 pr0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Email-ID\\\" name=\\\"email\\\" [(ngModel)]=\\\"sales_data.email\\\" id=\\\"email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>\\n                      </mat-form-field>\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n                        Please Enter Valid Email....\\n                      </div>\\n                      <mat-error *ngIf=\\\"f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"email.errors.required\\\">Email is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s3 pr0\\\">\\n                    \\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Yearly Target Amount\\\" name=\\\"target\\\" [(ngModel)]=\\\"sales_data.target\\\" id=\\\"target\\\" #target=\\\"ngModel\\\"  (keypress)=\\\"MobileNumber($event)\\\"  maxlength=\\\"10\\\" [ngClass]=\\\"{ 'is-invalid': target.invalid }\\\">\\n                      </mat-form-field>\\n                      \\n                      <mat-error *ngIf=\\\"target.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"target.errors.required\\\">Target is required</mat-error>\\n                        <mat-error *ngIf=\\\"target.errors.maxlength\\\">Maximum target length is 10 Digit !</mat-error>\\n                      </mat-error>\\n                      \\n                    </div>\\n                  </div>\\n                  \\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box mt15 pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>ADDRESS INFORMATION</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                \\n                <div class=\\\"row mb0\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\" >\\n                        <textarea matInput placeholder=\\\"Street\\\" name=\\\"street\\\" id=\\\"street\\\" [(ngModel)]=\\\"sales_data.street\\\" class=\\\"h110\\\" #street=\\\"ngModel\\\" ></textarea>\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s6 pr0\\\">\\n                    <div class=\\\"row mb0\\\">\\n                      <div class=\\\"col s6 \\\" >\\n                        <div class=\\\"control-field\\\">\\n                          <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : state.invalid } \\\" >\\n                            <mat-form-field class=\\\" cs-input infix-bodr8 select-input\\\">\\n                              <input matInput placeholder=\\\"State\\\" [matAutocomplete]=\\\"state\\\" (input)=\\\"state_array_filter(sales_data.state)\\\" name=\\\"state\\\" id=\\\"state\\\" #state=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.state\\\" required>\\n                              <mat-autocomplete #state=\\\"matAutocomplete\\\">\\n                                <mat-option (click)=\\\"get_district()\\\" *ngFor='let state of tmpstateList' value=\\\"{{state}}\\\">\\n                                  <small>{{state}}</small>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                          <mat-error *ngIf=\\\"f.submitted && state.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"state.errors.required\\\">State is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : district.invalid } \\\" >\\n                            <mat-form-field class=\\\"example-full-width cs-input infix-bodr8 select-input\\\">\\n                              <input matInput placeholder=\\\"District\\\" [matAutocomplete]=\\\"district\\\" (input)=\\\"district_array_filter(sales_data.district)\\\" name=\\\"district\\\" id=\\\"district\\\" #district=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.district\\\" required>\\n                              <mat-autocomplete #district=\\\"matAutocomplete\\\">\\n                                <mat-option  (click)=\\\"get_city()\\\"  *ngFor='let district of district1' value=\\\"{{district.districtName}}\\\">\\n                                  <small>{{district.districtName}}</small>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                          <mat-error *ngIf=\\\"f.submitted && district.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"district.errors.required\\\"> District is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 \\\">\\n                        <div class=\\\"control-field\\\">\\n                          \\n                          <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : city.invalid } \\\" >\\n                            <mat-form-field class=\\\" cs-input  infix-bodr8 select-input\\\">\\n                              <input matInput placeholder=\\\"City\\\" [matAutocomplete]=\\\"city\\\" (input)=\\\"city_array_filter(sales_data.city)\\\" name=\\\"city\\\" id=\\\"city\\\" #city=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.city\\\" required>\\n                              <mat-autocomplete #city=\\\"matAutocomplete\\\">\\n                                <mat-option  (click)=\\\" get_pincode(city.stateMasterId)\\\" *ngFor='let city of cities' value=\\\"{{city.cityName}}\\\">\\n                                  <small>{{city.cityName}}</small>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                          <mat-error *ngIf=\\\"f.submitted && city.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"city.errors.required\\\"> City is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 pr0\\\" >\\n                        <div class=\\\"control-field\\\">\\n                          <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : pin.invalid } \\\" >\\n                            <mat-form-field class=\\\" cs-input infix-bodr8 select-input\\\">\\n                              <input matInput placeholder=\\\"pin\\\" [matAutocomplete]=\\\"pin\\\" (keypress)=\\\"MobileNumber($event)\\\" (input)=\\\"pin_array_filter(sales_data.pin)\\\" minlength=\\\"6\\\" maxlength=\\\"6\\\"  name=\\\"pin\\\"  id=\\\"pin\\\" #pin=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.pin\\\" required>\\n                              <mat-autocomplete #pin=\\\"matAutocomplete\\\">\\n                                <mat-option  *ngFor='let pin of areas' value=\\\"{{pin}}\\\">\\n                                  <small>{{pin}}</small>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                          <mat-error *ngIf=\\\"f.submitted && pin.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"pin.errors.required\\\"> Pincode is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box mt15 pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>OFFICIAL ADDRESS INFORMATION</h2>\\n              </div>\\n              \\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row mb0\\\">\\n                  <div class=\\\"col s6 pl0\\\">\\n                    <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\" >\\n                        <textarea matInput placeholder=\\\"Street\\\" name=\\\"streetOffice\\\" id=\\\"streetOffice\\\" [(ngModel)]=\\\"sales_data.streetOffice\\\" class=\\\"h175\\\" #streetOffice=\\\"ngModel\\\" ></textarea>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && streetOffice.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error *ngIf=\\\"streetOffice.errors.required\\\"> Street is required</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col s6 pr0\\\">\\n                    <div class=\\\"row mb0\\\">\\n                      <div class=\\\"col s6\\\" >\\n                        <div class=\\\"control-field\\\">\\n                          <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : statef.invalid } \\\" >\\n                            <mat-form-field class=\\\" cs-input infix-bodr8 select-input\\\">\\n                              <input matInput placeholder=\\\"State\\\" [matAutocomplete]=\\\"statef\\\" (input)=\\\"state_array_filter(sales_data.statef)\\\" name=\\\"statef\\\" id=\\\"statef\\\" #statef=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.statef\\\" required>\\n                              <mat-autocomplete #statef=\\\"matAutocomplete\\\">\\n                                <mat-option (click)=\\\"get_districtOffice()\\\" *ngFor='let statef of tmpstateList' value=\\\"{{statef}}\\\">\\n                                  <small>{{statef}}</small>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                          <mat-error *ngIf=\\\"f.submitted && statef.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"statef.errors.required\\\">State is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 pr0\\\"> \\n                        <div class=\\\"control-field\\\">\\n                          <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : districtOffice.invalid } \\\" >\\n                            <mat-form-field class=\\\"cs-input infix-bodr8 select-input\\\">\\n                              <input matInput placeholder=\\\"District\\\" [matAutocomplete]=\\\"districtOffice\\\" (input)=\\\"officedistrict_array_filter(sales_data.districtOffice)\\\" name=\\\"districtOffice\\\" id=\\\"districtOffice\\\"  #districtOffice=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.districtOffice\\\" required>\\n                              <mat-autocomplete #districtOffice=\\\"matAutocomplete\\\">\\n                                <mat-option  (click)=\\\"get_cityOffice()\\\"  *ngFor='let districtf of districtOffice1' value=\\\"{{districtf.districtName}}\\\">\\n                                  <small>{{districtf.districtName}}</small>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                          <mat-error *ngIf=\\\"f.submitted && districtOffice.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"districtOffice.errors.required\\\"> District is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : cityOffice.invalid } \\\" >\\n                            <mat-form-field class=\\\"cs-input infix-bodr8 select-input\\\">\\n                              <input matInput placeholder=\\\"City\\\" [matAutocomplete]=\\\"cityOffice\\\" (input)=\\\"officecity_array_filter(sales_data.cityOffice)\\\" name=\\\"cityOffice\\\" id=\\\"cityOffice\\\" #cityOffice=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.cityOffice\\\" required>\\n                              <mat-autocomplete #cityOffice=\\\"matAutocomplete\\\">\\n                                <mat-option  (click)=\\\" get_pincodeOffice(cityf.stateMasterId)\\\" *ngFor='let cityf of citiesOffice' value=\\\"{{cityf.cityName}}\\\">\\n                                  <small>{{cityf.cityName}}</small>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                          <mat-error *ngIf=\\\"f.submitted && cityOffice.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"cityOffice.errors.required\\\"> City is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6 pr0\\\" >\\n                        <div class=\\\"control-field\\\">\\n                          <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : pinOffice.invalid } \\\" >\\n                            <mat-form-field class=\\\" cs-input infix-bodr8 select-input\\\">\\n                              <input matInput placeholder=\\\"Pin\\\" minlength=\\\"6\\\" maxlength=\\\"6\\\"   [matAutocomplete]=\\\"pinOffice\\\" (input)=\\\"officepin_array_filter(sales_data.pinOffice)\\\" (keypress)=\\\"MobileNumber($event)\\\" name=\\\"pinOffice\\\" id=\\\"pinOffice\\\" #pinOffice=\\\"ngModel\\\" [(ngModel)]=\\\"sales_data.pinOffice\\\" required>\\n                              <mat-autocomplete #pinOffice=\\\"matAutocomplete\\\">\\n                                <mat-option  *ngFor='let pinf of areasOffice' value=\\\"{{pinf}}\\\">\\n                                  <small>{{pinf}}</small>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                          <mat-error *ngIf=\\\"f.submitted && pinOffice.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"pinOffice.errors.required\\\"> Pincode is required</mat-error>\\n                          </mat-error>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col s6\\\">\\n                        <div class=\\\"control-field\\\" >\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Landline\\\" name=\\\"landline\\\"  id=\\\"landline\\\" [(ngModel)]=\\\"sales_data.landline\\\" #landline=\\\"ngModel\\\"  minlength=\\\"10\\\" maxlength=\\\"13\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\">\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box mt15 pt0\\\">\\n              <div *ngIf=\\\"user_type.type == 2\\\" class=\\\"cs-heading\\\">\\n                <h2>CONCERN APPROVAL RIGHTS</h2>\\n              </div>\\n              <div *ngIf=\\\"user_type.type == 2\\\" class=\\\"from-fields\\\">\\n                <div class=\\\"row mb0\\\">\\n                  <div class=\\\"control-field col s4 pl0\\\">\\n                    <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                      <mat-select [(ngModel)]=\\\"sales_data.concernApprovalAccess\\\" name=\\\"concernApprovalAccess\\\" placeholder=\\\"Select Approval Right\\\">\\n                        <mat-option [value]=\\\"true\\\">Yes</mat-option>\\n                        <mat-option [value]=\\\"false\\\">No</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <!-- <mat-error *ngIf=\\\"f.submitted && role.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error *ngIf=\\\"role.errors.required\\\">Role is required</mat-error>\\n                    </mat-error> -->\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"sprate-box mt15 pt0\\\">\\n              <div *ngIf=\\\"(this.user_type.role > 7) && (this.user_type.role < 11 )\\\" class=\\\"cs-heading\\\">\\n                <h2>ASSIGN INFORMATION</h2>\\n              </div>\\n              <div  class=\\\"row mt15 mb0\\\">\\n                <div class=\\\"col s4 pl0\\\">\\n                  <div class=\\\"territory-info\\\">\\n                    <div class=\\\"head\\\" >\\n                      <h2>SEGMENT</h2>\\n                    </div>\\n                    <div class=\\\"cs-checkbox \\\">\\n                      <div class=\\\"checkbox-outer\\\">\\n                        <section class=\\\"checkbox-inner\\\" *ngFor='let segment of segmentlist' aria-required=\\\"true\\\">\\n                          <mat-checkbox class=\\\"check-list\\\" [(ngModel)]=\\\"segment.checked\\\" name=\\\"{{segment.text}}\\\" (change)=\\\"getSegmentRelatedData()\\\">{{segment.text}}</mat-checkbox>\\n                        </section>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <div *ngIf=\\\"(this.user_type.role < 9) && (this.user_type.role > 5 )\\\" class=\\\"col s4\\\">\\n                  \\n                  <div class=\\\"territory-info\\\">\\n                    \\n                    <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.junior==true}\\\">\\n                      <h2><span *ngIf=\\\"this.user_type.role==6\\\" >Select RSM</span>\\n                        <span *ngIf=\\\"this.user_type.role==7\\\" >Select ASM</span>\\n                        <span *ngIf=\\\"this.user_type.role==8\\\" >Select T. I.</span></h2>\\n                        <!-- <mat-checkbox class=\\\"fix-check\\\">&nbsp;</mat-checkbox> -->\\n                        <i class=\\\"material-icons search-icon\\\" (click)=\\\"toggleterritory('junior','open')\\\"    matRipple>search</i>\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"sales_data.juniorSearch\\\" name=\\\"juniorSearch\\\"  placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                        <i class=\\\"material-icons close-icon\\\"  (click)=\\\"sales_data.juniorSearch='';toggleterritory('junior','close')\\\" matRipple>clear</i>\\n                      </div>\\n                      \\n                      <div *ngIf=\\\"juniorList.length == 0\\\" class=\\\"not-data\\\">\\n                        <div class=\\\"inner-data\\\">\\n                          <p>No Data</p>\\n                        </div>\\n                      </div>\\n                      \\n                      \\n                      <div *ngIf=\\\"juniorList.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                        <div class=\\\"checkbox-outer\\\">\\n                          <section class=\\\"checkbox-inner\\\">\\n                            <mat-checkbox  *ngFor=\\\"let list of juniorList  | myfilter:{src: 'junior', search: sales_data.juniorSearch}; let i=index;\\\" class=\\\"check-list\\\" (change)=\\\"onUserAssignedHandler(list.userId, list.checked)\\\" value=\\\"{{list.userId}}\\\" [(ngModel)]=\\\"list.checked\\\"  name=\\\"{{list.userId}}\\\" >{{list.userName}}</mat-checkbox>\\n                          </section>\\n                        </div>\\n                      </div>\\n                      \\n                      \\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"(this.user_type.role >= 6) && (this.user_type.role < 11 )\\\" class=\\\"col s4\\\">\\n                    <div class=\\\"territory-info\\\">\\n                      <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.territory==true}\\\">\\n                        <h2>TERRITORIES INFO</h2>\\n                        <i class=\\\"material-icons search-icon right15\\\" (click)=\\\"toggleterritory('territory','open')\\\"  matRipple>search</i>\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"sales_data.territorySearch\\\"  name=\\\"territorySearch\\\" placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                        <i class=\\\"material-icons close-icon\\\" (click)=\\\"sales_data.territorySearch='';toggleterritory('territory','close')\\\" matRipple>clear</i>\\n                      </div>\\n                      \\n                      <div *ngIf=\\\"territoryList.length == 0\\\" class=\\\"not-data\\\">\\n                        <div class=\\\"inner-data\\\">\\n                          <p>No Data</p>\\n                        </div>\\n                      </div>\\n                      \\n                      <div *ngIf=\\\"territoryList.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                        \\n                        <div class=\\\"checkbox-outer\\\">\\n                          <section class=\\\"checkbox-inner\\\">\\n                            <ng-container  *ngFor=\\\"let territory of territoryList | myfilter:{src: 'territory', search: sales_data.territorySearch};let i=index;\\\"> \\n                              \\n                              <mat-checkbox class=\\\"check-list\\\"  (change)=\\\"getTerritoryNetwork(territory.territoryID,territory.check)\\\" value=\\\"{{territory.territoryName}}\\\"  [(ngModel)]=\\\"territory.check\\\"  [disabled]=\\\"territory.disabled\\\" name=\\\"{{territory.territoryName}}\\\" >{{territory.territoryName}} </mat-checkbox>\\n                              \\n                            </ng-container>\\n                          </section>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  \\n                  <div *ngIf=\\\"(this.user_type.role >= 7) && (this.user_type.role < 11 )\\\" class=\\\"col s4 pr0\\\">\\n                    \\n                    <div class=\\\"territory-info\\\">\\n                      <div class=\\\"head\\\" [ngClass]=\\\"{'active':active.network==true}\\\">\\n                        <h2>Distribution Network</h2>\\n                        <!-- <mat-checkbox class=\\\"fix-check\\\">&nbsp;</mat-checkbox> -->\\n                        <i class=\\\"material-icons search-icon right15\\\" (click)=\\\"toggleterritory('network','open')\\\"  matRipple>search</i>\\n                        <input type=\\\"text\\\"[(ngModel)]=\\\"sales_data.networkSearch\\\" name=\\\"networkSearch\\\"  placeholder=\\\"search...\\\" class=\\\"fix-search\\\">\\n                        <i class=\\\"material-icons close-icon\\\" (click)=\\\"sales_data.networkSearch='';toggleterritory('network','close')\\\" matRipple>clear</i>\\n                      </div>\\n                      \\n                      <div *ngIf=\\\"networkIdsdata.length == 0\\\" class=\\\"not-data\\\">\\n                        <div class=\\\"inner-data\\\">\\n                          <p>No Data</p>\\n                        </div>\\n                      </div>\\n                      \\n                      <div *ngIf=\\\"networkIdsdata.length > 0\\\" class=\\\"cs-checkbox\\\">\\n                        <div class=\\\"checkbox-outer\\\">\\n                          <section class=\\\"checkbox-inner\\\">\\n                            <mat-checkbox  *ngFor=\\\"let network of networkIdsdata | myfilter:{src: 'networkSearch', search: sales_data.networkSearch}; let i=index;\\\" class=\\\"check-list\\\" [disabled]=\\\"network.disabled\\\" value=\\\"{{network.networkId}}\\\" [(ngModel)]=\\\"network.checked\\\"  name=\\\"{{network.establishment}}\\\">{{network.establishment}}</mat-checkbox>\\n                          </section>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n            </div>\\n            \\n            <div class=\\\"col s12\\\" *ngIf=\\\"user_type.type == '1'\\\">\\n              <div class=\\\"sprate-box mt15 pt0\\\">\\n                <div class=\\\"cs-heading\\\">\\n                  <h2>BASIC INFORMATION</h2>\\n                </div>\\n                <div class=\\\"from-fields\\\">\\n                  <div class=\\\"row mb0\\\">\\n                    <div class=\\\"col s4 pl0\\\">\\n                      <div class=\\\"control-field\\\" >\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput placeholder=\\\"Name\\\" name=\\\"username\\\" id=\\\"username\\\" [(ngModel)]=\\\"system_data.username\\\"  #username=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && username.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <mat-error *ngIf=\\\"f.submitted && username.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"username.errors.required\\\">Name is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s4 \\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                          <input matInput type=\\\"text\\\"  maxlength=\\\"10\\\" type=text  placeholder=\\\"Mobile No.\\\" name=\\\"mobile\\\" id=\\\"mobile\\\" [(ngModel)]=\\\"system_data.mobile\\\" (keypress)=\\\"MobileNumber($event)\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" #mobile=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobile.invalid }\\\" required >\\n                        </mat-form-field>\\n                        \\n                        <mat-error *ngIf=\\\"f.submitted && mobile.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"mobile.errors.required || mobile.errors.invalid\\\">Mobile is invalid</mat-error>\\n                          <mat-error *ngIf=\\\"mobile.errors.minlength || mobile.errors.maxlength\\\">Mobile must be 10 Digit</mat-error>\\n                        </mat-error>\\n                        \\n                      </div>\\n                    </div>\\n                    \\n                    <div class=\\\"col s4 pr0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\" [ngClass]=\\\"{ 'has-error' : f.submitted }\\\">\\n                          <input matInput placeholder=\\\"Email-ID\\\" name=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"system_data.email\\\"  #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\"  pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!email.valid && email.touched\\\">\\n                          Please Enter Valid Email-ID.....\\n                        </div>\\n                        <mat-error *ngIf=\\\"f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"email.errors.required || email.errors.invalid\\\">Email is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                    </div>\\n                    \\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"sprate-box mt15 pt0\\\">\\n                <div class=\\\"cs-heading\\\">\\n                  <h2>ADDRESS INFORMATION</h2>\\n                </div>\\n                <div class=\\\"from-fields\\\">\\n                  \\n                  <div class=\\\"row mb0\\\">\\n                    <div class=\\\"col s6 pl0\\\">\\n                      <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\" >\\n                          <textarea matInput placeholder=\\\"Street\\\" name=\\\"street\\\" [(ngModel)]=\\\"system_data.street\\\" class=\\\"h110\\\" #street=\\\"ngModel\\\" ></textarea>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col s6 pr0\\\">\\n                      <div class=\\\"row mb0\\\">\\n                        <div class=\\\"col s6 \\\" >\\n                          <div class=\\\"control-field\\\">\\n                            <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : state.invalid } \\\" >\\n                              <mat-form-field class=\\\"cs-input infix-bodr8 select-input\\\">\\n                                <input matInput placeholder=\\\"State\\\" [matAutocomplete]=\\\"state\\\" (input)=\\\"state_array_filter(system_data.state)\\\" name=\\\"state\\\" id=\\\"state\\\" #state=\\\"ngModel\\\" [(ngModel)]=\\\"system_data.state\\\" required>\\n                                <mat-autocomplete #state=\\\"matAutocomplete\\\">\\n                                  <mat-option (click)=\\\"get_district()\\\" *ngFor='let state of tmpstateList' value=\\\"{{state}}\\\">\\n                                    <small>{{state}}</small>\\n                                  </mat-option>\\n                                </mat-autocomplete>\\n                              </mat-form-field>\\n                            </div>\\n                            <mat-error *ngIf=\\\"f.submitted && state.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"state.invalid\\\">State is required</mat-error>\\n                            </mat-error>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : district.invalid } \\\" >\\n                              <mat-form-field class=\\\"cs-input infix-bodr8 select-input\\\">\\n                                <input matInput placeholder=\\\"district\\\" [matAutocomplete]=\\\"district\\\" (input)=\\\"district_array_filter(system_data.district)\\\" name=\\\"district\\\" id=\\\"district\\\" #district=\\\"ngModel\\\" [(ngModel)]=\\\"system_data.district\\\" required>\\n                                <mat-autocomplete #district=\\\"matAutocomplete\\\">\\n                                  <mat-option  (click)=\\\"get_city()\\\"  *ngFor='let district of district1' value=\\\"{{district.districtName}}\\\">\\n                                    <small>{{district.districtName}}</small>\\n                                  </mat-option>\\n                                </mat-autocomplete>\\n                              </mat-form-field>\\n                            </div>\\n                            <mat-error *ngIf=\\\"f.submitted && district.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"district.errors.required\\\"> District is required</mat-error>\\n                            </mat-error>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s6\\\">\\n                          <div class=\\\"control-field\\\">\\n                            \\n                            <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : city.invalid } \\\" >\\n                              <mat-form-field class=\\\"cs-input infix-bodr8 select-input\\\">\\n                                <input matInput placeholder=\\\"City\\\" [matAutocomplete]=\\\"city\\\" (input)=\\\"city_array_filter(system_data.city)\\\" name=\\\"city\\\" id=\\\"city\\\" #city=\\\"ngModel\\\" [(ngModel)]=\\\"system_data.city\\\" required>\\n                                <mat-autocomplete #city=\\\"matAutocomplete\\\">\\n                                  <mat-option  (click)=\\\" get_pincode(city.stateMasterId)\\\" *ngFor='let city of cities' value=\\\"{{city.cityName}}\\\">\\n                                    <small>{{city.cityName}}</small>\\n                                  </mat-option>\\n                                </mat-autocomplete>\\n                              </mat-form-field>\\n                            </div>\\n                            <mat-error *ngIf=\\\"f.submitted && city.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"city.errors.required\\\"> City is required</mat-error>\\n                            </mat-error>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"col s6 pr0\\\">\\n                          <div class=\\\"control-field\\\">\\n                            <div class=\\\"control-field col-4\\\" [ngClass]=\\\"{'has-error' : pin.invalid } \\\" >\\n                              <mat-form-field class=\\\"cs-input infix-bodr8 select-input\\\">\\n                                <input matInput type=\\\"text\\\" (keypress)=\\\"MobileNumber($event)\\\" placeholder=\\\"pin\\\" [matAutocomplete]=\\\"pin\\\" (input)=\\\"pin_array_filter(system_data.pin)\\\"  (keypress)=\\\"MobileNumber($event)\\\" maxlength=\\\"6\\\" minlength=\\\"6\\\"  name=\\\"pin\\\" id=\\\"pin\\\" #pin=\\\"ngModel\\\" [(ngModel)]=\\\"system_data.pin\\\" required>\\n                                <mat-autocomplete #pin=\\\"matAutocomplete\\\">\\n                                  <mat-option  *ngFor='let pin of areas' value=\\\"{{pin}}\\\">\\n                                    <small>{{pin}}</small>\\n                                  </mat-option>\\n                                </mat-autocomplete>\\n                              </mat-form-field>\\n                            </div>\\n                            <mat-error *ngIf=\\\"f.submitted && pin.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"pin.errors.required\\\"> Pincode is required</mat-error>\\n                            </mat-error>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <p class=\\\"key-message\\\" *ngIf=\\\"f.submitted && user_type.type==1 && !isModuleSelected\\\">Atleast One Module Right Required!</p> \\n            \\n            <div *ngIf=\\\"user_type.type == 1\\\" class=\\\"row\\\">\\n              <div class=\\\"col s12\\\">\\n                <div class=\\\"sprate-box mt15 pt0\\\">\\n                  <div class=\\\"cs-heading\\\">\\n                    <h2>Modules Rights</h2>\\n                  </div>\\n                  \\n                  <div *ngIf=\\\"user_type.type ==1\\\" class=\\\"col s12\\\">\\n                    <div class=\\\"collaps flat-collaps mt15\\\">\\n                      <div class=\\\"collaps-area\\\">\\n                        <mat-accordion>\\n                          <mat-expansion-panel  [expanded]=\\\"step === index\\\" (opened)=\\\"setStep(0)\\\">\\n                            <mat-expansion-panel-header class=\\\"outer-panel mb10\\\">\\n                              <mat-panel-title>\\n                                Module Name\\n                              </mat-panel-title>\\n                            </mat-expansion-panel-header>\\n                            <div class=\\\"cs-rights\\\">\\n                              <div class=\\\"all-selct\\\" *ngFor=\\\"let list of moduleData; let index = index\\\">\\n                                <mat-checkbox [(ngModel)]=\\\"list.view\\\" name=\\\"list.view\\\">{{list.moduleName}}</mat-checkbox>\\n                              </div>\\n                            </div>\\n                            \\n                            <div *ngIf=\\\"user_type.type ==1\\\" class=\\\"col s12\\\">\\n                              <div class=\\\"collaps flat-collaps mt10\\\">\\n                                <div class=\\\"collaps-area\\\">\\n                                  <mat-accordion>\\n                                    <mat-expansion-panel  >\\n                                      <mat-expansion-panel-header class=\\\"outer-panel mb10\\\">\\n                                        <mat-panel-title>\\n                                          <mat-checkbox (change)=\\\"selectAllHandler($event)\\\">Master</mat-checkbox>\\n                                        </mat-panel-title>\\n                                      </mat-expansion-panel-header>\\n                                      <div class=\\\"cs-rights\\\">\\n                                        <div class=\\\"all-selct\\\" *ngFor=\\\"let list of masterArray; let i = index\\\">\\n                                          <mat-checkbox [(ngModel)]=\\\"list.view\\\" name=\\\"list.view{{i}}\\\">{{list.moduleName}}</mat-checkbox>\\n                                        </div>\\n                                      </div>\\n                                    </mat-expansion-panel>\\n                                  </mat-accordion>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </mat-expansion-panel>\\n                        </mat-accordion>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            \\n            \\n            <div *ngIf=\\\"user_type.role\\\" class=\\\"col s12\\\">\\n              <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n                <div class=\\\"in-btn\\\">\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"setFocus(f.form)\\\" >Save</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"h50\\\"></div>\"","import { Component, OnInit, Renderer2, ViewChild, Inject, ElementRef, PLATFORM_ID } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as $ from 'jquery';\nimport { throwMatDialogContentAlreadyAttachedError } from '@angular/material';\n\n@Component({\n    selector: 'app-user-add',\n    templateUrl: './user-add.component.html',\n    animations: [slideToTop()]\n})\n\nexport class UserAddComponent implements OnInit {\n    sales_data:any={};\n    staffSegments:any=[];\n    r:any=1;\n    users_territory:any=[];\n    userTerritories:any=[];\n    system_data:any={};\n    user_type:any={};\n    rolelists:any=[];\n    rolelistsales1:any=[];\n    rolelistsystem1:any=[];\n    segmentlist:any=[];\n    statelist:any=[];\n    st:any=[];\n    districtlist:any=[];\n    districtlistOffice:any=[];\n    district1:any=[];\n    districtOffice1:any=[];\n    citylist:any=[];\n    citylistOffice:any=[];\n    districts1:any=[];\n    districtsOffice1:any=[];\n    districts2:any=[];\n    districtsOffice2:any=[];\n    cities1:any=[];\n    areas:any=[];\n    cities:any=[];\n    citiesOffice:any=[];\n    areasOffice:any=[];\n    citiesOffice1:any=[];\n    \n    networkIdsdata:any=[];\n    networkIds:any=[];\n    territoryList:any=[];\n    placeholder:any;\n    document=[];\n    message:any;\n    juniorList:any=[];\n    loader:boolean;\n    saleHierarchies:any=[];\n    \n    isModuleSelected:any=true;\n    \n    disabledTerritories:any = [];\n    disabledNetwork:any = [];\n    selectedTempArr:any = [];\n    \n    step:any = 0;\n    \n    moduleData = [{ moduleId: '1', moduleName: 'Lead', view: false, moduleRights: [\n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    \n    { moduleId: '2', moduleName: 'Distribution Network', view: false, moduleRights: [\n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    \n    { moduleId: '3',moduleName: 'Task', view: false,  moduleRights: [\n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    \n    { moduleId: '4', moduleName: 'Order', view: false, moduleRights: [\n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    \n    \n    { moduleId: '5', moduleName: 'Travel Plan', view: false, moduleRights: [\n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    \n    { moduleId: '6', moduleName: 'Expense', view: false, moduleRights: [\n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    \n    { moduleId: '7', moduleName: 'Product Concern', view: false, moduleRights: [\n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    { moduleId: '15', moduleName: 'Other Concern', view: false, moduleRights: [ \n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    { moduleId: '8', moduleName: 'DVR', view: false, moduleRights: [\n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    \n    { moduleId: '9', moduleName: 'Followup', view: false, moduleRights: [ \n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    { moduleId: '11', moduleName: 'Sales Leave', view: false, moduleRights: [ \n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    { moduleId: '12', moduleName: 'Pop & Gift Order', view: false, moduleRights: [ \n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    { moduleId: '13', moduleName: 'Schemes', view: false, moduleRights: [ \n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    { moduleId: '14', moduleName: 'Vendors', view: false, moduleRights: [ \n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    },\n    { moduleId: '23', moduleName: 'Purchase Order', view: false, moduleRights: [\n        {name: 'Add', checked: false},\n        {name: 'Edit', checked: false},\n        {name: 'Delete', checked: false}]\n    }\n    \n];\n\nmasterArray = [{ moduleId: '16', moduleName: 'Product', view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '17', moduleName: 'User', view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '18',moduleName: 'Territories', view: false,  moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '19', moduleName: 'Marketing', view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n},\n\n\n{ moduleId: '20', moduleName: 'Leaves & Holiday', view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '21', moduleName: 'Announcement', view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n},\n\n{ moduleId: '22', moduleName: 'Allowance', view: false, moduleRights: [\n    {name: 'Add', checked: false},\n    {name: 'Edit', checked: false},\n    {name: 'Delete', checked: false}]\n}\n];\n\ndesignationData:any=[];\nuserAssignedTerriotories:any = [];\n\nconstructor(public db:ConstantService,\n    public toast: SnackBarOverview, \n    public router:Router, \n    public route:ActivatedRoute,\n    private renderer: Renderer2,\n    public alrt:DialogComponent,\n    @Inject(PLATFORM_ID) private platformId: Object) { \n        \n        \n        this.designationData = [\n            \n            { designationName: 'Vice President', designation: 1},\n            { designationName: 'Deputy General Manager', designation: 2},\n            { designationName: 'General Manager', designation: 3},\n            { designationName: 'Assistant General Manager', designation: 4},\n            { designationName: 'Sr Manager', designation: 5},\n            { designationName: 'Manager', designation: 6},\n            { designationName: 'Deputy Manager', designation: 7},\n            { designationName: 'Sr Executive', designation: 8},\n            { designationName: 'Executive', designation: 9},\n            { designationName: 'Assistant Manager', designation: 10},\n            { designationName: 'Assistant', designation: 11},\n            { designationName: 'Trainee', designation: 12},\n            { designationName: 'Others', designation: 13}\n        ];\n        \n        \n        this.getDesignationList();\n    }\n    \n    \n    ngOnInit() {\n        \n        this.rolelist();\n        this.getAllSegment();\n        this.get_state();\n        \n        this.sales_data.concernApprovalAccess = false;\n        \n        this.renderer.removeClass(document.body, 'nav-active');\n    }\n    \n    selectAllHandler(event) \n    {\n        if(event.checked)\n        {\n            for (let index = 0; index< this.masterArray.length; index++)\n            {\n                this.masterArray[index].view=true;\n            }\n        }\n        else\n        {\n            for (let index = 0; index< this.masterArray.length; index++)\n            {\n                this.masterArray[index].view=false;\n            }\n        }\n        \n    }\n    \n    \n    setStep(index: number) {\n        this.step = index;\n    }\n    \n    nextStep() {\n        this.step++;\n    }\n    \n    prevStep() {\n        this.step--;\n    }\n    \n    \n    setFocus(form) {\n        \n        console.log(form.controls);\n        \n        for (var key in form.controls)\n        {\n            \n            if (form.controls.hasOwnProperty(key)) {\n                if(form.controls[key].status=='INVALID')\n                {\n                    if (isPlatformBrowser(this.platformId)) {\n                        $('#'+key).focus();\n                        \n                    }\n                    \n                    console.log(key);\n                    return true;\n                    \n                }\n                console.log(key + \" -> \" + form.controls[key].status);\n            }\n        }\n    }\n    \n    desginationList:any=[];\n    getDesignationList()\n    {\n        this.db.fileData(\"\",\"designation/list\").subscribe((result)=>{\n            console.log(result);\n            if(result['status']=='Success')\n            {\n                this.desginationList=result['data'];                \n            }\n        })\n    }\n    \n    seniorUserDesignation:any=[];\n    filterDesignaton(id)\n    {\n        for(let i=0;i<this.desginationList.length;i++)\n        {\n            if(this.desginationList[i].order<id)\n            {\n                this.seniorUserDesignation.push(this.desginationList[i]);\n            }\n        }\n        \n    }\n    \n    userList:any=[];\n    seniorUserList(designationOrder)\n    {\n        console.log(designationOrder);\n        \n        this.loader=true;\n        this.db.fetchData({'userType': 1, 'currentPage': 1,'pageSize': 200},\"user/list\").subscribe((result)=>{\n            console.log(result);\n            this.loader=false\n            if(result['status']=='Success')\n            {\n                const userArray=result['data'];\n                this.userList=userArray.filter(row=>row.designation==designationOrder);\n            }\n        })\n    }\n    \n    rolelist() {\n        \n        this.db.fileData('','usertype/list').subscribe((response)=>{\n            console.log(response);\n            if(response['status']=='Success')\n            {\n                this.rolelists=response['data'];\n                let filterrolesales= this.rolelists.filter(x => x.userTypeId==2);\n                this.rolelistsales1=filterrolesales[0].roles;\n                let filterrolesystem= this.rolelists.filter(x => x.userTypeId==1);\n                this.rolelistsystem1=filterrolesystem[0].roles;\n                \n                for(let i=0;i<this.rolelistsystem1.length;i++)\n                {\n                    this.rolelistsystem1[i].userType=1;\n                }\n                for(let j=0;j<this.rolelistsales1.length;j++)\n                {\n                    this.rolelistsales1[j].userType=2;\n                }\n                for(let i=0;i<this.rolelistsales1.length;i++){\n                    if(this.rolelistsales1[i]['roleId']!=9){\n                        this.rolelistsystem1.push(this.rolelistsales1[i]);}\n                    }\n                    console.log(this.rolelistsales1);\n                    console.log(this.rolelistsystem1);\n                }\n                \n            });\n        }\n        \n        setplaceholder() {\n            \n            if(this.user_type.role==6){\n                this.placeholder=\"Select RSM\";\n            } else if( this.user_type.role==7) { \n                \n                this.placeholder=\"Select ASM\"; \n                \n            }else{\n                this.placeholder=\"Select T. I.\"; \n            }\n            \n        }\n        \n        role:any={};\n        \n        roles(userType) {\n            \n            this.user_type.type=userType;\n            if(this.user_type.type == 2) {\n                \n                for (let index = 0; index < this.segmentlist.length; index++) {\n                    this.segmentlist[index].checked = false;\n                }\n                \n                this.juniorList = [];\n                this.territoryList = [];\n                this.networkIdsdata = [];\n            }\n            \n            console.log(this.user_type);\n        }\n        \n        \n        saveUserSelectedDetail() {\n            \n            this.selectedTempArr['segmentSelected'] = [];\n            for (let index = 0; index < this.segmentlist.length; index++) {\n                \n                if(this.segmentlist[index].checked) {\n                    this.selectedTempArr['segmentSelected'].push(this.segmentlist[index].text);\n                }\n            }\n            \n            this.selectedTempArr['userSelected'] = [];\n            for (let index = 0; index < this.juniorList.length; index++) {\n                \n                if(this.juniorList[index].checked) {\n                    this.selectedTempArr['userSelected'].push(this.juniorList[index].userId);\n                }\n            }\n            \n            this.selectedTempArr['territorySelected'] = [];\n            for (let index = 0; index < this.territoryList.length; index++) {\n                \n                if(this.territoryList[index].check && !this.territoryList[index].disabled) {\n                    this.selectedTempArr['territorySelected'].push({territoryID: this.territoryList[index].territoryID, disabled: false});\n                }\n                \n                if(this.territoryList[index].check && this.territoryList[index].disabled) {\n                    this.selectedTempArr['territorySelected'].push({territoryID: this.territoryList[index].territoryID, disabled: true});\n                }\n            }\n            \n            this.selectedTempArr['networkSelected'] = [];\n            for (let networkIndex = 0; networkIndex < this.networkIdsdata.length; networkIndex++) {\n                \n                if(this.networkIdsdata[networkIndex].checked && !this.networkIdsdata[networkIndex].disabled) {\n                    \n                    this.selectedTempArr['networkSelected'].push({networkId: this.networkIdsdata[networkIndex].networkId, disabled: false });\n                }\n                \n                if(this.networkIdsdata[networkIndex].checked && this.networkIdsdata[networkIndex].disabled) {\n                    \n                    this.selectedTempArr['networkSelected'].push({networkId: this.networkIdsdata[networkIndex].networkId, disabled: true });\n                }\n            }\n            \n            console.log(this.selectedTempArr['segmentSelected']);\n            console.log(this.selectedTempArr['territorySelected']);\n            console.log(this.selectedTempArr['networkSelected']);\n        }\n        \n        \n        \n        getSegmentRelatedData() {\n            \n            this.saveUserSelectedDetail();\n            console.log(this.selectedTempArr);\n            \n            if(this.selectedTempArr['segmentSelected'].length > 0) {\n                \n                if(this.user_type.role==10) {\n                    this.getTerritoryData();\n                }\n                \n                if(this.user_type.role==8 || this.user_type.role==7 || this.user_type.role==6) {\n                    this.getUserDataToAssign();\n                    this.getTerritoryData();\n                }\n                \n            } else {\n                \n                this.juniorList= [];\n                this.territoryList = [];\n                this.networkIdsdata = [];\n            }\n            \n        }\n        \n        \n        getUserDataToAssign() {\n            \n            if(this.user_type.role==8) {\n                this.role = parseInt(this.user_type.role) + 2;\n            } else {\n                this.role = parseInt(this.user_type.role) + 1;\n            }\n            \n            this.loader = true;\n            \n            console.log(this.role);\n            \n            this.db.fetchData({\n                'role':this.role,\n                'segments': this.selectedTempArr['segmentSelected'],\n                'currentPage': 1,\n                'pageSize': 200 },'user/list').subscribe((response) => {\n                    \n                    this.loader = false;\n                    \n                    console.log(response);\n                    if(response['status']=='Success')\n                    {\n                        this.juniorList = response['data'];\n                        \n                        for (let index = 0; index < this.juniorList.length; index++) {\n                            \n                            const indexExist = this.selectedTempArr['userSelected'].findIndex(juniorId => juniorId == this.juniorList[index].userId);\n                            \n                            if(indexExist != -1) {\n                                \n                                this.juniorList[index].checked = true;\n                                this.onUserAssignedHandler(this.juniorList[index].userId, true);\n                            }\n                        }\n                    }\n                    \n                    \n                    console.log(this.juniorList);\n                });\n                \n            }\n            \n            userAssignedDefaultSelectedHandler() {\n                \n                for (let index = 0; index < this.juniorList.length; index++) {\n                    \n                    if(this.juniorList[index].checked) {\n                        \n                        \n                        \n                    }\n                }\n            }\n            \n            \n            onUserAssignedHandler(userId, isChecked) {\n                \n                console.log('hello ' + userId + ', ' + isChecked);\n                \n                if(isChecked) {\n                    \n                    this.saveUserSelectedDetail();\n                    \n                    this.db.fileData('', 'user/detail/' + userId).subscribe((response) => {\n                        \n                        console.log(response);\n                        \n                        if(response['status']=='Success')\n                        {\n                            const assignData = response['data']['staffWithJuniors'];\n                            \n                            const userAssignedTerritories = [];\n                            for (let territoryIndex = 0; territoryIndex < assignData['userTerritories'].length; territoryIndex++) {\n                                \n                                userAssignedTerritories.push({territoryID : assignData['userTerritories'][territoryIndex]['territoryId']})\n                                \n                            }\n                            \n                            for (let juIndex1 = 0; juIndex1 < assignData['juniors'].length; juIndex1++) {\n                                \n                                for (let juTerrIndex1 = 0; juTerrIndex1 < assignData['juniors'][juIndex1]['userTerritories'].length; juTerrIndex1++) {\n                                    \n                                    const isIndexExist = userAssignedTerritories.findIndex(row => row.territoryID == assignData['juniors'][juIndex1]['userTerritories'][juTerrIndex1]['territoryId']);\n                                    \n                                    if(isIndexExist == -1) {\n                                        \n                                        userAssignedTerritories.push({territoryID : assignData['juniors'][juIndex1]['userTerritories'][juTerrIndex1]['territoryId']})\n                                    }\n                                    \n                                    \n                                    for (let juIndex2 = 0; juIndex2 < assignData['juniors'][juIndex1]['juniors'].length; juIndex2++) {\n                                        \n                                        \n                                        for (let juTerrIndex2 = 0; juTerrIndex2 < assignData['juniors'][juIndex1]['juniors'][juIndex2]['userTerritories'].length; juTerrIndex2++) {\n                                            \n                                            \n                                            const isIndexExist = userAssignedTerritories.findIndex(row => row.territoryID == assignData['juniors'][juIndex1]['juniors'][juIndex2]['userTerritories'][juTerrIndex2]['territoryId']);\n                                            \n                                            \n                                            if(isIndexExist == -1) {\n                                                \n                                                userAssignedTerritories.push({territoryID : assignData['juniors'][juIndex1]['juniors'][juIndex2]['userTerritories'][juTerrIndex2]['territoryId']});\n                                                \n                                            }\n                                            \n                                            for (let juIndex3 = 0; juIndex3 < assignData['juniors'][juIndex1]['juniors'][juIndex2]['juniors'].length; juIndex3++) {\n                                                \n                                                for (let juTerrIndex3 = 0; juTerrIndex3 < assignData['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['userTerritories'].length; juTerrIndex3++) {\n                                                    \n                                                    const isIndexExist = userAssignedTerritories.findIndex(row => row.territoryID ==  assignData['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['userTerritories'][juTerrIndex3]['territoryId']);\n                                                    \n                                                    \n                                                    if(isIndexExist == -1) {\n                                                        \n                                                        userAssignedTerritories.push({territoryID : assignData['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['userTerritories'][juTerrIndex3]['territoryId']});\n                                                        \n                                                    }\n                                                }\n                                            }\n                                        } \n                                    }\n                                }\n                            }\n                            \n                            \n                            const userAssignedNetwork = [];\n                            for (let networkIndex = 0; networkIndex < assignData['salesUserNetworks'].length; networkIndex++) {\n                                \n                                userAssignedNetwork.push({networkId : assignData['salesUserNetworks'][networkIndex]['networkId']});\n                            }\n                            \n                            \n                            for (let juIndex1 = 0; juIndex1 < assignData['juniors'].length; juIndex1++) {\n                                \n                                for (let juNetIndex1 = 0; juNetIndex1 < assignData['juniors'][juIndex1]['salesUserNetworks'].length; juNetIndex1++) {\n                                    \n                                    const isIndexExist = userAssignedNetwork.findIndex(row => row.networkId == assignData['juniors'][juIndex1]['salesUserNetworks'][juNetIndex1]['networkId']);\n                                    \n                                    if(isIndexExist == -1) {\n                                        \n                                        userAssignedNetwork.push({networkId : assignData['juniors'][juIndex1]['salesUserNetworks'][juNetIndex1]['networkId']})\n                                    }\n                                    \n                                    \n                                    for (let juIndex2 = 0; juIndex2 < assignData['juniors'][juIndex1]['juniors'].length; juIndex2++) {\n                                        \n                                        \n                                        for (let juNetIndex2 = 0; juNetIndex2 < assignData['juniors'][juIndex1]['juniors'][juIndex2]['salesUserNetworks'].length; juNetIndex2++) {\n                                            \n                                            \n                                            const isIndexExist = userAssignedNetwork.findIndex(row => row.networkId == assignData['juniors'][juIndex1]['juniors'][juIndex2]['salesUserNetworks'][juNetIndex2]['networkId']);\n                                            \n                                            \n                                            if(isIndexExist == -1) {\n                                                \n                                                userAssignedNetwork.push({networkId : assignData['juniors'][juIndex1]['juniors'][juIndex2]['salesUserNetworks'][juNetIndex2]['networkId']});\n                                                \n                                            }\n                                            \n                                            for (let juIndex3 = 0; juIndex3 < assignData['juniors'][juIndex1]['juniors'][juIndex2]['juniors'].length; juIndex3++) {\n                                                \n                                                for (let juNetIndex3 = 0; juNetIndex3 < assignData['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['salesUserNetworks'].length; juNetIndex3++) {\n                                                    \n                                                    const isIndexExist = userAssignedNetwork.findIndex(row => row.networkId ==  assignData['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['salesUserNetworks'][juNetIndex3]['networkId']);\n                                                    \n                                                    \n                                                    if(isIndexExist == -1) {\n                                                        \n                                                        userAssignedNetwork.push({networkId : assignData['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['salesUserNetworks'][juNetIndex3]['networkId']});\n                                                        \n                                                    }\n                                                }\n                                            }\n                                        } \n                                    }\n                                }\n                            }\n                            \n                            \n                            console.log(userAssignedTerritories);\n                            console.log(userAssignedNetwork);\n                            \n                            for (let index = 0; index < userAssignedTerritories.length; index++) {\n                                \n                                const isTerrIndexExist = this.selectedTempArr['territorySelected'].findIndex(row => row.territoryID == userAssignedTerritories[index].territoryID);\n                                \n                                if(isTerrIndexExist == -1) {\n                                    \n                                    this.selectedTempArr['territorySelected'].push({territoryID : userAssignedTerritories[index].territoryID, disabled: true});\n                                    \n                                }  else {\n                                    \n                                    this.selectedTempArr['territorySelected'][isTerrIndexExist].disabled = true;\n                                }\n                            }\n                            \n                            \n                            for (let index = 0; index < userAssignedNetwork.length; index++) {\n                                \n                                const isNetworkIndexExist = this.selectedTempArr['networkSelected'].findIndex(row => row.networkId == userAssignedNetwork[index].networkId);\n                                \n                                if(isNetworkIndexExist == -1) {\n                                    \n                                    this.selectedTempArr['networkSelected'].push({networkId : userAssignedNetwork[index].networkId, disabled: true});\n                                    \n                                } else {\n                                    \n                                    this.selectedTempArr['networkSelected'][isNetworkIndexExist]['disabled'] = true;\n                                }\n                            }\n                            \n                            console.log(this.selectedTempArr['networkSelected']);\n                            \n                            \n                            for (let territoryIndex = 0; territoryIndex < this.territoryList.length; territoryIndex++) {\n                                \n                                const isExist = this.selectedTempArr['territorySelected'].findIndex(row => row.territoryID == this.territoryList[territoryIndex].territoryID);\n                                \n                                if(isExist != -1) {\n                                    \n                                    this.territoryList[territoryIndex].check = true;\n                                    this.territoryList[territoryIndex].disabled = this.selectedTempArr['territorySelected'][isExist].disabled;\n                                    \n                                    this.getTerritoryNetwork(this.territoryList[territoryIndex].territoryID, true);\n                                }\n                            }\n                        }\n                        \n                    });\n                    \n                    \n                } else {\n                    \n                    for (let index = 0; index < this.territoryList.length; index++) {\n                        \n                        this.territoryList[index].check = false;\n                        this.territoryList[index].disabled = false;\n                    }\n                    \n                    this.getSegmentRelatedData();\n                }\n            }\n            \n            \n            getTerritoryData() {\n                \n                this.networkIdsdata = [];\n                \n                this.loader=true;\n                \n                this.db.fetchData({'segments': this.selectedTempArr['segmentSelected']},'territory/list').subscribe((response)=>{\n                    \n                    console.log(response);\n                    this.loader=false;\n                    \n                    if(response['status']=='Success')\n                    \n                    {\n                        this.territoryList= response['data'];\n                        \n                        for (let index = 0; index < this.territoryList.length; index++) {\n                            \n                            const indexExist = this.selectedTempArr['territorySelected'].findIndex(row => row.territoryID == this.territoryList[index].territoryID);\n                            \n                            if(indexExist != -1) {\n                                \n                                this.territoryList[index].check = true;\n                                this.territoryList[index].disabled =  this.selectedTempArr['territorySelected'][indexExist].disabled;\n                                \n                                this.getTerritoryNetwork(this.territoryList.territoryID, true);\n                            }\n                        }\n                    }\n                    \n                    console.log(this.territoryList);\n                    \n                });\n            }\n            \n            \n            \n            getTerritoryNetwork(id, isChecked) {\n                \n                console.log(id,isChecked);\n                \n                // this.saveUserSelectedDetail();\n                console.log(this.selectedTempArr);\n                \n                if(isChecked) {\n                    \n                    this.loader=true;\n                    \n                    this.db.fileData('','territory/detail/'+id).subscribe((response)=>{\n                        \n                        console.log(response);\n                        this.loader=false;\n                        \n                        if(!response['data']['territoryNetworks']) {\n                            response['data']['territoryNetworks'] = [];\n                        }\n                        \n                        for (let territoryIndex = 0; territoryIndex < response['data']['territoryNetworks'].length; territoryIndex++) {\n                            \n                            let networkSegmentMatch = false;\n                            for (let segmentIndex = 0; segmentIndex < response['data']['territoryNetworks'][territoryIndex].networkSegments.length; segmentIndex++) {\n                                \n                                console.log(response['data']['territoryNetworks'][territoryIndex].networkSegments);\n                                \n                                console.log(this.selectedTempArr);\n                                \n                                const segmentExistIndex = this.selectedTempArr['segmentSelected'].findIndex(segment => segment == response['data']['territoryNetworks'][territoryIndex].networkSegments[segmentIndex].segment);\n                                \n                                if(segmentExistIndex != -1) {\n                                    networkSegmentMatch =true;\n                                }\n                            }\n                            \n                            \n                            if(networkSegmentMatch) {\n                                \n                                const indexExist = this.networkIdsdata.findIndex(row => row.networkId == response['data']['territoryNetworks'][territoryIndex].networkId);\n                                \n                                if(indexExist == -1) {\n                                    \n                                    response['data']['territoryNetworks'][territoryIndex].territoryArr = [];\n                                    \n                                    response['data']['territoryNetworks'][territoryIndex].territoryArr.push(response['data'].territoryID);\n                                    \n                                    this.networkIdsdata.push(response['data']['territoryNetworks'][territoryIndex]);\n                                    \n                                } else {\n                                    \n                                    this.networkIdsdata[indexExist].territoryArr.push(response['data'].territoryID);\n                                }\n                            }\n                        }\n                        \n                        \n                        for (let networkIndex = 0; networkIndex < this.networkIdsdata.length; networkIndex++) {\n                            \n                            const isIndexExist = this.selectedTempArr['networkSelected'].findIndex(row  => row.networkId == this.networkIdsdata[networkIndex].networkId);\n                            \n                            if(isIndexExist != -1) {\n                                \n                                this.networkIdsdata[networkIndex].checked = true;\n                                this.networkIdsdata[networkIndex].disabled = this.selectedTempArr['networkSelected'][isIndexExist].disabled;\n                            }\n                        }\n                        \n                        console.log(this.networkIdsdata);\n                        \n                    });\n                    \n                } else {\n                    \n                    for (let networkIndex = 0; networkIndex < this.networkIdsdata.length; networkIndex++) {\n                        const indexExist =  this.networkIdsdata[networkIndex].territoryArr.findIndex(territoryId=> territoryId == id);\n                        \n                        if(indexExist != -1) {\n                            \n                            if(this.networkIdsdata[networkIndex].territoryArr.length > 1) {\n                                \n                                const territoryIndex = this.networkIdsdata[networkIndex].territoryArr.findIndex(val => val == id);\n                                \n                                this.networkIdsdata[networkIndex].territoryArr.splice(territoryIndex, 1);\n                                \n                            } else {\n                                \n                                this.networkIdsdata.splice(networkIndex, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            \n            \n            ///////////segment list start////////////\n            getAllSegment(){\n                \n                this.db.fileData('','segment/list/').subscribe((response)=>{\n                    console.log(response);\n                    this.segmentlist=response['data'];\n                });\n            }\n            \n            ///////state list start//////////////////\n            tmpstateList:any=[];\n            get_state(){\n                \n                this.loader=true;\n                this.db.fileData('','state/list/').subscribe((response)=>{\n                    console.log(response);\n                    this.loader=false\n                    this.statelist=response['data'];\n                    this.tmpstateList=this.statelist;\n                    \n                });\n            }\n            \n            \n            tmpofficedistrict:any=[];\n            get_districtOffice(){\n                this.sales_data.districtOffice='';\n                this.sales_data.cityOffice='';\n                this.sales_data.pinOffice='';\n                if(this.user_type.type=='2'){\n                    this.loader=true;\n                    this.st=Array(this.sales_data.statef)\n                    this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n                        console.log(response);\n                        this.loader=false;\n                        this.districtlistOffice=response['data'];\n                        this.districtOffice1=this.districtlistOffice[0].distrcits;\n                        this.tmpofficedistrict=this.districtOffice1;\n                    });\n                }\n            }\n            \n            tmpdistrictList:any=[];\n            get_district(){\n                if(this.user_type.type=='2'){\n                    this.loader=true;\n                    this.sales_data.district='';\n                    this.sales_data.pin='';\n                    this.sales_data.city='';\n                    this.st=Array(this.sales_data.state)\n                    this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n                        this.loader=false;\n                        console.log(response);\n                        this.districtlist=response['data'];\n                        this.district1=this.districtlist[0].distrcits;\n                        this.tmpdistrictList=this.district1;\n                        \n                    });\n                }\n                else{\n                    this.loader=true;\n                    this.system_data.district='';\n                    this.system_data.pin='';\n                    this.system_data.city='';\n                    console.log(this.system_data.state);\n                    this.st=Array(this.system_data.state)\n                    this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n                        console.log(response);\n                        this.loader=false;\n                        this.districtlist=response['data'];\n                        this.district1=this.districtlist[0].distrcits;\n                        this.tmpdistrictList=this.district1;\n                    });\n                }\n                \n                \n                console.log(this.tmpdistrictList);\n                \n            }\n            /////////////////city list start///////////\n            tmpofficecitylist:any=[];\n            get_cityOffice(){\n                this.loader=true;\n                this.sales_data.cityOffice='';\n                this.sales_data.pinOffice='';\n                console.log(this.sales_data.statef,this.sales_data.districtOffice);\n                console.log(this.sales_data.districtOffice);\n                this.db.fetchData(Array({\"stateName\":this.sales_data.statef,\"distrcits\":Array({\"districtName\":this.sales_data.districtOffice})}),'city/list').subscribe((response)=>{\n                    console.log(response);\n                    this.loader=false;\n                    this.citylistOffice=response['data'];\n                    this.districtsOffice1=this.citylistOffice[0].distrcits;\n                    this.citiesOffice=this.districtsOffice1[0].cities;\n                    this.tmpofficecitylist=this.citiesOffice;\n                    console.log(this.citiesOffice);\n                });\n            }\n            tmpcityList:any=[];\n            get_city(){\n                if(this.user_type.type=='2'){\n                    this.loader=true;\n                    this.sales_data.city='';\n                    this.sales_data.pin='';\n                    console.log(this.sales_data.state,this.sales_data.district);\n                    console.log(this.sales_data.district);\n                    this.db.fetchData(Array({\"stateName\":this.sales_data.state,\"distrcits\":Array({\"districtName\":this.sales_data.district})}),'city/list').subscribe((response)=>{\n                        console.log(response);\n                        this.loader=false;\n                        this.citylist=response['data'];\n                        this.districts1=this.citylist[0].distrcits;\n                        this.cities=this.districts1[0].cities;\n                        this.tmpcityList=this.cities;\n                        console.log(this.cities);\n                    });\n                }\n                else{\n                    this.loader=true;\n                    this.system_data.city='';\n                    this.system_data.pin='';\n                    console.log(this.system_data.state,this.system_data.district);\n                    console.log(this.system_data.district);\n                    this.db.fetchData(Array({\"stateName\":this.system_data.state,\"distrcits\":Array({\"districtName\":this.system_data.district})}),'city/list').subscribe((response)=>{\n                        console.log(response);\n                        this.loader=false;\n                        this.citylist=response['data'];\n                        this.districts1=this.citylist[0].distrcits;\n                        this.cities=this.districts1[0].cities;\n                        this.tmpcityList=this.cities;\n                        console.log(this.cities);\n                    });\n                }\n            }\n            ///////////////// pincode list start///////////////////\n            tmpofficePinlist:any=[];\n            get_pincodeOffice(masterId){\n                this.loader=true;\n                this.sales_data.pinOffice='';\n                console.log(this.sales_data.statef,this.sales_data.districtOffice,this.sales_data.cityOffice);\n                \n                this.db.fetchData({\"stateMasterIds\":[masterId]},'city/pincodes').subscribe((response)=>{\n                    console.log(response);\n                    \n                    this.loader=false;\n                    // this.citylistOffice=response['data'];\n                    // this.districtsOffice2=this.citylistOffice[0].distrcits;\n                    // this.citiesOffice1=this.districtsOffice2[0].cities;\n                    // let filterpincodeOffice= this.citiesOffice1.filter(x => x.cityName==this.sales_data.cityOffice);\n                    this.areasOffice=response['data'][0]['pinCodes'];\n                    this.tmpofficePinlist=this.areasOffice;\n                    \n                    console.log( this.areasOffice);\n                    console.log(this.citiesOffice1);\n                });\n            }\n            tmpPinList:any=[];\n            \n            get_pincode(masterId) {\n                \n                if(this.user_type.type=='2') {\n                    \n                    this.loader=true;\n                    this.sales_data.pin='';\n                    \n                    console.log(this.sales_data.state,this.sales_data.district,this.sales_data.city);\n                    \n                    this.db.fetchData({\"stateMasterIds\":[masterId]},'city/pincodes').subscribe((response)=>{\n                        \n                        console.log(response);\n                        this.loader=false;\n                        // this.citylist=response['data'];\n                        // this.districts2=this.citylist[0].distrcits;\n                        // this.cities1=this.districts2[0].cities;\n                        \n                        this.areas=response['data'][0]['pinCodes'];\n                        this.tmpPinList=this.areas;\n                        console.log( this.tmpPinList);\n                        // console.log(this.cities1);\n                        \n                    });\n                    \n                } else {\n                    \n                    this.loader=true;\n                    this.system_data.pin='';\n                    console.log(this.system_data.state,this.system_data.district,this.system_data.city);\n                    this.db.fetchData({\"stateMasterIds\":[masterId]},'city/pincodes').subscribe((response)=>{\n                        console.log(response);\n                        this.loader=false;\n                        // this.citylist=response['data'];\n                        \n                        this.areas=response['data'][0]['pinCodes'];\n                        this.tmpPinList=this.areas;\n                        console.log( this.areas);\n                        // console.log(this.cities1);\n                    });\n                }\n                \n            }\n            \n            onSubmit() {\n                \n                this.sales_data.stateOffice=this.sales_data.statef;\n                console.log(this.sales_data.segment);\n                console.log(this.staffSegments);\n                \n                if( this.user_type.type=='2') {\n                    \n                    const segmentArr = [];\n                    for(let i=0;i<this.segmentlist.length;i++){\n                        \n                        if(this.segmentlist[i].checked) {\n                            \n                            segmentArr.push( {\"segmentCode\": this.segmentlist[i].text, \"segment\": this.segmentlist[i].text});\n                        }\n                    }\n                    \n                    \n                    const saleHierarchy = [];\n                    \n                    for (let index = 0; index < this.juniorList.length; index++) {\n                        if(this.juniorList[index].checked) {\n                            saleHierarchy.push({'juniorUserID': this.juniorList[index].userId});   \n                        }\n                    }\n                    \n                    \n                    const territorySelected = [];\n                    if(this.territoryList && this.territoryList.length) {\n                        \n                        for (let index = 0; index < this.territoryList.length; index++) {\n                            if(this.territoryList[index].check && !this.territoryList[index].disabled) {\n                                territorySelected.push(this.territoryList[index]['territoryID']);\n                            }\n                        }\n                    }\n                    \n                    \n                    const networks = [];\n                    for (let index = 0; index < this.networkIdsdata.length; index++) {\n                        \n                        if(this.networkIdsdata[index].checked && !this.networkIdsdata[index].disabled) {\n                            networks.push({networkId: this.networkIdsdata[index].networkId, territoryId: this.networkIdsdata[index].territoryId} );\n                        }\n                    }\n                    \n                    \n                    this.sales_data.staffSegments = segmentArr;\n                    this.sales_data.saleHierarchies = saleHierarchy;\n                    this.sales_data.territories = territorySelected;\n                    this.sales_data.networks = networks;\n                    \n                    console.log(this.networkIdsdata);\n                    \n                    this.sales_data.userType=this.user_type.type,\n                    this.sales_data.role=this.user_type.role,\n                    this.sales_data.country=\"India\";\n                    this.sales_data.userType = 2;\n                    \n                    this.sales_data.totalTarget = this.sales_data.target;\n                    \n                    this.sales_data.document=[];\n                    console.log(this.sales_data);\n                    \n                    console.log(this.user_type.leaveApprover);\n                    \n                    this.sales_data.designation = this.user_type.designation;\n                    \n                    \n                    console.log(this.sales_data);\n                    this.loader=true;\n                    this.db.fetchData(this.sales_data,'user/add').subscribe((response)=>{\n                        \n                        console.log(response);\n                        this.loader=false;\n                        console.log(response);\n                        this.staffSegments=[];\n                        this.message=response['message'];\n                        if(this.message==\"User added successfully\")\n                        {\n                            this.toast.openSucess('User added successfully','');\n                            this.router.navigate(['/sale-user-list'])\n                        }\n                        else\n                        {\n                            \n                            this.alrt.alertWarning(this.message);\n                            \n                            // this.toast.openError('Email or Phone Can Not Be Duplicate or Invalid Please Try Again!!','');\n                        }\n                    });\n                    \n                }  else {\n                    \n                    this.system_data.userType=this.user_type.type,\n                    this.system_data.role=this.user_type.role,\n                    this.system_data.country=\"India\";\n                    this.system_data.document=[];\n                    this.sales_data.staffSegments = [];\n                    this.system_data.designation = this.user_type.designation;\n                    if(this.user_type.leaveApprover)\n                    {\n                        this.system_data.leaveApprover = this.user_type.leaveApprover;\n                        \n                    }\n                    console.log(this.system_data);\n                    \n                    \n                    const moduleAccesses = [];\n                    \n                    for (let index = 0; index < this.moduleData.length; index++) {\n                        \n                        if(this.moduleData[index].view) {\n                            \n                            if(!this.moduleData[index].moduleRights[0].checked) {\n                                this.moduleData[index].moduleRights[0].checked = false;\n                            }\n                            \n                            if(!this.moduleData[index].moduleRights[1].checked) {\n                                this.moduleData[index].moduleRights[1].checked = false;\n                            }\n                            \n                            if(!this.moduleData[index].moduleRights[2].checked) {\n                                this.moduleData[index].moduleRights[2].checked = false;\n                            }\n                            \n                            moduleAccesses.push({\n                                'moduleId': this.moduleData[index].moduleId,\n                                'module': this.moduleData[index].moduleName,\n                                'show': true,\n                                'add': this.moduleData[index].moduleRights[0].checked,\n                                'edit': this.moduleData[index].moduleRights[1].checked,\n                                'delete': this.moduleData[index].moduleRights[2].checked,\n                            });\n                        }\n                    }\n                    \n                    for (let index = 0; index < this.masterArray.length; index++) {\n                        \n                        if(this.masterArray[index].view) {\n                            \n                            if(!this.masterArray[index].moduleRights[0].checked) {\n                                this.masterArray[index].moduleRights[0].checked = false;\n                            }\n                            \n                            if(!this.masterArray[index].moduleRights[1].checked) {\n                                this.masterArray[index].moduleRights[1].checked = false;\n                            }\n                            \n                            if(!this.masterArray[index].moduleRights[2].checked) {\n                                this.masterArray[index].moduleRights[2].checked = false;\n                            }\n                            \n                            moduleAccesses.push({\n                                'moduleId': this.masterArray[index].moduleId,\n                                'module': this.masterArray[index].moduleName,\n                                'show': true,\n                                'add': this.masterArray[index].moduleRights[0].checked,\n                                'edit': this.masterArray[index].moduleRights[1].checked,\n                                'delete': this.masterArray[index].moduleRights[2].checked,\n                            });\n                        }\n                    }\n                    \n                    console.log(moduleAccesses);\n                    \n                    \n                    if(this.user_type.role == '1' && moduleAccesses.length == 0) {\n                        \n                        this.isModuleSelected = false;\n                        return false;\n                        \n                    } else {\n                        \n                        this.isModuleSelected = true;;\n                    }\n                    \n                    console.log(moduleAccesses);\n                    this.loader=true;\n                    \n                    this.db.fetchData(this.system_data,'user/add').subscribe((response)=>{\n                        console.log(response);\n                        this.message=response['message'];\n                        this.staffSegments=[];\n                        if(this.message == \"User added successfully\")\n                        {\n                            if(this.user_type.type == '1') {\n                                const accessData = {};\n                                accessData['userId'] = response['data'];\n                                accessData['moduleAccesses'] = moduleAccesses;\n                                console.log(accessData);\n                                this.db.fetchData(accessData,'admin/saveaccess').subscribe((responseData)=>{\n                                    console.log(responseData);\n                                    this.loader=false;\n                                    this.message=responseData['message'];\n                                    this.toast.openSucess('User added successfully','');\n                                    this.router.navigate(['/system-user-list'])\n                                });\n                            } else {\n                                this.loader=false;\n                                this.toast.openSucess('User added successfully','');\n                                this.router.navigate(['/system-user-list'])\n                            }\n                        } else {\n                            this.loader=false;\n                            this.alrt.alertWarning(this.message);\n                        }\n                    });\n                }\n            }\n            \n            \n            active:any = {};\n            toggleterritory(key,action)\n            {\n                console.log(action);\n                console.log(key);\n                if(action == 'open')\n                { this.active[key] = true; }\n                if(action == 'close')\n                { this.active[key] = false;}\n                console.log(this.active);\n            }\n            \n            \n            userActionHandler(userId, isChecked) {\n                \n                \n                for (let index = 0; index < this.juniorList.length; index++) {\n                    \n                    if(this.juniorList[index].checked) {\n                        \n                        this.loader = true;\n                        console.log(this.juniorList[index].userId);\n                        \n                        this.db.fileData(this.juniorList[index].userId,'user/detail/').subscribe((response)=>{\n                            \n                            console.log(response);  \n                            this.loader=false;\n                            \n                            if(response)\n                            {\n                                this.users_territory = response['data']['userTerritories'];\n                                console.log(this.users_territory);\n                                \n                                for(let i=0;i<this.territoryList.length;i++)\n                                {\n                                    for(let j=0;j<this.users_territory.length;j++)\n                                    {\n                                        if(this.territoryList[i]['territoryName']==this.users_territory[j]['territoryName'])\n                                        {\n                                            this.territoryList[i].check=true;\n                                            console.log(this.territoryList);\n                                        }\n                                        \n                                    }\n                                }\n                            };\n                            \n                        });\n                    }\n                }\n            }\n            \n            \n            get_user_territory(userId)\n            {\n                this.loader=true;\n                console.log(userId);\n                \n                this.db.fileData(userId,'user/detail/').subscribe((response)=>{\n                    \n                    console.log(response);  \n                    this.loader=false;\n                    \n                    if(response)\n                    {\n                        this.users_territory = response['data']['userTerritories'];\n                        \n                        console.log(this.users_territory);\n                        \n                        for(let i=0;i<this.territoryList.length;i++)\n                        {\n                            for(let j=0;j<this.users_territory.length;j++)\n                            {\n                                if(this.territoryList[i]['territoryName']==this.users_territory[j]['territoryName'])\n                                {\n                                    this.territoryList[i].check=true;\n                                    console.log(this.territoryList);\n                                }\n                                \n                            }\n                        }\n                    };\n                });\n            }\n            \n            \n            state_array_filter(state)\n            {\n                this.tmpstateList=[];\n                let value=state.toUpperCase();\n                this.tmpstateList=[];\n                for(var i=0; i<this.statelist.length; i++)\n                {\n                    if(this.statelist[i].toUpperCase().search(value) !==-1)\n                    {\n                        this.tmpstateList.push(this.statelist[i]);\n                    }\n                }\n                console.log(this.tmpstateList);\n            }\n            \n            district_array_filter(district)\n            {\n                this.district1=[];\n                let value=district.toUpperCase();\n                for(var i=0; i<this.tmpdistrictList.length; i++)\n                {\n                    if(this.tmpdistrictList[i]['districtName'].toUpperCase().search(value) !==-1)\n                    {\n                        this.district1.push(this.tmpdistrictList[i]);\n                    }\n                }\n            }\n            \n            city_array_filter(city)\n            {\n                console.log(city);\n                console.log(this.tmpcityList);\n                \n                this.cities=[];\n                let value=city.toUpperCase();\n                for(var i=0; i<this.tmpcityList.length; i++)\n                {\n                    if(this.tmpcityList[i]['cityName'].toUpperCase().search(value) !==-1)\n                    {\n                        this.cities.push(this.tmpcityList[i]);\n                    }\n                }\n            }\n            pin_array_filter(pin)\n            {\n                this.areas=[];\n                console.log(this.tmpPinList);\n                \n                let value=pin;\n                console.log(value);\n                \n                for(var i=0; i<this.tmpPinList.length; i++)\n                {\n                    if(this.tmpPinList[i].toString().search(value) !==-1)\n                    {\n                        this.areas.push(this.tmpPinList[i]);\n                    }\n                }\n            }\n            \n            officedistrict_array_filter(district)\n            {\n                this.districtOffice1=[];\n                let value=district.toUpperCase();\n                for(var i=0; i<this.tmpofficedistrict.length; i++)\n                {\n                    if(this.tmpofficedistrict[i]['districtName'].toUpperCase().search(value) !==-1)\n                    {\n                        this.districtOffice1.push(this.tmpofficedistrict[i]);\n                    }\n                }\n            }\n            \n            officecity_array_filter(city)\n            {\n                console.log(city);\n                console.log(this.tmpofficecitylist);\n                \n                this.citiesOffice=[];\n                let value=city.toUpperCase();\n                for(var i=0; i<this.tmpofficecitylist.length; i++)\n                {\n                    if(this.tmpofficecitylist[i]['cityName'].toUpperCase().search(value) !==-1)\n                    {\n                        this.citiesOffice.push(this.tmpofficecitylist[i]);\n                    }\n                }\n            }\n            \n            \n            officepin_array_filter(pin)\n            {\n                this.areasOffice=[];\n                console.log(this.tmpPinList);\n                \n                let value=pin;\n                console.log(value);\n                \n                for(var i=0; i<this.tmpofficePinlist.length; i++)\n                {\n                    if(this.tmpofficePinlist[i].toString().search(value) !==-1)\n                    {\n                        this.areasOffice.push(this.tmpofficePinlist[i]);\n                    }\n                }\n            }\n            \n            MobileNumber(event: any) \n            {\n                const pattern = /[0-9\\+\\-\\ ]/;\n                let inputChar = String.fromCharCode(event.charCode);\n                if (event.keyCode != 8 && !pattern.test(inputChar)) \n                {event.preventDefault(); }\n                \n            }\n        }\n        ","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/vendor-detail\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>Ritesh Pvt Ltd.</h2>\\n        <p class=\\\"light\\\">Vendor</p>\\n      </div>\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"qr-collaps\\\">\\n            <mat-accordion>\\n              <mat-expansion-panel class=\\\"first-panel\\\">\\n                <mat-expansion-panel-header class=\\\"first-header\\\">\\n                  <mat-panel-title>\\n                    DPNAHO0010 - C.B.R 250 NON ABS TYPE- R (3)\\n                  </mat-panel-title>\\n                </mat-expansion-panel-header>\\n                <div class=\\\"first-step\\\">\\n                  <mat-expansion-panel class=\\\"second-panel second-bg\\\">\\n                    <mat-expansion-panel-header class=\\\"second-header\\\">\\n                      <div class=\\\"head-tab\\\">\\n                        <ul>\\n                          <li>\\n                            <p>Section</p>\\n                            <p>Master (1)</p>\\n                          </li>\\n                          <li>\\n                            <p>Serial No</p>\\n                            <p>#ABCD12345678910</p>\\n                          </li>\\n                          <li>\\n                            <p>QR Code</p>\\n                            <img src=\\\"assets/img/qr.svg\\\">\\n                          </li>\\n                          <li>\\n                            <p>Print</p>\\n                            <img src=\\\"assets/img/printer.svg\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"panel-body\\\">\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (1)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (2)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (3)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                  <mat-expansion-panel class=\\\"second-panel second-bg\\\">\\n                    <mat-expansion-panel-header class=\\\"second-header\\\">\\n                      <div class=\\\"head-tab\\\">\\n                        <ul>\\n                          <li>\\n                            <p>Section</p>\\n                            <p>Master (1)</p>\\n                          </li>\\n                          <li>\\n                            <p>Serial No</p>\\n                            <p>#ABCD12345678910</p>\\n                          </li>\\n                          <li>\\n                            <p>QR Code</p>\\n                            <img src=\\\"assets/img/qr.svg\\\">\\n                          </li>\\n                          <li>\\n                            <p>Print</p>\\n                            <img src=\\\"assets/img/printer.svg\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"panel-body\\\">\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (1)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (2)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                  <mat-expansion-panel class=\\\"second-panel second-bg\\\">\\n                    <mat-expansion-panel-header class=\\\"second-header\\\">\\n                      <div class=\\\"head-tab\\\">\\n                        <ul>\\n                          <li>\\n                            <p>Section</p>\\n                            <p>Master (1)</p>\\n                          </li>\\n                          <li>\\n                            <p>Serial No</p>\\n                            <p>#ABCD12345678910</p>\\n                          </li>\\n                          <li>\\n                            <p>QR Code</p>\\n                            <img src=\\\"assets/img/qr.svg\\\">\\n                          </li>\\n                          <li>\\n                            <p>Print</p>\\n                            <img src=\\\"assets/img/printer.svg\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"panel-body\\\">\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (2)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Master (1)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                </div>    \\n              </mat-expansion-panel>\\n              \\n              <mat-expansion-panel class=\\\"first-panel\\\">\\n                <mat-expansion-panel-header class=\\\"first-header\\\">\\n                  <mat-panel-title>\\n                    DPNAHO0010 - C.B.R 250 NON ABS TYPE- R (3)\\n                  </mat-panel-title>\\n                </mat-expansion-panel-header>\\n                <div class=\\\"first-step\\\">\\n                  <mat-expansion-panel class=\\\"second-panel second-bg\\\">\\n                    <mat-expansion-panel-header class=\\\"second-header\\\">\\n                      <div class=\\\"head-tab\\\">\\n                        <ul>\\n                          <li>\\n                            <p>Section</p>\\n                            <p>Master (1)</p>\\n                          </li>\\n                          <li>\\n                            <p>Serial No</p>\\n                            <p>#ABCD12345678910</p>\\n                          </li>\\n                          <li>\\n                            <p>QR Code</p>\\n                            <img src=\\\"assets/img/qr.svg\\\">\\n                          </li>\\n                          <li>\\n                            <p>Print</p>\\n                            <img src=\\\"assets/img/printer.svg\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"panel-body\\\">\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (1)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (2)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (3)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                  <mat-expansion-panel class=\\\"second-panel second-bg\\\">\\n                    <mat-expansion-panel-header class=\\\"second-header\\\">\\n                      <div class=\\\"head-tab\\\">\\n                        <ul>\\n                          <li>\\n                            <p>Section</p>\\n                            <p>Master (1)</p>\\n                          </li>\\n                          <li>\\n                            <p>Serial No</p>\\n                            <p>#ABCD12345678910</p>\\n                          </li>\\n                          <li>\\n                            <p>QR Code</p>\\n                            <img src=\\\"assets/img/qr.svg\\\">\\n                          </li>\\n                          <li>\\n                            <p>Print</p>\\n                            <img src=\\\"assets/img/printer.svg\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"panel-body\\\">\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (1)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (2)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                  <mat-expansion-panel class=\\\"second-panel second-bg\\\">\\n                    <mat-expansion-panel-header class=\\\"second-header\\\">\\n                      <div class=\\\"head-tab\\\">\\n                        <ul>\\n                          <li>\\n                            <p>Section</p>\\n                            <p>Master (1)</p>\\n                          </li>\\n                          <li>\\n                            <p>Serial No</p>\\n                            <p>#ABCD12345678910</p>\\n                          </li>\\n                          <li>\\n                            <p>QR Code</p>\\n                            <img src=\\\"assets/img/qr.svg\\\">\\n                          </li>\\n                          <li>\\n                            <p>Print</p>\\n                            <img src=\\\"assets/img/printer.svg\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"panel-body\\\">\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (2)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Master (1)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                </div>    \\n              </mat-expansion-panel>\\n              \\n              <mat-expansion-panel class=\\\"first-panel\\\">\\n                <mat-expansion-panel-header class=\\\"first-header\\\">\\n                  <mat-panel-title>\\n                    DPNAHO0010 - C.B.R 250 NON ABS TYPE- R (3)\\n                  </mat-panel-title>\\n                </mat-expansion-panel-header>\\n                <div class=\\\"first-step\\\">\\n                  <mat-expansion-panel class=\\\"second-panel second-bg\\\">\\n                    <mat-expansion-panel-header class=\\\"second-header\\\">\\n                      <div class=\\\"head-tab\\\">\\n                        <ul>\\n                          <li>\\n                            <p>Section</p>\\n                            <p>Master (1)</p>\\n                          </li>\\n                          <li>\\n                            <p>Serial No</p>\\n                            <p>#ABCD12345678910</p>\\n                          </li>\\n                          <li>\\n                            <p>QR Code</p>\\n                            <img src=\\\"assets/img/qr.svg\\\">\\n                          </li>\\n                          <li>\\n                            <p>Print</p>\\n                            <img src=\\\"assets/img/printer.svg\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"panel-body\\\">\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (1)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (2)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (3)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                  <mat-expansion-panel class=\\\"second-panel second-bg\\\">\\n                    <mat-expansion-panel-header class=\\\"second-header\\\">\\n                      <div class=\\\"head-tab\\\">\\n                        <ul>\\n                          <li>\\n                            <p>Section</p>\\n                            <p>Master (1)</p>\\n                          </li>\\n                          <li>\\n                            <p>Serial No</p>\\n                            <p>#ABCD12345678910</p>\\n                          </li>\\n                          <li>\\n                            <p>QR Code</p>\\n                            <img src=\\\"assets/img/qr.svg\\\">\\n                          </li>\\n                          <li>\\n                            <p>Print</p>\\n                            <img src=\\\"assets/img/printer.svg\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"panel-body\\\">\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (1)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (2)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                  <mat-expansion-panel class=\\\"second-panel second-bg\\\">\\n                    <mat-expansion-panel-header class=\\\"second-header\\\">\\n                      <div class=\\\"head-tab\\\">\\n                        <ul>\\n                          <li>\\n                            <p>Section</p>\\n                            <p>Master (1)</p>\\n                          </li>\\n                          <li>\\n                            <p>Serial No</p>\\n                            <p>#ABCD12345678910</p>\\n                          </li>\\n                          <li>\\n                            <p>QR Code</p>\\n                            <img src=\\\"assets/img/qr.svg\\\">\\n                          </li>\\n                          <li>\\n                            <p>Print</p>\\n                            <img src=\\\"assets/img/printer.svg\\\">\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"panel-body\\\">\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Secondary (2)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                      <mat-expansion-panel class=\\\"second-panel third-panel second-bg\\\">\\n                        <mat-expansion-panel-header class=\\\"second-header\\\">\\n                          <div class=\\\"head-tab\\\">\\n                            <ul>\\n                              <li>\\n                                <p>Section</p>\\n                                <p>Master (1)</p>\\n                              </li>\\n                              <li>\\n                                <p>Serial No</p>\\n                                <p>#ABCD12345678910</p>\\n                              </li>\\n                              <li>\\n                                <p>QR Code</p>\\n                                <img src=\\\"assets/img/qr.svg\\\">\\n                              </li>\\n                              <li>\\n                                <p>Print</p>\\n                                <img src=\\\"assets/img/printer.svg\\\">\\n                              </li>\\n                            </ul>\\n                          </div>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"panel-body\\\">\\n                          <div class=\\\"table-box left-right-24\\\">\\n                            <div class=\\\"heading\\\">\\n                              <h2>Primary</h2>\\n                              <a class=\\\"print-btn\\\" mat-button>Print All</a>\\n                            </div>\\n                            <div class=\\\"cs-table\\\">\\n                              <div class=\\\"table-head\\\">\\n                                <table> \\n                                  <tr >\\n                                    <th class=\\\"w80\\\">S No.</th>\\n                                    <th class=\\\"w250\\\">Serial No.</th>  \\n                                    <th class=\\\"w150\\\">QR Code</th>  \\n                                    <th>Print</th>  \\n                                  </tr>\\n                                </table>\\n                              </div>\\n                              \\n                              <div class=\\\"table-container\\\">\\n                                <div class=\\\"table-content none-shadow\\\">\\n                                  <table>\\n                                    <tr>\\n                                      <td class=\\\"w80\\\">1</td>\\n                                      <td class=\\\"w250\\\">#ABCD12345678910</td>  \\n                                      <td class=\\\"w150\\\"><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                    <tr>\\n                                      <td>2</td>\\n                                      <td>#ABCD12345678910</td>  \\n                                      <td><img src=\\\"assets/img/qr.svg\\\" class=\\\"h20\\\"></td>\\n                                      <td>\\n                                        <a class=\\\"link-btn\\\"  mat-button>Print</a>\\n                                      </td> \\n                                    </tr>\\n                                  </table>\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                </div>    \\n              </mat-expansion-panel>\\n\\n            </mat-accordion>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-qr-code-detail',\n  templateUrl: './qr-code-detail.component.html'\n})\nexport class QrCodeDetailComponent implements OnInit {\n\n  step = 0;\n  loader:any=true;\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.valid && onSubmit()\\\">\\n<div class=\\\"main-container\\\">\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/vendor.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Vendor</h2>\\n        <p>Add New Vendor</p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"container-outer\\\">\\n      <div class=\\\"container\\\" >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>BASIC INFORMATION</h2>\\n              </div>\\n              <div class=\\\"from-fields\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\" >\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Company Name\\\" id=\\\"vendorName\\\" #vendorName=\\\"ngModel\\\" name=\\\"vendorName\\\" #vendorName=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : vendorName.invalid } \\\" [(ngModel)]=\\\"vendor_form.vendorName\\\" required>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && vendorName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"vendorName.errors.required\\\">Vendor Name is required</mat-error>\\n                          </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4\\\">\\n                    <div class=\\\"control-field\\\" >\\n                        <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Vendor Code\\\" id=\\\"vendorCode\\\"  name=\\\"vendorCode\\\" #vendorCode=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : vendorCode.invalid } \\\" [(ngModel)]=\\\"vendor_form.vendorCode\\\" required>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && vendorCode.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <mat-error *ngIf=\\\"vendorCode.errors.required\\\">Vendor Code is required</mat-error>\\n                          </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4\\\">\\n                      <div class=\\\"control-field\\\" >\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                              <input matInput placeholder=\\\"GSt No Code\\\" id=\\\"gstNo\\\" minlength=\\\"15\\\" maxlength=\\\"15\\\" min=\\\"0\\\" name=\\\"gstNo\\\" #gstNo=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : gstNo.invalid } \\\" [(ngModel)]=\\\"vendor_form.gstNo\\\" required>\\n                            </mat-form-field>\\n                            <mat-error *ngIf=\\\"f.submitted && gstNo.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"gstNo.errors.required\\\">GST No. is required</mat-error>\\n                            </mat-error>\\n                      </div>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col s4 pr0\\\">\\n                        <div class=\\\"control-field\\\" >\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Contact Person\\\" id=\\\"contactPersonName\\\" (keypress)=\\\"namecheck($event)\\\" name=\\\"contactPersonName\\\" #contactPersonName=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : contactPersonName.invalid } \\\" [(ngModel)]=\\\"vendor_form.contactPersonName\\\" required>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && contactPersonName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"contactPersonName.errors.required\\\">Contact Person is required</mat-error>\\n                            </mat-error>\\n                        </div>\\n                      </div>\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\" >\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Mobile 1\\\" id=\\\"mobile1\\\"  minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" name=\\\"mobile1\\\" #mobile1=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : mobile1.invalid } \\\" [(ngModel)]=\\\"vendor_form.mobile1\\\" required>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && mobile1.invalid && mobile1.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error >mobile must be 10 digit</mat-error>\\n                      </mat-error>\\n                      <mat-error *ngIf=\\\"f.submitted && mobile1.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"mobile1.errors.required\\\">Mobile No. is required</mat-error>\\n                        </mat-error>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col s4\\\">\\n                    <div class=\\\"control-field\\\" >\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Mobile 2\\\" id=\\\"mobile2\\\"  minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" (keypress)=\\\"MobileNumber($event)\\\" name=\\\"mobile2\\\" #mobile2=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : mobile2.invalid } \\\" [(ngModel)]=\\\"vendor_form.mobile2\\\" >\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && mobile2.invalid && mobile2.touched\\\" class=\\\"invalid-feedback\\\">\\n                        <mat-error >mobile must be 10 digit</mat-error>\\n                      </mat-error>\\n                    </div>\\n                  </div>\\n                  \\n                </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col s4 pr0\\\">\\n                        <div class=\\\"control-field\\\" >\\n                          <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                            <input matInput placeholder=\\\"Email\\\" id=\\\"emailid\\\"  name=\\\"emailid\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" #emailid=\\\"ngModel\\\" [ngClass]=\\\"{'has-error' : emailid.invalid } \\\" [(ngModel)]=\\\"vendor_form.emailid\\\" required>\\n                          </mat-form-field>\\n                          <mat-error *ngIf=\\\"f.submitted && emailid.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <mat-error *ngIf=\\\"emailid.errors.required\\\">E-mail Id is required</mat-error>\\n                            </mat-error>\\n                        </div>\\n                      </div>\\n                  <div class=\\\"col s4 pl0\\\">\\n                    <div class=\\\"control-field\\\" >\\n                      <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                        <input matInput placeholder=\\\"Landline No\\\" id=\\\"landline\\\"  name=\\\"landline\\\" (keypress)=\\\"MobileNumber($event)\\\" #landline=\\\"ngModel\\\" minlength=\\\"6\\\" maxlength=\\\"13\\\" min=\\\"0\\\" [ngClass]=\\\"{'has-error' : landline.invalid } \\\" [(ngModel)]=\\\"vendor_form.landline\\\" required>\\n                      </mat-form-field>\\n                      <mat-error *ngIf=\\\"f.submitted && landline.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"landline.errors.required\\\">Landline is required</mat-error>\\n                        </mat-error>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n              <div class=\\\"sprate-box pt0 mt15\\\">\\n                  <div class=\\\"cs-heading\\\">\\n                    <h2>ADDRESS INFORMATION</h2>\\n                  </div>\\n                  <div class=\\\"from-fields\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col s6 pl0\\\">\\n                        <div class=\\\"control-field\\\">\\n                          <mat-form-field class=\\\"cs-input\\\">\\n                            <textarea matInput placeholder=\\\"Street\\\" name=\\\"street\\\" id=\\\"street\\\" #street=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && street.invalid }\\\" [(ngModel)]=\\\"vendor_form.street\\\" class=\\\"h100\\\" required></textarea>\\n                          </mat-form-field>\\n                        </div>\\n                        <mat-error *ngIf=\\\"f.submitted && street.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <mat-error *ngIf=\\\"street.errors.required\\\">street is required</mat-error>\\n                        </mat-error>\\n                      </div>\\n                      \\n                      <div class=\\\"col s6 pr0\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s6\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <mat-select placeholder=\\\"State\\\" name=\\\"vendorState\\\" id=\\\"vendorState\\\" [(ngModel)]=\\\"vendor_form.vendorState\\\"  #vendorState=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && vendorState.invalid }\\\" required>\\n                                  <mat-option  (click)=\\\"get_district()\\\" *ngFor='let state of statelist' value=\\\"{{state}}\\\">{{state}}</mat-option>  \\n                                </mat-select>\\n                              </mat-form-field>\\n                              <mat-error *ngIf=\\\"f.submitted && vendorState.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"vendorState.errors.required\\\">State is required</mat-error>\\n                              </mat-error>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col s6 pr0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <mat-select placeholder=\\\"District\\\" name=\\\"district\\\" id=\\\"district\\\" [(ngModel)]=\\\"vendor_form.district\\\"  #district=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && district.invalid }\\\" required >\\n                                  <mat-option (click)=\\\"get_city()\\\"  value=\\\"{{district.districtName}}\\\" *ngFor=\\\"let district of district1\\\">{{district.districtName}}</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                              <mat-error *ngIf=\\\"f.submitted && district.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"district.errors.required\\\"> District is required</mat-error>\\n                              </mat-error>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col s6\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <mat-select placeholder=\\\"City\\\" (keyup.enter)=\\\"get_pincode(city.stateMasterId)\\\" id=\\\"city\\\" name=\\\"city\\\" [(ngModel)]=\\\"vendor_form.city\\\" #city=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && city.invalid }\\\" required >\\n                                  <mat-option (click)=\\\"get_pincode(city.stateMasterId)\\\" *ngFor=\\\"let city of cities\\\"  value=\\\"{{city.cityName}}\\\">{{city.cityName}}</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                              <mat-error *ngIf=\\\"f.submitted && city.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"city.errors.required\\\"> City is required</mat-error>\\n                              </mat-error>\\n                            </div>\\n                          </div>\\n                          \\n                          <div class=\\\"col s6 pr0\\\">\\n                            <div class=\\\"control-field\\\">\\n                              <mat-form-field class=\\\"cs-input infix-bodr8\\\">\\n                                <mat-select placeholder=\\\"Pincode\\\"  name=\\\"pincode\\\" id=\\\"pincode\\\" [(ngModel)]=\\\"vendor_form.pincode\\\"  #pincode=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && pincode.invalid }\\\" required>\\n                                  <mat-option *ngFor=\\\"let pin of areas\\\"  value=\\\"{{pin}}\\\">{{pin}}</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                              <mat-error *ngIf=\\\"f.submitted && pincode.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <mat-error *ngIf=\\\"pincode.errors.required\\\"> Pincode is required</mat-error>\\n                              </mat-error>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        \\n                        \\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div  class=\\\"col s12\\\">\\n            <div class=\\\"cs-btn fixedd mt32 text-right\\\">\\n              <div class=\\\"in-btn\\\">\\n                <button mat-raised-button color=\\\"accent\\\" >Save</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n</form>\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit, Renderer2 ,PLATFORM_ID, Inject} from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport * as $ from 'jquery';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-vendor-add',\n  templateUrl: './vendor-add.component.html'\n})\nexport class VendorAddComponent implements OnInit {\n  vendor_form:any={};\n  loader:any=false;\n  st:any=[];\n  statelist:any=[];\n  district1:any=[];\n  districts1:any=[];\ndistrictlist:any=[];\ncitylist:any=[];\ncities:any=[];\nareas:any=[];\nstatemasteroid:any;\n  constructor(public db:ConstantService,\n    public toast:SnackBarOverview,\n    public router:Router,\n    private renderer: Renderer2,\n    public msg:DialogComponent,@Inject(PLATFORM_ID) private platformId: Object) {\n      this.get_state();\n      this.renderer.removeClass(document.body, 'nav-active');\n      localStorage.setItem('leadId', JSON.stringify(''));\n}\n\n  ngOnInit() {\n  }\n\n  get_state(){\n    console.log(\"stats runnning.....\");\n    this.loader=true;\n    this.db.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.statelist=response['data'];\n    });\n  }\n  get_district(){\n    this.loader=true;\n    console.log(\"district running....\");\n    console.log(this.vendor_form.vendorState);\n    this.st=Array(this.vendor_form.vendorState)\n    this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n      this.loader=false;\n      console.log(response);\n      this.districtlist=response['data'];\n      this.district1=this.districtlist[0].distrcits;\n      console.log(this.district1);\n    });\n  }\n  get_city() {\n    this.loader=true;\n    console.log(this.vendor_form.vendorState);\n    console.log(this.vendor_form.district);\n    console.log(\"city runniyng..\");\n    this.db.fetchData(Array({\"stateName\":this.vendor_form.vendorState,\"distrcits\":Array({\"districtName\":this.vendor_form.district})}),'city/list').subscribe((response)=>{\n      console.log(response);\n      this.loader=false\n      this.citylist=response['data'];\n      this.districts1=this.citylist[0].distrcits;\n      this.cities=this.districts1[0].cities;\n      console.log(this.cities);\n      let statemasterdata=[];\n      statemasterdata=this.cities.filter(x => x.cityName==this.vendor_form.city);\n      console.log(statemasterdata);\n      this.statemasteroid=statemasterdata[0]['stateMasterId'];\n      \n    });\n  }\n  get_pincode(stateMasterId){\n    this.loader=true;\n    console.log(stateMasterId);\n    let cityarray=[];\n      cityarray[0]=stateMasterId;\n    this.db.fetchData({'stateMasterIds':cityarray,},'city/pincodes').subscribe((response)=>{\n      console.log(response);\n      this.loader=false\n      this.citylist=response['data'];\n      this.areas=response['data'][0].pinCodes;\n      console.log( this.areas);\n    });\n  }\n  MobileNumber(event: any) \n  {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n   namecheck(event: any) \n  {\n    const pattern = /[A-Z\\+\\a-z\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n\n\n  onSubmit(){\n    console.log(this.vendor_form);\n    this.db.fetchData(this.vendor_form,'createvendor').subscribe((response)=>\n     {\n            console.log(response)\n            if(response['message']==\"Success\")\n            {\n              this.toast.openSucess('Vendor added successfully','');\n              this.router.navigate(['/vendor-list']);\n     } else if(response['message']==\"The vendor already exists.\"){\n      this.msg.error('The vendor already exists..');\n     }\n     else {\n      this.msg.error('Vendor is not added..');\n     }\n    })\n}\n}\n","module.exports = \"<div class=\\\"main-container\\\" >\\n  <div *ngIf=\\\"loader\\\"> \\n    <div class=\\\"cs-loader\\\">\\n      <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n    </div>\\n  </div>\\n  <div class=\\\"middle-container\\\">\\n    <div class=\\\"page-heading\\\">\\n      <div class=\\\"heading-text bc-space\\\">\\n        <div class=\\\"back-btn\\\">\\n          <a mat-button routerLink=\\\"/vendor-list\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\">arrow_right_alt</i></a>\\n        </div>\\n        <h2>{{vendordetail.vendorName}}</h2>\\n        <p class=\\\"light\\\">Vendor</p>\\n      </div>\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"container-outer\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"details-info\\\">\\n            <div class=\\\"basic-details\\\">\\n              <div class=\\\"profile-info\\\">\\n                <ul class=\\\"flex-start\\\">\\n                    <li>\\n                        <div class=\\\"cs-box\\\">\\n                          <img src=\\\"assets/img/code.svg\\\" class=\\\"fix-img\\\">\\n                          <span>Vendor Code</span>\\n                          <p class=\\\"link-clr\\\">#{{vendordetail.vendorCode}}</p>\\n                          <!-- <a class=\\\"edit-icon\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\">\\n                            <i class=\\\"material-icons\\\">create</i>\\n                          </a> -->\\n                        </div>\\n                      </li>\\n                      <li>\\n                          <div class=\\\"cs-box\\\">\\n                            <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\">\\n                            <span>GST No</span>\\n                            <p>{{vendordetail.gstNo}}</p>\\n                            <a *ngIf=\\\"userType==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" (click)=\\\"openEmail('gstNo')\\\" matRipple matTooltip=\\\"EDIT\\\">\\n                              <i class=\\\"material-icons\\\">create</i>\\n                            </a>\\n                          </div>\\n                        </li>\\n                      <li>\\n                          <div class=\\\"cs-box\\\">\\n                            <img src=\\\"assets/img/phone.svg\\\" class=\\\"fix-img\\\">\\n                            <span>Landline</span>\\n                            <p>{{vendordetail.landline}}</p>\\n                            <a *ngIf=\\\"userType==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" (click)=\\\"openEmail('landline')\\\" matRipple matTooltip=\\\"EDIT\\\">\\n                              <i class=\\\"material-icons\\\">create</i>\\n                            </a>\\n                          </div>\\n                        </li>\\n                </ul>\\n                <ul class=\\\"flex-start\\\">\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/applicant.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Contact Person</span>\\n                      <p class=\\\"link-clr\\\">{{vendordetail.contactPersonName}}</p>\\n                      <a *ngIf=\\\"userType==1\\\" class=\\\"edit-icon\\\" (click)=\\\"openEmail('contact_person')\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\">\\n                        <i class=\\\"material-icons\\\">create</i>\\n                      </a>\\n                    </div>\\n                  </li>\\n                  \\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/mobile.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Mobile 1</span>\\n                      <p>{{vendordetail.mobile1}}</p>\\n                      <a *ngIf=\\\"userType==1\\\" class=\\\"edit-icon\\\" (click)=\\\"openEmail('mobile')\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\">\\n                        <i class=\\\"material-icons\\\">create</i>\\n                      </a>\\n                    </div>\\n                  </li>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/mobile.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Mobile 2</span>\\n                      <p>{{vendordetail.mobile2}}</p>\\n                      <a *ngIf=\\\"userType==1\\\" class=\\\"edit-icon\\\" (click)=\\\"openEmail('mobile2')\\\" color=\\\"accent\\\" matRipple matTooltip=\\\"EDIT\\\">\\n                        <i class=\\\"material-icons\\\">create</i>\\n                      </a>\\n                    </div>\\n                  </li>\\n                </ul>\\n                <ul>\\n                  <li>\\n                    <div class=\\\"cs-box\\\">\\n                      <img src=\\\"assets/img/gmail.svg\\\" class=\\\"fix-img\\\">\\n                      <span>Email</span>\\n                      <p>{{vendordetail.emailid}}</p>\\n                      <a *ngIf=\\\"userType==1\\\" class=\\\"edit-icon\\\" color=\\\"accent\\\" (click)=\\\"openEmail('email')\\\" matRipple matTooltip=\\\"EDIT\\\">\\n                        <i class=\\\"material-icons\\\">create</i>\\n                      </a>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div  class=\\\"row\\\">\\n        <div class=\\\"col s8\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"full-address\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>ADDRESS</h2>\\n              </div>\\n              <a *ngIf=\\\"userType==1\\\"  mat-button class=\\\"address-edit\\\" (click)=\\\"openEmail('address')\\\" matTooltip=\\\"EDIT\\\"><i class=\\\"material-icons\\\">edit</i></a>\\n              <div class=\\\"nationality\\\">\\n                <img src=\\\"assets/img/india.svg\\\" alt=\\\"\\\">\\n                <p>India</p>\\n              </div>\\n              <div class=\\\"ds-from-fields\\\">\\n                  <div class=\\\"cs-row\\\">\\n                      <div class=\\\"static-info\\\">\\n                        <p>Street</p>\\n                        <p>{{vendordetail.street}} </p>\\n                      </div>\\n                    </div>\\n                <div class=\\\"cs-row\\\">\\n                  <div class=\\\"static-info\\\">\\n                    <p>State</p>\\n                    <p>{{vendordetail.vendorState}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>District</p>\\n                    <p>{{vendordetail.district}}</p>\\n                  </div>\\n                  <div class=\\\"static-info\\\">\\n                    <p>City</p>\\n                    <p>{{vendordetail.city}}</p>\\n                  </div>\\n                  <div class=\\\"static-info w100\\\" style=\\\"min-width: 100px;\\\">\\n                    <p>Pin Code</p>\\n                    <p>{{vendordetail.pincode}}</p>\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"col s4\\\">\\n          <div class=\\\"sprate-box padding0\\\">\\n            <div class=\\\"cs-logs\\\">\\n              <div class=\\\"top-heading\\\">\\n                <h2>ACCOUNT INFO</h2>\\n              </div>\\n              <div class=\\\"logs-outer\\\">\\n                <div class=\\\"logs-list\\\">\\n                  <div class=\\\"account-details\\\">\\n                    <ul>\\n                      <!-- <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <div class=\\\"cs-account\\\">\\n                              <p>User Name</p>\\n                              <h5>{{vendordetail.emailid}}</h5>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </li> -->\\n                      <!-- <li>\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <div class=\\\"cs-account\\\">\\n                              <p>Password</p>\\n                              <input type=\\\"password\\\" placeholder=\\\"********\\\">\\n                              <i class=\\\"material-icons pass-icon pass-show\\\">visibility</i>\\n                              <i class=\\\"material-icons pass-icon pass-hide\\\">visibility_off</i>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </li> -->\\n                      <li class=\\\"status-bg\\\">\\n                        <div class=\\\"outer\\\">\\n                          <div class=\\\"inner\\\">\\n                            <div class=\\\"cs-account\\\">\\n                              <p>Status</p>\\n                              <h5 *ngIf=\\\"vendordetail.vendorStatus==true\\\">Active</h5>\\n                              <h5 *ngIf=\\\"vendordetail.vendorStatus==false\\\">Inactive</h5>\\n                              <mat-slide-toggle class=\\\"status-toogle\\\" [checked]=\\\"vendordetail.vendorStatus\\\" (change)=\\\"checkstatus(vendordetail.vendorStatus)\\\" [(ngModel)]=\\\"vendordetail.vendorStatus\\\" color=\\\"warn\\\">&nbsp;</mat-slide-toggle>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </li>\\n                    </ul>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"sprate-box pt0 mt15\\\">\\n            <div class=\\\"cs-heading\\\">\\n              <h2>PURCHASE ORDER</h2>\\n            </div>\\n            <div class=\\\"cs-table left-right-15\\\">\\n              <div class=\\\"table-head\\\">\\n                <table class=\\\"sno-border\\\"> \\n                  <tr >\\n                    <th class=\\\"w40\\\">&nbsp;</th>\\n                    <th class=\\\"w270\\\">Date & Created By </th>  \\n                    <th>P.O No</th>  \\n                    <th class=\\\"w150\\\">Total Item</th>  \\n                    <th class=\\\"w150\\\">QR Code Generat</th> \\n                  </tr>\\n                </table>\\n              </div>\\n              \\n              <div class=\\\"table-container\\\">\\n                <div class=\\\"table-content none-shadow\\\">\\n                  <table class=\\\"sno-border\\\">\\n                    <tr>\\n                      <td class=\\\"w40\\\">1</td>\\n                      <td class=\\\"w270\\\">1 12 Aug 2018, Pankaj</td>  \\n                      <td>\\n                        <a class=\\\"link-btn\\\"  mat-button>#PO2458458</a>\\n                      </td>  \\n                      <td class=\\\"w150\\\">25</td>  \\n                      <td class=\\\"w150 inactive\\\">24</td> \\n                      \\n                    </tr>\\n                    <tr>\\n                      <td>2</td>\\n                      <td>1 12 Aug 2018, Pankaj</td>  \\n                      <td>\\n                        <a class=\\\"link-btn\\\"  mat-button>#PO2458458</a>\\n                      </td>  \\n                      <td>25</td>  \\n                      <td class=\\\"actives\\\">20</td>\\n                    </tr>\\n                    <tr>\\n                      <td>3</td>\\n                      <td>1 12 Aug 2018, Pankaj</td>  \\n                      <td>\\n                        <a class=\\\"link-btn\\\"  mat-button>#PO2458458</a>\\n                      </td>  \\n                      <td>25</td>  \\n                      <td class=\\\"actives\\\">20</td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n              \\n            </div>\\n          </div>\\n        </div>\\n      </div> -->\\n      <!-- <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <div class=\\\"sprate-box pt0 mt15\\\">\\n              <div class=\\\"cs-heading\\\">\\n                <h2>QR CODE REQUEST</h2>\\n              </div>\\n              <div class=\\\"cs-table left-right-15\\\">\\n                <div class=\\\"table-head\\\">\\n                  <table class=\\\"sno-border\\\"> \\n                    <tr >\\n                      <th class=\\\"w40\\\">&nbsp;</th>\\n                      <th class=\\\"w110\\\">Date</th>  \\n                      <th class=\\\"w150\\\">P.O No</th>  \\n                      <th>Item Description</th>  \\n                      <th class=\\\"w80\\\">QTY.</th> \\n                      <th class=\\\"w110\\\">Status</th>\\n                      <th class=\\\"w280\\\">Action</th>\\n                    </tr>\\n                  </table>\\n                </div>\\n                \\n                <div class=\\\"table-container\\\">\\n                  <div class=\\\"table-content none-shadow\\\">\\n                    <table class=\\\"sno-border\\\">\\n                      <tr>\\n                        <td class=\\\"w40\\\">1</td>\\n                        <td class=\\\"w110\\\">12 June 2019</td>  \\n                        <td class=\\\"w150\\\">#PO12345</td>\\n                        <td>Lorem Ipsum is simply text.</td> \\n                        <td class=\\\"w80\\\">20</td>\\n                        <td class=\\\"w110 actives\\\">Generated</td>\\n                        <td class=\\\"w280\\\">\\n                          <a class=\\\"link-btn underline\\\"  mat-button routerLink=\\\"/qr-code-detail\\\" routerLinkActive=\\\"active\\\">VIEW QR CODE</a>\\n                        </td> \\n                      </tr>\\n                      <tr>\\n                        <td>2</td>\\n                        <td>12 June 2019</td>  \\n                        <td>#PO12345</td>\\n                        <td>Lorem Ipsum is simply text.</td> \\n                        <td>20</td>\\n                        <td class=\\\"inactive\\\">Pending</td>\\n                        <td>\\n                          <div class=\\\"cs-btn\\\">\\n                            <div class=\\\"in-btn qr-btn\\\">\\n                              <button mat-raised-button color=\\\"warn\\\" >Reject</button>\\n                              <button mat-raised-button color=\\\"accent\\\" >Generate QR Code</button>\\n                            </div>\\n                          </div>\\n                        </td> \\n                      </tr>\\n                      <tr>\\n                        <td>3</td>\\n                        <td>12 June 2019</td>  \\n                        <td>#PO12345</td>\\n                        <td>Lorem Ipsum is simply text.</td> \\n                        <td>20</td>\\n                        <td class=\\\"inactive\\\">Pending</td>\\n                        <td>\\n                          <div class=\\\"cs-btn\\\">\\n                            <div class=\\\"in-btn qr-btn\\\">\\n                              <button mat-raised-button color=\\\"warn\\\" >Reject</button>\\n                              <button mat-raised-button color=\\\"accent\\\" >Generate QR Code</button>\\n                            </div>\\n                          </div>\\n                        </td> \\n                      </tr>\\n                      <tr>\\n                        <td>4</td>\\n                        <td>12 June 2019</td>  \\n                        <td>#PO12345</td>\\n                        <td>Lorem Ipsum is simply text.</td> \\n                        <td>20</td>\\n                        <td class=\\\"actives\\\">Generated</td>\\n                        <td><a class=\\\"link-btn underline\\\"  mat-button routerLink=\\\"/qr-code-detail\\\" routerLinkActive=\\\"active\\\">VIEW QR CODE</a></td> \\n                      </tr>\\n                      <tr>\\n                        <td>5</td>\\n                        <td>12 June 2019</td>  \\n                        <td>#PO12345</td>\\n                        <td>Lorem Ipsum is simply text.</td> \\n                        <td>20</td>\\n                        <td class=\\\"inactive\\\">Pending</td>\\n                        <td>\\n                          <div class=\\\"cs-btn\\\">\\n                            <div class=\\\"in-btn qr-btn\\\">\\n                              <button mat-raised-button color=\\\"warn\\\" >Reject</button>\\n                              <button mat-raised-button color=\\\"accent\\\" >Generate QR Code</button>\\n                            </div>\\n                          </div>\\n                        </td> \\n                      </tr>\\n                      <tr>\\n                        <td>6</td>\\n                        <td>12 June 2019</td>  \\n                        <td>#PO12345</td>\\n                        <td>Lorem Ipsum is simply text.</td> \\n                        <td>20</td>\\n                        <td class=\\\"actives\\\">Generated</td>\\n                        <td><a class=\\\"link-btn underline\\\"  mat-button routerLink=\\\"/qr-code-detail\\\" routerLinkActive=\\\"active\\\">VIEW QR CODE</a></td> \\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div> -->\\n        \\n      \\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConstantService } from 'src/app/constant.service';\nimport {MatDialog} from '@angular/material';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { sessionStorage }  from '../../local-storage.service';\nimport { Router } from '@angular/router';\nimport { DialogComponent } from 'src/app/dialog';\nimport { VendorUpdateComponent } from '../vendor-update/vendor-update.component';\n@Component({\n  selector: 'app-vendor-detail',\n  templateUrl: './vendor-detail.component.html'\n})\nexport class VendorDetailComponent implements OnInit {\n  loader:any=false;\n  vendorcode:any;\n  userdata:any={};\n  role:any;\n  vendordetail:any={};\n  resultVendorStatus:any;\n  userType:any;\n  constructor(public router:Router,public toast:SnackBarOverview,public user:sessionStorage,public route:ActivatedRoute,public service:ConstantService,public dialog: MatDialog,public dia:DialogComponent) {\n    this.route.params.subscribe(params=>{\n      console.log(params);\n      console.log(user);\n      this.vendorcode = params.id;\n      this.resultVendorStatus=2;\n      console.log(this.vendorcode);\n      this.userdata=this.user['user']['data'];\n      this.role=this.userdata['role'];\n      this.userType = this.userdata['userType'];\n      console.log(\"this is the uer type = \"+this.userType)\n    });\n   }\n\n\n\n  ngOnInit() {\n    this.get_detail();\n    console.log(this.role);\n    console.log(\"this is the uer type = \"+this.userType)\n  }\n\n\n\n\n  get_detail(){\n    this.loader=true;\n    console.log(this.vendorcode);\n    this.service.fetchData({'resultVendorStatus':this.resultVendorStatus,'vendorCode':this.vendorcode},'/getallvendors').subscribe((response)=>\n    {\n          console.log(response)\n          if(response['message']==\"Success\")\n          {\n            this.loader=false;\n            this.vendordetail=response['data'][0];\n            console.log(this.vendordetail);\n          }\n          else\n          {\n            this.loader=false;\n            this.vendordetail={};\n          }\n          console.log(this.vendordetail);\n    });\n  }\n\n\n  openEmail(check) {\n    console.log(check);\n    this.vendordetail['typeofupdate']=check;\n    console.log(\"chech assign user update\");\n    const dialogRef = this.dialog.open(VendorUpdateComponent,{width : '1000px' ,data:this.vendordetail});\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      this.get_detail();\n    });\n  }\n\n\n  checkstatus(status){\n    console.log(status)\n    this.loader = true;\n    this.service.fetchData({'vendorStatus':status,'vendorCode':this.vendorcode},'changevendorstatus').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      if( response['message']==\"Success\")\n      {\n        this.toast.openSucess('Updated successfully','');\n      }\n      else\n      {\n        this.toast.openError('Something went wrong Please Try Again!!','');\n      }\n  });\n    \n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"cs-loader\\\" *ngIf=\\\"loader\\\"> \\n    <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\">\\n  </div>\\n  \\n  <div class=\\\"middle-container pb15\\\">\\n    <div class=\\\"page-heading\\\">\\n      <img src=\\\"assets/img/vendor.svg\\\" class=\\\"h-icon\\\">\\n      <div class=\\\"heading-text\\\">\\n        <h2>Vendors</h2>\\n        <p>Total Vendor <span *ngIf='vendorList'>{{vendorList.length}}</span><span *ngIf='!vendorList'>0</span></p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  <div class=\\\"container-outer pt0\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <div class=\\\"cs-table left-right-20\\\">\\n            <div class=\\\"sticky-head\\\">\\n              <div class=\\\"table-head\\\">\\n                <table class=\\\"sno-border\\\"> \\n                  <tr >\\n                    <th class=\\\"w40\\\">&nbsp;</th>\\n                    <th class=\\\"w200\\\">Comapny Name </th>  \\n                    <th class=\\\"w150\\\"> Vendor Code</th>  \\n                    <th class=\\\"w170\\\">Contact Person</th>  \\n                    <th class=\\\"w100\\\">Mobile No</th> \\n                    <th>Address</th>\\n                    <th class=\\\"w100 text-center\\\">QR Code Request</th>\\n                    <th class=\\\"w100\\\">Status</th>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"table-head bdrt\\\">\\n                <table class=\\\"sno-border\\\">\\n                    <tr> <th class=\\\"w40\\\">&nbsp;</th>\\n                        <th class=\\\"w200\\\" >\\n                            <div class=\\\"th-search\\\">\\n                                <input type=\\\"text\\\" (keyup)=\\\"vendor_list()\\\" name=\\\"vendorName\\\" #vendorName=\\\"ngModel\\\" [(ngModel)]=\\\"filter.vendorName\\\" placeholder=\\\"Search....\\\">\\n                            </div>\\n                        </th>\\n                        <th class=\\\"w150\\\" >\\n                          <div class=\\\"th-search\\\">\\n                              <input type=\\\"text\\\" (keyup)=\\\"vendor_list()\\\" name=\\\"vendorCode\\\" #vendorCode=\\\"ngModel\\\" [(ngModel)]=\\\"filter.vendorCode\\\" placeholder=\\\"Search....\\\">\\n                          </div>\\n                      </th>\\n                        <th class=\\\"w170\\\">\\n                            \\n                              <div class=\\\"th-search\\\">\\n                                <input type=\\\"text\\\" (keyup)=\\\"vendor_list()\\\" name=\\\"contactPersonName\\\" #contactPersonName=\\\"ngModel\\\" [(ngModel)]=\\\"filter.contactPersonName\\\" placeholder=\\\"Search....\\\">\\n                            </div>\\n                            \\n                        </th>\\n                       \\n                        <th class=\\\"w100\\\">\\n                          <div class=\\\"th-search\\\">\\n                            <input type=\\\"text\\\" (keyup)=\\\"vendor_list()\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"filter.mobile\\\" placeholder=\\\"Search....\\\">\\n                        </div>\\n                        </th>\\n                        <th >&nbsp;</th>\\n                        <th class=\\\"w100 text-center\\\" >&nbsp;</th>\\n                        <th class=\\\"w100\\\">\\n                            <div class=\\\"th-search\\\" >\\n                                <mat-select placeholder=\\\"Select Task Priority\\\" id=\\\"resultVendorStatus\\\" name=\\\"resultVendorStatus\\\" [(ngModel)]=\\\"filter.resultVendorStatus\\\" #resultVendorStatus=\\\"ngModel\\\">\\n                                  <mat-option (click)=\\\"vendor_list()\\\" value=\\\"2\\\">All</mat-option> \\n                                  <mat-option (click)=\\\"vendor_list()\\\" value=\\\"1\\\">Active</mat-option>  \\n                                  <mat-option (click)=\\\"vendor_list()\\\" value=\\\"0\\\">Inactive</mat-option>\\n                                </mat-select>\\n                            </div>\\n                        </th>\\n                       \\n                    </tr>\\n                </table>\\n            </div>\\n            </div>\\n\\n            <div class=\\\"table-container\\\">\\n              <div class=\\\"table-content\\\">\\n                <table class=\\\"sno-border\\\">\\n                  <tr *ngFor=\\\"let vendor of vendorList;let i=index\\\">\\n                    <td class=\\\"w40\\\">{{i+1}}</td>\\n                    <td class=\\\"w200\\\"><a class=\\\"link-btn\\\" routerLink=\\\"/vendor-detail/{{vendor.vendorCode}}\\\" routerLinkActive=\\\"active\\\" mat-button>{{vendor.vendorName}}</a></td>  \\n                    <td class=\\\"w150\\\">#{{vendor.vendorCode}}</td>  \\n                    <td class=\\\"w170\\\">{{vendor.contactPersonName}}</td>  \\n                    <td class=\\\"w100\\\">{{vendor.mobile1}}</td> \\n                    <td>{{vendor.street}},{{vendor.city}},{{vendor.district}},{{vendor.vendorState}},{{vendor.pincode}}</td>\\n                    <td class=\\\"w100 text-center\\\"><a class=\\\"link-btn\\\" mat-button>12</a></td>\\n                    <td class=\\\"w100 inactive\\\" *ngIf=\\\"vendor.vendorStatus==false\\\">Inactive</td>\\n                    <td class=\\\"w100 active\\\" *ngIf=\\\"vendor.vendorStatus==true\\\">Active</td>\\n                  </tr>\\n                </table>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"div==true\\\" class=\\\"data-not-available\\\" >\\n              <div class=\\\"outer\\\">\\n                  <div class=\\\"iinear\\\">\\n                      <div class=\\\"figure\\\" matRipple>\\n                          <div class=\\\"header\\\">\\n                              <img src=\\\"assets/img/data-not-available-header.svg\\\" alt=\\\"\\\">\\n                          </div>\\n                          <div class=\\\"description\\\">\\n                              <div class=\\\"img\\\">\\n                                  <i class=\\\"material-icons\\\">error_outline</i>\\n                              </div>\\n                              <div class=\\\"psc\\\">\\n                                  <p>data not available</p>\\n                              </div>\\n                          </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"fixed-multibtn-botm\\\">\\n    <ul>\\n      <li><a  matTooltip=\\\"Add New\\\" routerLink=\\\"/vendor-add\\\" routerLinkActive=\\\"active\\\" matRipple><i class=\\\"material-icons\\\">add</i></a></li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<div class=\\\"h50\\\"></div>\"","import { Component, OnInit } from '@angular/core';\nimport { slideToTop } from '../../router-animation/router-animation.component';\nimport { ConstantService } from 'src/app/constant.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { DialogComponent } from 'src/app/dialog';\nimport { sessionStorage }  from '../../local-storage.service';\n\n@Component({\n  selector: 'app-vendor-list',\n  templateUrl: './vendor-list.component.html'\n})\nexport class VendorListComponent implements OnInit {\nvendorList:any=[];\nloader:boolean;\nmsg:any=[];\nfilter:any={};\ndiv:any=false;\nuserdata:any=[];\nrole:any;\n\nconstructor(public db:ConstantService,public user:sessionStorage, public route:ActivatedRoute, public toast:SnackBarOverview,public dialog:DialogComponent) {\n  this.userdata=this.user['user']['data'];\n  this.role=this.userdata['role'];\n  this.filter.resultVendorStatus=2;\n }\n\n\n  ngOnInit() {\n    this.filter.resultVendorStatus=2;\n    this.vendor_list();\n  }\n  vendor_list(){\n    this.loader=true;\n    this.db.fetchData({'vendorName':this.filter.vendorName,'vendorCode':this.filter.vendorCode,'contactPersonName':this.filter.contactPersonName,'mobile':this.filter.mobile,'resultVendorStatus':this.filter.resultVendorStatus},'/getallvendors').subscribe((response)=>\n    {\n          console.log(response)\n          if(response['data']!='')\n          {\n            this.loader=false;\n            this.div=false;\n            this.vendorList=response['data'];\n            console.log(this.vendorList);\n          }\n          else\n          {\n            console.log(\"no data found\");\n            this.div=true;\n            this.loader=false;\n            this.vendorList=[];\n            \n          }\n          console.log(this.vendorList);\n          console.log(this.div);\n    });\n  }\n\nrefreshlist(){\n    this.vendor_list();\n    this.toast.openSucess('Refreshed successfully!','');\n  }\n}\n","module.exports = \"<div class=\\\"edit-modal\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && updateMobileEmail()\\\"  #f=\\\"ngForm\\\" novalidate>\\n        <div *ngIf=\\\"loader\\\"> \\n            <div class=\\\"cs-loader\\\">\\n              <img src=\\\"assets/img/loader.png\\\" class=\\\"rotate\\\"> \\n            </div>\\n          </div>\\n        \\n        <div *ngIf=\\\"vendordetail.typeofupdate=='email'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Email</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput placeholder=\\\"Email-ID\\\" name=\\\"emailid\\\" value=\\\"emailid\\\" [(ngModel)]=\\\"vendordetail.emailid\\\" #emailid=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && emailid.invalid }\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required>\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!emailid.valid && emailid.touched\\\">\\n                        Please Enter Valid Email!\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"vendordetail.typeofupdate=='contact_person'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Contact Person</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput placeholder=\\\"Name\\\" name=\\\"contactPersonName\\\" (keypress)=\\\"namecheck($event)\\\" value=\\\"contactPersonName\\\" [(ngModel)]=\\\"vendordetail.contactPersonName\\\" #contactPersonName=\\\"ngModel\\\"  [ngClass]=\\\"{ 'is-invalid': f.submitted && contactPersonName.invalid }\\\" required>\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!contactPersonName.valid && contactPersonName.touched\\\">\\n                        Please Enter Name..\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"vendordetail.typeofupdate=='gstNo'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update GST</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput placeholder=\\\"GST\\\" name=\\\"gstNo\\\" value=\\\"gstNo\\\" [(ngModel)]=\\\"vendordetail.gstNo\\\" #gstNo=\\\"ngModel\\\" minlength=\\\"15\\\" maxlength=\\\"15\\\" min=\\\"0\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && gstNo.invalid }\\\" required>\\n                    </mat-form-field>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!gstNo.valid && gstNo.touched\\\">\\n                        Please Enter 15 Digit GST\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"vendordetail.typeofupdate=='mobile'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n            <p class=\\\"heading\\\">Update Mobile</p>\\n            <div class=\\\" from-fields\\\">\\n                <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"mobile\\\" name=\\\"mobile1\\\"   value=\\\"mobile1\\\" [(ngModel)]=\\\"vendordetail.mobile1\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" #mobile1=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobile1.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\" required>\\n                    </mat-form-field>\\n                    \\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!mobile1.valid && mobile1.touched\\\">\\n                        Please Enter Valid Mobile\\n                    </div>\\n                    <mat-error *ngIf=\\\"f.submitted && mobile1.invalid && mobile1.touched\\\" class=\\\"invalid-feedback\\\">\\n                      <mat-error >mobile must be 10 digit</mat-error>\\n                    </mat-error>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n        <div *ngIf=\\\"vendordetail.typeofupdate=='mobile2'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n          <p class=\\\"heading\\\">Update Mobile</p>\\n          <div class=\\\" from-fields\\\">\\n              <div class=\\\"control-field\\\">\\n                  <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                      <input matInput type=\\\"text\\\" placeholder=\\\"mobile\\\" name=\\\"mobile2\\\"   value=\\\"mobile2\\\" [(ngModel)]=\\\"vendordetail.mobile2\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" min=\\\"0\\\" #mobile1=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobile2.invalid }\\\" (keypress)=\\\"MobileNumber($event)\\\" required>\\n                  </mat-form-field>\\n                  \\n                  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!mobile2.valid && mobile2.touched\\\">\\n                      Please Enter Valid Mobile\\n                  </div>\\n                  <mat-error *ngIf=\\\"f.submitted && mobile2.invalid && mobile2.touched\\\" class=\\\"invalid-feedback\\\">\\n                    <mat-error >mobile must be 10 digit</mat-error>\\n                  </mat-error>\\n              </div>\\n          </div>\\n      </div>\\n\\n\\n        <div *ngIf=\\\"vendordetail.typeofupdate=='landline'\\\" mat-dialog-content style=\\\"overflow: hidden;\\\">\\n                <p class=\\\"heading\\\">Update Landline</p>\\n                <div class=\\\" from-fields\\\">\\n                    <div class=\\\"control-field\\\">\\n                        <mat-form-field class=\\\"example-full-width cs-input\\\">\\n                            <input matInput type=\\\"text\\\"  maxlength=\\\"10\\\"  placeholder=\\\"Landline\\\" name=\\\"landline\\\" (keypress)=\\\"MobileNumber($event)\\\" value=\\\"landline\\\" [(ngModel)]=\\\"vendordetail.landline\\\"  minlength=\\\"6\\\" maxlength=\\\"13\\\" #landline=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && landline.invalid }\\\" required>\\n                        </mat-form-field>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"landline.invalid && landline.touched\\\">\\n                                Landline is must be atleast 6 digit\\n                            </div>\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"landline.invalid && landline.errors.required\\\">\\n                                    Landline is required\\n                            </div>\\n                    </div>\\n                </div>\\n       </div>\\n\\n\\n       <div mat-dialog-content *ngIf=\\\"vendordetail.typeofupdate=='address'\\\">\\n          <p class=\\\"heading\\\">Update Address</p>\\n          <div class=\\\"from-fields\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col s6\\\">\\n                  <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"State\\\" name=\\\"vendorState\\\" [(ngModel)]=\\\"vendordetail.vendorState\\\" >\\n                          <mat-option (click)=\\\"get_district()\\\"  *ngFor=\\\"let state of statelist\\\" value=\\\"{{state}}\\\">{{state}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </div>\\n              </div>\\n              <div class=\\\"col s6\\\">\\n                  <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"District\\\"   name=\\\"district\\\" [(ngModel)]=\\\"vendordetail.district\\\" >\\n                          <mat-option (click)=\\\"get_city()\\\"  *ngFor=\\\"let district of district1\\\" value=\\\"{{district.districtName}}\\\">{{district.districtName}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </div>\\n              </div>\\n              <div class=\\\"col s6\\\">\\n                  <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\">\\n                        <mat-select placeholder=\\\"City\\\"  name=\\\"city\\\" [(ngModel)]=\\\"vendordetail.city\\\" >\\n                          <mat-option *ngFor=\\\"let city of cities\\\" (click)=\\\"get_pincode(city.stateMasterId)\\\" value=\\\"{{city.cityName}}\\\">{{city.cityName}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </div>\\n              </div>\\n              <div class=\\\"col s6\\\">\\n                  <div class=\\\"control-field\\\">\\n                    <mat-form-field class=\\\"cs-input\\\">\\n                      <mat-select placeholder=\\\"Pincode\\\"  name=\\\"pincode\\\" [(ngModel)]=\\\"vendordetail.pincode\\\" >\\n                        <mat-option *ngFor=\\\"let pin of areas\\\" value=\\\"{{pin}}\\\">{{pin}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"row mb15\\\">\\n              <div class=\\\"col s12\\\">\\n                  <div class=\\\"control-field\\\">\\n                      <mat-form-field class=\\\"cs-input\\\" >\\n                        <textarea matInput placeholder=\\\"Address\\\" name=\\\"street\\\" [(ngModel)]=\\\"vendordetail.street\\\" class=\\\"h100\\\"></textarea>\\n                      </mat-form-field>\\n                    </div>\\n              </div>\\n              \\n            </div>\\n          </div>\\n          </div>\\n\\n\\n\\n        <div mat-dialog-actions>\\n            <button mat-raised-button  color=\\\"warn\\\" [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n            <button mat-raised-button color=\\\"accent\\\">Save</button>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\nimport { ConstantService } from '../../constant.service';\nimport { SnackBarOverview } from 'src/app/toast';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-vendor-update',\n  templateUrl: './vendor-update.component.html',\n})\nexport class VendorUpdateComponent implements OnInit {\n  vendordetail:any={};\n  loader:any=false;\n  message:any;\n  districtlist:any[];\n  district1:any=[];\n  statelist:any=[];\n  districts1:any[];\n  citylist:any=[];\n  cities:any=[];\n  statemasteroid:any;\n  areas:any=[];\n  stateId:any;\n  \n  constructor(public toast:SnackBarOverview,public router:Router,public dialogRef: MatDialogRef<VendorUpdateComponent>,@Inject(MAT_DIALOG_DATA) public data:any,public db:ConstantService)\n  {\n        console.log(data);\n        this.vendordetail=this.data;\n        console.log(this.vendordetail);\n        console.log(this.vendordetail.typeofupdate);\n  }\n\n  ngOnInit() {\n    this.get_state();\n  }\n\n\n\n  get_state(){\n    console.log(\"stats runnning.....\");\n    this.loader=true;\n    this.db.fileData('','state/list/').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.statelist=response['data'];\n    });\n    this.get_district();\n  }\n\n\n\n\n  st:any;\n  get_district(){\n    this.loader=true;\n    console.log(\"district running....\");\n    console.log(this.vendordetail.vendorState);\n    this.st=Array(this.vendordetail.vendorState)\n    this.db.fetchData(this.st,'district/list/').subscribe((response)=>{\n      this.loader=false;\n      console.log(response);\n      this.districtlist=response['data'];\n      this.district1=this.districtlist[0].distrcits;\n      console.log(this.district1);\n    });\n    this.get_city();\n  }\n\n\n\n  get_city() {\n    this.loader=true;\n    console.log(this.vendordetail.vendorState);\n    console.log(this.vendordetail.district);\n    console.log(\"city runniyng..\");\n    this.db.fetchData(Array({\"stateName\":this.vendordetail.vendorState,\"distrcits\":Array({\"districtName\":this.vendordetail.district})}),'city/list').subscribe((response)=>{\n      console.log(response);\n      this.loader=false\n      this.citylist=response['data'];\n      this.districts1=this.citylist[0].distrcits;\n      this.cities=this.districts1[0].cities;\n      console.log(this.cities);\n      let statemasterdata=[];\n      statemasterdata=this.cities.filter(x => x.cityName==this.vendordetail.city);\n      console.log(statemasterdata);\n      this.statemasteroid=statemasterdata[0]['stateMasterId'];\n      console.log(this.statemasteroid);\n      setTimeout(() => {\n        this.get_pincode(this.statemasteroid);\n      }, 500);\n    });\n   \n  }\n\n\n\n\n  get_pincode(stateMasterId){\n    this.loader=true;\n    console.log(stateMasterId);\n    let cityarray=[];\n      cityarray[0]=stateMasterId;\n      console.log(cityarray);\n    this.db.fetchData({'stateMasterIds':cityarray,},'city/pincodes').subscribe((response)=>{\n      console.log(response);\n      this.loader=false\n      this.citylist=response['data'];\n      this.areas=response['data'][0].pinCodes;\n      console.log( this.areas);\n    });\n  }\n\n\n\n\n\n  namecheck(event: any) \n  {\n    const pattern = /[A-Z\\+\\a-z\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n\n\n\n\n\n  MobileNumber(event: any) \n  {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) \n    {event.preventDefault(); }\n   }\n   \n\n\n\n\n  update_data:any={};\n  updateMobileEmail(){\n    if(this.vendordetail.typeofupdate=='email'){\n      this.update_data.emailid=this.vendordetail.emailid;\n      this.update_data.vendorCode=this.vendordetail.vendorCode;\n      console.log(this.update_data);\n    }else if(this.vendordetail.typeofupdate=='mobile'){\n      this.update_data.mobile1=this.vendordetail.mobile1;\n      this.update_data.vendorCode=this.vendordetail.vendorCode;\n      console.log(this.update_data);\n    }else if(this.vendordetail.typeofupdate=='mobile2'){\n      this.update_data.mobile2=this.vendordetail.mobile2;\n      this.update_data.vendorCode=this.vendordetail.vendorCode;\n      console.log(this.update_data);\n    }\n    else if(this.vendordetail.typeofupdate=='gstNo'){\n      this.update_data.gstNo=this.vendordetail.gstNo;\n      this.update_data.vendorCode=this.vendordetail.vendorCode;\n      console.log(this.update_data);\n    }else if(this.vendordetail.typeofupdate=='contact_person'){\n      this.update_data.contactPersonName=this.vendordetail.contactPersonName;\n      this.update_data.vendorCode=this.vendordetail.vendorCode;\n      console.log(this.update_data);\n    }else if(this.vendordetail.typeofupdate=='landline'){\n      this.update_data.landline=this.vendordetail.landline;\n      this.update_data.vendorCode=this.vendordetail.vendorCode;\n      console.log(this.update_data);\n    }else if(this.vendordetail.typeofupdate=='address'){\n      this.update_data.vendorState=this.vendordetail.vendorState;\n      this.update_data.city=this.vendordetail.city;\n      this.update_data.district=this.vendordetail.district;\n      this.update_data.pincode=this.vendordetail.pincode;\n      this.update_data.street=this.vendordetail.street;\n      this.update_data.vendorCode=this.vendordetail.vendorCode;\n      console.log(this.update_data);\n    }\n    console.log(this.update_data);\n    this.loader = true;\n    this.db.fetchData(this.update_data,'modifyvendor').subscribe((response)=>{\n      console.log(response);\n      this.loader=false;\n      this.message=response['message'];\n      if(this.message==\"Success\")\n      {\n        this.toast.openSucess('Updated successfully','');\n        this.router.navigate(['/vendor-detail/'+this.update_data.vendorCode]) \n      }\n      else\n      {\n        this.toast.openError('Something went wrong Please Try Again!!','');\n      }\n      this.dialogRef.close();\n  });\n\n\n\n\n\n\n\n}\n\n\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}