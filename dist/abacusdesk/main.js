(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-SG": "./node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "./node_modules/moment/locale/en-SG.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) { // check for number or string
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return id;
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app/activity/add-activity/add-activity.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/activity/add-activity/add-activity.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onSubmit()\" novalidate>\n  <div class=\"main-container\">\n    <div *ngIf=\"loader\"> \n      <div class=\"cs-loader\">\n        <img src=\"assets/img/loader.png\" class=\"rotate\"> \n      </div>\n    </div>\n    <div class=\"middle-container\">\n      <div class=\"page-heading\">\n        <img src=\"assets/img/activity.svg\" class=\"h-icon\">\n        <div class=\"heading-text\">\n          <h2>DVR</h2>\n          <p>Add DVR</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box  pt0\">\n              <div class=\"cs-heading\">\n                <h2>Checkin Date And Time</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput [matDatepicker]=\"pickers1\" readonly [max]='currentDate' \n                        (dateChange)=\"getlocation()\"  placeholder=\"Check In Date\" #activitydate=\"ngModel\" id=\"activitydate\" name=\"activitydate\" [(ngModel)]=\"activityData.activitydate\"  [ngClass]=\"{ 'is-invalid': f.submitted && activitydate.invalid }\" required>\n                        <mat-datepicker-toggle matSuffix [for]=\"pickers1\"></mat-datepicker-toggle>\n                        <mat-datepicker #pickers1></mat-datepicker>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && activitydate.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"activitydate.errors.required\">Checkin Date is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <!-- <div class=\"col s4\" *ngIf=\"activityData.activitydate\">\n                    <div class=\"control-field mt14\">\n                      <div class=\"cs-input\">\n                        <input placeholder=\"Check In Time\" #activityInTime=\"ngModel\" name=\"activityInTime\" [(ngModel)]=\"activityData.activityInTime\" id=\"activityInTime\" [format]=\"12\" [ngxTimepicker]=\"default\" [ngClass]=\"{ 'is-invalid': (f.submitted && activityInTime.invalid) && (activityData.activityInTime < timecheckinfirst || timecheckinlast < activityData.activityInTime)}\" readonly required>\n                      </div>\n                    </div>\n                    <ngx-material-timepicker #default (click)=\"check1()\"></ngx-material-timepicker>\n                    <mat-error *ngIf=\"f.submitted && activityInTime.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"activityInTime.errors.required\">Check In Time is required</mat-error>\n                    </mat-error>\n                    <mat-error *ngIf=\"activityData.activityInTime < timecheckinfirst || timecheckinlast < activityData.activityInTime\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"activityData.activityInTime < timecheckinfirst || timecheckinlast < activityData.activityInTime\">Check-In time must be between 06:00 AM to 10:00 PM</mat-error>\n                    </mat-error>\n                  </div> -->\n                  <div class=\"col s4\"  *ngIf=\"activityData.activitydate\">\n                    <div class=\"control-field mt14\">\n                      <div class=\"cs-input\">\n                        <input [owlDateTimeTrigger]=\"dt5\" [owlDateTime]=\"dt5\" placeholder=\"Check In Time\" name=\"activityInTime\" #activityInTime=\"ngModel\"  (dateTimeInput)=\"check1(activityData.activityInTime)\" [(ngModel)]=\"activityData.activityInTime\" [ngClass]=\"{ 'is-invalid': (f.submitted && activityInTime.invalid) && (datenotvalid==true)}\" readonly required>\n                        <owl-date-time [pickerType]=\"'timer'\" [hour12Timer]='true'  #dt5 ></owl-date-time>\n                      </div>\n                    </div>\n                    <mat-error *ngIf=\"f.submitted && activityInTime.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"activityInTime.errors.required\">Check In Time is required</mat-error>\n                    </mat-error>\n                    <mat-error *ngIf=\"datenotvalid==true\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"datenotvalid==true\">Check-In time must be between 06:00 AM to 10:00 PM</mat-error>\n                    </mat-error>\n                  </div>\n                  \n                  <!-- <div class=\"col s4 pr0\"  *ngIf=\"activityData.activitydate\">\n                    <div class=\"control-field mt14\">\n                      <div class=\"cs-input\">\n                        <input placeholder=\"Check Out Time\" #activityOutTime=\"ngModel\" name=\"activityOutTime\" [(ngModel)]=\"activityData.activityOutTime\"  id=\"activityOutTime\" [format]=\"12\" [ngxTimepicker]=\"default1\" [ngClass]=\"{ 'is-invalid': (f.submitted && activityOutTime.invalid)  && (activityData.activityOutTime < timecheckoutfirst || timecheckoutlast < activityData.activityOutTime) && (activityData.activityInTime > this.activityData.activityOutTime)}\" readonly required>\n                      </div>\n                    </div>\n                    <ngx-material-timepicker #default1 (click)=\"check2()\"></ngx-material-timepicker>\n                    <mat-error *ngIf=\"f.submitted && activityOutTime.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"activityOutTime.errors.required\">Check Out Time is required</mat-error>\n                    </mat-error>\n                    <mat-error *ngIf=\"activityData.activityOutTime < timecheckoutfirst || timecheckoutlast < activityData.activityOutTime\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"activityData.activityOutTime < timecheckoutfirst || timecheckoutlast < activityData.activityOutTime\">Check-Out time must be between 07:00 AM to 11:00 PM</mat-error>\n                    </mat-error>\n                    <mat-error *ngIf=\"f.submitted && activityData.activityInTime > this.activityData.activityOutTime\" class=\"invalid-feedback\">\n                      Check-Out time should be greater then Check-In time....\n                    </mat-error>\n                  </div> -->\n                  <div class=\"col s4\"  *ngIf=\"activityData.activitydate\">\n                    <div class=\"control-field mt14\">\n                      <div class=\"cs-input\">\n                        <input [owlDateTimeTrigger]=\"dt5\" [owlDateTime]=\"dt5\" placeholder=\"Check Out Time\" name=\"activityOutTime\" #activityOutTime=\"ngModel\" (dateTimeInput)=\"check2(activityData.activityOutTime)\" [(ngModel)]=\"activityData.activityOutTime\" [ngClass]=\"{ 'is-invalid': (f.submitted && activityOutTime.invalid)  && (dateoutnotvalid==true)}\" readonly required>\n                        <owl-date-time [pickerType]=\"'timer'\" #dt5 [hour12Timer]='true' ></owl-date-time>\n                      </div>\n                    </div>\n                    <mat-error *ngIf=\"f.submitted && activityOutTime.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"activityOutTime.errors.required\">Check Out Time is required</mat-error>\n                    </mat-error>\n                    <mat-error *ngIf=\"dateoutnotvalid==true\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"activityData.activityOutTime < timecheckoutfirst || timecheckoutlast < activityData.activityOutTime\">Check-Out time must be between 07:00 AM to 11:00 PM</mat-error>\n                    </mat-error>\n                    <mat-error *ngIf=\"f.submitted && dateoutnotvalid==true\" class=\"invalid-feedback\">\n                      Check-Out time should be greater then Check-In time....\n                    </mat-error>\n                  </div>\n                </div>\n                \n                <div class=\"row\">\n                  <div class=\"col s4 pl0\" *ngIf=\"activityData.activityInTime && activityData.activityOutTime\">\n                    <!-- <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Select Location\" name=\"locationId\" #locationId=\"ngModel\" [(ngModel)]=\"activityData.locationId\" id=\"locationId\" [ngClass]=\"{ 'is-invalid': f.submitted && locationId.invalid }\" required>\n                          <mat-option value=\"1\">agra</mat-option>\n                          <mat-option value=\"2\">kanpur</mat-option>\n                          <mat-option value=\"3\">delhi</mat-option>\n                          <mat-option value=\"4\">faridabad</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && locationId.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"locationId.errors.required\">Location is required</mat-error>\n                      </mat-error>\n                    </div> -->\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                          <textarea matInput placeholder=\"Location\" name=\"location\" #location=\"ngModel\"  id=\"location\"  [(ngModel)]=\"activityData.location\" [ngClass]=\"{ 'is-invalid': f.submitted && location.invalid }\" required ></textarea>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && location.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"location.errors.required\">Location is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>Dealer Information</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s6 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <mat-select  placeholder=\"Select Network\" id=\"role\" name=\"role\" [(ngModel)]=\"activityData.role\" #role=\"ngModel\"  [ngClass]=\"{ 'is-invalid': f.submitted && role.invalid }\" required>\n                          <mat-option  (click)=\"getnetworklist(role.roleId)\" *ngFor=\"let role of client1\" value=\"{{role.roleId}}\">{{role.roleName}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && role.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"role.errors.required\">Network  is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s6 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <mat-select  placeholder=\"Select Company\"  id=\"referenceId\" name=\"referenceId\" #referenceId=\"ngModel\" [(ngModel)]=\"activityData.referenceId\" [ngClass]=\"{ 'is-invalid': f.submitted && referenceId.invalid }\" required>\n                          <mat-option  *ngFor=\"let netdata of distributionList\" [value]=\"netdata.networkId\">{{netdata.establishment}}</mat-option>\n                          <mat-option  *ngFor=\"let lead of networkLeadList\" [value]=\"lead.leadId\">{{lead.establishment}}</mat-option>\n                          <mat-option value=\"10\">Other User</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && referenceId.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"referenceId.errors.required\">Company is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div *ngIf=\"activityData.referenceId=='10'\" class=\"row\">\n                    <div  class=\"col s4 \">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input\">\n                          <input matInput placeholder=\"Name\" id=\"OtherCustomer\" name=\"OtherCustomer\" #OtherCustomer=\"ngModel\" [(ngModel)]=\"activityData.OtherCustomer\" [ngClass]=\"{ 'is-invalid': f.submitted && OtherCustomer.invalid }\">\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && OtherCustomer.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"OtherCustomer.errors.required\">Name is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <mat-select multiple placeholder=\"Select Segment\"  id=\"segment\" name=\"segment\" #segment=\"ngModel\" [(ngModel)]=\"activityData.segment\" [ngClass]=\"{ 'is-invalid': f.submitted && segment.invalid }\" required>\n                            <mat-option value=\"2w\">2w</mat-option>\n                            <mat-option value=\"3w\">3w</mat-option>\n                            <mat-option value=\"4w\">4w</mat-option>\n                            <mat-option value=\"6w\">6w</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && segment.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"segment.errors.required\">Segment is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div  class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input\">\n                          <input matInput placeholder=\"Mobile no\" id=\"mobile\" name=\"mobile\" #mobile=\"ngModel\" minlength=\"10\" maxlength=\"10\" [(ngModel)]=\"activityData.mobile\" [ngClass]=\"{ 'is-invalid': f.submitted && mobile.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && mobile.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"mobile.errors.required\">Mobile is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"sprate-box mt15 pt0\">\n              <div class=\"cs-heading\">\n                <h2>Check In Information</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  \n                  <div class=\"col s6 padding0\">\n                    <div class=\"row\">\n                      <div class=\"col s12 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"Objective Of Visit\" id=\"objectivesOfVisit\" name=\"objectivesOfVisit\" #objectivesOfVisit=\"ngModel\" [(ngModel)]=\"activityData.objectivesOfVisit\" [ngClass]=\"{ 'is-invalid': f.submitted && objectivesOfVisit.invalid }\" required>\n                              <mat-option value=\"1\">Routine Visit</mat-option>\n                              <mat-option value=\"2\">Order</mat-option>\n                              <mat-option value=\"3\">Payment</mat-option>\n                              <mat-option value=\"4\">Order + Payment</mat-option>\n                              <mat-option value=\"5\">Concern Handling</mat-option>\n                              <mat-option value=\"6\">Other</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && objectivesOfVisit.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"objectivesOfVisit.errors.required\">Objective Of Visit is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s12 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"Next Followup Type\" name=\"nextFollowUpType\" #nextFollowUpType=\"ngModel\" id=\"nextFollowUpType\" [(ngModel)]=\"activityData.nextFollowUpType\">\n                              <mat-option value=\"1\">Call</mat-option>\n                              <mat-option value=\"2\">Meeting</mat-option>\n                              <mat-option value=\"3\">Email</mat-option>\n                              <mat-option value=\"4\">Task</mat-option>\n                              <mat-option value=\"5\">Other</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"col s12 pl0\" *ngIf=\"activityData.nextFollowUpType!=4 && activityData.nextFollowUpType!=5\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput [matDatepicker]=\"pickers\" readonly [min]='currentDate' id=\"nextFollowUpDate\" placeholder=\"Next Followup Date\" #nextFollowUpDate=\"ngModel\" name=\"nextFollowUpDate\" [(ngModel)]=\"activityData.nextFollowUpDate\" >\n                            <mat-datepicker-toggle matSuffix [for]=\"pickers\"></mat-datepicker-toggle>\n                            <mat-datepicker #pickers></mat-datepicker>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      \n                     \n                      \n                    </div>\n                  </div>\n                  \n                  <div class=\"col s6 padding0\">\n                    <div class=\"row\">\n                      <div class=\"col s12 pr0\" *ngIf=\"activityData.objectivesOfVisit=='6'\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Other\" name=\"OtherObjective\"  id=\"OtherObjective\"  name=\"OtherObjective\" #OtherObjective=\"ngModel\" [(ngModel)]=\"activityData.OtherObjective\" [ngClass]=\"{ 'is-invalid': f.submitted && OtherObjective.invalid }\" >\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && OtherObjective.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"OtherObjective.errors.required\">Reason is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s12 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <textarea matInput placeholder=\"Remark\" name=\"remarks\" #remarks=\"ngModel\"  id=\"remarks\"  [(ngModel)]=\"activityData.remarks\" [ngClass]=\"{ 'is-invalid': f.submitted && remarks.invalid }\" required class=\"h166\"></textarea>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && remarks.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"remarks.errors.required\">Remark is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-btn fixedd mt15 text-right\">\n            <div class=\"in-btn\">\n              <button mat-raised-button color=\"accent\" (click)=\"setFocus(f.form)\">Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/activity/add-activity/add-activity.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/activity/add-activity/add-activity.component.ts ***!
  \*****************************************************************/
/*! exports provided: AddActivityComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddActivityComponent", function() { return AddActivityComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_10__);











var AddActivityComponent = /** @class */ (function () {
    function AddActivityComponent(db, router, user, route, dialog, toast, platformId) {
        this.db = db;
        this.router = router;
        this.user = user;
        this.route = route;
        this.dialog = dialog;
        this.toast = toast;
        this.platformId = platformId;
        this.userdata = [];
        this.datenotvalid = false;
        this.dateoutnotvalid = false;
        this.activityData = {};
        this.timecheckinfirst = '6:00';
        this.timecheckinlast = '22:00';
        this.timecheckoutfirst = '7:00';
        this.timecheckoutlast = '23:00';
        this.other = false;
        this.currentDate = new Date().toJSON().split('T')[0];
        this.networkLeadList = [];
        this.locationlist = [];
    }
    AddActivityComponent.prototype.ngOnInit = function () {
        this.rolelist();
        this.userdata = this.user['user']['data'];
        this.userType = this.userdata['userType'];
        this.activityData.userId = this.userdata['userId'];
        console.log(this.activityData.userId);
    };
    AddActivityComponent.prototype.rolelist = function () {
        var _this = this;
        this.other = false;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var cllient = _this.rolelists.filter(function (x) { return x.userTypeId == 3; });
            _this.client1 = cllient[0].roles;
            console.log(_this.client1);
        });
    };
    AddActivityComponent.prototype.get_data = function (roleId) {
        console.log(roleId);
        console.log(this.activityData);
        this.clientrole = roleId;
        // if(this.activityData.lead){
        //   this.activityData.activityModule=2;
        //   this.activityData.leadrole=this.clientrole;
        //   console.log("get lead based on leadrole"+this.activityData.leadrole);
        //   this.getleadlist();
        // }else{
        this.activityData.role = this.clientrole;
        this.activityData.activityModule = 1;
        console.log("get network based on role" + this.activityData.role);
        // this.getnetworklist();
        // }
    };
    AddActivityComponent.prototype.getleadlist = function () {
        var _this = this;
        this.loader = true;
        if (this.userdata['userType'] == 2) {
            this.senddata = { "leadrole": this.activityData.leadrole, "userId": this.userdata['userId'], "currentPage": 1, "pageSize": 50 };
        }
        else {
            this.senddata = { "leadrole": this.activityData.leadrole, "currentPage": 1, "pageSize": 50 };
        }
        this.db.fetchData(this.senddata, 'lead/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.leadlist = response['data'];
            console.log(_this.leadlist);
        });
    };
    AddActivityComponent.prototype.getnetworklist = function (role) {
        var _this = this;
        this.distributionList = [];
        this.networkLeadList = [];
        if (role == 11) {
            this.activityData.activityModule = 2;
        }
        else if (role == 12) {
            this.activityData.activityModule = 1;
        }
        else if (role == 13) {
            this.activityData.activityModule = 3;
        }
        else if (role == 14) {
            this.activityData.activityModule = 4;
        }
        else if (role == 15) {
            this.activityData.activityModule = 5;
        }
        else {
            this.activityData.activityModule = 6;
        }
        this.loader = true;
        if (role == 12) {
            if (this.userdata['userType'] == 2) {
                this.senddata = { "role": this.activityData.role, "salesUserId": this.userdata['userId'] };
                console.log(this.senddata);
                this.db.fetchData(this.senddata, 'mynetwork/detail').subscribe(function (response) {
                    console.log(response);
                    _this.loader = false;
                    _this.distributionList = response['data'];
                    console.log(_this.distributionList);
                });
            }
            else {
                this.senddata = { "role": this.activityData.role, };
                console.log(this.senddata);
                this.db.fetchData(this.senddata, 'network/list').subscribe(function (response) {
                    console.log(response);
                    _this.loader = false;
                    _this.distributionList = response['data'];
                    console.log(_this.distributionList);
                });
            }
        }
        else {
            if (this.userdata['usreType'] == 2) {
                this.db.fetchData({ 'createdBy': this.userdata['userId'], "currentPage": 1, "pageSize": 500, 'leadType': role, 'isActive': 1 }, "lead/list").subscribe(function (result) {
                    console.log(result);
                    if (result['status'] == 'Success') {
                        _this.networkLeadList = result['data'];
                    }
                });
            }
            else {
                this.db.fetchData({ "currentPage": 1, "pageSize": 500, 'leadType': role, 'isActive': 1 }, "lead/list").subscribe(function (result) {
                    console.log(result);
                    if (result['status'] == 'Success') {
                        _this.networkLeadList = result['data'];
                    }
                });
            }
        }
        this.loader = false;
    };
    AddActivityComponent.prototype.getlocation = function () {
        var _this = this;
        this.activityData.activityDate == moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activitydate).format('YYYY-MM-DD');
        console.log(this.activityData.activitydate);
        this.db.fetchData({ 'visitDate': this.activityData.activitydate }, 'location/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.locationlist = response['data'];
            console.log(_this.locationlist);
        });
    };
    AddActivityComponent.prototype.check1 = function (time) {
        console.log("check in time validation");
        console.log(this.activityData.activitydate);
        var activityDate = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activitydate).format('Y-MM-D');
        console.log(activityDate);
        this.activityData.activityInTime = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activityInTime).format('HH:mm');
        var checkinTimeSelected = new Date(activityDate + ' ' + this.activityData.activityInTime + ':00').getTime();
        console.log(checkinTimeSelected);
        console.log('Checkin Validate Start Time');
        var checkinTime1 = moment__WEBPACK_IMPORTED_MODULE_8__(activityDate + ' 06:00:00').format('Y-MM-D H:mm:ss');
        var checkinMinimumTime = new Date(checkinTime1).getTime();
        var checkinTime2 = moment__WEBPACK_IMPORTED_MODULE_8__(activityDate + ' 23:00:00').format('Y-MM-D H:mm:ss');
        var checkinMaximumTime = new Date(checkinTime2).getTime();
        console.log(checkinMinimumTime);
        console.log(checkinMaximumTime);
        if (checkinMinimumTime > checkinTimeSelected || checkinTimeSelected > checkinMaximumTime) {
            this.datenotvalid = true;
            console.log(this.activityData.activityInTime);
        }
        else {
            this.datenotvalid = false;
            this.activityData.activityInTime = time;
            console.log(this.activityData.activityInTime);
        }
    };
    AddActivityComponent.prototype.check2 = function (time2) {
        console.log("check out time validation");
        console.log(this.activityData.activityOutTime);
        console.log(moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activityOutTime).format('hh:mm'));
        var activityDate = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activityOutTime).format('Y-MM-D');
        console.log(activityDate);
        this.activityData.activityOutTime = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activityOutTime).format('HH:mm');
        var checkoutTimeSelected = new Date(activityDate + ' ' + this.activityData.activityOutTime + ':00').getTime();
        console.log(checkoutTimeSelected);
        console.log('Checkin Validate Start Time');
        var checkinTime1 = moment__WEBPACK_IMPORTED_MODULE_8__(activityDate + ' 07:00:00').format('Y-MM-D H:mm:ss');
        var checkinMinimumTime = new Date(checkinTime1).getTime();
        var checkinTime2 = moment__WEBPACK_IMPORTED_MODULE_8__(activityDate + ' 23:00:00').format('Y-MM-D H:mm:ss');
        var checkinMaximumTime = new Date(checkinTime2).getTime();
        console.log(checkinMinimumTime);
        console.log(checkinMaximumTime);
        if (checkinMinimumTime > checkoutTimeSelected || checkoutTimeSelected > checkinMaximumTime) {
            this.dateoutnotvalid = true;
            console.log(this.activityData.activityOutTime);
        }
        else {
            this.dateoutnotvalid = false;
            this.activityData.activityOutTime = time2;
            console.log(this.activityData.activityOutTime);
        }
    };
    AddActivityComponent.prototype.onSubmit = function () {
        var _this = this;
        console.log(this.activityData);
        var checkInTime = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activityInTime).format('HH:mm');
        console.log(checkInTime);
        var checkOutTime = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activityOutTime).format('HH:mm');
        console.log(checkOutTime);
        var inTime = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activitydate).format('YYYY-MM-DD') + ' ' + checkInTime;
        console.log(inTime);
        var outTime = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activitydate).format('YYYY-MM-DD') + ' ' + checkOutTime;
        console.log(outTime);
        this.activityData.networkId = this.activityData.referenceId;
        if (this.activityData.nextFollowUpType == 4) {
            this.type = this.activityData.nextFollowUpType;
            this.activityData.nextFollowUpType = '';
        }
        if (this.activityData.referenceId == 10) {
            this.othercustomer = this.activityData.referenceId;
            this.activityData.referenceId = '';
        }
        if (this.activityData.activityInTime < this.activityData.activityOutTime) {
            this.activityData.status = 1;
            this.activityData.activityDate = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.activityDate).format('YYYY-MM-DD');
        }
        console.log(this.activityData.activityInTime);
        // var date=this.activityData.activitydate;
        // var inTime=this.activityData.activityInTime;
        // var outTime=this.activityData.activityOutTime;
        // console.log(date,inTime);
        // var inDateTime=date+"T"+inTime;
        this.activityData.checkInTime = inTime;
        // var outDateTime=date+"T"+outTime;
        this.activityData.checkOutTime = outTime;
        // console.log(inDateTime,outDateTime);
        if (this.activityData.nextFollowUpDate) {
            this.activityData.isFollowUp = true;
            this.activityData.nextFollowUpDate = moment__WEBPACK_IMPORTED_MODULE_8__(this.activityData.nextFollowUpDate).format('YYYY-MM-DD');
        }
        else {
            this.activityData.isFollowUp = false;
        }
        console.log(this.activityData);
        var activityTempArr = JSON.parse(JSON.stringify(this.activityData));
        if (this.type == 4) {
            delete activityTempArr['nextFollowUpType'];
        }
        console.log(this.othercustomer);
        if (this.othercustomer == 10) {
            delete activityTempArr['networkId'];
            delete activityTempArr['referenceId'];
        }
        console.log(activityTempArr);
        // return;
        this.db.fetchData(activityTempArr, 'activity/add').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (response['status'] == 'Success') {
                if (_this.type != 4) {
                    _this.toast.openSucess('Activity added successfully', '');
                    _this.router.navigate(['/checkin-list']);
                }
                else {
                    _this.toast.openSucess('Activity added successfully', '');
                    _this.router.navigate(['/add-task']);
                }
            }
            else {
                _this.toast.openError('Activity Not Added !!', '');
            }
            ;
        });
    };
    AddActivityComponent.prototype.setFocus = function (form) {
        console.log(form.controls);
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_9__["isPlatformBrowser"])(this.platformId)) {
                        console.log("hii");
                        jquery__WEBPACK_IMPORTED_MODULE_10__('#' + key).focus();
                    }
                    console.log(key);
                    return true;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
    };
    AddActivityComponent.prototype.oherType = function () {
        this.other = true;
    };
    AddActivityComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-activity',
            template: __webpack_require__(/*! ./add-activity.component.html */ "./src/app/activity/add-activity/add-activity.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_4__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _local_storage_service__WEBPACK_IMPORTED_MODULE_7__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_6__["SnackBarOverview"], Object])
    ], AddActivityComponent);
    return AddActivityComponent;
}());



/***/ }),

/***/ "./src/app/allowance/allowance.component.html":
/*!****************************************************!*\
  !*** ./src/app/allowance/allowance.component.html ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/allowance .svg\" class=\"h-icon h26\">\n      <div class=\"heading-text\">\n        <h2>Allowance </h2>\n      </div>\n    </div>\n\n    <div class=\"left-auto\">\n        <div class=\"cs-btn fixedd text-right\">\n            <div class=\"in-btn\" (click)=\"saveAllowance()\">\n              <button mat-raised-button color=\"accent\" >Update</button>\n            </div>\n          </div>\n    </div>\n  </div>\n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table\">\n            \n            <div class=\"flat-table\">\n              <table>\n                <tr>\n                  <th class=\"padding0 w200 text-left\"><p>Role</p></th>\n                  <th class=\"padding0 w950\"><p>Travel Entitlement</p>\n                    <table class=\"multi-table\">\n                      <tr>\n                        <th class=\"w100 padding0\"><p>Flight</p>\n                          <table class=\"multi-table\">\n                            <th><p>Economy Class (Air)</p></th>\n                          </table>\n                        </th>\n                        <th class=\"w400 padding0\"><p>Train</p>\n                          <table class=\"multi-table\">\n                            <tr>\n                              <th class=\"w200\"><p>Train (Executive Chair car, 2nd tier AC sleeper, 1st Class)</p></th>\n                              <th class=\"w100\"><p>Train (III tier AC)</p></th>\n                              <th class=\"w100\"><p>Train (III tier sleeper)</p></th>\n                            </tr>\n                          </table>\n                        </th>\n                        <th class=\"w200 padding0\"><p>Buses</p>\n                          <table class=\"multi-table\">\n                            <tr>\n                              <th class=\"w100\"><p>AC Buses</p></th>\n                              <th class=\"w100\"><p>Non - AC Buses</p></th>\n                            </tr>\n                          </table>\n                        </th>\n                        <th class=\"w250 padding0\"><p>Taxi</p>\n                          <table class=\"multi-table\">\n                            <tr>\n                              <th class=\"w125\"><p>Private Taxi/ OLA /UBER #</p></th>\n                              <th class=\"w125\"><p>Shared Taxi</p></th>\n                            </tr>\n                          </table>\n                        </th>\n                      </tr>\n                    </table>\n                  </th>\n                  <th class=\"w400 padding0\"><p>Hotel</p>\n                    <table class=\"multi-table\">\n                      <tr>\n                        <th class=\"w100 padding0\"><p>A+</p>\n                          <table class=\"multi-table\">\n                            <th><p><a (click)=\"openDialog()\">City Detail</a></p></th>\n                          </table>\n                        </th>\n                        <th class=\"w100 padding0\"><p>A</p>\n                          <table class=\"multi-table\">\n                            <th><p><a (click)=\"openDialog()\">City Detail</a></p></th>\n                          </table>\n                        </th>\n                        <th class=\"w100 padding0\"><p>B</p>\n                          <table class=\"multi-table\">\n                            <th><p><a (click)=\"openDialog()\">City Detail</a></p></th>\n                          </table>\n                        </th>\n                        <th class=\"w100 padding0\"><p>C</p>\n                          <table class=\"multi-table\">\n                            <th><p><a (click)=\"openDialog()\">City Detail</a></p></th>\n                          </table>\n                        </th>\n                      </tr>\n                    </table>\n                  </th>\n                  <th class=\"w400 padding0\"><p>Food Expense</p>\n                    <table class=\"multi-table\">\n                      <tr>\n                        <th class=\"w100 padding0\"><p>A+</p>\n                          <table class=\"multi-table\">\n                            <th><p><a (click)=\"openDialog()\">City Detail</a></p></th>\n                          </table>\n                        </th>\n                        <th class=\"w100 padding0\"><p>A</p>\n                          <table class=\"multi-table\">\n                            <th><p><a (click)=\"openDialog()\">City Detail</a></p></th>\n                          </table>\n                        </th>\n                        <th class=\"w100 padding0\"><p>B</p>\n                          <table class=\"multi-table\">\n                            <th><p><a (click)=\"openDialog()\">City Detail</a></p></th>\n                          </table>\n                        </th>\n                        <th class=\"w100 padding0\"><p>C</p>\n                          <table class=\"multi-table\">\n                            <th><p><a (click)=\"openDialog()\">City Detail</a></p></th>\n                          </table>\n                        </th>\n                      </tr>\n                    </table>\n                  </th>\n                  <th class=\"padding0 w500\"><p>Local Conveyance</p>\n                    <table class=\"multi-table\">\n                      <tr>\n                        <th class=\"w100 padding0\"><p>A/c Taxi</p>\n                        </th>\n                        <th class=\"w100 padding0\"><p>Non A/c Taxi</p>\n                        </th>\n                        <th class=\"w100 padding0\"><p>Auto</p>\n                        </th>\n                        <th class=\"w100 padding0\"><p>Bus</p>\n                        </th>\n                        <th class=\"w100 padding0\"><p>Two Wheeler</p>\n                        </th>\n                      </tr>\n                    </table>\n                  </th>\n                  <th class=\"padding0 w200\"><p>Self</p>\n                    <table class=\"multi-table\">\n                      <tr>\n                        <th class=\"w100 padding0\"><p>Car/km</p>\n                        </th>\n                        <th class=\"w100 padding0\"><p>Bike/km</p>\n                        </th>\n                      </tr>\n                    </table>\n                  </th>\n                </tr>\n\n                <tr *ngFor=\"let list of designationArr; let index = index\">\n                  <td>{{list.designationName}}</td>\n                  <td class=\"padding0 text-center\">\n                    <table class=\"multi-table\">\n                      <tr>\n                        <td class=\"w100 padding0\">\n                          <table class=\"multi-table\">\n                            <td><mat-checkbox [(ngModel)]=\"list.flightEconomyClass\" name=\"flightEconomyClass{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n                          </table>\n                        </td>\n                        <td class=\"w400 padding0\">\n                          <table class=\"multi-table\">\n                            <tr>\n                              <td class=\"w200\"><mat-checkbox [(ngModel)]=\"list.travelTrain2A\" name=\"travelTrain2A{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n                              <td class=\"w100\"><mat-checkbox [(ngModel)]=\"list.travelTrain3A\" name=\"travelTrain3A{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n                              <td class=\"w100\"><mat-checkbox [(ngModel)]=\"list.travelTrainSL\" name=\"travelTrainSL{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n                            </tr>\n                          </table>\n                        </td>\n                        <td class=\"w200 padding0\">\n                          <table class=\"multi-table\">\n                            <tr>\n                              <td class=\"w100\"><mat-checkbox [(ngModel)]=\"list.travelBusAC\" name=\"travelBusAC{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n                              <td class=\"w100\"><mat-checkbox [(ngModel)]=\"list.travelBusNonAC\" name=\"travelBusNonAC{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n                            </tr>\n                          </table>\n                        </td>\n                        <td class=\"w250 padding0\">\n                          <table class=\"multi-table\">\n                            <tr>\n                              <td class=\"w125\"><mat-checkbox [(ngModel)]=\"list.travelTaxiPrivate\" name=\"travelTaxiPrivate{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n                              <td class=\"w125\"><mat-checkbox [(ngModel)]=\"list.travelTaxiShared\" name=\"travelTaxiShared{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n                            </tr>\n                          </table>\n                        </td>\n                      </tr>\n                    </table>\n                  </td>\n                  \n                  <td class=\"padding0\">\n                    <table class=\"multi-table\">\n                      <tr>\n                        <td class=\"w100\">\n                          <input type=\"text\" [(ngModel)]=\"list.lodgingAllowanceAPlus\" name=\"lodgingAllowanceAPlus{{index}}\" class=\"simple-input\">\n                        </td>\n                        <td class=\"w100\">\n                          <input type=\"text\" [(ngModel)]=\"list.lodgingAllowanceA\" name=\"lodgingAllowanceA{{index}}\" class=\"simple-input\">\n                        </td>\n                        <td class=\"w100\">\n                          <input type=\"text\" [(ngModel)]=\"list.lodgingAllowanceB\" name=\"lodgingAllowanceB{{index}}\" class=\"simple-input\">\n                        </td>\n                        <td class=\"w100\">\n                          <input type=\"text\" [(ngModel)]=\"list.lodgingAllowanceC\" name=\"lodgingAllowanceC{{index}}\" class=\"simple-input\">\n                        </td>\n                      </tr>\n                    </table>\n                  </td>\n                  <td class=\"padding0\">\n                    <table class=\"multi-table\">\n                      <tr>\n                        <td class=\"w100\">\n                          <input type=\"text\" [(ngModel)]=\"list.foodAllowanceAPlus\" name=\"foodAllowanceAPlus{{index}}\" class=\"simple-input\">\n                        </td>\n                        <td class=\"w100\">\n                          <input type=\"text\" [(ngModel)]=\"list.foodAllowanceA\" name=\"foodAllowanceA{{index}}\" class=\"simple-input\">\n                        </td>\n                        <td class=\"w100\">\n                          <input type=\"text\" [(ngModel)]=\"list.foodAllowanceB\" name=\"foodAllowanceB{{index}}\" class=\"simple-input\">\n                        </td>\n                        <td class=\"w100\">\n                          <input type=\"text\" [(ngModel)]=\"list.foodAllowanceC\" name=\"foodAllowanceC{{index}}\" class=\"simple-input\">\n                        </td>\n                      </tr>\n                    </table>\n                  </td>\n                  <td class=\"padding0 text-center\">\n                    <table class=\"multi-table\">\n                      <tr>\n                        <td><mat-checkbox [(ngModel)]=\"list.localTaxiAC\" name=\"localTaxiAC{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n\n                        <td><mat-checkbox [(ngModel)]=\"list.localTaxiNonAC\" name=\"localTaxiNonAC{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n\n                        <td><mat-checkbox [(ngModel)]=\"list.localAuto\" name=\"localAuto{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n\n                        <td><mat-checkbox [(ngModel)]=\"list.localBus\" name=\"localBus{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n\n                        <td><mat-checkbox [(ngModel)]=\"list.localTwoWheeler\" name=\"localTwoWheeler{{index}}\" color=\"accent\">&nbsp;</mat-checkbox></td>\n                      </tr>\n                    </table>\n                  </td>\n                  <td class=\"padding0 text-center\">\n                    <table class=\"multi-table\">\n                      <tr>\n                        <td>\n                          <input type=\"text\" [(ngModel)]=\"list.selfCarPerKM\" name=\"selfCarPerKM{{index}}\" class=\"simple-input\">\n                        </td>\n                        <td>\n                          <input type=\"text\" [(ngModel)]=\"list.selfBikePerKM\" name=\"selfBikePerKM{{index}}\" class=\"simple-input\">\n                        </td>\n                      </tr>\n                    </table>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/allowance/allowance.component.ts":
/*!**************************************************!*\
  !*** ./src/app/allowance/allowance.component.ts ***!
  \**************************************************/
/*! exports provided: AllowanceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AllowanceComponent", function() { return AllowanceComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _cities_modal_cities_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cities-modal/cities-modal.component */ "./src/app/cities-modal/cities-modal.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var AllowanceComponent = /** @class */ (function () {
    function AllowanceComponent(dialog, db, toast, confirm) {
        this.dialog = dialog;
        this.db = db;
        this.toast = toast;
        this.confirm = confirm;
        this.designationArr = [];
    }
    AllowanceComponent.prototype.ngOnInit = function () {
        this.allowanceList();
    };
    AllowanceComponent.prototype.openDialog = function () {
        var dialogRef = this.dialog.open(_cities_modal_cities_modal_component__WEBPACK_IMPORTED_MODULE_3__["CitiesModalComponent"], {
            width: '768px',
            data: {}
        });
    };
    AllowanceComponent.prototype.allowanceList = function () {
        var _this = this;
        console.log(this.designationArr);
        this.loader = true;
        this.db.fetchData({}, 'allowance/list').subscribe(function (response) {
            console.log(response);
            _this.designationArr = response['data'];
            console.log(_this.designationArr);
            _this.loader = false;
            // this.toast.openSucess('Allowances Updated successfully','');
        });
    };
    AllowanceComponent.prototype.saveAllowance = function () {
        var _this = this;
        console.log(this.designationArr);
        this.loader = true;
        var allowanceData = {};
        allowanceData['allowances'] = this.designationArr;
        this.db.fetchData(allowanceData, 'allowance/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.confirm.success();
        });
    };
    AllowanceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-allowance',
            template: __webpack_require__(/*! ./allowance.component.html */ "./src/app/allowance/allowance.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], _constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], AllowanceComponent);
    return AllowanceComponent;
}());



/***/ }),

/***/ "./src/app/annoucement/add-annoucement/add-annoucement.component.html":
/*!****************************************************************************!*\
  !*** ./src/app/annoucement/add-annoucement/add-annoucement.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  \n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/announcement.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Announcement / Notice</h2>\n        <p>Create New Notice For all Users</p>\n      </div>\n    </div>\n  </div>\n  \n\n  <form name=\"form\" (ngSubmit)=\"f.form.valid && data.message && (data.isSMSChecked || data.isEmailChecked) &&  salesNetworkSelectedData?.length > 0 && saveAnnouncementDetail()\"  #f=\"ngForm\" novalidate>\n    \n    <div class=\"container-outer\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>ANNOUNCEMENT / NOTICE </h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"row\">\n                <div class=\"col s3 pl0\">\n                  <div class=\"from-fields\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <mat-select color=\"accent\" id=\"segment\" placeholder=\"Select Segment\" name=\"segment\" [(ngModel)]=\"data.segment\" #segment=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && segment.invalid }\" multiple [required]=\"segmentRequired\">\n\n                          <mat-option color=\"accent\" (click)=\"getSegmentChangeHandler()\" value=\"{{segment.text}}\"  *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n\n                      <mat-error *ngIf=\"f.submitted && segmentRequired\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"segment.errors.required\">Segment is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col s9 pr0\">\n                    <div class=\"user-type\">\n                        <div class=\"example-section\">\n                          <ng-container *ngFor=\"let list of userRolesArr; let index = index\">\n                            <mat-checkbox  *ngIf=\"list.userTypeId==1 || list.userTypeId==2 || (list.userTypeId==3 && list.roleId==12)\" [(ngModel)]=\"list.checked\" (change)=\"roleSelectedChange(list)\" name=\"{{list.roleName}}{{index}}\" [disabled]=\"list.userTypeId!=1 && !data.segment || data.segment?.length==0\" class=\"example-margin\" color=\"accent\">{{list.roleName}}</mat-checkbox>\n                          </ng-container>\n                        </div>\n                      </div>\n                </div>\n\n              </div>\n              \n              <div class=\"row mt15\">\n                <div *ngFor=\"let list of salesNetworkData\" class=\"col s4 pl0\">\n                  \n                  <div class=\"territory-info mb15\">\n                    <div class=\"head\" [ngClass]=\"{'active':active[list.roleId]==true}\">\n\n                      <h2>{{list.roleName}}</h2>\n\n                       <span>\n                          <mat-checkbox class=\"fix-check\" [(ngModel)]=\"list.selectAll\" (change)=\"onSelectAllHandler(list.roleId, list.selectAll)\" name=\"selectAll{{list.roleName}}\">&nbsp;</mat-checkbox>\n                       </span>\n\n                      <i class=\"material-icons search-icon right20\" (click)=\"toggleSearch(list.roleId,'open')\"  matRipple>search</i>\n                    \n                      <input type=\"text\" id=\"{{list.roleId}}\" [(ngModel)]=\"list.searchData\" name=\"{{list.roleName}}\" placeholder=\"search...\" class=\"fix-search\">\n                      \n                      <i class=\"material-icons close-icon\" (click)=\"list.searchData= '';toggleSearch(list.roleId,'close')\" matRipple>clear</i>\n\n                    </div>\n\n\n                    <div *ngIf=\"!list.roleDataArr || list.roleDataArr.length==0\" class=\"not-data\">\n                      <div class=\"inner-data\">\n                        <p>No Data</p>\n                      </div>\n                    </div>\n\n                    <div *ngIf=\"list.roleDataArr && list.roleDataArr.length>0\" class=\"cs-checkbox\">\n                      <div class=\"checkbox-outer\">\n                        <section *ngFor=\"let row of list.roleDataArr | myfilter:{src: 'annoucmentFilter', search: list.searchData};let stateIndex=index;\" class=\"checkbox-inner\">\n\n                            <ng-container>\n                              <span>\n                                <mat-checkbox [(ngModel)]=\"row.checked\"  value=\"{{row.userId}}\" (change) = \"saveNetworkData(row.userId, list.roleId, row.userName, row.checked)\" name=\"{{list.roleId}}\"  class=\"check-list content-ellipsis\">{{row.userName}}/{{row.city}}</mat-checkbox>\n                              </span>\n                            </ng-container>\n                        </section>\n                      </div>\n                    </div>\n                  </div>\n                </div> \n              </div>\n              \n              <mat-error *ngIf=\"f.submitted && !salesNetworkSelectedData.length\" class=\"invalid-feedback\">\n                  <mat-error *ngIf=\"f.submitted && !salesNetworkSelectedData.length\">Choose Sales Network!</mat-error>\n              </mat-error>\n              \n              <div class=\"row\">\n                <div class=\"col s8 pl0\">\n                  <div class=\"from-fields\">\n                    <div class=\"col s12 pl0 control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr wp100 h-input\">\n                        <input matInput [(ngModel)]=\"data.subject\" placeholder=\"Subject\" name=\"subject\" #subject=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && subject.invalid }\" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && subject.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"subject.errors.required\">Subject required</mat-error>\n                      </mat-error>\n                    </div>\n                    <div class=\"col s12 padding0 action-format\">\n                        <div class=\"cs-heading margin0\">\n                          <h2>ACTION</h2>\n                        </div>\n                        <div class=\"select-one padding10\">\n                          <section class=\"check-list\" >\n                            <mat-checkbox [(ngModel)]=\"data.isSMSChecked\" name=\"smsChecked\" [disabled]=\"urls && urls.length>0\" class=\"select-check\">SMS</mat-checkbox>\n                            <mat-checkbox [(ngModel)]=\"data.isEmailChecked\" \n                            name=\"emailChecked\" class=\"select-check\">EMAIL</mat-checkbox>\n                          </section>\n                          \n                          <mat-error *ngIf=\"f.submitted && !data.isSMSChecked && !data.isEmailChecked\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"f.submitted && !data.isSMSChecked && !data.isEmailChecked\">Choose atleast one Option!</mat-error>\n                          </mat-error>\n                          \n                        </div>\n                      </div>\n                    <div class=\"col s12 mt15 pl0 control-field\" >\n                          <app-ngx-editor   [placeholder]=\"'Description'\" [spellcheck]=\"true\" name=\"description\" name=\"description\" [(ngModel)]=\"data.message\"  #description=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && description.invalid,'toolbar-none':data.isSMSChecked!='' }\" required></app-ngx-editor>\n                    </div>\n\n                    <mat-error class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"!data.message\">Description Required!</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n\n\n                <div class=\"col s4\">\n                    <div class=\"upload-excel mt5\">\n                        <label>\n                          <input (change)=\"insertDocument($event)\" style=\"display: none;\" type=\"file\">\n                          <div class=\"outer\">\n                            <div class=\"innear\">\n                              <i class=\"material-icons upload-ic\">cloud_upload</i>\n                              <p>Add Document</p>\n                            </div>\n                          </div>\n                        </label>\n                        <p *ngIf=\"selectedFile && selectedFile[0]\">{{selectedFile[0].name}}</p>\n                        <span class=\"file-format\">PDF format attactment</span>\n                      </div>\n\n                  <!-- <div class=\"sprate-box\">\n                    <div class=\"cs-logs\">\n                      <div class=\"cs-heading\">\n                        <label >\n                          <input type=\"file\" (change)=\"insertDocument($event)\" style=\"display: none;\">\n                          Add Document\n                        </label>\n                      </div>\n                      <div class=\"logs-outer padding0\">\n                        <div class=\"cs-image\">\n                          <div class=\"cs-upload\">\n                            <label>\n                              <input type=\"file\" (change)=\"insertDocument($event)\" style=\"display: none;\">\n                              <span>\n                                <i class=\"material-icons\">add</i>\n                                <p>Add Document</p>\n                              </span>\n                              \n                              <a class=\"close\" *ngIf=\"urls.length > 0\" matRipple matTooltip=\"Delete\" (click)=\"deleteDocument(i)\"><i class=\"material-icons\">delete_sweep</i></a>\n                            </label>\n                          </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div> -->\n                  \n                  </div>\n                </div>\n                \n                \n                \n              </div>\n            </div>\n            \n            <div class=\"col s12\">\n              <div class=\"cs-btn fixedd mt32 text-right\">\n                <div class=\"in-btn\">\n                  <button type=\"submit\" mat-raised-button disabled=\"{{button}}\" color=\"accent\">Save</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </form>\n  </div>\n  \n  <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/annoucement/add-annoucement/add-annoucement.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/annoucement/add-annoucement/add-annoucement.component.ts ***!
  \**************************************************************************/
/*! exports provided: AddAnnoucementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAnnoucementComponent", function() { return AddAnnoucementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_6__);







var AddAnnoucementComponent = /** @class */ (function () {
    function AddAnnoucementComponent(db, toast, router) {
        var _this = this;
        this.db = db;
        this.toast = toast;
        this.router = router;
        this.button = false;
        this.territory_form = {};
        this.statelist = [];
        this.states = [];
        this.districts = [];
        this.cities = [];
        this.city = [];
        this.stateval = [];
        this.districtval = [];
        this.isSegmentRequired = false;
        this.data = {};
        this.showDistributorList = false;
        this.showRetailerList = false;
        this.showSalesList = false;
        this.salesNetworkData = [];
        this.salesNetworkSelectedData = [];
        this.userRolesArr = [];
        this.selectedFile = [];
        this.documentData = {};
        this.segmentlist = [];
        this.urls = [];
        this.active = {};
        this.data.isSMSChecked = false;
        this.data.isEmailChecked = false;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.statelist = response;
            _this.states = _this.statelist.data;
            console.log(_this.states);
        });
    }
    AddAnnoucementComponent.prototype.ngOnInit = function () {
        this.getUserTypeRoles();
        this.segment_list();
    };
    AddAnnoucementComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    AddAnnoucementComponent.prototype.getSegmentChangeHandler = function () {
        console.log(this.data.segment);
        if (this.data.segment.length == 0) {
            for (var index = 0; index < this.userRolesArr.length; index++) {
                this.userRolesArr[index].checked = false;
            }
            this.salesNetworkData = [];
            this.salesNetworkSelectedData = [];
        }
        else {
            this.segmentBasedNetworkData();
        }
    };
    AddAnnoucementComponent.prototype.segmentBasedNetworkData = function () {
        var _this = this;
        this.salesNetworkData = [];
        var _loop_1 = function (index) {
            if (this_1.userRolesArr[index].checked) {
                this_1.loader = true;
                var apiUrl = '';
                var apiObject = {};
                if (this_1.userRolesArr[index].userTypeId == '3' && this_1.userRolesArr[index].roleId == '12') {
                    apiUrl = 'network/list';
                    apiObject = { role: this_1.userRolesArr[index].roleId };
                }
                else {
                    apiUrl = 'user/list';
                    apiObject = {
                        'userType': this_1.userRolesArr[index].userTypeId,
                        'role': this_1.userRolesArr[index].roleId,
                        'segments': this_1.data.segment,
                        'currentPage': 1,
                        'pageSize': 200,
                        'totalRecords': 200
                    };
                }
                console.log(apiUrl);
                console.log(apiObject);
                this_1.loader = true;
                this_1.db.fetchData(apiObject, apiUrl).subscribe(function (response) {
                    console.log(response);
                    setTimeout(function () {
                        _this.loader = false;
                    }, 2000);
                    if (response.data && response.data.length > 0) {
                        var lastIndex = null;
                        var isRoleExist = _this.salesNetworkData.findIndex(function (row) { return row.roleId == response.data[0].role; });
                        if (isRoleExist == -1) {
                            var userRoleData = _this.userRolesArr.filter(function (row) { return row.roleId == response.data[0].role; });
                            _this.salesNetworkData.push({ roleId: _this.userRolesArr[index].roleId, roleName: userRoleData[0]['roleName'], roleDataArr: [] });
                            lastIndex = _this.salesNetworkData.length - 1;
                        }
                        else {
                            lastIndex = isRoleExist;
                        }
                        for (var index1 = 0; index1 < response.data.length; index1++) {
                            _this.salesNetworkData[lastIndex].roleDataArr.push({ userId: response.data[index1].userId, userName: response.data[index1].userName, city: response.data[index1].city });
                        }
                    }
                    console.log(_this.salesNetworkData);
                });
            }
        };
        var this_1 = this;
        for (var index = 0; index < this.userRolesArr.length; index++) {
            _loop_1(index);
        }
        console.log(this.salesNetworkData);
    };
    AddAnnoucementComponent.prototype.getUserTypeRoles = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            console.log(response.length);
            for (var index = 0; index < response.data.length; index++) {
                console.log('hello');
                for (var index1 = 0; index1 < response.data[index].roles.length; index1++) {
                    var typeRoles = response.data[index].roles[index1];
                    _this.userRolesArr.push({ userTypeId: response.data[index].userTypeId,
                        roleId: typeRoles.roleId,
                        roleName: typeRoles.roleName });
                }
            }
            console.log(_this.userRolesArr);
        });
    };
    AddAnnoucementComponent.prototype.getDistrictList = function (state, stateval) {
        var _this = this;
        this.loader = true;
        this.st = Array(state);
        console.log(stateval);
        if (stateval === true) {
            this.db.fetchData(this.st, 'district/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.districts.push(response.data[0]);
                console.log(_this.districts);
            });
        }
        else {
            var x = this.districts.findIndex(function (items) { return items.stateName === state; });
            this.districts.splice(x, 1);
        }
    };
    AddAnnoucementComponent.prototype.getAreaList = function (stateName, districtName, districtval) {
        var _this = this;
        console.log(districtval);
        console.log(stateName);
        console.log(districtName);
        if (districtval == true) {
            this.loader = true;
            this.db.fetchData(Array({ "stateName": stateName, "distrcits": Array({ "districtName": districtName }) }), 'city/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.cities.push({ "stateName": stateName, "distrcits": districtName, "citiesnpins": response.data[0].distrcits[0].cities });
                console.log(_this.cities);
                _this.city = _this.cities[0];
                console.log(_this.city);
            });
        }
        else {
            var x = this.cities.findIndex(function (items) { return items.distrcits === districtName; });
            this.cities.splice(x, 1);
        }
    };
    AddAnnoucementComponent.prototype.roleSelectedChange = function (roleSelected) {
        var _this = this;
        console.log(roleSelected);
        if (roleSelected.checked === true) {
            var apiUrl_1 = '';
            var apiObject_1 = {};
            if (roleSelected.userTypeId == '3' && roleSelected.roleId == '12') {
                apiUrl_1 = 'network/list';
                apiObject_1 = { role: roleSelected.roleId };
            }
            else {
                apiUrl_1 = 'user/list';
                if (roleSelected.userTypeId == '1') {
                    apiObject_1 = {
                        'userType': roleSelected.userTypeId,
                        'role': roleSelected.roleId,
                        'currentPage': 1,
                        'pageSize': 200,
                        'totalRecords': 200
                    };
                }
                if (roleSelected.userTypeId == '2') {
                    apiObject_1 = {
                        'userType': roleSelected.userTypeId,
                        'role': roleSelected.roleId,
                        'segments': this.data.segment,
                        'currentPage': 1,
                        'pageSize': 200,
                        'totalRecords': 200
                    };
                }
            }
            console.log(apiUrl_1);
            console.log(apiObject_1);
            this.loader = true;
            setTimeout(function () {
                _this.db.fetchData(apiObject_1, apiUrl_1).subscribe(function (response) {
                    console.log(response);
                    _this.loader = false;
                    _this.salesNetworkData.push({ roleId: roleSelected.roleId, roleName: roleSelected.roleName, roleDataArr: [] });
                    var lastIndex = _this.salesNetworkData.length - 1;
                    console.log(_this.salesNetworkData);
                    if (response.data) {
                        for (var index = 0; index < response.data.length; index++) {
                            _this.salesNetworkData[lastIndex].roleDataArr.push({ userId: response.data[index].userId, userName: response.data[index].userName, city: response.data[index].cityOffice });
                        }
                    }
                    console.log(_this.userRolesArr);
                });
            }, 1000);
        }
        if (roleSelected.checked === false) {
            var itemIndex = this.salesNetworkData.findIndex(function (salesRow) { return salesRow.roleId === roleSelected.roleId; });
            this.salesNetworkData.splice(itemIndex, 1);
            this.salesNetworkSelectedData = this.salesNetworkSelectedData.filter(function (selectedRow) { return selectedRow.roleId !== roleSelected.roleId; });
            console.log(this.salesNetworkSelectedData);
        }
        console.log(this.salesNetworkData);
    };
    AddAnnoucementComponent.prototype.saveNetworkData = function (userId, roleId, userName, isChecked) {
        console.log(isChecked);
        if (isChecked === false) {
            var rowIndex = this.salesNetworkSelectedData.findIndex(function (userRow) { return userRow.id === userId; });
            this.salesNetworkSelectedData.splice(rowIndex, 1);
            for (var index = 0; index < this.salesNetworkData.length; index++) {
                if (this.salesNetworkData[index].roleId == roleId) {
                    if (!isChecked) {
                        this.salesNetworkData[index].selectAll = false;
                    }
                }
            }
        }
        if (isChecked === true) {
            this.salesNetworkSelectedData.push({ roleId: roleId, userId: userId, userName: userName, isRead: false, readOn: '2019-02-16T09:57:00.905Z' });
        }
        console.log(this.salesNetworkSelectedData);
    };
    AddAnnoucementComponent.prototype.insertDocument = function (data) {
        var _this = this;
        this.urls = [];
        this.selectedFile = [];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        console.log(this.selectedFile);
        //  setTimeout(() => {
        //    this.Insert_Image();
        //  }, 500);
    };
    AddAnnoucementComponent.prototype.deleteDocument = function (index) {
        this.urls.splice(index, 1);
        this.selectedFile.splice(index, 1);
    };
    AddAnnoucementComponent.prototype.onSelectAllHandler = function (roleId, isChecked) {
        console.log(this.salesNetworkData);
        console.log(roleId, isChecked);
        for (var index = 0; index < this.salesNetworkData.length; index++) {
            if (this.salesNetworkData[index].roleId == roleId) {
                for (var userIndex = 0; userIndex < this.salesNetworkData[index].roleDataArr.length; userIndex++) {
                    this.salesNetworkData[index].roleDataArr[userIndex].checked = isChecked;
                    this.saveNetworkData(this.salesNetworkData[index].roleDataArr[userIndex].userId, roleId, this.salesNetworkData[index].roleDataArr[userIndex].userName, isChecked);
                }
            }
        }
    };
    AddAnnoucementComponent.prototype.saveAnnouncementDetail = function () {
        var _this = this;
        var segmentRequired = false;
        for (var index = 0; index < this.userRolesArr.length; index++) {
            if (this.userRolesArr[index].userTypeId == 2) {
                segmentRequired = true;
            }
        }
        console.log(segmentRequired, this.data.segment);
        if (segmentRequired && this.data.segment && this.data.segment.length == 0) {
            this.isSegmentRequired = true;
            jquery__WEBPACK_IMPORTED_MODULE_6__('#segment').focus();
            return;
        }
        var annoucmentDocumentData = [];
        for (var i = 0; i < this.selectedFile.length; i++) {
            this.documentData = new FormData;
            this.documentData.action = 1;
            this.documentData.binaryData = this.urls[i];
            this.documentData.documentType = 1;
            this.documentData.documentName = this.data.subject;
            this.documentData.referenceId = 0;
            this.documentData.fileName = "Document" + i + ".pdf", this.selectedFile[i];
            this.documentData.iconName = "DocumentIcon" + i + ".pdf", this.selectedFile[i];
            console.log(this.documentData);
            annoucmentDocumentData[i] = JSON.parse(JSON.stringify(this.documentData));
        }
        console.log(annoucmentDocumentData);
        this.loader = true;
        this.button = true;
        console.log(this.salesNetworkSelectedData);
        this.db.fetchData({
            'announcementId': 0,
            'message': this.data.message,
            'subject': this.data.subject,
            'sendSMS': this.data.isSMSChecked,
            'sendEmail': this.data.isEmailChecked,
            'readBy': 0,
            'readPending': 0,
            'sentTo': 0,
            'announcementToRoles': this.salesNetworkSelectedData,
            'documents': annoucmentDocumentData,
            'isActive': true,
        }, 'announcement/add').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.toast.openSucess('Announcement Saved Sucessfully!', '');
            _this.router.navigate(['/annoucement-list']);
        });
    };
    AddAnnoucementComponent.prototype.toggleSearch = function (key, action) {
        console.log(action);
        console.log(key);
        if (action === 'open') {
            this.active[key] = true;
            jquery__WEBPACK_IMPORTED_MODULE_6__('#' + key).focus();
        }
        if (action === 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    AddAnnoucementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-annoucement',
            template: __webpack_require__(/*! ./add-annoucement.component.html */ "./src/app/annoucement/add-annoucement/add-annoucement.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"],
            src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
    ], AddAnnoucementComponent);
    return AddAnnoucementComponent;
}());



/***/ }),

/***/ "./src/app/annoucement/annoucement-detail/annoucement-detail.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/annoucement/annoucement-detail/annoucement-detail.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  \n    <div class=\"middle-container\">\n      <div class=\"page-heading\">\n        <img src=\"assets/img/leads_icon.svg\" class=\"h-icon\">\n        <div class=\"heading-text\">\n          <h2>Announcement / Notice</h2>\n          <p>Create New Notice For all Users</p>\n        </div>\n      </div>\n    </div>\n    \n    <form name=\"form\" (ngSubmit)=\"f.form.valid && (data.isSMSChecked || data.isEmailChecked) &&  salesNetworkSelectedData.length > 0 && saveAnnouncementDetail()\"  #f=\"ngForm\" novalidate>\n\n    <div class=\"container-outer\">\n      <!-- <app-master-tab></app-master-tab>\n      <div class=\"container tab-container\" > -->\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box\">\n              <div class=\"cs-heading\">\n                <h2>ANNOUNCEMENT / NOTICE </h2>\n                \n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              \n              <mat-divider class=\"left-right-15 mt10\"></mat-divider>\n              \n              <div class=\"row\">\n                  <div class=\"col s12 pr0 pl0\">\n                    <div class=\"user-type\">\n                      <section class=\"example-section\">\n\n                        <span *ngFor=\"let list of userRolesArr\">\n                          <mat-checkbox *ngIf=\"list.userTypeId==2\" [(ngModel)]=\"list.checked\" (change)=\"roleSelectedChange(list)\" name=\"{{list.roleName}}\" class=\"example-margin\" color=\"accent\">{{list.roleName}}</mat-checkbox>\n                       </span>\n                      </section>\n                    </div>\n                  </div>\n                </div>\n            \n            \n                <div class=\"row mt15\">\n                  <div class=\"col s4\">\n                    <div class=\"territory-info\">\n\n                      <div class=\"head\" [ngClass]=\"{'active':active.state==true}\">\n                        <h2>STATE</h2>\n\n                        <!-- <mat-checkbox class=\"fix-check\" [(ngModel)]=\"checkState\">&nbsp;</mat-checkbox> -->\n                        <i class=\"material-icons search-icon\" (click)=\"toggleterritory('state','open')\"  matRipple>search</i>\n\n                        <input type=\"text\" [(ngModel)]=\"data.stateSearch\" name=\"stateSearch\" placeholder=\"search...\" class=\"fix-search\">\n                        <i class=\"material-icons close-icon\" (click)=\"data.stateSearch='';toggleterritory('state','close')\" matRipple>clear</i>\n                      </div>\n\n                      <div class=\"cs-checkbox\">\n\n                        <div class=\"checkbox-outer\">\n                          <section class=\"checkbox-inner\">\n                            <ng-container *ngFor=\"let state of states | myfilter:{src: 'state', search: data.stateSearch}; let i=index\">    \n                              <mat-checkbox class=\"check-list\"  (change)=\"getDistrictList(state,stateval[i])\"  [(ngModel)]=\"stateval[i]\"  name=\"stateVal\"  value=\"{{state}}\">{{state}}</mat-checkbox>\n                            </ng-container>\n                          </section>\n                        </div>\n\n                        <!-- <div class=\"botm-pdr\">\n                          <div class=\"botm-content\" [ngClass]=\"{'active':active.addone==true}\">\n                            <a mat-button (click)=\"toggleterritory('addone','open')\">add new</a>\n                            <input type=\"text\" placeholder=\"Enter state\" class=\"botm-input\" name=\"state\" [(ngModel)]=\"territory_form.state\" required>\n                            <a class=\"add-input\" matRipple >save</a>\n                          </div>\n                        </div> -->\n\n                      </div>\n\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s4\">\n                    <div class=\"territory-info\">\n\n                      <div class=\"head\" [ngClass]=\"{'active':active.district==true}\">\n                        <h2>DISTRICTS</h2>\n\n                        <!-- <mat-checkbox class=\"fix-check\"  [(ngModel)]=\"checkDistrict\">&nbsp;</mat-checkbox> -->\n\n                        <i class=\"material-icons search-icon\" (click)=\"toggleterritory('district','open')\"  matRipple>search</i>\n\n                        <input type=\"text\" [(ngModel)]=\"data.districtSearch\" name=\"districtSearch\"  placeholder=\"search...\" class=\"fix-search\">\n\n                        <i class=\"material-icons close-icon\" (click)=\"data.districtSearch='';toggleterritory('district','close')\" matRipple>clear</i>\n                      </div>\n\n                      <div class=\"cs-checkbox\">\n\n                        <div class=\"checkbox-outer\">\n                          <section class=\"checkbox-inner\">\n                              <ng-container *ngFor= \"let dist of districts\">\n                                  <div style=\"text-align:center;padding: 5px;background:#eee;color: #111;\">{{dist.stateName}}</div>   \n                                  \n                                  <!-- (change)=\"getAreaList(dist.stateName,distr.districtName,distr.checked)\" -->\n\n                                  <mat-checkbox class=\"check-list\" *ngFor= \"let distr of dist.distrcits | myfilter:{src: 'district', search: data.districtSearch};let j=index\" [(ngModel)]=\"distr.checked\" name=\"district\"  value=\"{{distr.districtName}}\">{{distr.districtName}}</mat-checkbox>                                       \n                                </ng-container>\n                          </section>\n                        </div>\n                        \n                        <!-- <div class=\"botm-pdr\" >\n                          <div class=\"botm-content\" [ngClass]=\"{'active':active.addtwo==true}\">\n                            <a mat-button (click)=\"toggleterritory('addtwo','open')\">add new</a>\n                            <input type=\"text\" placeholder=\"Enter districts\" name=\"districts\"  class=\"botm-input\" required>\n                            <a class=\"add-input\" matRipple >save</a>\n                          </div>\n                        </div> -->\n\n                      </div>\n\n                    </div>\n                  </div> \n                  \n                  \n                  <div class=\"col s4\">\n                    <div class=\"territory-info\">\n\n                      <div class=\"head\" [ngClass]=\"{'active':active.pincode==true}\">\n                        <h2>Sales Network</h2>\n\n                        <!-- <mat-checkbox class=\"fix-check\">&nbsp;</mat-checkbox>\n                        <i class=\"material-icons search-icon\" (click)=\"toggleterritory('pincode','open')\"  matRipple>search</i>\n                        <input type=\"text\" placeholder=\"search...\" class=\"fix-search\">\n                        <i class=\"material-icons close-icon\" (click)=\"toggleterritory('pincode','close')\" matRipple>clear</i> -->\n\n                      </div>\n\n                      <div class=\"cs-checkbox\">\n\n                        <div class=\"checkbox-outer\">\n                          <section class=\"checkbox-inner\">\n\n                              <ng-container >\n                                  <ng-container>\n\n                                  <span *ngFor=\"let list of salesNetworkData\">\n\n                                     <div style=\"text-align:center;padding: 5px;background:#eee;color: #111;\">{{list.roleName}}</div>\n\n                                     <mat-checkbox [(ngModel)]=\"row.checked\" *ngFor=\"let row of list.roleDataArr\" value=\"{{row.userId}}\" (change) = \"saveNetworkData(row.userId, list.roleId, row.userName, row.checked)\" name=\"{{row.userName}}\"  class=\"check-list\">{{row.userName}}</mat-checkbox>\n\n                                  </span>\n\n                                  </ng-container>\n                              </ng-container>\n\n                           <!-- <ng-container *ngFor=\"let city of cities;let i=index;\" >\n                              <ng-container *ngFor=\"let ct of city.citiesnpins;let j=index;\"><div style=\"text-align:center;padding: 5px;background:#eee;color: #111;\">{{ct.cityName}}</div>\n                                <mat-checkbox class=\"check-list\" *ngFor=\"let area of ct.areas;let i=index;\">{{area.pincode}}</mat-checkbox>\n                              </ng-container>\n                          </ng-container> -->\n\n                          </section>\n                        </div>\n\n                        <!-- <div class=\"botm-pdr\">\n                          <div class=\"botm-content\" [ngClass]=\"{'active':active.addthree==true}\"> -->\n                            <!-- <a mat-button (click)=\"toggleterritory('addthree','open')\">add new</a>\n                            <input type=\"text\" placeholder=\"Enter Pincode\" name=\"pincode\" [(ngModel)]=\"territory_form.pincode\" class=\"botm-input\" required>\n                            <a class=\"add-input\" matRipple >save</a> -->\n      \n                              <!-- <mat-form-field class=\"botm-select\">\n                                <select matNativeControl required>\n                                  <option value=\"volvo\">Faridabad</option>\n                                  <option value=\"saab\">Gurugram</option>\n                                  <option value=\"mercedes\">Rewari</option>\n                                  <option value=\"audi\">Panipat</option>\n                                </select>\n                              </mat-form-field>\n                          </div>\n                        </div> -->\n\n                      </div>\n\n                    </div>\n                  </div> \n                </div>\n\n                <mat-error *ngIf=\"f.submitted && !salesNetworkSelectedData.length\" class=\"invalid-feedback\">\n                    <mat-error *ngIf=\"f.submitted && !salesNetworkSelectedData.length\">Choose Sales Network!</mat-error>\n                </mat-error>\n              \n              <!-- <div class=\"row\">\n                <div class=\"col s12\">\n                  <div class=\"editor\"> -->\n                    <!-- <img src=\"assets/img/editor.jpg\" class=\"wp100 mt15\"> -->\n\n                    <!-- <mat-form-field class=\"cs-input wp100 h-input\">\n                        <textarea matInput placeholder=\"Description\" required></textarea>\n                    </mat-form-field>\n\n                  </div>\n                </div>\n              </div> -->\n\n              <div class=\"row\">\n                <div class=\"col s12\">\n                  <div class=\"from-fields\">\n                 <div class=\"control-field\">\n                  <mat-form-field class=\"cs-input wp100 h-input\">\n                      <textarea matInput [(ngModel)]=\"data.subject\" placeholder=\"Subject\" name=\"subject\" #subject=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && subject.invalid }\" required></textarea>\n                  </mat-form-field>\n\n                  <mat-error *ngIf=\"f.submitted && subject.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"subject.errors.required\">Subject required</mat-error>\n                    </mat-error>\n                  <!-- <mat-error *ngIf=\"f.submitted && description.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"description.errors.required\">Description is required</mat-error>\n                    </mat-error> -->\n                  </div>\n                </div>\n                </div>\n              </div>\n\n\n              <div class=\"row\">\n                  <div class=\"col s12\">\n                    <div class=\"from-fields\">\n                   <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input wp100 h-input\">\n                        <textarea matInput [(ngModel)]=\"data.message\" placeholder=\"Description\" name=\"message\" #message=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && message.invalid }\" required></textarea>\n                    </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && message.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"message.errors.required\">Description required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  </div>\n                </div>\n              \n              <mat-divider class=\"left-right-15 mt10 mb10\"></mat-divider>\n              <div class=\"cs-heading\">\n                <h2>ACTION</h2>\n              </div>\n              <mat-divider class=\"left-right-15 mt10\"></mat-divider>\n              \n              <div class=\"row\">\n                <div class=\"col s12\">\n                  <div class=\"select-one\">\n                    <section class=\"check-list\">\n                      <mat-checkbox [(ngModel)]=\"data.isSMSChecked\" name=\"smsChecked\" class=\"select-check\">SMS</mat-checkbox>\n                      <mat-checkbox [(ngModel)]=\"data.isEmailChecked\" \n                      name=\"emailChecked\" class=\"select-check\">EMAIL</mat-checkbox>\n                    </section>\n\n                    <mat-error *ngIf=\"f.submitted && !data.isSMSChecked && !data.isEmailChecked\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"f.submitted && !data.isSMSChecked && !data.isEmailChecked\">Choose atleast one Option!</mat-error>\n                    </mat-error>\n\n                  </div>\n                </div>\n              </div>\n              \n            </div>\n          </div>\n          \n          <div class=\"col s12\">\n            <div class=\"cs-btn fixedd mt32 text-right\">\n              <div class=\"in-btn\">\n                <button type=\"submit\" mat-raised-button color=\"accent\">Save</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      <!-- </div> -->\n    </div>\n\n   </form>\n  </div>\n  \n  <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/annoucement/annoucement-detail/annoucement-detail.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/annoucement/annoucement-detail/annoucement-detail.component.ts ***!
  \********************************************************************************/
/*! exports provided: AnnoucementDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnnoucementDetailComponent", function() { return AnnoucementDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");







var AnnoucementDetailComponent = /** @class */ (function () {
    function AnnoucementDetailComponent(db, router, toast, route, dialog, msg) {
        var _this = this;
        this.db = db;
        this.router = router;
        this.toast = toast;
        this.route = route;
        this.dialog = dialog;
        this.msg = msg;
        this.territory_form = {};
        this.statelist = [];
        this.states = [];
        this.districts = [];
        this.cities = [];
        this.city = [];
        this.stateval = [];
        this.districtval = [];
        this.annoucementDetails = [];
        this.data = {};
        this.showDistributorList = false;
        this.showRetailerList = false;
        this.showSalesList = false;
        this.salesNetworkData = [];
        this.salesNetworkSelectedData = [];
        this.userRolesArr = [];
        this.active = {};
        this.getUserTypeRoles();
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            if (_this.id) {
                _this.annoucementdetail();
            }
            else {
            }
        });
        this.data.isSMSChecked = false;
        this.data.isEmailChecked = false;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.statelist = response;
            _this.states = _this.statelist.data;
            console.log(_this.states);
        });
    }
    AnnoucementDetailComponent.prototype.ngOnInit = function () {
    };
    AnnoucementDetailComponent.prototype.getUserTypeRoles = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            console.log(response.length);
            for (var index = 0; index < response.data.length; index++) {
                console.log('hello');
                for (var index1 = 0; index1 < response.data[index].roles.length; index1++) {
                    var typeRoles = response.data[index].roles[index1];
                    _this.userRolesArr.push({ userTypeId: response.data[index].userTypeId,
                        roleId: typeRoles.roleId,
                        roleName: typeRoles.roleName });
                }
            }
            console.log(_this.userRolesArr);
        });
    };
    AnnoucementDetailComponent.prototype.annoucementdetail = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({
            "announcementId": this.id
        }, 'announcement/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.annoucementDetails = response['data'][0];
            console.log(_this.annoucementDetails);
            _this.data.subject = _this.annoucementDetails.subject;
            _this.data.isSMSChecked = _this.annoucementDetails.sendSMS;
            _this.data.isEmailChecked = _this.annoucementDetails.sendEmail;
            var _loop_1 = function (i) {
                _this.annoucementDetails.announcementToRoles[i].checked = true;
                _this.roleSelectedChange(_this.annoucementDetails.announcementToRoles[i]);
                console.log(_this.annoucementDetails.announcementToRoles[i]);
                var userRoleIndex = _this.userRolesArr.findIndex(function (x) { return x.roleId == _this.annoucementDetails.announcementToRoles[i].roleId; });
                console.log(userRoleIndex);
                _this.userRolesArr[userRoleIndex].checked = true;
            };
            for (var i = 0; i < _this.annoucementDetails.announcementToRoles.length; i++) {
                _loop_1(i);
            }
        });
    };
    AnnoucementDetailComponent.prototype.getDistrictList = function (state, stateval) {
        var _this = this;
        this.st = Array(state);
        console.log(stateval);
        if (stateval === true) {
            this.loader = true;
            this.db.fetchData(this.st, 'district/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.districts.push(response.data[0]);
                console.log(_this.districts);
            });
        }
        else {
            var x = this.districts.findIndex(function (items) { return items.stateName === state; });
            this.districts.splice(x, 1);
        }
    };
    AnnoucementDetailComponent.prototype.getAreaList = function (stateName, districtName, districtval) {
        var _this = this;
        console.log(districtval);
        console.log(stateName);
        console.log(districtName);
        if (districtval == true) {
            this.loader = true;
            this.db.fetchData(Array({ "stateName": stateName, "distrcits": Array({ "districtName": districtName }) }), 'city/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.cities.push({ "stateName": stateName, "distrcits": districtName, "citiesnpins": response.data[0].distrcits[0].cities });
                console.log(_this.cities);
                _this.city = _this.cities[0];
                console.log(_this.city);
            });
        }
        else {
            var x = this.cities.findIndex(function (items) { return items.distrcits === districtName; });
            this.cities.splice(x, 1);
        }
    };
    AnnoucementDetailComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    AnnoucementDetailComponent.prototype.roleSelectedChange = function (roleSelected) {
        var _this = this;
        console.log(roleSelected);
        if (roleSelected.checked === true) {
            this.loader = true;
            this.db.fetchData({
                'userType': roleSelected.userTypeId,
                'role': roleSelected.roleId,
                'currentPage': 1,
                'pageSize': 50,
                'totalRecords': 50
            }, 'user/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.salesNetworkData.push({ roleId: roleSelected.roleId, roleName: roleSelected.roleName, roleDataArr: [] });
                var lastIndex = _this.salesNetworkData.length - 1;
                console.log(_this.salesNetworkData);
                if (response.data) {
                    for (var index = 0; index < response.data.length; index++) {
                        _this.salesNetworkData[lastIndex].roleDataArr.push({ userId: response.data[index].userId, userName: response.data[index].userName });
                    }
                }
            });
        }
        if (roleSelected.checked === false) {
            var itemIndex = this.salesNetworkData.findIndex(function (salesRow) { return salesRow.roleId === roleSelected.roleId; });
            this.salesNetworkData.splice(itemIndex, 1);
            this.salesNetworkSelectedData = this.salesNetworkSelectedData.filter(function (selectedRow) { return selectedRow.roleId !== roleSelected.roleId; });
            console.log(this.salesNetworkSelectedData);
        }
        console.log(this.salesNetworkData);
    };
    AnnoucementDetailComponent.prototype.saveNetworkData = function (userId, roleId, userName, isChecked) {
        console.log(isChecked);
        if (isChecked === false) {
            var rowIndex = this.salesNetworkSelectedData.findIndex(function (userRow) { return userRow.id === userId; });
            this.salesNetworkSelectedData.splice(rowIndex, 1);
        }
        if (isChecked === true) {
            this.salesNetworkSelectedData.push({ roleId: roleId, userId: userId, userName: userName, isRead: true, readOn: '2019-02-16T09:57:00.905Z' });
        }
        console.log(this.salesNetworkSelectedData);
    };
    AnnoucementDetailComponent.prototype.saveAnnouncementDetail = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({
            'announcementId': 0,
            'message': this.data.message,
            'subject': this.data.subject,
            'sendSMS': this.data.isSMSChecked,
            'sendEmail': this.data.isEmailChecked,
            'readBy': 0,
            'readPending': 0,
            'sentTo': 0,
            'announcementToRoles': this.salesNetworkSelectedData,
            'isActive': true,
        }, 'announcement/add').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.toast.openSucess('Announcement Saved Sucessfully!', '');
            _this.router.navigate(['/annoucement-list']);
        });
    };
    AnnoucementDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-annoucement-detail',
            template: __webpack_require__(/*! ./annoucement-detail.component.html */ "./src/app/annoucement/annoucement-detail/annoucement-detail.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], AnnoucementDetailComponent);
    return AnnoucementDetailComponent;
}());



/***/ }),

/***/ "./src/app/annoucement/annoucement-list/annoucement-list.component.html":
/*!******************************************************************************!*\
  !*** ./src/app/annoucement/annoucement-list/annoucement-list.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/announcement.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Announcement</h2>\n        <p>Total SMS Count : <span>{{totalSMSCount}}</span></p>\n      </div>\n    </div>\n    <div  *ngIf=\"filter.subject || filter.message\" class=\"filter-container left-auto\">\n      <div (click)=\"clearfilter()\" class=\"filter-btn\">\n        <button mat-button >CLEAR FILTER</button>\n      </div>\n    </div>\n    <!-- <div class=\"show-value left-auto\">\n      <p>Lorem ipsum, dolor sit amet</p>\n    </div> -->\n  </div>\n  \n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th  class=\"w180\">Subject</th>\n                    <th class=\"w250\">Messege</th>\n                    <th *ngIf=\"userType==1\" >Role</th>\n                    <th *ngIf=\"userType==1\" class=\"w80 text-center\">Read</th>\n                    <th *ngIf=\"userType==1\" class=\"w90 text-center\">Unread</th>\n                    <th *ngIf=\"userType==1\" class=\"w120 text-center\">Total Users</th>\n                    <!-- <th class=\"w100\">Document</th> -->\n                    <th class=\"w110\">Send By</th>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-head bdrt\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th  class=\"w180\">\n                      <div class=\"th-search-acmt\" [ngClass]=\"{ 'clear-feilds' : removesubject == true}\">\n                        <mat-form-field>\n                          <input type=\"text\"  name=\"subject\" [(ngModel)]=\"filter.subject\" (ngModelChange)=\"subjectList()\" matInput [matAutocomplete]=\"auto1\">\n                          <mat-autocomplete #auto1=\"matAutocomplete\" >\n                            <mat-option *ngFor=\"let subject of subjectlist\" (click)=\"subjectFilter()\" value=\"{{subject.subject}}\">{{subject.subject}}</mat-option>\n                          </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removesubjectfilter()\"><i class=\"material-icons\">clear</i></a>\n                        </mat-form-field> \n                      </div>\n                    </th>\n                    <th class=\"w250\">\n                      <div class=\"th-search-acmt\" [ngClass]=\"{ 'clear-feilds' : removemessage== true}\">\n                        <mat-form-field>\n                          <input type=\"text\"  name=\"message\" [(ngModel)]=\"filter.message\" (ngModelChange)=\"messageList()\" matInput [matAutocomplete]=\"auto2\">\n                          <mat-autocomplete #auto2=\"matAutocomplete\" >\n                            <mat-option *ngFor=\"let message of messagelist\" (click)=\"messageFilter()\" value=\"{{message.message}}\">{{message.message}}</mat-option>\n                          </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removemessagefilter()\"><i class=\"material-icons\">clear</i></a>\n                        </mat-form-field> \n                      </div>\n                    </th>\n                    <th *ngIf=\"userType==1\">&nbsp;</th>\n                    <th *ngIf=\"userType==1\" class=\"w80 text-center\">&nbsp;</th>\n                    <th *ngIf=\"userType==1\" class=\"w90 text-center\">&nbsp;</th>\n                    <th *ngIf=\"userType==1\" class=\"w120 text-center\">&nbsp;</th>\n                    \n                    <!-- <th *ngIf=\"userType==1\" class=\"w100\">&nbsp;</th> -->\n                    <th class=\"w110\">&nbsp;</th>\n                    \n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table class=\"sno-border\">\n                  <tr *ngFor='let announcement of announcementlist;let i=index ' [ngClass]=\"{'download' : announcement.documents && announcement.documents.length>0}\">\n                    <td class=\"w30\">{{i+1}}</td>\n                    <td class=\"w180\">{{announcement.subject}}</td>\n                    <td class=\"w250 one-line\"   (click)=\"readMassage(announcement.message,announcement.announcementId)\"> <span [innerHTML]=\"announcement.message\"></span> <a class=\"more-text\">Read more</a></td>\n                    <td *ngIf=\"userType==1\">  \n                      <div class=\"tags\"> \n                        <ul>\n                          <li *ngFor=\"let role of announcement.announcementToRoles | unique;let j=index\"><span>{{role.rolename}}</span></li>\n                        </ul>\n                      </div>\n                      <!-- <div *ngFor=\"let role of announcement.announcementToRoles;let j=index\"><span>{{role.userName}}--({{role.rolename}})</span></div> -->\n                    </td>\n                    \n                    \n                    \n                    \n                    <td *ngIf=\"userType==1\" class=\"w80 text-center read pointer\" matRipple (click)=\"announcement.readBy!='0' ? checkRead(announcement.announcementToRoles,'read') : ''\">\n                      <!-- <a class=\"link-btn\" (click)=\"checkRead(announcement.announcementToRoles,'read')\">{{announcement.readBy}}</a> -->\n                      <a class=\"action-forward\"  >{{announcement.readBy}} <i class=\"material-icons\">arrow_forward_ios</i> </a>\n                    </td>\n                    \n                    <td *ngIf=\"userType==1\" class=\"w90 text-center unread pointer\" matRipple (click)=\"announcement.readPending!='0' ? checkRead(announcement.announcementToRoles,'unread') : ''\">\n                      <a class=\"action-forward\"  >{{announcement.readPending}}<i class=\"material-icons\">arrow_forward_ios</i> </a>\n                    </td>\n                    \n                    <td *ngIf=\"userType==1\" class=\"w120 text-center total pointer \" matRipple (click)=\"announcement.sentTo!='0' ? checkRead(announcement.announcementToRoles,'all') : ''\">\n                      <a class=\"action-forward\"  >{{announcement.sentTo}}<i class=\"material-icons\">arrow_forward_ios</i> </a>\n                    </td>\n                    \n                    <!-- <td class=\"w70 text-center green-clr\">{{announcement.readBy}}</td>\n                      <td class=\"w80 text-center red-clr\">{{announcement.readPending}}</td> -->\n                      <!-- <td class=\"w100 text-center blue-clr\" >\n                        <a *ngIf=\"announcement.documents && announcement.documents[0]\" class=\"link-btn underline\" href=\"{{dburl}}download/document/{{announcement.documents[0].documentId}}\">Download</a>\n                      </td> -->\n                      <td class=\"w110\">{{announcement.actionsms}} {{announcement.actionemail}}\n                        <div class=\"action-btns\">\n                          <a mat-button class=\"view\" *ngIf=\"announcement.documents && announcement.documents[0]\" href=\"{{dburl}}download/document/{{announcement.documents[0].documentId}}\"><i class=\"material-icons\">cloud_download</i></a>\n                          <button *ngIf=\"userRole==1\" mat-button class=\"delete\" (click)=\"deleteAnnouncement(announcement.announcementId)\"><i class=\"material-icons\">delete_sweep</i></button>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"div\" class=\"data-not-available\" >\n          <div class=\"outer\">\n            <div class=\"iinear\">\n              <div class=\"figure\" matRipple>\n                <div class=\"header\">\n                  <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                </div>\n                \n                <div class=\"description\">\n                \n                  <div class=\"img\">\n                    <i class=\"material-icons\">error_outline</i>\n                  </div>\n                  <div class=\"psc\">\n                    <p>data not available</p>\n                 \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"user.data.role == 1 && user.data.superAdmin\" class=\"fixed-multibtn-botm\">\n      <ul>\n        <li><a  matTooltip=\"Add New\" routerLink=\"/add-annoucement\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n      </ul>\n    </div>\n  </div>"

/***/ }),

/***/ "./src/app/annoucement/annoucement-list/annoucement-list.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/annoucement/annoucement-list/annoucement-list.component.ts ***!
  \****************************************************************************/
/*! exports provided: AnnoucementListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnnoucementListComponent", function() { return AnnoucementListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _read_massage_read_massage_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../read-massage/read-massage.component */ "./src/app/annoucement/read-massage/read-massage.component.ts");
/* harmony import */ var _read_popup_read_popup_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../read-popup/read-popup.component */ "./src/app/annoucement/read-popup/read-popup.component.ts");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_8__);









var AnnoucementListComponent = /** @class */ (function () {
    function AnnoucementListComponent(db, dialog, popupDialog) {
        var _this = this;
        this.db = db;
        this.dialog = dialog;
        this.popupDialog = popupDialog;
        this.userlist = [];
        this.rolelists = [];
        this.removesubject = false;
        this.removemessage = false;
        this.rolelistsystem1 = [];
        this.rolelistsales1 = [];
        this.subjectlist = [];
        this.rolelistclient1 = [];
        this.div = false;
        this.filter = {};
        this.user = {};
        this.announcementlist = [];
        this.dburl = '';
        this.distinctArray = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        if (this.userRole == 1) {
            this.announcement({ "currentPage": 1, "pageSize": 50 });
        }
        else {
            if (this.userId) {
                this.announcement({ "currentPage": 1, "pageSize": 50, "userId": this.userId });
            }
        }
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.userlist = response['data'];
        });
    }
    AnnoucementListComponent.prototype.ngOnInit = function () {
        this.dburl = this.db.dburl;
        this.getSMSCount();
    };
    AnnoucementListComponent.prototype.getSMSCount = function () {
        var _this = this;
        this.db.fileData('', 'getsmscount').subscribe(function (response) {
            console.log(response);
            if (response && response['data']) {
                _this.totalSMSCount = response['data'];
            }
            else {
                _this.totalSMSCount = 0;
            }
        });
    };
    AnnoucementListComponent.prototype.downloadFile = function () {
        console.log("function");
        this.db.excelFileData({}, 'pwnload').subscribe(function (result) {
            Object(file_saver__WEBPACK_IMPORTED_MODULE_8__["saveAs"])(result, 'YourFileName.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
        });
    };
    AnnoucementListComponent.prototype.rolelist = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.rolelists = response['data'];
            var filterrolesales = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.rolelistsales1 = filterrolesales[0].roles;
            var filterrolesystem = _this.rolelists.filter(function (x) { return x.userTypeId == 1; });
            _this.rolelistsystem1 = filterrolesystem[0].roles;
            var filterroleclient = _this.rolelists.filter(function (x) { return x.userTypeId == 3; });
            _this.rolelistclient1 = filterroleclient[0].roles;
            for (var i = 0; i < _this.rolelistsales1.length; i++) {
                _this.rolelistsystem1.push(_this.rolelistsales1[i]);
            }
            for (var i = 0; i < _this.rolelistclient1.length; i++) {
                _this.rolelistsystem1.push(_this.rolelistclient1[i]);
            }
            console.log(_this.rolelistsales1);
            console.log(_this.rolelistsystem1);
            var _loop_1 = function (i) {
                var _loop_2 = function (j) {
                    var annoucementrole = _this.rolelistsystem1.filter(function (x) { return x.roleId == _this.announcementlist[i].announcementToRoles[j].roleId; });
                    console.log(annoucementrole);
                    _this.announcementlist[i].announcementToRoles[j].rolename = annoucementrole[0].roleName;
                };
                for (var j = 0; j < _this.announcementlist[i].announcementToRoles.length; j++) {
                    _loop_2(j);
                }
            };
            for (var i = 0; i < _this.announcementlist.length; i++) {
                _loop_1(i);
            }
        });
    };
    AnnoucementListComponent.prototype.clearfilter = function () {
        this.removesubject = false;
        this.removemessage = false;
        this.filter = {};
        this.announcement({ "currentPage": 1, "pageSize": 50 });
    };
    AnnoucementListComponent.prototype.announcement = function (val) {
        var _this = this;
        this.loader = true;
        this.db.fetchData(val, 'announcement/list').subscribe(function (response) {
            console.log(response);
            console.log('hello');
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.announcementlist = response['data'];
            }
            if (response['status'] == 'Failed') {
                _this.div = true;
                _this.announcementlist = [];
            }
            console.log(_this.announcementlist);
            _this.rolelist();
            for (var i = 0; i < _this.announcementlist.length; i++) {
                console.log(_this.announcementlist[i].sendSMS);
                if (_this.announcementlist[i].sendSMS == true) {
                    console.log('hello');
                    _this.announcementlist[i].actionsms = "SMS";
                }
                else {
                    _this.announcementlist[i].actionsms = "";
                }
                if (_this.announcementlist[i].sendEmail == true) {
                    _this.announcementlist[i].actionemail = "Email";
                }
                else {
                    _this.announcementlist[i].actionemail = "";
                }
            }
        });
    };
    AnnoucementListComponent.prototype.readMassage = function (massage, id) {
        if (this.userRole != 1) {
            this.db.fileData("", "announcement/markread/" + id + "/" + this.userId).subscribe(function (result) {
                console.log(result);
            });
        }
        var dialogRef = this.popupDialog.open(_read_massage_read_massage_component__WEBPACK_IMPORTED_MODULE_6__["ReadMassageComponent"], {
            width: '600px',
            data: {
                massage: massage
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
        });
    };
    AnnoucementListComponent.prototype.checkRead = function (User, status) {
        console.log(status);
        var dialogRef = this.popupDialog.open(_read_popup_read_popup_component__WEBPACK_IMPORTED_MODULE_7__["ReadPopupComponent"], {
            width: '768px',
            data: {
                User: User,
                status: status
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
        });
    };
    AnnoucementListComponent.prototype.subjectList = function () {
        var _this = this;
        this.db.fetchData({ "subject": this.filter.subject }, 'announcement/list').subscribe(function (response) {
            console.log(response);
            _this.subjectlist = response['data'];
        });
    };
    AnnoucementListComponent.prototype.subjectFilter = function () {
        console.log(this.filter.subject);
        this.announcement({ "currentPage": 1,
            "pageSize": 50, "subject": this.filter.subject });
        this.removesubject = true;
    };
    AnnoucementListComponent.prototype.removesubjectfilter = function () {
        this.filter.subject = '';
        this.announcement({ "currentPage": 1,
            "pageSize": 50, "subject": this.filter.subject, "message": this.filter.message });
        this.removesubject = false;
    };
    AnnoucementListComponent.prototype.messageList = function () {
        var _this = this;
        this.db.fetchData({ "message": this.filter.message }, 'announcement/list').subscribe(function (response) {
            console.log(response);
            _this.messagelist = response['data'];
        });
    };
    AnnoucementListComponent.prototype.messageFilter = function () {
        console.log(this.filter.segment, this.filter.message);
        this.announcement({ "currentPage": 1,
            "pageSize": 50, "subject": this.filter.subject, "message": this.filter.message });
        this.removemessage = true;
    };
    AnnoucementListComponent.prototype.removemessagefilter = function () {
        this.filter.message = '';
        this.announcement({ "currentPage": 1,
            "pageSize": 50, "subject": this.filter.subject, "message": this.filter.message });
        this.removemessage = false;
    };
    AnnoucementListComponent.prototype.deleteAnnouncement = function (id) {
        var _this = this;
        this.dialog.delete('Announcement  !').then(function (result) {
            if (result) {
                console.log(id);
                _this.db.fileData("", "/announcement/delete/" + id).subscribe(function (result) {
                    console.log(result);
                    if (result['status'] == "Success") {
                        _this.announcement({ "currentPage": 1, "pageSize": 50 });
                    }
                });
            }
        });
    };
    AnnoucementListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-annoucement-list',
            template: __webpack_require__(/*! ./annoucement-list.component.html */ "./src/app/annoucement/annoucement-list/annoucement-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]])
    ], AnnoucementListComponent);
    return AnnoucementListComponent;
}());



/***/ }),

/***/ "./src/app/annoucement/annoucement-list/unique-filter.pipe.ts":
/*!********************************************************************!*\
  !*** ./src/app/annoucement/annoucement-list/unique-filter.pipe.ts ***!
  \********************************************************************/
/*! exports provided: UniquePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UniquePipe", function() { return UniquePipe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);



var UniquePipe = /** @class */ (function () {
    function UniquePipe() {
    }
    UniquePipe.prototype.transform = function (value) {
        if (value !== undefined && value !== null) {
            return lodash__WEBPACK_IMPORTED_MODULE_2__["uniqBy"](value, 'rolename');
        }
        return value;
    };
    UniquePipe = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
            name: 'unique',
            pure: false
        })
    ], UniquePipe);
    return UniquePipe;
}());



/***/ }),

/***/ "./src/app/annoucement/read-massage/read-massage.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/annoucement/read-massage/read-massage.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"edit-modal\">\n  <mat-dialog-content  style=\"overflow-x: hidden !important;\">\n    <p class=\"heading\">Message Description</p>\n    <div class=\"col s12\">\n      <div class=\"pragraph\">\n        <p [innerHTML]=\"massage\">\n         \n        </p>\n      </div>\n    </div>\n    \n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n    <button mat-raised-button color=\"warn\"[mat-dialog-close]=\"false\" cdkFocusInitial>Close</button>\n  </mat-dialog-actions>\n</div>"

/***/ }),

/***/ "./src/app/annoucement/read-massage/read-massage.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/annoucement/read-massage/read-massage.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fubm91Y2VtZW50L3JlYWQtbWFzc2FnZS9yZWFkLW1hc3NhZ2UuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/annoucement/read-massage/read-massage.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/annoucement/read-massage/read-massage.component.ts ***!
  \********************************************************************/
/*! exports provided: ReadMassageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReadMassageComponent", function() { return ReadMassageComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");



var ReadMassageComponent = /** @class */ (function () {
    function ReadMassageComponent(data) {
        this.data = data;
        console.log(data);
        this.massage = data.massage;
    }
    ReadMassageComponent.prototype.ngOnInit = function () {
    };
    ReadMassageComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-read-massage',
            template: __webpack_require__(/*! ./read-massage.component.html */ "./src/app/annoucement/read-massage/read-massage.component.html"),
            styles: [__webpack_require__(/*! ./read-massage.component.scss */ "./src/app/annoucement/read-massage/read-massage.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object])
    ], ReadMassageComponent);
    return ReadMassageComponent;
}());



/***/ }),

/***/ "./src/app/annoucement/read-popup/read-popup.component.html":
/*!******************************************************************!*\
  !*** ./src/app/annoucement/read-popup/read-popup.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n    <p class=\"heading\">USER INFORMATION</p>\n    <mat-dialog-content class=\"mat-typography\">\n        <div class=\"cs-table mt15 left-right-15\">\n            <div class=\"table-head\">\n                <table>\n                    <tr>\n                        <th class=\"w230\">Name</th>\n                        <th class=\"w130\">Role</th>\n                        <th>Status</th>\n                    </tr>\n                </table>\n            </div>\n            <div class=\"table-container\">\n                <div class=\"table-content\">\n                    <!-- <table>\n                        <span >\n                            <tr >\n                                <td>{{list.announcementTo}}</td>\n                                <td  class=\"w130\">{{list.rolename}}</td>\n                                <td  *ngIf=\"list.isRead==true\"  class=\"w150\">Read</td>\n                                <td *ngIf=\"list.isRead==false\"class=\"w150\">Unread</td>\n                            </tr>\n                            <tr *ngIf=\"list.isRead==false && status=='unread' \">\n                                <td>{{list.announcementTo}}</td>\n                                <td  class=\"w130\">{{list.rolename}}</td>\n                                <td  *ngIf=\"list.isRead==true\"  class=\"w150\">Read</td>\n                                <td *ngIf=\"list.isRead==false\"class=\"w150\">Unread</td>\n                            </tr>\n                            \n                        </span>\n                    </table> -->\n                    <table *ngIf=\"status=='all' \">\n                        <tr *ngFor=\"let list of user\">\n                            <td class=\"w230\">{{list.announcementTo}}</td>\n                            <td  class=\"w130\">{{list.rolename}}</td>\n                            <td  *ngIf=\"list.isRead==true\" >Read</td>\n                            <td *ngIf=\"list.isRead==false\">Unread</td>\n                        </tr>\n                    </table>\n                    <table *ngIf=\"status=='read' \">\n                        <ng-container *ngFor=\"let list of user\">\n                            <tr *ngIf=\"list.isRead==true\" >\n                                <td  class=\"w230\">{{list.announcementTo}}</td>\n                                <td  class=\"w130\">{{list.rolename}}</td>\n                                <td  *ngIf=\"list.isRead==true\" >Read</td>\n                                <td *ngIf=\"list.isRead==false\">Unread</td>\n                            </tr>\n                        </ng-container>\n                    </table>\n                    <table *ngIf=\"status=='unread' \">\n                        <ng-container *ngFor=\"let list of user\">\n                            <tr *ngIf=\"list.isRead==false \" >\n                                <td  class=\"w230\">{{list.announcementTo}}</td>\n                                <td  class=\"w130\">{{list.rolename}}</td>\n                                <td  *ngIf=\"list.isRead==true\">Read</td>\n                                <td *ngIf=\"list.isRead==false\">Unread</td>\n                            </tr>\n                        </ng-container>\n                        \n                    </table>\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button [mat-dialog-close]=\"false\" mat-raised-button color=\"warn\" >CLOSE</button>\n    </mat-dialog-actions>\n</div>\n\n"

/***/ }),

/***/ "./src/app/annoucement/read-popup/read-popup.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/annoucement/read-popup/read-popup.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fubm91Y2VtZW50L3JlYWQtcG9wdXAvcmVhZC1wb3B1cC5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/annoucement/read-popup/read-popup.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/annoucement/read-popup/read-popup.component.ts ***!
  \****************************************************************/
/*! exports provided: ReadPopupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReadPopupComponent", function() { return ReadPopupComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");



var ReadPopupComponent = /** @class */ (function () {
    function ReadPopupComponent(data) {
        this.data = data;
        this.user = [];
        console.log(data);
        this.user = data.User;
        this.status = data.status;
    }
    ReadPopupComponent.prototype.ngOnInit = function () {
    };
    ReadPopupComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-read-popup',
            template: __webpack_require__(/*! ./read-popup.component.html */ "./src/app/annoucement/read-popup/read-popup.component.html"),
            styles: [__webpack_require__(/*! ./read-popup.component.scss */ "./src/app/annoucement/read-popup/read-popup.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object])
    ], ReadPopupComponent);
    return ReadPopupComponent;
}());



/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _product_product_list_product_list_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./product/product-list/product-list.component */ "./src/app/product/product-list/product-list.component.ts");
/* harmony import */ var _product_product_detail_product_detail_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./product/product-detail/product-detail.component */ "./src/app/product/product-detail/product-detail.component.ts");
/* harmony import */ var _user_user_add_user_add_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./user/user-add/user-add.component */ "./src/app/user/user-add/user-add.component.ts");
/* harmony import */ var _user_sale_user_list_sale_user_list_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./user/sale-user-list/sale-user-list.component */ "./src/app/user/sale-user-list/sale-user-list.component.ts");
/* harmony import */ var _user_sale_user_detail_sale_user_detail_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./user/sale-user-detail/sale-user-detail.component */ "./src/app/user/sale-user-detail/sale-user-detail.component.ts");
/* harmony import */ var _user_system_user_list_system_user_list_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./user/system-user-list/system-user-list.component */ "./src/app/user/system-user-list/system-user-list.component.ts");
/* harmony import */ var _user_system_user_detail_system_user_detail_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./user/system-user-detail/system-user-detail.component */ "./src/app/user/system-user-detail/system-user-detail.component.ts");
/* harmony import */ var _territory_territory_add_territory_add_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./territory/territory-add/territory-add.component */ "./src/app/territory/territory-add/territory-add.component.ts");
/* harmony import */ var _territory_territory_list_territory_list_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./territory/territory-list/territory-list.component */ "./src/app/territory/territory-list/territory-list.component.ts");
/* harmony import */ var _pop_and_gift_add_gift_add_gift_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pop_and_gift/add-gift/add-gift.component */ "./src/app/pop_and_gift/add-gift/add-gift.component.ts");
/* harmony import */ var _pop_and_gift_gift_list_gift_list_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pop_and_gift/gift-list/gift-list.component */ "./src/app/pop_and_gift/gift-list/gift-list.component.ts");
/* harmony import */ var _leave_and_holiday_add_leave_rules_add_leave_rules_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./leave-and-holiday/add-leave-rules/add-leave-rules.component */ "./src/app/leave-and-holiday/add-leave-rules/add-leave-rules.component.ts");
/* harmony import */ var _leave_and_holiday_add_holiday_add_holiday_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./leave-and-holiday/add-holiday/add-holiday.component */ "./src/app/leave-and-holiday/add-holiday/add-holiday.component.ts");
/* harmony import */ var _leave_and_holiday_leave_rule_list_leave_rule_list_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./leave-and-holiday/leave-rule-list/leave-rule-list.component */ "./src/app/leave-and-holiday/leave-rule-list/leave-rule-list.component.ts");
/* harmony import */ var _leave_and_holiday_holiday_list_holiday_list_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./leave-and-holiday/holiday-list/holiday-list.component */ "./src/app/leave-and-holiday/holiday-list/holiday-list.component.ts");
/* harmony import */ var _annoucement_add_annoucement_add_annoucement_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./annoucement/add-annoucement/add-annoucement.component */ "./src/app/annoucement/add-annoucement/add-annoucement.component.ts");
/* harmony import */ var _annoucement_annoucement_list_annoucement_list_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./annoucement/annoucement-list/annoucement-list.component */ "./src/app/annoucement/annoucement-list/annoucement-list.component.ts");
/* harmony import */ var _distribution_add_distribution_add_distribution_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./distribution/add-distribution/add-distribution.component */ "./src/app/distribution/add-distribution/add-distribution.component.ts");
/* harmony import */ var _distribution_distribution_detail_distribution_detail_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./distribution/distribution-detail/distribution-detail.component */ "./src/app/distribution/distribution-detail/distribution-detail.component.ts");
/* harmony import */ var _lead_add_lead_add_lead_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./lead/add-lead/add-lead.component */ "./src/app/lead/add-lead/add-lead.component.ts");
/* harmony import */ var _lead_lead_list_lead_list_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./lead/lead-list/lead-list.component */ "./src/app/lead/lead-list/lead-list.component.ts");
/* harmony import */ var _pop_and_gift_gift_deatil_gift_deatil_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./pop_and_gift/gift-deatil/gift-deatil.component */ "./src/app/pop_and_gift/gift-deatil/gift-deatil.component.ts");
/* harmony import */ var _lead_lead_detail_lead_detail_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./lead/lead-detail/lead-detail.component */ "./src/app/lead/lead-detail/lead-detail.component.ts");
/* harmony import */ var _distribution_distributor_list_distribution_list_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./distribution/distributor-list/distribution-list.component */ "./src/app/distribution/distributor-list/distribution-list.component.ts");
/* harmony import */ var _distribution_retailer_list_retailer_list_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./distribution/retailer-list/retailer-list.component */ "./src/app/distribution/retailer-list/retailer-list.component.ts");
/* harmony import */ var _distribution_wholesaler_list_wholesaler_list_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./distribution/wholesaler-list/wholesaler-list.component */ "./src/app/distribution/wholesaler-list/wholesaler-list.component.ts");
/* harmony import */ var _distribution_engine_list_engine_list_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./distribution/engine-list/engine-list.component */ "./src/app/distribution/engine-list/engine-list.component.ts");
/* harmony import */ var _distribution_mechanic_list_mechanic_list_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./distribution/mechanic-list/mechanic-list.component */ "./src/app/distribution/mechanic-list/mechanic-list.component.ts");
/* harmony import */ var _task_add_task_add_task_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./task/add-task/add-task.component */ "./src/app/task/add-task/add-task.component.ts");
/* harmony import */ var _task_task_list_task_list_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./task/task-list/task-list.component */ "./src/app/task/task-list/task-list.component.ts");
/* harmony import */ var _auth_guard_log_service__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./auth-guard-log.service */ "./src/app/auth-guard-log.service.ts");
/* harmony import */ var _session_service__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./session.service */ "./src/app/session.service.ts");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./login/login.component */ "./src/app/login/login.component.ts");
/* harmony import */ var _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./dashboard/dashboard.component */ "./src/app/dashboard/dashboard.component.ts");
/* harmony import */ var _task_assigntask_assigntask_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./task/assigntask/assigntask.component */ "./src/app/task/assigntask/assigntask.component.ts");
/* harmony import */ var _followup_add_followup_add_followup_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./followup/add-followup/add-followup.component */ "./src/app/followup/add-followup/add-followup.component.ts");
/* harmony import */ var _followup_followup_list_followup_list_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./followup/followup-list/followup-list.component */ "./src/app/followup/followup-list/followup-list.component.ts");
/* harmony import */ var _task_task_detail_task_detail_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./task/task-detail/task-detail.component */ "./src/app/task/task-detail/task-detail.component.ts");
/* harmony import */ var _order_add_order_add_order_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./order/add-order/add-order.component */ "./src/app/order/add-order/add-order.component.ts");
/* harmony import */ var _order_order_list_order_list_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./order/order-list/order-list.component */ "./src/app/order/order-list/order-list.component.ts");
/* harmony import */ var _order_order_detail_order_detail_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./order/order-detail/order-detail.component */ "./src/app/order/order-detail/order-detail.component.ts");
/* harmony import */ var _checkin_checkin_list_checkin_list_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./checkin/checkin-list/checkin-list.component */ "./src/app/checkin/checkin-list/checkin-list.component.ts");
/* harmony import */ var _activity_add_activity_add_activity_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./activity/add-activity/add-activity.component */ "./src/app/activity/add-activity/add-activity.component.ts");
/* harmony import */ var _travel_add_travel_add_travel_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./travel/add-travel/add-travel.component */ "./src/app/travel/add-travel/add-travel.component.ts");
/* harmony import */ var _travel_list_travel_list_travel_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./travel/list-travel/list-travel.component */ "./src/app/travel/list-travel/list-travel.component.ts");
/* harmony import */ var _travel_detail_travel_detail_travel_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./travel/detail-travel/detail-travel.component */ "./src/app/travel/detail-travel/detail-travel.component.ts");
/* harmony import */ var _expense_add_expense_add_expense_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./expense/add-expense/add-expense.component */ "./src/app/expense/add-expense/add-expense.component.ts");
/* harmony import */ var _expense_expense_list_expense_list_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./expense/expense-list/expense-list.component */ "./src/app/expense/expense-list/expense-list.component.ts");
/* harmony import */ var _expense_expense_detail_expense_detail_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./expense/expense-detail/expense-detail.component */ "./src/app/expense/expense-detail/expense-detail.component.ts");
/* harmony import */ var _expense_detail_by_date_detail_by_date_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./expense/detail-by-date/detail-by-date.component */ "./src/app/expense/detail-by-date/detail-by-date.component.ts");
/* harmony import */ var _customer_concern_concern_list_concern_list_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./customer-concern/concern-list/concern-list.component */ "./src/app/customer-concern/concern-list/concern-list.component.ts");
/* harmony import */ var _customer_concern_add_concern_add_concern_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./customer-concern/add-concern/add-concern.component */ "./src/app/customer-concern/add-concern/add-concern.component.ts");
/* harmony import */ var _customer_concern_concern_detail_concern_detail_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./customer-concern/concern-detail/concern-detail.component */ "./src/app/customer-concern/concern-detail/concern-detail.component.ts");
/* harmony import */ var _followup_all_followup_list_all_followup_list_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./followup/all-followup-list/all-followup-list.component */ "./src/app/followup/all-followup-list/all-followup-list.component.ts");
/* harmony import */ var _order_edit_order_edit_order_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./order/edit-order/edit-order.component */ "./src/app/order/edit-order/edit-order.component.ts");
/* harmony import */ var _customer_concern_draft_detail_draft_detail_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./customer-concern/draft-detail/draft-detail.component */ "./src/app/customer-concern/draft-detail/draft-detail.component.ts");
/* harmony import */ var _reject_lead_reject_lead_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./reject-lead/reject-lead.component */ "./src/app/reject-lead/reject-lead.component.ts");
/* harmony import */ var _scheme_add_scheme_add_scheme_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./scheme/add-scheme/add-scheme.component */ "./src/app/scheme/add-scheme/add-scheme.component.ts");
/* harmony import */ var _leave_apply_leave_apply_add_leave_apply_add_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./leave-apply/leave-apply-add/leave-apply-add.component */ "./src/app/leave-apply/leave-apply-add/leave-apply-add.component.ts");
/* harmony import */ var _leave_apply_leave_apply_list_leave_apply_list_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./leave-apply/leave-apply-list/leave-apply-list.component */ "./src/app/leave-apply/leave-apply-list/leave-apply-list.component.ts");
/* harmony import */ var _scheme_scheme_list_scheme_list_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./scheme/scheme-list/scheme-list.component */ "./src/app/scheme/scheme-list/scheme-list.component.ts");
/* harmony import */ var _scheme_scheme_detail_scheme_detail_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./scheme/scheme-detail/scheme-detail.component */ "./src/app/scheme/scheme-detail/scheme-detail.component.ts");
/* harmony import */ var _checkin_checkin_detail_checkin_detail_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./checkin/checkin-detail/checkin-detail.component */ "./src/app/checkin/checkin-detail/checkin-detail.component.ts");
/* harmony import */ var _allowance_allowance_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./allowance/allowance.component */ "./src/app/allowance/allowance.component.ts");
/* harmony import */ var _leave_add_leave_add_leave_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./leave/add-leave/add-leave.component */ "./src/app/leave/add-leave/add-leave.component.ts");
/* harmony import */ var _leave_leave_detail_leave_detail_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./leave/leave-detail/leave-detail.component */ "./src/app/leave/leave-detail/leave-detail.component.ts");
/* harmony import */ var _leave_leave_list_leave_list_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./leave/leave-list/leave-list.component */ "./src/app/leave/leave-list/leave-list.component.ts");
/* harmony import */ var _pop_and_gift_distributor_pop_and_gift_distributor_list_pop_and_gift_distributor_list_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component */ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component.ts");
/* harmony import */ var _pop_and_gift_distributor_pop_and_gift_distributor_add_pop_and_gift_distributor_add_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component */ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component.ts");
/* harmony import */ var _leave_and_holiday_leave_rule_detail_leave_rule_detail_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./leave-and-holiday/leave-rule-detail/leave-rule-detail.component */ "./src/app/leave-and-holiday/leave-rule-detail/leave-rule-detail.component.ts");
/* harmony import */ var _leave_editleave_editleave_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./leave/editleave/editleave.component */ "./src/app/leave/editleave/editleave.component.ts");
/* harmony import */ var _expense_edit_out_station_edit_out_station_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./expense/edit-out-station/edit-out-station.component */ "./src/app/expense/edit-out-station/edit-out-station.component.ts");
/* harmony import */ var _expense_editmisc_editmisc_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./expense/editmisc/editmisc.component */ "./src/app/expense/editmisc/editmisc.component.ts");
/* harmony import */ var _expense_edit_local_expense_edit_local_expense_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./expense/edit-local-expense/edit-local-expense.component */ "./src/app/expense/edit-local-expense/edit-local-expense.component.ts");
/* harmony import */ var _expense_edit_sales_pormotion_edit_sales_pormotion_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./expense/edit-sales-pormotion/edit-sales-pormotion.component */ "./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.ts");
/* harmony import */ var _pop_and_gift_eversion_detail_eversion_detail_component__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./pop_and_gift/eversion-detail/eversion-detail.component */ "./src/app/pop_and_gift/eversion-detail/eversion-detail.component.ts");
/* harmony import */ var _vendor_vendor_add_vendor_add_component__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./vendor/vendor-add/vendor-add.component */ "./src/app/vendor/vendor-add/vendor-add.component.ts");
/* harmony import */ var _vendor_vendor_list_vendor_list_component__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./vendor/vendor-list/vendor-list.component */ "./src/app/vendor/vendor-list/vendor-list.component.ts");
/* harmony import */ var _vendor_vendor_detail_vendor_detail_component__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./vendor/vendor-detail/vendor-detail.component */ "./src/app/vendor/vendor-detail/vendor-detail.component.ts");
/* harmony import */ var _vendor_qr_code_detail_qr_code_detail_component__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./vendor/qr-code-detail/qr-code-detail.component */ "./src/app/vendor/qr-code-detail/qr-code-detail.component.ts");





















// import { DistributionListComponent } from './distribution/distribution-list/distribution-list.component';







































// import { UpdateConcernComponent } from './customer-concern/update-concern/update-concern.component';s























var routes = [
    { path: "", component: _login_login_component__WEBPACK_IMPORTED_MODULE_35__["LoginComponent"], canActivate: [_auth_guard_log_service__WEBPACK_IMPORTED_MODULE_33__["AuthGuardLog"]] },
    { path: "dashboard", component: _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_36__["DashboardComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-task", component: _task_add_task_add_task_component__WEBPACK_IMPORTED_MODULE_31__["AddTaskComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "assigntask/:id", component: _task_assigntask_assigntask_component__WEBPACK_IMPORTED_MODULE_37__["AssigntaskComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "task-list", component: _task_task_list_task_list_component__WEBPACK_IMPORTED_MODULE_32__["TaskListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "product-list", component: _product_product_list_product_list_component__WEBPACK_IMPORTED_MODULE_3__["ProductListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "product-detail/:id", component: _product_product_detail_product_detail_component__WEBPACK_IMPORTED_MODULE_4__["ProductDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "user-add", component: _user_user_add_user_add_component__WEBPACK_IMPORTED_MODULE_5__["UserAddComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "sale-user-list", component: _user_sale_user_list_sale_user_list_component__WEBPACK_IMPORTED_MODULE_6__["SaleUserListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "sale-user-detail/:id", component: _user_sale_user_detail_sale_user_detail_component__WEBPACK_IMPORTED_MODULE_7__["SaleUserDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "system-user-list", component: _user_system_user_list_system_user_list_component__WEBPACK_IMPORTED_MODULE_8__["SystemUserListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "system-user-detail/:id", component: _user_system_user_detail_system_user_detail_component__WEBPACK_IMPORTED_MODULE_9__["SystemUserDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "territory-add/:id", component: _territory_territory_add_territory_add_component__WEBPACK_IMPORTED_MODULE_10__["TerritoryAddComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "territory-list", component: _territory_territory_list_territory_list_component__WEBPACK_IMPORTED_MODULE_11__["TerritoryListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "pop_and_gift", component: _pop_and_gift_add_gift_add_gift_component__WEBPACK_IMPORTED_MODULE_12__["AddGiftComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "gift-list", component: _pop_and_gift_gift_list_gift_list_component__WEBPACK_IMPORTED_MODULE_13__["GiftListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-leave-rules/:id", component: _leave_and_holiday_add_leave_rules_add_leave_rules_component__WEBPACK_IMPORTED_MODULE_14__["AddLeaveRulesComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-holiday", component: _leave_and_holiday_add_holiday_add_holiday_component__WEBPACK_IMPORTED_MODULE_15__["AddHolidayComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "leave-rule-list", component: _leave_and_holiday_leave_rule_list_leave_rule_list_component__WEBPACK_IMPORTED_MODULE_16__["LeaveRuleListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "holiday-list", component: _leave_and_holiday_holiday_list_holiday_list_component__WEBPACK_IMPORTED_MODULE_17__["HolidayListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-annoucement", component: _annoucement_add_annoucement_add_annoucement_component__WEBPACK_IMPORTED_MODULE_18__["AddAnnoucementComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "annoucement-list", component: _annoucement_annoucement_list_annoucement_list_component__WEBPACK_IMPORTED_MODULE_19__["AnnoucementListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-distribution", component: _distribution_add_distribution_add_distribution_component__WEBPACK_IMPORTED_MODULE_20__["AddDistributionComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "distribution-list", component: _distribution_distributor_list_distribution_list_component__WEBPACK_IMPORTED_MODULE_26__["DistributionListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "distribution-detail/:id", component: _distribution_distribution_detail_distribution_detail_component__WEBPACK_IMPORTED_MODULE_21__["DistributionDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-lead", component: _lead_add_lead_add_lead_component__WEBPACK_IMPORTED_MODULE_22__["AddLeadComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "lead-list", component: _lead_lead_list_lead_list_component__WEBPACK_IMPORTED_MODULE_23__["LeadListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "gift-deatil/:id", component: _pop_and_gift_gift_deatil_gift_deatil_component__WEBPACK_IMPORTED_MODULE_24__["GiftDeatilComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "lead-detail/:id", component: _lead_lead_detail_lead_detail_component__WEBPACK_IMPORTED_MODULE_25__["LeadDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "retailer-list", component: _distribution_retailer_list_retailer_list_component__WEBPACK_IMPORTED_MODULE_27__["RetailerListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "wholesaler-list", component: _distribution_wholesaler_list_wholesaler_list_component__WEBPACK_IMPORTED_MODULE_28__["WholesalerListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "engine-list", component: _distribution_engine_list_engine_list_component__WEBPACK_IMPORTED_MODULE_29__["EngineListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "mechanic-list", component: _distribution_mechanic_list_mechanic_list_component__WEBPACK_IMPORTED_MODULE_30__["MechanicListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-followup/:id", component: _followup_add_followup_add_followup_component__WEBPACK_IMPORTED_MODULE_38__["AddFollowupComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "followup-list", component: _followup_followup_list_followup_list_component__WEBPACK_IMPORTED_MODULE_39__["FollowupListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "task-detail/:id", component: _task_task_detail_task_detail_component__WEBPACK_IMPORTED_MODULE_40__["TaskDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "checkin-list", component: _checkin_checkin_list_checkin_list_component__WEBPACK_IMPORTED_MODULE_44__["CheckinComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-order", component: _order_add_order_add_order_component__WEBPACK_IMPORTED_MODULE_41__["AddOrderComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "order-list", component: _order_order_list_order_list_component__WEBPACK_IMPORTED_MODULE_42__["OrderListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "order-detail/:id", component: _order_order_detail_order_detail_component__WEBPACK_IMPORTED_MODULE_43__["OrderDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "edit-order/:id", component: _order_edit_order_edit_order_component__WEBPACK_IMPORTED_MODULE_57__["EditOrderComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-activity", component: _activity_add_activity_add_activity_component__WEBPACK_IMPORTED_MODULE_45__["AddActivityComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-travel", component: _travel_add_travel_add_travel_component__WEBPACK_IMPORTED_MODULE_46__["AddTravelComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "list-travel", component: _travel_list_travel_list_travel_component__WEBPACK_IMPORTED_MODULE_47__["ListTravelComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "detail-travel/:id", component: _travel_detail_travel_detail_travel_component__WEBPACK_IMPORTED_MODULE_48__["DetailTravelComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-expense", component: _expense_add_expense_add_expense_component__WEBPACK_IMPORTED_MODULE_49__["AddExpenseComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "expense-list", component: _expense_expense_list_expense_list_component__WEBPACK_IMPORTED_MODULE_50__["ExpenseListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "expense-detail/:id", component: _expense_expense_detail_expense_detail_component__WEBPACK_IMPORTED_MODULE_51__["ExpenseDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "detail-by-date/:id", component: _expense_detail_by_date_detail_by_date_component__WEBPACK_IMPORTED_MODULE_52__["DetailByDateComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "concern-list", component: _customer_concern_concern_list_concern_list_component__WEBPACK_IMPORTED_MODULE_53__["ConcernListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-concern", component: _customer_concern_add_concern_add_concern_component__WEBPACK_IMPORTED_MODULE_54__["AddConcernComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "concern-detail/:id", component: _customer_concern_concern_detail_concern_detail_component__WEBPACK_IMPORTED_MODULE_55__["ConcernDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "all-followup-list/:id", component: _followup_all_followup_list_all_followup_list_component__WEBPACK_IMPORTED_MODULE_56__["AllFollowupListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "draft-detail/:id", component: _customer_concern_draft_detail_draft_detail_component__WEBPACK_IMPORTED_MODULE_58__["DraftDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "reject-lead", component: _reject_lead_reject_lead_component__WEBPACK_IMPORTED_MODULE_59__["RejectLeadComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-scheme", component: _scheme_add_scheme_add_scheme_component__WEBPACK_IMPORTED_MODULE_60__["AddSchemeComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "leave-apply", component: _leave_apply_leave_apply_add_leave_apply_add_component__WEBPACK_IMPORTED_MODULE_61__["LeaveApplyAddComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "leave-apply-list", component: _leave_apply_leave_apply_list_leave_apply_list_component__WEBPACK_IMPORTED_MODULE_62__["LeaveApplyListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "scheme-list", component: _scheme_scheme_list_scheme_list_component__WEBPACK_IMPORTED_MODULE_63__["SchemeListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "scheme-detail/:id", component: _scheme_scheme_detail_scheme_detail_component__WEBPACK_IMPORTED_MODULE_64__["SchemeDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    // { path: "scheme-detail", component: SchemeDetailComponent},
    { path: "checkin-detail/:id", component: _checkin_checkin_detail_checkin_detail_component__WEBPACK_IMPORTED_MODULE_65__["CheckinDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "checkin-detail/:id/:date", component: _checkin_checkin_detail_checkin_detail_component__WEBPACK_IMPORTED_MODULE_65__["CheckinDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "add-leave", component: _leave_add_leave_add_leave_component__WEBPACK_IMPORTED_MODULE_67__["AddLeaveComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "leave-detail/:id", component: _leave_leave_detail_leave_detail_component__WEBPACK_IMPORTED_MODULE_68__["LeaveDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "leave-list", component: _leave_leave_list_leave_list_component__WEBPACK_IMPORTED_MODULE_69__["LeaveListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    // { path: "update-concern", component: UpdateConcernComponent, canActivate:[AuthGuard]  },
    { path: "allowance", component: _allowance_allowance_component__WEBPACK_IMPORTED_MODULE_66__["AllowanceComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "pop-and-gift-distributor-list", component: _pop_and_gift_distributor_pop_and_gift_distributor_list_pop_and_gift_distributor_list_component__WEBPACK_IMPORTED_MODULE_70__["PopAndGiftDistributorListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "pop-and-gift-distributor-add", component: _pop_and_gift_distributor_pop_and_gift_distributor_add_pop_and_gift_distributor_add_component__WEBPACK_IMPORTED_MODULE_71__["PopAndGiftDistributorAddComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "leave-rule-detail/:id", component: _leave_and_holiday_leave_rule_detail_leave_rule_detail_component__WEBPACK_IMPORTED_MODULE_72__["LeaveRuleDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "editleave/:id", component: _leave_editleave_editleave_component__WEBPACK_IMPORTED_MODULE_73__["EditleaveComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "edit-out-station/:id", component: _expense_edit_out_station_edit_out_station_component__WEBPACK_IMPORTED_MODULE_74__["EditOutStationComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "editmisc/:id", component: _expense_editmisc_editmisc_component__WEBPACK_IMPORTED_MODULE_75__["EditmiscComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "edit-local-expense/:id", component: _expense_edit_local_expense_edit_local_expense_component__WEBPACK_IMPORTED_MODULE_76__["EditLocalExpenseComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "edit-sales-pormotion/:id", component: _expense_edit_sales_pormotion_edit_sales_pormotion_component__WEBPACK_IMPORTED_MODULE_77__["EditSalesPormotionComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "eversion-detail/:id", component: _pop_and_gift_eversion_detail_eversion_detail_component__WEBPACK_IMPORTED_MODULE_78__["EversionDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "vendor-add", component: _vendor_vendor_add_vendor_add_component__WEBPACK_IMPORTED_MODULE_79__["VendorAddComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "vendor-list", component: _vendor_vendor_list_vendor_list_component__WEBPACK_IMPORTED_MODULE_80__["VendorListComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "vendor-detail/:id", component: _vendor_vendor_detail_vendor_detail_component__WEBPACK_IMPORTED_MODULE_81__["VendorDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
    { path: "qr-code-detail", component: _vendor_qr_code_detail_qr_code_detail_component__WEBPACK_IMPORTED_MODULE_82__["QrCodeDetailComponent"], canActivate: [_session_service__WEBPACK_IMPORTED_MODULE_34__["AuthGuard"]] },
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [
                _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes),
            ],
            exports: [
                // AuthGuardLog,
                // AuthGuard,
                _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]
            ]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());



/***/ }),

/***/ "./src/app/app.component.html":
/*!************************************!*\
  !*** ./src/app/app.component.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--The content below is only a placeholder and can be replaced.-->\n<!-- <app-login></app-login> -->\n<!-- <app-header ></app-header>\n<app-navigation ></app-navigation>\n<app-footer ></app-footer> -->\n<app-header *ngIf=\"service.can_active\"></app-header>\n<app-navigation *ngIf=\"service.can_active\"></app-navigation>\n<app-footer *ngIf=\"service.can_active\"></app-footer>\n<router-outlet></router-outlet>"

/***/ }),

/***/ "./src/app/app.component.scss":
/*!************************************!*\
  !*** ./src/app/app.component.scss ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");



var AppComponent = /** @class */ (function () {
    function AppComponent(service) {
        this.service = service;
        this.title = 'kenshin';
    }
    AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(/*! ./app.component.html */ "./src/app/app.component.html"),
            styles: [__webpack_require__(/*! ./app.component.scss */ "./src/app/app.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"]])
    ], AppComponent);
    return AppComponent;
}());



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_material_timepicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-material-timepicker */ "./node_modules/ngx-material-timepicker/fesm5/ngx-material-timepicker.js");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./material */ "./src/app/material.ts");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./login/login.component */ "./src/app/login/login.component.ts");
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./header/header.component */ "./src/app/header/header.component.ts");
/* harmony import */ var _footer_footer_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./footer/footer.component */ "./src/app/footer/footer.component.ts");
/* harmony import */ var _navigation_navigation_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./navigation/navigation.component */ "./src/app/navigation/navigation.component.ts");
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/snack-bar */ "./node_modules/@angular/material/esm5/snack-bar.es5.js");
/* harmony import */ var _master_tab_master_tab_master_tab_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./master-tab/master-tab/master-tab.component */ "./src/app/master-tab/master-tab/master-tab.component.ts");
/* harmony import */ var _master_tab_list_master_tab_list_master_tab_list_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./master-tab-list/master-tab-list/master-tab-list.component */ "./src/app/master-tab-list/master-tab-list/master-tab-list.component.ts");
/* harmony import */ var _product_product_list_product_list_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./product/product-list/product-list.component */ "./src/app/product/product-list/product-list.component.ts");
/* harmony import */ var _product_product_detail_product_detail_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./product/product-detail/product-detail.component */ "./src/app/product/product-detail/product-detail.component.ts");
/* harmony import */ var _user_user_add_user_add_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./user/user-add/user-add.component */ "./src/app/user/user-add/user-add.component.ts");
/* harmony import */ var _user_sale_user_list_sale_user_list_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./user/sale-user-list/sale-user-list.component */ "./src/app/user/sale-user-list/sale-user-list.component.ts");
/* harmony import */ var _user_sale_user_detail_sale_user_detail_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./user/sale-user-detail/sale-user-detail.component */ "./src/app/user/sale-user-detail/sale-user-detail.component.ts");
/* harmony import */ var _user_system_user_list_system_user_list_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./user/system-user-list/system-user-list.component */ "./src/app/user/system-user-list/system-user-list.component.ts");
/* harmony import */ var _user_system_user_detail_system_user_detail_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./user/system-user-detail/system-user-detail.component */ "./src/app/user/system-user-detail/system-user-detail.component.ts");
/* harmony import */ var _territory_territory_add_territory_add_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./territory/territory-add/territory-add.component */ "./src/app/territory/territory-add/territory-add.component.ts");
/* harmony import */ var _territory_territory_list_territory_list_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./territory/territory-list/territory-list.component */ "./src/app/territory/territory-list/territory-list.component.ts");
/* harmony import */ var _pop_and_gift_add_gift_add_gift_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./pop_and_gift/add-gift/add-gift.component */ "./src/app/pop_and_gift/add-gift/add-gift.component.ts");
/* harmony import */ var _pop_and_gift_gift_list_gift_list_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./pop_and_gift/gift-list/gift-list.component */ "./src/app/pop_and_gift/gift-list/gift-list.component.ts");
/* harmony import */ var _pop_and_gift_gift_modal_gift_modal_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./pop_and_gift/gift-modal/gift-modal.component */ "./src/app/pop_and_gift/gift-modal/gift-modal.component.ts");
/* harmony import */ var _leave_and_holiday_add_leave_rules_add_leave_rules_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./leave-and-holiday/add-leave-rules/add-leave-rules.component */ "./src/app/leave-and-holiday/add-leave-rules/add-leave-rules.component.ts");
/* harmony import */ var _leave_and_holiday_add_holiday_add_holiday_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./leave-and-holiday/add-holiday/add-holiday.component */ "./src/app/leave-and-holiday/add-holiday/add-holiday.component.ts");
/* harmony import */ var _leave_and_holiday_leave_rule_list_leave_rule_list_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./leave-and-holiday/leave-rule-list/leave-rule-list.component */ "./src/app/leave-and-holiday/leave-rule-list/leave-rule-list.component.ts");
/* harmony import */ var _leave_and_holiday_holiday_list_holiday_list_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./leave-and-holiday/holiday-list/holiday-list.component */ "./src/app/leave-and-holiday/holiday-list/holiday-list.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _node_modules_angular_common_http__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../node_modules/@angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _annoucement_add_annoucement_add_annoucement_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./annoucement/add-annoucement/add-annoucement.component */ "./src/app/annoucement/add-annoucement/add-annoucement.component.ts");
/* harmony import */ var _annoucement_annoucement_list_annoucement_list_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./annoucement/annoucement-list/annoucement-list.component */ "./src/app/annoucement/annoucement-list/annoucement-list.component.ts");
/* harmony import */ var _user_address_modal_address_modal_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./user/address-modal/address-modal.component */ "./src/app/user/address-modal/address-modal.component.ts");
/* harmony import */ var _user_system_modal_system_modal_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./user/system-modal/system-modal.component */ "./src/app/user/system-modal/system-modal.component.ts");
/* harmony import */ var _user_email_modal_email_modal_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./user/email-modal/email-modal.component */ "./src/app/user/email-modal/email-modal.component.ts");
/* harmony import */ var _product_product_modal_product_modal_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./product/product-modal/product-modal.component */ "./src/app/product/product-modal/product-modal.component.ts");
/* harmony import */ var _distribution_add_distribution_add_distribution_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./distribution/add-distribution/add-distribution.component */ "./src/app/distribution/add-distribution/add-distribution.component.ts");
/* harmony import */ var _distribution_distributor_list_distribution_list_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./distribution/distributor-list/distribution-list.component */ "./src/app/distribution/distributor-list/distribution-list.component.ts");
/* harmony import */ var _shared_pipes_my_filter_pipe__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./shared/pipes/my-filter.pipe */ "./src/app/shared/pipes/my-filter.pipe.ts");
/* harmony import */ var _discount_add_discount_add_discount_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./discount/add-discount/add-discount.component */ "./src/app/discount/add-discount/add-discount.component.ts");
/* harmony import */ var _discount_discount_list_discount_list_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./discount/discount-list/discount-list.component */ "./src/app/discount/discount-list/discount-list.component.ts");
/* harmony import */ var _distribution_distribution_detail_distribution_detail_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./distribution/distribution-detail/distribution-detail.component */ "./src/app/distribution/distribution-detail/distribution-detail.component.ts");
/* harmony import */ var _distribution_distribution_order_list_distribution_order_list_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./distribution/distribution-order-list/distribution-order-list.component */ "./src/app/distribution/distribution-order-list/distribution-order-list.component.ts");
/* harmony import */ var _lead_add_lead_add_lead_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./lead/add-lead/add-lead.component */ "./src/app/lead/add-lead/add-lead.component.ts");
/* harmony import */ var _lead_lead_list_lead_list_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./lead/lead-list/lead-list.component */ "./src/app/lead/lead-list/lead-list.component.ts");
/* harmony import */ var _pop_and_gift_gift_deatil_gift_deatil_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./pop_and_gift/gift-deatil/gift-deatil.component */ "./src/app/pop_and_gift/gift-deatil/gift-deatil.component.ts");
/* harmony import */ var _lead_lead_detail_lead_detail_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./lead/lead-detail/lead-detail.component */ "./src/app/lead/lead-detail/lead-detail.component.ts");
/* harmony import */ var _distribution_retailer_list_retailer_list_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./distribution/retailer-list/retailer-list.component */ "./src/app/distribution/retailer-list/retailer-list.component.ts");
/* harmony import */ var _distribution_wholesaler_list_wholesaler_list_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./distribution/wholesaler-list/wholesaler-list.component */ "./src/app/distribution/wholesaler-list/wholesaler-list.component.ts");
/* harmony import */ var _distribution_mechanic_list_mechanic_list_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./distribution/mechanic-list/mechanic-list.component */ "./src/app/distribution/mechanic-list/mechanic-list.component.ts");
/* harmony import */ var _distribution_engine_list_engine_list_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./distribution/engine-list/engine-list.component */ "./src/app/distribution/engine-list/engine-list.component.ts");
/* harmony import */ var _task_add_task_add_task_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./task/add-task/add-task.component */ "./src/app/task/add-task/add-task.component.ts");
/* harmony import */ var _task_task_list_task_list_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./task/task-list/task-list.component */ "./src/app/task/task-list/task-list.component.ts");
/* harmony import */ var _task_assigntask_assigntask_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./task/assigntask/assigntask.component */ "./src/app/task/assigntask/assigntask.component.ts");
/* harmony import */ var _auth_guard_log_service__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./auth-guard-log.service */ "./src/app/auth-guard-log.service.ts");
/* harmony import */ var _session_service__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./session.service */ "./src/app/session.service.ts");
/* harmony import */ var _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./dashboard/dashboard.component */ "./src/app/dashboard/dashboard.component.ts");
/* harmony import */ var _followup_add_followup_add_followup_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./followup/add-followup/add-followup.component */ "./src/app/followup/add-followup/add-followup.component.ts");
/* harmony import */ var _followup_followup_list_followup_list_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./followup/followup-list/followup-list.component */ "./src/app/followup/followup-list/followup-list.component.ts");
/* harmony import */ var _task_task_detail_task_detail_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./task/task-detail/task-detail.component */ "./src/app/task/task-detail/task-detail.component.ts");
/* harmony import */ var _distribution_update_network_update_network_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./distribution/update-network/update-network.component */ "./src/app/distribution/update-network/update-network.component.ts");
/* harmony import */ var _distribution_update_network_address_update_network_address_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./distribution/update-network-address/update-network-address.component */ "./src/app/distribution/update-network-address/update-network-address.component.ts");
/* harmony import */ var _order_add_order_add_order_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./order/add-order/add-order.component */ "./src/app/order/add-order/add-order.component.ts");
/* harmony import */ var _order_order_list_order_list_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./order/order-list/order-list.component */ "./src/app/order/order-list/order-list.component.ts");
/* harmony import */ var _order_order_detail_order_detail_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./order/order-detail/order-detail.component */ "./src/app/order/order-detail/order-detail.component.ts");
/* harmony import */ var _checkin_checkin_list_checkin_list_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./checkin/checkin-list/checkin-list.component */ "./src/app/checkin/checkin-list/checkin-list.component.ts");
/* harmony import */ var _activity_add_activity_add_activity_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./activity/add-activity/add-activity.component */ "./src/app/activity/add-activity/add-activity.component.ts");
/* harmony import */ var _lead_update_lead_update_lead_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./lead/update-lead/update-lead.component */ "./src/app/lead/update-lead/update-lead.component.ts");
/* harmony import */ var _travel_add_travel_add_travel_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./travel/add-travel/add-travel.component */ "./src/app/travel/add-travel/add-travel.component.ts");
/* harmony import */ var _travel_list_travel_list_travel_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./travel/list-travel/list-travel.component */ "./src/app/travel/list-travel/list-travel.component.ts");
/* harmony import */ var _travel_detail_travel_detail_travel_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./travel/detail-travel/detail-travel.component */ "./src/app/travel/detail-travel/detail-travel.component.ts");
/* harmony import */ var _travel_update_travel_update_travel_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./travel/update-travel/update-travel.component */ "./src/app/travel/update-travel/update-travel.component.ts");
/* harmony import */ var _expense_add_expense_add_expense_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./expense/add-expense/add-expense.component */ "./src/app/expense/add-expense/add-expense.component.ts");
/* harmony import */ var _expense_expense_list_expense_list_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./expense/expense-list/expense-list.component */ "./src/app/expense/expense-list/expense-list.component.ts");
/* harmony import */ var _expense_expense_detail_expense_detail_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./expense/expense-detail/expense-detail.component */ "./src/app/expense/expense-detail/expense-detail.component.ts");
/* harmony import */ var _expense_detail_by_date_detail_by_date_component__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./expense/detail-by-date/detail-by-date.component */ "./src/app/expense/detail-by-date/detail-by-date.component.ts");
/* harmony import */ var _annoucement_annoucement_detail_annoucement_detail_component__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./annoucement/annoucement-detail/annoucement-detail.component */ "./src/app/annoucement/annoucement-detail/annoucement-detail.component.ts");
/* harmony import */ var _territory_territory_detail_territory_detail_component__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./territory/territory-detail/territory-detail.component */ "./src/app/territory/territory-detail/territory-detail.component.ts");
/* harmony import */ var _order_list_order_list_order_component__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./order/list-order/list-order.component */ "./src/app/order/list-order/list-order.component.ts");
/* harmony import */ var _customer_concern_concern_list_concern_list_component__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./customer-concern/concern-list/concern-list.component */ "./src/app/customer-concern/concern-list/concern-list.component.ts");
/* harmony import */ var _customer_concern_add_concern_add_concern_component__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./customer-concern/add-concern/add-concern.component */ "./src/app/customer-concern/add-concern/add-concern.component.ts");
/* harmony import */ var _customer_concern_concern_detail_concern_detail_component__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./customer-concern/concern-detail/concern-detail.component */ "./src/app/customer-concern/concern-detail/concern-detail.component.ts");
/* harmony import */ var _order_detailorderlist_detailorderlist_component__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./order/detailorderlist/detailorderlist.component */ "./src/app/order/detailorderlist/detailorderlist.component.ts");
/* harmony import */ var _followup_all_followup_list_all_followup_list_component__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./followup/all-followup-list/all-followup-list.component */ "./src/app/followup/all-followup-list/all-followup-list.component.ts");
/* harmony import */ var _order_edit_order_edit_order_component__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./order/edit-order/edit-order.component */ "./src/app/order/edit-order/edit-order.component.ts");
/* harmony import */ var _order_other_address_other_address_component__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./order/other-address/other-address.component */ "./src/app/order/other-address/other-address.component.ts");
/* harmony import */ var _annoucement_read_massage_read_massage_component__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./annoucement/read-massage/read-massage.component */ "./src/app/annoucement/read-massage/read-massage.component.ts");
/* harmony import */ var _annoucement_read_popup_read_popup_component__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./annoucement/read-popup/read-popup.component */ "./src/app/annoucement/read-popup/read-popup.component.ts");
/* harmony import */ var _annoucement_annoucement_list_unique_filter_pipe__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./annoucement/annoucement-list/unique-filter.pipe */ "./src/app/annoucement/annoucement-list/unique-filter.pipe.ts");
/* harmony import */ var ng_pick_datetime__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ng-pick-datetime */ "./node_modules/ng-pick-datetime/picker.js");
/* harmony import */ var _customer_concern_draft_detail_draft_detail_component__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./customer-concern/draft-detail/draft-detail.component */ "./src/app/customer-concern/draft-detail/draft-detail.component.ts");
/* harmony import */ var _customer_concern_update_concern_update_concern_component__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./customer-concern/update-concern/update-concern.component */ "./src/app/customer-concern/update-concern/update-concern.component.ts");
/* harmony import */ var _ismaestro_ngx_scroll_to_first_invalid__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! @ismaestro/ngx-scroll-to-first-invalid */ "./node_modules/@ismaestro/ngx-scroll-to-first-invalid/fesm5/ismaestro-ngx-scroll-to-first-invalid.js");
/* harmony import */ var ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ng-multiselect-dropdown */ "./node_modules/ng-multiselect-dropdown/fesm5/ng-multiselect-dropdown.js");
/* harmony import */ var _territory_place_modal_place_modal_component__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./territory/place-modal/place-modal.component */ "./src/app/territory/place-modal/place-modal.component.ts");
/* harmony import */ var ngx_editor__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ngx-editor */ "./node_modules/ngx-editor/fesm5/ngx-editor.js");
/* harmony import */ var ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ngx-bootstrap/tooltip */ "./node_modules/ngx-bootstrap/tooltip/fesm5/ngx-bootstrap-tooltip.js");
/* harmony import */ var angular_font_awesome__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! angular-font-awesome */ "./node_modules/angular-font-awesome/dist/angular-font-awesome.es5.js");
/* harmony import */ var _reject_lead_reject_lead_component__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./reject-lead/reject-lead.component */ "./src/app/reject-lead/reject-lead.component.ts");
/* harmony import */ var _scheme_add_scheme_add_scheme_component__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./scheme/add-scheme/add-scheme.component */ "./src/app/scheme/add-scheme/add-scheme.component.ts");
/* harmony import */ var _leave_apply_leave_apply_add_leave_apply_add_component__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./leave-apply/leave-apply-add/leave-apply-add.component */ "./src/app/leave-apply/leave-apply-add/leave-apply-add.component.ts");
/* harmony import */ var _leave_apply_leave_apply_list_leave_apply_list_component__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./leave-apply/leave-apply-list/leave-apply-list.component */ "./src/app/leave-apply/leave-apply-list/leave-apply-list.component.ts");
/* harmony import */ var _scheme_scheme_list_scheme_list_component__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./scheme/scheme-list/scheme-list.component */ "./src/app/scheme/scheme-list/scheme-list.component.ts");
/* harmony import */ var _scheme_scheme_detail_scheme_detail_component__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./scheme/scheme-detail/scheme-detail.component */ "./src/app/scheme/scheme-detail/scheme-detail.component.ts");
/* harmony import */ var _scheme_edit_scheme_edit_scheme_component__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./scheme/edit-scheme/edit-scheme.component */ "./src/app/scheme/edit-scheme/edit-scheme.component.ts");
/* harmony import */ var _checkin_checkin_detail_checkin_detail_component__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./checkin/checkin-detail/checkin-detail.component */ "./src/app/checkin/checkin-detail/checkin-detail.component.ts");
/* harmony import */ var _allowance_allowance_component__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./allowance/allowance.component */ "./src/app/allowance/allowance.component.ts");
/* harmony import */ var _distribution_document_end_image_document_end_image_component__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./distribution/document-end-image/document-end-image.component */ "./src/app/distribution/document-end-image/document-end-image.component.ts");
/* harmony import */ var _cities_modal_cities_modal_component__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./cities-modal/cities-modal.component */ "./src/app/cities-modal/cities-modal.component.ts");
/* harmony import */ var _leave_add_leave_add_leave_component__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./leave/add-leave/add-leave.component */ "./src/app/leave/add-leave/add-leave.component.ts");
/* harmony import */ var _leave_leave_detail_leave_detail_component__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./leave/leave-detail/leave-detail.component */ "./src/app/leave/leave-detail/leave-detail.component.ts");
/* harmony import */ var _leave_leave_list_leave_list_component__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./leave/leave-list/leave-list.component */ "./src/app/leave/leave-list/leave-list.component.ts");
/* harmony import */ var _order_schemepopup_schemepopup_component__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./order/schemepopup/schemepopup.component */ "./src/app/order/schemepopup/schemepopup.component.ts");
/* harmony import */ var _customer_concern_update_status_update_status_component__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./customer-concern/update-status/update-status.component */ "./src/app/customer-concern/update-status/update-status.component.ts");
/* harmony import */ var _scheme_editdate_scheme_editdate_scheme_component__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./scheme/editdate-scheme/editdate-scheme.component */ "./src/app/scheme/editdate-scheme/editdate-scheme.component.ts");
/* harmony import */ var _pop_and_gift_video_modal_video_modal_component__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./pop_and_gift/video-modal/video-modal.component */ "./src/app/pop_and_gift/video-modal/video-modal.component.ts");
/* harmony import */ var _pop_and_gift_distributor_wallet_detail_modal_wallet_detail_modal_component__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component */ "./src/app/pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component.ts");
/* harmony import */ var _pop_and_gift_distributor_pop_and_gift_distributor_list_pop_and_gift_distributor_list_component__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component */ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component.ts");
/* harmony import */ var _pop_and_gift_distributor_pop_and_gift_distributor_add_pop_and_gift_distributor_add_component__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component */ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component.ts");
/* harmony import */ var _leave_and_holiday_leave_rule_detail_leave_rule_detail_component__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./leave-and-holiday/leave-rule-detail/leave-rule-detail.component */ "./src/app/leave-and-holiday/leave-rule-detail/leave-rule-detail.component.ts");
/* harmony import */ var _pop_and_gift_distributor_status_modal_status_modal_component__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./pop_and_gift-distributor/status-modal/status-modal.component */ "./src/app/pop_and_gift-distributor/status-modal/status-modal.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _leave_editleave_editleave_component__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./leave/editleave/editleave.component */ "./src/app/leave/editleave/editleave.component.ts");
/* harmony import */ var _scheme_add_distributor_add_distributor_component__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./scheme/add-distributor/add-distributor.component */ "./src/app/scheme/add-distributor/add-distributor.component.ts");
/* harmony import */ var _order_pending_order_pending_order_component__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./order/pending-order/pending-order.component */ "./src/app/order/pending-order/pending-order.component.ts");
/* harmony import */ var _travel_add_on_detail_add_on_detail_component__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./travel/add-on-detail/add-on-detail.component */ "./src/app/travel/add-on-detail/add-on-detail.component.ts");
/* harmony import */ var _expense_edit_out_station_edit_out_station_component__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./expense/edit-out-station/edit-out-station.component */ "./src/app/expense/edit-out-station/edit-out-station.component.ts");
/* harmony import */ var _expense_editmisc_editmisc_component__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./expense/editmisc/editmisc.component */ "./src/app/expense/editmisc/editmisc.component.ts");
/* harmony import */ var _expense_edit_sales_pormotion_edit_sales_pormotion_component__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./expense/edit-sales-pormotion/edit-sales-pormotion.component */ "./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.ts");
/* harmony import */ var _expense_edit_local_expense_edit_local_expense_component__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./expense/edit-local-expense/edit-local-expense.component */ "./src/app/expense/edit-local-expense/edit-local-expense.component.ts");
/* harmony import */ var _checkin_remark_modal_remark_modal_component__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./checkin/remark-modal/remark-modal.component */ "./src/app/checkin/remark-modal/remark-modal.component.ts");
/* harmony import */ var ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ngx-infinite-scroll */ "./node_modules/ngx-infinite-scroll/modules/ngx-infinite-scroll.es5.js");
/* harmony import */ var _customer_concern_image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./customer-concern/image-modal/image-modal.component */ "./src/app/customer-concern/image-modal/image-modal.component.ts");
/* harmony import */ var _pop_and_gift_eversion_detail_eversion_detail_component__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./pop_and_gift/eversion-detail/eversion-detail.component */ "./src/app/pop_and_gift/eversion-detail/eversion-detail.component.ts");
/* harmony import */ var _vendor_vendor_add_vendor_add_component__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./vendor/vendor-add/vendor-add.component */ "./src/app/vendor/vendor-add/vendor-add.component.ts");
/* harmony import */ var _vendor_vendor_list_vendor_list_component__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./vendor/vendor-list/vendor-list.component */ "./src/app/vendor/vendor-list/vendor-list.component.ts");
/* harmony import */ var _vendor_vendor_detail_vendor_detail_component__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./vendor/vendor-detail/vendor-detail.component */ "./src/app/vendor/vendor-detail/vendor-detail.component.ts");
/* harmony import */ var _vendor_qr_code_detail_qr_code_detail_component__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./vendor/qr-code-detail/qr-code-detail.component */ "./src/app/vendor/qr-code-detail/qr-code-detail.component.ts");
/* harmony import */ var _vendor_vendor_update_vendor_update_component__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./vendor/vendor-update/vendor-update.component */ "./src/app/vendor/vendor-update/vendor-update.component.ts");
/* harmony import */ var _product_editmodel_editmodel_component__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./product/editmodel/editmodel.component */ "./src/app/product/editmodel/editmodel.component.ts");
/* harmony import */ var _leave_remaining_leave_remaining_leave_component__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./leave/remaining-leave/remaining-leave.component */ "./src/app/leave/remaining-leave/remaining-leave.component.ts");










































// import { UniquePipe } from './shared/pipes/unique-filter.pipe';



















































// import { LocalStorageService }  from './local-storage.Service';


// import {NgxScrollToFirstInvalidModule} from '@ismaestro/ngx-scroll-to-first-invalid';
// import { FileSaverModule } from 'ngx-filesaver';













































// import { PurchaseOrderAddComponent } from './purchase-order/purchase-order-add/purchase-order-add.component';
// import { PurchaseOrderListComponent } from './purchase-order/purchase-order-list/purchase-order-list.component';
// import { PurchaseOrderDetailComponent } from './purchase-order/purchase-order-detail/purchase-order-detail.component';




var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
            declarations: [
                _app_component__WEBPACK_IMPORTED_MODULE_5__["AppComponent"],
                _login_login_component__WEBPACK_IMPORTED_MODULE_8__["LoginComponent"],
                _header_header_component__WEBPACK_IMPORTED_MODULE_9__["HeaderComponent"],
                _footer_footer_component__WEBPACK_IMPORTED_MODULE_10__["FooterComponent"],
                _navigation_navigation_component__WEBPACK_IMPORTED_MODULE_11__["NavigationComponent"],
                // AuthGuardLog,
                // AuthGuard,
                _task_task_list_task_list_component__WEBPACK_IMPORTED_MODULE_55__["TaskListComponent"],
                _task_add_task_add_task_component__WEBPACK_IMPORTED_MODULE_54__["AddTaskComponent"],
                _master_tab_master_tab_master_tab_component__WEBPACK_IMPORTED_MODULE_13__["MasterTabComponent"],
                _product_product_list_product_list_component__WEBPACK_IMPORTED_MODULE_15__["ProductListComponent"],
                _master_tab_list_master_tab_list_master_tab_list_component__WEBPACK_IMPORTED_MODULE_14__["MasterTabListComponent"],
                _product_product_detail_product_detail_component__WEBPACK_IMPORTED_MODULE_16__["ProductDetailComponent"],
                _user_user_add_user_add_component__WEBPACK_IMPORTED_MODULE_17__["UserAddComponent"],
                _user_sale_user_list_sale_user_list_component__WEBPACK_IMPORTED_MODULE_18__["SaleUserListComponent"],
                _user_sale_user_detail_sale_user_detail_component__WEBPACK_IMPORTED_MODULE_19__["SaleUserDetailComponent"],
                _user_system_user_list_system_user_list_component__WEBPACK_IMPORTED_MODULE_20__["SystemUserListComponent"],
                _user_system_user_detail_system_user_detail_component__WEBPACK_IMPORTED_MODULE_21__["SystemUserDetailComponent"],
                _user_system_modal_system_modal_component__WEBPACK_IMPORTED_MODULE_36__["SystemModalComponent"],
                _territory_territory_add_territory_add_component__WEBPACK_IMPORTED_MODULE_22__["TerritoryAddComponent"],
                _territory_territory_list_territory_list_component__WEBPACK_IMPORTED_MODULE_23__["TerritoryListComponent"],
                _pop_and_gift_add_gift_add_gift_component__WEBPACK_IMPORTED_MODULE_24__["AddGiftComponent"],
                _pop_and_gift_gift_list_gift_list_component__WEBPACK_IMPORTED_MODULE_25__["GiftListComponent"],
                _leave_and_holiday_add_leave_rules_add_leave_rules_component__WEBPACK_IMPORTED_MODULE_27__["AddLeaveRulesComponent"],
                _leave_and_holiday_add_holiday_add_holiday_component__WEBPACK_IMPORTED_MODULE_28__["AddHolidayComponent"],
                _leave_and_holiday_leave_rule_list_leave_rule_list_component__WEBPACK_IMPORTED_MODULE_29__["LeaveRuleListComponent"],
                _leave_and_holiday_holiday_list_holiday_list_component__WEBPACK_IMPORTED_MODULE_30__["HolidayListComponent"],
                _annoucement_add_annoucement_add_annoucement_component__WEBPACK_IMPORTED_MODULE_33__["AddAnnoucementComponent"],
                _annoucement_annoucement_list_annoucement_list_component__WEBPACK_IMPORTED_MODULE_34__["AnnoucementListComponent"],
                _user_address_modal_address_modal_component__WEBPACK_IMPORTED_MODULE_35__["AddressModalComponent"],
                _user_email_modal_email_modal_component__WEBPACK_IMPORTED_MODULE_37__["EmailModalComponent"],
                _product_product_modal_product_modal_component__WEBPACK_IMPORTED_MODULE_38__["ProductModalComponent"],
                _distribution_add_distribution_add_distribution_component__WEBPACK_IMPORTED_MODULE_39__["AddDistributionComponent"],
                _distribution_distributor_list_distribution_list_component__WEBPACK_IMPORTED_MODULE_40__["DistributionListComponent"],
                _discount_add_discount_add_discount_component__WEBPACK_IMPORTED_MODULE_42__["AddDiscountComponent"],
                _discount_discount_list_discount_list_component__WEBPACK_IMPORTED_MODULE_43__["DiscountListComponent"],
                _distribution_distribution_detail_distribution_detail_component__WEBPACK_IMPORTED_MODULE_44__["DistributionDetailComponent"],
                _distribution_distribution_order_list_distribution_order_list_component__WEBPACK_IMPORTED_MODULE_45__["DistributionOrderListComponent"],
                _shared_pipes_my_filter_pipe__WEBPACK_IMPORTED_MODULE_41__["MyFilterPipe"],
                _annoucement_annoucement_list_unique_filter_pipe__WEBPACK_IMPORTED_MODULE_91__["UniquePipe"],
                _lead_add_lead_add_lead_component__WEBPACK_IMPORTED_MODULE_46__["AddLeadComponent"],
                _lead_lead_list_lead_list_component__WEBPACK_IMPORTED_MODULE_47__["LeadListComponent"],
                _pop_and_gift_gift_deatil_gift_deatil_component__WEBPACK_IMPORTED_MODULE_48__["GiftDeatilComponent"],
                _lead_lead_detail_lead_detail_component__WEBPACK_IMPORTED_MODULE_49__["LeadDetailComponent"],
                _distribution_retailer_list_retailer_list_component__WEBPACK_IMPORTED_MODULE_50__["RetailerListComponent"],
                _distribution_engine_list_engine_list_component__WEBPACK_IMPORTED_MODULE_53__["EngineListComponent"],
                _distribution_wholesaler_list_wholesaler_list_component__WEBPACK_IMPORTED_MODULE_51__["WholesalerListComponent"],
                _distribution_mechanic_list_mechanic_list_component__WEBPACK_IMPORTED_MODULE_52__["MechanicListComponent"],
                _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_59__["DashboardComponent"],
                _task_assigntask_assigntask_component__WEBPACK_IMPORTED_MODULE_56__["AssigntaskComponent"],
                _pop_and_gift_gift_modal_gift_modal_component__WEBPACK_IMPORTED_MODULE_26__["GiftModalComponent"],
                _followup_add_followup_add_followup_component__WEBPACK_IMPORTED_MODULE_60__["AddFollowupComponent"],
                _followup_followup_list_followup_list_component__WEBPACK_IMPORTED_MODULE_61__["FollowupListComponent"],
                _task_task_detail_task_detail_component__WEBPACK_IMPORTED_MODULE_62__["TaskDetailComponent"],
                _distribution_update_network_update_network_component__WEBPACK_IMPORTED_MODULE_63__["UpdateNetworkComponent"],
                _distribution_update_network_address_update_network_address_component__WEBPACK_IMPORTED_MODULE_64__["UpdateNetworkAddressComponent"],
                _order_add_order_add_order_component__WEBPACK_IMPORTED_MODULE_65__["AddOrderComponent"],
                _order_order_list_order_list_component__WEBPACK_IMPORTED_MODULE_66__["OrderListComponent"],
                _order_order_detail_order_detail_component__WEBPACK_IMPORTED_MODULE_67__["OrderDetailComponent"],
                _checkin_checkin_list_checkin_list_component__WEBPACK_IMPORTED_MODULE_68__["CheckinComponent"],
                _activity_add_activity_add_activity_component__WEBPACK_IMPORTED_MODULE_69__["AddActivityComponent"],
                _lead_update_lead_update_lead_component__WEBPACK_IMPORTED_MODULE_70__["UpdateLeadComponent"],
                _travel_add_travel_add_travel_component__WEBPACK_IMPORTED_MODULE_71__["AddTravelComponent"],
                _travel_list_travel_list_travel_component__WEBPACK_IMPORTED_MODULE_72__["ListTravelComponent"],
                _travel_detail_travel_detail_travel_component__WEBPACK_IMPORTED_MODULE_73__["DetailTravelComponent"],
                _travel_update_travel_update_travel_component__WEBPACK_IMPORTED_MODULE_74__["UpdateTravelComponent"],
                _expense_add_expense_add_expense_component__WEBPACK_IMPORTED_MODULE_75__["AddExpenseComponent"],
                _expense_expense_list_expense_list_component__WEBPACK_IMPORTED_MODULE_76__["ExpenseListComponent"],
                _expense_expense_detail_expense_detail_component__WEBPACK_IMPORTED_MODULE_77__["ExpenseDetailComponent"],
                _expense_detail_by_date_detail_by_date_component__WEBPACK_IMPORTED_MODULE_78__["DetailByDateComponent"],
                _annoucement_annoucement_detail_annoucement_detail_component__WEBPACK_IMPORTED_MODULE_79__["AnnoucementDetailComponent"],
                _territory_territory_detail_territory_detail_component__WEBPACK_IMPORTED_MODULE_80__["TerritoryDetailComponent"],
                _order_list_order_list_order_component__WEBPACK_IMPORTED_MODULE_81__["ListOrderComponent"],
                _customer_concern_concern_list_concern_list_component__WEBPACK_IMPORTED_MODULE_82__["ConcernListComponent"],
                _customer_concern_add_concern_add_concern_component__WEBPACK_IMPORTED_MODULE_83__["AddConcernComponent"],
                _customer_concern_concern_detail_concern_detail_component__WEBPACK_IMPORTED_MODULE_84__["ConcernDetailComponent"],
                _order_detailorderlist_detailorderlist_component__WEBPACK_IMPORTED_MODULE_85__["DetailorderlistComponent"],
                _followup_all_followup_list_all_followup_list_component__WEBPACK_IMPORTED_MODULE_86__["AllFollowupListComponent"],
                _order_edit_order_edit_order_component__WEBPACK_IMPORTED_MODULE_87__["EditOrderComponent"],
                _order_other_address_other_address_component__WEBPACK_IMPORTED_MODULE_88__["OtherAddressComponent"],
                _annoucement_read_massage_read_massage_component__WEBPACK_IMPORTED_MODULE_89__["ReadMassageComponent"],
                _annoucement_read_popup_read_popup_component__WEBPACK_IMPORTED_MODULE_90__["ReadPopupComponent"],
                _customer_concern_draft_detail_draft_detail_component__WEBPACK_IMPORTED_MODULE_93__["DraftDetailComponent"],
                _customer_concern_update_concern_update_concern_component__WEBPACK_IMPORTED_MODULE_94__["UpdateConcernComponent"],
                _territory_place_modal_place_modal_component__WEBPACK_IMPORTED_MODULE_97__["PlaceModalComponent"],
                _reject_lead_reject_lead_component__WEBPACK_IMPORTED_MODULE_101__["RejectLeadComponent"],
                _scheme_add_scheme_add_scheme_component__WEBPACK_IMPORTED_MODULE_102__["AddSchemeComponent"],
                _leave_apply_leave_apply_add_leave_apply_add_component__WEBPACK_IMPORTED_MODULE_103__["LeaveApplyAddComponent"],
                _leave_apply_leave_apply_list_leave_apply_list_component__WEBPACK_IMPORTED_MODULE_104__["LeaveApplyListComponent"],
                _scheme_scheme_list_scheme_list_component__WEBPACK_IMPORTED_MODULE_105__["SchemeListComponent"],
                _scheme_scheme_detail_scheme_detail_component__WEBPACK_IMPORTED_MODULE_106__["SchemeDetailComponent"],
                _scheme_edit_scheme_edit_scheme_component__WEBPACK_IMPORTED_MODULE_107__["EditSchemeComponent"],
                _checkin_checkin_detail_checkin_detail_component__WEBPACK_IMPORTED_MODULE_108__["CheckinDetailComponent"],
                _allowance_allowance_component__WEBPACK_IMPORTED_MODULE_109__["AllowanceComponent"],
                _distribution_document_end_image_document_end_image_component__WEBPACK_IMPORTED_MODULE_110__["DocumentEndImageComponent"],
                _cities_modal_cities_modal_component__WEBPACK_IMPORTED_MODULE_111__["CitiesModalComponent"],
                _leave_add_leave_add_leave_component__WEBPACK_IMPORTED_MODULE_112__["AddLeaveComponent"],
                _leave_leave_detail_leave_detail_component__WEBPACK_IMPORTED_MODULE_113__["LeaveDetailComponent"],
                _leave_leave_list_leave_list_component__WEBPACK_IMPORTED_MODULE_114__["LeaveListComponent"],
                _order_schemepopup_schemepopup_component__WEBPACK_IMPORTED_MODULE_115__["SchemepopupComponent"],
                _customer_concern_update_status_update_status_component__WEBPACK_IMPORTED_MODULE_116__["UpdateStatusComponent"],
                _scheme_editdate_scheme_editdate_scheme_component__WEBPACK_IMPORTED_MODULE_117__["EditdateSchemeComponent"],
                _pop_and_gift_video_modal_video_modal_component__WEBPACK_IMPORTED_MODULE_118__["VideoModalComponent"],
                _pop_and_gift_distributor_wallet_detail_modal_wallet_detail_modal_component__WEBPACK_IMPORTED_MODULE_119__["WalletDetailModalComponent"],
                _pop_and_gift_distributor_pop_and_gift_distributor_list_pop_and_gift_distributor_list_component__WEBPACK_IMPORTED_MODULE_120__["PopAndGiftDistributorListComponent"],
                _pop_and_gift_distributor_pop_and_gift_distributor_add_pop_and_gift_distributor_add_component__WEBPACK_IMPORTED_MODULE_121__["PopAndGiftDistributorAddComponent"],
                _leave_and_holiday_leave_rule_detail_leave_rule_detail_component__WEBPACK_IMPORTED_MODULE_122__["LeaveRuleDetailComponent"],
                _pop_and_gift_distributor_status_modal_status_modal_component__WEBPACK_IMPORTED_MODULE_123__["StatusModalComponent"],
                _leave_editleave_editleave_component__WEBPACK_IMPORTED_MODULE_125__["EditleaveComponent"],
                _scheme_add_distributor_add_distributor_component__WEBPACK_IMPORTED_MODULE_126__["AddDistributorComponent"],
                _order_pending_order_pending_order_component__WEBPACK_IMPORTED_MODULE_127__["PendingOrderComponent"],
                _travel_add_on_detail_add_on_detail_component__WEBPACK_IMPORTED_MODULE_128__["AddOnDetailComponent"],
                _expense_edit_out_station_edit_out_station_component__WEBPACK_IMPORTED_MODULE_129__["EditOutStationComponent"],
                _expense_editmisc_editmisc_component__WEBPACK_IMPORTED_MODULE_130__["EditmiscComponent"],
                _expense_edit_sales_pormotion_edit_sales_pormotion_component__WEBPACK_IMPORTED_MODULE_131__["EditSalesPormotionComponent"],
                _expense_edit_local_expense_edit_local_expense_component__WEBPACK_IMPORTED_MODULE_132__["EditLocalExpenseComponent"],
                _checkin_remark_modal_remark_modal_component__WEBPACK_IMPORTED_MODULE_133__["RemarkModalComponent"],
                _customer_concern_image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_135__["ImageModalComponent"],
                _pop_and_gift_eversion_detail_eversion_detail_component__WEBPACK_IMPORTED_MODULE_136__["EversionDetailComponent"],
                _vendor_vendor_add_vendor_add_component__WEBPACK_IMPORTED_MODULE_137__["VendorAddComponent"],
                _vendor_vendor_list_vendor_list_component__WEBPACK_IMPORTED_MODULE_138__["VendorListComponent"],
                _vendor_vendor_detail_vendor_detail_component__WEBPACK_IMPORTED_MODULE_139__["VendorDetailComponent"],
                _vendor_qr_code_detail_qr_code_detail_component__WEBPACK_IMPORTED_MODULE_140__["QrCodeDetailComponent"],
                _vendor_vendor_update_vendor_update_component__WEBPACK_IMPORTED_MODULE_141__["VendorUpdateComponent"],
                _product_editmodel_editmodel_component__WEBPACK_IMPORTED_MODULE_142__["EditmodelComponent"],
                _leave_remaining_leave_remaining_leave_component__WEBPACK_IMPORTED_MODULE_143__["RemainingLeaveComponent"]
            ],
            imports: [
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
                ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_134__["InfiniteScrollModule"],
                // FileSaverModule,
                // NgxScrollToFirstInvalidModule,
                _app_routing_module__WEBPACK_IMPORTED_MODULE_4__["AppRoutingModule"],
                ngx_material_timepicker__WEBPACK_IMPORTED_MODULE_3__["NgxMaterialTimepickerModule"],
                ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_96__["NgMultiSelectDropDownModule"].forRoot(),
                _angular_forms__WEBPACK_IMPORTED_MODULE_31__["FormsModule"],
                _node_modules_angular_common_http__WEBPACK_IMPORTED_MODULE_32__["HttpClientModule"],
                _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_12__["MatSnackBarModule"],
                _material__WEBPACK_IMPORTED_MODULE_6__["MaterialModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_31__["ReactiveFormsModule"],
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__["BrowserAnimationsModule"],
                ng_pick_datetime__WEBPACK_IMPORTED_MODULE_92__["OwlDateTimeModule"],
                ng_pick_datetime__WEBPACK_IMPORTED_MODULE_92__["OwlNativeDateTimeModule"],
                _ismaestro_ngx_scroll_to_first_invalid__WEBPACK_IMPORTED_MODULE_95__["NgxScrollToFirstInvalidModule"],
                ngx_editor__WEBPACK_IMPORTED_MODULE_98__["NgxEditorModule"],
                angular_font_awesome__WEBPACK_IMPORTED_MODULE_100__["AngularFontAwesomeModule"],
                ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_99__["TooltipModule"].forRoot()
            ],
            entryComponents: [
                _pop_and_gift_distributor_status_modal_status_modal_component__WEBPACK_IMPORTED_MODULE_123__["StatusModalComponent"],
                _user_address_modal_address_modal_component__WEBPACK_IMPORTED_MODULE_35__["AddressModalComponent"],
                _user_system_modal_system_modal_component__WEBPACK_IMPORTED_MODULE_36__["SystemModalComponent"],
                _order_schemepopup_schemepopup_component__WEBPACK_IMPORTED_MODULE_115__["SchemepopupComponent"],
                _user_email_modal_email_modal_component__WEBPACK_IMPORTED_MODULE_37__["EmailModalComponent"],
                _distribution_update_network_update_network_component__WEBPACK_IMPORTED_MODULE_63__["UpdateNetworkComponent"],
                _product_product_modal_product_modal_component__WEBPACK_IMPORTED_MODULE_38__["ProductModalComponent"],
                _pop_and_gift_gift_modal_gift_modal_component__WEBPACK_IMPORTED_MODULE_26__["GiftModalComponent"],
                _distribution_update_network_address_update_network_address_component__WEBPACK_IMPORTED_MODULE_64__["UpdateNetworkAddressComponent"],
                _lead_update_lead_update_lead_component__WEBPACK_IMPORTED_MODULE_70__["UpdateLeadComponent"],
                _travel_update_travel_update_travel_component__WEBPACK_IMPORTED_MODULE_74__["UpdateTravelComponent"],
                _order_list_order_list_order_component__WEBPACK_IMPORTED_MODULE_81__["ListOrderComponent"],
                _order_detailorderlist_detailorderlist_component__WEBPACK_IMPORTED_MODULE_85__["DetailorderlistComponent"],
                _order_other_address_other_address_component__WEBPACK_IMPORTED_MODULE_88__["OtherAddressComponent"],
                _annoucement_read_massage_read_massage_component__WEBPACK_IMPORTED_MODULE_89__["ReadMassageComponent"],
                _annoucement_read_popup_read_popup_component__WEBPACK_IMPORTED_MODULE_90__["ReadPopupComponent"],
                _customer_concern_update_concern_update_concern_component__WEBPACK_IMPORTED_MODULE_94__["UpdateConcernComponent"],
                _territory_place_modal_place_modal_component__WEBPACK_IMPORTED_MODULE_97__["PlaceModalComponent"],
                _reject_lead_reject_lead_component__WEBPACK_IMPORTED_MODULE_101__["RejectLeadComponent"],
                _scheme_edit_scheme_edit_scheme_component__WEBPACK_IMPORTED_MODULE_107__["EditSchemeComponent"],
                _distribution_document_end_image_document_end_image_component__WEBPACK_IMPORTED_MODULE_110__["DocumentEndImageComponent"],
                _cities_modal_cities_modal_component__WEBPACK_IMPORTED_MODULE_111__["CitiesModalComponent"],
                _scheme_editdate_scheme_editdate_scheme_component__WEBPACK_IMPORTED_MODULE_117__["EditdateSchemeComponent"],
                _scheme_add_distributor_add_distributor_component__WEBPACK_IMPORTED_MODULE_126__["AddDistributorComponent"],
                _order_pending_order_pending_order_component__WEBPACK_IMPORTED_MODULE_127__["PendingOrderComponent"],
                _travel_add_on_detail_add_on_detail_component__WEBPACK_IMPORTED_MODULE_128__["AddOnDetailComponent"],
                _pop_and_gift_video_modal_video_modal_component__WEBPACK_IMPORTED_MODULE_118__["VideoModalComponent"],
                _checkin_remark_modal_remark_modal_component__WEBPACK_IMPORTED_MODULE_133__["RemarkModalComponent"],
                _customer_concern_image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_135__["ImageModalComponent"],
                _product_editmodel_editmodel_component__WEBPACK_IMPORTED_MODULE_142__["EditmodelComponent"],
                _leave_remaining_leave_remaining_leave_component__WEBPACK_IMPORTED_MODULE_143__["RemainingLeaveComponent"],
                _pop_and_gift_distributor_wallet_detail_modal_wallet_detail_modal_component__WEBPACK_IMPORTED_MODULE_119__["WalletDetailModalComponent"]
            ],
            providers: [
                _auth_guard_log_service__WEBPACK_IMPORTED_MODULE_57__["AuthGuardLog"],
                // LocalStorageService,
                _session_service__WEBPACK_IMPORTED_MODULE_58__["AuthGuard"],
                _angular_common__WEBPACK_IMPORTED_MODULE_124__["DatePipe"]
            ],
            bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_5__["AppComponent"]]
        })
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "./src/app/auth-guard-log.service.ts":
/*!*******************************************!*\
  !*** ./src/app/auth-guard-log.service.ts ***!
  \*******************************************/
/*! exports provided: AuthGuardLog, AuthGuardLogService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuardLog", function() { return AuthGuardLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuardLogService", function() { return AuthGuardLogService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");





var AuthGuardLog = /** @class */ (function () {
    function AuthGuardLog(router, ses, service) {
        this.router = router;
        this.ses = ses;
        this.service = service;
        this.users = [];
    }
    AuthGuardLog.prototype.canActivate = function (route, state) {
        var _this = this;
        this.ses.getSe().subscribe(function (data) {
            _this.users = data;
            console.log(_this.users);
        }, function (error) {
            console.log('error');
        });
        if (this.users.st_log) {
            console.log(this.users);
            if (state.url != '/') {
                //this.router.navigate([state.url]);
            }
            else {
                this.router.navigate(['dashboard']);
            }
            this.service.can_active = '1';
            return false;
        }
        else {
            this.service.can_active = '';
            return true;
        }
    };
    AuthGuardLog = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _local_storage_service__WEBPACK_IMPORTED_MODULE_3__["sessionStorage"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"]])
    ], AuthGuardLog);
    return AuthGuardLog;
}());

var AuthGuardLogService = /** @class */ (function () {
    function AuthGuardLogService() {
    }
    return AuthGuardLogService;
}());



/***/ }),

/***/ "./src/app/checkin/checkin-detail/checkin-detail.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/checkin/checkin-detail/checkin-detail.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form>\n  <div class=\"main-container\">\n    <div *ngIf=\"loader\"> \n      <div class=\"cs-loader\">\n        <img src=\"assets/img/loader.png\" class=\"rotate\"> \n      </div>\n    </div>\n    <div class=\"middle-container\">\n      <div class=\"page-heading\">\n        <!-- <img src=\"assets/img/leads_icon.svg\" class=\"h-icon\"> -->\n        <div class=\"heading-text bc-space\"><strong>CHECKIN DETAIL</strong> \n          <p>{{checkin_detail.length}}</p> \n          <h2>{{checkInUser}}</h2>\n          <div class=\"back-btn\" >\n            <a mat-button routerLink=\"/checkin-list\" routerLinkActive=\"active\" ><i class=\"material-icons\">arrow_right_alt</i></a>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"left-auto\" *ngIf=\"userId==checkin_id && !checkin_detail[0].remarkSecondary\">\n        <div class=\"cs-btn text-right \">\n          <div class=\"in-btn\">\n            <button mat-raised-button color=\"accent\" (click)=\"openDialog('activityReamrk')\">Add Remark</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"container-outer\" >\n      <div class=\"container\" >\n        \n        <div class=\"row\" >\n          <div class=\"col s12\">\n            <div class=\"sprate-box padding0 mb15\" *ngFor=\"let checkindetail of checkin_detail;let i = index\">\n              <div class=\"cs-heading\" style=\"margin: 0px;\">\n                <h2>{{i+1}}. Basic Information</h2>\n              </div>\n              <div class=\"ds-from-fields scroll scroll350\">\n                <div class=\"row\">\n                  <div class=\"col s12 padding0\">\n                    <div class=\"details-info\">\n                      <div class=\"basic-details\">\n                        <div class=\"col s12 cs-figure padding0\">\n                          <ul>\n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Created Date</span>\n                                  <p> {{checkindetail.createdOn | date:'d, MMMM , y'}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Type</span>\n                                  <p>{{checkindetail.activityModuleName}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Company Name</span>\n                                  <p  *ngIf=\"checkindetail.activityModule==1\">{{checkindetail.establishment}}</p>\n                                  <p  *ngIf=\"checkindetail.referenceId==0\">{{checkindetail.establishmentName}}</p>\n                                  <p *ngIf=\"checkindetail.activityModule!=1\">{{checkindetail.leadEstablishment}} </p>\n                                </div>\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>CheckInTime</span>\n                                  <p>{{checkindetail.checkInTime|date:'d, MMMM , y, h:mm:ss a'}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>CheckOutTime</span>\n                                  <p>{{checkindetail.checkOutTime|date :'d, MMMM , y, h:mm:ss a'}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Check In Duration</span>\n                                  <p>{{checkindetail.checkinDuration}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Visit Objective </span>\n                                  <p>{{checkindetail.objectivesOfVisitName}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li *ngIf=\"checkindetail.objectivesOfVisitName=='Others'\">\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Other Objective </span>\n                                  <p>{{checkindetail.otherObjective}}</p>\n                                </div>\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"sprate-box pt0\">\n                      <div class=\"cs-heading\">\n                        <h2>Basic Information</h2>\n                      </div>\n                      <div class=\"from-fields\">\n                        <div class=\"row\">\n                          <div class=\"col s12 padding0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input\">\n                                <input matInput placeholder=\"Location\" name=\"location\" value=\"{{checkindetail.location}}\" readonly>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s12 padding0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input\">\n                                <textarea matInput placeholder=\"Remarks\"  name=\"remarks\" value=\"{{checkindetail.remarks}}\" class=\"h100\" [readonly]=\"true\"></textarea>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s8 pr0\" *ngIf=\"checkindetail.isFollowUp==true\">\n                    <div class=\"sprate-box padding0\" >\n                      <div class=\"full-address\">\n                        <div class=\"top-heading\">\n                          <h2>Follow-ups</h2>\n                        </div>\n                        <div class=\"cs-table\">\n                          <div class=\"table-head\">\n                            <table>\n                              <tr>\n                                <th class=\"w100\"> date</th>\n                                <th class=\"w170\">Follow-up type</th>\n                                <th >Remarks</th>\n                                <th class=\"w100\">Status</th>\n                              </tr>\n                            </table>\n                          </div>\n                          <div class=\"table-container\">\n                            <div class=\"table-content none-shadow\">\n                              <table>\n                                <tr *ngFor=\"let check of checkindetail.activityFollowUps\">\n                                  <td class=\"w100\">{{check.followUpDate|date:'d MMM y'}}</td>\n                                  <td class=\"w170\">\n                                    <span *ngIf=\"check.followUpType==1\">Call</span>\n                                    <span *ngIf=\"check.followUpType==2\">Meeting</span>\n                                    <span *ngIf=\"check.followUpType==3\">Email</span>\n                                    <span *ngIf=\"check.followUpType==5\">Other</span>\n                                  </td>\n                                  <td>{{check.remarks}}</td>\n                                  <td class=\"w100\"><span *ngIf=\"check.isClosed==true\">Closed</span><span *ngIf=\"check.isClosed==false\">Open</span></td>\n                                </tr>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col s8 pr0\" *ngIf=\"checkindetail.isFollowUp==false && checkindetail.nextFollowUpType==5\">\n                    <div class=\"sprate-box padding0\" >\n                      <div class=\"full-address\">\n                        <div class=\"top-heading\">\n                          <h2>Follow-ups</h2>\n                        </div>\n                        <div class=\"row\">\n                          <span>\n                            <strong>OTHER</strong>\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"row mt15\" *ngIf=\"checkindetail.remarkSecondary\">\n                  <div class=\"col s12 padding0\">\n                    <div class=\"details-info\">\n                      <div class=\"basic-details none-shadow padding0\">\n                        <div class=\"col s12 cs-figure padding0\">\n                          <ul>\n                            <li style=\"border: 1px solid #B29D9D;\">\n                              <p><strong>Remark:</strong><br>{{checkindetail.remarkSecondary}}</p>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<div  class=\"fixed-multibtn-botm\">\n  <ul>\n    <li ><a  matTooltip=\"Download Product Sheet\" (click)=\"exportAsXLSX()\" matRipple><i class=\"material-icons\">cloud_download</i></a></li>\n  </ul>\n</div>\n\n<div class=\"h100\"></div>"

/***/ }),

/***/ "./src/app/checkin/checkin-detail/checkin-detail.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/checkin/checkin-detail/checkin-detail.component.ts ***!
  \********************************************************************/
/*! exports provided: CheckinDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckinDetailComponent", function() { return CheckinDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _remark_modal_remark_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../remark-modal/remark-modal.component */ "./src/app/checkin/remark-modal/remark-modal.component.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");









var CheckinDetailComponent = /** @class */ (function () {
    function CheckinDetailComponent(db, router, user, route, dialog, confirm) {
        var _this = this;
        this.db = db;
        this.router = router;
        this.user = user;
        this.route = route;
        this.dialog = dialog;
        this.confirm = confirm;
        this.loader = false;
        this.checkin_detail = [];
        this.rolelists = [];
        this.sales = [];
        this.followupdetail = [];
        this.userdata = [];
        this.xLXSArray = [];
        this.route.params.subscribe(function (params) {
            _this.userdata = _this.user['user']['data'];
            _this.userId = _this.userdata['userid'];
            console.log(_this.userId);
            console.log(params);
            _this.checkin_id = params.id;
            _this.checkin_date = params.date;
            console.log(_this.checkin_id);
            console.log(_this.checkin_date);
            if (params) {
                _this.checkInDetail();
            }
        });
    }
    CheckinDetailComponent.prototype.ngOnInit = function () {
    };
    CheckinDetailComponent.prototype.openDialog = function (check) {
        var _this = this;
        console.log(check);
        var checkin_data = [];
        checkin_data = { 'id': this.checkin_id, 'type': check };
        var dialogRef = this.dialog.open(_remark_modal_remark_modal_component__WEBPACK_IMPORTED_MODULE_6__["RemarkModalComponent"], { width: '500px', data: checkin_data });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.checkInDetail();
        });
    };
    CheckinDetailComponent.prototype.checkInDetail = function () {
        var _this = this;
        if (this.checkin_date) {
            console.log("check activity by date");
            console.log(this.checkin_date);
            console.log(this.checkin_id);
            this.loader = true;
            var value = { 'userId': this.checkin_id, 'checkInDate': this.checkin_date, 'currentPage': 1, 'pageSize': 500 };
            console.log(value);
            this.db.fetchData(value, 'activity/list').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.loader = false;
                    _this.checkin_detail = response["data"];
                    for (var i = 0; i < _this.checkin_detail.length; i++) {
                        _this.checkin_detail[i].checkinDuration = moment__WEBPACK_IMPORTED_MODULE_7__["utc"](moment__WEBPACK_IMPORTED_MODULE_7__["duration"](moment__WEBPACK_IMPORTED_MODULE_7__(_this.checkin_detail[i].checkOutTime).diff(moment__WEBPACK_IMPORTED_MODULE_7__(_this.checkin_detail[i].checkInTime))).asMilliseconds()).format('HH:mm');
                    }
                    _this.checkInUser = _this.checkin_detail[0].userName;
                    _this.convertXLSXArray();
                }
                else {
                    _this.checkin_detail = [];
                }
                _this.rolelist();
            });
        }
        else {
            console.log("check activity by only id");
            console.log(this.checkin_id);
            this.loader = true;
            this.db.fileData(this.checkin_id, 'activity/detail/').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.loader = false;
                    _this.checkin_detail[0] = response["data"];
                    _this.checkin_detail[0].checkinDuration = moment__WEBPACK_IMPORTED_MODULE_7__["utc"](moment__WEBPACK_IMPORTED_MODULE_7__["duration"](moment__WEBPACK_IMPORTED_MODULE_7__(_this.checkin_detail[0].checkOutTime).diff(moment__WEBPACK_IMPORTED_MODULE_7__(_this.checkin_detail[0].checkInTime))).asMilliseconds()).format('HH:mm');
                    //  for(let i=0;i<this.checkin_detail.length;i++)
                    //  {
                    //  }
                }
                else {
                    _this.checkin_detail = [];
                }
                _this.rolelist();
            });
        }
    };
    CheckinDetailComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var salespersons = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.sales = salespersons[0].roles;
            console.log(_this.sales);
            // let index=this.sales.findIndex(x=>x.roleId==this.checkin_detail.userRole);
            // this.checkin_detail.roleName=this.sales[index].roleName;
        });
    };
    CheckinDetailComponent.prototype.convertXLSXArray = function () {
        for (var i = 0; i < this.checkin_detail.length; i++) {
            this.xLXSArray.push({
                'Created Date': moment__WEBPACK_IMPORTED_MODULE_7__(this.checkin_detail[i].createdOn).format('DD-MM-YYYY'),
                'Check-In Date': moment__WEBPACK_IMPORTED_MODULE_7__(this.checkin_detail[i].checkInTime).format('DD-MM-YYYY'),
                'Check In Time': moment__WEBPACK_IMPORTED_MODULE_7__(this.checkin_detail[i].checkInTime).format('HH:mm'),
                'Check Out Time': moment__WEBPACK_IMPORTED_MODULE_7__(this.checkin_detail[i].checkOutTime).format('HH:mm'),
                'Check-In Duration': moment__WEBPACK_IMPORTED_MODULE_7__["utc"](moment__WEBPACK_IMPORTED_MODULE_7__["duration"](moment__WEBPACK_IMPORTED_MODULE_7__(this.checkin_detail[i].checkOutTime).diff(moment__WEBPACK_IMPORTED_MODULE_7__(this.checkin_detail[i].checkInTime))).asMilliseconds()).format('HH:mm'),
                'Activity Type': this.checkin_detail[i].activityModuleName,
                'User Name': this.checkin_detail[i].userName,
                'Company Name': this.checkin_detail[i].establishment,
                'Visit Objective': this.checkin_detail[i].objectivesOfVisitName,
                'Location': this.checkin_detail[i].location,
                'Remarks': this.checkin_detail[i].remarks,
                'FollowUp': (this.checkin_detail[i].isFollowUp == true ? 'YES' : 'NO'),
            });
            if (this.checkin_detail[i].isFollowUp == true) {
                this.xLXSArray[i]['FollowUp Date'] = moment__WEBPACK_IMPORTED_MODULE_7__(this.checkin_detail[i].activityFollowUps[0].followUpDate).format('DD-MM-YYYY'),
                    this.xLXSArray[i]['FollowUp Type'] = this.checkin_detail[i].activityFollowUps[0].followUpTypeName,
                    this.xLXSArray[i]['FollowUp Remarks'] = this.checkin_detail[i].activityFollowUps[0].remarks,
                    this.xLXSArray[i]['FollowUp Status'] = (this.checkin_detail[i].activityFollowUps[0].isClosed == true ? 'Close' : 'Open');
            }
        }
    };
    CheckinDetailComponent.prototype.exportAsXLSX = function () {
        console.log(this.xLXSArray);
        this.db.exportAsExcelFile(this.xLXSArray, 'DVR SHEET');
    };
    CheckinDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-checkin-detail',
            template: __webpack_require__(/*! ./checkin-detail.component.html */ "./src/app/checkin/checkin-detail/checkin-detail.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], src_app_local_storage_service__WEBPACK_IMPORTED_MODULE_4__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], src_app_dialog__WEBPACK_IMPORTED_MODULE_8__["DialogComponent"]])
    ], CheckinDetailComponent);
    return CheckinDetailComponent;
}());



/***/ }),

/***/ "./src/app/checkin/checkin-list/checkin-list.component.html":
/*!******************************************************************!*\
  !*** ./src/app/checkin/checkin-list/checkin-list.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"loader\"> \n  <div class=\"cs-loader\">\n    <img src=\"assets/img/loader.png\" class=\"rotate\"> \n  </div>\n</div>\n<div class=\"main-container\">\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/activity.svg\" class=\"h-icon\">\n      <div class=\"heading-text\" style=\"display: flex; align-items: center; flex-direction: row;\">\n        <div>\n          <h2>DVRs</h2>\n          <p>Total DVR {{checkInList.length}}</p>\n        </div>\n        <div class=\"item-filter ml15\" *ngIf=\"userRole!=10 && userRole!=1\">\n          <mat-form-field class=\"wp100\">\n            <mat-select  name=\"checkin\" [(ngModel)]=\"checkList\"  >\n              <mat-option (click)=\"checkin_list()\" [value]=1>My Check-In</mat-option>\n              <mat-option (click)=\"checkin_list()\" [value]=2>My Junior's Check-In</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      \n    </div>\n    <div  *ngIf=\"filter.companyname || filter.role || filter.module || filter.userName || filter.date\" class=\"filter-container left-auto\">\n      <div (click)=\"clearfilter()\" class=\"filter-btn\">\n        <button mat-button >CLEAR FILTER</button>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table>\n                  <tr>\n                    <th  class=\"w150\">Check-In Date</th>\n                    <th  class=\"w140\">Sales User</th>\n                    <th  class=\"w140\">Role</th>\n                    <th *ngIf=\"userRole==1\" class=\"w140\">No. of Check-In</th>\n                    <th *ngIf=\"userRole!=1\" >Company Name</th>\n                    <th class=\"w110\" *ngIf=\"userRole!=1\">Type</th>\n                    <th  class=\"w180\" *ngIf=\"userRole!=1\">Check-In Time</th>\n                    <th  class=\"w180\" *ngIf=\"userRole!=1\">Check-Out Time</th>\n                    <!-- <th  class=\"w150\">Obejective Of Visit</th> -->\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-head bdrt\">\n                <table>\n                  <tr>\n                    <th class=\"w150\"><div class=\"th-search padding0\" >\n                      <mat-form-field class=\"wp100 toggle-date-picker\">\n                        <input matInput [matDatepicker]=\"picker\" (dateChange)=\"checkin_list()\" #date=\"ngModel\" [(ngModel)]=\"filter.date\"  readonly>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker  #picker></mat-datepicker>\n                      </mat-form-field>\n                    </div>\n                  </th>\n                  <th *ngIf=\"userRole==1\" class=\"w140\"><div class=\"th-search\"  [ngClass]=\"{ 'clear-feilds' : removename == true}\">\n                    <input type=\"text\" (keyup)=\"checkin_list()\" name=\"userName\" #userName=\"ngModel\" [(ngModel)]=\"filter.userName\"  placeholder=\"Search....\">\n                    <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\"removenamefilter()\"></a>\n                  </div>\n                </th>\n                <th *ngIf=\"userRole!=1\" class=\"w140\">&nbsp;</th>\n                <th *ngIf=\"userRole!=1\" class=\"w140\">&nbsp;</th>\n                  <th *ngIf=\"userRole==1\" class=\"w140\">\n                    <div class=\"th-search\" >\n                      <select class=\"pr0\" (change)=\"checkin_list()\" name=\"module\" #module=\"ngModel\" [(ngModel)]=\"filter.role\">\n                        <option [value]=\"0\">All</option>\n                        <option [value]=\"role.roleId\" *ngFor=\"let role of sales\">{{role.roleName}}</option>\n                      </select>\n                    </div>\n                  </th>\n                  <!-- <th class=\"w140\">&nbsp;</th> -->\n                  <th *ngIf=\"userRole!=1\">\n                    <div class=\"th-search\"  [ngClass]=\"{ 'clear-feilds' : removename == true}\">\n                      <input type=\"text\" (keyup)=\"checkin_list()\" name=\"companyname\" #companyname=\"ngModel\" [(ngModel)]=\"filter.companyname\"  placeholder=\"Search....\">\n                      <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\"removenamefilter()\"></a>\n                    </div>\n                    \n                  </th>\n                  <th class=\"w110\" *ngIf=\"userRole!=1\">\n                    <div class=\"th-search\" >\n                      <select class=\"pr0\" (change)=\"checkin_list()\" name=\"module\" #module=\"ngModel\" [(ngModel)]=\"filter.module\">\n                        <option value=\"0\">All</option>\n                        <option value=\"1\">Distributor</option>\n                        <option value=\"2\">Wholesaler</option>\n                        <option value=\"3\">Retailer</option>\n                        <option value=\"4\">Reconditioner</option>\n                        <option value=\"5\">Mechanic</option>\n                      </select>\n                    </div>\n                  </th>\n                  <th class=\"w180\" *ngIf=\"userRole!=1\">&nbsp;</th>\n                  <th class=\"w180\" *ngIf=\"userRole!=1\">&nbsp;</th>\n                  <th class=\"w140\" *ngIf=\"userRole==1\">&nbsp;</th>\n                </tr>\n              </table>\n            </div>\n          </div>\n          <div class=\"table-container\">\n            <div class=\"table-content\">\n              <table>\n                <tr *ngFor=\"let checkin of checkInList\">  \n                  <td *ngIf=\"userRole!=1\" class=\"w150\">{{checkin.checkInTime|date :'d, MMMM , y'}}</td>\n                  <td *ngIf=\"userRole==1\" class=\"w150\">{{checkin.activity[0].checkInTime|date :'d, MMMM , y'}}</td>\n                  <td  class=\"w140\">{{checkin.userName}}</td>\n                  <td  class=\"w140\">{{checkin.roleName}}</td>\n                  <td *ngIf=\"userRole==1\" class=\"w140\">{{checkin.count}}\n                    <div class=\"action-btns\">\n                      <a mat-button class=\"view\" mat-button routerLink=\"/checkin-detail/{{checkin.userId}}/{{checkin.activity[0].checkInTime|date:'y-MM-d'}}\" routerLinkActive=\"active\"  ><i class=\"material-icons\">remove_red_eye</i> View</a></div>\n                    </td>\n                    <td *ngIf=\"userRole!=1\"><a  class=\"link-btn\" mat-button routerLink=\"/checkin-detail/{{checkin.activityId}}\" routerLinkActive=\"active\" ><span *ngIf=\"checkin.referenceId!=0\">{{checkin.establishment}}</span><span *ngIf=\"checkin.referenceId!=0\">{{checkin.establishmentName}}</span></a></td>\n                    <td class=\"w110\" *ngIf=\"userRole!=1\">{{checkin.activityModuleName}}</td>\n                    <td  class=\"w180\" *ngIf=\"userRole!=1\">\n                      {{checkin.checkInTime|date :'d, MMMM , y, h:mm:ss a'}}\n                    </td>\n                    <td class=\"w180\" *ngIf=\"userRole!=1\">{{checkin.checkOutTime|date :'d, MMMM , y, h:mm:ss a'}}\n                      <div class=\"action-btns\">\n                        <a mat-button *ngIf=\"userRole!=1\" class=\"view\" mat-button routerLink=\"/checkin-detail/{{checkin.activityId}}\" routerLinkActive=\"active\"  ><i class=\"material-icons\"  >remove_red_eye</i> View</a>\n                      </div>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"div\" class=\"data-not-available\" >\n      <div class=\"outer\">\n        <div class=\"iinear\">\n          <div class=\"figure\" matRipple>\n            <div class=\"header\">\n              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n            </div>\n            \n            <div class=\"description\">\n              <div class=\"img\">\n                <i class=\"material-icons\">error_outline</i>\n              </div>\n              <div class=\"psc\">\n                <p>data not available</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div  class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" routerLink=\"/add-activity\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/checkin/checkin-list/checkin-list.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/checkin/checkin-list/checkin-list.component.ts ***!
  \****************************************************************/
/*! exports provided: CheckinComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckinComponent", function() { return CheckinComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_local_storage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);





var CheckinComponent = /** @class */ (function () {
    function CheckinComponent(db, user) {
        this.db = db;
        this.user = user;
        this.checkInList = [];
        this.filter = {};
        this.removename = false;
        this.rolelists = [];
        this.sales = [];
        this.div = false;
        this.requesData = {};
        this.userdata = this.user['user']['data'];
        this.userType = this.userdata['userType'];
        this.userId = this.userdata['userId'];
        this.userRole = this.userdata['role'];
        console.log(this.userdata);
        this.checkList = 1;
        if (this.userdata) {
            this.checkin_list();
        }
    }
    CheckinComponent.prototype.ngOnInit = function () {
    };
    CheckinComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var salespersons = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.sales = salespersons[0].roles;
            console.log(_this.sales);
            console.log(_this.checkInList.length);
            var _loop_1 = function (i) {
                var index = _this.sales.findIndex(function (x) { return x.roleId == _this.checkInList[i].userRole; });
                console.log(index);
                if (index == -1) {
                    _this.checkInList[i].roleName = "";
                }
                else {
                    _this.checkInList[i].roleName = _this.sales[index].roleName;
                }
            };
            for (var i = 0; i < _this.checkInList.length; i++) {
                _loop_1(i);
            }
        });
    };
    CheckinComponent.prototype.clearfilter = function () {
        this.filter = {};
        this.filter.date = undefined;
        this.createddate = undefined;
        this.checkin_list();
    };
    CheckinComponent.prototype.removenamefilter = function () {
        console.log("hii");
        this.filter.companyname = "";
        this.checkin_list();
    };
    CheckinComponent.prototype.checkin_list = function () {
        var _this = this;
        this.div = false;
        if (this.filter.date) {
            this.createddate = moment__WEBPACK_IMPORTED_MODULE_4__(this.filter.date).format('YYYY-MM-DD');
        }
        else {
            this.createddate = undefined;
        }
        console.log(this.filter.date, this.createddate);
        this.name = this.filter.companyname;
        this.role = this.filter.role;
        this.module = this.filter.module;
        if (this.name) {
            this.removename = true;
        }
        else {
            this.removename = false;
        }
        this.loader = true;
        if (this.userType == 1) {
            this.requesData = { 'checkInDate': this.createddate, 'userName': this.filter.userName, "userRole": this.role, "networkEstablishment": this.name, "activityModule": this.module, "currentPage": 1,
                "pageSize": 500 };
            this.db.fetchData(this.requesData, 'activity/grouplist').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.checkInList = response['data'];
                }
                if (response['status'] == 'Failed') {
                    _this.checkInList = [];
                    _this.div = true;
                }
            });
        }
        else {
            this.requesData = { 'createdOn': this.createddate, "userRole": this.role, "networkEstablishment": this.name, "activityModule": this.module, "currentPage": 1,
                "pageSize": 500 };
            if (this.checkList == 1) {
                this.requesData.userId = this.userId;
            }
            this.db.fetchData(this.requesData, 'activity/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.checkInList = response['data'];
                    if (_this.checkList == 2) {
                        var checkinArray = _this.checkInList.filter(function (row) { return row.userId != _this.userId; });
                        _this.checkInList = checkinArray;
                    }
                    _this.div = false;
                }
                if (response['status'] == 'Failed') {
                    _this.checkInList = [];
                    _this.div = true;
                }
            });
        }
    };
    CheckinComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-checkin-list',
            template: __webpack_require__(/*! ./checkin-list.component.html */ "./src/app/checkin/checkin-list/checkin-list.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_local_storage_service__WEBPACK_IMPORTED_MODULE_3__["sessionStorage"]])
    ], CheckinComponent);
    return CheckinComponent;
}());



/***/ }),

/***/ "./src/app/checkin/remark-modal/remark-modal.component.html":
/*!******************************************************************!*\
  !*** ./src/app/checkin/remark-modal/remark-modal.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n    <form name=\"form\" (ngSubmit)=\"f.form.valid && updateactivity()\"  #f=\"ngForm\" novalidate>\n        <div *ngIf=\"loader\"> \n            <div class=\"cs-loader\">\n              <img src=\"assets/img/loader.png\" class=\"rotate\"> \n            </div>\n          </div>\n  <mat-dialog-content class=\"mat-typography pl15 pr15\" style=\"overflow-x: hidden !important;\">\n      <p class=\"heading\">Update Remark</p>\n      <div class=\"from-fields\">\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input infix-bodr8\">\n                <textarea matInput placeholder=\"Remark\" name=\"remarkSecondary\" #remarkSecondary=\"ngModel\" [(ngModel)]=\"update_data.remarkSecondary\" [ngClass]=\"{ 'is-invalid': f.submitted && remarkSecondary.invalid }\" class=\"h170\"></textarea>\n              </mat-form-field>\n              <div class=\"alert alert-danger\" *ngIf=\"!remarkSecondary.valid && remarkSecondary.touched\">\n                Please Enter Remark..\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n      <button mat-raised-button color=\"accent\">Update</button>\n      <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">Close</button>\n  </mat-dialog-actions>\n</form>\n</div>"

/***/ }),

/***/ "./src/app/checkin/remark-modal/remark-modal.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/checkin/remark-modal/remark-modal.component.ts ***!
  \****************************************************************/
/*! exports provided: RemarkModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemarkModalComponent", function() { return RemarkModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");






var RemarkModalComponent = /** @class */ (function () {
    function RemarkModalComponent(toast, router, dialogRef, data, db) {
        this.toast = toast;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.checkinId = [];
        this.loader = false;
        this.update_data = {};
        console.log(data);
        this.checkinId = this.data;
        console.log(this.checkinId);
    }
    RemarkModalComponent.prototype.ngOnInit = function () {
    };
    RemarkModalComponent.prototype.updateactivity = function () {
        var _this = this;
        if (this.checkinId.type == 'activityReamrk') {
            this.update_data.activityId = this.checkinId.id;
            console.log(this.update_data);
            this.loader = true;
            this.db.fetchData(this.update_data, 'activityremark/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == "Success") {
                    console.log(_this.update_data.activityId);
                    _this.toast.openSucess('Updated successfully', '');
                    _this.router.navigate(['checkin-detail/' + _this.update_data.activityId]);
                    _this.dialogRef.close();
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
            });
        }
    };
    RemarkModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-remark-modal',
            template: __webpack_require__(/*! ./remark-modal.component.html */ "./src/app/checkin/remark-modal/remark-modal.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], RemarkModalComponent);
    return RemarkModalComponent;
}());



/***/ }),

/***/ "./src/app/cities-modal/cities-modal.component.html":
/*!**********************************************************!*\
  !*** ./src/app/cities-modal/cities-modal.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n  \n      <!-- <div *ngIf=\"loader\"> \n          <div class=\"cs-loader\">\n              <mat-spinner class=\"loader\"></mat-spinner> \n          </div>\n      </div> -->\n      \n      <div  mat-dialog-content>\n          <p class=\"heading\">A+ Cities</p>\n          <div class=\" from-fields mt15\">\n            <mat-chip-list>\n              <mat-chip>Mumbai</mat-chip>\n              <mat-chip>Hyderabad</mat-chip>\n              <mat-chip>Delhi</mat-chip>\n              <mat-chip>Chennai</mat-chip>\n              <mat-chip>Bangalore</mat-chip>\n              <mat-chip>Kolkata</mat-chip>\n              <mat-chip>Pune</mat-chip>\n            </mat-chip-list>\n          </div>\n      </div>\n      \n      <div mat-dialog-actions>\n          <button mat-raised-button  color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n          <!-- <button mat-raised-button color=\"accent\">Save</button> -->\n      </div>\n</div>"

/***/ }),

/***/ "./src/app/cities-modal/cities-modal.component.ts":
/*!********************************************************!*\
  !*** ./src/app/cities-modal/cities-modal.component.ts ***!
  \********************************************************/
/*! exports provided: CitiesModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CitiesModalComponent", function() { return CitiesModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var CitiesModalComponent = /** @class */ (function () {
    function CitiesModalComponent() {
    }
    CitiesModalComponent.prototype.ngOnInit = function () {
    };
    CitiesModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-cities-modal',
            template: __webpack_require__(/*! ./cities-modal.component.html */ "./src/app/cities-modal/cities-modal.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], CitiesModalComponent);
    return CitiesModalComponent;
}());



/***/ }),

/***/ "./src/app/constant.service.ts":
/*!*************************************!*\
  !*** ./src/app/constant.service.ts ***!
  \*************************************/
/*! exports provided: ConstantService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConstantService", function() { return ConstantService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xlsx */ "./node_modules/xlsx/xlsx.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(xlsx__WEBPACK_IMPORTED_MODULE_4__);



// import { Injectable } from '@angular/core';


var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
var EXCEL_EXTENSION = '.xlsx';
var ConstantService = /** @class */ (function () {
    function ConstantService(http) {
        this.http = http;
        // dburl:string = 'http://13.234.72.162/api/';
        this.dburl = 'http://13.234.72.162:8084/api/';
        this.header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        this.can_active = '';
        this.navigate_type = '';
        this.datauser = {};
        this.user = [];
        this.token_data = '';
        this.data = [];
        this.counterArray = {};
        this.distributorCount = 0;
        this.leadCount = 0;
    }
    ConstantService.prototype.exportAsExcelFile = function (json, excelFileName) {
        var worksheet = xlsx__WEBPACK_IMPORTED_MODULE_4__["utils"].json_to_sheet(json);
        console.log('worksheet', worksheet);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        var excelBuffer = xlsx__WEBPACK_IMPORTED_MODULE_4__["write"](workbook, { bookType: 'xlsx', type: 'array' });
        // const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, excelFileName);
    };
    ConstantService.prototype.saveAsExcelFile = function (buffer, fileName) {
        var data = new Blob([buffer], {
            type: EXCEL_TYPE
        });
        file_saver__WEBPACK_IMPORTED_MODULE_3__["saveAs"](data, fileName + EXCEL_EXTENSION);
    };
    ConstantService.prototype.login = function (request_data, fn) {
        console.log(request_data);
        this.header.append('Content-Type', 'application/json');
        console.log(request_data);
        return this.http.post(this.dburl + fn, request_data, { headers: this.header });
    };
    ConstantService.prototype.fetchData = function (request_data, fn) {
        this.count_list();
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        this.token_data = this.user.data.token;
        console.log(this.token_data);
        var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        console.log(request_data);
        header = header.append('Authorization', 'Bearer ' + this.token_data);
        console.log(this.dburl);
        header = header.append('Content-Type', "application/json");
        return this.http.post(this.dburl + fn, JSON.stringify(request_data), { headers: header });
    };
    ConstantService.prototype.fileData = function (request_data, fn) {
        this.count_list();
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        this.token_data = this.user.data.token;
        console.log(this.token_data);
        var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        header = header.append('Content-Type', 'application/json');
        header = header.append('Authorization', 'Bearer ' + this.token_data);
        console.log(request_data);
        return this.http.get(this.dburl + fn + request_data, { headers: header });
    };
    ConstantService.prototype.putData = function (request_data, fn) {
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        this.token_data = this.user.data.token;
        console.log(this.token_data);
        var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        header = header.append('Content-Type', 'application/json');
        header = header.append('Authorization', 'Bearer ' + this.token_data);
        console.log(request_data);
        return this.http.put(this.dburl + fn, JSON.stringify(request_data), { headers: header });
    };
    ConstantService.prototype.setData = function (value) {
        this.data = value;
    };
    ConstantService.prototype.getData = function () {
        return this.data;
    };
    ConstantService.prototype.DownloadFileData = function (request_data, fn) {
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        this.token_data = this.user.data.token;
        console.log(this.token_data);
        var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        console.log(request_data);
        header = header.append('Authorization', 'Bearer ' + this.token_data);
        header = header.append('Content-Type', "application/json");
        return this.http.post(this.dburl + fn, JSON.stringify(request_data), { headers: header });
    };
    ConstantService.prototype.excelFileData = function (request_data, fn) {
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        this.token_data = this.user.data.token;
        console.log(this.token_data);
        var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        console.log(request_data);
        header = header.append('Authorization', 'Bearer ' + this.token_data);
        header = header.append('Content-Type', 'application/json');
        return this.http.post(this.dburl + fn, JSON.stringify(request_data), { headers: header, responseType: 'blob' });
    };
    ConstantService.prototype.downloadProductData = function (request_data, fn) {
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        this.token_data = this.user.data.token;
        console.log(this.token_data);
        var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        console.log(request_data);
        header = header.append('Authorization', 'Bearer ' + this.token_data);
        header = header.append('Content-Type', 'application/json');
        return this.http.get(this.dburl + fn, { headers: header, responseType: 'blob' });
    };
    ConstantService.prototype.count_list = function () {
        var _this = this;
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        this.token_data = this.user.data.token;
        console.log(this.token_data);
        var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        header = header.append('Content-Type', 'application/json');
        header = header.append('Authorization', 'Bearer ' + this.token_data);
        this.http.get(this.dburl + "dashboard/count" + '', { headers: header }).subscribe(function (r) {
            console.log(r);
            if (r['status'] == 'Success') {
                _this.counterArray = r['data'];
                console.log(_this.distributorCount);
                if (_this.counterArray.networkCount.length != 0) {
                    _this.distributorCount = _this.counterArray.networkCount[0].total;
                }
                if (_this.counterArray.leadCount.length != 0) {
                    _this.leadCount = _this.counterArray.leadCount[0].statusCount;
                }
            }
        });
        // return this.counterArray;
    };
    ConstantService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root',
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
    ], ConstantService);
    return ConstantService;
}());



/***/ }),

/***/ "./src/app/customer-concern/add-concern/add-concern.component.html":
/*!*************************************************************************!*\
  !*** ./src/app/customer-concern/add-concern/add-concern.component.html ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n    <div *ngIf=\"loader\"> \n        <div class=\"cs-loader\">\n          <img src=\"assets/img/loader.png\" class=\"rotate\"> \n        </div>\n     </div>\n    <div class=\"middle-container\">\n        <div class=\"page-heading\">\n            <img src=\"assets/img/concern.svg\" class=\"h-icon\">\n            <div class=\"heading-text\">\n                <h2>Customer Concern</h2>\n                <p>Add New Concern</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"container-outer\">\n        <form name=\"form\" (ngSubmit)=\"f.form.valid\"  #f=\"ngForm\" novalidate >\n            <div class=\"container\" >\n                <div class=\"row\">\n                    <div class=\"col s12\">\n                        <div class=\"sprate-box pt0\">\n                            <div class=\"cs-heading\">\n                                <h2>CONCERN TYPE</h2>\n                                <span class=\"required\">Indicates Required Fields ( <sup>*</sup> )</span>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col s6 [pr0\" *ngIf=\"user.data.userType=='2'\">\n                                    <div class=\"from-fields\">\n                                        <div class=\"control-field\">\n                                            <mat-form-field class=\"cs-input infix-bodr8\">\n                                                <mat-select placeholder=\"Select Distributor\" name=\"distributor\" [(ngModel)]=\"concern_form.distributor\"  #distributor=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && distributor.invalid }\" required>\n                                                    <mat-option *ngFor=\"let distributor of distributorList;let i=index\" (click)=\"get_network()\" [value]=\"distributor.networkId\">\n                                                        {{distributor.establishment}}\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                            <mat-error *ngIf=\"f.submitted && distributor.invalid\" class=\"invalid-feedback\">\n                                                <mat-error *ngIf=\"distributor.errors.required\">distributor is required</mat-error>\n                                            </mat-error>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col s6 pl0\">\n                                    <div class=\"from-fields\">\n                                        <div class=\"control-field\">\n                                            <mat-form-field class=\"cs-input infix-bodr8\">\n                                                <mat-select placeholder=\"Claim Type\" name=\"claim_type\" [(ngModel)]=\"concern_form.claim_type\"  #claim_type=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && claim_type.invalid }\" required>\n                                                    <mat-option (click)=\"check()\" value=\"1\">\n                                                        Product\n                                                    </mat-option>\n                                                    <mat-option value=\"2\">\n                                                        Other\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                            <mat-error *ngIf=\"f.submitted && claim_type.invalid\" class=\"invalid-feedback\">\n                                                <mat-error *ngIf=\"claim_type.errors.required\">Role is required</mat-error>\n                                            </mat-error>\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <div *ngIf=\"concern_form.claim_type=='1'\" class=\"from-fields col s6 [pr0\">\n                                    <div class=\"control-field\">\n                                        <mat-form-field class=\"cs-input infix-bodr8\">\n                                            <mat-select placeholder=\"Product Type\" (onChange)=\"productCheck()\" name=\"product_type\" [(ngModel)]=\"concern_form.product_type\"  #product_type=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && product_type.invalid }\" required>\n                                                <mat-option (click)=\"productCheck()\"  value=\"1\">\n                                                    Pre-Fitment\n                                                </mat-option>\n                                                <mat-option  (click)=\"productCheck()\" value=\"2\">\n                                                    Post-Fitment\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                        <mat-error *ngIf=\"f.submitted && product_type.invalid\" class=\"invalid-feedback\">\n                                            <mat-error *ngIf=\"product_type.errors.required\">Role is required</mat-error>\n                                        </mat-error>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"sprate-box pt0 mt15\" *ngIf=\"concern_form.claim_type == '2'\">\n                            <!-- Other Claim Section Start -->\n                            <div >\n                                <div class=\"cs-heading\">\n                                    <h2>BASIC INFORMATION</h2>\n                                </div>\n                                <form  (ngSubmit)=\"f.form.valid &&  onSubmit(3)\" #f=\"ngForm\" novalidate>\n                                    <div class=\"from-fields\">\n                                        <div class=\"row\">\n                                            <div class=\"col s8 pl0\">\n                                                <div class=\"control-field\">\n                                                    <mat-form-field class=\"cs-input wp100 h-input infix-bodr8\">\n                                                        <textarea class=\"h150\" matInput placeholder=\"Description\"  name=\"description\" [(ngModel)]=\"other_form.description\"  #description=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && description.invalid }\" required></textarea>\n                                                    </mat-form-field>\n                                                    <mat-error *ngIf=\"f.submitted && description.invalid\" class=\"invalid-feedback\">\n                                                        <mat-error *ngIf=\"description.errors.required\">Description is required</mat-error>\n                                                    </mat-error>\n                                                </div>\n                                            </div>\n                                            <div class=\"col s4 pr0\">\n                                                <div class=\"territory-info mt15\">\n                                                    <div class=\"head\" >\n                                                        <h2>Assign SalesRoles</h2>\n                                                    </div>\n                                                    <div class=\"cs-checkbox\">\n                                                        <div class=\"checkbox-outer auto-height-scroll\">\n                                                            <section class=\"checkbox-inner\" >\n                                                                <ng-container  *ngFor=\"let role of rolelistsales1;let index=index\"   aria-required=\"true\">\n                                                                    <mat-checkbox class=\"check-list\" (change)=\"select_role(role.roleId,index,role.isAssign)\" name=\"{{role.roleId}}\" [(ngModel)]=\"role.isAssign\"  value=\"{{role.roleId}}\" >{{role.roleName}}</mat-checkbox>\n                                                                </ng-container>\n                                                            </section>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <mat-error *ngIf=\"f.submitted && !isAssignCheck\">Assign to required</mat-error>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col s12\">\n                                            <div class=\"cs-btn text-right mt15\">\n                                                <div class=\"in-btn\">\n                                                    <button *ngIf=\"concern_form.claim_type==2\" mat-raised-button color=\"accent\" [disabled]=\"concern_form.isProceed==false || concern_form.info==false\">Submit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <!-- Other Claim Section End -->\n                        </div>\n                        \n                        \n                        <!-- Product Type Claim Section Start -->\n                        <div class=\"sprate-box mt15 pt0\"  style=\"overflow: inherit;\"  *ngIf=\"concern_form.product_type\">\n                            <!-- T&C section Start -->\n                            <form #d=\"ngForm\" (ngSubmit)=\"proceed()\">\n                                <div *ngIf=\"(concern_form.product_type == '1'||concern_form.product_type == '2') && concern_form.claim_type == '1' && !concern_form.isProceed\">\n                                    <div class=\"cs-heading\">\n                                        <h2>T&C<span *ngIf=\"concern_form.product_type == '1'\"> Pre-Fitment </span> <span *ngIf=\"concern_form.product_type == '2'\"> Post-Fitment </span> </h2>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col s6 pr10\">\n                                            <div class=\"sprate-box flat-sprate\">\n                                                <div *ngIf=\"concern_form.product_type == '1'\">\n                                                    <div class=\"term-heading\"> Pre-Fitment:</div>\n                                                    <ul class=\"terms-condition\">\n                                                        <li>Kenshin original parts.</li>\n                                                        <li>Product packing should be intact.</li>\n                                                        <li>Product should not have been used after being fit on the vehicle.</li>\n                                                        <li>Parts</li>\n                                                    </ul>\n                                                </div>\n                                                <div  *ngIf=\"concern_form.product_type == '2'\">\n                                                    \n                                                    <div class=\"term-heading\">Post-Fitment:</div>\n                                                    <ul class=\"terms-condition\">\n                                                        <li>Kenshin original part.</li>\n                                                        <li>Product should be fitted.</li>\n                                                        <li>Product should have been used after being fitted on the vehicle.</li>\n                                                        <li>Product should use only for its intended function.</li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row mt20\">\n                                        <div class=\"col s6\">\n                                            <mat-checkbox class=\"read-done\" name=\"isCheck\" [(ngModel)]=\"concern_form.isCheck\" >I have read T&C</mat-checkbox>\n                                        </div>\n                                        \n                                        <div class=\"col s6\">\n                                            <div class=\"cs-btn fixedd text-right\">\n                                                <div class=\"in-btn\">\n                                                    <button mat-raised-button color=\"accent\"  [disabled]=\"!concern_form.isCheck\">Proceed</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    \n                                </div>\n                            </form>\n                            <!-- T&C section End -->\n                            \n                            <!-- Product Claim Section Start-->\n                            <form #p=\"ngForm\" (ngSubmit)=\"p.valid\">\n                                <div *ngIf=\"concern_form.product_type && concern_form.claim_type == '1' && concern_form.isProceed==true;\">\n                                    <div class=\"cs-heading\">\n                                        <h2 *ngIf=\"concern_form.product_type==1\">Pre-Fitment Claim</h2>\n                                        <h2 *ngIf=\"concern_form.product_type==2\">Post-Fitment Claim</h2>\n                                    </div>\n                                    <div class=\"row mt15\">\n                                        <div  class=\"col s4 pl0\">\n                                            <div class=\"multi-all-select\">\n                                                <label>Segment</label>\n                                                <ng-multiselect-dropdown\n                                                [placeholder]=\"'Select Segment'\"\n                                                [data]=\"segmentList\"\n                                                [(ngModel)]=\"data.segment\"\n                                                name=\"segment\"\n                                                #segment=\"ngModel\"\n                                                [settings]=\"dropdownSettings1\"\n                                                (onSelect)=\"productList(data.segment,data.category)\"\n                                                >\n                                                \n                                            </ng-multiselect-dropdown>\n                                        </div>\n                                    </div>                           \n                                    <div class=\"col s4\">\n                                        <div class=\"multi-all-select\">\n                                            <label>Category</label>\n                                            <ng-multiselect-dropdown\n                                            [placeholder]=\"'Select Category'\"\n                                            [data]=\"categorylist\"\n                                            [(ngModel)]=\"data.category\"\n                                            name=\"category\"\n                                            #category=\"ngModel\"\n                                            [settings]=\"dropdownSettings2\"\n                                            (onSelect)=\"productList(data.segment,data.category)\"\n                                            >\n                                        </ng-multiselect-dropdown>\n                                    </div>\n                                </div>                                \n                                <div   class=\"col s4 pr0\">\n                                    <div class=\"multi-all-select\">\n                                        <label>Product Name</label>\n                                        <ng-multiselect-dropdown\n                                        [placeholder]=\"'Select Product'\"\n                                        (onDeSelect)=\"onItemDeSelect($event,data.segment,data.category,data.product)\"\n                                        [data]=\"product_list\"\n                                        [(ngModel)]=\"data.product\"\n                                        name=\"product\"\n                                        #product=\"ngModel\"\n                                        [settings]=\"dropdownSettings3\"\n                                        (onSelect)=\"getCartProductList($event,data.segment,data.category,data.product)\">\n                                    </ng-multiselect-dropdown>\n                                </div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"productlist && productlist.length > 0\" class=\"col s12 padding0\">\n                            <div class=\"heading-bg left-right-15 mt15\">\n                                <h2>PRODUCT INFORMATION</h2>\n                            </div>\n                            <div class=\"cs-table left-right-15\">\n                                <div class=\"table-head\"   [ngClass]=\"{ 'pr28' : productlist.length>6 }\">\n                                    <table>\n                                        <tr>\n                                            <th class=\"w40\">&nbsp;</th>\n                                            <th>Part Number</th>\n                                            <th class=\"w130\">Product Name</th>\n                                            <th class=\"w130\">Application No</th>\n                                            <th class=\"w100\">Image</th>\n                                            <th class=\"w60 text-center\">Qty <span>*</span></th>\n                                            <th class=\"w110\">MFG Date. <span *ngIf='concern_form.product_type==1'>*</span></th>\n                                            <th class=\"w120\">Invoice No.<span *ngIf='concern_form.product_type==1'>*</span></th>\n                                            <th class=\"w70 text-right\">Rate</th>\n                                            <th class=\"w80 text-right\">Amount</th>\n                                            <th class=\"w80 text-center\">Action</th>\n                                            \n                                            \n                                        </tr>\n                                    </table>\n                                </div>\n                                \n                                \n                                <div class=\"table-head bdrt\" [ngClass]=\"{ 'pr28' : productlist.length>6 }\" >\n                                    <table>\n                                        <tr>\n                                            <th class=\"w40\">&nbsp;</th>\n                                            <th>\n                                                <div class=\"th-search-acmt\">\n                                                    <mat-form-field>\n                                                        <input type=\"text\"  name=\"search\" [(ngModel)]=\"productName.search\" (input)=\"productSearchByNumber()\" matInput [matAutocomplete]=\"auto1\">\n                                                        <mat-autocomplete #auto1=\"matAutocomplete\" >\n                                                        </mat-autocomplete>\n                                                    </mat-form-field> \n                                                </div>\n                                            </th>\n                                            <th class=\"w130\">&nbsp; </th>\n                                            <th class=\"w130\">&nbsp; </th>\n                                            <th class=\"w100\">&nbsp;</th>\n                                            <th class=\"w60\">&nbsp;</th>\n                                            <th class=\"w110\">&nbsp;</th>\n                                            <th class=\"w120\">&nbsp;</th>\n                                            <th class=\"w70\">&nbsp;</th>\n                                            <th class=\"w80\">&nbsp;</th>\n                                            <th class=\"w80\">&nbsp;</th>\n                                        </tr>\n                                    </table>\n                                </div>\n                                \n                                <div class=\"table-container height-scroll\">\n                                    <div class=\"table-content none-shadow\">\n                                        <table>\n                                            <tr *ngFor=\"let product of productlist;let index=index\">\n                                                <td class=\"w40\"><span *ngIf='product.qty'><mat-checkbox name=\"{{check+index}}\" [(ngModel)]=\"product.datacheck\"  (change)=\"select(product,index)\" >&nbsp; </mat-checkbox></span></td>\n                                                <td>{{product.partNumber}}</td>\n                                                <td class=\"w130\">{{product.productName}}</td>\n                                                <td class=\"w130\">EF5678</td>\n                                                <td class=\"w100\">\n                                                    <a class=\"link-btn\" *ngIf=\"!product.isImage\">\n                                                        <label class=\"cs-file\">\n                                                            Add Image\n                                                            <input type=\"file\" (change)=\"insertImage($event,product.productName,index)\" style=\"display: none;\">\n                                                        </label>\n                                                    </a>\n                                                    <a *ngIf=\"product.isImage\" class=\"link-btn\" (click)=\"openImageDialog(index)\"> View Image </a>\n                                                </td>\n                                                <td class=\"w60 text-center\" >\n                                                    <div class=\"td-input\">\n                                                        <input type=\"number\" (input)=\"calculateAmount(product.qty,index)\"  (keyup.enter)=\"addCart(product,index)\" name=\"qty\" #qty=\"ngModel\" [(ngModel)]=\"product.qty\" [value]=\"product.qty\" required min=\"1\" >\n                                                    </div>\n                                                    <p *ngIf='isCart==true && product.datacheck==true && product.qty==\"\"'>required</p>\n                                                </td>\n                                                <!--Pre-Fitment Field-->\n                                                <td class=\"w110\" *ngIf='concern_form.product_type==1'>\n                                                    <div class=\"td-input\" style=\"display: flex; align-items: center;\">\n                                                        <input matInput [matDatepicker]=\"picker\"   placeholder=\"Date\" name=\"{{date+index}}\" [(ngModel)]=\"product.date\"  #date=\"ngModel\"   [max]=\"maxDateValue\" required>\n                                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                                        <mat-datepicker #picker></mat-datepicker>\n                                                    </div>\n                                                    <p *ngIf='isCart&&!product.date&&product.datacheck'>required</p>\n                                                </td>\n                                                <td class=\"w120\" *ngIf='concern_form.product_type==1'> \n                                                    <div class=\"td-input\">\n                                                        <input type=\"text\"    (keyup.enter)=\"addCart(product,index)\" name=\"{{invoice+index}}\" #invoice=\"ngModel\" [(ngModel)]=\"product.invoice\" required>\n                                                    </div>\n                                                    <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p>\n                                                </td>\n                                                \n                                                <td class=\"w140\" *ngIf='concern_form.product_type==2'>\n                                                    <div class=\"td-input\" style=\"display: flex; align-items: center;\">\n                                                        <input matInput [matDatepicker]=\"picker\"   placeholder=\"Choose a date\" name=\"{{date+index}}\" [(ngModel)]=\"product.date\"  #date=\"ngModel\"   [max]=\"maxDateValue\" required>\n                                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                                        <mat-datepicker #picker></mat-datepicker>\n                                                    </div>\n                                                </td>\n                                                <td class=\"w120\" *ngIf='concern_form.product_type==2'> \n                                                    <div class=\"td-input\">\n                                                        <input type=\"text\"    (keyup.enter)=\"addCart(product,index)\" name=\"{{invoice+index}}\" #invoice=\"ngModel\" [(ngModel)]=\"product.invoice\" required>\n                                                    </div>\n                                                    \n                                                </td>\n                                                \n                                                <!--Post-Fitment Field-->\n                                                <td class=\"w70 text-right\">&#8377; {{product.priceUnit}}</td>\n                                                <td class=\"w80 text-right\">&#8377; {{product.amount}}</td>\n                                                <td class=\"w80\">\n                                                    <div class=\"action-btns default-action\">\n                                                        <a *ngIf=\"product.qty!=''\" mat-button matTooltip=\"Save\" class=\"edit\" (click)=\"addCart(product,index)\"><i class=\"material-icons\">save</i></a>\n                                                    </div>\n                                                </td>\n                                                \n                                                \n                                                \n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div class=\"data-not-available\" *ngIf=\"productlist.length==0\">\n                                        <div class=\"outer\">\n                                            <div class=\"iinear\">\n                                                <div class=\"figure\" matRipple>\n                                                    <div class=\"header\">\n                                                        <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                                    </div>\n                                                    \n                                                    <div class=\"description\">\n                                                        <div class=\"cs-heading\">\n                                                            <h2>No Item</h2>\n                                                        </div>\n                                                        <div class=\"img\">\n                                                            <i class=\"material-icons\">error_outline</i>\n                                                        </div>\n                                                        <div class=\"psc\">\n                                                            <p>data not available</p>\n                                                            \n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngIf=\"add\" class=\"cs-btn mt20 text-right\">\n                                <div class=\"in-btn\">\n                                    <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"addProduct('checkk')\" >Add to Cart</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"tmp_array && tmp_array.length > 0\" class=\"col s12 padding0\">\n                            <div class=\"heading-bg left-right-15 mt15\">\n                                <h2>Product In Cart</h2>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"cs-table left-right-15\">\n                                    <div class=\"table-head\">\n                                        <table>\n                                            <tr>\n                                                <th>Category</th>\n                                                <th class=\"w150 text-center\">Total Item</th>\n                                                <th class=\"w150 text-center\">Total Quantity</th>\n                                                <th class=\"w150 text-right\">Amount</th>\n                                                <!-- <th class=\"w80\">Action</th> -->\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div class=\"table-container\">\n                                        <div class=\"table-content none-shadow\">\n                                            <table>\n                                                <tr *ngFor=\"let concern of tmp_array;let i=index\">\n                                                    <td><a mat-button class=\"link-btn\" (click)=\"productDetail(concern.category)\" >{{concern.category}}</a></td>\n                                                    <td class=\"w150 text-center\">{{concern.totalItem}}</td>\n                                                    <td class=\"w150 text-center\">{{concern.qty}}</td>\n                                                    <td class=\"w150 text-right\"> &#x20B9; {{concern.amount}}</td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                <!-- ProductClaim Section End -->\n                \n            </div>\n            <div class=\"col s12\">\n                <div class=\"cs-btn mt32 text-right\">\n                    <div class=\"in-btn\">\n                        <button   *ngIf=\"tmp_array.length!=0\" mat-raised-button color=\"accent\"  type=\"button\" (click)=\"onSubmit(1)\" >Save as draft</button>\n                        <button  *ngIf=\"tmp_array.length!=0 &&user.data.userType==3\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"onSubmit(2)\">Submit</button>\n                        <button  *ngIf=\"tmp_array.length!=0 &&user.data.userType==2\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"onSubmit(3)\">Forward To Distributor</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</form>\n</div>\n</div>"

/***/ }),

/***/ "./src/app/customer-concern/add-concern/add-concern.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/customer-concern/add-concern/add-concern.component.ts ***!
  \***********************************************************************/
/*! exports provided: AddConcernComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddConcernComponent", function() { return AddConcernComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _update_concern_update_concern_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../update-concern/update-concern.component */ "./src/app/customer-concern/update-concern/update-concern.component.ts");
/* harmony import */ var _update_status_update_status_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../update-status/update-status.component */ "./src/app/customer-concern/update-status/update-status.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../image-modal/image-modal.component */ "./src/app/customer-concern/image-modal/image-modal.component.ts");










// import { userInfo } from 'os';
var AddConcernComponent = /** @class */ (function () {
    function AddConcernComponent(db, router, route, toast, dialog, alrt) {
        this.db = db;
        this.router = router;
        this.route = route;
        this.toast = toast;
        this.dialog = dialog;
        this.alrt = alrt;
        this.user = {};
        this.concern_form = {};
        this.selectedFile = [];
        this.concernReviews = [];
        this.other_form = {};
        this.prefitmentlist = [];
        this.pre_fitment = {};
        this.post_fitment = {};
        this.action = "1";
        this.tmp_list = [];
        this.concernData = [];
        this.tmp_list1 = [];
        this.segmentList = [];
        this.finel_Array = [];
        this.categorylist = [];
        this.tmp_segmentList = [];
        this.product_list = [];
        this.partnumberlist = [];
        this.partnumberlist1 = [];
        this.rolelists = [];
        this.tmp_array = [];
        this.role = [];
        this.productlist = [];
        this.isAssignCheck = true;
        this.producttmpList = [];
        this.cartProductList = [];
        this.concernDetail = [];
        this.data = {};
        this.distributorasmList = [];
        this.distributorList = [];
        this.rolelistsales1 = [];
        this.tmp_categoryList = [];
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        this.dropdownSettings3 = {};
        this.salesNetworkTerritories = [];
        this.roles = [];
        this.territoryIds = [];
        this.catsearch = [];
        this.tmp_cat = [];
        this.tmpproduct_list = [];
        this.subsegsearch = [];
        this.tmp_subseg = [];
        this.tmpProductList = [];
        this.add = false;
        this.cartArray = [];
        this.isCart = false;
        this.partnoArray = [];
        this.temp = false;
        this.urls = [];
        this.documentData = [];
        this.tmpCartArray = [];
        this.isedit = false;
        this.tmp = false;
        this.productName = [];
        this.tmp_pro = [];
        this.cartList = [];
        this.active = {};
        this.segsearch = [];
        this.tmp_seg = [];
        this.productConcernsModel = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        if (this.user.data.userType == 2) {
            this.distributorList = this.user['data']['salesUser']['userNetworks'];
            console.log(this.distributorList);
        }
        else {
            this.userId = this.user['data']['distributerNetwork']['networkId'];
            console.log(this.user['data']['distributerNetwork']['networkId']);
        }
    }
    AddConcernComponent.prototype.ngOnInit = function () {
        this.dropdownSettings1 = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'segmentCode',
            textField: 'segment',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings2 = {
            closeDropDownOnSelection: true,
            singleSelection: true,
            idField: 'value',
            textField: 'text',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings3 = {
            singleSelection: false,
            idField: 'productName',
            textField: 'productName',
            enableCheckAll: false,
            // selectAllText: 'Select All',
            // unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.maxDateValue = new Date();
        this.isSave = true;
        this.segment_list();
        this.category_list();
        this.concern_form.info = false;
    };
    AddConcernComponent.prototype.get_network = function () {
        var _this = this;
        console.log(this.concern_form.distributor);
        this.userId = this.concern_form.distributor;
        console.log(this.userId);
        if (this.user.data.userType == '2') {
            this.db.fetchData({ 'networkId': this.concern_form.distributor }, "network/list").subscribe(function (response) {
                console.log(response['data'][0]['networkTerritories']);
                _this.salesNetworkTerritories = response['data'][0]['networkTerritories'];
                console.log(_this.salesNetworkTerritories);
                _this.check();
            });
        }
    };
    AddConcernComponent.prototype.productCheck = function () {
        this.concern_form.isProceed = false;
        this.concern_form.isCheck = false;
        this.concern_form.info = false;
        this.productlist = [];
        this.tmp_array = [];
        this.concernDetail = [];
        this.data.product = [];
        this.data.segment = [];
        this.data.category = [];
        console.log(this.concern_form);
    };
    AddConcernComponent.prototype.proceed = function () {
        this.concern_form.isProceed = true;
        console.log(this.concern_form);
    };
    AddConcernComponent.prototype.check = function () {
        var _this = this;
        console.log("success");
        console.log(this.concern_form);
        if (this.concern_form.claim_type == '2') {
            this.loader = true;
            this.concern_form.info = true;
            console.log(this.user);
            if (this.user.data.userType == 2) {
                for (var i = 0; i < this.salesNetworkTerritories.length; i++) {
                    this.territoryIds.push(this.salesNetworkTerritories[i].territoryId);
                }
            }
            else {
                for (var i = 0; i < this.user.data.distributerNetwork.networkTerritories.length; i++) {
                    this.territoryIds.push(this.user.data.distributerNetwork.networkTerritories[i].territoryId);
                }
            }
            var s = this.territoryIds.join("&territoryIds=");
            var data = "?territoryIds=" + s;
            console.log(this.territoryIds);
            console.log(data);
            this.db.fetchData({}, 'territory/salesusers' + data).subscribe(function (response) {
                console.log(response);
                _this.roles = response['data'];
                _this.loader = false;
                var index = _this.roles.findIndex(function (x) { return x.role == 6; });
                if (index != -1) {
                    _this.rolelistsales1.push({ "roleId": 6, "roleName": "National Manager" });
                }
                var index1 = _this.roles.findIndex(function (x) { return x.role == 7; });
                if (index1 != -1) {
                    _this.rolelistsales1.push({ "roleId": 7, "roleName": "Regional Manager" });
                }
                var index2 = _this.roles.findIndex(function (x) { return x.role == 8; });
                if (index2 != -1) {
                    _this.rolelistsales1.push({ "roleId": 8, "roleName": "Area Manager" });
                }
                var index3 = _this.roles.findIndex(function (x) { return x.role == 10; });
                if (index3 != -1) {
                    _this.rolelistsales1.push({ "roleId": 10, "roleName": "Territory Incharge" });
                }
                console.log(_this.rolelistsales1);
                for (var i = 0; i < _this.rolelistsales1.length; i++) {
                    if (_this.rolelistsales1[i].roleId == _this.user.data.role) {
                        _this.rolelistsales1[i].isAssign = true;
                        _this.select_role(_this.rolelistsales1[i].roleId, i, _this.rolelistsales1[i].isAssign);
                    }
                    else {
                        _this.rolelistsales1[i].isAssign = false;
                    }
                }
            });
        }
        else
            this.concern_form.info = false;
    };
    AddConcernComponent.prototype.segment_list = function () {
        console.log('hello');
        if (this.user.data.userType == 3) {
            this.segmentList = this.user['data']['distributerNetwork']['networkSegments'];
            this.tmp_segmentList = this.segmentList;
            console.log(this.segmentList);
        }
        else {
            this.segmentList = this.user['data']['salesUser']['staffSegments'];
            this.tmp_segmentList = this.segmentList;
            console.log(this.segmentList);
        }
    };
    AddConcernComponent.prototype.category_list = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'category/list/').subscribe(function (response) {
            _this.categorylist = response['data'];
            _this.tmp_categoryList = _this.categorylist;
            console.log(response);
            _this.loader = false;
        });
    };
    AddConcernComponent.prototype.categorySearch = function () {
        this.categorylist = [];
        for (var i = 0; i < this.tmp_categoryList.length; i++) {
            this.catsearch.search = this.catsearch.search.toLowerCase();
            this.tmp_cat = this.tmp_categoryList[i]['text'].toLowerCase();
            if (this.tmp_cat.includes(this.catsearch.search)) {
                this.categorylist.push(this.tmp_categoryList[i]);
            }
        }
    };
    AddConcernComponent.prototype.productList = function (segment, category) {
        var _this = this;
        this.data.product = [];
        this.product_list = [];
        console.log(segment, category);
        var selectedSegment = "";
        var selectedCategory = "";
        if (segment != null || category != null) {
            if (segment != null && category != null) {
                selectedCategory = category[0];
                selectedSegment = segment[0];
            }
            else if (segment != null) {
                selectedSegment = segment[0];
            }
            else if (category != null) {
                selectedCategory = category[0];
            }
        }
        this.productlist = [];
        this.loader = true;
        console.log(this.data);
        this.db.fetchData({ "segmentCode": selectedSegment, "categoryCode": selectedCategory, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
            console.log(result);
            setTimeout(function () {
                _this.loader = false;
            }, 700);
            if (result) {
                _this.producttmpList = result['data'];
                _this.product_list = [];
                console.log(_this.producttmpList);
                var _loop_1 = function (i) {
                    var index = _this.product_list.findIndex(function (x) { return x.productName == _this.producttmpList[i].productName; });
                    console.log(index);
                    if (index == -1) {
                        _this.product_list.push(_this.producttmpList[i]);
                    }
                };
                for (var i = 0; i < _this.producttmpList.length; i++) {
                    _loop_1(i);
                }
                console.log(_this.product_list);
                _this.tmpproduct_list = _this.product_list;
            }
        });
    };
    AddConcernComponent.prototype.subSegmentSearch = function () {
        this.product_list = [];
        for (var i = 0; i < this.tmpproduct_list.length; i++) {
            this.subsegsearch.search = this.subsegsearch.search.toLowerCase();
            this.tmp_subseg = this.tmpproduct_list[i]['productName'].toLowerCase();
            if (this.tmp_subseg.includes(this.subsegsearch.search)) {
                this.product_list.push(this.tmpproduct_list[i]);
            }
        }
    };
    AddConcernComponent.prototype.onItemDeSelect = function (event, segment, category, productName) {
        console.log(event, segment, category, productName);
        console.log(event, productName);
        for (var i = 0; i < this.tmpProductList.length; i++) {
            if (this.tmpProductList[i].productName == event) {
                this.tmpProductList.splice(i, 1);
            }
        }
        console.log(this.tmpProductList);
    };
    AddConcernComponent.prototype.getCartProductList = function (event, segment, category, productname) {
        var _this = this;
        console.log(event, segment, category, productname);
        var selectedCategory = "";
        var selectedSegment = "";
        var selectedproduct = "";
        if (segment != null || category != null || productname != null) {
            if (segment != null && category != null && productname != null) {
                console.log("hii");
                selectedCategory = category[0];
                selectedSegment = segment[0];
                selectedproduct = productname[productname.length - 1];
            }
            else if (segment != null && productname) {
                selectedSegment = segment[0];
                selectedproduct = productname[productname.length - 1];
            }
            else if (productname != null && productname) {
                selectedCategory = category[0];
                selectedproduct = productname[productname.length - 1];
            }
        }
        this.loader = true;
        console.log(selectedCategory, selectedSegment, selectedproduct);
        this.db.fetchData({ "segmentCode": selectedSegment, "categoryCode": selectedCategory, "productName": selectedproduct, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.cartProductList = result['data'];
                for (var i = 0; i < _this.cartProductList.length; i++) {
                    _this.cartProductList[i].qty = '';
                    _this.cartProductList[i].amount = 0;
                    _this.cartProductList[i].isImage = false;
                    _this.cartProductList[i].document = '';
                }
                _this.productlist = _this.productlist.concat(_this.cartProductList);
                _this.tmpProductList = _this.productlist;
                for (var i = 0; i < _this.tmpProductList.length; i++) {
                    _this.tmpProductList[i].priceUnit = _this.tmpProductList[i]['mrp'];
                    _this.tmpProductList[i].priceUnit = _this.tmpProductList[i]['mrp'];
                    _this.tmpProductList[i].isImage = false;
                }
                console.log(_this.tmpProductList);
            }
        });
    };
    AddConcernComponent.prototype.calculateAmount = function (qty, i) {
        this.add = false;
        this.isedit = false;
        console.log(qty, i);
        if (qty > 0) {
            this.productlist[i].datacheck = true;
            this.productlist[i].qty = qty;
            this.productlist[i].amount = parseInt(this.productlist[i]['priceUnit']) * parseInt(qty);
            this.add = true;
        }
        else {
            this.alrt.error("Qty should be greater than 0");
            this.productlist[i].datacheck = false;
            this.productlist[i].qty.value = '';
            this.productlist[i].amount = 0;
            console.log(this.productlist[i].qty);
        }
        console.log(this.productlist);
    };
    AddConcernComponent.prototype.select = function (product, index) {
        console.log(product.datacheck);
        if (product.datacheck == false) {
            product.invoice = '';
            product.date = '';
            product.qty = '';
        }
        var checkdata = this.productlist.findIndex(function (x) { return x.datacheck == true; });
        if (checkdata == -1) {
            this.add = false;
        }
    };
    AddConcernComponent.prototype.addCart = function (product, index) {
        this.isCart = true;
        this.isSave = false;
        console.log(product, index);
        if (this.concern_form.product_type == 1) {
            if (product.qty && product.invoice && product.date) {
                if (this.tmp_array.length == 0) {
                    this.tmp_array.push({ document: product['document'], productName: product['productName'], category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'], natureOfComplaint: product['natureOfComplaint'], concernProductStatus: product['concernProductStatus'] });
                    this.concernDetail.push({ document: product['document'], productName: product['productName'], category: product['category'], productId: product['productId'], priceUnit: product['priceUnit'], qty: product['qty'], amount: product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'], natureOfComplaint: product['natureOfComplaint'], concernProductStatus: product['concernProductStatus'] });
                }
                else {
                    var idIndex = this.concernDetail.findIndex(function (row) { return row.productId == product.productId; });
                    console.log(idIndex);
                    if (idIndex != -1) {
                        console.log('check');
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        console.log(itemIndex);
                        if (itemIndex != -1) {
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) - parseInt(this.concernDetail[idIndex].tmpqty);
                            this.tmp_array[itemIndex].amount = parseInt(this.tmp_array[itemIndex].amount) - parseInt(this.concernDetail[idIndex].tmpamount);
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) + parseInt(product.qty);
                            this.tmp_array[itemIndex].amount = parseInt(product.amount) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                        this.concernDetail[idIndex]['qty'] = parseInt(product.qty);
                        this.concernDetail[idIndex]['tmpqty'] = parseInt(product.qty);
                        this.concernDetail[idIndex]['amount'] = parseInt(product.amount);
                        this.concernDetail[idIndex]['tmpamount'] = parseInt(product.amount);
                    }
                    if (idIndex === -1) {
                        this.concernDetail.push({ document: product['document'], productName: product['productName'], category: product['category'], "productId": product.productId, "qty": product.qty, "priceUnit": product.priceUnit, "amount": product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpamount: product['amount'], tmpqty: product['qty'], natureOfComplaint: product['natureOfComplaint'], concernProductStatus: product['concernProductStatus'] });
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        if (itemIndex === -1) {
                            this.tmp_array.push({ document: product['document'], productName: product['productName'], category: product['category'], qty: product['qty'], amount: product['amount'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'], natureOfComplaint: product['natureOfComplaint'], concernProductStatus: product['concernProductStatus'] });
                        }
                        else {
                            console.log('checkccc');
                            this.tmp_array[itemIndex].qty = parseInt(product['qty']) + parseInt(this.tmp_array[itemIndex].qty);
                            this.tmp_array[itemIndex].amount = parseInt(product['amount']) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                    }
                }
                console.log(this.concernDetail);
                if (this.tmp_array) {
                    this.concern_form.info = true;
                    console.log(this.concern_form);
                }
                console.log(this.tmpCartArray);
                if (!this.isedit) {
                    this.productlist[index].datacheck = false;
                    if (this.productlist[index].datacheck == false) {
                        this.productlist[index].qty = '';
                        this.productlist[index].invoice = '';
                        this.productlist[index].date = '';
                        this.productlist[index].amount = 0;
                        this.toast.openSucess('Concern added successfully To Cart', '');
                    }
                    else {
                        this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                }
                for (var i = 0; i < this.tmp_array.length; i++) {
                    this.tmp_array[i].totalItem = 0;
                    for (var j = 0; j < this.concernDetail.length; j++) {
                        if (this.tmp_array[i].category == this.concernDetail[j].category) {
                            this.tmp_array[i].totalItem = this.tmp_array[i].totalItem + 1;
                        }
                    }
                }
                console.log(this.tmp_array);
            }
            else {
                this.alrt.error("Fields are Empty Please Fill Them First");
                console.log(product);
            }
            var checkdata = this.productlist.findIndex(function (x) { return x.datacheck == true; });
            if (checkdata == -1) {
                this.add = false;
            }
        }
        else {
            if (product.qty) {
                if (this.tmp_array.length == 0) {
                    this.tmp_array.push({ document: product['document'], productName: product['productName'], category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'], natureOfComplaint: product['natureOfComplaint'], concernProductStatus: product['concernProductStatus'] });
                    this.concernDetail.push({ document: product['document'], productName: product['productName'], category: product['category'], productId: product['productId'], priceUnit: product['priceUnit'], qty: product['qty'], amount: product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'], natureOfComplaint: product['natureOfComplaint'], concernProductStatus: product['concernProductStatus'] });
                }
                else {
                    var idIndex = this.concernDetail.findIndex(function (row) { return row.productId == product.productId; });
                    console.log(idIndex);
                    if (idIndex != -1) {
                        console.log('check');
                        console.log(this.finel_Array[idIndex]);
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        console.log(itemIndex);
                        if (itemIndex != -1) {
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) - parseInt(this.concernDetail[idIndex].tmpqty);
                            this.tmp_array[itemIndex].amount = parseInt(this.tmp_array[itemIndex].amount) - parseInt(this.concernDetail[idIndex].tmpamount);
                            console.log(this.concernDetail[idIndex]);
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) + parseInt(product.qty);
                            this.tmp_array[itemIndex].amount = parseInt(product.amount) + parseInt(this.tmp_array[itemIndex].amount);
                            console.log(this.tmp_array[itemIndex]);
                        }
                        this.concernDetail[idIndex]['qty'] = parseInt(product.qty);
                        this.concernDetail[idIndex]['amount'] = parseInt(product.amount);
                    }
                    if (idIndex === -1) {
                        this.concernDetail.push({ document: product['document'], productName: product['productName'], category: product['category'], "productId": product.productId, "qty": product.qty, "priceUnit": product.priceUnit, "amount": product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpamount: product['amount'], tmpqty: product['qty'], natureOfComplaint: product['natureOfComplaint'], concernProductStatus: product['concernProductStatus'] });
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        if (itemIndex === -1) {
                            this.tmp_array.push({ document: product['document'], productName: product['productName'], category: product['category'], qty: product['qty'], amount: product['amount'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'], natureOfComplaint: product['natureOfComplaint'], concernProductStatus: product['concernProductStatus'] });
                        }
                        else {
                            console.log('checkccc');
                            this.tmp_array[itemIndex].qty = parseInt(product['qty']) + parseInt(this.tmp_array[itemIndex].qty);
                            this.tmp_array[itemIndex].amount = parseInt(product['amount']) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                    }
                }
                console.log(this.concernDetail);
                if (this.tmp_array) {
                    this.concern_form.info = true;
                    console.log(this.concern_form);
                }
                this.productlist[index].datacheck = false;
                if (this.productlist[index].datacheck == false) {
                    this.productlist[index].qty = '';
                    this.productlist[index].invoice = '';
                    this.productlist[index].date = '';
                    this.toast.openSucess('Concern added successfully To Cart', '');
                }
                else {
                    this.toast.openError('Something Went Wrong Please Try Again!!', '');
                }
                for (var i = 0; i < this.tmp_array.length; i++) {
                    this.tmp_array[i].totalItem = 0;
                    for (var j = 0; j < this.concernDetail.length; j++) {
                        if (this.tmp_array[i].category == this.concernDetail[j].category) {
                            this.tmp_array[i].totalItem = this.tmp_array[i].totalItem + 1;
                        }
                    }
                }
                console.log(this.tmp_array);
            }
            else {
                this.alrt.error("Fields are Empty Please Fill Them First");
            }
            var checkdata = this.productlist.findIndex(function (x) { return x.datacheck == true; });
            if (checkdata == -1) {
                this.add = false;
            }
        }
    };
    AddConcernComponent.prototype.addProduct = function (kk) {
        this.partnoArray = [];
        console.log(kk);
        this.isedit = false;
        this.isCart = true;
        console.log(this.isCart);
        if (this.concern_form.product_type == 1) {
            for (var i = 0; i < this.productlist.length; i++) {
                if (this.productlist[i].datacheck == true) {
                    console.log('hii');
                    this.cartArray.push(this.productlist[i]);
                    if (this.productlist[i].qty && this.productlist[i].invoice && this.productlist[i].date) {
                        this.addCart(this.productlist[i], i);
                    }
                    else {
                        console.log('test');
                        this.partnoArray.push(this.productlist[i].partNumber);
                        console.log(this.productlist[i]);
                        console.log(this.cartArray[i]);
                    }
                }
            }
            console.log(this.partnoArray);
            console.log(this.productlist);
            if (this.partnoArray.length) {
                this.alrt.error("Field are Empty Please Fill Them First");
            }
        }
        else {
            for (var i = 0; i < this.productlist.length; i++) {
                if (this.productlist[i].datacheck == true) {
                    console.log('hii');
                    this.cartArray.push(this.productlist[i]);
                    if (this.productlist[i].qty) {
                        this.addCart(this.productlist[i], i);
                    }
                    else {
                        console.log('test');
                        this.partnoArray.push(this.productlist[i].partNumber);
                    }
                }
            }
            console.log(this.partnoArray);
            if (this.partnoArray.length) {
                this.alrt.error("field are Empty Please Fill Them First");
            }
            console.log(this.cartArray);
        }
    };
    AddConcernComponent.prototype.removeFromCart = function (index) {
        var _this = this;
        this.temp = false;
        this.alrt.delete("Product").then(function (result) {
            if (result) {
                console.log(_this.tmp_array[index]['category']);
                _this.concernDetail = _this.concernDetail.filter(function (row) { return row.category != _this.tmp_array[index]['category']; });
                _this.temp = true;
            }
            if (_this.temp) {
                _this.tmp_array.splice(index, 1);
            }
        });
    };
    AddConcernComponent.prototype.addStatus = function (product, index) {
        console.log("hii");
        var dialogRef = this.dialog.open(_update_status_update_status_component__WEBPACK_IMPORTED_MODULE_7__["UpdateStatusComponent"], {
            width: '1600px',
            data: {
                product: product,
                index: index
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
            console.log(product);
        });
    };
    AddConcernComponent.prototype.insertImage = function (data, productName, index) {
        var _this = this;
        this.urls = [];
        this.documentData = [];
        this.selectedFile = [];
        this.name = productName;
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        setTimeout(function () {
            console.log(_this.urls[0]);
            console.log(data.target.files.length);
            for (var i = 0; i < data.target.files.length; i++) {
                _this.selectedFile.push(data.target.files[i]);
            }
            console.log(_this.urls[0]);
            console.log(_this.urls[0], _this.selectedFile[0]);
            _this.concernData = new FormData;
            _this.concernData.action = 1;
            _this.concernData.binaryData = _this.urls[0];
            _this.concernData.documentType = 3;
            _this.concernData.documentName = _this.name;
            _this.concernData.referenceId = 0;
            _this.concernData.fileName = "image" + i + ".jpg", _this.selectedFile[0];
            console.log(_this.urls);
            _this.productlist[index].isImage = true;
            _this.documentData.push({
                "documentType": _this.concernData.documentType,
                "documentName": _this.concernData.documentName,
                "fileName": _this.concernData.fileName,
                "referenceId": _this.concernData.referenceId,
                "iconName": _this.concernData.fileName,
                "binaryData": _this.concernData.binaryData,
                "action": _this.concernData.action
            });
            _this.productlist[index].document = _this.documentData[0];
            console.log(_this.productlist[index].document);
        }, 1000);
    };
    AddConcernComponent.prototype.openImageDialog = function (index) {
        var _this = this;
        var dialogRef = this.dialog.open(_image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_9__["ImageModalComponent"], {
            width: '500px',
            data: {
                concernStatus: 0,
                document: this.productlist[index].document.binaryData
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            if (result == true) {
                console.log('The dialog was closed');
            }
            else {
                console.log('The dialog was closed');
                _this.selectedFile = [];
                _this.urls = [];
                _this.productlist[index].document = {};
                _this.productlist[index].isImage = false;
            }
        });
    };
    AddConcernComponent.prototype.productDetail = function (category) {
        var _this = this;
        var dialogRef = this.dialog.open(_update_concern_update_concern_component__WEBPACK_IMPORTED_MODULE_6__["UpdateConcernComponent"], {
            width: '1600px',
            data: {
                product: this.concernDetail,
                category: category,
                concern: this.concern_form
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.isedit = true;
            console.log('The dialog was closed');
            _this.tmpCartArray = _this.db.getData();
            console.log(_this.tmpCartArray);
            if (_this.tmpCartArray) {
                _this.tmp_array = [];
                _this.concernDetail = [];
                _this.showInCart(_this.tmpCartArray);
            }
        });
    };
    AddConcernComponent.prototype.showInCart = function (orderArray) {
        if (orderArray === void 0) { orderArray = []; }
        console.log(orderArray);
        for (var i = 0; i < orderArray.length; i++) {
            this.addCart(orderArray[i], i);
            orderArray[i].datacheck = true;
        }
        console.log(this.tmp_array);
    };
    AddConcernComponent.prototype.productSearchByNumber = function () {
        console.log("hello");
        this.productlist = [];
        for (var i = 0; i < this.tmpProductList.length; i++) {
            this.productName.search = this.productName.search.toLowerCase();
            this.tmp_pro = this.tmpProductList[i]['partNumber'].toLowerCase();
            if (this.tmp_pro.includes(this.productName.search)) {
                this.productlist.push(this.tmpProductList[i]);
            }
        }
    };
    AddConcernComponent.prototype.partno_list = function () {
        var _this = this;
        this.loader = true;
        if (this.concern_form.product_type == 1) {
            this.db.fetchData({ "currentPage": 1,
                "pageSize": 50, "segmentCode": this.pre_fitment.segment, "categoryCode": this.pre_fitment.category, }, 'product/list').subscribe(function (response) {
                _this.partnumberlist = response['data'];
                console.log(_this.partnumberlist);
                _this.loader = false;
            });
        }
        else {
            this.db.fetchData({ "currentPage": 1,
                "pageSize": 50, "segmentCode": this.post_fitment.segment, "categoryCode": this.post_fitment.category, }, 'product/list').subscribe(function (response) {
                _this.partnumberlist1 = response['data'];
                console.log(_this.partnumberlist1);
                _this.loader = false;
            });
        }
    };
    AddConcernComponent.prototype.select_role = function (value, index, event) {
        console.log(event);
        if (event) {
            this.isAssignCheck = true;
            this.role.push(value);
            console.log(this.role);
        }
        else {
            console.log(index);
            console.log(this.role[0]);
            for (var j = 0; j < this.rolelistsales1.length; j++) {
                if (this.rolelistsales1[index]['roleId'] == this.role[j]) {
                    this.role.splice(j, 1);
                }
            }
            console.log(this.role);
        }
    };
    AddConcernComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    AddConcernComponent.prototype.segmentSearch = function () {
        this.segmentList = [];
        for (var i = 0; i < this.tmp_segmentList.length; i++) {
            this.segsearch.search = this.segsearch.search.toLowerCase();
            this.tmp_seg = this.tmp_segmentList[i]['text'].toLowerCase();
            if (this.tmp_seg.includes(this.segsearch.search)) {
                this.segmentList.push(this.tmp_segmentList[i]);
            }
        }
    };
    AddConcernComponent.prototype.onSubmit = function (status) {
        var _this = this;
        console.log(status);
        if (this.concern_form.claim_type == 2) {
            this.isAssignCheck = false;
            for (var i = 0; i < this.rolelistsales1.length; i++) {
                console.log(this.rolelistsales1[i].isAssign);
                if (this.rolelistsales1[i].isAssign) {
                    this.isAssignCheck = true;
                }
            }
            console.log(this.isAssignCheck);
            if (!this.isAssignCheck) {
                return;
            }
            this.db.fetchData({ "concernStatus": status, "concernType": this.concern_form.claim_type, "raisedByNetworkId": this.userId, "concernDetails": this.other_form.description, "concernRolesModel": this.role }, 'concern/add').subscribe(function (response) {
                console.log(response);
                // this.message=response['message'];
                _this.loader = false;
                if (response['status'] == "Success") {
                    _this.toast.openSucess('Concern added successfully', '');
                    _this.router.navigate(['/concern-list']);
                }
                else {
                    _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                }
                ;
            });
        }
        if (this.concern_form.claim_type == 1) {
            if (this.concern_form.product_type == 1) {
                this.productConcernType = 1;
            }
            else {
                this.productConcernType = 2;
            }
            if (this.user.data.userType == 3) {
                this.verified = false;
            }
            else {
                this.verified = true;
            }
            console.log(this.tmp_array);
            if (this.tmp_array.length != 0) {
                this.loader = true;
                console.log(this.concernDetail.length);
                if (this.user.data.userType == 2) {
                    for (var i = 0; i < this.concernDetail.length; i++) {
                        console.log(this.concernDetail[i]);
                        this.productConcernsModel.push({
                            "segmentCode": this.concernDetail[i].segment,
                            "category": this.concernDetail[i].category,
                            "partNumber": this.concernDetail[i].partNumber,
                            "qunatity": this.concernDetail[i].qty,
                            "rate": this.concernDetail[i].priceUnit,
                            "productId": this.concernDetail[i].productId,
                            "netAmount": this.concernDetail[i].amount,
                            "mfgDate": this.concernDetail[i].date,
                            "rejectedQuantity": 0,
                            "document": this.concernDetail[i].document,
                            "acceptedQuantity": this.concernDetail[i].qty,
                            "invoiceNumber": this.concernDetail[i].invoice,
                            "verified": this.verified
                        });
                    }
                }
                else {
                    for (var i = 0; i < this.concernDetail.length; i++) {
                        console.log(this.concernDetail[i]);
                        this.productConcernsModel.push({
                            "segmentCode": this.concernDetail[i].segment,
                            "category": this.concernDetail[i].category,
                            "partNumber": this.concernDetail[i].partNumber,
                            "qunatity": this.concernDetail[i].qty,
                            "rate": this.concernDetail[i].priceUnit,
                            "productId": this.concernDetail[i].productId,
                            "netAmount": this.concernDetail[i].amount,
                            "mfgDate": this.concernDetail[i].date,
                            "document": this.concernDetail[i].document,
                            "invoiceNumber": this.concernDetail[i].invoice,
                            "verified": this.verified
                        });
                    }
                }
                console.log(this.productConcernsModel);
                this.db.fetchData({ "productConcernType": this.productConcernType, "concernStatus": status, "concernType": this.concern_form.claim_type, "raisedByNetworkId": this.userId,
                    "productConcernsModel": this.productConcernsModel }, 'concern/add').subscribe(function (response) {
                    console.log(response);
                    // this.message=response['status'];
                    _this.loader = false;
                    if (response['status'] == "Success") {
                        _this.toast.openSucess('Concern added successfully', '');
                        _this.router.navigate(['/concern-list']);
                        if (status == 1) {
                            localStorage.setItem('concernListType', 'Draft');
                        }
                        if (status == 2) {
                            localStorage.setItem('concernListType', 'Submit');
                        }
                        if (status == 3) {
                            localStorage.setItem('concernListType', 'Forward');
                        }
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    ;
                });
            }
            else {
                this.alrt.error("Please Select Some Product");
            }
        }
    };
    AddConcernComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-concern',
            template: __webpack_require__(/*! ./add-concern.component.html */ "./src/app/customer-concern/add-concern/add-concern.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"],
            _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"],
            src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], AddConcernComponent);
    return AddConcernComponent;
}());



/***/ }),

/***/ "./src/app/customer-concern/concern-detail/concern-detail.component.html":
/*!*******************************************************************************!*\
  !*** ./src/app/customer-concern/concern-detail/concern-detail.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/concern-list\" routerLinkActive=\"active\" (click)=\"navigateList()\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{categorydetail.networkEstablishment}}<a style=\"font-size: 12px; color: #123dd6; margin-left: 10px; text-decoration: underline;\"  class=\"name\" routerLink=\"/distribution-detail/{{categorydetail.raisedByNetworkId}}\" routerLinkActive=\"active\">View Detail</a></h2>\n        <p>Distributor</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n        <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"details-info\">\n                <div class=\"basic-details\">\n                  <div class=\"col s12 cs-figure padding0\">\n                    <ul>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>Concern Date</span>\n                            <p> {{categorydetail.createdOn | date:'d, MMMM , y'}}</p>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>Created by</span>\n                            <p>{{categorydetail.createdByName}}</p>\n                          </div>\n                        </div>\n                      </li>\n                      <li *ngIf=\"categorydetail.claimNo\">\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>Concern Number</span>\n                            <p>{{categorydetail.claimNo}}</p>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                          <div class=\"outer\">\n                            <div class=\"inner\">\n                              <span>Concern Type</span>\n                              <p>{{categorydetail.concernTypeName}}</p>\n                            </div>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"outer\">\n                            <div class=\"inner\">\n                              <span>Status</span>\n                              <p *ngIf=\"categorydetail.concernStatus== '2'\">UNDER VERIFICATION</p>\n                              <p *ngIf=\"categorydetail.concernStatus== '3'\">WAITING FOR DISTRIBUTOR APPROVAL</p>\n                              <p *ngIf=\"categorydetail.concernStatus== '4'\">Proceed For Approvel</p>\n                              <p *ngIf=\"categorydetail.concernStatus== '5'\">Approved</p>\n                              <p *ngIf=\"categorydetail.concernStatus== '6'\">Rejected</p>\n                              <p *ngIf=\"categorydetail.concernStatus== '7'\">Transporter Deatail</p>\n                            </div>\n                          </div>\n                        </li> \n                   \n                    </ul>\n\n                    <ul class=\"mt15\">\n                        <li>\n                            <div class=\"outer\">\n                              <div class=\"inner\">\n                                <span>Total Item</span>\n                                <p>{{totalItem}}</p>\n                              </div>\n                            </div>\n                          </li>\n                          <li>\n                            <div class=\"outer\">\n                              <div class=\"inner\">\n                                <span>Total Qty</span>\n                                <p>{{categorydetail.totalQty}}</p>\n                              </div>\n                            </div>\n                          </li>\n                          <li *ngIf=\"categorydetail.concernType==1\">\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Product Type</span>\n                                  <p>{{categorydetail.productConcernTypeName}}</p>\n                                </div>\n                              </div>\n                            </li>\n                         \n                          <li>\n                            <div class=\"outer\">\n                              <div class=\"inner\">\n                                <span>Total Amount</span>\n                                <p>{{categorydetail.totalAmount}}</p>\n                              </div>\n                            </div>\n                          </li>\n                          <li *ngIf=\"user.data.userType==3\">\n                            <div class=\"outer\">\n                              <div class=\"inner\">\n                                <span>Assigned Sales</span>\n                                <p><span *ngFor=\"let sales of user.data.distributerNetwork.networkSalesUsers\">{{sales.salesUserName}}</span></p>\n                              </div>\n                            </div>\n                          </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <!-- <div class=\"sprate-box mb15 pt0\" *ngIf=\"categorydetail.concernType==1 && user.data.userType==2\">\n              <div *ngIf=\"isStatus&&user.data.userType==2\"  class=\"cs-heading\">\n                  <h2>Status</h2>\n                </div>\n                <div class=\"row\" *ngIf='user.data.userType==2'>\n                    <form  (ngSubmit)=\"d.form.valid && updateStatus()\" #d=\"ngForm\" novalidate>\n                      <div *ngIf=\"isStatus\" class=\"from-fields col s6 pl0\"> \n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input\">\n                            <mat-select placeholder=\"Select Status\" name=\"status\" [(ngModel)]=\"categorydetail.status\" #status=\"ngModel\" [ngClass]=\"{'has-error' : status.invalid }\" required>\n                              <mat-option  [value]=2>Approved</mat-option>\n                              <mat-option  [value]=3>Rejected</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"d.submitted && status.invalid \" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"status.errors.required\">status is required</mat-error>\n                          </mat-error>\n                        </div>\n                        \n                      </div>\n                      <div *ngIf=\"isStatus\" class=\"col s6 from-fields pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input\">\n                            <input  placeholder=\"Nature Of Problem\" matInput name=\"problem\" #problem=\"ngModel\" [(ngModel)]=\"categorydetail.problem\"  [ngClass]=\"{'has-error' : problem.invalid }\" required>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"d.submitted && problem.invalid \" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"problem.errors.required\">problem is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col s12 padding0\">\n                          <div  *ngIf=\"isStatus\" class=\"cs-btn fixedd mt32 text-right\">\n                            <div class=\"in-btn\">\n                              <button  mat-raised-button color=\"accent\">Status</button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n          </div> -->\n\n\n\n\n          \n          <!-- <a mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\"><i class=\"material-icons\">edit</i></a> -->\n          \n          <div class=\"sprate-box   padding0\" *ngIf=\"categorydetail.concernType==1\">\n            <div class=\"top-heading\">\n              <h2>Item List</h2>\n            </div>\n            <div class=\"row\">\n              <div class=\"cs-table\">\n                <div class=\"table-head\">\n                  <table> \n                    <tr>\n                      <th class=\"padding0\">\n                        <table>\n                          <tr>\n                            <th>Category</th>\n                            <th class=\"w110 text-center\">Total Item</th>\n                            <th class=\"w110 text-center\">Total QTY.</th>\n                            <th class=\"w130 text-right\">Amount</th>\n                            <!-- <th class=\"w150\">Action</th> -->\n                          </tr>\n                        </table>\n                      </th>\n                    </tr>\n                  </table>\n                </div>\n                \n                <div class=\"table-container\">\n                  <div class=\"table-content none-shadow\">\n                    <table>\n                      <tr  *ngFor=\"let concerns of tmp_array;let i=index\" >\n                        <td class=\"padding0\">\n                          <table>\n                            <tr>\n                              <td><a mat-button class=\"link-btn\" (click)=\"Show_Item(concerns.category,i)\" >{{concerns.category}}</a></td>\n                              <td class=\"w110 text-center\">{{categorydetail.productConcerns.length}}</td>\n                              <td class=\"w110 text-center\">{{concerns.qty}}</td>\n                              <td class=\"w130 text-right\">&#x20B9; {{concerns.amount}}</td>\n                              <!-- <td class=\"w150\"><a class=\"action-cart\" mat-button><i class=\"material-icons red-clr\"(click)=\"removeFromCart(i)\">delete_forever</i></a></td> -->\n                            </tr>\n                          </table>\n                          <table class=\"multi-table\"  *ngIf='isItem==true&&isIndex==i'>\n                            <tr>\n                              <!-- <td class=\"w40\">&nbsp;</td> -->\n                              <td class=\"w100\">Part No.</td>\n                              <td class=\"w60\">Segment</td>\n                              <td class=\"w100\">Invoice</td>\n                              <td class=\"w80\">MFG Date</td>\n                              <td class=\"w60\"> Claim Qty</td>\n                              <td class=\"w60\">SAccept Qty</td>\n                              <td class=\"w60\" >SReject Qty</td>\n                              <td *ngIf=\"categorydetail.concernStatus>6\" class=\"w60\">WhAccept Qty</td>\n                              <td *ngIf=\"categorydetail.concernStatus>6\" class=\"w60\" >WhReject Qty</td>\n                              <td class=\"w70 text-right\">Rate</td>\n                              <td class=\"w80 text-right\">Amount</td>\n                              <th class=\"w80\">Image</th>\n                              <td>Sales Remark</td>\n                              <td>Dealer Remark</td>\n                              <td *ngIf=\"categorydetail.concernStatus>6\" >Wholesaler Remark</td>\n                              <!-- <td class=\"w100\">Status</td>\n                              <td>Nature Of Problem</td> -->\n                            </tr>\n                            <tr [hidden]=\"product.category != concerns.category\" *ngFor=\"let product of tmp_detail; let i=index\">\n                              <!-- <td><mat-checkbox  name=\"{{check+i}}\" [(ngModel)]=\"product.datacheck\" (change)=\"checkkk()\" >&nbsp; </mat-checkbox></td> -->\n                              <td class=\"w100\">{{product.partNumber}}</td>\n                              <td>{{product.segment}}</td>\n                              <td>{{product.invoice}}</td>\n                              <td>{{product.date|date:'d MMM y'}}</td>\n                              <td>{{product.qty}}</td>\n                              <td>\n                                <div class=\"td-input\" *ngIf=\"categorydetail.concernStatus==2 && user.data.userType==2\">\n                                    <input type=\"text\" (input)=\"calculateAmount(product.acceptqty,i)\"  name=\"acceptqty\" #acceptqty=\"ngModel\" [(ngModel)]=\"product.acceptqty\" [value]=\"product.acceptqty\" (keypress)=\"MobileNumber($event)\" required >\n                                </div>\n                                <div *ngIf=\"categorydetail.concernStatus!=2\">{{product.acceptqty}}</div>\n                                <div *ngIf=\"categorydetail.concernStatus==2 && user.data.userType==3\">{{product.acceptqty}}</div>\n                               \n                               \n                                <!-- <p *ngIf='isCart==true && product.datacheck==true && product.qty==\"\"'>required</p> -->\n                            </td>\n                            <td>{{product.rejectqty}}</td>\n                            <td *ngIf=\"categorydetail.concernStatus>6\" > \n                                <div class=\"td-input\"  *ngIf=\"categorydetail.concernStatus==7 && user.data.role==16\">\n                                    <input type=\"text\" (input)=\"calculateAmountWH(product.whacceptqty,i)\"  name=\"whacceptqty\" #whacceptqty=\"ngModel\" [(ngModel)]=\"product.whacceptqty\" [value]=\"product.whacceptqty\" (keypress)=\"MobileNumber($event)\" required >\n                                </div>\n                                <div *ngIf=\"categorydetail.concernStatus>7\">{{product.acceptqty}}</div>\n                            </td>\n                             <td *ngIf=\"categorydetail.concernStatus>6\" >{{product.whrejectqty}}</td>\n                              <td class=\"text-right\">&#x20B9; {{product.price}}</td>\n                              <td class=\"text-right\">&#x20B9; {{product.amount}}</td>\n                              <td class=\"w80\">\n                                <a *ngIf=\"product.isImage\" class=\"link-btn\" (click)=\"openImageDialog(i)\"> View Image </a>\n                              </td>\n                          <td > \n                            <div class=\"td-input\" *ngIf=\"categorydetail.concernStatus==2 && user.data.userType==2\">\n                                <textarea type=\"text\"   name=\"{{salesremark+index}}\" #salesremark=\"ngModel\" [(ngModel)]=\"product.salesremark\" required></textarea>\n                            </div>\n                            <div class=\"td-input\" *ngIf=\"categorydetail.concernStatus!=2\">\n                                <textarea type=\"text\"   name=\"{{salesremark+index}}\" #salesremark=\"ngModel\" [(ngModel)]=\"product.salesremark\" required readonly></textarea>\n                            </div>\n                            <div class=\"td-input\" *ngIf=\"categorydetail.concernStatus==2 && user.data.userType==3\">\n                              <textarea type=\"text\"   name=\"{{salesremark+index}}\" #salesremark=\"ngModel\" [(ngModel)]=\"product.salesremark\" required readonly></textarea>\n                          </div>\n                            <!-- <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p> -->\n                        </td>\n                        <td> \n                          <div class=\"td-input\">\n                              <textarea type=\"text\"   name=\"{{dealerremark+index}}\" #dealerremark=\"ngModel\" [(ngModel)]=\"product.dealerremark\" required readonly></textarea>\n                          </div>\n                         \n                      </td>\n                      <td *ngIf=\"categorydetail.concernStatus>6\" > \n                        <div class=\"td-input\"  *ngIf=\"categorydetail.concernStatus==7 && user.data.role==16\">\n                            <textarea type=\"text\"   name=\"{{whremark+index}}\" #whremark=\"ngModel\" [(ngModel)]=\"product.whremark\" required ></textarea>\n                        </div>\n                        <div class=\"td-input\"  *ngIf=\"categorydetail.concernStatus>7\">\n                            <textarea type=\"text\"   name=\"{{whremark+index}}\" #whremark=\"ngModel\" [(ngModel)]=\"product.whremark\" required readonly></textarea>\n                        </div>\n                       \n                    </td>\n                              <!-- <td>{{product.statusName}}</td>\n                              <td>{{product.natureOfProblem}}</td> -->\n                            </tr>\n                          </table>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                \n              </div>\n              \n            </div>\n          </div>\n          <div class=\"row\"  *ngIf=\"categorydetail.concernType==1\">\n            <div class=\"col s12 padding0\" >\n              <div class=\"cs-btn  mt15 text-right\">\n                <div class=\"in-btn\" >\n                  <ng-container *ngIf='user.data.userType==2'>\n                      <button  *ngIf=\"categorydetail.concernStatus==2\"  mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(2)\" >save</button>\n                  </ng-container>\n                  <button  *ngIf=\"user.data.userType==2 && isForward  && categorydetail.concernStatus==2\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(3)\" >Forward To Distributer</button>\n                  <button  *ngIf=\"user.data.userType==2 && user.data.salesUser.concernApprovalAccess==true && (isProceed||categorydetail.concernStatus==4) && categorydetail.concernStatus!=5 && categorydetail.concernStatus!=3 && categorydetail.concernStatus!=6\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(5)\" >Generate Concern</button>\n                  <!-- <button  *ngIf=\"user.data.userType==2 && user.data.salesUser.concernApprovalAccess==true && categorydetail.concernStatus==4\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(5)\" >Generate Concern</button> -->\n                  <button  *ngIf=\"user.data.userType==2 && user.data.salesUser.concernApprovalAccess==true && categorydetail.concernStatus==4\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(6)\" >Reject</button>\n                  <button  *ngIf=\"user.data.userType==2 && isProceed && user.data.salesUser.concernApprovalAccess==false  && categorydetail.concernStatus!=4 && categorydetail.concernStatus!=5 && categorydetail.concernStatus!=6 && categorydetail.concernStatus!=7 &&  categorydetail.concernStatus!=8 &&  categorydetail.concernStatus!=9\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(4)\" >Proceed for APPROVAL</button>\n                  <!-- <button  *ngIf=\"user.data.userType==2 && isProceed && user.data.salesUser.concernApprovalAccess==false && categorydetail.concernStatus==2\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(4)\" >Proceed for APPROVAL</button> -->\n                  <button  *ngIf=\"categorydetail.concernStatus==7 && user.data.role==16\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(7)\" >Save</button>\n                  <button  *ngIf=\"isWHForward && categorydetail.concernStatus==7 && user.data.role==16\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(8)\" >Forward To Finance</button>\n                </div>\n              </div>\n            </div>\n          </div>\n      \n          \n          <div class=\"sprate-box mt15 padding0\"  *ngIf=\"categorydetail.concernType==1&&categorydetail.concernStatus>4\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>Transporter Detail</h2>\n              </div>\n              <a  *ngIf=\"this.user.data.role==12 && categorydetail.concernStatus==5\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\" ><i class=\"material-icons\" (click)=\"edit()\">edit</i></a>\n              <div class=\"cs-table\">\n                <div class=\"table-head\">\n                  <table>\n                    <tr>\n                      <th>Transporter Name</th>\n                      <th class=\"w140\">Mode of Transport</th>\n                      <th class=\"w140\">No. of Boxes</th>\n                      <th class=\"w150\">LR No.</th>\n                      <th class=\"w140\">E-way bill No.</th>\n                      <th class=\"w140\" *ngIf=\"isEdit==true\">Upload Document</th>\n                      <th class=\"w140\" *ngIf=\"categorydetail.transportDocument\">Download Document</th>\n                      <th class=\"w100\">&nbsp;</th>\n                    </tr>\n                  </table>\n                </div>\n                <form  (ngSubmit)=\"f.form.valid && updateTransport() || setFocus(f.form)\" #f=\"ngForm\" novalidate>\n                  <div class=\"table-container\">\n                    <div class=\"table-content none-shadow\">\n                      <table>\n                        <tr *ngIf='categorydetail.transporterName||isEdit'>\n                          <td><span *ngIf=\"isEdit==false\">{{categorydetail.transporterName}}</span>\n                            \n                            <div class=\"td-input\" *ngIf=\"isEdit==true\">\n                              <input type=\"text\" name=\"transporterName\" #transporterName=\"ngModel\" [(ngModel)]=\"categorydetail.transporterName\" [ngClass]=\"{'has-error' : transporterName.invalid }\" required>\n                              \n                              <mat-error *ngIf=\"f.submitted && transporterName.invalid \" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"transporterName.errors.required\">required</mat-error>\n                              </mat-error>\n                            </div>\n                            \n                          </td>\n                          <td class=\"w140\"><span *ngIf=\"isEdit==false\">{{categorydetail.modeOfTransport}}</span>\n                            <div class=\"td-input\" *ngIf=\"isEdit==true\" >\n                              <input type=\"text\" name=\"modeOfTransport\" #modeOfTransport=\"ngModel\" [(ngModel)]=\"categorydetail.modeOfTransport\"  [ngClass]=\"{'has-error' : modeOfTransport.invalid }\" required>\n                              <mat-error *ngIf=\"f.submitted && modeOfTransport.invalid \" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"modeOfTransport.errors.required\">required</mat-error>\n                              </mat-error>\n                              \n                            </div>\n                          </td>\n                          <td class=\"w140\"><span *ngIf=\"isEdit==false\">{{categorydetail.numberOfBoxes}}</span>\n                            <div class=\"td-input\"  *ngIf=\"isEdit==true\">\n                              \n                              <input type=\"text\" name=\"numberOfBoxes\" #numberOfBoxes=\"ngModel\" [(ngModel)]=\"categorydetail.numberOfBoxes\" [ngClass]=\"{'has-error' : numberOfBoxes.invalid }\" (keypress)=\"MobileNumber($event)\"  required>\n                              \n                              <mat-error *ngIf=\"f.submitted && numberOfBoxes.invalid \" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"numberOfBoxes.errors.required\">required</mat-error>\n                              </mat-error>\n                              \n                            </div>\n                          </td>\n                          <td class=\"w150\"><span *ngIf=\"isEdit==false\">{{categorydetail.lrNumber}}</span>\n                            <div class=\"td-input\"  *ngIf=\"isEdit==true\" >\n                              <input type=\"text\"  name=\"lrNumber\" #lrNumber=\"ngModel\" [(ngModel)]=\"categorydetail.lrNumber\" [ngClass]=\"{'has-error' : lrNumber.invalid }\" required>\n                              <mat-error *ngIf=\"f.submitted && lrNumber.invalid \" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"lrNumber.errors.required\">required</mat-error>\n                              </mat-error>\n                            </div>\n                          </td>\n                          <td class=\"w140\"><span *ngIf=\"isEdit==false\">{{categorydetail.eWayBillNumber}}</span>\n                            <div class=\"td-input\" *ngIf=\"isEdit==true\">\n                              <input type=\"text\"  name=\"eWayBillNumber\" #eWayBillNumber=\"ngModel\" [(ngModel)]=\"categorydetail.eWayBillNumber\" [ngClass]=\"{'has-error' : eWayBillNumber.invalid }\" required>\n                              <mat-error *ngIf=\"f.submitted && eWayBillNumber.invalid \" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"eWayBillNumber.errors.required\">required</mat-error>\n                              </mat-error>\n                            </div>\n                          </td>\n                          <td class=\"w140\" *ngIf=\"isEdit==true\">\n                            <label>\n                              <input (change)=\"insertDocument($event)\" style=\"display: none;\" type=\"file\">\n                              <div class=\"outer\">\n                                <div class=\"innear\">\n                                  <i class=\"material-icons upload-ic\">cloud_upload</i>\n                                  <p>Add Document</p>\n                                </div>\n                              </div>\n                            </label>\n                            <p *ngIf=\"selectedFile && selectedFile[0] && isEdit==true\" >{{selectedFile[0].name}}</p>\n                      </td>\n                      <td class=\"w140\"  *ngIf=\"categorydetail.transportDocument\">\n                        <ul>\n                          <li><a matTooltip=\"Download Document\" matRipple  href=\"{{dburl}}download/document/{{categorydetail.transportDocument.documentId}}\"><i class=\"material-icons\">cloud_download</i></a></li>\n                        </ul>\n                      </td>\n                          <td class=\"w100 text-center\">\n                            <button  mat-raised-button color=\"accent\"  *ngIf=\"isEdit==true\"  >Update</button>\n                           \n                          </td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div> \n\n\n          <div class=\"sprate-box mt15 padding0\" *ngIf=\"categorydetail.concernStatus>7\">\n              <div class=\"full-address\">\n                <div class=\"top-heading\">\n                  <h2>Finance Detail</h2>\n                </div>\n                <form *ngIf=\"!(categorydetail.concernStatus==8 && user.data.role==16)\" (ngSubmit)=\"d.form.valid && updateFinance()\" #d=\"ngForm\" novalidate>\n                <div class=\"from-fields padding15\">\n                    <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                            <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input wp100  infix-bodr\">\n                                    <input *ngIf=\"categorydetail.concernStatus==8\" matInput placeholder=\"Credit Note\" name=\"creditnote\" #creditnote=\"ngModel\" [(ngModel)]=\"finance.creditnote\" [value]=\"finance.creditnote\" (keypress)=\"MobileNumber($event)\" required >\n                                    <input *ngIf=\"categorydetail.concernStatus>8\" matInput placeholder=\"Credit Note\" name=\"creditNote\" #creditNote=\"ngModel\" [(ngModel)]=\"categorydetail.creditNote\" [value]=\"categorydetail.creditNote\" (keypress)=\"MobileNumber($event)\" required readonly>\n                                </mat-form-field>\n                               \n                                <mat-error *ngIf=\"d.submitted && creditnote.invalid && categorydetail.concernStatus==8 \" class=\"invalid-feedback\">\n                                    <mat-error *ngIf=\"creditnote.errors.required\">required</mat-error>\n                                  </mat-error>\n                            </div>\n                        </div>\n                        <div class=\"col s6 pr0\">\n                            <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input wp100  infix-bodr\">\n                                    <textarea  *ngIf=\"categorydetail.concernStatus==8\" class=\"h150\" matInput placeholder=\"Finance Remark\" name=\"fmremark\" #fmremark=\"ngModel\" [(ngModel)]=\"finance.fmremark\" [value]=\"finance.fmremark\" ></textarea>\n                                    <textarea *ngIf=\"categorydetail.concernStatus>8\" class=\"h150\" matInput placeholder=\"Finance Remark\" name=\"fmRemarks\" #fmRemarks=\"ngModel\" [(ngModel)]=\"categorydetail.fmRemarks\" [value]=\"categorydetail.fmRemarks\" readonly></textarea>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\" *ngIf=\"categorydetail.concernStatus==8\">\n                        <div class=\"col s12 padding0\">\n                            <div  class=\"cs-btn fixedd mt15 text-right\">\n                              <div class=\"in-btn\">\n                                <button mat-raised-button color=\"accent\" >Save</button>\n                              </div>\n                            </div>\n                          </div>\n                    </div>\n                </div>\n                </form>\n              </div>\n            </div> \n\n          <div class=\"sprate-box pt0 mt15\" *ngIf=\"categorydetail.concernType==2\">\n            <div class=\"cs-heading\">\n              <h2>Other Type Detail</h2>\n            </div>\n            <div class=\"row\">\n              <div class=\"col s8 pl0\">\n                <div class=\"from-fields\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input wp100 h-input infix-bodr8\">\n                      <textarea matInput   name=\"concernDetails\" #concernDetails=\"ngModel\"  [(ngModel)]=\"categorydetail.concernDetails\" readonly class=\"h200\"></textarea>\n                    </mat-form-field>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col s4 pr0\">\n                <div class=\"territory-info mt12\">\n                  <div class=\"head\">\n                    <h2>SalesRole</h2>\n                  </div>\n                  <div class=\"cs-checkbox\">\n                    <div class=\"checkbox-outer auto-height-scroll\">\n                      <section class=\"checkbox-inner  bodr0\">\n                        <mat-checkbox *ngFor=\"let role of categorydetail.concernRoles\"  class=\"check-list bg-none check-none check-none check-hover check-none\" style=\"cursor: unset;\">\n                          <div class=\"name-outer\">\n                            <div class=\"outer\">\n                              <div class=\"inner\">\n                                <div class=\"name-inner\">\n                                    <span *ngIf=\"role.role==6\">N</span>\n                                    <span *ngIf=\"role.role==7\">R</span>\n                                    <span *ngIf=\"role.role==8\">A</span>\n                                    <span *ngIf=\"role.role==10\">T</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"text-box\">\n                            <h2><span *ngIf=\"role.role==6\">National Manager</span><span *ngIf=\"role.role==7\">Regional Manager</span><span *ngIf=\"role.role==8\">Area Manager</span><span *ngIf=\"role.role==10\">Territory Incharge</span></h2>\n                          </div>\n                        </mat-checkbox>\n                      \n                      </section>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        <div class=\"row\">\n            <div class=\"col s12 padding0\">\n                <div  class=\"cs-btn fixedd mt15 text-right\">\n                  <div class=\"in-btn\">\n                    <button *ngIf='user.data.role==1 && categorydetail.concernStatus>4' mat-raised-button color=\"warn\" type=\"button\" (click)=\"processed()\" >Close</button>\n                  </div>\n                </div>\n              </div>\n        </div>\n        </div>  \n      </div>\n    </div>\n  </div>\n  \n</div>\n\n<div class=\"h50\"></div>\n\n"

/***/ }),

/***/ "./src/app/customer-concern/concern-detail/concern-detail.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/customer-concern/concern-detail/concern-detail.component.ts ***!
  \*****************************************************************************/
/*! exports provided: ConcernDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConcernDetailComponent", function() { return ConcernDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _update_concern_update_concern_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../update-concern/update-concern.component */ "./src/app/customer-concern/update-concern/update-concern.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../image-modal/image-modal.component */ "./src/app/customer-concern/image-modal/image-modal.component.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_10__);











var ConcernDetailComponent = /** @class */ (function () {
    function ConcernDetailComponent(db, router, route, toast, dialog, alrt, platformId) {
        var _this = this;
        this.db = db;
        this.router = router;
        this.route = route;
        this.toast = toast;
        this.dialog = dialog;
        this.alrt = alrt;
        this.platformId = platformId;
        this.concernReviews = [];
        this.concernDetail = [];
        this.draftDetail = [];
        this.user = {};
        this.isForward = false;
        this.concern_form = {};
        this.isProceed = true;
        this.other_form = {};
        this.prefitmentlist = [];
        this.pre_fitment = {};
        this.post_fitment = {};
        this.tmp_list = [];
        this.tmp_list1 = [];
        this.segmentList = [];
        this.finel_Array = [];
        this.categorylist = [];
        this.tmp_segmentList = [];
        this.product_list = [];
        this.partnumberlist = [];
        this.partnumberlist1 = [];
        this.rolelists = [];
        this.tmp_array = [];
        this.role = [];
        this.itemList = [];
        this.productlist = [];
        this.isAssignCheck = true;
        this.cartProductList = [];
        this.categorydetail = [];
        this.data = {};
        this.rolelistsales1 = [];
        this.tmp_categoryList = [];
        this.dburl = '';
        this.tmp_detail = [];
        this.isCart = false;
        this.partnoArray = [];
        this.cartArray = [];
        this.isStatus = false;
        this.temp = false;
        this.isItem = false;
        this.isIndex = -1;
        this.urls = [];
        this.tmp = false;
        this.isEdit = false;
        this.selectedFile = [];
        this.urlss = [];
        this.tmp_transport = [];
        this.documentData = {};
        this.productConcernsModel = [];
        this.isTrue = false;
        this.finance = {};
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            _this.concern_detail();
        });
    }
    ConcernDetailComponent.prototype.ngOnInit = function () {
        this.dburl = this.db.dburl;
        this.concern_form.product_type = 1;
    };
    ConcernDetailComponent.prototype.navigateList = function () {
        if (this.categorydetail.concernStatus == 2) {
            localStorage.setItem('concernListType', 'Submit');
            this.router.navigate(['/concern-list']);
        }
        if (this.categorydetail.concernStatus == 3) {
            localStorage.setItem('concernListType', 'Forward');
            this.router.navigate(['/concern-list']);
        }
        if (this.categorydetail.concernStatus == 4) {
            localStorage.setItem('concernListType', 'Approval');
            this.router.navigate(['/concern-list']);
        }
        if (this.categorydetail.concernStatus == 5) {
            localStorage.setItem('concernListType', 'Approved');
            this.router.navigate(['/concern-list']);
        }
        if (this.categorydetail.concernStatus == 6) {
            localStorage.setItem('concernListType', 'Rejected');
            this.router.navigate(['/concern-list']);
        }
        if (this.categorydetail.concernStatus == 7) {
            localStorage.setItem('concernListType', 'Document');
            this.router.navigate(['/concern-list']);
        }
        if (this.categorydetail.concernStatus == 8) {
            localStorage.setItem('concernListType', 'WH');
            this.router.navigate(['/concern-list']);
        }
        if (this.categorydetail.concernStatus == 9) {
            localStorage.setItem('concernListType', 'FM');
            this.router.navigate(['/concern-list']);
        }
    };
    ConcernDetailComponent.prototype.calculateAmountWH = function (whacceptqty, i) {
        this.isProceed = true;
        console.log(whacceptqty, i);
        if (whacceptqty >= 0) {
            if (whacceptqty == '') {
                whacceptqty = 0;
            }
            if (this.tmp_detail[i].qty >= whacceptqty) {
                this.tmp_detail[i].whrejectqty = parseInt(this.tmp_detail[i]['qty']) - parseInt(whacceptqty);
                console.log(this.tmp_detail[i].whrejectqty);
            }
            else {
                this.alrt.error("WHAccept Qty should be less than or Equal to calim Qty");
                this.tmp_detail[i].whrejectqty = '';
                this.tmp_detail[i].whacceptqty = 0;
                console.log(this.tmp_detail[i].whacceptqty);
            }
        }
        else {
            this.alrt.error("Qty should be 0 or greater than 0 ");
            this.tmp_detail[i].whrejectqty = '';
            this.tmp_detail[i].whacceptqty = 0;
        }
        for (var i_1 = 0; i_1 < this.tmp_detail.length; i_1++) {
            if (this.tmp_detail[i_1].whacceptqty != null) {
                this.isWHForward = true;
            }
            else {
                this.isWHForward = false;
                break;
            }
        }
        console.log(this.isWHForward);
    };
    ConcernDetailComponent.prototype.calculateAmount = function (acceptqty, i) {
        this.isProceed = true;
        console.log(acceptqty, i);
        if (acceptqty >= 0) {
            if (acceptqty == '') {
                acceptqty = 0;
            }
            if (this.tmp_detail[i].qty >= acceptqty) {
                this.tmp_detail[i].amount = parseInt(this.tmp_detail[i]['price']) * parseInt(acceptqty);
                this.tmp_detail[i].rejectqty = parseInt(this.tmp_detail[i]['qty']) - parseInt(acceptqty);
                console.log(this.tmp_detail[i].rejectqty);
            }
            else {
                this.alrt.error("Accept Qty should be less than or Equal to calim Qty");
                this.tmp_detail[i].rejectqty = '';
                this.tmp_detail[i].acceptqty = 0;
                this.tmp_detail[i].amount = 0;
                console.log(this.tmp_detail[i].acceptqty);
            }
        }
        else {
            this.alrt.error("Qty should be 0 or greater than 0 ");
            this.tmp_detail[i].rejectqty = '';
            this.tmp_detail[i].acceptqty = 0;
            this.tmp_detail[i].amount = 0;
            console.log(this.tmp_detail[i].amount);
        }
        for (var i_2 = 0; i_2 < this.tmp_detail.length; i_2++) {
            if (this.tmp_detail[i_2].acceptqty != null) {
                this.isForward = true;
            }
            else {
                this.isForward = false;
                break;
            }
        }
        console.log(this.isForward);
        for (var i_3 = 0; i_3 < this.tmp_detail.length; i_3++) {
            if (this.tmp_detail[i_3].acceptqty != this.tmp_detail[i_3].qty) {
                this.isProceed = false;
            }
        }
    };
    ConcernDetailComponent.prototype.concern_detail = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ concernId: this.id }, 'concern/list').subscribe(function (response) {
            console.log(response);
            _this.categorydetail = response['data'][0];
            console.log(_this.categorydetail);
            _this.loader = false;
            _this.totalItem = _this.categorydetail.productConcerns.length;
            console.log(_this.totalItem);
            for (var i = 0; i < _this.categorydetail.productConcerns.length; i++) {
                _this.tmp_detail.push({ "productConcernId": _this.categorydetail.productConcerns[i]['productConcernId'], "document": _this.categorydetail.productConcerns[i]['document'], "whrejectqty": _this.categorydetail.productConcerns[i]['whRejectedQuantity'], "whacceptqty": _this.categorydetail.productConcerns[i]['whAcceptedQuantity'], "whremark": _this.categorydetail.productConcerns[i]['whRemarks'], "rejectqty": _this.categorydetail.productConcerns[i]['rejectedQuantity'], "acceptqty": _this.categorydetail.productConcerns[i]['acceptedQuantity'], "dealerremark": _this.categorydetail.productConcerns[i]['networkRemarks'], "salesremark": _this.categorydetail.productConcerns[i]['salesRemarks'], "natureOfProblem": _this.categorydetail.productConcerns[i]['natureOfComplaint'], partNumber: _this.categorydetail.productConcerns[i]['partNumber'], productId: _this.categorydetail.productConcerns[i]['productId'], concernId: _this.categorydetail.productConcerns[i]['concernId'], price: _this.categorydetail.productConcerns[i]['rate'], segment: _this.categorydetail.productConcerns[i]['segmentCode'], category: _this.categorydetail.productConcerns[i]['category'], qty: _this.categorydetail.productConcerns[i]['qunatity'], amount: _this.categorydetail.productConcerns[i]['netAmount'], tmpqty: _this.categorydetail.productConcerns[i]['qunatity'], tmpamount: _this.categorydetail.productConcerns[i]['netAmount'], invoice: _this.categorydetail.productConcerns[i]['invoiceNumber'], date: _this.categorydetail.productConcerns[i]['mfgDate'], application: _this.categorydetail.productConcerns[i]['application'] });
                if (_this.categorydetail.productConcerns[i].qunatity != _this.categorydetail.productConcerns[i].acceptedQuantity) {
                    _this.isProceed = false;
                }
            }
            console.log(_this.tmp_detail);
            for (var i = 0; i < _this.categorydetail.productConcerns.length; i++) {
                if (_this.categorydetail.productConcerns[i].acceptedQuantity != null) {
                    _this.isForward = true;
                }
                else {
                    _this.isForward = false;
                    break;
                }
            }
            console.log(_this.isForward);
            for (var i = 0; i < _this.categorydetail.productConcerns.length; i++) {
                if (_this.categorydetail.productConcerns[i].document) {
                    _this.tmp_detail[i].isImage = true;
                    console.log("hii");
                }
                _this.addCart(_this.tmp_detail[i], i);
            }
            _this.categorydetail.totalQty = 0;
            _this.categorydetail.totalAmount = 0;
            for (var i = 0; i < _this.categorydetail.productConcerns.length; i++) {
                if (_this.categorydetail.concernType == 1) {
                    console.log(_this.categorydetail.productConcerns[i].netAmount, _this.categorydetail.productConcerns[i].qunatity);
                    _this.categorydetail.totalQty = _this.categorydetail.totalQty + _this.categorydetail.productConcerns[i].qunatity;
                    _this.categorydetail.totalAmount = _this.categorydetail.totalAmount + _this.categorydetail.productConcerns[i].netAmount;
                }
            }
        });
    };
    ConcernDetailComponent.prototype.addCart = function (product, index) {
        console.log(product);
        if (this.concern_form.product_type == 1) {
            if (product.qty) {
                if (this.tmp_array.length == 0) {
                    this.tmp_array.push({ category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'] });
                    this.concernDetail.push({ "whrejectqty": product['whrejectqty'], "whacceptqty": product['whacceptqty'], "whremark": product['whremark'], "productConcernId": product['productConcernId'], category: product['category'], productId: product['productId'], price: product['price'], qty: product['qty'], amount: product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'] });
                }
                else {
                    //  const idIndex=this.concernDetail.findIndex(row => row.productId==product.productId)
                    var idIndex = -1;
                    console.log(idIndex);
                    if (idIndex != -1) {
                        console.log('check');
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        console.log(itemIndex);
                        if (itemIndex != -1) {
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) - parseInt(this.concernDetail[idIndex].tmpqty);
                            this.tmp_array[itemIndex].amount = parseInt(this.tmp_array[itemIndex].amount) - parseInt(this.concernDetail[idIndex].tmpamount);
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) + parseInt(product.qty);
                            this.tmp_array[itemIndex].amount = parseInt(product.amount) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                        this.concernDetail[idIndex]['qty'] = parseInt(product.qty);
                        this.concernDetail[idIndex]['tmpqty'] = parseInt(product.qty);
                        this.concernDetail[idIndex]['amount'] = parseInt(product.amount);
                        this.concernDetail[idIndex]['tmpamount'] = parseInt(product.amount);
                    }
                    if (idIndex === -1) {
                        this.concernDetail.push({ "whrejectqty": product['whrejectqty'], "whacceptqty": product['whacceptqty'], "whremark": product['whremark'], "productConcernId": product['productConcernId'], category: product['category'], "productId": product.productId, "qty": product.qty, "price": product.price, "amount": product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpamount: product['amount'], tmpqty: product['qty'], });
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        if (itemIndex === -1) {
                            this.tmp_array.push({ category: product['category'], qty: product['qty'], amount: product['amount'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'], });
                        }
                        else {
                            console.log('checkccc');
                            this.tmp_array[itemIndex].qty = parseInt(product['qty']) + parseInt(this.tmp_array[itemIndex].qty);
                            this.tmp_array[itemIndex].amount = parseInt(product['amount']) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                    }
                }
                console.log(this.tmp_array);
                console.log(this.concernDetail);
                if (this.tmp_array) {
                    this.concern_form.info = true;
                    console.log(this.concern_form);
                }
            }
            else {
                this.alrt.error("Some Fields are Empty Please Fill Them First");
            }
        }
        else {
            if (product.qty) {
                if (this.tmp_array.length == 0) {
                    this.tmp_array.push({ category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'], statusName: product['statusName'], natureOfProblem: product['natureOfComplaint'] });
                    this.concernDetail.push({ "whrejectqty": product['whrejectqty'], "whacceptqty": product['whacceptqty'], "whremark": product['whremark'], "productConcernId": product['productConcernId'], category: product['category'], productId: product['productId'], price: product['price'], qty: product['qty'], amount: product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'], statusName: product['statusName'], natureOfProblem: product['natureOfComplaint'] });
                }
                else {
                    var idIndex = this.concernDetail.findIndex(function (row) { return row.productId == product.productId; });
                    console.log(idIndex);
                    if (idIndex != -1) {
                        console.log('check');
                        console.log(this.finel_Array[idIndex]);
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        console.log(itemIndex);
                        if (itemIndex != -1) {
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) - parseInt(this.concernDetail[idIndex].tmpqty);
                            this.tmp_array[itemIndex].amount = parseInt(this.tmp_array[itemIndex].amount) - parseInt(this.concernDetail[idIndex].tmpamount);
                            console.log(this.concernDetail[idIndex]);
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) + parseInt(product.qty);
                            this.tmp_array[itemIndex].amount = parseInt(product.amount) + parseInt(this.tmp_array[itemIndex].amount);
                            console.log(this.tmp_array[itemIndex]);
                        }
                        this.concernDetail[idIndex]['qty'] = parseInt(product.qty);
                        this.concernDetail[idIndex]['amount'] = parseInt(product.amount);
                    }
                    if (idIndex === -1) {
                        this.concernDetail.push({ "whrejectqty": product['whrejectqty'], "whacceptqty": product['whacceptqty'], "whremark": product['whremark'], "productConcernId": product['productConcernId'], category: product['category'], "productId": product.productId, "qty": product.qty, "price": product.price, "amount": product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpamount: product['amount'], tmpqty: product['qty'], statusName: product['statusName'], natureOfProblem: product['natureOfComplaint'] });
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        if (itemIndex === -1) {
                            this.tmp_array.push({ category: product['category'], qty: product['qty'], amount: product['amount'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'], statusName: product['statusName'], natureOfProblem: product['natureOfComplaint'] });
                        }
                        else {
                            console.log('checkccc');
                            this.tmp_array[itemIndex].qty = parseInt(product['qty']) + parseInt(this.tmp_array[itemIndex].qty);
                            this.tmp_array[itemIndex].amount = parseInt(product['amount']) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                    }
                }
                console.log(this.tmp_array);
                console.log(this.concernDetail);
                if (this.tmp_array) {
                    this.concern_form.info = true;
                    console.log(this.concern_form);
                }
            }
            else {
                this.alrt.error("Some Fields are Empty Please Fill Them First");
            }
        }
    };
    ConcernDetailComponent.prototype.addProduct = function (kk) {
        console.log(kk);
        this.isCart = true;
        if (this.concern_form.product_type == 1) {
            for (var i = 0; i < this.productlist.length; i++) {
                if (this.productlist[i].datacheck == true) {
                    console.log('hii');
                    this.cartArray.push(this.productlist[i]);
                    if (this.productlist[i].qty && this.productlist[i].invoice && this.productlist[i].date) {
                        this.addCart(this.productlist[i], i);
                    }
                    else {
                        console.log('test');
                        this.partnoArray.push(this.productlist[i].partNumber);
                    }
                }
            }
            console.log(this.partnoArray);
            if (this.partnoArray.length) {
                this.alrt.error("Some field are Empty Please Fill Them First");
            }
            console.log(this.cartArray);
        }
        else {
            for (var i = 0; i < this.productlist.length; i++) {
                if (this.productlist[i].datacheck == true) {
                    console.log('hii');
                    this.cartArray.push(this.productlist[i]);
                    if (this.productlist[i].qty) {
                        this.addCart(this.productlist[i], i);
                    }
                    else {
                        console.log('test');
                        this.partnoArray.push(this.productlist[i].partNumber);
                    }
                }
            }
            console.log(this.partnoArray);
            if (this.partnoArray.length) {
                this.alrt.error("Some field are Empty Please Fill Them First");
            }
            console.log(this.cartArray);
        }
    };
    ConcernDetailComponent.prototype.removeFromCart = function (index) {
        var _this = this;
        this.temp = false;
        this.alrt.delete("Product").then(function (result) {
            if (result) {
                console.log(_this.tmp_array[index]['category']);
                _this.concernDetail = _this.concernDetail.filter(function (row) { return row.category != _this.tmp_array[index]['category']; });
                _this.temp = true;
            }
            if (_this.temp) {
                _this.tmp_array.splice(index, 1);
            }
        });
    };
    ConcernDetailComponent.prototype.Show_Item = function (category, index) {
        console.log(this.tmp_detail);
        for (var i = 0; i < this.tmp_detail.length; i++) {
            this.tmp_detail[i].datacheck = false;
        }
        if (this.isIndex != index) {
            this.isItem = true;
            this.itemList = [];
        }
        else {
            this.isItem = !this.isItem;
        }
        if (this.isItem) {
            this.isIndex = index;
            for (var i = 0; i < this.tmp_detail.length; i++) {
                if (category === this.tmp_detail[i]['category']) {
                    this.itemList.push(this.tmp_detail[i]);
                }
            }
        }
        else {
            this.itemList = [];
        }
    };
    ConcernDetailComponent.prototype.openImageDialog = function (index) {
        console.log(index);
        console.log(this.tmp_detail[index]);
        var dialogRef = this.dialog.open(_image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_9__["ImageModalComponent"], {
            width: '500px',
            data: {
                document: this.tmp_detail[index].document,
                concernStatus: this.categorydetail.concernStatus
            }
        });
    };
    ConcernDetailComponent.prototype.productDetail = function (category) {
        var _this = this;
        var dialogRef = this.dialog.open(_update_concern_update_concern_component__WEBPACK_IMPORTED_MODULE_7__["UpdateConcernComponent"], {
            width: '1600px',
            data: {
                product: this.concernDetail,
                category: category,
                id: this.id,
                concern: this.concern_form
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
            var tmpCartArray = _this.db.getData();
            console.log(tmpCartArray);
            if (tmpCartArray) {
                _this.tmp_array = [];
                _this.concernDetail = [];
                _this.showInCart(tmpCartArray);
            }
        });
    };
    ConcernDetailComponent.prototype.showInCart = function (orderArray) {
        if (orderArray === void 0) { orderArray = []; }
        console.log(orderArray);
        for (var i = 0; i < orderArray.length; i++) {
            this.addCart(orderArray[i], i);
        }
        console.log(this.tmp_array);
    };
    ConcernDetailComponent.prototype.edit = function () {
        this.isEdit = true;
        console.log('isEdit', this.isEdit);
    };
    ConcernDetailComponent.prototype.insertDocument = function (data) {
        var _this = this;
        this.urlss = [];
        this.selectedFile = [];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urlss.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urlss);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        console.log(this.selectedFile);
    };
    ConcernDetailComponent.prototype.updateTransport = function () {
        var _this = this;
        for (var i = 0; i < this.selectedFile.length; i++) {
            this.documentData.action = 1;
            this.documentData.binaryData = this.urlss[i];
            this.documentData.documentType = 1;
            this.documentData.documentName = this.selectedFile[i].name;
            this.documentData.referenceId = 0;
            this.documentData.fileName = "Document" + i + ".pdf", this.selectedFile[i];
            this.documentData.iconName = "DocumentIcon" + i + ".pdf", this.selectedFile[i];
            console.log(this.documentData);
        }
        console.log('hii');
        this.loader = true;
        this.db.fetchData({
            "concernId": this.id,
            "transporterName": this.categorydetail.transporterName,
            "modeOfTransport": this.categorydetail.modeOfTransport,
            "numberOfBoxes": this.categorydetail.numberOfBoxes,
            "lrNumber": this.categorydetail.lrNumber,
            "document": this.documentData,
            "eWayBillNumber": this.categorydetail.eWayBillNumber
        }, 'concern/transport').subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            _this.loader = false;
            _this.isEdit = false;
            if (_this.message == "Transport Details updated successfully") {
                _this.concern_detail();
                _this.toast.openSucess('Transport Details updated successfully', '');
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
            ;
        });
    };
    ConcernDetailComponent.prototype.submit = function (status) {
        var _this = this;
        this.loader = true;
        if (status == 2) {
            for (var i = 0; i < this.tmp_detail.length; i++) {
                this.tmp_detail[i].verified = false;
            }
        }
        else {
            for (var i = 0; i < this.tmp_detail.length; i++) {
                this.tmp_detail[i].verified = true;
            }
        }
        if (this.user.data.role == 16) {
            this.whuserId = this.user.data.userId;
        }
        else if (this.user.data.role == 17) {
            this.fmuserId = this.user.data.userId;
        }
        if (this.categorydetail.concernType == 1) {
            console.log(this.tmp_detail);
            for (var i = 0; i < this.tmp_detail.length; i++) {
                this.productConcernsModel.push({
                    "whVerifiedBy": this.whuserId,
                    "fmVerifiedBy": this.fmuserId,
                    "productConcernId": this.tmp_detail[i].productConcernId,
                    "concernId": this.tmp_detail[i].concernId,
                    "productId": this.tmp_detail[i].productId,
                    "segmentCode": this.tmp_detail[i].segment,
                    "category": this.tmp_detail[i].category,
                    "partNumber": this.tmp_detail[i].partNumber,
                    "application": this.tmp_detail[i].application,
                    "mfgDate": this.tmp_detail[i].date,
                    "invoiceNumber": this.tmp_detail[i].invoice,
                    "qunatity": this.tmp_detail[i].qty,
                    "acceptedQuantity": this.tmp_detail[i].acceptqty,
                    "rejectedQuantity": this.tmp_detail[i].rejectqty,
                    "networkRemarks": this.tmp_detail[i].dealerremark,
                    "salesRemarks": this.tmp_detail[i].salesremark,
                    "whAcceptedQuantity": this.tmp_detail[i].whacceptqty,
                    "whRejectedQuantity": this.tmp_detail[i].whrejectqty,
                    "whRemarks": this.tmp_detail[i].whremark,
                    "rate": this.tmp_detail[i].price,
                    "document": this.tmp_detail[i].document,
                    "netAmount": this.tmp_detail[i].amount,
                    "verified": this.tmp_detail[i].verified
                });
            }
            this.db.fetchData({ "concernId": this.id,
                "concernType": this.categorydetail.concernType,
                "raisedByNetworkId": this.categorydetail.raisedByNetworkId,
                "concernStatus": status,
                "productConcernType": this.categorydetail.productConcernType, "productConcernsModel": this.productConcernsModel }, 'concern/update').subscribe(function (response) {
                console.log(response);
                _this.message = response['message'];
                _this.loader = false;
                if (_this.message == "Concern updated successfully") {
                    _this.toast.openSucess('Customer Concern status change successfully', '');
                    if (status == 3) {
                        localStorage.setItem('concernListType', 'Forward');
                        _this.router.navigate(['/concern-list']);
                    }
                    if (status == 4) {
                        localStorage.setItem('concernListType', 'Approval');
                        _this.router.navigate(['/concern-list']);
                    }
                    if (status == 5) {
                        localStorage.setItem('concernListType', 'Approved');
                        _this.router.navigate(['/concern-list']);
                    }
                    if (status == 6) {
                        localStorage.setItem('concernListType', 'Rejected');
                        _this.router.navigate(['/concern-list']);
                    }
                    if (status == 7) {
                        localStorage.setItem('concernListType', 'Document');
                        _this.router.navigate(['/concern-list']);
                    }
                    if (status == 8) {
                        localStorage.setItem('concernListType', 'WH');
                        _this.router.navigate(['/concern-list']);
                    }
                }
                else {
                    _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                }
                ;
                for (var i = 0; i < _this.itemList.length; i++) {
                    _this.itemList[i].datacheck = false;
                    console.log(_this.itemList[i].datacheck);
                }
            });
        }
        else {
            this.concernReviews.push({ "concernId": this.id,
                "natureOfComplaint": this.categorydetail.problem,
                "concernProductStatus": this.categorydetail.status });
            this.db.fetchData({ "concernId": this.id, "concernReviews": this.concernReviews }, 'concern/review').subscribe(function (response) {
                console.log(response);
                _this.message = response['message'];
                _this.loader = false;
                if (_this.message == "Concern updated successfully") {
                    _this.toast.openSucess('Customer Concern Updated Sucessfully', '');
                }
                else {
                    _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                }
                ;
            });
        }
    };
    ConcernDetailComponent.prototype.updateFinance = function () {
        var _this = this;
        console.log(this.finance);
        this.db.fetchData({
            "concernId": this.id,
            "fmVerifiedBy": this.user.data.userId,
            "fmRemarks": this.finance.fmremark,
            "creditNote": this.finance.creditnote
        }, 'concern/creditnote').subscribe(function (response) {
            console.log(response);
            if (response['message'] == "Concern updated successfully") {
                localStorage.setItem('concernListType', 'FM');
                _this.router.navigate(['/concern-list']);
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
            ;
        });
    };
    ConcernDetailComponent.prototype.setFocus = function (form) {
        console.log("hii");
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_8__["isPlatformBrowser"])(this.platformId)) {
                        jquery__WEBPACK_IMPORTED_MODULE_10__('#' + key).focus();
                    }
                    break;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
    };
    ConcernDetailComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    ConcernDetailComponent.prototype.processed = function () {
        var _this = this;
        this.alrt.confirmation('Concern Status').then(function (result) {
            if (result) {
                console.log(_this.id);
                _this.db.fetchData('', 'concern/processed' + '?concernId=' + _this.id).subscribe(function (response) {
                    console.log(response);
                });
            }
        });
    };
    ConcernDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-concern-detail',
            template: __webpack_require__(/*! ./concern-detail.component.html */ "./src/app/customer-concern/concern-detail/concern-detail.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"],
            src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"],
            _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"],
            src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"],
            Object])
    ], ConcernDetailComponent);
    return ConcernDetailComponent;
}());



/***/ }),

/***/ "./src/app/customer-concern/concern-list/concern-list.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/customer-concern/concern-list/concern-list.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\" style=\"min-width: auto;\">\n      <img src=\"assets/img/concern.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Concern </h2>\n        <p>Total {{concernList.length}}</p>\n      </div>\n    </div>\n    <div class=\"tabs right-tab\">\n      <ul>\n        <!-- <li  *ngIf='user.data.userType==1'><a  [ngClass]=\"{'active':concernActive==true}\" (click)=\"concern_list('')\">Concern</a></li> -->\n        <li *ngIf='user.data.userType==3'><a  [ngClass]=\"{'active':draftActive==true}\" (click)=\"concern_list(1)\">DRAFT</a></li>\n        <li *ngIf='user.data.userType==3'><a [ngClass]=\"{'active':underActive==true}\" (click)=\"concern_list(2)\">UNDER VERIFICATION</a></li>\n        <li  *ngIf='user.data.userType==3'><a [ngClass]=\"{'active':waitActive==true}\"  (click)=\"concern_list(3)\">WAITING FOR  APPROVAL</a></li>\n        <li  *ngIf='user.data.userType==3'><a  [ngClass]=\"{'active':concernNumber==true}\" (click)=\"concern_list(4)\">WAITING FOR CONCERN NO.</a></li>\n        <li *ngIf='user.data.userType==3'><a   [ngClass]=\"{'active':concernActive==true}\" (click)=\"concern_list(5)\">APPROVED</a></li>\n        <li *ngIf='user.data.userType==3'><a [ngClass]=\"{'active':rejectActive==true}\"  (click)=\"concern_list(6)\">REJECTED</a></li>\n        <li *ngIf='user.data.userType==2'><a [ngClass]=\"{'active':draftActive==true}\"  (click)=\"concern_list(1)\">DRAFT</a></li>\n        <li  *ngIf='user.data.userType==2'><a  [ngClass]=\"{'active':underActive==true}\"  (click)=\"concern_list(2)\">PENDING VERIFICATION</a></li>\n        <li  *ngIf='user.data.userType==2'><a [ngClass]=\"{'active':waitActive==true}\" (click)=\"concern_list(3)\">WAITING FOR APPROVAL</a></li>\n        <li  *ngIf='user.data.userType==2'><a [ngClass]=\"{'active':concernNumber==true}\"  (click)=\"concern_list(4)\">WAITING FOR CONCERN NO.</a></li>\n        <li *ngIf='user.data.userType==2'><a [ngClass]=\"{'active':concernActive==true}\" (click)=\"concern_list(5)\">APPROVED</a></li>\n        <li  *ngIf='user.data.userType==2'><a  [ngClass]=\"{'active':rejectActive==true}\"  (click)=\"concern_list(6)\">REJECTED</a></li>\n        <li  *ngIf='user.data.role==16'><a  [ngClass]=\"{'active':whPending==true}\"  (click)=\"concern_list(7)\">PENDING VERIFICATION</a></li>\n        <li  *ngIf='user.data.role==16'><a  [ngClass]=\"{'active':whVerified==true}\"  (click)=\"concern_list(8)\">WAREHOUSE VERIFIED</a></li>\n        <li  *ngIf='user.data.role==16'><a  [ngClass]=\"{'active':fmVerified==true}\"  (click)=\"concern_list(9)\">FINANCE VERIFIED</a></li>\n        <li  *ngIf='user.data.role==17'><a  [ngClass]=\"{'active':whVerified==true}\"  (click)=\"concern_list(8)\">PENDING VERIFICATION</a></li>\n        <li  *ngIf='user.data.role==17'><a  [ngClass]=\"{'active':fmVerified==true}\"  (click)=\"concern_list(9)\">FINANCE VERIFIED</a></li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12 padding0\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table>\n                  <tr >\n                    <th class=\"w100\">Date</th>\n                    <th class=\"w170\" *ngIf=\"status!=1\">CreatedBy </th>\n                    <th *ngIf=\"user.data.userType!=3\">Company Name</th>\n                    <th *ngIf=\"user.data.userType==1 || status==5\">Concern Number</th>\n                    <th class=\"w140\">Concern Type</th>\n                    <th class=\"w60 text-center\">Total Item</th>\n                    <th class=\"w60 text-center\">Total Qty</th>\n                    <th class=\"w80 text-right\">Amount</th>\n                    <th class=\"w110\" *ngIf=\"(status==5 || status==7||status==8 || status==9) && (user.data.userType==3 ||user.data.userType==2 || user.data.userType==1)\">Status</th>\n                    <th class=\"w80\" *ngIf=\"user.data.role==1\">Status</th>\n                    <th class=\"w140\" *ngIf=\"status!=5 &&status!=7&&status!=8 &&status!=9 &&status!=1 && user.data.userType==3\">Assigned Sales</th>\n                    <th class=\"w120 text-center\">Action</th>\n                    <!-- <th class=\"w130\">&nbsp;</th> -->\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let concerns of tmp_concern\">\n                    <td class=\"w100\">{{concerns.createdOn|date:'d MMM y'}}</td>\n                    <td class=\"w170\" *ngIf=\"status!=1\">{{concerns.createdByName}}</td>\n                    <td *ngIf=\"user.data.userType!=3\">{{concerns.networkEstablishment}}</td>\n                    <td *ngIf=\"status==5 || user.data.userType==1\">\n                      <a mat-button class=\"link-btn\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                        {{concerns.claimNo}}\n                      </a>\n                    </td>\n                    \n                    <td class=\"w140\">{{concerns.concernTypeName}}<span *ngIf=\"concerns.productConcernType==1\">/Pre-Fitment</span><span *ngIf=\"concerns.productConcernType==2\">/Post-Fitment</span></td>\n                    <td class=\"w60 text-center\"><span *ngIf='concerns.concernTypeName==\"Product\"'>{{concerns.productConcerns.length}}</span><span *ngIf='concerns.concernTypeName==\"Other\"'>1</span></td>\n                    <td class=\"w60 text-center\">{{concerns.totalQty}}</td>\n                    <td class=\"w80 text-right\" >&#x20B9; {{concerns.totalAmount}}</td>\n                    <!-- <td class=\"w150\"></td> -->\n                    <td class=\"w110\" *ngIf=\"(status==5||status==7||status==8 ||status==9)&&(user.data.userType==3 ||user.data.userType==2 ||user.data.userType==1)\" >\n                     <span *ngIf=\"concerns.concernStatus==5\">Approved</span>\n                     <span *ngIf=\"concerns.concernStatus==7\">Document Updated</span>\n                     <span *ngIf=\"concerns.concernStatus==8\">WareHouse Verified</span>\n                     <span *ngIf=\"concerns.concernStatus==9\">Finace Verified</span>\n                    </td>\n                    <td class=\"w80\" *ngIf=\"user.data.role==1\" >\n                      <span *ngIf=\"concerns.concernStatus==5\">Approved</span>\n                      <span *ngIf=\"concerns.concernStatus==7\">Document Updated</span>\n                      <span *ngIf=\"concerns.concernStatus==8\">WareHouse Verified</span>\n                      <span *ngIf=\"concerns.concernStatus==9\">Finace Verified</span>\n                     </td>\n                    <td class=\"w140\" *ngIf=\"status!=5 &&status!=7&&status!=8 &&status!=9 && status!=1 && user.data.userType==3\" >\n                      <span *ngFor=\"let sales of user.data.distributerNetwork.networkSalesUsers\">{{sales.salesUserName}}</span>\n                    </td>\n                    \n                    <td class=\"w120\" >\n                      <div class=\"action-btns default-action\" style=\"right: auto;\"> \n                        <!-- <a *ngIf='status==3' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                          <i class=\"material-icons\">remove_red_eye</i> View</a> -->\n                          \n                          <a *ngIf='status==1' mat-button class=\"view\" routerLink=\"/draft-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                            <i class=\"material-icons\">remove_red_eye</i> View</a>\n                            <a *ngIf='status==5 && user.data.userType==3' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                              <i class=\"material-icons\">remove_red_eye</i> View</a>\n                              <a *ngIf='status==2 && user.data.userType==3' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                <i class=\"material-icons\">remove_red_eye</i> View</a>\n                              <a *ngIf='status==3 && user.data.userType==3' mat-button class=\"view\" routerLink=\"/draft-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                <i class=\"material-icons\">remove_red_eye</i> View</a>\n                                <a *ngIf='status==4 && user.data.userType==3' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                  <i class=\"material-icons\">remove_red_eye</i> View</a>\n                                  <a *ngIf='status==6 && user.data.userType==3' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                    <i class=\"material-icons\">remove_red_eye</i> View</a>\n                              <a *ngIf='status==2 && user.data.userType==2' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                <i class=\"material-icons\">remove_red_eye</i> View</a>\n                                <a *ngIf='status==3 && user.data.userType==2' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                  <i class=\"material-icons\">remove_red_eye</i> View</a>\n                                <a *ngIf='status==4 && user.data.userType==2' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                  <i class=\"material-icons\">remove_red_eye</i> View</a>\n                                  <a *ngIf='(status==5||status==7||status==8||status==9) && user.data.userType==2' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                    <i class=\"material-icons\">remove_red_eye</i> View</a>\n                                    <a *ngIf='status==6 && user.data.userType==2' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                      <i class=\"material-icons\">remove_red_eye</i> View</a>\n                                      <a *ngIf='user.data.userType==1' mat-button class=\"view\" routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                        <i class=\"material-icons\">remove_red_eye</i> View</a>\n\n                                        <a *ngIf='status==1'(click)=\"delete_concern(concerns.concernId)\" mat-button class=\"delete\">\n                                          <i class=\"material-icons\">delete</i>Delete </a>\n                              </div>    \n                              \n                              <!-- <a *ngIf='status==3' class=\"link-btn underline\" mat-button routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                View</a>\n                                \n                                <a *ngIf='status==1' class=\"link-btn underline\" mat-button  routerLink=\"/draft-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                  View</a>\n                                  \n                                  \n                                  <a *ngIf='status==2 && user.data.userType==3' class=\"link-btn underline\" mat-button  routerLink=\"/draft-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                    View</a>\n                                    \n                                    \n                                    <a *ngIf='status==2 && user.data.userType==2' class=\"link-btn underline\" mat-button routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">\n                                      View</a> -->\n                                      \n                                    </td>\n                                    \n                                  </tr>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div *ngIf=\"div\" class=\"data-not-available\" >\n                      <div class=\"outer\">\n                        <div class=\"iinear\">\n                          <div class=\"figure\" matRipple>\n                            <div class=\"header\">\n                              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                            </div>\n                            \n                            <div class=\"description\">\n                              <!-- <div class=\"cs-heading\">\n                                <h2>No Complain List</h2>\n                              </div> -->\n                              <div class=\"img\">\n                                <i class=\"material-icons\">error_outline</i>\n                              </div>\n                              <div class=\"psc\">\n                                <p>data not available</p>\n                                <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div class=\"fixed-multibtn-botm\" *ngIf='((user.data.userType==3) ||  (user.data.userType==2))'>\n                    <ul>\n                      <li><a matTooltip=\"Add New\" matRipple><i class=\"material-icons\" routerLink=\"/add-concern\" routerLinkActive=\"active\" >add</i></a></li>\n                    </ul>\n                  </div>\n                  \n                </div>\n                \n                <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/customer-concern/concern-list/concern-list.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/customer-concern/concern-list/concern-list.component.ts ***!
  \*************************************************************************/
/*! exports provided: ConcernListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConcernListComponent", function() { return ConcernListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







// import { userInfo } from 'os';
// import { userInfo } from 'os';
var ConcernListComponent = /** @class */ (function () {
    function ConcernListComponent(db, router, dialog, route, toast, dia) {
        this.db = db;
        this.router = router;
        this.dialog = dialog;
        this.route = route;
        this.toast = toast;
        this.dia = dia;
        this.concernList = [];
        this.user = [];
        this.whPending = false;
        this.whVerified = false;
        this.fmVerified = false;
        this.draftActive = false;
        this.concernActive = false;
        this.rejectActive = false;
        this.underActive = false;
        this.waitActive = false;
        this.concernNumber = false;
        this.tmp_concern = [];
        this.loader = false;
        this.div = false;
        this.concernStatuses = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userId = this.user.data.userId;
        var concernListType = localStorage.getItem('concernListType') || '';
        console.log(concernListType);
        if (this.user.data.userType == 2 && concernListType == "") {
            console.log("sales");
            this.concern_list(2);
        }
        else if (this.user.data.userType == 3 && concernListType == "") {
            console.log("Dist");
            this.concern_list(1);
        }
        else if (this.user.data.role == 16 && concernListType == "") {
            this.concern_list(7);
        }
        else if (this.user.data.role == 17 && concernListType == "") {
            this.concern_list(8);
        }
        else if (this.user.data.userType == 1 && concernListType == "") {
            console.log("admin");
            this.concern_list(20);
        }
        else if (concernListType == 'Draft') {
            this.concern_list(1);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'Submit') {
            this.concern_list(2);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'Forward') {
            this.concern_list(3);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'Approval') {
            this.concern_list(4);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'Approved') {
            this.concern_list(5);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'Rejected') {
            this.concern_list(6);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'Document' && (this.user.data.userType == 3 || this.user.data.userType == 2)) {
            this.concern_list(5);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'Document' && this.user.data.userType == 1) {
            this.concern_list(7);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'WH' && this.user.data.userType == 1) {
            this.concern_list(8);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'WH' && (this.user.data.userType == 3 || this.user.data.userType == 2)) {
            this.concern_list(5);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'FM' && this.user.data.userType == 1) {
            this.concern_list(9);
            localStorage.removeItem('concernListType');
        }
        else if (concernListType == 'FM' && (this.user.data.userType == 3 || this.user.data.userType == 2)) {
            this.concern_list(5);
            localStorage.removeItem('concernListType');
        }
    }
    ConcernListComponent.prototype.ngOnInit = function () {
    };
    ConcernListComponent.prototype.concern_list = function (status) {
        var _this = this;
        this.concernStatuses = [];
        this.status = status;
        this.loader = true;
        this.div = false;
        this.tmp_concern = [];
        console.log(status);
        if (status == 1) {
            this.whPending = false;
            this.status = status;
            this.tmp_concern = [];
            this.rejectActive = false;
            this.waitActive = false;
            this.underActive = false;
            this.concernActive = false;
            this.concernNumber = false;
            this.whVerified = false;
            this.fmVerified = false;
            console.log(this.draftActive);
            this.concernStatuses.push(status);
            this.db.fetchData({ "createdBy": this.userId, "currentPage": 1, "concernStatuses": this.concernStatuses,
                "pageSize": 500 }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.draftActive = true;
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
        else if (status == 2) {
            this.status = status;
            this.tmp_concern = [];
            this.whPending = false;
            this.whVerified = false;
            this.fmVerified = false;
            this.waitActive = false;
            this.rejectActive = false;
            this.draftActive = false;
            this.concernActive = false;
            this.concernNumber = false;
            console.log(this.underActive);
            this.loader = true;
            this.concernStatuses.push(status);
            this.db.fetchData({ "currentPage": 1, "concernStatuses": this.concernStatuses,
                "pageSize": 500 }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.underActive = true;
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    console.log(_this.concernList);
                    console.log(_this.tmp_concern);
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
        else if (status == 3) {
            this.status = status;
            this.tmp_concern = [];
            this.whPending = false;
            this.whVerified = false;
            this.fmVerified = false;
            this.underActive = false;
            this.rejectActive = false;
            this.draftActive = false;
            this.concernActive = false;
            this.concernNumber = false;
            this.waitActive = true;
            this.loader = true;
            this.concernStatuses.push(status);
            this.db.fetchData({ "currentPage": 1,
                "pageSize": 500, "concernStatuses": this.concernStatuses }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    console.log(_this.concernList);
                    console.log(_this.tmp_concern);
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
        else if (status == 4) {
            this.status = status;
            this.tmp_concern = [];
            this.whPending = false;
            this.underActive = false;
            this.rejectActive = false;
            this.draftActive = false;
            this.concernActive = false;
            this.whVerified = false;
            this.fmVerified = false;
            this.waitActive = false;
            this.concernNumber = true;
            this.loader = true;
            this.concernStatuses.push(status);
            this.db.fetchData({ "currentPage": 1, "concernStatuses": this.concernStatuses,
                "pageSize": 500 }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    console.log(_this.concernList);
                    console.log(_this.tmp_concern);
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
        else if (status == 5) {
            this.status = status;
            this.tmp_concern = [];
            this.whPending = false;
            this.rejectActive = false;
            this.waitActive = false;
            this.underActive = false;
            this.draftActive = false;
            this.concernNumber = false;
            this.concernActive = true;
            this.whVerified = false;
            this.fmVerified = false;
            this.loader = true;
            this.concernStatuses = [5, 7, 8, 9];
            this.db.fetchData({ "currentPage": 1, "concernStatuses": this.concernStatuses,
                "pageSize": 500 }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    console.log(_this.concernList);
                    console.log(_this.tmp_concern);
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
        else if (status == 6) {
            this.status = status;
            this.tmp_concern = [];
            this.whPending = false;
            this.whVerified = false;
            this.fmVerified = false;
            this.waitActive = false;
            this.underActive = false;
            this.draftActive = false;
            this.concernActive = false;
            this.concernNumber = false;
            this.rejectActive = true;
            this.loader = true;
            this.concernStatuses.push(status);
            this.db.fetchData({ "currentPage": 1, "concernStatuses": this.concernStatuses,
                "pageSize": 500 }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    console.log(_this.concernList);
                    console.log(_this.tmp_concern);
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
        else if (status == 7) {
            this.tmp_concern = [];
            this.whVerified = false;
            this.fmVerified = false;
            this.rejectActive = false;
            this.waitActive = false;
            this.draftActive = false;
            this.concernActive = false;
            this.concernNumber = false;
            this.underActive = false;
            this.whPending = true;
            this.loader = true;
            this.concernStatuses.push(status);
            this.db.fetchData({ "currentPage": 1, "concernStatuses": this.concernStatuses,
                "pageSize": 500 }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    console.log(_this.concernList);
                    console.log(_this.tmp_concern);
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
        else if (status == 8) {
            this.tmp_concern = [];
            this.whVerified = true;
            this.whPending = false;
            ;
            this.fmVerified = false;
            this.rejectActive = false;
            this.waitActive = false;
            this.underActive = false;
            this.draftActive = false;
            this.concernActive = false;
            this.concernNumber = false;
            this.loader = true;
            this.concernStatuses.push(status);
            this.db.fetchData({ "currentPage": 1, "concernStatuses": this.concernStatuses,
                "pageSize": 500 }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    console.log(_this.concernList);
                    console.log(_this.tmp_concern);
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
        else if (status == 9) {
            this.tmp_concern = [];
            this.whVerified = false;
            this.fmVerified = true;
            this.rejectActive = false;
            this.waitActive = false;
            this.underActive = false;
            this.draftActive = false;
            this.concernActive = false;
            this.whPending = false;
            this.concernNumber = false;
            this.loader = true;
            this.concernStatuses.push(status);
            this.db.fetchData({ "currentPage": 1, "concernStatuses": this.concernStatuses,
                "pageSize": 500 }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    console.log(_this.concernList);
                    console.log(_this.tmp_concern);
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
        else if (status == 20) {
            this.tmp_concern = [];
            this.whVerified = false;
            this.fmVerified = false;
            this.rejectActive = false;
            this.waitActive = false;
            this.underActive = false;
            this.draftActive = false;
            this.concernActive = false;
            this.whPending = false;
            this.concernNumber = false;
            this.loader = true;
            this.concernStatuses = [5, 6, 7, 8, 9];
            this.db.fetchData({ "currentPage": 1, "concernStatuses": this.concernStatuses,
                "pageSize": 500 }, 'concern/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.div = false;
                    _this.concernList = response['data'];
                    _this.tmp_concern = _this.concernList;
                    console.log(_this.concernList);
                    console.log(_this.tmp_concern);
                    for (var i = 0; i < _this.tmp_concern.length; i++) {
                        _this.tmp_concern[i].totalQty = 0;
                        _this.tmp_concern[i].totalAmount = 0;
                        if (_this.tmp_concern[i].concernType == 1) {
                            for (var j = 0; j < _this.tmp_concern[i].productConcerns.length; j++) {
                                console.log(_this.tmp_concern[i].productConcerns[j].netAmount, _this.tmp_concern[i].productConcerns[j].qunatity);
                                _this.tmp_concern[i].totalQty = _this.tmp_concern[i].totalQty + _this.tmp_concern[i].productConcerns[j].qunatity;
                                _this.tmp_concern[i].totalAmount = _this.tmp_concern[i].totalAmount + _this.tmp_concern[i].productConcerns[j].netAmount;
                            }
                        }
                    }
                }
                if (response['status'] == 'Failed') {
                    _this.div = true;
                    _this.concernList = [];
                    _this.tmp_concern = _this.concernList;
                }
                console.log(_this.concernList);
                console.log(_this.tmp_concern);
            });
        }
    };
    ConcernListComponent.prototype.delete_concern = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "Concern";
        this.dialog.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fileData(id, 'concern/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message = "Concern removed successfully") {
                        _this.toast.openSucess('Concern removed successfully', '');
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    _this.concern_list(1);
                });
            }
        });
    };
    ConcernListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-concern-list',
            template: __webpack_require__(/*! ./concern-list.component.html */ "./src/app/customer-concern/concern-list/concern-list.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]])
    ], ConcernListComponent);
    return ConcernListComponent;
}());



/***/ }),

/***/ "./src/app/customer-concern/draft-detail/draft-detail.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/customer-concern/draft-detail/draft-detail.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\"  *ngIf=\"draftDetail.concernStatus==3\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n        <div class=\"middle-container\">\n          <div class=\"page-heading\">\n            <div class=\"heading-text bc-space\">\n              <div class=\"back-btn\">\n                <a mat-button routerLink=\"/concern-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n              </div>\n              <h2>{{categorydetail.networkEstablishment}}<a style=\"font-size: 12px; color: #123dd6; margin-left: 10px; text-decoration: underline;\"  class=\"name\" routerLink=\"/distribution-detail/{{categorydetail.raisedByNetworkId}}\" routerLinkActive=\"active\">View Detail</a></h2>\n              <p>Distributor</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"container-outer\">\n          <div class=\"container\" >\n              <div class=\"row\">\n                  <div class=\"col s12\">\n                    <div class=\"details-info\">\n                      <div class=\"basic-details\">\n                        <div class=\"col s12 cs-figure padding0\">\n                          <ul>\n                            <li style=\"width: 210px; min-width: 210px;\">\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Concern Date</span>\n                                  <p> {{categorydetail.createdOn | date:'d, MMMM , y'}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Created by</span>\n                                  <p>{{categorydetail.createdByName}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li *ngIf=\"categorydetail.claimNo\">\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Concern Number</span>\n                                  <p>{{categorydetail.claimNo}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li>\n                                <div class=\"outer\">\n                                  <div class=\"inner\">\n                                    <span>Concern Type</span>\n                                    <p>{{categorydetail.concernTypeName}}</p>\n                                  </div>\n                                </div>\n                              </li>\n                              <li>\n                                <div class=\"outer\">\n                                  <div class=\"inner\">\n                                    <span>Status</span>\n                                    <p *ngIf=\"categorydetail.concernStatus== '2'\">UNDER VERIFICATION</p>\n                                    <p *ngIf=\"categorydetail.concernStatus== '3'\">WAITING FOR DISTRIBUTOR APPROVAL</p>\n                                    <p *ngIf=\"categorydetail.concernStatus== '4'\">Proceed For Approvel</p>\n                                    <p *ngIf=\"categorydetail.concernStatus== '5'\">Approved</p>\n                                    <p *ngIf=\"categorydetail.concernStatus== '6'\">Rejected</p>\n                                    <p *ngIf=\"categorydetail.concernStatus== '7'\">Transporter Deatail</p>\n                                  </div>\n                                </div>\n                              </li> \n                            \n                          </ul>\n\n                          <ul class=\"mt15\">\n                              <li>\n                                  <div class=\"outer\">\n                                    <div class=\"inner\">\n                                      <span>Total Item</span>\n                                      <p>{{totalItems}}</p>\n                                    </div>\n                                  </div>\n                                  </li>\n                              \n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Total Qty</span>\n                                  <p>{{categorydetail.totalQty}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li *ngIf=\"categorydetail.concernType==1\">\n                                <div class=\"outer\">\n                                  <div class=\"inner\">\n                                    <span>Product Type</span>\n                                    <p>{{categorydetail.productConcernTypeName}}</p>\n                                  </div>\n                                </div>\n                              </li>\n                           \n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Total Amount</span>\n                                  <p>{{categorydetail.totalAmount}}</p>\n                                </div>\n                              </div>\n                            </li>\n                            <li *ngIf=\"user.data.userType==3\">\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Assigned Sales</span>\n                                  <p><span *ngFor=\"let sales of user.data.distributerNetwork.networkSalesUsers\">{{sales.salesUserName}}</span></p>\n                                </div>\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"sprate-box pt0\">   \n                <div class=\"row pt15 pb15\"  >\n                  <div  class=\"col s4 empty\">\n                      <div class=\"multi-all-select\">\n                          <label>Segment</label>\n                          <ng-multiselect-dropdown\n                          [placeholder]=\"'Select Segment'\"\n                          [data]=\"segmentList\"\n                          [(ngModel)]=\"data.segment\"\n                          name=\"segment\"\n                          #segment=\"ngModel\"\n                          [settings]=\"dropdownSettings1\"\n                          (onSelect)=\"productList(data.segment,data.category)\"\n                          >\n                          \n                      </ng-multiselect-dropdown>\n                  </div>\n              </div>\n              <div class=\"col s4 empty\">\n                  <div class=\"multi-all-select\">\n                      <label>Category</label>\n                      <ng-multiselect-dropdown\n                      [placeholder]=\"'Select Category'\"\n                      [data]=\"categorylist\"\n                      [(ngModel)]=\"data.category\"\n                      name=\"category\"\n                      #category=\"ngModel\"\n                      [settings]=\"dropdownSettings2\"\n                      (onSelect)=\"productList(data.segment,data.category)\"\n                      >\n                  </ng-multiselect-dropdown>\n              </div>\n          </div>     \n          <div   class=\"col s4 empty\">\n              <div class=\"multi-all-select\">\n                  <label>Product Name</label>\n                  <ng-multiselect-dropdown\n                  [placeholder]=\"'Select Product'\"\n                  (onDeSelect)=\"onItemDeSelect($event,data.segment,data.category,data.product)\"\n                  [data]=\"product_list\"\n                  [(ngModel)]=\"data.product\"\n                  name=\"product\"\n                  #product=\"ngModel\"\n                  [settings]=\"dropdownSettings3\"\n                  (onSelect)=\"getCartProductList($event,data.segment,data.category,data.product)\">\n              </ng-multiselect-dropdown>\n          </div>\n      </div>  \n     </div>\n     <div  *ngIf=\"productlist && productlist.length > 0\" class=\"col s12 padding0\">\n      <div class=\"heading-bg left-right-15\">\n          <h2>PRODUCT INFORMATION</h2>\n      </div>\n      \n      \n      <div class=\"cs-table left-right-15\">\n          <div class=\"table-head\" [ngClass]=\"{ 'pr28' : productlist.length>6 }\" >\n              \n              <table>\n                  <tr>\n                                  \n                   \n                      <th class=\"w40\">&nbsp;</th>\n                      <th>Part Number</th>\n                      <th class=\"w130\">Product Name</th>\n                      <th class=\"w130\">Application No</th>\n                      <th class=\"w100\">Image</th>\n                      <th class=\"w60 text-center\">Qty<span>*</span></th>\n                      <th class=\"w110\">MFG Date.<span *ngIf='draftDetail.productConcernType==1'>*</span></th>\n                      <th class=\"w120\">Invoice No.<span *ngIf='draftDetail.productConcernType==1'>*</span></th>\n                      <th class=\"w70 text-right\">Rate</th>\n                      <th class=\"w80 text-right\">Amount</th>\n                      <th class=\"w80\">Action</th>\n                  </tr>\n              </table>\n          </div>\n          \n          \n          <div class=\"table-head bdrt\" [ngClass]=\"{ 'pr28' : productlist.length>6 }\" >\n              <table>\n                  <tr>\n                      <th class=\"w40\"></th>\n                      <th>\n                          <div class=\"th-search-acmt\">\n                              <mat-form-field>\n                                  <input type=\"text\"  name=\"search\" [(ngModel)]=\"productName.search\" (input)=\"productSearchByNumber()\" matInput [matAutocomplete]=\"auto1\">\n                                  <mat-autocomplete #auto1=\"matAutocomplete\" >\n                                      \n                                  </mat-autocomplete>\n                                  \n                              </mat-form-field> \n                          </div>\n                      </th>\n                      <th class=\"w130\">&nbsp; </th>\n                      <th class=\"w130\">&nbsp; </th>\n                      <th class=\"w100\">&nbsp;</th>\n                      <th class=\"w60\">&nbsp;</th>\n                      <th class=\"w110\">&nbsp;</th>\n                      <th class=\"w120\">&nbsp;</th>\n                      <th class=\"w70\">&nbsp;</th>\n                      <th class=\"w80\">&nbsp;</th>\n                      <th class=\"w80\">&nbsp;</th>\n                  </tr>\n              </table>\n          </div>\n          \n          <div class=\"table-container height-scroll\">\n              <div class=\"table-content shadow-none\">\n                  <table>\n                      <tr *ngFor=\"let product of productlist;let index=index\">\n                          <td class=\"w40\"><span *ngIf='product.qty'><mat-checkbox name=\"{{check+index}}\" [(ngModel)]=\"product.datacheck\"  (change)=\"select(product,index)\" >&nbsp; </mat-checkbox></span></td>\n                          <td >{{product.partNumber}}</td>\n                          <td class=\"w130\">{{product.productName}}</td>\n                          <td class=\"w130\">EF5678</td>\n                          <td class=\"w100\">\n                            <a class=\"link-btn\" *ngIf=\"!product.isImage\">\n                                <label class=\"cs-file\">\n                                    Add Image\n                                    <input type=\"file\" (change)=\"insertImage($event,product.productName,index)\" style=\"display: none;\">\n                                </label>\n                            </a>\n                            <a *ngIf=\"product.isImage\" class=\"link-btn\" (click)=\"openImageDialog(index)\"> View Image </a>\n                        </td>\n                          <td class=\"w60 text-center\" >\n                              <div class=\"td-input\">\n                                  <input type=\"number\" (input)=\"calculateAmount(product.qty,index)\"  (keyup.enter)=\"addProduct('checkIndividual')\" name=\"qty\" #qty=\"ngModel\" [(ngModel)]=\"product.qty\" [value]=\"product.qty\" required min=\"1\" >\n                              </div>\n                              <p *ngIf='isCart==true && product.datacheck==true && product.qty==\"\"'>required</p>\n                          </td>\n                          <!--Pre-Fitment Field-->\n                          <td class=\"w110\" *ngIf='draftDetail.productConcernType==1'>\n                              <div class=\"td-input\" style=\"display: flex; align-items: center;\">\n                                  <input matInput [matDatepicker]=\"picker\"   placeholder=\"Choose a date\" name=\"{{date+index}}\" [(ngModel)]=\"product.date\"  #date=\"ngModel\"   [max]=\"maxDateValue\" required>\n                                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                  <mat-datepicker #picker></mat-datepicker>\n                              </div>\n                              <p *ngIf='isCart&&!product.date&&product.datacheck'>required</p>\n                          </td>\n                          <td class=\"w120\" *ngIf='draftDetail.productConcernType==1'> \n                              <div class=\"td-input\">\n                                  <input type=\"text\"    (keyup.enter)=\"addProduct('checkIndividual')\" name=\"{{invoice+index}}\" #invoice=\"ngModel\" [(ngModel)]=\"product.invoice\" required>\n                              </div>\n                              <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p>\n                          </td>\n                          \n                          <!--Pre-Fitment Field-->\n                          <!--Post-Fitment Field-->\n                          <td class=\"w110\" *ngIf='draftDetail.productConcernType==2'>\n                              <div class=\"td-input\" style=\"display: flex; align-items: center;\">\n                                  <input matInput [matDatepicker]=\"picker\"   placeholder=\"Choose a date\" name=\"{{date+index}}\" [(ngModel)]=\"product.date\"  #date=\"ngModel\"   [max]=\"maxDateValue\" required>\n                                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                  <mat-datepicker #picker></mat-datepicker>\n                              </div>\n                          </td>\n                          <td class=\"w120\" *ngIf='draftDetail.productConcernType==2'> \n                              <div class=\"td-input\">\n                                  <input type=\"text\"    (keyup.enter)=\"addProduct('checkIndividual')\" name=\"{{invoice+index}}\" #invoice=\"ngModel\" [(ngModel)]=\"product.invoice\" required>\n                              </div>\n                              \n                          </td>\n                          \n                          <!--Post-Fitment Field-->\n                          <td class=\"w70 text-right\">&#8377; {{product.priceUnit}}</td>\n                          <td class=\"w80 text-right\">&#8377; {{product.amount}}</td>\n                          <td class=\"w80\">\n                              <a *ngIf=\"product.qty!=''\"class=\"action-cart\" mat-button><i class=\"material-icons green-clr\"(click)=\"addProduct('checkIndividual')\">save</i></a>\n                          </td>\n                          \n                      </tr>\n                  </table>\n              </div>\n              <div class=\"data-not-available\" *ngIf=\"productlist.length==0\">\n                  <div class=\"outer\">\n                      <div class=\"iinear\">\n                          <div class=\"figure\" matRipple>\n                              <div class=\"header\">\n                                  <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                              </div>\n                              \n                              <div class=\"description\">\n                                  <div class=\"cs-heading\">\n                                      <h2>No Product</h2>\n                                  </div>\n                                  <div class=\"img\">\n                                      <i class=\"material-icons\">error_outline</i>\n                                  </div>\n                                  <div class=\"psc\">\n                                      <p>data not available</p>\n                                      \n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n      <div *ngIf=\"add\" class=\"cs-btn mt20 text-right\">\n          <div class=\"in-btn\">\n              <button mat-raised-button color=\"accent\" type=\"button\"  (click)=\"addProduct('checkk')\" >Add to Cart</button>\n          </div>\n      </div>\n  </div>\n   \n            <div class=\"row\">\n              <div class=\"col s12\">\n                <div class=\"sprate-box   padding0\" *ngIf=\"categorydetail.concernType==1\">\n                  <div class=\"top-heading\">\n                    <h2>Item List</h2>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"cs-table\">\n                      <div class=\"table-head\">\n                        <table> \n                          <tr>\n                            <th class=\"padding0\">\n                              <table>\n                                <tr>\n                                  <th>Category</th>\n                                  <th class=\"w110 text-center\">Total Items</th>\n                                  <th class=\"w110 text-center\">Total QTY.</th>\n                                  <th class=\"w130 text-right\">Amount</th>\n                                </tr>\n                              </table>\n                            </th>\n                          </tr>\n                        </table>\n                      </div>\n                      \n                      <div class=\"table-container\">\n                        <div class=\"table-content none-shadow\">\n                          <table>\n                            <tr  *ngFor=\"let concerns of tmp_array;let i=index\" >\n                              <td class=\"padding0\">\n                                <table>\n                                  <tr>\n                                    <td><a mat-button class=\"link-btn\" (click)=\"Show_Item(concerns.category,i)\" >{{concerns.category}}</a></td>\n                                    <td class=\"w110 text-center\">{{concerns.qty}}</td>\n                                    <td class=\"w110 text-center\">{{concerns.totalItem}}</td>\n                                    <td class=\"w130 text-right\">&#x20B9; {{concerns.amount}}</td>\n                                  </tr>\n                                </table>\n                                <table class=\"multi-table\"  *ngIf='isItem==true&&isIndex==i'>\n                                  <tr>\n                                    <!-- <td class=\"w40\">&nbsp;</td> -->\n                                    <td>Part No.</td>\n                                    <td class=\"w80\">Segment</td>\n                                    <td class=\"w120\">Invoice</td>\n                                    <td class=\"w100\">MFG Date</td>\n                                    <td class=\"w60\"> Claim Qty</td>\n                                    <td class=\"w60\" >Accept Qty</td>\n                                    <td class=\"w60\" >Reject Qty</td>\n                                    <td class=\"w80 text-right\">Rate</td>\n                                    <td class=\"w80 text-right\">Amount</td>\n                                    <th class=\"w100\">Image</th>\n                                    <td>Sales Remark</td>\n                                    <td>Distributor Remark</td>\n                                  </tr>\n                                  <tr [hidden]=\"product.category != concerns.category\" *ngFor=\"let product of tmp_detail; let i=index\" [ngClass]=\"{ 'distributer' :!product.verified}\">\n                                    <!-- <td><mat-checkbox  name=\"{{check+i}}\" [(ngModel)]=\"product.datacheck\" (change)=\"checkkk()\" >&nbsp; </mat-checkbox></td> -->\n                                    <td>{{product.partNumber}}</td>\n                                    <td>{{product.segment}}</td>\n                                    <td>{{product.invoice}}</td>\n                                    <td>{{product.date|date:'d MMM y'}}</td>\n                                    <td>{{product.qty}}</td>\n                                    <td>\n                                      <div class=\"td-input\" *ngIf=\"categorydetail.concernStatus==2\">\n                                          <input type=\"text\" (input)=\"calculateAmount(product.acceptqty,i)\"  name=\"acceptqty\" #acceptqty=\"ngModel\" [(ngModel)]=\"product.acceptqty\" [value]=\"product.acceptqty\" (keypress)=\"MobileNumber($event)\" required >\n                                      </div>\n                                      <div *ngIf=\"categorydetail.concernStatus!=2\">{{product.acceptqty}}</div>\n                                  \n                                      <!-- <p *ngIf='isCart==true && product.datacheck==true && product.qty==\"\"'>required</p> -->\n                                  </td>\n                                  <td>{{product.rejectqty}}</td>\n                                    <td class=\"text-right\">&#x20B9; {{product.priceUnit}}</td>\n                                    <td class=\"text-right\">&#x20B9; {{product.amount}}</td>\n                                    <td class=\"w100\">\n                                      <a *ngIf=\"product.verified\" class=\"link-btn\" (click)=\"openImageDialog1(i)\"> View Image </a>\n                                      <a *ngIf=\"!product.verified\" class=\"link-btn\" (click)=\"openImageDialog(i)\"> View Image </a>\n                                  </td>\n                                <td> \n                                  <div class=\"td-input\" *ngIf=\"categorydetail.concernStatus==2\">\n                                      <textarea type=\"text\"   name=\"{{salesremark+index}}\" #salesremark=\"ngModel\" [(ngModel)]=\"product.salesremark\" required></textarea>\n                                  </div>\n                                  <div class=\"td-input\" *ngIf=\"categorydetail.concernStatus!=2\">\n                                      <textarea type=\"text\"   name=\"{{salesremark+index}}\" #salesremark=\"ngModel\" [(ngModel)]=\"product.salesremark\" required readonly></textarea>\n                                  </div>\n                                  <!-- <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p> -->\n                              </td>\n                              <td> \n                                    <div class=\"td-input\">\n                                        <textarea type=\"text\"   name=\"{{dealerremark+index}}\" (input)=\"remark()\" #dealerremark=\"ngModel\" [(ngModel)]=\"product.dealerremark\" required ></textarea>\n                                    </div>\n                                </td>\n                                    <!-- <td>{{product.statusName}}</td>\n                                    <td>{{product.natureOfProblem}}</td> -->\n                                  </tr>\n                                </table>\n                              </td>\n                            </tr>\n                          </table>\n                        </div>\n                      </div>\n                      \n                    </div>\n                    \n                  </div>\n                </div>\n                <div class=\"row\"  >\n                  <div class=\"col s12 padding0\" >\n                    <div class=\"cs-btn  mt15 text-right\">\n                      <div class=\"in-btn\" *ngIf=\"categorydetail.concernType==1\">\n                        <button  *ngIf=\"user.data.userType==2 && isForward && !isProceed && categorydetail.concernStatus==2\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(3)\" >Forward To Distributer</button>\n                        <button  *ngIf=\"user.data.userType==3 &&categorydetail.concernStatus==3 &&  isResubmit==false\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(4)\" >Proceed</button>\n                        <button  *ngIf=\"user.data.userType==3 && categorydetail.concernStatus==3 && (isResubmit || isRemark)\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(2)\" >Submit For Varification</button>\n                        <button  *ngIf=\"user.data.userType==2 && user.data.salesUser.concernApprovalAccess==true && categorydetail.concernStatus==2\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(5)\" >Generate Concern</button>\n                        <button  *ngIf=\"user.data.userType==2 && isProceed && user.data.salesUser.concernApprovalAccess==false && categorydetail.concernStatus==2\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"submit(4)\" >Proceed for APPROVAL</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!-- <div class=\"row\"  *ngIf=\"categorydetail.concernType==1\">\n                \n                </div> -->\n                \n                <div class=\"sprate-box mt15 padding0\"  *ngIf=\"categorydetail.concernType==1&&categorydetail.concernStatus>4\">\n                  <div class=\"full-address\">\n                    <div class=\"top-heading\">\n                      <h2>Transporter Detail</h2>\n                    </div>\n                    <a  *ngIf=\"this.user.data.role==12 && categorydetail.concernStatus>4\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\" ><i class=\"material-icons\" (click)=\"edit()\">edit</i></a>\n                    <div class=\"cs-table\">\n                      <div class=\"table-head\">\n                        <table>\n                          <tr>\n                            <th>Transporter Name</th>\n                            <th class=\"w140\">Mode of Transport</th>\n                            <th class=\"w140\">No. of Boxes</th>\n                            <th class=\"w150\">LR No.</th>\n                            <th class=\"w140\">E-way bill No.</th>\n                            <th class=\"w100\">&nbsp;</th>\n                          </tr>\n                        </table>\n                      </div>\n                      <form  (ngSubmit)=\"f.form.valid && updateTransport() || setFocus(f.form)\" #f=\"ngForm\" novalidate>\n                        <div class=\"table-container\">\n                          <div class=\"table-content none-shadow\">\n                            <table>\n                              <tr *ngIf='categorydetail.transporterName||isEdit'>\n                                <td><span *ngIf=\"isEdit==false\">{{categorydetail.transporterName}}</span>\n                                  \n                                  <div class=\"td-input\" *ngIf=\"isEdit==true\">\n                                    <input type=\"text\" name=\"transporterName\" #transporterName=\"ngModel\" [(ngModel)]=\"categorydetail.transporterName\" [ngClass]=\"{'has-error' : transporterName.invalid }\" required>\n                                    \n                                    <mat-error *ngIf=\"f.submitted && transporterName.invalid \" class=\"invalid-feedback\">\n                                      <mat-error *ngIf=\"transporterName.errors.required\">required</mat-error>\n                                    </mat-error>\n                                  </div>\n                                  \n                                  <!-- <div class=\"td-input\" *ngIf=\"isEdit==true\" >\n                                    <mat-form-field class=\"cs-input\">\n                                      <input type=\"text\"  matInput  name=\"transporterName\" #transporterName=\"ngModel\" [(ngModel)]=\"categorydetail.transporterName\" [ngClass]=\"{'has-error' : transporterName.invalid }\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"f.submitted && transporterName.invalid \" class=\"invalid-feedback\">\n                                      <mat-error *ngIf=\"transporterName.errors.required\">Transporter Name required</mat-error>\n                                    </mat-error>\n                                    \n                                  </div> -->\n                                </td>\n                                <td class=\"w140\"><span *ngIf=\"isEdit==false\">{{categorydetail.modeOfTransport}}</span>\n                                  <div class=\"td-input\" *ngIf=\"isEdit==true\" >\n                                    <input type=\"text\" name=\"modeOfTransport\" #modeOfTransport=\"ngModel\" [(ngModel)]=\"categorydetail.modeOfTransport\"  [ngClass]=\"{'has-error' : modeOfTransport.invalid }\" required>\n                                    <!-- <mat-form-field class=\"cs-input\">\n                                      <input type=\"text\" matInput name=\"modeOfTransport\" #modeOfTransport=\"ngModel\" [(ngModel)]=\"categorydetail.modeOfTransport\"  [ngClass]=\"{'has-error' : modeOfTransport.invalid }\" required>\n                                    </mat-form-field> -->\n                                    <mat-error *ngIf=\"f.submitted && modeOfTransport.invalid \" class=\"invalid-feedback\">\n                                      <mat-error *ngIf=\"modeOfTransport.errors.required\">required</mat-error>\n                                    </mat-error>\n                                    \n                                  </div>\n                                </td>\n                                <td class=\"w140\"><span *ngIf=\"isEdit==false\">{{categorydetail.numberOfBoxes}}</span>\n                                  <div class=\"td-input\"  *ngIf=\"isEdit==true\">\n                                    <!-- <mat-form-field class=\"cs-input\">\n                                      <input type=\"text\" matInput  name=\"numberOfBoxes\" #numberOfBoxes=\"ngModel\" [(ngModel)]=\"categorydetail.numberOfBoxes\" [ngClass]=\"{'has-error' : numberOfBoxes.invalid }\" (keypress)=\"MobileNumber($event)\"  required>\n                                    </mat-form-field> -->\n                                    <input type=\"text\" name=\"numberOfBoxes\" #numberOfBoxes=\"ngModel\" [(ngModel)]=\"categorydetail.numberOfBoxes\" [ngClass]=\"{'has-error' : numberOfBoxes.invalid }\" (keypress)=\"MobileNumber($event)\"  required>\n                                    \n                                    <mat-error *ngIf=\"f.submitted && numberOfBoxes.invalid \" class=\"invalid-feedback\">\n                                      <mat-error *ngIf=\"numberOfBoxes.errors.required\">required</mat-error>\n                                    </mat-error>\n                                    \n                                  </div>\n                                </td>\n                                <td class=\"w150\"><span *ngIf=\"isEdit==false\">{{categorydetail.lrNumber}}</span>\n                                  <div class=\"td-input\"  *ngIf=\"isEdit==true\" >\n                                    <input type=\"text\"  name=\"lrNumber\" #lrNumber=\"ngModel\" [(ngModel)]=\"categorydetail.lrNumber\" [ngClass]=\"{'has-error' : lrNumber.invalid }\" required>\n                                    <mat-error *ngIf=\"f.submitted && lrNumber.invalid \" class=\"invalid-feedback\">\n                                      <mat-error *ngIf=\"lrNumber.errors.required\">required</mat-error>\n                                    </mat-error>\n                                  </div>\n                                </td>\n                                <td class=\"w140\"><span *ngIf=\"isEdit==false\">{{categorydetail.eWayBillNumber}}</span>\n                                  <div class=\"td-input\" *ngIf=\"isEdit==true\">\n                                    <input type=\"text\"  name=\"eWayBillNumber\" #eWayBillNumber=\"ngModel\" [(ngModel)]=\"categorydetail.eWayBillNumber\" [ngClass]=\"{'has-error' : eWayBillNumber.invalid }\" required>\n                                    <mat-error *ngIf=\"f.submitted && eWayBillNumber.invalid \" class=\"invalid-feedback\">\n                                      <mat-error *ngIf=\"eWayBillNumber.errors.required\">required</mat-error>\n                                    </mat-error>\n                                  </div>\n                                </td>\n                                <td class=\"w100 text-center\">\n                                  <button  mat-raised-button color=\"accent\"  *ngIf=\"isEdit==true\"  >Update</button>\n                                  <!-- <a class=\"action-cart\" mat-button><i class=\"material-icons red-clr\"  *ngIf=\"isEdit==false\" (click)=\"edit()\">edit</i></a> -->\n                                  <!-- <a class=\"action-cart\" mat-button><i class=\"material-icons red-clr\"  *ngIf=\"isEdit==true\" (click)=\"updateTransport()\">save</i></a> -->\n                                  <!-- <a class=\"action-cart\" mat-button><i class=\"material-icons red-clr\" (click)=\"remove(product.productId,i)\">delete_forever</i></a> -->\n                                </td>\n                              </tr>\n                            </table>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"sprate-box pt0\" *ngIf=\"categorydetail.concernType==2\">\n                  <div class=\"cs-heading\">\n                    <h2>Other Type Detail</h2>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col s8 pl0\">\n                      <div class=\"from-fields\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input wp100 h-input infix-bodr8\">\n                            <textarea matInput   name=\"concernDetails\" #concernDetails=\"ngModel\"  [(ngModel)]=\"categorydetail.concernDetails\" readonly class=\"h200\"></textarea>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col s4 pr0\">\n                      <div class=\"territory-info mt12\">\n                        <div class=\"head\">\n                          <h2>SalesRole</h2>\n                        </div>\n                        <div class=\"cs-checkbox\">\n                          <div class=\"checkbox-outer auto-height-scroll\">\n                            <section class=\"checkbox-inner  bodr0\">\n                              <mat-checkbox *ngFor=\"let role of categorydetail.concernRoles\"  class=\"check-list bg-none check-none check-none check-hover check-none\" style=\"cursor: unset;\">\n                                <div class=\"name-outer\">\n                                  <div class=\"outer\">\n                                    <div class=\"inner\">\n                                      <div class=\"name-inner\">\n                                          <span *ngIf=\"role.role==6\">N</span>\n                                          <span *ngIf=\"role.role==7\">R</span>\n                                          <span *ngIf=\"role.role==8\">A</span>\n                                          <span *ngIf=\"role.role==10\">T</span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"text-box\">\n                                  <h2><span *ngIf=\"role.role==6\">National Manager</span><span *ngIf=\"role.role==7\">Regional Manager</span><span *ngIf=\"role.role==8\">Area Manager</span><span *ngIf=\"role.role==10\">Territory Incharge</span></h2>\n                                </div>\n                              </mat-checkbox>\n                            \n                            </section>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col s12 padding0\">\n                  <div  class=\"cs-btn fixedd mt15 text-right\">\n                    <div class=\"in-btn\">\n                      <button *ngIf='user.data.userType==1' mat-raised-button color=\"warn\" type=\"button\" (click)=\"processed()\" >Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>  \n            </div>\n  </div>\n          </div>\n        </div>\n        \n      </div>\n      \n<div *ngIf=\"draftDetail.concernStatus!=3\" class=\"main-container\">\n    <div *ngIf=\"loader\"> \n        <div class=\"cs-loader\">\n          <img src=\"assets/img/loader.png\" class=\"rotate\"> \n        </div>\n   </div>\n    <div class=\"container-outer\">\n        <div class=\"container\" >\n            <div class=\"row\">\n                    <div class=\"sprate-box pt0 mt15\" *ngIf=\"draftDetail.concernType== '2'\">\n                            <!-- Other Claim Section Start -->\n                            <div >\n                                <div class=\"cs-heading\">\n                                    <h2>BASIC INFORMATION</h2>\n                                </div>\n                                <form  (ngSubmit)=\"f.form.valid &&  onSubmit(3)\" #f=\"ngForm\" novalidate>\n                                    <div class=\"from-fields\">\n                                        <div class=\"row\">\n                                            <div class=\"col s8 pl0\">\n                                                <div class=\"control-field\">\n                                                    <mat-form-field class=\"cs-input wp100 h-input infix-bodr8\">\n                                                        <textarea class=\"h150\" matInput placeholder=\"Description\"  name=\"description\" [(ngModel)]=\"other_form.description\"  #description=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && description.invalid }\" required></textarea>\n                                                    </mat-form-field>\n                                                    <mat-error *ngIf=\"f.submitted && description.invalid\" class=\"invalid-feedback\">\n                                                        <mat-error *ngIf=\"description.errors.required\">Description is required</mat-error>\n                                                    </mat-error>\n                                                </div>\n                                            </div>\n                                            <div class=\"col s4 pr0\">\n                                                <div class=\"territory-info mt15\">\n                                                    <div class=\"head\" >\n                                                        <h2>Assign SalesRoles</h2>\n                                                    </div>\n                                                    <div class=\"cs-checkbox\">\n                                                        <div class=\"checkbox-outer auto-height-scroll\">\n                                                            <section class=\"checkbox-inner\" >\n                                                                <ng-container  *ngFor=\"let role of rolelistsales1;let index=index\"   aria-required=\"true\">\n                                                                    <mat-checkbox class=\"check-list\" (change)=\"select_role(role.roleId,index,role.isAssign)\" name=\"{{role.roleId}}\" [(ngModel)]=\"role.isAssign\"  value=\"{{role.roleId}}\" >{{role.roleName}}</mat-checkbox>\n                                                                </ng-container>\n                                                            </section>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <mat-error *ngIf=\"f.submitted && !isAssignCheck\">Assign to required</mat-error>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col s12\">\n                                            <div class=\"cs-btn text-right mt15\">\n                                                <div class=\"in-btn\">\n                                                    <button *ngIf=\"concern_form.claim_type==2\" mat-raised-button color=\"accent\" [disabled]=\"concern_form.isProceed==false || concern_form.info==false\">Submit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <!-- Other Claim Section End -->\n                        </div>\n                <div class=\"col s12\" *ngIf=\"draftDetail.concernType== '1'\">\n                    <div class=\"sprate-box pt0\">                     \n                        <form #p=\"ngForm\" (ngSubmit)=\"p.valid\">\n                            <div>\n                                <div class=\"cs-heading\">\n                                    <h2 *ngIf=\"draftDetail.productConcernType==1\">Pre-Fitment Claim</h2>\n                                    <h2 *ngIf=\"draftDetail.productConcernType==2\">Post-Fitment Claim</h2>\n                                </div>\n                                <form name=\"form\" (ngSubmit)=\"f.form.valid\"  #f=\"ngForm\" novalidate >\n                                    <!-- <div class=\"row\">\n                                        <div class=\"col s6\" *ngIf=\"user.data.userType=='2'\">\n                                            <div class=\"from-fields\">\n                                                <div class=\"control-field\">\n                                                    \n                                                    <mat-form-field class=\"cs-input\">\n                                                        <input type=\"text\" matInput  name=\"networkEstablishment\"  [(ngModel)]=\"draftDetail.networkEstablishment\" readonly>\n                                                    </mat-form-field>\n                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div> -->\n                                    <div class=\"row mt15\" *ngIf=\"user.data.userType==2\">\n                                        <div class=\"col s4\">\n                                            <div class=\"details-info flat\">\n                                                <div class=\"basic-details flat\">\n                                                    <div class=\"profile-info\">\n                                                        <ul>\n                                                            <li>\n                                                                <div class=\"cs-box\">\n                                                                    <img src=\"assets/img/company.svg\" class=\"fix-img\">\n                                                                    <span>Comapny Name</span>\n                                                                    <p>{{draftDetail.networkEstablishment}}</p>\n                                                                </div>\n                                                            </li>\n                                                        </ul>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                                <div class=\"row mt15\"  >\n                                    <div  class=\"col s4 empty\">\n                                        <div class=\"multi-all-select\">\n                                            <label>Segment</label>\n                                            <ng-multiselect-dropdown\n                                            [placeholder]=\"'Select Segment'\"\n                                            [data]=\"segmentList\"\n                                            [(ngModel)]=\"data.segment\"\n                                            name=\"segment\"\n                                            #segment=\"ngModel\"\n                                            [settings]=\"dropdownSettings1\"\n                                            (onSelect)=\"productList(data.segment,data.category)\"\n                                            >\n                                            \n                                        </ng-multiselect-dropdown>\n                                    </div>\n                                </div>\n                                <div class=\"col s4 empty\">\n                                    <div class=\"multi-all-select\">\n                                        <label>Category</label>\n                                        <ng-multiselect-dropdown\n                                        [placeholder]=\"'Select Category'\"\n                                        [data]=\"categorylist\"\n                                        [(ngModel)]=\"data.category\"\n                                        name=\"category\"\n                                        #category=\"ngModel\"\n                                        [settings]=\"dropdownSettings2\"\n                                        (onSelect)=\"productList(data.segment,data.category)\"\n                                        >\n                                    </ng-multiselect-dropdown>\n                                </div>\n                            </div>     \n                            <div   class=\"col s4 empty\">\n                                <div class=\"multi-all-select\">\n                                    <label>Product Name</label>\n                                    <ng-multiselect-dropdown\n                                    [placeholder]=\"'Select Product'\"\n                                    (onDeSelect)=\"onItemDeSelect($event,data.segment,data.category,data.product)\"\n                                    [data]=\"product_list\"\n                                    [(ngModel)]=\"data.product\"\n                                    name=\"product\"\n                                    #product=\"ngModel\"\n                                    [settings]=\"dropdownSettings3\"\n                                    (onSelect)=\"getCartProductList($event,data.segment,data.category,data.product)\">\n                                </ng-multiselect-dropdown>\n                            </div>\n                        </div>  \n                    </div>\n                    <div  *ngIf=\"productlist && productlist.length > 0\" class=\"col s12 padding0\">\n                        <div class=\"heading-bg left-right-15\">\n                            <h2>PRODUCT INFORMATION</h2>\n                        </div>\n                        \n                        \n                        <div class=\"cs-table left-right-15\">\n                            <div class=\"table-head\" [ngClass]=\"{ 'pr28' : productlist.length>6 }\" >\n                                \n                                <table>\n                                    <tr>\n                                        \n                                        \n                                        <th class=\"w40\">&nbsp;</th>\n                                        <th>Part Number</th>\n                                        <th class=\"w130\">Product Name</th>\n                                        <th class=\"w130\">Application No</th>\n                                        <th class=\"w100\">Image</th>\n                                        <th class=\"w60 text-center\">Qty<span>*</span></th>\n                                        <th class=\"w110\">MFG Date.<span *ngIf='draftDetail.productConcernType==1'>*</span></th>\n                                        <th class=\"w120\">Invoice No.<span *ngIf='draftDetail.productConcernType==1'>*</span></th>\n                                        <th class=\"w70 text-right\">Rate</th>\n                                        <th class=\"w80 text-right\">Amount</th>\n                                        <th class=\"w80\">Action</th>\n                                    </tr>\n                                </table>\n                            </div>\n                            \n                            \n                            <div class=\"table-head bdrt\" [ngClass]=\"{ 'pr28' : productlist.length>6 }\" >\n                                <table>\n                                    <tr>\n                                        <th class=\"w40\"></th>\n                                        <th>\n                                            <div class=\"th-search-acmt\">\n                                                <mat-form-field>\n                                                    <input type=\"text\"  name=\"search\" [(ngModel)]=\"productName.search\" (input)=\"productSearchByNumber()\" matInput [matAutocomplete]=\"auto1\">\n                                                    <mat-autocomplete #auto1=\"matAutocomplete\" >\n                                                        \n                                                    </mat-autocomplete>\n                                                    \n                                                </mat-form-field> \n                                            </div>\n                                        </th>\n                                        <th class=\"w130\">&nbsp; </th>\n                                        <th class=\"w130\">&nbsp; </th>\n                                        <th class=\"w100\">&nbsp;</th>\n                                        <th class=\"w60\">&nbsp;</th>\n                                        <th class=\"w110\">&nbsp;</th>\n                                        <th class=\"w120\">&nbsp;</th>\n                                        <th class=\"w70\">&nbsp;</th>\n                                        <th class=\"w80\">&nbsp;</th>\n                                        <th class=\"w80\">&nbsp;</th>\n                                    </tr>\n                                </table>\n                            </div>\n                            \n                            <div class=\"table-container height-scroll\">\n                                <div class=\"table-content shadow-none\">\n                                    <table>\n                                        <tr *ngFor=\"let product of productlist;let index=index\">\n                                            <td class=\"w40\"><span *ngIf='product.qty'><mat-checkbox name=\"{{check+index}}\" [(ngModel)]=\"product.datacheck\"  (change)=\"select(product,index)\" >&nbsp; </mat-checkbox></span></td>\n                                            <td >{{product.partNumber}}</td>\n                                            <td class=\"w130\">{{product.productName}}</td>\n                                            <td class=\"w130\">EF5678</td>\n                                            <td class=\"w100\">\n                                              <a class=\"link-btn\" *ngIf=\"!product.isImage\">\n                                                  <label class=\"cs-file\">\n                                                      Add Image\n                                                      <input type=\"file\" (change)=\"insertImage($event,product.productName,index)\" style=\"display: none;\">\n                                                  </label>\n                                              </a>\n                                              <a *ngIf=\"product.isImage\" class=\"link-btn\" (click)=\"openImageDialog(index)\"> View Image </a>\n                                          </td>\n                                            <td class=\"w60 text-center\" >\n                                                <div class=\"td-input\">\n                                                    <input type=\"number\" (input)=\"calculateAmount(product.qty,index)\"  (keyup.enter)=\"addProduct('checkIndividual')\" name=\"qty\" #qty=\"ngModel\" [(ngModel)]=\"product.qty\" [value]=\"product.qty\" required min=\"1\" >\n                                                </div>\n                                                <p *ngIf='isCart==true && product.datacheck==true && product.qty==\"\"'>required</p>\n                                            </td>\n                                            <!--Pre-Fitment Field-->\n                                            <td class=\"w110\" *ngIf='draftDetail.productConcernType==1'>\n                                                <div class=\"td-input\" style=\"display: flex; align-items: center;\">\n                                                    <input matInput [matDatepicker]=\"picker\"   placeholder=\"Choose a date\" name=\"{{date+index}}\" [(ngModel)]=\"product.date\"  #date=\"ngModel\"   [max]=\"maxDateValue\" required>\n                                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                                    <mat-datepicker #picker></mat-datepicker>\n                                                </div>\n                                                <p *ngIf='isCart&&!product.date&&product.datacheck'>required</p>\n                                            </td>\n                                            <td class=\"w120\" *ngIf='draftDetail.productConcernType==1'> \n                                                <div class=\"td-input\">\n                                                    <input type=\"text\"    (keyup.enter)=\"addProduct('checkIndividual')\" name=\"{{invoice+index}}\" #invoice=\"ngModel\" [(ngModel)]=\"product.invoice\" required>\n                                                </div>\n                                                <p *ngIf='isCart&&!product.invoice&&product.datacheck'>required</p>\n                                            </td>\n                                            \n                                            <!--Pre-Fitment Field-->\n                                            <!--Post-Fitment Field-->\n                                            <td class=\"w110\" *ngIf='draftDetail.productConcernType==2'>\n                                                <div class=\"td-input\" style=\"display: flex; align-items: center;\">\n                                                    <input matInput [matDatepicker]=\"picker\"   placeholder=\"Choose a date\" name=\"{{date+index}}\" [(ngModel)]=\"product.date\"  #date=\"ngModel\"   [max]=\"maxDateValue\" required>\n                                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                                    <mat-datepicker #picker></mat-datepicker>\n                                                </div>\n                                            </td>\n                                            <td class=\"w120\" *ngIf='draftDetail.productConcernType==2'> \n                                                <div class=\"td-input\">\n                                                    <input type=\"text\"    (keyup.enter)=\"addProduct('checkIndividual')\" name=\"{{invoice+index}}\" #invoice=\"ngModel\" [(ngModel)]=\"product.invoice\" required>\n                                                </div>\n                                                \n                                            </td>\n                                            \n                                            <!--Post-Fitment Field-->\n                                            <td class=\"w70 text-right\">&#8377; {{product.priceUnit}}</td>\n                                            <td class=\"w80 text-right\">&#8377; {{product.amount}}</td>\n                                            <td class=\"w80\">\n                                                <a *ngIf=\"product.qty!=''\" class=\"action-cart\" mat-button><i class=\"material-icons green-clr\"(click)=\"addProduct('checkIndividual')\">save</i></a>\n                                            </td>\n                                            \n                                        </tr>\n                                    </table>\n                                </div>\n                                <div class=\"data-not-available\" *ngIf=\"productlist.length==0\">\n                                    <div class=\"outer\">\n                                        <div class=\"iinear\">\n                                            <div class=\"figure\" matRipple>\n                                                <div class=\"header\">\n                                                    <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                                </div>\n                                                \n                                                <div class=\"description\">\n                                                    <div class=\"cs-heading\">\n                                                        <h2>No Product</h2>\n                                                    </div>\n                                                    <div class=\"img\">\n                                                        <i class=\"material-icons\">error_outline</i>\n                                                    </div>\n                                                    <div class=\"psc\">\n                                                        <p>data not available</p>\n                                                        \n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"add\" class=\"cs-btn mt20 text-right\">\n                            <div class=\"in-btn\">\n                                <button mat-raised-button color=\"accent\" type=\"button\"  (click)=\"addProduct('checkk')\" >Add to Cart</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col s12 padding0\">\n                        <div class=\"heading-bg left-right-15 mt15\">\n                            <h2>Product In Cart</h2>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"cs-table left-right-15\">\n                                <div class=\"table-head\">\n                                    <table>\n                                        <tr>\n                                            <th>Category</th>\n                                            <th class=\"w110\">Total Item</th>\n                                            <th class=\"w100\">Total QTY.</th>\n                                            <th class=\"w110 text-right\">Amount</th>\n                                            <!-- <th class=\"w100 text-center\">Action</th> -->\n                                        </tr>\n                                    </table>\n                                </div>\n                                <div class=\"table-container\">\n                                    <div class=\"table-content shadow-none\">\n                                        <table>\n                                            <tr *ngFor=\"let order of tmp_array;let i=index\">\n                                                <td><a mat-button class=\"link-btn\" (click)=\"productDetail(order.category)\" >{{order.category}}</a></td>\n                                                <td class=\"w110 text-center\">{{order.totalItem}}</td>\n                                                <td class=\"w100\">{{order.qty}}</td>\n                                                <td class=\"w110 text-right\">{{order.amount}}</td>\n                                                <!-- <td class=\"w100 text-center\">\n                                                    <a  *ngIf=\"order.status=='1' || draftDetail.concernStatus!=2 \"  class=\"action-cart\" mat-button><i class=\"material-icons red-clr\"(click)=\"removeFromCart(i)\">delete_sweep</i></a>\n                                                </td> -->\n                                                \n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"col s12\">\n        <div class=\"cs-btn mt32 text-right\">\n            <div class=\"in-btn\">\n                <button   *ngIf=\"tmp_array.length!=0 && draftDetail.concernStatus!=2 &&draftDetail.concernStatus!=3\" mat-raised-button color=\"accent\"  type=\"button\" (click)=\"onSubmit(1)\" >Save As draft</button>\n                <button  *ngIf=\"tmp_array.length!=0 &&user.data.userType==3 && draftDetail.concernStatus!=3\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"onSubmit(2)\">Submit</button>\n                <button  *ngIf=\"tmp_array.length!=0 &&user.data.userType==2 &&draftDetail.concernStatus!=3\" mat-raised-button color=\"accent\" type=\"button\" (click)=\"onSubmit(3)\">Forward To Distributor</button>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n</div>\n</div>"

/***/ }),

/***/ "./src/app/customer-concern/draft-detail/draft-detail.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/customer-concern/draft-detail/draft-detail.component.ts ***!
  \*************************************************************************/
/*! exports provided: DraftDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DraftDetailComponent", function() { return DraftDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../image-modal/image-modal.component */ "./src/app/customer-concern/image-modal/image-modal.component.ts");
/* harmony import */ var _update_concern_update_concern_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../update-concern/update-concern.component */ "./src/app/customer-concern/update-concern/update-concern.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");









// import { userInfo } from 'os';
// import { userInfo } from 'os';
// import { userInfo } from 'os';
// import { userInfo } from 'os';
var DraftDetailComponent = /** @class */ (function () {
    function DraftDetailComponent(db, router, route, toast, dialog, alrt) {
        var _this = this;
        this.db = db;
        this.router = router;
        this.route = route;
        this.toast = toast;
        this.dialog = dialog;
        this.alrt = alrt;
        this.draftDetail = [];
        this.user = {};
        this.concern_form = {};
        this.other_form = {};
        this.prefitmentlist = [];
        this.pre_fitment = {};
        this.post_fitment = {};
        this.tmp_list = [];
        this.tmp_list1 = [];
        this.segmentList = [];
        this.finel_Array = [];
        this.categorylist = [];
        this.tmp_segmentList = [];
        this.product_list = [];
        this.partnumberlist = [];
        this.partnumberlist1 = [];
        this.tmp_detail = [];
        this.rolelists = [];
        this.tmp_array = [];
        this.producttmpList = [];
        this.role = [];
        this.productlist = [];
        this.isAssignCheck = true;
        this.cartProductList = [];
        this.concernDetail = [];
        this.data = {};
        this.categorydetail = [];
        // concernStatus1:any=3;
        this.isDraft = false;
        this.rolelistsales1 = [];
        this.distributorList = [];
        this.tmp_categoryList = [];
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        this.dropdownSettings3 = {};
        this.tmp_draft = [];
        this.catsearch = [];
        this.tmp_cat = [];
        this.tmpproduct_list = [];
        this.subsegsearch = [];
        this.tmp_subseg = [];
        this.tmpProductList = [];
        this.add = false;
        // cartArray:any=[];
        this.selectedFile = [];
        this.urls = [];
        this.documentData = [];
        this.isCart = false;
        this.isProceed = true;
        this.isResubmit = false;
        this.partnoArray = [];
        this.isRemark = false;
        this.temp = false;
        this.tmp = false;
        this.productName = [];
        this.tmp_pro = [];
        this.cartList = [];
        this.active = {};
        this.segsearch = [];
        this.tmp_seg = [];
        this.productConcernsModel = [];
        this.cat_detail = [];
        this.itemList = [];
        this.isItem = false;
        this.isIndex = -1;
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            _this.draft_detail();
        });
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        if (this.user.data.userType == 2) {
            this.distributorList = this.user['data']['salesUser']['staffWithJuniors']['salesUserNetworks'];
            console.log(this.distributorList);
        }
        else {
            this.userId = this.user['data']['distributerNetwork']['networkId'];
            console.log(this.user['data']['distributerNetwork']['networkId']);
        }
    }
    DraftDetailComponent.prototype.ngOnInit = function () {
        this.isSave = true;
        this.segment_list();
        this.category_list();
        console.log(this.user.data.userType, this.draftDetail.concernStatus);
        this.concern_form.info = false;
        this.dropdownSettings1 = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'segmentCode',
            textField: 'segment',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings2 = {
            closeDropDownOnSelection: true,
            singleSelection: true,
            idField: 'value',
            textField: 'text',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings3 = {
            singleSelection: false,
            idField: 'productName',
            textField: 'productName',
            enableCheckAll: false,
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.maxDateValue = new Date();
    };
    DraftDetailComponent.prototype.draft_detail = function () {
        var _this = this;
        console.log(this.id);
        this.loader = true;
        this.db.fetchData({ concernId: this.id }, 'concern/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.draftDetail = response['data'][0];
            _this.totalItems = _this.draftDetail.productConcerns.length;
            _this.userId = response['data'][0]['raisedByNetworkId'];
            _this.proceed();
            _this.productCheck();
            _this.check();
            if (_this.user.data.userType == 3 && _this.draftDetail.concernStatus == 3) {
                _this.concern_detail();
            }
            else {
                console.log(_this.draftDetail);
                for (var i = 0; i < _this.draftDetail.productConcerns.length; i++) {
                    _this.tmp_draft.push({ document: _this.draftDetail.productConcerns[i]['document'], productConcernId: _this.draftDetail.productConcerns[i]['productConcernId'], natureOfComplaint: _this.draftDetail.productConcerns[i]['natureOfComplaint'], statusUpdatedOn: _this.draftDetail.productConcerns[i]['statusUpdatedOn'], status: _this.draftDetail.productConcerns[i]['status'], statusUpdatedByUser: _this.draftDetail.productConcerns[i]['statusUpdatedByUser'], productName: _this.draftDetail.productConcerns[i]['productName'], partNumber: _this.draftDetail.productConcerns[i]['partNumber'], productId: _this.draftDetail.productConcerns[i]['productId'], priceUnit: _this.draftDetail.productConcerns[i]['rate'], segment: _this.draftDetail.productConcerns[i]['segmentCode'], category: _this.draftDetail.productConcerns[i]['category'], qty: _this.draftDetail.productConcerns[i]['qunatity'], amount: _this.draftDetail.productConcerns[i]['netAmount'], tmpqty: _this.draftDetail.productConcerns[i]['qunatity'], tmpamount: _this.draftDetail.productConcerns[i]['netAmount'], invoice: _this.draftDetail.productConcerns[i]['invoiceNumber'], date: _this.draftDetail.productConcerns[i]['mfgDate'], application: _this.draftDetail.productConcerns[i]['application'], isDealerItem: false });
                }
                console.log(_this.tmp_draft);
                for (var i = 0; i < _this.draftDetail.productConcerns.length; i++) {
                    _this.isDraft = true;
                    _this.addCart(_this.tmp_draft[i], i);
                }
            }
        });
    };
    DraftDetailComponent.prototype.resubmit = function () {
        console.log('hii');
    };
    DraftDetailComponent.prototype.productCheck = function () {
        this.concern_form.isProceed = false;
        this.concern_form.isCheck = false;
        this.concern_form.info = false;
        this.productlist = [];
        this.tmp_array = [];
        this.concernDetail = [];
        console.log(this.concern_form);
    };
    DraftDetailComponent.prototype.proceed = function () {
        this.isSave = false;
        this.concern_form.isProceed = true;
        this.concern_form.isCheck = false;
        console.log(this.concern_form);
    };
    DraftDetailComponent.prototype.check = function () {
        console.log("success");
        console.log(this.concern_form);
        if (this.draftDetail.concernType == '2') {
            this.concern_form.info = true;
        }
        else
            this.concern_form.info = false;
    };
    DraftDetailComponent.prototype.segment_list = function () {
        this.loader = true;
        console.log('hello');
        if (this.user.data.userType == 3) {
            this.segmentList = this.user['data']['distributerNetwork']['networkSegments'];
            this.tmp_segmentList = this.segmentList;
            console.log(this.segmentList);
        }
        else {
            this.segmentList = this.user['data']['salesUser']['staffSegments'];
            this.tmp_segmentList = this.segmentList;
            console.log(this.segmentList);
        }
    };
    DraftDetailComponent.prototype.category_list = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'category/list/').subscribe(function (response) {
            _this.categorylist = response['data'];
            _this.tmp_categoryList = _this.categorylist;
            console.log(response);
            _this.loader = false;
        });
    };
    DraftDetailComponent.prototype.categorySearch = function () {
        this.categorylist = [];
        for (var i = 0; i < this.tmp_categoryList.length; i++) {
            this.catsearch.search = this.catsearch.search.toLowerCase();
            this.tmp_cat = this.tmp_categoryList[i]['text'].toLowerCase();
            if (this.tmp_cat.includes(this.catsearch.search)) {
                this.categorylist.push(this.tmp_categoryList[i]);
            }
        }
    };
    DraftDetailComponent.prototype.onItemDeSelect = function (event, segment, category, productName) {
        console.log(event, segment, category, productName);
        console.log(event, productName);
        for (var i = 0; i < this.tmpProductList.length; i++) {
            if (this.tmpProductList[i].productName == event) {
                this.tmpProductList.splice(i, 1);
            }
        }
        console.log(this.tmpProductList);
    };
    DraftDetailComponent.prototype.productList = function (segment, category) {
        var _this = this;
        this.data.product = [];
        var selectedSegment = "";
        var selectedCategory = "";
        if (segment != null || category != null) {
            if (segment != null && category != null) {
                selectedCategory = category[0];
                selectedSegment = segment[0];
            }
            else if (segment != null) {
                selectedSegment = segment[0];
            }
            else if (category != null) {
                selectedCategory = category[0];
            }
        }
        this.productlist = [];
        this.loader = true;
        console.log(this.data);
        this.db.fetchData({ "segmentCode": selectedSegment, "categoryCode": selectedCategory, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
            console.log(result);
            setTimeout(function () {
                _this.loader = false;
            }, 700);
            if (result) {
                _this.producttmpList = result['data'];
                _this.product_list = [];
                console.log(_this.producttmpList);
                var _loop_1 = function (i) {
                    var index = _this.product_list.findIndex(function (x) { return x.productName == _this.producttmpList[i].productName; });
                    console.log(index);
                    if (index == -1) {
                        _this.product_list.push(_this.producttmpList[i]);
                    }
                };
                for (var i = 0; i < _this.producttmpList.length; i++) {
                    _loop_1(i);
                }
                _this.tmpproduct_list = _this.product_list;
            }
        });
    };
    DraftDetailComponent.prototype.subSegmentSearch = function () {
        this.product_list = [];
        for (var i = 0; i < this.tmpproduct_list.length; i++) {
            this.subsegsearch.search = this.subsegsearch.search.toLowerCase();
            this.tmp_subseg = this.tmpproduct_list[i]['productName'].toLowerCase();
            if (this.tmp_subseg.includes(this.subsegsearch.search)) {
                this.product_list.push(this.tmpproduct_list[i]);
            }
        }
    };
    DraftDetailComponent.prototype.getCartProductList = function (event, segment, category, productname) {
        var _this = this;
        console.log(event, segment, category, productname);
        var selectedCategory = "";
        var selectedSegment = "";
        var selectedproduct = "";
        if (segment != null || category != null || productname != null) {
            if (segment != null && category != null && productname != null) {
                console.log("hii");
                selectedCategory = category[0];
                selectedSegment = segment[0];
                selectedproduct = productname[productname.length - 1];
            }
            else if (segment != null && productname) {
                selectedSegment = segment[0];
                selectedproduct = productname[productname.length - 1];
            }
            else if (productname != null && productname) {
                selectedCategory = category[0];
                selectedproduct = productname[productname.length - 1];
            }
        }
        this.loader = true;
        console.log(segment, category, productname);
        this.db.fetchData({ "segmentCode": selectedSegment, "categoryCode": selectedCategory, "productName": selectedproduct, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.cartProductList = result['data'];
                for (var i = 0; i < _this.cartProductList.length; i++) {
                    _this.cartProductList[i].qty = '';
                    _this.cartProductList[i].amount = 0;
                    _this.cartProductList.isImage = false;
                    _this.cartProductList.document = '';
                }
                _this.productlist = _this.productlist.concat(_this.cartProductList);
                _this.tmpProductList = _this.productlist;
                _this.tmpProductList = _this.productlist;
                for (var i = 0; i < _this.tmpProductList.length; i++) {
                    _this.tmpProductList[i].priceUnit = _this.tmpProductList[i]['mrp'];
                    _this.tmpProductList.isImage = false;
                }
                console.log(_this.tmpProductList);
            }
        });
    };
    DraftDetailComponent.prototype.calculateAmount = function (qty, i) {
        this.add = false;
        console.log(qty, i);
        this.isDraft = false;
        if (qty > 0) {
            this.productlist[i].datacheck = true;
            this.productlist[i].qty = qty;
            this.productlist[i].amount = parseInt(this.productlist[i]['priceUnit']) * parseInt(qty);
            this.add = true;
        }
        else {
            this.alrt.error("Qty should be greater than 0");
            this.productlist[i].datacheck = false;
            this.productlist[i].qty.value = '';
            this.productlist[i].amount = 0;
            console.log(this.productlist[i].qty);
        }
        console.log(this.productlist);
    };
    DraftDetailComponent.prototype.select = function (product, index) {
        console.log(product.datacheck);
        if (product.datacheck == false) {
            product.invoice = '';
            product.date = '';
            product.qty = '';
        }
        var checkdata = this.productlist.findIndex(function (x) { return x.datacheck == true; });
        if (checkdata == -1) {
            this.add = false;
        }
    };
    DraftDetailComponent.prototype.insertImage = function (data, productName, index) {
        var _this = this;
        this.urls = [];
        this.documentData = [];
        this.selectedFile = [];
        this.name = productName;
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        setTimeout(function () {
            console.log(_this.urls[0]);
            console.log(data.target.files.length);
            for (var i = 0; i < data.target.files.length; i++) {
                _this.selectedFile.push(data.target.files[i]);
            }
            console.log(_this.urls[0]);
            console.log(_this.urls[0], _this.selectedFile[0]);
            _this.concernData = new FormData;
            _this.concernData.action = 1;
            _this.concernData.binaryData = _this.urls[0];
            _this.concernData.documentType = 3;
            _this.concernData.documentName = _this.name;
            _this.concernData.referenceId = 0;
            _this.concernData.fileName = "image" + i + ".jpg", _this.selectedFile[0];
            console.log(_this.urls);
            _this.productlist[index].isImage = true;
            _this.documentData.push({
                "documentType": _this.concernData.documentType,
                "documentName": _this.concernData.documentName,
                "fileName": _this.concernData.fileName,
                "referenceId": _this.concernData.referenceId,
                "iconName": _this.concernData.fileName,
                "binaryData": _this.concernData.binaryData,
                "action": _this.concernData.action
            });
            _this.productlist[index].document = _this.documentData[0];
            console.log(_this.productlist[index].document);
        }, 1000);
    };
    DraftDetailComponent.prototype.openImageDialog = function (index) {
        var _this = this;
        console.log("hello");
        if (this.draftDetail.concernStatus == 1) {
            this.doc = this.productlist[index].document.binaryData;
        }
        else {
            this.doc = this.tmp_detail[index].document.binaryData;
        }
        var dialogRef = this.dialog.open(_image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_6__["ImageModalComponent"], {
            width: '500px',
            data: {
                concernStatus: 0,
                document: this.doc
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            if (result == true) {
                console.log('The dialog was closed');
            }
            else {
                console.log('The dialog was closed');
                _this.selectedFile = [];
                _this.urls = [];
                _this.productlist[index].document = '';
                _this.productlist[index].isImage = false;
            }
        });
    };
    DraftDetailComponent.prototype.openImageDialog1 = function (index) {
        var _this = this;
        console.log(index);
        var dialogRef = this.dialog.open(_image_modal_image_modal_component__WEBPACK_IMPORTED_MODULE_6__["ImageModalComponent"], {
            width: '500px',
            data: {
                concernStatus: this.categorydetail.concernStatus,
                document: this.tmp_detail[index].document
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            if (result == true) {
                console.log('The dialog was closed');
            }
            else {
                console.log('The dialog was closed');
                _this.selectedFile = [];
                _this.urls = [];
                _this.productlist[index].document = {};
                _this.productlist[index].isImage = false;
            }
        });
    };
    DraftDetailComponent.prototype.addCart = function (product, index) {
        var _this = this;
        this.isCart = true;
        console.log(product);
        if (this.draftDetail.productConcernType == 1) {
            if (product.qty && product.invoice && product.date) {
                if (this.tmp_array.length == 0) {
                    console.log("hii test0");
                    this.tmp_array.push({ productConcernId: product['productConcernId'], document: product['document'], natureOfComplaint: product['natureOfComplaint'], statusUpdatedOn: product['statusUpdatedOn'], status: product['status'], statusUpdatedByUser: product['statusUpdatedByUser'], isDealerItem: product['isDealerItem'], productName: product['productName'], category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'] });
                    this.tmp_detail.push({ productConcernId: product['productConcernId'], document: product['document'], "acceptqty": product['acceptqty'], "rejectqty": product['rejectqty'], "dealerremark": product['dealerremark'], "salesremark": product['salesremark'], "natureOfProblem": product['natureOfProblem'], partNumber: product['partNumber'], productId: product['productId'], concernId: product['concernId'], priceUnit: product['priceUnit'], segment: product['segment'], category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'], application: product['application'], verified: product['verified'] });
                    this.concernDetail.push({ productConcernId: product['productConcernId'], document: product['document'], natureOfComplaint: product['natureOfComplaint'], statusUpdatedOn: product['statusUpdatedOn'], status: product['status'], statusUpdatedByUser: product['statusUpdatedByUser'], isDealerItem: product['isDealerItem'], productName: product['productName'], category: product['category'], productId: product['productId'], priceUnit: product['priceUnit'], qty: product['qty'], amount: product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'] });
                }
                else {
                    console.log(this.draftDetail.concernStatus, this.user.data.userType, product.verified);
                    if (this.draftDetail.concernStatus == '3' && this.user.data.userType == '3') {
                        if (this.draftDetail.concernStatus == '3' && this.user.data.userType == '3' && !product.verified) {
                            console.log("hii test1");
                            console.log(this.tmp_detail);
                            this.idIndex = this.tmp_detail.findIndex(function (row) { return row.productId == product.productId && !row.verified; });
                            console.log(this.idIndex);
                        }
                        else {
                            console.log("hii test3");
                            // this.idIndex=this.tmp_detail.findIndex(row => row.productId==product.productId);
                            this.idIndex = -1;
                        }
                    }
                    else {
                        this.idIndex = this.concernDetail.findIndex(function (row) { return row.productId == product.productId; });
                    }
                    console.log(this.idIndex);
                    if (this.idIndex != '-1') {
                        console.log('check');
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        console.log(itemIndex);
                        if (itemIndex != -1) {
                            console.log(this.tmp_array[itemIndex].qty, this.concernDetail[this.idIndex].tmpqty);
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) - parseInt(this.concernDetail[this.idIndex].tmpqty);
                            this.tmp_array[itemIndex].amount = parseInt(this.tmp_array[itemIndex].amount) - parseInt(this.concernDetail[this.idIndex].tmpamount);
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) + parseInt(product.qty);
                            this.tmp_array[itemIndex].amount = parseInt(product.amount) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                        this.concernDetail[this.idIndex]['qty'] = parseInt(product.qty);
                        this.concernDetail[this.idIndex]['tmpqty'] = parseInt(product.qty);
                        this.concernDetail[this.idIndex]['amount'] = parseInt(product.amount);
                        this.concernDetail[this.idIndex]['tmpamount'] = parseInt(product.amount);
                        if (product.document != '') {
                            if (this.concernDetail[this.idIndex].document != null) {
                                this.db.fetchData([{
                                        "documentId": this.concernDetail[this.idIndex].document.documentId,
                                        "action": 2,
                                        "fileName": this.concernDetail[this.idIndex].document.fileName,
                                    }], 'document/update').subscribe(function (response) {
                                    console.log(response);
                                    _this.concernDetail[_this.idIndex]['document'] = product['document'];
                                });
                            }
                            else {
                                this.concernDetail[this.idIndex]['document'] = product['document'];
                            }
                        }
                        this.tmp_detail[this.idIndex]['qty'] = parseInt(product.qty);
                        this.tmp_detail[this.idIndex]['tmpqty'] = parseInt(product.qty);
                        this.tmp_detail[this.idIndex]['amount'] = parseInt(product.amount);
                        this.tmp_detail[this.idIndex]['tmpamount'] = parseInt(product.amount);
                    }
                    if (this.idIndex == '-1') {
                        console.log("hii -1");
                        this.tmp_detail.push({ productConcernId: product['productConcernId'], document: product['document'], "acceptqty": product['acceptqty'], "rejectqty": product['rejectqty'], "dealerremark": product['dealerremark'], "salesremark": product['salesremark'], "natureOfProblem": product['natureOfProblem'], partNumber: product['partNumber'], productId: product['productId'], concernId: product['concernId'], priceUnit: product['priceUnit'], segment: product['segment'], category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'], application: product['application'], verified: product['verified'] });
                        this.concernDetail.push({ productConcernId: product['productConcernId'], document: product['document'], natureOfComplaint: product['natureOfComplaint'], statusUpdatedOn: product['statusUpdatedOn'], status: product['status'], statusUpdatedByUser: product['statusUpdatedByUser'], isDealerItem: product['isDealerItem'], productName: product['productName'], category: product['category'], "productId": product.productId, "qty": product.qty, "priceUnit": product.priceUnit, "amount": product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpamount: product['amount'], tmpqty: product['qty'], });
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        if (itemIndex === -1) {
                            this.tmp_array.push({ document: product['document'], natureOfComplaint: product['natureOfComplaint'], statusUpdatedOn: product['statusUpdatedOn'], status: product['status'], statusUpdatedByUser: product['statusUpdatedByUser'], isDealerItem: product['isDealerItem'], productName: product['productName'], category: product['category'], qty: product['qty'], amount: product['amount'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'], });
                        }
                        else {
                            console.log('checkccc');
                            this.tmp_array[itemIndex].qty = parseInt(product['qty']) + parseInt(this.tmp_array[itemIndex].qty);
                            this.tmp_array[itemIndex].amount = parseInt(product['amount']) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                    }
                }
                console.log(this.tmp_array);
                console.log(this.concernDetail);
                if (this.tmp_array) {
                    this.concern_form.info = true;
                    console.log(this.concern_form);
                }
                console.log(this.isDraft);
                if (!this.isDraft) {
                    console.log("pre");
                    this.productlist[index].datacheck = false;
                    if (this.productlist[index].datacheck == false) {
                        this.productlist[index].qty = '';
                        this.productlist[index].invoice = '';
                        this.productlist[index].amount = 0;
                        this.productlist[index].date = '';
                        this.toast.openSucess('Concern added successfully To Cart', '');
                    }
                    else {
                        this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                }
                for (var i = 0; i < this.tmp_array.length; i++) {
                    this.tmp_array[i].totalItem = 0;
                    for (var j = 0; j < this.concernDetail.length; j++) {
                        if (this.tmp_array[i].category == this.concernDetail[j].category) {
                            this.tmp_array[i].totalItem = this.tmp_array[i].totalItem + 1;
                        }
                    }
                }
                console.log(this.tmp_array);
            }
            else {
                this.alrt.error("Some Fields are Empty Please Fill Them First");
            }
            var checkdata = this.productlist.findIndex(function (x) { return x.datacheck == true; });
            if (checkdata == -1) {
                this.add = false;
            }
        }
        else {
            if (product.qty) {
                if (this.tmp_array.length == 0) {
                    this.tmp_array.push({ productConcernId: product['productConcernId'], document: product['document'], natureOfComplaint: product['natureOfComplaint'], statusUpdatedOn: product['statusUpdatedOn'], status: product['status'], statusUpdatedByUser: product['statusUpdatedByUser'], isDealerItem: product['isDealerItem'], productName: product['productName'], category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'] });
                    this.tmp_detail.push({ productConcernId: product['productConcernId'], document: product['document'], "acceptqty": product['acceptqty'], "rejectqty": product['rejectqty'], "dealerremark": product['dealerremark'], "salesremark": product['salesremark'], "natureOfProblem": product['natureOfProblem'], partNumber: product['partNumber'], productId: product['productId'], concernId: product['concernId'], priceUnit: product['priceUnit'], segment: product['segment'], category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'], application: product['application'], verified: product['verified'] });
                    this.concernDetail.push({ productConcernId: product['productConcernId'], document: product['document'], natureOfComplaint: product['natureOfComplaint'], statusUpdatedOn: product['statusUpdatedOn'], status: product['status'], statusUpdatedByUser: product['statusUpdatedByUser'], isDealerItem: product['isDealerItem'], productName: product['productName'], category: product['category'], productId: product['productId'], priceUnit: product['priceUnit'], qty: product['qty'], amount: product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'] });
                }
                else {
                    console.log(this.draftDetail.concernStatus, this.user.data.userType, product.verified);
                    if (this.draftDetail.concernStatus == '3' && this.user.data.userType == '3') {
                        if (this.draftDetail.concernStatus == '3' && this.user.data.userType == '3' && !product.verified) {
                            console.log("hii test1");
                            console.log(this.tmp_detail);
                            this.idIndex = this.tmp_detail.findIndex(function (row) { return row.productId == product.productId && !row.verified; });
                            console.log(this.idIndex);
                        }
                        else {
                            console.log("hii test3");
                            this.idIndex = this.tmp_detail.findIndex(function (row) { return row.productId == product.productId; });
                        }
                    }
                    else {
                        this.idIndex = this.concernDetail.findIndex(function (row) { return row.productId == product.productId; });
                    }
                    console.log(this.idIndex);
                    if (this.idIndex != '-1') {
                        console.log('check');
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        console.log(itemIndex);
                        if (itemIndex != -1) {
                            console.log(this.tmp_array[itemIndex].qty, this.concernDetail[this.idIndex].tmpqty);
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) - parseInt(this.concernDetail[this.idIndex].tmpqty);
                            this.tmp_array[itemIndex].amount = parseInt(this.tmp_array[itemIndex].amount) - parseInt(this.concernDetail[this.idIndex].tmpamount);
                            this.tmp_array[itemIndex].qty = parseInt(this.tmp_array[itemIndex].qty) + parseInt(product.qty);
                            this.tmp_array[itemIndex].amount = parseInt(product.amount) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                        this.concernDetail[this.idIndex]['qty'] = parseInt(product.qty);
                        this.concernDetail[this.idIndex]['tmpqty'] = parseInt(product.qty);
                        this.concernDetail[this.idIndex]['amount'] = parseInt(product.amount);
                        this.concernDetail[this.idIndex]['tmpamount'] = parseInt(product.amount);
                        this.concernDetail[this.idIndex]['document'] = product.document;
                        this.tmp_detail[this.idIndex]['qty'] = parseInt(product.qty);
                        this.tmp_detail[this.idIndex]['tmpqty'] = parseInt(product.qty);
                        this.tmp_detail[this.idIndex]['amount'] = parseInt(product.amount);
                        this.tmp_detail[this.idIndex]['tmpamount'] = parseInt(product.amount);
                    }
                    if (this.idIndex == '-1') {
                        console.log("hii -1");
                        this.tmp_detail.push({ productConcernId: product['productConcernId'], document: product['document'], "acceptqty": product['acceptqty'], "rejectqty": product['rejectqty'], "dealerremark": product['dealerremark'], "salesremark": product['salesremark'], "natureOfProblem": product['natureOfProblem'], partNumber: product['partNumber'], productId: product['productId'], concernId: product['concernId'], priceUnit: product['priceUnit'], segment: product['segment'], category: product['category'], qty: product['qty'], amount: product['amount'], tmpqty: product['qty'], tmpamount: product['amount'], invoice: product['invoice'], date: product['date'], application: product['application'], verified: product['verified'] });
                        this.concernDetail.push({ productConcernId: product['productConcernId'], document: product['document'], natureOfComplaint: product['natureOfComplaint'], statusUpdatedOn: product['statusUpdatedOn'], status: product['status'], statusUpdatedByUser: product['statusUpdatedByUser'], isDealerItem: product['isDealerItem'], productName: product['productName'], category: product['category'], "productId": product.productId, "qty": product.qty, "priceUnit": product.priceUnit, "amount": product['amount'], partNumber: product['partNumber'], segment: product['segment'], invoice: product['invoice'], date: product['date'], tmpamount: product['amount'], tmpqty: product['qty'], });
                        var itemIndex = this.tmp_array.findIndex(function (row) { return row.category == product['category']; });
                        if (itemIndex === -1) {
                            this.tmp_array.push({ document: product['document'], natureOfComplaint: product['natureOfComplaint'], statusUpdatedOn: product['statusUpdatedOn'], status: product['status'], statusUpdatedByUser: product['statusUpdatedByUser'], isDealerItem: product['isDealerItem'], productName: product['productName'], category: product['category'], qty: product['qty'], amount: product['amount'], invoice: product['invoice'], date: product['date'], tmpqty: product['qty'], tmpamount: product['amount'], });
                        }
                        else {
                            console.log('checkccc');
                            this.tmp_array[itemIndex].qty = parseInt(product['qty']) + parseInt(this.tmp_array[itemIndex].qty);
                            this.tmp_array[itemIndex].amount = parseInt(product['amount']) + parseInt(this.tmp_array[itemIndex].amount);
                        }
                    }
                }
                console.log(this.concernDetail);
                if (this.tmp_array) {
                    this.concern_form.info = true;
                    console.log(this.concern_form);
                }
                console.log(this.isDraft);
                if (!this.isDraft) {
                    console.log("post");
                    this.productlist[index].datacheck = false;
                    if (this.productlist[index].datacheck == false) {
                        this.productlist[index].qty = '';
                        this.productlist[index].invoice = '';
                        this.productlist[index].date = '';
                        this.productlist[index].amount = 0;
                        this.toast.openSucess('Concern updated successfully', '');
                    }
                    else {
                        this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                }
                for (var i = 0; i < this.tmp_array.length; i++) {
                    this.tmp_array[i].totalItem = 0;
                    for (var j = 0; j < this.concernDetail.length; j++) {
                        if (this.tmp_array[i].category == this.concernDetail[j].category) {
                            this.tmp_array[i].totalItem = this.tmp_array[i].totalItem + 1;
                        }
                    }
                }
                console.log(this.tmp_array);
            }
            else {
                this.alrt.error("Some Fields are Empty Please Fill Them First");
            }
            var checkdata = this.productlist.findIndex(function (x) { return x.datacheck == true; });
            if (checkdata == -1) {
                this.add = false;
            }
        }
        for (var i = 0; i < this.tmp_detail.length; i++) {
            if (this.tmp_detail[i].document) {
                this.tmp_detail[i].isImage = true;
            }
        }
    };
    DraftDetailComponent.prototype.remark = function () {
        this.isRemark = false;
        this.isProceed = false;
        for (var i = 0; i < this.tmp_detail.length; i++) {
            if (this.tmp_detail[i].dealerremark != '') {
                this.isRemark = true;
                this.isProceed = true;
            }
        }
    };
    DraftDetailComponent.prototype.addProduct = function (kk) {
        this.partnoArray = [];
        console.log(kk);
        this.isCart = true;
        if (this.draftDetail.productConcernType == 1) {
            for (var i = 0; i < this.productlist.length; i++) {
                if (this.productlist[i].datacheck == true) {
                    console.log('hii');
                    // this.cartArray.push(this.productlist[i]);
                    console.log(i, this.productlist[i].qty, this.productlist[i].invoice, this.productlist[i].date);
                    if (this.productlist[i].qty && this.productlist[i].invoice && this.productlist[i].date) {
                        this.isProceed = false;
                        this.isResubmit = true;
                        console.log(i, this.productlist[i].qty, this.productlist[i].invoice, this.productlist[i].date);
                        if (this.draftDetail.concernStatus == '3' && this.user.data.userType == '3') {
                            console.log(i, this.productlist[i].qty, this.productlist[i].invoice, this.productlist[i].date);
                            console.log(this.productlist[i]);
                            console.log("check condition");
                            this.productlist[i].isDealerItem = true;
                            this.productlist[i].verified = false;
                        }
                        console.log(this.productlist[i]);
                        var cartArr = JSON.parse(JSON.stringify(this.productlist[i]));
                        this.addCart(cartArr, i);
                    }
                    else {
                        console.log('test');
                        this.partnoArray.push(this.productlist[i].partNumber);
                    }
                }
            }
            console.log(this.partnoArray);
            if (this.partnoArray.length) {
                this.alrt.error("Some field are Empty Please Fill Them First");
            }
            // console.log(this.cartArray);
        }
        else {
            for (var i = 0; i < this.productlist.length; i++) {
                if (this.productlist[i].datacheck == true) {
                    console.log('hii');
                    //  this.cartArray.push(this.productlist[i]);
                    if (this.productlist[i].qty) {
                        this.isProceed = false;
                        this.isResubmit = true;
                        console.log(i, this.productlist[i].qty, this.productlist[i].invoice, this.productlist[i].date);
                        if (this.draftDetail.concernStatus == '3' && this.user.data.userType == '3') {
                            console.log(i, this.productlist[i].qty, this.productlist[i].invoice, this.productlist[i].date);
                            console.log(this.productlist[i]);
                            console.log("check condition");
                            this.productlist[i].isDealerItem = true;
                            this.productlist[i].verified = false;
                        }
                        console.log(this.productlist[i]);
                        var cartArr = JSON.parse(JSON.stringify(this.productlist[i]));
                        this.addCart(cartArr, i);
                    }
                    else {
                        console.log('test');
                        this.partnoArray.push(this.productlist[i].partNumber);
                    }
                }
            }
            console.log(this.partnoArray);
            if (this.partnoArray.length) {
                this.alrt.error("Some field are Empty Please Fill Them First");
            }
            //  console.log(this.cartArray);
        }
    };
    DraftDetailComponent.prototype.removeFromCart = function (index) {
        var _this = this;
        this.temp = false;
        this.alrt.delete("Product").then(function (result) {
            if (result) {
                console.log(_this.tmp_array[index]['category']);
                _this.concernDetail = _this.concernDetail.filter(function (row) { return row.category != _this.tmp_array[index]['category']; });
                _this.temp = true;
            }
            if (_this.temp) {
                _this.tmp_array.splice(index, 1);
            }
        });
    };
    DraftDetailComponent.prototype.productDetail = function (category) {
        var _this = this;
        this.concern_form.product_type = this.draftDetail.productConcernType;
        var dialogRef = this.dialog.open(_update_concern_update_concern_component__WEBPACK_IMPORTED_MODULE_7__["UpdateConcernComponent"], {
            width: '1024px',
            data: {
                product: this.concernDetail,
                category: category,
                concern: this.concern_form,
                concernStatus: this.draftDetail.concernStatus
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.isDraft = true;
            console.log('The dialog was closed');
            var tmpCartArray = _this.db.getData();
            console.log(tmpCartArray);
            if (tmpCartArray) {
                _this.tmp_array = [];
                _this.concernDetail = [];
                _this.showInCart(tmpCartArray);
            }
        });
    };
    DraftDetailComponent.prototype.showInCart = function (orderArray) {
        if (orderArray === void 0) { orderArray = []; }
        console.log(orderArray);
        for (var i = 0; i < orderArray.length; i++) {
            orderArray[i].isDealerItem = true;
            console.log(orderArray);
            this.addCart(orderArray[i], i);
        }
        console.log(this.tmp_array);
    };
    DraftDetailComponent.prototype.productSearchByNumber = function () {
        console.log("hello");
        this.productlist = [];
        for (var i = 0; i < this.tmpProductList.length; i++) {
            this.productName.search = this.productName.search.toLowerCase();
            this.tmp_pro = this.tmpProductList[i]['partNumber'].toLowerCase();
            if (this.tmp_pro.includes(this.productName.search)) {
                this.productlist.push(this.tmpProductList[i]);
            }
        }
    };
    DraftDetailComponent.prototype.partno_list = function () {
        var _this = this;
        this.loader = true;
        if (this.draftDetail.productConcernType == 1) {
            this.db.fetchData({ "currentPage": 1,
                "pageSize": 50, "segmentCode": this.pre_fitment.segment, "categoryCode": this.pre_fitment.category, }, 'product/list').subscribe(function (response) {
                _this.partnumberlist = response['data'];
                console.log(_this.partnumberlist);
                _this.loader = false;
            });
        }
        else {
            this.db.fetchData({ "currentPage": 1,
                "pageSize": 50, "segmentCode": this.post_fitment.segment, "categoryCode": this.post_fitment.category, }, 'product/list').subscribe(function (response) {
                _this.partnumberlist1 = response['data'];
                console.log(_this.partnumberlist1);
                _this.loader = false;
            });
        }
    };
    DraftDetailComponent.prototype.rolelist = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.rolelists = response['data'];
            var filterrolesales = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.rolelistsales1 = filterrolesales[0].roles;
            console.log(_this.rolelistsales1);
        });
    };
    DraftDetailComponent.prototype.select_role = function (value, index, event) {
        if (event.checked) {
            this.isAssignCheck = true;
            this.role.push(value);
            console.log(this.role);
        }
        else {
            console.log(index);
            console.log(this.role[0]);
            for (var j = 0; j < this.rolelistsales1.length; j++) {
                if (this.rolelistsales1[index]['roleId'] == this.role[j]) {
                    this.role.splice(j, 1);
                }
            }
            console.log(this.role);
        }
    };
    DraftDetailComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    DraftDetailComponent.prototype.segmentSearch = function () {
        this.segmentList = [];
        for (var i = 0; i < this.tmp_segmentList.length; i++) {
            this.segsearch.search = this.segsearch.search.toLowerCase();
            this.tmp_seg = this.tmp_segmentList[i]['text'].toLowerCase();
            if (this.tmp_seg.includes(this.segsearch.search)) {
                this.segmentList.push(this.tmp_segmentList[i]);
            }
        }
    };
    DraftDetailComponent.prototype.onSubmit = function (status) {
        var _this = this;
        console.log(this.concernDetail);
        if (this.user.data.userType == 3) {
            this.verified = false;
        }
        else {
            this.verified = true;
        }
        if (this.draftDetail.concernType == 1) {
            if (this.draftDetail.productConcernType == 1) {
                this.productConcernType = 1;
            }
            else {
                this.productConcernType = 2;
            }
            console.log(this.tmp_array);
            if (this.tmp_array.length != 0) {
                this.loader = true;
                console.log(this.concernDetail.length);
                if (this.user.data.userType == 2) {
                    for (var i = 0; i < this.concernDetail.length; i++) {
                        console.log(this.concernDetail[i]);
                        this.productConcernsModel.push({
                            "productConcernId": this.concernDetail[i].productConcernId,
                            "concernId": this.draftDetail.concernId,
                            "segmentCode": this.concernDetail[i].segment,
                            "category": this.concernDetail[i].category,
                            "partNumber": this.concernDetail[i].partNumber,
                            "qunatity": this.concernDetail[i].qty,
                            "rejectedQuantity": 0,
                            "rate": this.concernDetail[i].priceUnit,
                            "productId": this.concernDetail[i].productId,
                            "netAmount": this.concernDetail[i].amount,
                            "mfgDate": this.concernDetail[i].date,
                            "acceptedQuantity": this.concernDetail[i].qty,
                            "document": this.concernDetail[i].document,
                            "invoiceNumber": this.concernDetail[i].invoice,
                            "verified": this.verified
                        });
                    }
                }
                else {
                    for (var i = 0; i < this.concernDetail.length; i++) {
                        console.log(this.concernDetail[i]);
                        this.productConcernsModel.push({
                            "productConcernId": this.concernDetail[i].productConcernId,
                            "concernId": this.draftDetail.concernId,
                            "segmentCode": this.concernDetail[i].segment,
                            "category": this.concernDetail[i].category,
                            "partNumber": this.concernDetail[i].partNumber,
                            "document": this.concernDetail[i].document,
                            "qunatity": this.concernDetail[i].qty,
                            "rate": this.concernDetail[i].priceUnit,
                            "productId": this.concernDetail[i].productId,
                            "netAmount": this.concernDetail[i].amount,
                            "mfgDate": this.concernDetail[i].date,
                            "invoiceNumber": this.concernDetail[i].invoice,
                            "verified": this.verified
                        });
                    }
                }
                console.log(this.productConcernsModel);
                this.db.fetchData({ "concernId": this.draftDetail.concernId, "productConcernType": this.productConcernType, "concernStatus": status, "concernType": this.draftDetail.concernType, "raisedByNetworkId": this.userId,
                    "productConcernsModel": this.productConcernsModel }, 'concern/update').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    _this.loader = false;
                    if (_this.message == "Concern updated successfully") {
                        _this.toast.openSucess('Concern updated successfully', '');
                        if (status == 1) {
                            localStorage.setItem('concernListType', 'Draft');
                            _this.router.navigate(['/concern-list']);
                        }
                        if (status == 2) {
                            localStorage.setItem('concernListType', 'Submit');
                            _this.router.navigate(['/concern-list']);
                        }
                        if (status == 3) {
                            localStorage.setItem('concernListType', 'Forward');
                            _this.router.navigate(['/concern-list']);
                        }
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    ;
                });
            }
            else {
                this.alrt.error("Please Select Some Product");
            }
        }
    };
    DraftDetailComponent.prototype.submit = function (status) {
        var _this = this;
        this.loader = true;
        console.log(status);
        for (var i = 0; i < this.tmp_detail.length; i++) {
            this.productConcernsModel.push({
                "productConcernId": this.tmp_detail[i].productConcernId,
                "concernId": this.tmp_detail[i].concernId,
                "productId": this.tmp_detail[i].productId,
                "segmentCode": this.tmp_detail[i].segment,
                "category": this.tmp_detail[i].category,
                "partNumber": this.tmp_detail[i].partNumber,
                "application": this.tmp_detail[i].application,
                "mfgDate": this.tmp_detail[i].date,
                "invoiceNumber": this.tmp_detail[i].invoice,
                "qunatity": this.tmp_detail[i].qty,
                "acceptedQuantity": this.tmp_detail[i].acceptqty,
                "rejectedQuantity": this.tmp_detail[i].rejectqty,
                "networkRemarks": this.tmp_detail[i].dealerremark,
                "salesRemarks": this.tmp_detail[i].salesremark,
                "rate": this.tmp_detail[i].priceUnit,
                "document": this.tmp_detail[i].document,
                "netAmount": this.tmp_detail[i].amount,
                "verified": this.tmp_detail[i].verified
            });
        }
        this.db.fetchData({ "concernId": this.id,
            "concernType": this.categorydetail.concernType,
            "raisedByNetworkId": this.categorydetail.raisedByNetworkId,
            "concernStatus": status,
            "productConcernType": this.categorydetail.productConcernType, "productConcernsModel": this.productConcernsModel }, 'concern/update').subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            _this.loader = false;
            if (_this.message == "Concern updated successfully") {
                if (status == 2) {
                    localStorage.setItem('concernListType', 'Submit');
                    _this.router.navigate(['/concern-list']);
                }
                if (status == 3) {
                    localStorage.setItem('concernListType', 'Forward');
                    _this.router.navigate(['/concern-list']);
                }
                if (status == 4) {
                    localStorage.setItem('concernListType', 'Approval');
                    _this.router.navigate(['/concern-list']);
                }
                if (status == 5) {
                    localStorage.setItem('concernListType', 'Approved');
                    _this.router.navigate(['/concern-list']);
                }
                _this.toast.openSucess('Customer Concern status change successfully', '');
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
        });
    };
    DraftDetailComponent.prototype.concern_detail = function () {
        var _this = this;
        this.isDraft = true;
        this.loader = true;
        this.db.fetchData({ concernId: this.id }, 'concern/list').subscribe(function (response) {
            console.log(response);
            _this.categorydetail = response['data'][0];
            _this.totalItem = _this.categorydetail.productConcerns.length;
            console.log(_this.totalItem);
            console.log(_this.categorydetail);
            _this.loader = false;
            for (var i = 0; i < _this.categorydetail.productConcerns.length; i++) {
                _this.cat_detail.push({ "productConcernId": _this.categorydetail.productConcerns[i].productConcernId, "document": _this.categorydetail.productConcerns[i]['document'], "dealerremark": _this.categorydetail.productConcerns[i]['networkRemarks'], "salesremark": _this.categorydetail.productConcerns[i]['salesRemarks'], "natureOfProblem": _this.categorydetail.productConcerns[i]['natureOfComplaint'], partNumber: _this.categorydetail.productConcerns[i]['partNumber'], productId: _this.categorydetail.productConcerns[i]['productId'], concernId: _this.categorydetail.productConcerns[i]['concernId'], priceUnit: _this.categorydetail.productConcerns[i]['rate'], segment: _this.categorydetail.productConcerns[i]['segmentCode'], category: _this.categorydetail.productConcerns[i]['category'], qty: _this.categorydetail.productConcerns[i]['qunatity'], amount: _this.categorydetail.productConcerns[i]['netAmount'], tmpqty: _this.categorydetail.productConcerns[i]['qunatity'], tmpamount: _this.categorydetail.productConcerns[i]['netAmount'], invoice: _this.categorydetail.productConcerns[i]['invoiceNumber'], date: _this.categorydetail.productConcerns[i]['mfgDate'], application: _this.categorydetail.productConcerns[i]['application'], verified: _this.categorydetail.productConcerns[i]['verified'] });
                if (_this.categorydetail.productConcerns[i].rejectedQuantity == 0 && _this.categorydetail.productConcerns[i]['acceptedQuantity'] == 0) {
                    _this.cat_detail[i].rejectqty = '';
                    _this.cat_detail[i]['acceptqty'] = '';
                }
                else {
                    _this.cat_detail[i].rejectqty = _this.categorydetail.productConcerns[i]['rejectedQuantity'];
                    _this.cat_detail[i]['acceptqty'] = _this.categorydetail.productConcerns[i]['acceptedQuantity'];
                }
            }
            console.log(_this.cat_detail);
            for (var i = 0; i < _this.cat_detail.length; i++) {
                console.log(_this.cat_detail[i]);
                _this.addCart(_this.cat_detail[i], i);
            }
            _this.categorydetail.totalQty = 0;
            _this.categorydetail.totalAmount = 0;
            for (var i = 0; i < _this.categorydetail.productConcerns.length; i++) {
                if (_this.categorydetail.concernType == 1) {
                    console.log('hii');
                    console.log(_this.categorydetail.productConcerns[i].netAmount, _this.categorydetail.productConcerns[i].qunatity);
                    _this.categorydetail.totalQty = _this.categorydetail.totalQty + _this.categorydetail.productConcerns[i].qunatity;
                    _this.categorydetail.totalAmount = _this.categorydetail.totalAmount + _this.categorydetail.productConcerns[i].netAmount;
                }
            }
        });
    };
    DraftDetailComponent.prototype.Show_Item = function (category, index) {
        console.log(this.tmp_detail);
        for (var i = 0; i < this.tmp_detail.length; i++) {
            this.tmp_detail[i].datacheck = false;
        }
        if (this.isIndex != index) {
            this.isItem = true;
            this.itemList = [];
        }
        else {
            this.isItem = !this.isItem;
        }
        if (this.isItem) {
            this.isIndex = index;
            for (var i = 0; i < this.tmp_detail.length; i++) {
                if (category === this.tmp_detail[i]['category']) {
                    this.itemList.push(this.tmp_detail[i]);
                }
            }
            console.log(this.itemList);
        }
        else {
            this.itemList = [];
        }
    };
    DraftDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-draft-detail',
            template: __webpack_require__(/*! ./draft-detail.component.html */ "./src/app/customer-concern/draft-detail/draft-detail.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"],
            _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"],
            src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], DraftDetailComponent);
    return DraftDetailComponent;
}());



/***/ }),

/***/ "./src/app/customer-concern/image-modal/image-modal.component.html":
/*!*************************************************************************!*\
  !*** ./src/app/customer-concern/image-modal/image-modal.component.html ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n  <mat-dialog-content class=\"mat-typography\" style=\"overflow: inherit;\">\n      <p class=\"heading\">PRODUCT INFORMATION</p>\n      <div class=\"col s12 padding0\" *ngFor=\"let urlData of urls;let i=index\">\n        <div class=\"cs-image\">\n          <img *ngIf=\"data.concernStatus==0\" src={{urlData}} >\n          <img *ngIf=\"data.concernStatus!=0\"  src=\"{{api+urlData.documentId+'/'+'1'}}\">\n          <div *ngIf=\"data.concernStatus==0\" class=\"overlay\">\n            <a class=\"del-btn\" (click)=\"deleteimg(i)\"><i class=\"material-icons\">delete_sweep</i></a>\n          </div>\n        </div>\n      </div>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n      <!-- <button mat-button  >Update</button> -->\n      <button mat-raised-button color=\"warn\"  [mat-dialog-close]=\"true\" >Close</button>\n  </mat-dialog-actions>\n</div>"

/***/ }),

/***/ "./src/app/customer-concern/image-modal/image-modal.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/customer-concern/image-modal/image-modal.component.ts ***!
  \***********************************************************************/
/*! exports provided: ImageModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageModalComponent", function() { return ImageModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");






var ImageModalComponent = /** @class */ (function () {
    function ImageModalComponent(data, dialog, toast, service, confirm) {
        this.data = data;
        this.dialog = dialog;
        this.toast = toast;
        this.service = service;
        this.confirm = confirm;
        this.urls = [];
        console.log(data);
    }
    ImageModalComponent.prototype.deleteimg = function (index) {
        this.urls.splice(index, 1);
        this.dialog.closeAll();
    };
    ImageModalComponent.prototype.ngOnInit = function () {
        this.url = this.service.dburl;
        this.request = 'download/document/';
        this.api = this.url + this.request;
        console.log(this.api);
        this.urls.push(this.data.document);
        console.log(this.urls);
    };
    ImageModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-image-modal',
            template: __webpack_require__(/*! ./image-modal.component.html */ "./src/app/customer-concern/image-modal/image-modal.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], ImageModalComponent);
    return ImageModalComponent;
}());



/***/ }),

/***/ "./src/app/customer-concern/update-concern/update-concern.component.html":
/*!*******************************************************************************!*\
  !*** ./src/app/customer-concern/update-concern/update-concern.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n    <p class=\"heading\">PRODUCT INFORMATION</p>\n    <div *ngIf=\"isView==false\" class=\"modal-img\">\n        <div class=\"modal-img-in ds-none\" >\n                <img src=\"\">\n                <a class=\"del-btn\"><i class=\"material-icons\">delete_sweep</i></a>\n        </div>\n    </div>\n    <div *ngIf=\"isView==true\" class=\"modal-img\">\n            <div class=\"modal-img-in ds-block\" >\n                    <img *ngIf=\"isAlready\" src=\"{{api+docId+'/'+'1'}}\">\n                    <img *ngIf=\"!isAlready\" src=\"{{urlData}}\">\n                    <a class=\"del-btn\"><i class=\"material-icons\">delete_sweep</i></a>\n            </div>\n        </div>\n    <mat-dialog-content class=\"mat-typography pl15 pr15\" style=\"overflow-x: hidden !important;\">\n        <div class=\"col s12 padding0\">\n            <div class=\"cs-table left-right-15\">\n                <div class=\"table-head\">\n                    <table>\n                        <tr>\n                            <th class=\"w100\">Part Number</th>\n                            <th class=\"w90\">Category</th>\n                            <th  class=\"w90\">Segment</th>\n                            <th  class=\"w90\">Product Name</th>\n                            <th class=\"w70\">QTY</th>\n                            <th class=\"w140\">MFG Date</th>\n                            <th class=\"w100\">Invoice</th>\n                            <th class=\"w80 text-right\">Rate</th>\n                            <th class=\"w100 text-right\">Amount</th>\n                            <th class=\"w100 text-right\">Image</th>\n                            <th class=\"w100\">Action</th>\n                        </tr>\n                    </table>\n                </div>\n                <div class=\"table-container\">\n                    <div class=\"table-content\">\n                        <table>\n                            <tr *ngFor=\"let product of productList; let i=index\" [ngClass]=\"{ 'distributer' : product.status==1}\">\n                                <td class=\"w100\">{{product.partNumber}}</td>\n                                <td class=\"w90\">{{product.category}}</td>\n                                <td  class=\"w90\">{{product.segment}}</td>\n                                <td class=\"w90\">{{product.productName}}</td>\n                                <td class=\"w70\">\n                                    <div class=\"td-input\" >\n                                        <input type=\"number\" (input)=\"calculateAmount(product.qty,i,product.productId)\"  name=\"qty\" #qty=\"ngModel\" [(ngModel)]=\"product.qty\">\n                                    </div>\n                                    <p *ngIf='!product.qty'>required</p>\n                                </td>\n                                <!-- Pre-Fitment Field -->\n                                <td class=\"w140\" *ngIf='concern.product_type==1'>\n                                    <div class=\"td-input\" style=\"display: flex; align-items: center;\">\n                                        <input matInput [matDatepicker]=\"picker\"  (dateInput)=\"calculateAmount(product.qty,i,product.productId)\"  placeholder=\"Choose a date\"  name=\"{{date+index}}\" [(ngModel)]=\"product.date\"  #date=\"ngModel\"  [max]=\"maxDateValue\"  required>\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #picker></mat-datepicker>\n                                    </div>\n                                    <p *ngIf='!product.date'>required</p>\n                                </td>\n                                <td class=\"w100\" *ngIf='concern.product_type==1'> \n                                    <div class=\"td-input\">\n                                        <input type=\"text\"    name=\"{{invoice+index}}\" #invoice=\"ngModel\" [(ngModel)]=\"product.invoice\" (input)=\"calculateAmount(product.qty,i,product.productId)\"  required>\n                                    </div>\n                                    <p *ngIf='!product.invoice'>required</p>\n                                </td>\n                                \n                                <!--Pre-Fitment Field-->\n                                <!--Post-Fitment Field-->\n                                <td class=\"w140\" *ngIf='concern.product_type==2'>\n                                    <div class=\"td-input\" style=\"display: flex; align-items: center;\">\n                                        <input matInput [matDatepicker]=\"picker\"  (dateInput)=\"calculateAmount(product.qty,i,product.productId)\"  placeholder=\"Choose a date\" name=\"{{date+index}}\" [(ngModel)]=\"product.date\"  #date=\"ngModel\"  [max]=\"maxDateValue\" required>\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #picker></mat-datepicker>\n                                    </div>\n                                </td>\n                                <td class=\"w100\" *ngIf='concern.product_type==2'> \n                                    <div class=\"td-input\">\n                                        <input type=\"text\"    (keyup.enter)=\"addCart(product,index)\" (input)=\"calculateAmount(product.qty,i,product.productId)\"  name=\"{{invoice+index}}\" #invoice=\"ngModel\" [(ngModel)]=\"product.invoice\" required>\n                                    </div>\n                                    \n                                </td>\n                                \n                                \n                                <!--Post-Fitment Field -->\n                                <td class=\"w80 text-right\">&#8377; {{product.priceUnit}}</td>\n                                <td class=\"w100 text-right\">&#8377; {{product.amount}}</td>\n                                <td class=\"w100 text-right\">   <a *ngIf=\"product.document!=null\" class=\"link-btn\" (click)=\"showImage(i)\"> View Image </a></td>\n                                <td class=\"w100 text-center\">\n                                    <div class=\"action-btns default-action\" style=\"right: 0;\"> \n                                        <a  *ngIf=\"product.status=='1' || concernStatus!=2 \" class=\"edit\" mat-button  matTooltip=\"Save\"><i class=\"material-icons green-clr\" (click)=\"saveProduct(product,i)\">save</i></a>\n                                        <a  *ngIf=\"product.status=='1'|| concernStatus!=2 \" class=\"delete\"  matTooltip=\"Delete\" mat-button><i class=\"material-icons red-clr\" (click)=\"remove(product.productId,i)\">delete_sweep</i></a>\n                                    </div>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <!-- <button mat-button  >Update</button> -->\n        <button mat-raised-button color=\"warn\"  (click)=\" saveUpdate()\" >Close</button>\n    </mat-dialog-actions>\n</div>"

/***/ }),

/***/ "./src/app/customer-concern/update-concern/update-concern.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/customer-concern/update-concern/update-concern.component.ts ***!
  \*****************************************************************************/
/*! exports provided: UpdateConcernComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateConcernComponent", function() { return UpdateConcernComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");






var UpdateConcernComponent = /** @class */ (function () {
    function UpdateConcernComponent(data, dialog, toast, service, confirm) {
        this.data = data;
        this.dialog = dialog;
        this.toast = toast;
        this.service = service;
        this.confirm = confirm;
        this.productList = [];
        this.concern = [];
        this.tmp_productList = [];
        this.finalProductList = [];
        this.sales = {};
        this.user = {};
        this.isView = false;
        this.isAlready = false;
        console.log(data);
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.concernStatus = data['concernStatus'];
        this.category = data['category'];
        this.tmp_productList = data['product'];
        this.finalProductList = data['product'];
        this.concern = data['concern'];
        this.id = data['id'];
        this.get_detail();
        console.log(this.concernStatus);
    }
    UpdateConcernComponent.prototype.ngOnInit = function () {
        this.maxDateValue = new Date();
    };
    UpdateConcernComponent.prototype.showImage = function (index) {
        this.isAlready = false;
        this.isView = true;
        this.url = this.service.dburl;
        this.request = 'download/document/';
        this.api = this.url + this.request;
        if (this.productList[index].document.binaryData != null) {
            this.isAlready = false;
            this.urlData = this.productList[index].document.binaryData;
        }
        else {
            this.docId = this.productList[index].document.documentId;
            this.isAlready = true;
            console.log(this.docId, this.productList[index]);
        }
    };
    UpdateConcernComponent.prototype.get_detail = function () {
        console.log(this.data);
        console.log(this.tmp_productList);
        for (var i = 0; i < this.tmp_productList.length; i++) {
            if (this.category === this.tmp_productList[i]['category']) {
                this.productList.push({ "amount": this.tmp_productList[i].amount,
                    "category": this.tmp_productList[i].category,
                    "date": this.tmp_productList[i].date,
                    "invoice": this.tmp_productList[i].invoice,
                    "partNumber": this.tmp_productList[i].partNumber,
                    "priceUnit": this.tmp_productList[i].priceUnit,
                    "productId": this.tmp_productList[i].productId,
                    "qty": this.tmp_productList[i].qty,
                    "segment": this.tmp_productList[i].segment,
                    "tmpamount": this.tmp_productList[i].tmpamount,
                    "tmpqty": this.tmp_productList[i].tmpqty,
                    "productName": this.tmp_productList[i].productName,
                    "isDealerItem": this.tmp_productList[i].isDealerItem,
                    "document": this.tmp_productList[i].document,
                    "natureOfComplaint": this.tmp_productList[i].natureOfComplaint,
                    "status": this.tmp_productList[i].status,
                    "statusUpdatedByUser": this.tmp_productList[i].statusUpdatedByUser,
                    "statusUpdatedOn": this.tmp_productList[i].statusUpdatedOn
                });
            }
        }
        console.log(this.productList);
        this.service.setData(this.tmp_productList);
    };
    UpdateConcernComponent.prototype.calculateAmount = function (qty, i, id) {
        console.log(this.data);
        console.log(this.productList, i);
        if (parseInt(this.productList[i].priceUnit) > 0) {
            this.price = this.productList[i].priceUnit;
            this.amount = parseInt(qty) * parseInt(this.productList[i]['priceUnit']);
        }
    };
    UpdateConcernComponent.prototype.remove = function (id, index) {
        var _this = this;
        console.log(id, index);
        this.confirm.delete("product").then(function (result) {
            console.log(result);
            if (result) {
                _this.productList.splice(index, 1);
                for (var i = 0; i < _this.tmp_productList.length; i++) {
                    if (_this.tmp_productList[i]['productId'] == id) {
                        _this.tmp_productList.splice(i, 1);
                    }
                }
                if (_this.tmp_productList.length == 0) {
                    _this.dialog.closeAll();
                }
            }
        });
    };
    UpdateConcernComponent.prototype.saveUpdate = function () {
        console.log("save");
        console.log(this.tmp_productList);
        this.service.setData(this.tmp_productList);
        this.dialog.closeAll();
    };
    UpdateConcernComponent.prototype.saveProduct = function (product, i) {
        if (this.concern.product_type == 1) {
            if (product.qty && product.invoice && product.date) {
                this.productList[i].priceUnit = this.price;
                this.productList[i].amount = this.amount;
                var index = this.tmp_productList.findIndex(function (x) { return x.productId == product.productId; });
                console.log(index);
                this.tmp_productList[index].priceUnit = this.productList[i].priceUnit;
                this.tmp_productList[index].amount = this.productList[i].amount;
                this.tmp_productList[index].qty = this.productList[i].qty;
                this.tmp_productList[index].invoice = this.productList[i].invoice;
                this.tmp_productList[index].date = this.productList[i].date;
                this.toast.openSucess('Updated Sucessfully!!', '');
                console.log(this.productList);
                console.log(this.tmp_productList[i].qty);
            }
            else {
                this.toast.openError('Please Enter Empty Fields!!', '');
                this.service.setData(this.tmp_productList);
            }
        }
        else {
            if (product.qty) {
                this.productList[i].priceUnit = this.price;
                this.productList[i].amount = this.amount;
                this.tmp_productList[i].priceUnit = this.productList[i].priceUnit;
                this.tmp_productList[i].amount = this.productList[i].amount;
                this.tmp_productList[i].qty = this.productList[i].qty;
                this.toast.openSucess('Updated Sucessfully!!', '');
                console.log(this.productList);
                this.toast.openSucess('Updated Sucessfully!!', '');
            }
            else {
                this.toast.openError('Please Enter Empty Fields!!', '');
                this.service.setData(this.tmp_productList);
            }
        }
    };
    UpdateConcernComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-update-concern',
            template: __webpack_require__(/*! ./update-concern.component.html */ "./src/app/customer-concern/update-concern/update-concern.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], UpdateConcernComponent);
    return UpdateConcernComponent;
}());



/***/ }),

/***/ "./src/app/customer-concern/update-status/update-status.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/customer-concern/update-status/update-status.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n    <div *ngIf=\"loader\"> \n      <mat-spinner class=\"loader\"></mat-spinner> \n    </div>\n    <form #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onSubmit()\" novalidate>\n    <div mat-dialog-content>\n      \n      <p class=\"heading\">Update Address</p>\n      <div class=\"from-fields\">\n        \n        <div class=\"row\">\n          <div class=\"col s4\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input infix-bodr8\">\n                <mat-select placeholder=\"Status\" name=\"status\" #status=\"ngModel\" [(ngModel)]=\"concernStatus.status\"  [ngClass]=\"{ 'is-invalid': f.submitted && status.invalid }\" required>\n                  <mat-option   value=\"2\">Approved</mat-option>\n                  <mat-option  value=\"3\">Rejected</mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-error *ngIf=\"f.submitted && status.invalid\" class=\"invalid-feedback\">\n                  <mat-error *ngIf=\"status.errors.required\">Status is required</mat-error>\n                </mat-error>\n            </div>\n          </div>\n          <div class=\"col s\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input infix-bodr8\" >\n                <textarea  class=\"h90\" matInput placeholder=\"Nature Of Problem\" name=\"problem\" #problem=\"ngModel\" [(ngModel)]=\"concernStatus.problem\" [ngClass]=\"{ 'is-invalid': f.submitted && problem.invalid }\" required></textarea>\n              </mat-form-field>\n              <mat-error *ngIf=\"f.submitted && problem.invalid\" class=\"invalid-feedback\">\n                  <mat-error *ngIf=\"problem.errors.required\">Nature Of Problem is required</mat-error>\n                </mat-error>\n            </div>\n          </div>\n      </div>\n    </div>\n    \n    <div mat-dialog-actions>\n      <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n      <ng-container>\n        <button mat-raised-button color=\"accent\">Save</button>\n      </ng-container>\n    </div>\n  </div>\n</form>\n  </div>"

/***/ }),

/***/ "./src/app/customer-concern/update-status/update-status.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/customer-concern/update-status/update-status.component.ts ***!
  \***************************************************************************/
/*! exports provided: UpdateStatusComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateStatusComponent", function() { return UpdateStatusComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");






var UpdateStatusComponent = /** @class */ (function () {
    function UpdateStatusComponent(data, dialog, dialogRef, toast, service, confirm) {
        this.data = data;
        this.dialog = dialog;
        this.dialogRef = dialogRef;
        this.toast = toast;
        this.service = service;
        this.confirm = confirm;
        this.concernStatus = {};
        this.product = {};
        this.productlist = [];
        console.log(data);
        if (data.product) {
            console.log("hii product");
            this.product = data.product;
            this.concernStatus.status = this.product.concernProductStatus;
            this.concernStatus.problem = this.product.natureOfComplaint;
            this.index = data.index;
        }
        else {
            console.log("hii productlist test");
            this.productlist = data.productlist;
        }
    }
    UpdateStatusComponent.prototype.ngOnInit = function () {
    };
    UpdateStatusComponent.prototype.onSubmit = function () {
        console.log(this.index);
        if (this.productlist.length != 0) {
            if (this.concernStatus.status && this.concernStatus.problem) {
                for (var i = 0; i < this.productlist.length; i++) {
                    if (this.productlist[i].datacheck == true) {
                        console.log("hello list");
                        this.productlist[i].concernProductStatus = this.concernStatus.status;
                        this.productlist[i].natureOfComplaint = this.concernStatus.problem;
                    }
                }
                console.log(this.productlist);
                this.dialogRef.close();
            }
        }
        else {
            if (this.concernStatus.status && this.concernStatus.problem) {
                this.product.concernProductStatus = this.concernStatus.status;
                this.product.natureOfComplaint = this.concernStatus.problem;
                console.log(this.product);
                this.dialogRef.close();
            }
        }
    };
    UpdateStatusComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-update-status',
            template: __webpack_require__(/*! ./update-status.component.html */ "./src/app/customer-concern/update-status/update-status.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], UpdateStatusComponent);
    return UpdateStatusComponent;
}());



/***/ }),

/***/ "./src/app/dashboard/dashboard.component.html":
/*!****************************************************!*\
  !*** ./src/app/dashboard/dashboard.component.html ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n\t<div class=\"dashboard-thumbnail\">\n\t\t<div class=\"dashboard-area\">\n\t\t\t<div class=\"dashboard-content green-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-dis\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{counterArray.orderCount}}</h2>\n\t\t\t\t\t<p>Total Order</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"dashboard-content yellow-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-dis\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{distributorCount}}</h2>\n\t\t\t\t\t<p>Distributer</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dashboard-content blue-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-task\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{counterArray.taskCount}}</h2>\n\t\t\t\t\t<p>Total Task</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"dashboard-content orange-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-lead\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{leadCount}}</h2>\n\t\t\t\t\t<p>Total Leads</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t</div>\n\t\t\n\t\t<div class=\"dashboard-area\">\n\t\t\t<div class=\"dashboard-content yellow-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-dis\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{counterArray.followUpCount}}</h2>\n\t\t\t\t\t<p>Today Follow ups</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dashboard-content blue-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-task\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{counterArray.concernCount}}</h2>\n\t\t\t\t\t<p>Total Customer Concern</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"dashboard-content orange-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-lead\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{counterArray.travelPlanCount}}</h2>\n\t\t\t\t\t<p>Total Travel Plan</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"dashboard-content blue-bg\">\n\t\t\t\t\t<div class=\"box \">\n\t\t\t\t\t\t<span class=\"count-bg-task\">&nbsp;</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t\t<h2>{{counterArray.expenseCount}}</h2>\n\t\t\t\t\t\t<p>Total Expense</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t\n\t\t<div class=\"dashboard-area\">\n\t\t\t\t<div class=\"dashboard-content blue-bg\">\n\t\t\t\t\t\t<div class=\"box \">\n\t\t\t\t\t\t\t<span class=\"count-bg-task\">&nbsp;</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t\t\t<h2>{{counterArray.popOrderCount}}</h2>\n\t\t\t\t\t\t\t<p>Total Pop & Gift Order</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"dashboard-content yellow-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-dis\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{counterArray.announcementCount}}</h2>\n\t\t\t\t\t<p>Total Announcement</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dashboard-content blue-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-task\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{counterArray.activityCount}}</h2>\n\t\t\t\t\t<p>Total Activity</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"dashboard-content orange-bg\">\n\t\t\t\t<div class=\"box \">\n\t\t\t\t\t<span class=\"count-bg-lead\">&nbsp;</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"text-box\">\n\t\t\t\t\t<h2>{{counterArray.popCount}}</h2>\n\t\t\t\t\t<p>Total Pop & Gift</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t</div>\n\t\t<div class=\"current-revenue mrb20\">\n\t\t</div>\n\t</div>\n</div>\n"

/***/ }),

/***/ "./src/app/dashboard/dashboard.component.scss":
/*!****************************************************!*\
  !*** ./src/app/dashboard/dashboard.component.scss ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".orange-txt {\n  color: #ffce54; }\n\n.green-txt {\n  color: #00cc71; }\n\n.red-txt {\n  color: #ff4c4c; }\n\n.blue-txt {\n  color: #00acea; }\n\n.dark-blue-txt {\n  color: #45748c; }\n\n.purple-txt {\n  color: #ac92ec; }\n\n.yellow-txt {\n  color: #ffce54; }\n\n.teal-green {\n  color: #71c4d1; }\n\n.pink-txt {\n  color: #e34d88; }\n\n.ul-clear:after, .dashboard-thumbnail:after, .dashboard-thumbnail .dashboard-area:after {\n  display: table;\n  content: \"\";\n  clear: both; }\n\n.green-bg {\n  background: #10c888 !important; }\n\n.yellow-bg {\n  background: #fdbe09 !important; }\n\n.blue-bg {\n  background: #0095d8 !important; }\n\n.orange-bg {\n  background: #f18806 !important; }\n\n.dashboard-thumbnail {\n  padding: 20px 30px; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content {\n    float: left;\n    margin-right: 2%;\n    margin-bottom: 2%;\n    width: 23.5%;\n    display: flex;\n    box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.1);\n    background: #fff;\n    border-radius: 4px;\n    position: relative;\n    padding: 10px;\n    align-items: center; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content:nth-child(4n) {\n      margin-right: 0; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content .box {\n      width: 60px;\n      min-width: 60px;\n      height: 60px;\n      border-radius: 4px;\n      position: inherit;\n      top: inherit;\n      left: inherit;\n      display: flex;\n      align-items: center;\n      background: #fff; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content .box span {\n        width: 35px;\n        height: 35px;\n        border-radius: 100%;\n        font-size: 25px;\n        font-weight: 500;\n        color: #11c888;\n        display: block;\n        text-align: center;\n        line-height: 35px;\n        text-align: center;\n        background: #fff;\n        margin: 0 auto; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content .box span.count-bg-dis {\n          -webkit-mask-image: url('distribution_icon.svg');\n          -webkit-mask-size: 90%;\n          -webkit-mask-repeat: no-repeat;\n          background: #fdbe09; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content .box span.count-bg-task {\n          -webkit-mask-image: url('task.svg');\n          -webkit-mask-size: 90%;\n          -webkit-mask-repeat: no-repeat;\n          background: #0095d8; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content .box span.count-bg-lead {\n          -webkit-mask-image: url('leads_icon.svg');\n          -webkit-mask-size: 90%;\n          -webkit-mask-repeat: no-repeat;\n          background: #f18806; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content .text-box {\n      width: 100%;\n      height: 100%;\n      padding-left: 0px;\n      text-align: center; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content .text-box p {\n        font-size: 13px;\n        color: #fff; }\n\n.dashboard-thumbnail .dashboard-area .dashboard-content .text-box h2 {\n        font-size: 22px;\n        color: #fff;\n        font-weight: 500;\n        line-height: 28px; }\n\n.current-revenue {\n  display: flex; }\n\n.current-revenue .grap {\n    width: 100%; }\n\n.current-revenue .month-revenue {\n    width: 500px;\n    box-shadow: 0px 3px 6px 0px #ccc;\n    position: relative; }\n\n.current-revenue .month-revenue h2 {\n      font-size: 17px;\n      color: #fff;\n      font-weight: 500;\n      letter-spacing: 2px;\n      padding: 10px; }\n\n.current-revenue .month-revenue h2.blue-heading {\n        background: #02a2fa; }\n\n.current-revenue .month-revenue h2.red-heading {\n        background: #ed3737; }\n\n.current-revenue .month-revenue span {\n      width: 30px;\n      height: 30px;\n      border-radius: 100%;\n      font-size: 14px;\n      font-weight: 500;\n      color: #02a2fa;\n      display: block;\n      text-align: center;\n      line-height: 30px;\n      text-align: center;\n      background: #fff;\n      position: absolute;\n      top: 4px;\n      right: 10px; }\n\n.current-revenue .month-revenue .revenue-table {\n      border: 1px #ccc solid;\n      border-bottom: 0px; }\n\n.current-revenue .month-revenue .revenue-table .table-header {\n        background: #f5f5f5;\n        padding-right: 4px; }\n\n.current-revenue .month-revenue .revenue-table .table-header table tr th {\n          font-size: 14px;\n          padding: 8px;\n          font-weight: 500; }\n\n.current-revenue .month-revenue .revenue-table .table-body {\n        background: #fff; }\n\n.current-revenue .month-revenue .revenue-table .table-body table tr td {\n          font-size: 14px;\n          padding: 8px;\n          cursor: pointer; }\n\n.current-revenue .month-revenue .revenue-table .table-body table tr td:last-child {\n            text-align: right; }\n\n.current-revenue .month-revenue .revenue-table .height385 {\n        max-height: 385px;\n        min-height: 385px;\n        overflow: auto; }\n\n.text .jqx-chart-legend-text {\n  display: none !important; }\n\n.db-heading h2 {\n  font-size: 21px;\n  background: #4398d1;\n  padding: 5px;\n  margin-bottom: 15px;\n  color: #fff; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/dashboard/dashboard.component.ts":
/*!**************************************************!*\
  !*** ./src/app/dashboard/dashboard.component.ts ***!
  \**************************************************/
/*! exports provided: DashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardComponent", function() { return DashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant.service */ "./src/app/constant.service.ts");



var DashboardComponent = /** @class */ (function () {
    function DashboardComponent(service) {
        this.service = service;
        this.counterArray = {};
        this.distributorCount = 0;
        this.leadCount = 0;
        this.count_list();
    }
    DashboardComponent.prototype.ngOnInit = function () {
    };
    DashboardComponent.prototype.count_list = function () {
        var _this = this;
        console.log("service");
        this.service.fileData("", "dashboard/count").subscribe(function (r) {
            console.log(r);
            if (r['status'] == 'Success') {
                _this.counterArray = r['data'];
                console.log(_this.distributorCount);
                if (_this.counterArray.networkCount.length != 0) {
                    _this.distributorCount = _this.counterArray.networkCount[0].total;
                }
                if (_this.counterArray.leadCount.length != 0) {
                    _this.leadCount = _this.counterArray.leadCount[0].statusCount;
                }
            }
        });
        // return this.counterArray;
    };
    DashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-dashboard',
            template: __webpack_require__(/*! ./dashboard.component.html */ "./src/app/dashboard/dashboard.component.html"),
            styles: [__webpack_require__(/*! ./dashboard.component.scss */ "./src/app/dashboard/dashboard.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"]])
    ], DashboardComponent);
    return DashboardComponent;
}());



/***/ }),

/***/ "./src/app/dialog.ts":
/*!***************************!*\
  !*** ./src/app/dialog.ts ***!
  \***************************/
/*! exports provided: DialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogComponent", function() { return DialogComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_2__);



var DialogComponent = /** @class */ (function () {
    function DialogComponent() {
    }
    DialogComponent.prototype.ngOnInit = function () {
    };
    DialogComponent.prototype.confirmation = function (msg) {
        return sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
            title: 'Are you sure?',
            text: '',
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, do it!',
            cancelButtonText: 'No, keep it'
        }).then(function (result) {
            if (result.value) {
                return true;
                // For more information about handling dismissals please visit
                // https://sweetalert2.github.io/#handling-dismissals
            }
            else if (result.dismiss === sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.DismissReason.cancel) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire('Cancelled', 'Your ' + msg + ' data is not modfied :)', 'error');
                return false;
            }
        });
    };
    DialogComponent.prototype.delete = function (msg) {
        return sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
            title: 'Are you sure?',
            text: 'You will not be able to recover this ' + msg,
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, keep it'
        }).then(function (result) {
            if (result.value) {
                return true;
                // For more information about handling dismissals please visit
                // https://sweetalert2.github.io/#handling-dismissals
            }
            else if (result.dismiss === sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.DismissReason.cancel) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire('Cancelled', 'Your ' + msg + ' is safe &#x263A;', 'error');
                return false;
            }
        });
    };
    DialogComponent.prototype.downloadConfirm = function (msg) {
        return sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
            title: 'Do you want to download ' + msg + ' ?',
            text: '',
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, Download it!',
            cancelButtonText: 'No'
        }).then(function (result) {
            if (result.value) {
                return true;
                // For more information about handling dismissals please visit
                // https://sweetalert2.github.io/#handling-dismissals
            }
            else if (result.dismiss === sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.DismissReason.cancel) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire('Cancelled', '', 'error');
                return false;
            }
        });
    };
    DialogComponent.prototype.convert = function (msg) {
        return sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
            title: 'Are you sure?',
            text: 'You will not be able to recover this ' + msg,
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, do it!',
            cancelButtonText: 'No, keep it'
        }).then(function (result) {
            if (result.value) {
                return true;
                // For more information about handling dismissals please visit
                // https://sweetalert2.github.io/#handling-dismissals
            }
            else if (result.dismiss === sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.DismissReason.cancel) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire('Cancelled', 'Your ' + msg + ' is not convert &#x263A;', 'error');
                return false;
            }
        });
    };
    DialogComponent.prototype.success = function () {
        sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
            position: 'center',
            type: 'success',
            title: 'Your work has been saved',
            showConfirmButton: false,
            timer: 1500
        });
    };
    DialogComponent.prototype.leadSaveSuccess = function () {
        sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
            position: 'center',
            type: 'success',
            title: 'Lead Saved Successfully!',
            showConfirmButton: true
        });
    };
    DialogComponent.prototype.error = function (msg) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
            type: 'error',
            title: 'Oops...',
            text: msg,
        });
    };
    DialogComponent.prototype.alertWarning = function (text) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire(text);
    };
    DialogComponent.prototype.followup = function (msg) {
        return sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
            title: 'Follow-Up',
            text: 'Do You Want To Create Next ' + msg,
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, Create it!',
            cancelButtonText: 'No, Leave it'
        })
            .then(function (result) {
            if (result.value) {
                return true;
            }
            else if (result.dismiss === sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.DismissReason.cancel) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire('Closed', 'Your ' + msg + ' is closed &#x263A;', 'error');
                return false;
            }
        });
    };
    DialogComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({ providedIn: 'root' }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], DialogComponent);
    return DialogComponent;
}());



/***/ }),

/***/ "./src/app/discount/add-discount/add-discount.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/discount/add-discount/add-discount.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" [@routerTransition]> \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/leads_icon.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Discount</h2>\n        <p>Add New Discount Master</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"container-outer\">\n  <app-master-tab></app-master-tab>\n  <div class=\"container tab-container\" >\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"sprate-box pb0\">\n          <div class=\"cs-heading\">\n            <h2>USER TYPE</h2>\n            <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n          </div>\n          <mat-divider class=\"left-right-15 mt10\"></mat-divider>\n          \n          <div class=\"row\">\n            <div class=\"col s12 pr0 pl0\">\n              <div class=\"user-type\">\n                <section class=\"example-section\">\n                  <mat-checkbox class=\"example-margin\" color=\"accent\">CATEGORY</mat-checkbox>\n                  <mat-checkbox class=\"example-margin\" color=\"accent\">BRAND</mat-checkbox>\n                  <mat-checkbox class=\"example-margin\" color=\"accent\">FLAT DISCOUNT</mat-checkbox>\n                </section>\n              </div>\n            </div>\n          </div>\n          \n          \n          <div class=\"row mb0\">\n            <div class=\"col s12 padding0\">\n              <div class=\"cs-table left-right-20\">\n                <div class=\"table-head\">\n                  <table>\n                    <tr>\n                      <th>Category\n                        <div class=\"th-search\">\n                          <input type=\"text\" placeholder=\"Search....\" class=\"w300\">\n                          <i class=\"material-icons search-icon\">search</i>\n                        </div>\n                      </th>\n                      <th class=\"w150\">Distributor (%)</th>\n                      <th class=\"w150\">Retailer (%)</th>\n                    </tr>\n                  </table>\n                </div>\n                \n                <div class=\"table-container pb0\">\n                  <div class=\"table-content none-shadow\">\n                    <table>\n                      <tr>\n                        <td>Example XYZ</td>\n                        <td class=\"w150\">\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                        <td class=\"w150\">\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Example XYZ</td>\n                        <td >\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                        <td class=\"w150\">\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Example XYZ</td>\n                        <td >\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                        <td class=\"w150\">\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Example XYZ</td>\n                        <td >\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                        <td class=\"w150\">\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Example XYZ</td>\n                        <td >\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                        <td class=\"w150\">\n                          <div class=\"td-input\">\n                            <input type=\"text\">\n                          </div>\n                        </td>\n                      </tr>\n                      <tr>\n                          <td>Example XYZ</td>\n                          <td >\n                            <div class=\"td-input\">\n                              <input type=\"text\">\n                            </div>\n                          </td>\n                          <td class=\"w150\">\n                            <div class=\"td-input\">\n                              <input type=\"text\">\n                            </div>\n                          </td>\n                        </tr>\n                    </table>\n                  </div>\n\n                  <table class=\"discount-table\">\n                      <tr>\n                        <td>&nbsp;</td>\n                        <td class=\"w150\"><input type=\"text\" placeholder=\"Discount\"></td>\n                        <td class=\"w150\"><input type=\"text\" placeholder=\"Discount\"></td>\n                      </tr>\n                    </table>      \n                </div>\n\n\n               \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"cs-btn fixedd mt32 text-right\">\n          <div class=\"in-btn\">\n            <button mat-raised-button color=\"accent\">Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n</div>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/discount/add-discount/add-discount.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/discount/add-discount/add-discount.component.ts ***!
  \*****************************************************************/
/*! exports provided: AddDiscountComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDiscountComponent", function() { return AddDiscountComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");



var AddDiscountComponent = /** @class */ (function () {
    function AddDiscountComponent() {
    }
    AddDiscountComponent.prototype.ngOnInit = function () {
    };
    AddDiscountComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-discount',
            template: __webpack_require__(/*! ./add-discount.component.html */ "./src/app/discount/add-discount/add-discount.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], AddDiscountComponent);
    return AddDiscountComponent;
}());



/***/ }),

/***/ "./src/app/discount/discount-list/discount-list.component.html":
/*!*********************************************************************!*\
  !*** ./src/app/discount/discount-list/discount-list.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" [@routerTransition]>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/leads_icon.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Discount</h2>\n        <p>Add New Discount Master</p>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"container-outer\">\n  <app-master-tab-list></app-master-tab-list>\n  \n  <div class=\"container tab-container\" >\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"cs-table left-right-20\">\n          <div class=\"table-head\">\n            <table class=\"sno-border\">\n              <tr>\n                <th class=\"w30\">&nbsp;</th>\n                <th>Category</th>\n                <th class=\"w200 text-center\">Distributor (%)</th>\n                <th class=\"w200 text-center\">Retailer(%)</th>\n              </tr>\n            </table>\n          </div>\n          \n          <div class=\"table-container\">\n            <div class=\"table-content\">\n              <table class=\"sno-border\">\n                <tr>\n                  <td class=\"w30\">1</td>\n                  <td>Category XYZ ABC 1</td>\n                  <td class=\"w200 text-center\">12</td>\n                  <td class=\"w200 text-center\">10</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Category XYZ ABC 1</td>\n                  <td class=\"text-center\">12</td>\n                  <td class=\"text-center\">10</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Category XYZ ABC 1</td>\n                  <td class=\"text-center\">12</td>\n                  <td class=\"text-center\">10</td>\n                </tr>\n                <tr>\n                  <td>4</td>\n                  <td>Category XYZ ABC 1</td>\n                  <td class=\"text-center\">12</td>\n                  <td class=\"text-center\">10</td>\n                </tr>\n              </table>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/discount/discount-list/discount-list.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/discount/discount-list/discount-list.component.ts ***!
  \*******************************************************************/
/*! exports provided: DiscountListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DiscountListComponent", function() { return DiscountListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");



var DiscountListComponent = /** @class */ (function () {
    function DiscountListComponent() {
    }
    DiscountListComponent.prototype.ngOnInit = function () {
    };
    DiscountListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-discount-list',
            template: __webpack_require__(/*! ./discount-list.component.html */ "./src/app/discount/discount-list/discount-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], DiscountListComponent);
    return DiscountListComponent;
}());



/***/ }),

/***/ "./src/app/distribution/add-distribution/add-distribution.component.html":
/*!*******************************************************************************!*\
  !*** ./src/app/distribution/add-distribution/add-distribution.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form #f=\"ngForm\" (ngSubmit)=\"f.valid && p.valid && onSubmit()\">\n  <div class=\"main-container\" >\n    <div *ngIf=\"loader\"> \n      <div class=\"cs-loader\">\n        <img src=\"assets/img/loader.png\" class=\"rotate\"> \n      </div>\n    </div>\n    <div class=\"middle-container\">\n      <div class=\"page-heading\">\n        <img src=\"assets/img/distribution_icon.svg \" class=\"h-icon\">\n        <div class=\"heading-text\">\n          <h2>Distribution network</h2>\n          <p>Add New Network</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>BASIC INFORMATION</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s8 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Company Name\" id=\"establishment\" #establishment=\"ngModel\" name=\"establishment\" #establishment=\"ngModel\" [ngClass]=\"{'has-error' : establishment.invalid } \" [(ngModel)]=\"distribution_form.establishment\" required>\n                      </mat-form-field>\n                      \n                      \n                      <mat-error *ngIf=\"f.submitted && establishment.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"establishment.errors.required\">Company Name is required</mat-error>\n                      </mat-error>\n                    </div>\n                    \n                  </div>\n                  <div class=\"col s4  pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Distributor Code\" id=\"networkCode\"  name=\"distCode\" #networkCode=\"ngModel\" [ngClass]=\"{'has-error' : networkCode.invalid } \" [(ngModel)]=\"distribution_form.networkCode\" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && networkCode.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"networkCode.errors.required\">Distributor Code is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"GST No.\" #gst=\"ngModel\" id=\"gst\" name=\"gst\" [(ngModel)]=\"distribution_form.gst\"  minlength=\"15\" maxlength=\"15\" min=\"0\" required>\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"gst.invalid && gst.touched\" class=\"invalid-feedback\">\n                        <mat-error >GST No. Must be 15 Digit</mat-error>\n                      </mat-error>\n                      \n                      <mat-error *ngIf=\"f.submitted && gst.invalid && !gst.touched\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"gst.errors.required\">GST No. is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4 \">\n                    <div class=\"control-field\"> \n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Pan No.\" #pan=\"ngModel\" id=\"pan\" name=\"pan\" [(ngModel)]=\"distribution_form.pan\"  minlength=\"10\" maxlength=\"10\" min=\"0\" required>\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"f.submitted && pan.invalid && pan.touched\" class=\"invalid-feedback\">\n                        <mat-error>Pan No. must be 10 digit!</mat-error>\n                      </mat-error>\n                      \n                      <mat-error *ngIf=\"f.submitted && pan.invalid && !pan.touched\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"pan.errors.required\">Pan No. is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput [matDatepicker]=\"picker\" placeholder=\"Date Of Commencement\"   #date=\"ngModel\" id=\"dateOfCommencement\" #dateOfCommencement=\"ngModel\" name=\"dateOfCommencement\"  [(ngModel)]=\"distribution_form.dateOfCommencement\" [max]=\"currentDate\" readonly>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                      </mat-form-field>\n                      \n                      <!-- <div class=\"alert alert-danger\" *ngIf=\"!dateOfCommencement.valid && dateOfCommencement.touched\">\n                        Date Of Commencement is required\n                      </div>\n                      <mat-error *ngIf=\"f.submitted && dateOfCommencement.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"dateOfCommencement.errors.required\">Date Of Commencement is required</mat-error>\n                      </mat-error> -->\n                    </div>\n                  </div>\n                </div>\n\n\n                <div class=\"row\">\n\n                    <div class=\"col s4 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"Source\" matNativeControl name=\"source\" id=\"source\" #source=\"ngModel\" [(ngModel)]=\"distribution_form.source\"  [ngClass]=\"{'has-error' : source.invalid }\">\n                              <mat-option value=\"\" disabled>Select Source</mat-option>\n                              <mat-option value=\"1\">SOCIAL</mat-option>\n                              <mat-option value=\"5\">CALL</mat-option>\n                              <mat-option value=\"2\">DIRECT</mat-option>\n                              <mat-option value=\"3\">WALK-IN</mat-option>\n                              <mat-option value=\"4\">REFERRAL</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          \n                        </div>\n                      </div>\n\n                  </div>\n\n              </div>\n            </div>\n            \n            <div class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>Applicant INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Name Of Applicant\" id=\"nameOfApplicant\" #nameOfApplicant=\"ngModel\" name=\"nameOfApplicant\"  [(ngModel)]=\"distribution_form.nameOfApplicant\" required >\n                      </mat-form-field>\n                      \n                      \n                      <mat-error *ngIf=\"f.submitted && nameOfApplicant.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"nameOfApplicant.errors.required\">Applicant Name is required</mat-error>\n                      </mat-error>\n                      \n                    </div>\n                  </div>\n                  <div class=\"col s4 \">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Mobile\" #mobile=\"ngModel\" id=\"mobile\" name=\"mobile\" minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" [(ngModel)]=\"distribution_form.mobile\" required>\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"f.submitted && mobile.invalid && mobile.touched\" class=\"invalid-feedback\">\n                        <mat-error >mobile must be 10 digit</mat-error>\n                      </mat-error>\n                      \n                      <mat-error *ngIf=\"f.submitted && mobile.invalid && !mobile.touched\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"mobile.errors.required\">mobile is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Email\" #email=\"ngModel\" id=\"email\" name=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" [(ngModel)]=\"distribution_form.email\" required >\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"f.submitted && email.invalid && email.touched\" class=\"invalid-feedback\">\n                        <mat-error>Email is invalid</mat-error>\n                      </mat-error>\n                      \n                      <mat-error *ngIf=\"f.submitted && email.invalid && !email.touched\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"email.errors.required\">Email is required</mat-error>\n                      </mat-error>\n                      \n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  \n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Landline\" #landline=\"ngModel\" id=\"landline\" name=\"landline\" minlength=\"6\" maxlength=\"13\" min=\"0\" (keypress)=\"MobileNumber($event)\" [(ngModel)]=\"distribution_form.landline\">\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"f.submitted && landline.invalid && landline.touched\" class=\"invalid-feedback\">\n                        <mat-error>Landline is must be atleast 6 digit</mat-error>\n                      </mat-error>\n                      \n                      <mat-error *ngIf=\"f.submitted && landline.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"landline.errors.required\">Landline is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4 \">\n                    <div class=\"control-field\">\n                      <!-- <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput type=\"date\" placeholder=\"Date Of Birth\" id=\"dateOfBirth\" #dateOfBirth=\"ngModel\" name=\"dateOfBirth\" min=\"0\"  [(ngModel)]=\"distribution_form.dateOfBirth\" >\n                      </mat-form-field> -->\n                      \n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput [matDatepicker]=\"pickerone\" placeholder=\"Date Of Birth\"   #date=\"ngModel\"id=\"dateOfBirth\" #dateOfBirth=\"ngModel\" name=\"dateOfBirth\" min=\"0\"  [(ngModel)]=\"distribution_form.dateOfBirth\" [max]=\"currentDate\" readonly>\n                        <mat-datepicker-toggle matSuffix [for]=\"pickerone\"></mat-datepicker-toggle>\n                        <mat-datepicker #pickerone></mat-datepicker>\n                      </mat-form-field>\n                      <!-- <div class=\"alert alert-danger\" *ngIf=\"!dateOfBirth.valid && dateOfBirth.touched\">\n                        Date Of Birth is required\n                      </div>\n                      <mat-error *ngIf=\"f.submitted && dateOfBirth.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"dateOfBirth.errors.required\">Date Of Birth is required</mat-error>\n                      </mat-error> -->\n                    </div>\n                  </div>\n                  <div class=\"col s4 pr0\">\n                    <div class=\"control-field\">\n                      <!-- <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput type=\"date\" placeholder=\"Date Of Marriage\" id=\"dateOfMarriage\" #dateOfMarriage=\"ngModel\" name=\"dateOfMarriage\" [(ngModel)]=\"distribution_form.dateOfMarriage\" >\n                      </mat-form-field> -->\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput [matDatepicker]=\"pickertwo\" placeholder=\"Date Of Marriage\"   #date=\"ngModel\" id=\"dateOfMarriage\" #dateOfMarriage=\"ngModel\" name=\"dateOfMarriage\" [(ngModel)]=\"distribution_form.dateOfMarriage\" [max]=\"currentDate\" >\n                        <mat-datepicker-toggle matSuffix [for]=\"pickertwo\"></mat-datepicker-toggle>\n                        <mat-datepicker #pickertwo></mat-datepicker>\n                      </mat-form-field>\n                      \n                      <!-- <div class=\"alert alert-danger\" *ngIf=\"!dateOfMarriage.valid && dateOfMarriage.touched\">\n                        Date Of Marriage is required...\n                      </div>\n                      <mat-error *ngIf=\"f.submitted && dateOfMarriage.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"dateOfMarriage.errors.required\">Date Of Marriage is required</mat-error>\n                      </mat-error> -->\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n            \n            <div class=\"sprate-box pt0 mt15\" >\n              <div class=\"cs-heading\">\n                <h2>Target INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  \n                  <div class=\"col s4 \">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <mat-select placeholder=\"Select year\" name=\"financialYear\" id=\"financialYear\" [(ngModel)]=\"distribution_form.financialYear\" #financialYear=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && financialYear.invalid }\" required>\n                          <mat-option value=\"2019-2020\"  >2019-2020</mat-option>\n                          <mat-option value=\"2020-2021\"  >2020-2021</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && financialYear.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"financialYear.errors.required\">Financial Year is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Yearly Target\" type=\"number\" id=\"targetLimit\"  #targetLimit=\"ngModel\" name=\"targetLimit\" #targetLimit=\"ngModel\" [ngClass]=\"{'has-error' : targetLimit.invalid } \" [(ngModel)]=\"distribution_form.targetLimit\" required>\n                      </mat-form-field>\n                      \n                      \n                      <mat-error *ngIf=\"f.submitted && targetLimit.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"targetLimit.errors.required\">Yearly Target is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n            \n            <div class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>CONTACT PERSON INFORMATION</h2>\n              </div>\n              <form #p=\"ngForm\" (ngSubmit)=\"p.valid && add_contact()\" novalidate>\n                <div class=\"from-fields\">\n                  <div class=\"row\">\n                    <div class=\"col s4 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Name\" name=\"name\" #name=\"ngModel\" (keypress)=\"namecheck($event)\" [(ngModel)]=\"distribution_form.name\" required=\"{{distribution_form.mobile1 ? true : false}}\" [ngClass]=\"{'has-error' : name.invalid } \">\n                        </mat-form-field>\n                        \n                        <mat-error *ngIf=\"f.submitted && name.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"name.errors.required\">Contact person is required</mat-error>\n                        </mat-error>\n                        \n                      </div>\n                    </div>\n                    <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Mobile No. 1\" name=\"mobile1\" id=\"mobile1\" #mobile1=\"ngModel\" minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" [(ngModel)]=\"distribution_form.mobile1\" required=\"{{distribution_form.name ? true : false}}\" [ngClass]=\"{'has-error' : mobile1.invalid } \">\n                        </mat-form-field>\n                        \n                        <mat-error *ngIf=\"f.submitted && !mobile1.valid && !mobile1.touched\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"mobile1.errors.required\">Mobile No 1 is required</mat-error>\n                        </mat-error>\n                        \n                        <mat-error *ngIf=\"(f.submitted || p.submitted) && !mobile1.valid  && mobile1.touched\" class=\"invalid-feedback\">\n                          <mat-error>Mobile No Must be 10 digit</mat-error>\n                        </mat-error>\n                        \n                        \n                      </div>\n                    </div>\n                    <div class=\"col s4 pr0\">\n                      <div class=\"control-field pr80\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Mobile No. 2\" name=\"mobile2\"  #mobile2 = \"ngModel\" id=\"mobile2\" minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" [(ngModel)]=\"distribution_form.mobile2\" [ngClass]=\"{'has-error' : mobile2.invalid } \">\n                        </mat-form-field>\n                        \n                        <mat-error *ngIf=\"f.submitted && mobile2.invalid && !mobile2.touched\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"mobile2.errors.required\">Mobile No is required</mat-error>\n                        </mat-error>\n                        \n                        <mat-error *ngIf=\"f.submitted && mobile2.invalid && mobile2.touched\" class=\"invalid-feedback\">\n                          <mat-error>Mobile No must be 10 digit!</mat-error>\n                        </mat-error>\n                        \n                        \n                        <div class=\"plus-btn\" style=\"top: 12px;\">\n                          <button [disabled]=\"!distribution_form.name || !distribution_form.mobile1\" mat-raised-button color=\"accent\">\n                            \n                            <i class=\"material-icons\">add</i>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </form>\n\n              <div *ngIf=\"distribution_form.networkContacts.length>0\" class=\"row mt15\">\n                <div class=\"col s12 padding0\">\n                  <div class=\"cs-table left-right-20\">\n                    <div class=\"table-head\">\n                      <table>\n                        <tr>\n                          <th>Name</th>\n                          <th class=\"w200\">Mobile1</th>\n                          <th class=\"w200 bdr0\">Mobile2</th>\n                          <th class=\"w130\">&nbsp;</th>\n                        </tr>\n                      </table>\n                    </div>\n                    <div class=\"table-container\">\n                      <div class=\"table-content none-shadow\">\n                        <table>\n                          <tr  *ngFor=\"let contact of distribution_form.networkContacts;let i=index\">\n                            <td>{{contact.name}}</td>\n                            <td class=\"w200\">{{contact.mobile1}}</td>\n                            <td class=\"w200\">{{contact.mobile2}}</td>\n                            <td class=\"w130\">\n                              <a mat-button class=\"del-btn\" (click)=\"removeContact(index)\">Delete</a>\n                            </td>\n                          </tr>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>ADDRESS INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s6 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <textarea matInput placeholder=\"Street\" name=\"street\" id=\"street\" #street=\"ngModel\" [(ngModel)]=\"distribution_form.street\" class=\"h100\"></textarea>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s6 pr0\">\n                    <div class=\"row\">\n                      <div class=\"col s6\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"State\" name=\"state\" id=\"state\" [(ngModel)]=\"distribution_form.state\"  #state=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && state.invalid }\" required>\n                              <mat-option  (click)=\"get_district()\" *ngFor='let state of statelist' value=\"{{state}}\">{{state}}</mat-option>  \n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && state.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"state.errors.required\">State is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"District\" name=\"district\" id=\"district\" [(ngModel)]=\"distribution_form.district\"  #district=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && district.invalid }\" required >\n                              <mat-option (click)=\"get_city()\"  value=\"{{district.districtName}}\" *ngFor=\"let district of district1\">{{district.districtName}}</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && district.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"district.errors.required\"> District is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div class=\"row\">\n                      <div class=\"col s6\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"City\" (keyup.enter)=\"get_pincode(city.stateMasterId)\" id=\"city\" name=\"city\" [(ngModel)]=\"distribution_form.city\" #city=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && city.invalid }\" required >\n                              <mat-option (click)=\"get_pincode(city.stateMasterId)\" *ngFor=\"let city of cities\"  value=\"{{city.cityName}}\">{{city.cityName}}</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && city.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"city.errors.required\"> City is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"Pincode\"  name=\"pin\" id=\"pin\" [(ngModel)]=\"distribution_form.pin\"  #pin=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && pin.invalid }\" required>\n                              <mat-option (click)=\"get_sales_terrtory(distribution_form.pin)\" *ngFor=\"let pin of areas\"  value=\"{{pin}}\">{{pin}}</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && pin.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"pin.errors.required\"> Pincode is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            \n            <div *ngIf=\"distribution_form.pin\" class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>\n                  SHIPPING ADDRESS\n                </h2>\n              </div>\n              <div class=\"same-as\">\n                <mat-checkbox (change)=\"sameAsAddress($event)\"></mat-checkbox>Shipping Address same as Address\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s6 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <textarea matInput placeholder=\"Street\" name=\"shippingStreet\"  id=\"shippingStreet\" [(ngModel)]=\"networkShippings.street\" #shippingStreet=\"ngModel\" class=\"h220\"></textarea>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s6 pr0\">\n                      <div class=\"row\">\n                          <div class=\"col s6\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"shop no\" #shippingoffice=\"ngModel\" name=\"shippingoffice\" id=\"shippingoffice\"  [(ngModel)]=\"networkShippings.office\" required>\n                              </mat-form-field>\n                              \n                              <mat-error *ngIf=\"f.submitted && shippingoffice.invalid && shippingoffice.touched\" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"shippingoffice.errors.required\">Office No is invalid</mat-error>\n                              </mat-error>\n                              \n                              <mat-error *ngIf=\"f.submitted && shippingoffice.invalid && !shippingoffice.touched\" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"shippingoffice.errors.required\">Office No is required</mat-error>\n                              </mat-error>\n                            </div>\n                          </div>\n                        </div>\n                    <div class=\"row\">\n                      <div class=\"col s6\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Email\" #shippingEmail=\"ngModel\" name=\"shippingEmail\" id=\"shippingEmail\"  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" [(ngModel)]=\"networkShippings.email\" required>\n                          </mat-form-field>\n                          \n                          <mat-error *ngIf=\"f.submitted && shippingEmail.invalid && shippingEmail.touched\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"shippingEmail.errors.required\">Email is invalid</mat-error>\n                          </mat-error>\n                          \n                          <mat-error *ngIf=\"f.submitted && shippingEmail.invalid && !shippingEmail.touched\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"shippingEmail.errors.required\">Email is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Landline\" #shippingLandline=\"ngModel\" name=\"shippingLandline\" id=\"shippingLandline\" minlength=\"6\" maxlength=\"13\" min=\"0\" (keypress)=\"MobileNumber($event)\" [(ngModel)]=\"networkShippings.landline\">\n                          </mat-form-field>\n                          \n                          <mat-error *ngIf=\"f.submitted && shippingLandline.invalid && shippingLandline.touched\" class=\"invalid-feedback\">\n                            <mat-error>Landline must be atleast 6 digit</mat-error>\n                          </mat-error>\n                          \n                          \n                          <mat-error *ngIf=\"f.submitted && shippingLandline.invalid && !shippingLandline.touched\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"shippingLandline.errors.required\">Landline is required</mat-error>\n                          </mat-error>\n                          \n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div class=\"row\">\n                      <div class=\"col s6\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Fax\" id=\"fax\" #fax=\"ngModel\" name=\"landline\" minlength=\"10\" maxlength=\"13\" min=\"0\" (keypress)=\"MobileNumber($event)\" [(ngModel)]=\"networkShippings.fax\">\n                          </mat-form-field>\n                          \n                          <mat-error *ngIf=\"f.submitted && fax.invalid && fax.touched\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"shippingLandline.errors.required\">Enter Valid FAX No</mat-error>\n                          </mat-error>\n                          \n                        </div>\n                      </div>\n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Mobile\" #shippingMobile1=\"ngModel\" name=\"shippingMobile1\" id=\"shippingMobile1\" minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" [(ngModel)]=\"networkShippings.mobile\" required>\n                          </mat-form-field>\n                          \n                          <mat-error *ngIf=\"f.submitted && shippingMobile1.invalid && shippingMobile1.touched\" class=\"invalid-feedback\">\n                            <mat-error>mobile must be 10 digit</mat-error>\n                          </mat-error>\n                          \n                          \n                          <mat-error *ngIf=\"f.submitted && shippingMobile1.invalid && !shippingMobile1.touched\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"shippingMobile1.errors.required\">mobile is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div class=\"row\">\n                      <div class=\"col s6\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"State\" id=\"Shipingstate\" name=\"Shipingstate\" [(ngModel)]=\"networkShippings.state\"  #Shipingstate=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && Shipingstate.invalid }\" required>\n                              <mat-option  (click)=\"getShippingDistrict(networkShippings.state)\" *ngFor='let state of shippingState' value=\"{{state}}\">{{state}}</mat-option>  \n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && Shipingstate.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"Shipingstate.errors.required\">State is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"District\" id=\"Shippingdistrict\" name=\"Shippingdistrict\" [(ngModel)]=\"networkShippings.district\"  #Shippingdistrict=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && Shippingdistrict.invalid }\" required >\n                              <mat-option (click)=\"getShippingCity(networkShippings.state,networkShippings.district)\"  value=\"{{district.districtName}}\" *ngFor=\"let district of shippingDistrict\">{{district.districtName}}</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && Shippingdistrict.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"Shippingdistrict.errors.required\"> District is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div> \n                    </div>\n                    \n                    <div class=\"row\">\n                      <div class=\"col s6\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"City\" id=\"Shippingcity\" name=\"Shippingcity\" [(ngModel)]=\"networkShippings.city\" #Shippingcity=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && Shippingcity.invalid }\" required >\n                              <mat-option (click)=\"getShippingPin(city.stateMasterId)\" *ngFor=\"let city of shippingCity\"  value=\"{{city.cityName}}\">{{city.cityName}}</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && Shippingcity.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"Shippingcity.errors.required\"> City is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"Pincode\" id=\"Shippingpin\" name=\"Shippingpin\" [(ngModel)]=\"networkShippings.pin\"  #Shippingpin=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && Shippingpin.invalid }\" required>\n                              <mat-option *ngFor=\"let pin of shippingPin\"  value={{pin}}>{{pin}}</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && Shippingpin.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"Shippingpin.errors.required\"> Pincode is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n          <div *ngIf=\"distribution_form.pin\" class=\"sprate-box pt0 mt15\">\n\n              <div class=\"cs-heading\">\n                <h2>\n                  ASSIGN INFORMATION\n                </h2>\n              </div>\n              <div class=\"from-fields\">\n\n                <div class=\"col s4 pl0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select placeholder=\"Select Segment\" id=\"segment\" name=\"segment\" [(ngModel)]=\"distribution_form.segment\" #segment=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && segment.invalid }\" multiple required>\n                        <mat-option value=\"{{segment.text}}\"  *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && segment.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"segment.errors.required\">Segment is required</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n\n                <!-- <div *ngIf=\"distribution_form.segment\" class=\"col s4\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select placeholder=\"Territory\" id=\"tid\" name=\"tid\" [(ngModel)]=\"distribution_form.tid\"  #tid=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && tid.invalid }\" multiple>\n                        <mat-option (click)=\"rolelist1()\" *ngFor=\"let saleslist of saleslist;let index=index\"  value=\"{{saleslist.territoryID}}\" >{{saleslist.territoryName}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && tid.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"tid.errors.required\"> Territory is required</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n                <div *ngIf=\"distribution_form.segment\" class=\"col s4\">\n                    <div class=\"control-field\">\n                       <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Select Role Type\" id=\"salesuserrole\" name=\"salesuserrole\" [(ngModel)]=\"distribution_form.salesuserrole\"  #salesuserrole=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && salesuserrole.invalid }\"  required >\n                          <mat-option (click)=\"get_sales_user(distribution_form.tid,$event.checked,index)\" *ngFor=\"let user of AllUserList \" value={{user.roleId}}>{{user.roleName}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && salesuserrole.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"salesuserrole.errors.required\">Sales User Role is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                \n                <div *ngIf=\"distribution_form.segment\" class=\"col s4 pr0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select placeholder=\"Select SalesUser\"  name=\"salesUsers\" id=\"salesUsers\" [(ngModel)]=\"distribution_form.salesUsers\"  #salesUsers=\"ngModel\" multiple>\n                        <mat-option *ngFor=\"let sales of sales_user_data;let i=index\" value=\"{{sales.userId}}\">{{sales.userName}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                  </div>\n                </div> -->\n\n              </div>\n            </div>\n            \n            <div class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>\n                  BANK DEATIL\n                </h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"col s4 pl0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <input matInput placeholder=\"Bank Name\" id=\"bankName\" #bankName=\"ngModel\" name=\"bankName\"  [(ngModel)]=\"distribution_form.bankName\" required >\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!bankName.valid && bankName.touched\">\n                      Bank Name is required\n                    </div>\n                    <mat-error *ngIf=\"f.submitted && bankName.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"bankName.errors.required\">Bank Name is required</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n                <div class=\"col s4 \">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <input matInput placeholder=\"Account Number\" id=\"accountNumber\" #accountNumber=\"ngModel\" name=\"accountNumber\" minlength=\"10\" maxlength=\"14\" min=\"0\" (keypress)=\"MobileNumber($event)\" [(ngModel)]=\"distribution_form.accountNumber\" required>\n                    </mat-form-field>\n                    \n                    <mat-error *ngIf=\"f.submitted && accountNumber.invalid && accountNumber.touched\" class=\"invalid-feedback\">\n                      <mat-error>Account Number must be atleast 10 digit</mat-error>\n                    </mat-error>\n                    \n                    <mat-error *ngIf=\"f.submitted && accountNumber.invalid && !accountNumber.touched\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"accountNumber.errors.required\">Account Number is required</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n                <div class=\"col s4 pr0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <input matInput placeholder=\"IFSC Code\" id=\"ifscCode\" #ifscCode=\"ngModel\" minlength=\"11\" maxlength=\"11\" name=\"ifscCode\"  [(ngModel)]=\"distribution_form.ifscCode\" required>\n                    </mat-form-field>\n                    \n                    <mat-error *ngIf=\"f.submitted && ifscCode.invalid && ifscCode.touched\"  class=\"invalid-feedback\">\n                      <mat-error>IFSC Code Must be 11 digit</mat-error>\n                    </mat-error>\n                    <mat-error *ngIf=\"f.submitted && ifscCode.invalid && !ifscCode.touched\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"ifscCode.errors.required\">IFSC Code is required</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"cs-btn fixedd mt32 text-right\">\n              <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\" (click)=\"setFocus(f.form, p.form)\" >Save</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<div class=\"h50\"></div>\n\n\n"

/***/ }),

/***/ "./src/app/distribution/add-distribution/add-distribution.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/distribution/add-distribution/add-distribution.component.ts ***!
  \*****************************************************************************/
/*! exports provided: AddDistributionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDistributionComponent", function() { return AddDistributionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");









var AddDistributionComponent = /** @class */ (function () {
    function AddDistributionComponent(db, toast, router, renderer, msg, platformId) {
        this.db = db;
        this.toast = toast;
        this.router = router;
        this.renderer = renderer;
        this.msg = msg;
        this.platformId = platformId;
        this.distribution_form = {};
        this.networkContacts = [];
        this.statelist = [];
        this.st = [];
        this.salesUser = [];
        this.message = [];
        this.districtlist = [];
        this.saleslist = [];
        this.district1 = [];
        this.citylist = [];
        this.districts1 = [];
        this.cities = [];
        this.districts2 = [];
        this.cities1 = [];
        this.areas = [];
        this.loader = false;
        this.client1 = [];
        this.segmentlist = [];
        this.networkSegments = [];
        this.networkShippings = {};
        this.shippingState = [];
        this.shippingDistrict = [];
        this.shippingCity = [];
        this.shippingPin = [];
        this.leadId = {};
        this.leaddetail = {};
        this.isShippingAddressSame = '';
        this.leadsegment = [];
        this.shipping = [];
        this.territoryList = [];
        this.sales_user_data = [];
        this.rolelists1 = [];
        this.AllUserList = [];
        this.networkShippings.country = 'India';
        this.get_state();
        this.getshippingState();
        this.renderer.removeClass(document.body, 'nav-active');
        this.leadId = JSON.parse(localStorage.getItem('leadId')) || [];
        localStorage.setItem('leadId', JSON.stringify(''));
        console.log(this.leadId);
        this.distribution_form.networkContacts = [];
        this.currentDate = new Date();
    }
    AddDistributionComponent.prototype.ngOnInit = function () {
        this.distribution_form.role = 12;
        this.rolelist();
        this.segment_list();
        console.log(this.leadId.referenceId);
        if (this.leadId.referenceId) {
            this.show_details();
        }
    };
    AddDistributionComponent.prototype.show_details = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData(this.leadId.referenceId, 'lead/detail/').subscribe(function (response) {
            console.log(response);
            _this.leaddetail = response['data'];
            console.log(_this.leaddetail);
            _this.distribution_form.establishment = _this.leaddetail.establishment;
            _this.distribution_form.street = _this.leaddetail.street;
            _this.distribution_form.mobile = _this.leaddetail.mobile;
            _this.distribution_form.email = _this.leaddetail.email;
            _this.distribution_form.landline = _this.leaddetail.landline;
            _this.distribution_form.networkContacts = _this.leaddetail.leadContacts;
            _this.distribution_form.state = _this.leaddetail.state;
            _this.distribution_form.city = _this.leaddetail.city;
            _this.distribution_form.district = _this.leaddetail.district;
            _this.distribution_form.pin = _this.leaddetail.pin;
            _this.distribution_form.source = _this.leaddetail.source;
            console.log(_this.leaddetail.leadSegments);
            for (var t = 0; t < _this.leaddetail.leadSegments.length; t++) {
                console.log(_this.leaddetail.leadSegments[t].segment);
                _this.leadsegment.push(_this.leaddetail.leadSegments[t].segment);
            }
            console.log(_this.leadsegment);
            _this.distribution_form.segment = _this.leadsegment;
            console.log(_this.distribution_form.sgment);
            setTimeout(function () {
                _this.get_district();
                _this.get_city();
            }, 1000);
            setTimeout(function () {
                _this.get_sales_terrtory(_this.distribution_form.pin);
            }, 900);
        });
    };
    AddDistributionComponent.prototype.setFocus = function (form, contactForm) {
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_8__["isPlatformBrowser"])(this.platformId)) {
                        jquery__WEBPACK_IMPORTED_MODULE_7__('#' + key).focus();
                    }
                    return true;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
        console.log(contactForm.controls);
        for (var key in contactForm.controls) {
            if (contactForm.controls.hasOwnProperty(key)) {
                if (contactForm.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_8__["isPlatformBrowser"])(this.platformId)) {
                        console.log(key);
                        jquery__WEBPACK_IMPORTED_MODULE_7__('#' + key).focus();
                        jquery__WEBPACK_IMPORTED_MODULE_7__(window).scrollTop(150);
                    }
                    console.log(key);
                    return true;
                }
                console.log(key + " -> " + contactForm.controls[key].status);
            }
        }
    };
    AddDistributionComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var cllient = _this.rolelists.filter(function (x) { return x.userTypeId == 3; });
            _this.client1 = cllient[0].roles;
            console.log(_this.client1);
        });
    };
    AddDistributionComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    AddDistributionComponent.prototype.onSubmit = function () {
        var _this = this;
        this.loader = true;
        if (this.distribution_form.salesUsers) {
            for (var i = 0; i < this.distribution_form.salesUsers.length; i++) {
                for (var j = 0; j < this.sales_user_data.length; j++) {
                    if (this.distribution_form.salesUsers[i] == this.sales_user_data[j].userId) {
                        this.salesUser.push({ 'salesUserId': this.sales_user_data[i].userId, 'territoryId': this.sales_user_data[i].territoryId, 'salesUserName': this.sales_user_data[i].userName, 'salesUserRole': this.sales_user_data[i].role });
                    }
                }
            }
        }
        console.log(this.salesUser);
        console.log('hello');
        for (var i_1 = 0; i_1 < this.distribution_form.segment.length; i_1++) {
            this.networkSegments.push({ "segmentCode": this.distribution_form.segment[i_1],
                "segment": this.distribution_form.segment[i_1] });
        }
        if (this.distribution_form.name) {
            if (!this.distribution_form.mobile2 || this.distribution_form.mobile2 == null) {
                this.distribution_form.mobile2 = '';
            }
            this.distribution_form.networkContacts.push({ name: this.distribution_form.name, mobile1: this.distribution_form.mobile1, mobile2: this.distribution_form.mobile2 });
        }
        this.shipping.push(this.networkShippings);
        this.distribution_form.salesUsers = this.salesUser;
        this.distribution_form.networkSegments = this.networkSegments;
        this.distribution_form.country = "India";
        this.distribution_form.networkShippings = this.shipping;
        console.log(this.distribution_form);
        console.log(this.distribution_form.salesUsers);
        var distributionData = JSON.parse(JSON.stringify(this.distribution_form));
        delete distributionData['financialYear'];
        delete distributionData['targetLimit'];
        this.db.fetchData(distributionData, 'network/add').subscribe(function (response) {
            console.log(response);
            _this.networkSegments = [];
            if (response['status'] == "Success") {
                if (response['data']) {
                    var sanddata = { 'financialYear': _this.distribution_form.financialYear, 'networkId': response['data'], 'targetLimit': _this.distribution_form.targetLimit };
                    console.log(sanddata);
                    _this.db.fetchData(sanddata, 'network/limit/add').subscribe(function (resp) {
                        console.log(resp);
                        _this.loader = false;
                        _this.toast.openSucess('Distributor Network added successfully', '');
                        _this.router.navigate(['/distribution-list']);
                    });
                }
                console.log(_this.leadId.taskId);
                if (_this.leadId.taskId) {
                    _this.leadId.leadConverted = true;
                    var value = { "taskId": _this.leadId.taskId, "userId": _this.leadId.userId, "taskStatus": 2, "leadConverted": _this.leadId.leadConverted, "referenceId": _this.leadId.referenceId, 'taskType': _this.leadId.taskType };
                    _this.db.fetchData(value, "task/update").subscribe(function (result) {
                        console.log(result);
                        if (result['status'] == 'Success') {
                            setTimeout(function () {
                                _this.toast.openSucess('Task Closed Successfully', '');
                            }, 1000);
                        }
                    });
                }
            }
            else {
                _this.loader = false;
                _this.distribution_form.name = "";
                _this.distribution_form.mobile1 = "";
                _this.distribution_form.mobile2 = "";
                _this.msg.error(response['message']);
            }
            ;
        });
    };
    AddDistributionComponent.prototype.removeContact = function (index) {
        this.distribution_form.networkContacts.splice(index, 1);
    };
    AddDistributionComponent.prototype.add_contact = function () {
        if (this.distribution_form.mobile2 == null) {
            this.distribution_form.mobile2 = 0;
        }
        this.distribution_form.networkContacts.push({ name: this.distribution_form.name, mobile1: this.distribution_form.mobile1, mobile2: this.distribution_form.mobile2 });
        console.log(this.distribution_form.networkContacts);
        this.distribution_form.country = "India";
        this.distribution_form.name = "";
        this.distribution_form.mobile1 = "";
        this.distribution_form.mobile2 = "";
    };
    AddDistributionComponent.prototype.get_sales = function (pin) {
        var _this = this;
        this.loader = true;
        console.log(pin);
        console.log('hello');
        this.db.fileData(pin, 'territorybypin/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.territoryId = response['data'];
                console.log(_this.territoryId);
                var territoryIDs = [];
                for (var index = 0; index < _this.territoryId.length; index++) {
                    territoryIDs.push(_this.territoryId[index].territoryId);
                }
                console.log(territoryIDs);
                _this.loader = true;
            }
        });
    };
    AddDistributionComponent.prototype.get_sales_user = function (data, event, index) {
        var _this = this;
        this.sales_user_data = [];
        console.log(data);
        console.log(event);
        console.log(index);
        console.log(this.distribution_form.salesuserrole);
        this.db.fetchData({}, 'territory/salesusers?territoryIds=' + data).subscribe(function (response) {
            console.log(response);
            var tempuserdata = response['data'];
            var role = tempuserdata.filter(function (x) { return x.role == _this.distribution_form.salesuserrole; });
            if (role.length != 0) {
                console.log(role);
                _this.sales_user_data = role;
            }
            // else{
            //   const role=tempuserdata.filter(x=>x.role==8)
            //   if(role.length!=0)
            //   {
            //     console.log(role);
            //     this.sales_user_data=role;
            //   }
            //   else
            //   {
            //       const role=tempuserdata.filter(x=>x.role==7)
            //       if(role.length!=0)
            //       {
            //         console.log(role);
            //         this.sales_user_data=role;
            //       }
            //       else{
            //         const role=tempuserdata.filter(x=>x.role==6)
            //       if(role.length!=0)
            //       {
            //         console.log(role);
            //         this.sales_user_data=role;
            //       }
            //       }
            //   }
            // }
        });
        console.log(this.sales_user_data);
    };
    AddDistributionComponent.prototype.rolelist1 = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists1 = response['data'];
            _this.loader = false;
            var filterrolelead = _this.rolelists1.filter(function (x) { return x.userTypeId == 2; });
            _this.AllUserList = filterrolelead[0].roles;
            console.log(_this.AllUserList);
        });
    };
    // userList(role){
    //   console.log(role);
    //   const rolee=this.saleslist.filter(x=>x.role==role);
    //             this.territoryList = [];
    //             if(role.length != 0)
    //             {
    //                 console.log(rolee);
    //                 this.territoryList = rolee;
    //             }
    //   }
    AddDistributionComponent.prototype.get_sales_terrtory = function (pin) {
        var _this = this;
        if (!pin) {
            pin = this.distribution_form.pin;
        }
        console.log(this.distribution_form.segment);
        this.db.fetchData({ 'pinCode': pin, "segments": this.distribution_form.segment }, 'territory/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.saleslist = response['data'];
            // this.saleslist=response['data'][0]['salesUsers'];
            console.log(_this.saleslist);
        });
    };
    AddDistributionComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    AddDistributionComponent.prototype.namecheck = function (event) {
        var pattern = /[A-Z\+\a-z\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    AddDistributionComponent.prototype.get_state = function () {
        var _this = this;
        console.log("stats runnning.....");
        this.loader = true;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.statelist = response['data'];
            _this.shippingState = response['data'];
        });
    };
    AddDistributionComponent.prototype.get_district = function () {
        var _this = this;
        this.loader = true;
        console.log("district running....");
        //  this.distribution_form.district='';
        //  this.distribution_form.pin='';
        //  this.distribution_form.city='';
        console.log(this.distribution_form.state);
        this.st = Array(this.distribution_form.state);
        this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            _this.districtlist = response['data'];
            _this.district1 = _this.districtlist[0].distrcits;
            _this.shippingDistrict = response['data'][0].distrcits;
            console.log(_this.district1);
        });
    };
    AddDistributionComponent.prototype.get_city = function () {
        var _this = this;
        this.loader = true;
        console.log(this.distribution_form.state);
        console.log(this.distribution_form.district);
        console.log("city runniyng..");
        this.db.fetchData(Array({ "stateName": this.distribution_form.state, "distrcits": Array({ "districtName": this.distribution_form.district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.citylist = response['data'];
            _this.districts1 = _this.citylist[0].distrcits;
            // this.shippingCity=response['data'][0].cities;
            _this.cities = _this.districts1[0].cities;
            _this.shippingCity = JSON.parse(JSON.stringify(_this.cities));
            console.log(_this.cities);
            var statemasterdata = [];
            statemasterdata = _this.cities.filter(function (x) { return x.cityName == _this.distribution_form.city; });
            console.log(statemasterdata);
            _this.leadstatemasteroid = statemasterdata[0]['stateMasterId'];
            console.log(_this.leadstatemasteroid);
            _this.get_pincode(_this.leadstatemasteroid);
        });
    };
    AddDistributionComponent.prototype.get_pincode = function (stateMasterId) {
        var _this = this;
        this.loader = true;
        console.log(stateMasterId);
        var cityarray = [];
        cityarray[0] = stateMasterId;
        // this.loader=true;
        // this.distribution_form.pin='';
        // console.log(this.distribution_form.state,this.distribution_form.district,this.distribution_form.city);
        this.db.fetchData({ 'stateMasterIds': cityarray, }, 'city/pincodes').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.citylist = response['data'];
            // this.districts2=this.citylist[0].distrcits;
            // this.cities1=this.districts2[0].cities;
            // let filterpincode= this.cities1.filter(x => x.cityName==this.distribution_form.city);
            _this.areas = response['data'][0].pinCodes;
            _this.shippingPin = _this.areas;
            console.log(_this.areas);
            console.log(_this.cities1);
        });
    };
    AddDistributionComponent.prototype.getshippingState = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.shippingState = response['data'];
        });
    };
    AddDistributionComponent.prototype.getShippingDistrict = function (state) {
        var _this = this;
        this.st = Array(state);
        this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            _this.shippingDistrict = response['data'][0].distrcits;
            console.log(_this.district1);
        });
    };
    AddDistributionComponent.prototype.getShippingCity = function (state, district) {
        var _this = this;
        this.db.fetchData(Array({ "stateName": state, "distrcits": Array({ 'districtName': district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.shippingCity = response['data'][0].distrcits[0].cities;
            console.log(_this.shippingCity);
        });
    };
    AddDistributionComponent.prototype.getShippingPin = function (stateMasterId) {
        var _this = this;
        this.loader = true;
        console.log(stateMasterId);
        var cityarray = [];
        cityarray[0] = stateMasterId;
        this.db.fetchData({ 'stateMasterIds': cityarray }, 'city/pincodes').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.shippingPin = response['data'][0]['pinCodes'];
            // this.districts2=this.citylist[0].distrcits;
            // this.cities1=this.districts2[0].cities;
            // let filterpincode= this.cities1.filter(x => x.cityName==this.networkShippings.city);
            // this.shippingPin=filterpincode[0].pinCodes;
        });
    };
    AddDistributionComponent.prototype.sameAsAddress = function (event) {
        console.log(event);
        if (event.checked) {
            this.isShippingAddressSame = 'Yes';
            this.networkShippings.state = this.distribution_form.state;
            this.networkShippings.district = this.distribution_form.district;
            this.networkShippings.pin = this.distribution_form.pin;
            console.log(this.distribution_form.city);
            console.log("check city of address");
            this.networkShippings.city = this.distribution_form.city;
            this.networkShippings.street = this.distribution_form.street;
        }
        else {
            this.isShippingAddressSame = 'No';
            this.networkShippings.state = '';
            this.networkShippings.district = '';
            this.networkShippings.pin = '';
            this.networkShippings.city = '';
            this.networkShippings.street = '';
        }
    };
    AddDistributionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-distribution',
            template: __webpack_require__(/*! ./add-distribution.component.html */ "./src/app/distribution/add-distribution/add-distribution.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"],
            src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
            src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"], Object])
    ], AddDistributionComponent);
    return AddDistributionComponent;
}());



/***/ }),

/***/ "./src/app/distribution/distribution-detail/distribution-detail.component.html":
/*!*************************************************************************************!*\
  !*** ./src/app/distribution/distribution-detail/distribution-detail.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/distribution-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{networkUserDetail.establishment}}</h2>\n        <p class=\"light\"*ngIf=\"networkUserDetail.role=='13'\">Retailer</p>\n        <p class=\"light\" *ngIf=\"networkUserDetail.role=='12'\">Distributor</p>\n        <p class=\"light\"*ngIf=\"networkUserDetail.role=='11'\">Whole saler</p>\n        <p class=\"light\" *ngIf=\"networkUserDetail.role=='14'\">Engine Reconditiner</p>\n        <p class=\"light\"*ngIf=\"networkUserDetail.role=='15'\">Mechanic</p>\n      </div>\n    </div>\n    \n    <div *ngIf=\"userType=='1' || userType=='2'\" class=\"left-auto\" style=\"display: flex;\">\n      <div class=\"tabs right-tab\">\n        <ul>\n          <li><a class=\"{{currentActiveTab==1 ? 'tab-active' : ''}}\" (click)='currentActiveTab=1' routerLinkActive=\"active\">Details</a></li>\n          <li><a  class=\"{{currentActiveTab==2 ? 'tab-active' : ''}}\" (click)='currentActiveTab=2 ; order_list()' routerLinkActive=\"active\">Order</a></li>\n          <li><a class=\"{{currentActiveTab==3 ? 'tab-active' : ''}}\" (click)=\"currentActiveTab=3; concern_list(3)\" routerLinkActive=\"active\">Concern</a></li>\n          <li><a class=\"{{currentActiveTab==5 ? 'tab-active' : ''}}\" (click)='currentActiveTab=5' routerLinkActive=\"active\">Pop & Gift</a></li>\n          <li><a class=\"{{currentActiveTab==4 ? 'tab-active' : ''}}\" (click)='currentActiveTab=4; documentList()' routerLinkActive=\"active\">Image & Document</a></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n\n      <div *ngIf=\"currentActiveTab==1\" class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info\">\n            <div class=\"basic-details\">\n              <div class=\"profile-info\">\n                <ul>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/distribution_code.svg\" class=\"fix-img\">\n                      <span>Distribution Code</span>\n                      <p>{{networkUserDetail.networkCode}}</p>\n                      <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" (click)=\"openEmail('networkCode')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/gst.svg\" class=\"fix-img\">\n                      <span>GST Number</span>\n                      <p>{{networkUserDetail.gst}}</p>\n                      <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\"  (click)=\"openEmail('gst')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/pan-card.svg\" class=\"fix-img\">\n                      <span>PAN Number</span>\n                      <p>{{networkUserDetail.pan}}</p>\n                      <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\"  (click)=\"openEmail('pan')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n              \n              <div class=\"profile-info mt15\">\n                <ul>\n                    <li>\n                        <div class=\"cs-box\">\n                          <img src=\"assets/img/applicant.svg\" class=\"fix-img\">\n                          <span>Applicant Name </span>\n                          <p>{{networkUserDetail.nameOfApplicant}}</p>\n                          <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\"  (click)=\"openEmail('nameOfApplicant')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                        </div>\n                      </li>\n\n                      <li>\n                        <div class=\"cs-box\">\n                          <img src=\"assets/img/phone.svg\" class=\"fix-img\">\n                          <span> Mobile</span>\n                          <p>{{networkUserDetail.mobile}}</p>\n                          <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\"  (click)=\"openEmail('mobile')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                        </div>\n                      </li>\n\n                      <li>\n                          <div class=\"cs-box\">\n                            <img src=\"assets/img/gmail.svg\" class=\"fix-img\">\n                            <span>Email</span>\n                            <p>{{networkUserDetail.email}}</p>\n                            <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" (click)=\"openEmail('email')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                          </div>\n                        </li>\n                </ul>\n              </div>\n              \n              <div class=\"profile-info mt15\">\n                <ul>\n\n                     <li>\n                        <div class=\"cs-box\">\n                          <img src=\"assets/img/phone.svg\" class=\"fix-img\">\n                          <span>Landline</span>\n                          <p>{{networkUserDetail.landline}}</p>\n                          <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" (click)=\"openEmail('landline')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                        </div>\n                      </li>\n\n                      <li>\n                          <div class=\"cs-box\">\n                            <img src=\"assets/img/calendar.svg\" class=\"fix-img\">\n                            <span>Date Of Commencement</span>\n                            <p *ngIf=\"networkUserDetail.dateOfCommencement != '0001-01-01T00:00:00'\">{{networkUserDetail.dateOfCommencement | date: 'dd-MMM-yyyy'}}</p>\n                            <p *ngIf=\"networkUserDetail.dateOfCommencement == '0001-01-01T00:00:00'\" >---</p>\n                            <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\"  (click)=\"openEmail('dates')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                          </div>\n                      </li>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/calendar.svg\" class=\"fix-img\">\n                      <span>Date Of Birth</span>\n                      <p *ngIf=\"networkUserDetail.dateOfBirth != '0001-01-01T00:00:00'\">{{networkUserDetail.dateOfBirth | date: 'dd-MMM-yyyy'}}</p>\n                      <p *ngIf=\"networkUserDetail.dateOfBirth == '0001-01-01T00:00:00'\" >---</p>\n                      <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" (click)=\"openEmail('dates')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n\n              <div class=\"profile-info mt15\">\n                  <ul>\n                      <li>\n                          <div class=\"cs-box\">\n                            <img src=\"assets/img/calendar.svg\" class=\"fix-img\">\n                            <span>Date Of Marriage</span>\n                            <p *ngIf=\"networkUserDetail.dateOfMarriage != '0001-01-01T00:00:00'\" >{{networkUserDetail.dateOfMarriage | date: 'dd-MMM-yyyy'}}</p>\n                            <p *ngIf=\"networkUserDetail.dateOfMarriage == '0001-01-01T00:00:00'\" >---</p>\n                            <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\"  (click)=\"openEmail('dates')\" matRipple matTooltip=\"EDIT\"><i class=\"material-icons\">create</i></a>\n                          </div>\n                        </li>\n                        <li>\n                            <div class=\"cs-box\">\n                              <img src=\"assets/img/gst.svg\" class=\"fix-img\">\n                              <span>Source</span>\n                              <p>{{networkUserDetail.sourceName ? networkUserDetail.sourceName : '--'}}</p>\n                              <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('source')\"><i class=\"material-icons\">create</i></a>\n                         </div>\n                      </li>\n                  </ul>\n                </div>\n              <mat-divider class=\"mt15 mb15\"></mat-divider>\n              <div class=\"col s8 pl0\">\n                <div class=\"row\">\n                  <div class=\"col s12 pl0 cs-figure\">\n                    <h2>CREDIT LIMIT</h2>\n                    <ul>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>Total Limit</span>\n                            <p>{{networkUserDetail.creditLimit| currency: 'INR':true}}</p>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>Used</span>\n                            <p *ngIf=\"networkUserDetail.creditUsed\">{{networkUserDetail.creditUsed| currency: 'INR':true}}</p>\n                            <p *ngIf=\"!networkUserDetail.creditUsed\">--</p>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  \n                  <div *ngIf=\"networkUserDetail.networkLimits?.length==1\" class=\"col s12 mt15 pl0 cs-figure\">\n                    <h2>YEARLY TARGETS  \n                      <a *ngIf=\"this.role==1\" mat-button class=\"figure-edit\" matTooltip=\"Add Target\" color=\"accent\" (click)=\"openEmail('addlimit')\" style=\"top: 24px;\"><i class=\"material-icons\">add</i></a>\n                    </h2>\n                    <ul *ngFor=\"let limit of networkUserDetail.networkLimits;let i=index\">\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>YEAR</span>\n                            <p>{{limit.financialYear}}</p>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>TARGET</span>\n                            <p>&#x20B9; {{limit.targetLimit}}</p>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>ACHEIVED</span>\n                            <p>&#x20B9; {{limit.targetAchieved}}</p>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div *ngIf=\"networkUserDetail.networkLimits?.length>1\" class=\"col s12 mt15 pl0\">\n                      <div class=\"target-table\">\n                          <a  class=\"figure-edit\" matTooltip=\"Add Target\" (click)=\"openEmail('addlimit')\"><i class=\"material-icons\">add</i></a>\n                        <table>\n                          <thead>\n                              <tr>\n                                  <th>YEAR</th>\n                                  <th>TARGET</th>\n                                  <th>ACHEIVED</th>\n                                </tr>\n                          </thead>\n                          <tbody>\n                              <tr *ngFor=\"let limit of networkUserDetail.networkLimits;let i=index\">\n                                  <td>{{limit.financialYear}}</td>\n                                  <td>&#x20B9; {{limit.targetLimit}}</td>\n                                  <td>&#x20B9; {{limit.targetAchieved}}</td>\n                                </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                </div>\n              </div>\n              <div class=\"col s4  pr0\">\n                <div class=\"sprate-box flat-sprate\" style=\"border: 1px solid #ccc;\">\n                  <div class=\"cs-logs\">\n                    <div class=\"top-heading\">\n                      <h2>ACCOUNT INFO</h2>\n                    </div>\n                    <div class=\"logs-outer\">\n                      <div class=\"logs-list\" style=\"overflow: inherit;\">\n                        <div class=\"account-details\">\n                          <ul>\n                            <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <div class=\"cs-account\">\n                                    <p>User Name</p>\n                                    <h5>{{networkUserDetail.email}}</h5>\n                                  </div>\n                                </div>\n                              </div>\n                            </li>\n                            <li *ngIf=\"this.role==1\" class=\"active\" style=\"padding-top: 0px !important; padding-bottom: 0px !important;\">\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <div class=\"cs-account\">\n                                    <form name=\"form\" (ngSubmit)=\"f.form.valid && updatepassword()\"  #f=\"ngForm\" novalidate>\n                                      <div class=\"from-fields\">\n                                        <div class=\"control-field pr80\">\n                                          <mat-form-field class=\"cs-input infix-bodr\">\n                                            <input matInput type=\"text\" placeholder=\"Change password\" name=\"password\" [(ngModel)]=\"account_form.password\" #password=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && password.invalid }\" required>\n                                          </mat-form-field>\n                                          <mat-error *ngIf=\"f.submitted && password.invalid\" class=\"invalid-feedback\">\n                                            <mat-error *ngIf=\"password.errors.required\">Password is required</mat-error>\n                                          </mat-error>\n                                        </div>\n                                      </div>\n                                      <button mat-raised-button color=\"accent\" class=\"material-icons pass-icon\">Save</button>\n                                    </form>\n                                  </div>\n                                </div>\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"row\" *ngIf=\"currentActiveTab==1\">\n        <div class=\"col s6\">\n          <div class=\"sprate-box pt0\">\n            <div  class=\"top-heading left-right-15\">\n              <h2>ASSIGNED INFORMATION</h2>\n              <a *ngIf=\"this.role==1\" (click)=\"editAssignedDiv=true;\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\"><i class=\"material-icons\">edit</i></a>\n            </div>\n            \n            <div *ngIf=\"!editAssignedDiv\" class=\"row mt15\">\n\n                <div  class=\"col s6  pl0\">\n                    <div class=\"territory-info\">\n                      <div class=\"head\" >\n                        <h2>Segment</h2>\n                      </div>\n                      \n                      <div *ngIf=\"networkUserDetail.networkSegments?.length==0\" class=\"not-data\">\n                        <div class=\"inner-data\">\n                          <p>No Data</p>\n                        </div>\n                      </div>\n                      \n                      <div *ngIf=\"networkUserDetail.networkSegments?.length>0\" class=\"cs-checkbox\">\n                        <div class=\"checkbox-outer\" >\n                          <section class=\"checkbox-inner bodr0\" >\n                            <mat-checkbox *ngFor=\"let list of networkUserDetail.networkSegments\" class=\"check-list bg-none check-none check-none check-none check-none\">\n                              <div class=\"name-outer\">\n                                <div class=\"outer\">\n                                  <div class=\"inner\">\n                                    <div class=\"name-inner\">\n                                      S\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"text-box\">\n                                <h2>{{list.segment}}</h2>\n                              </div>\n                            </mat-checkbox>\n                          </section>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n              \n              <div class=\"col s6 pr0\">\n                <div class=\"territory-info\">\n                  <div class=\"head\">\n                    <h2>Sales User</h2>\n                  </div>\n                  \n                  <div *ngIf=\"networkUserDetail.networkSalesUsers?.length==0\" class=\"not-data\">\n                    <div class=\"inner-data\">\n                      <p>No Data</p>\n                    </div>\n                  </div>\n                  \n                  <div *ngIf=\"networkUserDetail.networkSalesUsers?.length>0\" class=\"cs-checkbox\">\n                    <div class=\"checkbox-outer\" >\n                      <section class=\"checkbox-inner bodr0\" >\n                        <mat-checkbox *ngFor=\"let list of networkUserDetail.networkSalesUsers\" class=\"check-list bg-none check-none check-none check-hover check-none\">\n                          <a>\n                            <div class=\"name-outer\">\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <div class=\"name-inner\">\n                                    {{list.salesUserName[0]}}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"text-box\">\n                              <h2>{{list.salesUserName}}</h2>\n                              <p>{{list.salesUserRoleName}}</p>\n                            </div>\n                          </a>\n                        </mat-checkbox>\n                      </section>  \n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n            </div>\n            \n            \n            <div *ngIf=\"editAssignedDiv\" class=\"row mt15\">\n\n                <div class=\"col s6 pl0\">\n                    <div class=\"territory-info\">\n                      <div class=\"head\">\n                        <h2>SEGMENT</h2>\n                      </div>\n                      <div class=\"cs-checkbox\">\n                        <div class=\"checkbox-outer\">\n                          <section class=\"checkbox-inner\" >\n                            <ng-container *ngFor='let segment of segmentlist;let i=index' aria-required=\"true\">\n                              <mat-checkbox class=\"check-list\" value=\"{{segment.text}}\" [(ngModel)]='segment.check' (change)=\"select_segments(segment.text,i,$event)\">{{segment.text}}</mat-checkbox>\n                            </ng-container>\n                          </section>\n                        </div>\n                      </div>\n                    </div>\n                    <!-- <div class=\"row\">\n                      <div class=\"col s12\">\n                        <div class=\"cs-btn text-right padding15\">\n                          <div class=\"in-btn\">\n                            <button mat-raised-button color=\"accent\" (click)=\"updateSegment()\">Update Segment</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div> -->\n              </div>\n              <div class=\"col s6 pr0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <mat-select placeholder=\"Select Role Type\" formControlName=\"role\" required >\n                        <mat-option (click)=\"userList(user.roleId)\" *ngFor=\"let user of AllUserList \" value={{user.roleId}}>{{user.roleName}}</mat-option>\n                        <!-- <mat-option (click)=\"oherUserDiv()\" value=null>Other</mat-option> -->\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"submitted && e.role.errors\" >Sales User Type required</mat-error>\n                  </div>\n                </div>\n\n\n              <div class=\"col s6 pr0\">\n                <div class=\"territory-info\">\n                  <div class=\"head\">\n                    <h2>SALES USER</h2>\n                  </div>\n                  <div class=\"cs-checkbox\">\n                    <div class=\"checkbox-outer padding0\">\n                      <section class=\"checkbox-inner\" >\n                        <ng-container *ngFor=\"let sales of territoryList;let i=index\" aria-required=\"true\">\n                          <mat-checkbox class=\"check-list\" (change)=\"select_sales(sales.userId,i,$event,sales.territoryId,sales.userName,sales.role)\" [(ngModel)]='sales.check' value=\"{{sales.userId}}\">{{sales.userName}}</mat-checkbox>\n                          <!-- <mat-checkbox *ngIf=\"sales.role!=10\" class=\"check-list\" value=\"{{sales.userId}}\" disabled>{{sales.userName}}</mat-checkbox> -->\n                        </ng-container>\n                        \n                      </section>\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- <div class=\"row\">\n                  <div class=\"col s12\">\n                    <div class=\"cs-btn text-right padding15\">\n                      <div class=\"in-btn\">\n                        <button mat-raised-button color=\"accent\" (click)=\"updateSales()\">Update Sales</button>\n                      </div>\n                    </div>\n                  </div>\n                </div> -->\n              </div>\n              \n              \n              \n              <div class=\"row mt15\">\n                <div class=\"col s12\">\n                  <div class=\"cs-btn mt15 text-right\">\n                    <button mat-raised-button color=\"warn\" class=\"mr15\" (click)=\"editAssignedDiv=false\">Cancel</button>\n                    <button mat-raised-button color=\"accent\" (click)=\"updateSales()\" style=\"color:#fff;\">Update</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n        \n        \n        <div class=\"col s6\">\n          <div class=\"sprate-box  padding0\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>CONTACT PERSONS</h2>\n              </div>\n              <a *ngIf=\"this.role==1\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\" (click)=\"openEmail('contact')\"><i class=\"material-icons\">edit</i></a>\n              <div class=\"cs-table\">\n                <div class=\"table-head\">\n                  <table>\n                    <tr>\n                      <th>Name</th>\n                      <th class=\"w170\">Mobile No. 1</th>\n                      <th class=\"w170\">Mobile No. 2</th>\n                    </tr>\n                  </table>\n                </div>\n                <div class=\"table-container\">\n                  <div class=\"table-content none-shadow\">\n                    <table>\n                      <tr *ngFor=\"let person of networkUserDetail.networkContacts\">\n                        <td>{{person.name}}</td>\n                        <td class=\"w170\">{{person.mobile1}}</td>\n                        <td class=\"w170\">{{person.mobile2}}</td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"sprate-box padding0 mt15\" *ngIf=\"currentActiveTab==1\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>ADDRESS</h2>\n              </div>\n              <a *ngIf=\"this.role==1\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" (click)=\"openDialog()\" color=\"accent\"><i class=\"material-icons\">edit</i></a>\n              <div class=\"ds-from-fields\">\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>State</p>\n                    <p>{{networkUserDetail.state}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>District</p>\n                    <p>{{networkUserDetail.district}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>City</p>\n                    <p>{{networkUserDetail.city}}</p>\n                  </div>\n                  <div class=\"static-info w100\" style=\"min-width: 100px;\">\n                    <p>Pincode</p>\n                    <p>{{networkUserDetail.pin}}</p>\n                  </div>\n                </div>\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>address</p>\n                    <p>{{ networkUserDetail.street!='' && networkUserDetail.street!=null ? networkUserDetail.street:'--'}}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"row\" *ngIf=\"currentActiveTab==1\">\n        <div class=\"col s12 padding0\">\n          <div class=\"sprate-box padding0 mt15\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>SHIPPING ADDRESS</h2>\n                <div class=\"cs-btn right-btn mr20\">\n                    <div class=\"in-btn\">\n                      <a *ngIf=\"this.role==1\" mat-raised-button color=\"accent\"  matTooltip=\"Add Address\" (click)=\"addAddress(networkUserDetail.networkId)\"><i class=\"material-icons\">add</i> Shipping Address</a>\n                    </div>\n                  </div>\n              </div>\n              <div class=\"ds-from-fields scroll\">\n\n\n                <div *ngFor=\"let list of networkUserDetail.shippingAddresses; let i = index\" class=\"address-blog\">\n\n                  <a *ngIf=\"this.role==1\" (click)=\"removeShippingAddress(i, list.shippingAddressId)\" class=\"figure-edit\" matTooltip=\"Edit Date\" matTooltip=\"delete\"><i class=\"material-icons\">delete_sweep</i></a>\n\n                  <div class=\"cs-row\">\n                    <div class=\"static-info\">\n                      <p>Office</p>\n                      <p>{{list?.office}}</p>\n                    </div>\n                    <div class=\"static-info\">\n                      <p>Landline</p>\n                      <p>{{list.landline}}</p>\n                    </div>\n                    <div class=\"static-info\">\n                      <p>Mobile</p>\n                      <p>{{list.mobile}}</p>\n                    </div>\n                    <div class=\"static-info\" >\n                      <p>Fax</p>\n                      <p>{{list.fax}}</p>\n                    </div>\n                  </div>\n                  <div class=\"cs-row\">\n                    <div class=\"static-info\">\n                      <p>Address</p>\n                      <p>{{list.street}}, {{list.city}}, {{list.district}} – {{list.pin}}, {{list.state}} (INDIA)</p>\n                      </div>\n                    </div>\n                  </div>\n\n                    </div>\n                  </div>\n                </div>\n                \n\n                <div class=\"sprate-box mt15 padding0\" >\n                  <div class=\"full-address\">\n                    <div class=\"top-heading\">\n                      <h2>Bank Details</h2>\n                    </div>\n                    <a *ngIf=\"this.role==1\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\" (click)=\"openEmail('bank')\"><i class=\"material-icons\">edit</i></a>\n                    <div class=\"cs-table\" *ngIf=\"networkUserDetail.bankName\">\n                      <div class=\"table-head\">\n                        <table>\n                          <tr>\n                            <th>Bank Name</th>\n                            <th class=\"w170\">Account Number</th>\n                            <th class=\"w170\">IFSC CODE</th>\n                          </tr>\n                        </table>\n                      </div>\n                      <div class=\"table-container\">\n                        <div class=\"table-content none-shadow\">\n                          <table>\n                            <tr>\n                              <td>{{networkUserDetail.bankName}}</td>\n                              <td class=\"w170\">{{networkUserDetail.accountNumber}}</td>\n                              <td class=\"w170\">{{networkUserDetail.ifscCode}}</td>\n                            </tr>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            \n            <div class=\"row\" *ngIf=\"currentActiveTab==2\">\n              <div class=\"col s12\">\n                <div class=\"cs-table left-right-20\">\n                  <div class=\"table-head tab-sticky-head\">\n                    <table class=\"sno-border\"> \n                      <tr>\n                        <th class=\"w30\">&nbsp;</th>\n                        <th class=\"w170\"> Date</th>\n                        <th >Created By</th>\n                        <th class=\"w170\"> Order No</th>\n                        <th class=\"w70 text-center\">QTY.</th>\n                        <th class=\"w120 text-right\">Amount</th>\n                        <th class=\"w180\"> Distributor's Status</th>\n                        <th  class=\"w140\"> Company Status</th>\n                      </tr>\n                    </table>\n                  </div>\n                  <div class=\"table-container\">\n                    <div class=\"table-content\">\n                      <table class=\"sno-border\">\n                        <tr *ngFor=\"let order of orderlist; let index = index\">\n                          <td class=\"w30\">{{index+1}}</td>\n                          <td class=\"w170\">{{order.createdOn |date :'EEEE, MMMM d, y'}}</td>\n                          <td >{{order.userName}}</td>\n                          <td  class=\"w170\"><a class=\"link-btn\" mat-button routerLink=\"/order-detail/{{order.orderId}}\" routerLinkActive=\"active\" >{{order.orderNumber}}</a></td>\n                          <td class=\"w70 text-center\">{{order.quantity}}</td>\n                          <td class=\"w120 text-right\">{{order.amount | currency: 'INR':true}}</td>\n                          <td *ngIf=\"cartActive==''\" class=\"w180\">\n                            <span class=\"text-center blue-clr\" *ngIf=\"order.dealerStatus=='1'\">Draft</span>\n                            <span class=\"text-center yellow-clr\" *ngIf=\"order.dealerStatus=='2'\">Pending</span>\n                            <span class=\"text-center green-clr\" *ngIf=\"order.dealerStatus=='3'\">Approved</span>\n                          </td>\n                          <td *ngIf=\"cartActive==''\" class=\"w140\">\n                            <span class=\"text-center yellow-clr\" *ngIf=\"order.companyStatus=='1'\">Pending</span>\n                            <span class=\"text-center green-clr\" *ngIf=\"order.companyStatus=='2'\">Approved</span>\n                            <span class=\"text-center red-clr\" *ngIf=\"order.companyStatus=='3'\">Hold</span>\n                          </td>\n                          \n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                  \n                </div>\n                <div class=\"data-not-available\" *ngIf=\"div\">\n                  <div class=\"outer\">\n                    <div class=\"iinear\">\n                      <div class=\"figure\" matRipple>\n                        <div class=\"header\">\n                          <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                        </div>\n                        \n                        <div class=\"description\">\n                          <div class=\"cs-heading\">\n                            <!-- <h2 *ngIf=\"cartActive=='active'\">Nothing In Draft</h2> -->\n                            <h2 *ngIf=\"orderActive=='active'\">No Order List</h2>\n                            \n                          </div>\n                          <div class=\"img\">\n                            <i class=\"material-icons\">error_outline</i>\n                          </div>\n                          <div class=\"psc\">\n                            <p>data not available</p>\n                            <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n\n            <div class=\"row\" *ngIf=\"currentActiveTab==3\">\n\n              <div class=\"col s12 padding0\">\n                <div class=\"cs-table left-right-20\">\n                  <div class=\"table-head\">\n                    <table>\n                      <tr >\n                        <th class=\"w150\">Concern Date</th>\n                        <th>Company Name</th>\n                        <th>Concern Number</th>\n                        <th class=\"w150\">Concern Type</th>\n                        <th class=\"w150 text-center\">Total Item</th>\n                        <th class=\"w150\">Concern Status</th>\n                      </tr>\n                    </table>\n                  </div>\n                  <div class=\"table-container\">\n                    <div class=\"table-content\">\n                      <table>\n                        <tr *ngFor=\"let concerns of tmp_concern_list\">\n                          <td class=\"w150\">{{concerns.createdOn|date:'d MMM y'}}</td>\n                          <td><a  class=\"link-btn\" mat-button routerLink=\"/concern-detail/{{concerns.concernId}}\" routerLinkActive=\"active\">{{concerns.networkEstablishment}}</a></td>\n                          <td>{{concerns.claimNo}}</td>\n                          <td class=\"w150\">{{concerns.concernTypeName}}</td>\n                          <td class=\"w150 text-center\"><span >{{concerns.productConcerns.length}}</span><span *ngIf='concerns.concernTypeName==\"Other\"'>1</span></td>\n                          <td class=\"w150\">{{concerns.concernStatusName}}</td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                \n                <div *ngIf=\"div\" class=\"data-not-available\" >\n                  <div class=\"outer\">\n                    <div class=\"iinear\">\n                      <div class=\"figure\" matRipple>\n                        <div class=\"header\">\n                          <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                        </div>\n                        \n                        <div class=\"description\">\n                          <div class=\"cs-heading\">\n                          </div>\n                          <div class=\"img\">\n                            <i class=\"material-icons\">error_outline</i>\n                          </div>\n                          <div class=\"psc\">\n                            <p>data not available</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\n            <div class=\"row\" *ngIf=\"currentActiveTab==4\">\n\n                <div class=\"col s12 padding0\">\n                  <div class=\"cs-table left-right-20\">\n                    <div class=\"table-head\">\n                      <table>\n                        <tr >\n                          <th class=\"w150\">Date</th>\n                          <th>Created By</th>\n                          <th>Document Name</th>\n                          <th class=\"w150 text-center\">Document</th>\n                          <th class=\"w150\">Action</th>\n                        </tr>\n                      </table>\n                    </div>\n                    <div class=\"table-container\">\n                      <div class=\"table-content\">\n                        <table>\n                         <tr *ngFor=\"let list of documentListData\">\n\n                            <td class=\"w150\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\n\n                            <td>{{list.createdByName}}</td>\n\n                            <td>{{list.documentName}}</td>\n\n                            <td class=\"w150 text-center\"> <a mat-button class=\"view\" href=\"{{dburl}}download/document/{{list.documentId}}\"><i class=\"material-icons\">cloud_download</i></a> </td>\n\n                            <td class=\"w150\">\n                                <div class=\"action-btns default-action\">\n                                   <!-- <a mat-button class=\"edit\"><i class=\"material-icons\">add</i></a>  -->\n                                    <button mat-button class=\"delete\"  (click)=\"deleteNetworkDocument(1)\"><i class=\"material-icons\">delete_sweep</i></button> \n                              </div> \n                            </td> \n\n                           </tr> \n                        </table>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"documentListData?.length==0 && !loader\" class=\"data-not-available\" >\n                    <div class=\"outer\">\n                      <div class=\"iinear\">\n                        <div class=\"figure\" matRipple>\n                          <div class=\"header\">\n                            <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                          </div>\n                          \n                          <div class=\"description\">\n                            <div class=\"cs-heading\">\n                            </div>\n                            <div class=\"img\">\n                              <i class=\"material-icons\">error_outline</i>\n                            </div>\n                            <div class=\"psc\">\n                              <p>data not available</p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n\n\n              <div class=\"row\" *ngIf=\"currentActiveTab==5\">\n\n                  <div class=\"col s12 padding0\">\n                    <div class=\"cs-table left-right-20\">\n                      <div class=\"table-head\">\n                        <table>\n                          <tr >\n                            <th class=\"w150\">Date</th>\n                            <th class=\"w150\">Created By</th>\n                            <th>Gift Name</th>\n                            <th>Qty</th>\n                            <th class=\"w150\">Image</th>\n                          </tr>\n                        </table>\n                      </div>\n                      <div class=\"table-container\">\n                        <div class=\"table-content\">\n                          <table>\n                            \n                          </table>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"data-not-available\" >\n                      <div class=\"outer\">\n                        <div class=\"iinear\">\n                          <div class=\"figure\" matRipple>\n                            <div class=\"header\">\n                              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                            </div>\n                            \n                            <div class=\"description\">\n                              <div class=\"cs-heading\">\n                              </div>\n                              <div class=\"img\">\n                                <i class=\"material-icons\">error_outline</i>\n                              </div>\n                              <div class=\"psc\">\n                                <p>data not available</p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"fixed-multibtn-botm\">\n                    <ul>\n                      <li><a  matTooltip=\"Add New\" matRipple (click)=\"openDialogone(networkUserDetail.networkId)\"><i class=\"material-icons\" >add</i></a></li>\n                    </ul>\n                  </div>\n        </div>\n      </div>\n      <div class=\"h50\"></div>\n      \n      "

/***/ }),

/***/ "./src/app/distribution/distribution-detail/distribution-detail.component.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/distribution/distribution-detail/distribution-detail.component.ts ***!
  \***********************************************************************************/
/*! exports provided: DistributionDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DistributionDetailComponent", function() { return DistributionDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _update_network_update_network_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../update-network/update-network.component */ "./src/app/distribution/update-network/update-network.component.ts");
/* harmony import */ var _update_network_address_update_network_address_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../update-network-address/update-network-address.component */ "./src/app/distribution/update-network-address/update-network-address.component.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var src_app_order_other_address_other_address_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/order/other-address/other-address.component */ "./src/app/order/other-address/other-address.component.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _document_end_image_document_end_image_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../document-end-image/document-end-image.component */ "./src/app/distribution/document-end-image/document-end-image.component.ts");














var DistributionDetailComponent = /** @class */ (function () {
    function DistributionDetailComponent(router, toast, user, route, service, dialog, dia) {
        var _this = this;
        this.router = router;
        this.toast = toast;
        this.user = user;
        this.route = route;
        this.service = service;
        this.dialog = dialog;
        this.dia = dia;
        this.concernActive = '';
        this.detailActive = '';
        this.orderActive = '';
        this.IsActive = 1;
        this.tmp_list = [];
        this.userdata = [];
        this.div = false;
        this.orderlist = [];
        this.msg = [];
        this.cartActive = '';
        this.contact_person = [];
        this.action = "1";
        this.documentData = [];
        this.networkUpdateActions = [];
        this.saleslist = [];
        this.account_form = {};
        this.networkUserDetail = [];
        this.salesUsersegment = [];
        this.concernList = [];
        this.segmentlist = [];
        this.selectedFile = [];
        // networkSegments:any=[];
        this.salesUser = [];
        this.loader = false;
        this.territoryList = [];
        this.editAssignedDiv = false;
        this.segmentUpdateActions = '';
        this.currentActiveTab = '';
        this.documentListData = [];
        this.dburl = '';
        this.urls = [];
        this.data = {};
        this.productdata = [];
        this.tmp_concern_list = [];
        this.rolelists = [];
        this.AllUserList = [];
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            _this.userdata = _this.user['user']['data'];
            _this.role = _this.userdata['role'];
            _this.userType = _this.userdata['userType'];
        });
        setTimeout(function () {
        }, 1000);
    }
    DistributionDetailComponent.prototype.ngOnInit = function () {
        this.show_details();
        this.dburl = this.service.dburl;
        setTimeout(function () {
        }, 500);
    };
    DistributionDetailComponent.prototype.insertDocument = function (data) {
        var _this = this;
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        console.log(this.selectedFile);
        setTimeout(function () {
            _this.Insert_Image();
        }, 500);
    };
    DistributionDetailComponent.prototype.Insert_Image = function () {
        var _this = this;
        for (var i = 0; i < this.selectedFile.length; i++) {
            console.log(this.selectedFile[i]);
            this.documentData = new FormData;
            this.documentData.action = 1;
            this.documentData.binaryData = this.urls[i];
            this.documentData.documentType = 1;
            this.documentData.documentName = this.selectedFile[i].name;
            this.documentData.referenceId = this.id;
            this.documentData.fileName = "Document" + i + ".pdf", this.selectedFile[i];
            this.documentData.iconName = "DocumentIcon" + i + ".pdf", this.selectedFile[i];
            console.log(this.documentData);
        }
        var value = [];
        value[0] = this.documentData;
        this.service.fetchData(value, "document/update").subscribe(function (resp) {
            console.log(resp);
            if (resp) {
                _this.loader = false;
                _this.selectedFile = [];
                _this.toast.openSucess('Document Added Sucessfully', '');
            }
        });
    };
    DistributionDetailComponent.prototype.show_details = function () {
        var _this = this;
        this.loader = true;
        this.detailActive = true;
        this.service.fetchData({ 'networkId': this.id }, "network/list").subscribe((function (result) {
            console.log(result);
            _this.networkUserDetail = result['data'][0];
            console.log(_this.networkUserDetail);
            _this.loader = false;
            _this.rolelist();
            _this.segment_list();
            _this.get_sales(1, '');
            setTimeout(function () {
                _this.currentActiveTab = 1;
            }, 200);
        }));
    };
    DistributionDetailComponent.prototype.order_list = function () {
        var _this = this;
        this.loader = true;
        this.orderActive = true;
        console.log(this.userdata['userType']);
        if (this.userdata['userType'] == 3) {
            this.senddata = { "networkId": this.id, "currentPage": 1, "pageSize": 50 };
        }
        else if (this.userdata['userType'] == 2) {
            this.senddata = { "networkId": this.id, "currentPage": 1, "pageSize": 50 };
        }
        else {
            this.senddata = { "networkId": this.id, "currentPage": 1, "pageSize": 50 };
        }
        this.service.fetchData(this.senddata, 'order/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.orderlist = response['data'];
            }
            else {
                _this.div = true;
            }
            console.log(_this.orderlist);
            _this.loader = false;
        });
    };
    DistributionDetailComponent.prototype.concern_list = function (status) {
        var _this = this;
        this.status = status;
        this.concernActive = true;
        this.loader = true;
        this.service.fetchData({ "currentPage": 1, 'networkId': this.id,
            "pageSize": 500 }, 'concern/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.concernList = response['data'];
                for (var i = 0; i < _this.concernList.length; i++) {
                    if (_this.concernList[i].claimNo != '') {
                        _this.tmp_concern_list.push(_this.concernList[i]);
                    }
                }
                _this.loader = false;
            }
            if (response['status'] == 'Failed') {
                _this.div = true;
                _this.loader = false;
                _this.concernList = [];
            }
            console.log(_this.concernList);
        });
    };
    DistributionDetailComponent.prototype.documentList = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData('', 'network/document/' + this.id).subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.documentListData = response['data'];
            console.log(_this.documentListData);
        });
    };
    DistributionDetailComponent.prototype.select_sales = function (value, index, event, territoryId, userName, role) {
        // if(event.checked)
        // { 
        //      this.salesUser.push({'salesUserId':value,'networkId':this.networkUserDetail.networkId,'territoryId':territoryId,'salesUserName':userName,'salesUserRole':role});
        //      console.log(this.salesUser);
        // } else {
        // console.log(index);
        // console.log(this.salesUser[index]);
        // if(this.salesUser[index]['salesUserId'])
        // {this.salesUser.splice(index,1);}
        // console.log(this.salesUser);
        //  }
    };
    DistributionDetailComponent.prototype.updateSales = function () {
        var _this = this;
        this.networkUpdateActions = { "salesUsersModified": true };
        var salesUsers = [];
        for (var index = 0; index < this.territoryList.length; index++) {
            if (this.territoryList[index].check) {
                salesUsers.push({ 'salesUserId': this.territoryList[index].userId, 'networkId': this.networkUserDetail.networkId, 'territoryId': this.territoryList[index].territoryId, 'salesUserName': this.territoryList[index].userName, 'salesUserRole': this.territoryList[index].role });
            }
        }
        this.segmentUpdateActions = { "segmentsModified": true };
        console.log(this.salesUsersegment);
        var segmentSelected = [];
        for (var index = 0; index < this.segmentlist.length; index++) {
            if (this.segmentlist[index].check) {
                segmentSelected.push({ networkId: this.networkUserDetail.networkId, segmentCode: this.segmentlist[index].text, segment: this.segmentlist[index].value });
            }
        }
        if (segmentSelected.length == 0) {
            this.toast.openError('No Segment Selected!!', '');
            return;
        }
        this.loader = true;
        this.service.fetchData({ 'networkUpdateActions': this.networkUpdateActions, 'networkId': this.networkUserDetail.networkId, 'salesUsers': salesUsers }, 'network/assignto/update').subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            // if(this.message=="Network Sales Users Updated")
            // {
            // } else { 
            //     this.toast.openError('Something went wrong Please Try Again!!','');
            // }
            _this.service.fetchData({ 'networkUpdateActions': _this.segmentUpdateActions, 'networkId': _this.networkUserDetail.networkId, "networkSegments": segmentSelected,
            }, 'network/update').subscribe(function (response) {
                console.log(response);
                _this.message = response['message'];
                _this.loader = false;
                if (_this.message) {
                    _this.toast.openSucess('Updated successfully', '');
                    _this.editAssignedDiv = false;
                    _this.show_details();
                    // this.router.navigate(['/distribution-detail/'+this.networkUserDetail.networkId]) 
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
            });
        });
    };
    DistributionDetailComponent.prototype.updateSegment = function () {
        var _this = this;
        this.networkUpdateActions = { "segmentsModified": true };
        console.log(this.salesUsersegment);
        this.service.fetchData({ 'networkUpdateActions': this.networkUpdateActions, 'networkId': this.networkUserDetail.networkId, "networkSegments": this.salesUsersegment,
        }, 'network/update').subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            if (_this.message) {
                _this.toast.openSucess('Updated successfully', '');
                _this.router.navigate(['/distribution-detail/' + _this.networkUserDetail.networkId]);
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
    };
    DistributionDetailComponent.prototype.openDialog = function () {
        var _this = this;
        console.log(this.networkUserDetail);
        var dialogRef = this.dialog.open(_update_network_address_update_network_address_component__WEBPACK_IMPORTED_MODULE_7__["UpdateNetworkAddressComponent"], { data: this.networkUserDetail });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.saleslist = [];
            _this.show_details();
        });
    };
    DistributionDetailComponent.prototype.segment_list = function () {
        var _this = this;
        this.service.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
            var _loop_1 = function (i) {
                var indexExist = _this.networkUserDetail.networkSegments.findIndex(function (row) { return row.segment == _this.segmentlist[i].text; });
                if (indexExist != -1) {
                    _this.segmentlist[i].check = true;
                }
                // for(let j=0;j<this.salesUsersegment.length;j++){
                //     if(this.salesUsersegment[j].segmentCode==this.segmentlist[i].value){
                //         this.segmentlist[i].check=true;
                //     }
                // }
            };
            // for(let i=0;i<this.networkUserDetail.networkSegments.length;i++) {
            //       this.salesUsersegment.push(this.networkUserDetail.networkSegments[i]);
            // }
            for (var i = 0; i < _this.segmentlist.length; i++) {
                _loop_1(i);
            }
        });
    };
    DistributionDetailComponent.prototype.get_sales = function (src, srcData) {
        var _this = this;
        var territoryStr = '';
        if (src == 1) {
            for (var index = 0; index < this.networkUserDetail.networkTerritories.length; index++) {
                //  territoryIds.push(this.networkUserDetail.networkTerritories[index]['territoryId']);
                if (index == 0) {
                    territoryStr += '?territoryIds=' + this.networkUserDetail.networkTerritories[index]['territoryId'];
                }
                else {
                    territoryStr += '&territoryIds=' + this.networkUserDetail.networkTerritories[index]['territoryId'];
                }
            }
        }
        else {
            territoryStr = srcData;
        }
        console.log(territoryStr);
        if (territoryStr) {
            this.loader = true;
            console.log('hello');
            this.service.fetchData('', 'territory/salesusers' + territoryStr).subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.saleslist = response['data'];
                console.log(_this.saleslist);
                // const role=this.saleslist.filter(x=>x.role==10);
                // this.territoryList = [];
                // if(role.length != 0)
                // {
                //     console.log(role);
                //     this.territoryList = role;
                // } else {
                //       const role = this.saleslist.filter(x=>x.role==8)
                //       if(role.length!=0)
                //       {
                //           console.log(role);
                //           this.territoryList=role;
                //       } else {
                //           const role=this.saleslist.filter(x=>x.role==7);
                //           if(role.length!=0) {
                //               console.log(role);
                //               this.territoryList=role;
                //           } else {
                //                 const role=this.saleslist.filter(x=>x.role==6)
                //                 if(role.length!=0){
                //                   console.log(role);
                //                   this.territoryList=role;
                //                 }
                //           }
                //       }
                //   }
                // console.log(this.saleslist);
                // for(let i=0;i<this.networkUserDetail.networkSalesUsers.length;i++){
                //       // this.salesUser.push(this.networkUserDetail.networkSalesUsers[i]);
                // }
                // for(let i=0;i<this.territoryList.length;i++)  {
                //     const indexExist = this.networkUserDetail.networkSalesUsers.findIndex(row => row.salesUserId == this.territoryList[i].userId);
                //     if(indexExist != -1) {
                //       this.territoryList[i].check=true;
                //     }
                // }
            });
        }
    };
    DistributionDetailComponent.prototype.rolelist = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            _this.loader = false;
            var filterrolelead = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.AllUserList = filterrolelead[0].roles;
            console.log(_this.AllUserList);
        });
    };
    DistributionDetailComponent.prototype.userList = function (role) {
        var _this = this;
        console.log(role);
        var rolee = this.saleslist.filter(function (x) { return x.role == role; });
        this.territoryList = [];
        if (role.length != 0) {
            console.log(rolee);
            this.territoryList = rolee;
        }
        for (var i = 0; i < this.networkUserDetail.networkSalesUsers.length; i++) {
            // this.salesUser.push(this.networkUserDetail.networkSalesUsers[i]);
        }
        var _loop_2 = function (i) {
            var indexExist = this_1.networkUserDetail.networkSalesUsers.findIndex(function (row) { return row.salesUserId == _this.territoryList[i].userId; });
            if (indexExist != -1) {
                this_1.territoryList[i].check = true;
            }
        };
        var this_1 = this;
        for (var i = 0; i < this.territoryList.length; i++) {
            _loop_2(i);
        }
    };
    DistributionDetailComponent.prototype.get_network_terrtory = function (segmentSelected) {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ 'pinCode': this.networkUserDetail.pin, 'segments': segmentSelected }, 'territory/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.saleslist = response['data'];
            var territoryStr = '';
            if (response['data']) {
                for (var index = 0; index < response['data'].length; index++) {
                    if (index == 0) {
                        territoryStr += '?territoryIds=' + response['data'][index]['territoryID'];
                    }
                    else {
                        territoryStr += '&territoryIds=' + response['data'][index]['territoryID'];
                    }
                }
            }
            _this.get_sales(2, territoryStr);
            console.log(territoryStr);
            // this.saleslist=response['data'][0]['salesUsers'];
        });
    };
    DistributionDetailComponent.prototype.select_segments = function (value, index, event) {
        var segmentSelected = [];
        for (var index1 = 0; index1 < this.segmentlist.length; index1++) {
            if (this.segmentlist[index1].check) {
                segmentSelected.push(this.segmentlist[index1].text);
            }
        }
        console.log(segmentSelected);
        if (segmentSelected.length == 0) {
            this.territoryList = [];
        }
        else {
            this.get_network_terrtory(segmentSelected);
        }
    };
    DistributionDetailComponent.prototype.openEmail = function (check) {
        var _this = this;
        this.networkUserDetail.type = check;
        console.log(check);
        console.log("chech assign user update");
        var dialogRef = this.dialog.open(_update_network_update_network_component__WEBPACK_IMPORTED_MODULE_6__["UpdateNetworkComponent"], { width: '1000px', data: this.networkUserDetail });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.saleslist = [];
            _this.show_details();
        });
    };
    DistributionDetailComponent.prototype.editlimit = function (check, index) {
        var _this = this;
        this.networkUserDetail.networkLimits[index].type = check;
        console.log(index);
        console.log(check);
        console.log("chech assign user update");
        var dialogRef = this.dialog.open(_update_network_update_network_component__WEBPACK_IMPORTED_MODULE_6__["UpdateNetworkComponent"], { width: '1000px', data: this.networkUserDetail.networkLimits[index] });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.saleslist = [];
            _this.show_details();
        });
    };
    DistributionDetailComponent.prototype.updatepassword = function () {
        var _this = this;
        console.log('pass');
        this.service.fetchData({ "userId": this.networkUserDetail.userId, "password": this.account_form.password }, 'account/changepassword')
            .subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            console.log(_this.message);
            if (_this.message == "Your password has been changed successfully!") {
                _this.toast.openSucess('Your password has been changed successfully!', '');
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
        });
    };
    DistributionDetailComponent.prototype.addAddress = function (id) {
        var _this = this;
        var dialogRef = this.dialog.open(src_app_order_other_address_other_address_component__WEBPACK_IMPORTED_MODULE_10__["OtherAddressComponent"], {
            width: '1600px',
            data: {
                id: id
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
            _this.show_details();
        });
    };
    DistributionDetailComponent.prototype.openDialogone = function (id) {
        var _this = this;
        var dialogRef = this.dialog.open(_document_end_image_document_end_image_component__WEBPACK_IMPORTED_MODULE_12__["DocumentEndImageComponent"], {
            width: '768px',
            data: { id: id }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.documentList();
        });
    };
    DistributionDetailComponent.prototype.removeShippingAddress = function (index, id) {
        var _this = this;
        console.log(this.networkUserDetail.shippingAddresses[index]);
        console.log(id);
        this.dia.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.service.fileData(id, 'shippingaddress/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message) {
                        _this.toast.openSucess('Deleted successfully', '');
                        _this.router.navigate(['/distribution-detail/' + _this.networkUserDetail.networkId]);
                        _this.networkUserDetail.shippingAddresses.splice(index, 1);
                    }
                    else {
                        _this.toast.openError('Something went wrong Please Try Again!!', '');
                    }
                });
            }
        });
    };
    DistributionDetailComponent.prototype.deleteNetworkDocument = function (index) {
    };
    DistributionDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-distribution-detail',
            template: __webpack_require__(/*! ./distribution-detail.component.html */ "./src/app/distribution/distribution-detail/distribution-detail.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_8__["SnackBarOverview"], _local_storage_service__WEBPACK_IMPORTED_MODULE_9__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], src_app_dialog__WEBPACK_IMPORTED_MODULE_11__["DialogComponent"]])
    ], DistributionDetailComponent);
    return DistributionDetailComponent;
}());



/***/ }),

/***/ "./src/app/distribution/distribution-order-list/distribution-order-list.component.html":
/*!*********************************************************************************************!*\
  !*** ./src/app/distribution/distribution-order-list/distribution-order-list.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" [@routerTransition]>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>Punit</h2>\n        <p class=\"light\">Retailer</p>\n      </div>\n    </div>\n    <div class=\"tabs right-tab\">\n      <ul>\n        <li><a routerLink=\"/distribution-detail\" routerLinkActive=\"active\">DETAIL</a></li>\n        <li><a>IMAGE & DOCUMENTS</a></li>\n        <li><a routerLink=\"/distribution-order-list\" routerLinkActive=\"active\">ORDERS</a></li>\n        <li><a>POP & GIFT</a></li>\n        <li><a>PAYMASTER</a></li>\n      </ul>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table>\n                <tr>\n                  <th class=\"w200\">Created By & Date</th>\n                  <th class=\"w150\">Order ID</th>\n                  <th>Product Description</th>\n                  <th class=\"w150 text-right\">Order Value</th>\n                  <th class=\"w100 text-center\">Status</th>\n                </tr>\n              </table>\n            </div>\n\n           \n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr>\n                    <td class=\"w200\">2 Jan 2018 / Rahul Dubey</td>\n                    <td class=\"w150\"><a class=\"link-btn\" mat-button>#AB58472</a></td>\n                    <td>Product Description</td>\n                    <td class=\"w150 text-right\">25000</td>\n                    <td class=\"w100 text-center green-clr\">DELIVERED</td>\n                  </tr>\n                  <tr>\n                    <td>2 Jan 2018 / Rahul Dubey</td>\n                    <td><a class=\"link-btn\" mat-button>#AB58472</a></td>\n                    <td>Product Description</td>\n                    <td class=\"text-right\">25000</td>\n                    <td class=\"text-center red-clr\">PENDING</td>\n                  </tr>\n                  <tr>\n                    <td>2 Jan 2018 / Rahul Dubey</td>\n                    <td><a class=\"link-btn\" mat-button>#AB58472</a></td>\n                    <td>Product Description</td>\n                    <td class=\"text-right\">25000</td>\n                    <td class=\"text-center green-clr\">DELIVERED</td>\n                  </tr>\n                  \n                  <tr>\n                    <td>2 Jan 2018 / Rahul Dubey</td>\n                    <td><a class=\"link-btn\" mat-button>#AB58472</a></td>\n                    <td>Product Description</td>\n                    <td class=\"text-right\">25000</td>\n                    <td class=\"text-center red-clr\">PENDING</td>\n                  </tr>\n                  \n                  <tr>\n                    <td>2 Jan 2018 / Rahul Dubey</td>\n                    <td><a class=\"link-btn\" mat-button>#AB58472</a></td>\n                    <td>Product Description</td>\n                    <td class=\"text-right\">25000</td>\n                    <td class=\"text-center red-clr\">PENDING</td>\n                  </tr>\n                  \n                  <tr>\n                    <td>2 Jan 2018 / Rahul Dubey</td>\n                    <td><a class=\"link-btn\" mat-button>#AB58472</a></td>\n                    <td>Product Description</td>\n                    <td class=\"text-right\">25000</td>\n                    <td class=\"text-center green-clr\">DELIVERED</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/distribution/distribution-order-list/distribution-order-list.component.ts":
/*!*******************************************************************************************!*\
  !*** ./src/app/distribution/distribution-order-list/distribution-order-list.component.ts ***!
  \*******************************************************************************************/
/*! exports provided: DistributionOrderListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DistributionOrderListComponent", function() { return DistributionOrderListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");



var DistributionOrderListComponent = /** @class */ (function () {
    function DistributionOrderListComponent() {
    }
    DistributionOrderListComponent.prototype.ngOnInit = function () {
    };
    DistributionOrderListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-distribution-order-list',
            template: __webpack_require__(/*! ./distribution-order-list.component.html */ "./src/app/distribution/distribution-order-list/distribution-order-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], DistributionOrderListComponent);
    return DistributionOrderListComponent;
}());



/***/ }),

/***/ "./src/app/distribution/distributor-list/distribution-list.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/distribution/distributor-list/distribution-list.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/task.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Distributor</h2>\n        <p>Total Distributor<span *ngIf='distributionList'>{{distributionList.length}}</span><span *ngIf='!distributionList'>0</span></p>\n      </div>\n    </div>\n    <div class=\"left-auto dflex\">\n      <div *ngIf=\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment || filter.state\" class=\"filter-container left-auto\">\n        <div (click)=\"clearfilter()\" class=\"filter-btn\">\n          <button mat-button >CLEAR FILTER</button>\n        </div>\n      </div>\n    </div>\n    \n  </div>\n  <!-- <div class=\"middle-container padding0\">\n    <div class=\"master-heading\">\n      <div class=\"vl-info\">\n        <ul>\n          <li><p>Total Distributor : <span *ngIf='distributionList'>{{distributionList.length}}</span><span *ngIf='!distributionList'>0</span></p></li>\n          </ul>\n        </div>\n      \n          <div *ngIf=\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment || filter.state\" class=\"filter-container left-auto\">\n              <div (click)=\"clearfilter()\" class=\"filter-btn\">\n                <button mat-button >CLEAR FILTER</button>\n              </div>\n            </div>\n\n\n        </div>\n      </div> -->\n      \n      <div class=\"container-outer pt0\">\n        <div class=\"container\" >\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"cs-table left-right-20\">\n                <div class=\"sticky-head\">\n                  <div class=\"table-head\">\n                    <table>\n                      <tr>\n                        <th class=\"w100\">Date</th>\n                        <th class=\"w190\">Company Name</th>\n                        <th class=\"w190\">Applicant Name</th>\n                        <th class=\"w110\"> Mobile</th>\n                        <!-- <th class=\"w100 text-right\"> Target</th>\n                        <th class=\"w110 text-right\"> Credit Limit</th> -->\n                        <th class=\"w120\">Segments</th>\n                        <th>Address</th>\n                        <th class=\"w60\" *ngIf=\"role==1\">Action</th>\n                      </tr>\n                    </table>\n                  </div>\n                  <div class=\"table-head bdrt\">\n                    <form>\n                      <table>\n                        <tr>\n                          <th class=\"w100\">\n                            <div class=\"th-search-acmt fix-date\">\n                            </div>\n                          </th>\n                          <th class=\"w190\">\n                            <div class=\"th-search\">\n                              <input type=\"text\" (keyup)=\"distribution_list()\" name=\"companyname\" #companyname=\"ngModel\" [(ngModel)]=\"filter.companyname\" placeholder=\"Search....\">\n                              \n                            </div>\n                          </th>\n                          <th class=\"w190\">\n                            <div class=\"th-search\">\n                              <input type=\"text\" (keyup)=\"distribution_list()\" name=\"nameOfApplicant\" #nameOfApplicant=\"ngModel\" [(ngModel)]=\"filter.nameOfApplicant\" placeholder=\"Search....\">\n                              \n                            </div>\n                          </th>\n                          <th class=\"w110\">\n                            <div class=\"th-search\">\n                              <input type=\"text\" (keyup)=\"distribution_list()\" name=\"mobile\" #mobile=\"ngModel\" [(ngModel)]=\"filter.mobile\" placeholder=\"Search....\">\n                              \n                            </div>\n                          </th>\n                          <!-- <th class=\"w100\">&nbsp;</th>\n                          <th class=\"w110\">&nbsp;</th> -->\n                          <th  class=\"w120\">\n                            <div class=\"th-search\">\n                              <mat-select placeholder=\"Select\" id=\"segment\" name=\"segment\" [(ngModel)]=\"filter.segment\" #segment=\"ngModel\"  multiple>\n                                <mat-option value=\"{{segment.text}}\" (click)=\"distribution_list()\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\n                              </mat-select>\n                            </div>\n                          </th>\n                          <!-- <th *ngIf=\"role==1\"></th> -->\n                          <th >\n                            <div class=\"th-search\">\n                              <mat-select placeholder=\"Select State\" id=\"state\" name=\"state\" [(ngModel)]=\"filter.state\" #state=\"ngModel\">\n                                <mat-option value=\"\" (click)=\"distribution_list()\" selected>All</mat-option>\n                                <mat-option value=\"{{stat}}\" (click)=\"distribution_list()\" *ngFor='let stat of statelist'>{{stat}}</mat-option>\n                              </mat-select>\n                            </div>\n                          </th>\n                          \n                          <th  class=\"w60\">&nbsp;</th>\n                        </tr>\n                      </table>\n                    </form>\n                  </div>\n                </div>\n                <div class=\"table-container\">\n                  <div class=\"table-content\">\n                    <table>\n                      <tr *ngFor=\"let retailer of distributionList\">\n                        <td class=\"w100\">{{retailer.createdOn|date:'d MMM y'}}</td>\n                        <td class=\"w190\"><a class=\"link-btn\" mat-button routerLink=\"/distribution-detail/{{retailer.networkId}}\" routerLinkActive=\"active\">{{retailer.establishment}}</a></td>\n                        <td class=\"w190\">{{retailer.nameOfApplicant}}</td>\n                        <td class=\"w110\">{{retailer.mobile}}</td>\n                        <!-- <td class=\"w100 text-right\">&#x20B9; {{retailer.targetLimit}}</td>\n                        <td class=\"w110 text-right\">&#x20B9; {{retailer.creditLimit}}</td> -->\n                        <!-- <td > <span *ngFor=\"let segments of retailer.networkSegments\">{{segments.segmentCode}},</span></td> -->\n                        <td  class=\"w120\"><ng-container *ngFor=\"let segments of retailer.networkSegments\"><span>{{segments.segmentCode}},</span></ng-container></td>\n                        <!-- <td *ngIf=\"role==1\" class=\"w250\">\n                          <div class=\"tags\"> \n                            <ul>\n                              <li  *ngFor=\"let sales of retailer.networkSalesUsers\"><span>{{sales.salesUserName}}</span></li>\n                            </ul>\n                          </div>\n                        </td> -->\n                        <td>{{retailer.state}}</td>\n                        <td *ngIf=\"this.role==1\" class=\"w60\">\n                          <div class=\"action-btns default-action\">\n                            <!-- <a mat-button class=\"edit\"><i class=\"material-icons\">add</i></a> -->\n                            <button mat-button class=\"delete\"  (click)=\"delete_network(retailer.networkId)\"><i class=\"material-icons\">delete_sweep</i></button>\n                          </div>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"div\" class=\"data-not-available\" >\n          <div class=\"outer\">\n            <div class=\"iinear\">\n              <div class=\"figure\" matRipple>\n                <div class=\"header\">\n                  <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                </div>\n                \n                <div class=\"description\">\n                  <div class=\"img\">\n                    <i class=\"material-icons\">error_outline</i>\n                  </div>\n                  <div class=\"psc\">\n                    <p>data not available</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"userType==1\" class=\"fixed-multibtn-botm\">\n        <ul>\n          <li><a  matTooltip=\"Add New\" matRipple><i class=\"material-icons\" routerLink=\"/add-distribution\" routerLinkActive=\"active\">add</i></a></li>\n        </ul>\n      </div>\n    </div>\n    \n    <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/distribution/distributor-list/distribution-list.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/distribution/distributor-list/distribution-list.component.ts ***!
  \******************************************************************************/
/*! exports provided: DistributionListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DistributionListComponent", function() { return DistributionListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");








var DistributionListComponent = /** @class */ (function () {
    function DistributionListComponent(db, user, route, toast, dialog) {
        this.db = db;
        this.user = user;
        this.route = route;
        this.toast = toast;
        this.dialog = dialog;
        // filter:any={};
        this.tmp_distributorlist = [];
        this.distributionList = [];
        this.msg = [];
        this.userdata = [];
        this.segmentlist = [];
        this.message = [];
        this.statelist = [];
        this.filter = {};
        this.div = false;
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
        this.userType = this.userdata['userType'];
    }
    DistributionListComponent.prototype.ngOnInit = function () {
        this.distribution_list();
    };
    DistributionListComponent.prototype.refreshlist = function () {
        this.distribution_list();
        this.toast.openSucess('Refreshed successfully!', '');
    };
    DistributionListComponent.prototype.clearfilter = function () {
        this.filter = {};
        this.distribution_list();
    };
    DistributionListComponent.prototype.distribution_list = function () {
        var _this = this;
        console.log(this.filter.segment);
        this.loader = true;
        this.name = this.filter.companyname;
        this.nameOfApplicant = this.filter.nameOfApplicant;
        this.mobile = this.filter.mobile;
        if (this.userdata['userType'] != 1) {
            this.senddata = { "segments": this.filter.segment, 'state': this.filter.state, "nameOfApplicant": this.nameOfApplicant, "isActive": true, "mobile": this.mobile, "contactName": this.filter.contact, "establishment": this.name, "salesUserId": this.userdata['userId'], "role": 12, "currentPage": 1, "pageSize": 50 };
            this.db.fetchData(this.senddata, 'mynetwork/detail').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.distributionList = response['data'];
                    console.log(_this.distributionList);
                }
                else {
                    _this.distributionList = [];
                    _this.div = true;
                }
                setTimeout(function () {
                    _this.loader = false;
                    _this.segment_list();
                    _this.get_state();
                }, 500);
            });
        }
        else {
            this.senddata = { "segments": this.filter.segment, "isActive": true, 'state': this.filter.state, "nameOfApplicant": this.nameOfApplicant, "currentPage": 1,
                "pageSize": 100, "mobile": this.mobile, "establishment": this.name, "role": 12, "contactName": this.filter.contact };
            this.db.fetchData(this.senddata, 'network/list').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.distributionList = response['data'];
                    console.log(_this.distributionList);
                }
                else {
                    _this.distributionList = [];
                    _this.div = true;
                }
                console.log(_this.distributionList);
                setTimeout(function () {
                    _this.loader = false;
                    _this.segment_list();
                    _this.get_state();
                }, 500);
            });
        }
    };
    DistributionListComponent.prototype.get_state = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.statelist = response['data'];
            // this.shippingState=response['data'];
        });
    };
    DistributionListComponent.prototype.delete_network = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "Network";
        this.dialog.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fileData(id, 'network/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message == "Network removed successfully") {
                        _this.toast.openSucess('Network removed successfully', '');
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    _this.distribution_list();
                });
            }
        });
    };
    DistributionListComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    DistributionListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-distribution-list',
            template: __webpack_require__(/*! ./distribution-list.component.html */ "./src/app/distribution/distributor-list/distribution-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _local_storage_service__WEBPACK_IMPORTED_MODULE_7__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], DistributionListComponent);
    return DistributionListComponent;
}());



/***/ }),

/***/ "./src/app/distribution/document-end-image/document-end-image.component.html":
/*!***********************************************************************************!*\
  !*** ./src/app/distribution/document-end-image/document-end-image.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n  <!-- <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <mat-spinner class=\"loader\"></mat-spinner> \n    </div>\n  </div> -->\n\n  <div *ngIf=\"loader\">\n      <div class=\"cs-loader\">\n        <mat-spinner class=\"loader\"></mat-spinner> \n      </div>\n  </div>\n  \n  <div mat-dialog-content>\n    <p class=\"heading\">Document & Image </p>\n    <div class=\" from-fields\">\n      <div class=\"control-field\">\n        <mat-form-field class=\"example-full-width cs-input\">\n          <input matInput [(ngModel)]=\"formData.title\" placeholder=\"Tittle\">\n        </mat-form-field>\n        <div class=\"alert alert-danger\" *ngIf=\"!formData.title\">\n            Document Name Missing!\n        </div>\n\n        <div class=\"alert alert-danger\" *ngIf=\"formData.title && formData.title.length<4\">\n            Document Name Must be atleast 4 Letters!\n        </div>\n      </div>\n      \n      <div class=\"row\">\n        <div class=\"col s12 padding0\">\n          <div class=\"upload-excel mt15\">\n            <label>\n              <input (change)=\"insertDocument($event)\" style=\"display: none;\" type=\"file\">\n              <div class=\"outer\">\n                <div class=\"innear\">\n                  <i class=\"material-icons upload-ic\">cloud_upload</i>\n                  <p>Add Document</p>\n                </div>\n              </div>\n            </label>\n            <span class=\"file-format\">PDF, Image format Attach!</span>\n          </div>\n          <p class=\"file-name\">{{selectedFile ? selectedFile[0].name : ''}}</p>\n        </div>\n      </div>\n      \n      <!-- <div class=\"row\">\n        <div class=\"col s12 padding0\">\n          <div class=\"cs-file-multiple sm-file scroll\">\n            <ul class=\"mt15\">\n              <li *ngFor=\"let urlData of urls;let i=index\">\n                <label>\n                  <img src=\"{{urlData}}\">\n                  <a (click)=\"deleteimg(i)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                </label>\n              </li>\n              <li>\n                <div class=\"cs-file\">\n                  <label>\n                      <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\">\n                      <p>Upload Images</p>\n                  </label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div> -->\n\n      <div class=\"alert alert-danger\" *ngIf=\"!urls || urls.length==0\">\n         Please Upload Image!\n      </div>\n\n\n    </div>\n  </div>\n\n  \n  <div mat-dialog-actions>\n    <button mat-raised-button  color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n    <button (click)=\"saveNetworkDocument()\" mat-raised-button color=\"accent\">Save</button>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/distribution/document-end-image/document-end-image.component.scss":
/*!***********************************************************************************!*\
  !*** ./src/app/distribution/document-end-image/document-end-image.component.scss ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9kb2N1bWVudC1lbmQtaW1hZ2UvZG9jdW1lbnQtZW5kLWltYWdlLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/distribution/document-end-image/document-end-image.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/distribution/document-end-image/document-end-image.component.ts ***!
  \*********************************************************************************/
/*! exports provided: DocumentEndImageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentEndImageComponent", function() { return DocumentEndImageComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");





var DocumentEndImageComponent = /** @class */ (function () {
    function DocumentEndImageComponent(db, toast, dialogRef, data) {
        this.db = db;
        this.toast = toast;
        this.dialogRef = dialogRef;
        this.data = data;
        this.selectedFile = [];
        this.formData = {};
        this.networkData = {};
        this.urls = [];
        this.networkData = data;
        console.log(data);
    }
    DocumentEndImageComponent.prototype.ngOnInit = function () {
        this.selectedFile = [];
        this.urls = [];
    };
    DocumentEndImageComponent.prototype.saveNetworkDocument = function () {
        var _this = this;
        if (!this.formData.title || this.formData.title.length < 4) {
            return;
        }
        if (!this.urls || this.urls.length == 0) {
            return;
        }
        var documentData = {};
        documentData = new FormData;
        documentData['action'] = 1;
        documentData['binaryData'] = this.urls[this.urls.length - 1];
        documentData['documentType'] = 6;
        documentData['documentName'] = this.selectedFile[0].name;
        documentData['referenceId'] = this.networkData.id;
        this.loader = true;
        for (var i = 0; i < this.selectedFile.length; i++) {
            if (this.selectedFile[i].type == 'application/pdf') {
                documentData['fileName'] = "document" + i + ".pdf", this.selectedFile[i];
            }
            else {
                documentData['fileName'] = "document" + i + ".jpg", this.selectedFile[i];
            }
        }
        console.log(documentData);
        var value = [];
        value[0] = documentData;
        console.log(value);
        this.db.fetchData(value, "document/update").subscribe(function (resp) {
            console.log(resp);
            if (resp) {
                _this.loader = false;
                _this.toast.openSucess('Image Added Sucessfully', '');
                _this.dialogRef.close();
            }
        });
    };
    DocumentEndImageComponent.prototype.insertDocument = function (data) {
        var _this = this;
        this.selectedFile = [];
        this.urls = [];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        console.log(this.selectedFile);
        console.log(this.urls);
    };
    DocumentEndImageComponent.prototype.deleteimg = function (index) {
        this.urls.splice(index, 1);
        this.selectedFile.splice(index, 1);
    };
    DocumentEndImageComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-document-end-image',
            template: __webpack_require__(/*! ./document-end-image.component.html */ "./src/app/distribution/document-end-image/document-end-image.component.html"),
            styles: [__webpack_require__(/*! ./document-end-image.component.scss */ "./src/app/distribution/document-end-image/document-end-image.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_2__["SnackBarOverview"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"], Object])
    ], DocumentEndImageComponent);
    return DocumentEndImageComponent;
}());



/***/ }),

/***/ "./src/app/distribution/engine-list/engine-list.component.html":
/*!*********************************************************************!*\
  !*** ./src/app/distribution/engine-list/engine-list.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"loader\"> \n  <div class=\"cs-loader\">\n    <img src=\"assets/img/loader.png\" class=\"rotate\"> \n  </div>\n</div>\n<div class=\"main-container\" >\n  <div class=\"middle-container padding0\">\n    <div class=\"master-heading\">\n      <div class=\"vl-info\">\n        <ul>\n          <li><p>Total Engine : <span *ngIf='wholeSalerList'>{{wholeSalerList.length}}</span><span *ngIf='!wholeSalerList'>0</span></p></li>\n          <!-- <li><p>Active : <span class=\"green-clr\">15</span></p></li>\n            <li><p>Deactive : <span class=\"yellow-clr\">25</span></p></li>\n            <li class=\"af-none\"><p class=\"pl30\"><img src=\"assets/img/filter.svg\" class=\"icon\"><span>FILTER</span></p></li> -->\n          </ul>\n        </div>\n        <!-- <div class=\"top-pagination m-right-data\">\n          <ul>\n            <li class=\"refresh-area af-none\">\n              <a class=\"refresh-btn\" mat-raised-button (click)=\"refreshlist()\" matTooltip=\"Refresh\"><i class=\"material-icons\"> refresh</i></a>\n            </li>\n            <li><p>Pages 2 of 6</p></li>\n              <li><button mat-button class=\"left-btn\"><i class=\"material-icons\">keyboard_arrow_left</i></button></li>\n              <li><input type=\"text\" placeholder=\"GO TO\"></li>\n              <li><button mat-button class=\"right-btn\"><i class=\"material-icons\">keyboard_arrow_right</i></button></li>\n            </ul>\n          </div> -->\n          <div *ngIf=\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment\" class=\"filter-container left-auto\">\n            <div (click)=\"clearfilter()\" class=\"filter-btn\">\n              <button mat-button >CLEAR FILTER</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"container-outer\">\n        <div class=\"container\" >\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"cs-table left-right-20\">\n                <div class=\"sticky-head-flat\">\n                  <div class=\"table-head\">\n                    <table>\n                      <tr>\n                        <th class=\"w100\">Date</th>\n                        <th class=\"w190\">Name</th>\n                        <th class=\"w190\">Applicant Name</th>\n                        <th class=\"w110\"> Mobile</th>\n                        <!-- <th class=\"w100 text-right\"> Target</th>\n                        <th class=\"w110 text-right\"> Credit Limit</th> -->\n                        <th class=\"w120\">Segments</th>\n                        <!-- <th *ngIf=\"role==1\" class=\"w250\">Assign To</th> -->\n                        <th>Address</th>\n                        <th class=\"w60\" *ngIf=\"role==1\">Action</th>\n                      </tr>\n                    </table>\n                  </div>\n                  <div class=\"table-head bdrt\">\n                    <table>\n                      <tr>\n                        <th class=\"w100\"></th>\n                        <th class=\"w190\">\n                          <div class=\"th-search\">\n                            <input type=\"text\" (keyup)=\"Whole_saler_list()\" name=\"companyname\" #companyname=\"ngModel\" [(ngModel)]=\"filter.companyname\" placeholder=\"Search....\">\n                            \n                          </div>\n                        </th>\n                        <th class=\"w190\">\n                          <div class=\"th-search\">\n                            <input type=\"text\" (keyup)=\"Whole_saler_list()\" name=\"nameOfApplicant\" #nameOfApplicant=\"ngModel\" [(ngModel)]=\"filter.nameOfApplicant\" placeholder=\"Search....\">\n                            \n                          </div>\n                        </th>\n                        <th class=\"w110\">\n                          <div class=\"th-search\">\n                            <input type=\"text\" (keyup)=\"Whole_saler_list()\" name=\"mobile\" #mobile=\"ngModel\" [(ngModel)]=\"filter.mobile\" placeholder=\"Search....\">\n                            \n                          </div>\n                        </th>\n                        <!-- <th class=\"w100\"></th>\n                        <th class=\"w110\"></th> -->\n                        <th class=\"w120\">\n                          <div class=\"th-search\">\n                            <mat-select placeholder=\"Select\" id=\"segment\" name=\"segment\" [(ngModel)]=\"filter.segment\" #segment=\"ngModel\"  multiple>\n                              <mat-option value=\"{{segment.text}}\" (click)=\"Whole_saler_list()\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\n                            </mat-select>\n                          </div>\n                        </th>\n                        <th *ngIf=\"role==1\"></th>\n                        <!-- <th>&nbsp;</th> -->\n                        <th *ngIf=\"role==1\" class=\"w60\">&nbsp;</th>\n                        <!-- <th *ngIf=\"role==1\" class=\"w250\">&nbsp;</th> -->\n                        <!-- <th>&nbsp;</th> -->\n                        <!-- <th *ngIf=\"role==1\" class=\"w250\">&nbsp;</th> -->\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                <div class=\"table-container\">\n                  <div class=\"table-content\">\n                    <table>\n                      <tr *ngFor=\"let retailer of wholeSalerList\">\n                        <td class=\"w100\">{{retailer.createdOn|date:'d MMM y'}}</td>\n                        <td class=\"w190\"><a class=\"link-btn\" mat-button routerLink=\"/distribution-detail/{{retailer.networkId}}\" routerLinkActive=\"active\">{{retailer.establishment}}</a></td>\n                        <td class=\"w190\">{{retailer.nameOfApplicant}}</td>\n                        <td class=\"w110\">{{retailer.mobile}}</td>\n                        <!-- <td class=\"w100 text-right\">&#x20B9; {{retailer.targetLimit}}</td>\n                        <td class=\"w110 text-right\">&#x20B9; {{retailer.creditLimit}}</td> -->\n                        <td class=\"w120\"><ng-container *ngFor=\"let segments of retailer.networkSegments\"><span>{{segments.segmentCode}},</span></ng-container></td>\n                        <!-- <td *ngIf=\"role==1\" class=\"w250\">\n                          <div class=\"tags\"> \n                            <ul>\n                              <li  *ngFor=\"let sales of retailer.networkSalesUsers\"><span>{{sales.salesUserName}}</span></li>\n                            </ul>\n                          </div>\n                        </td> -->\n                        <td>{{retailer.state}}</td>\n                        <!-- <td  class=\"w190 text-right\">RS. 25000</td> -->\n                        <!-- <td *ngIf=\"this.role==1\" class=\"w100 text-center\">\n                          <mat-slide-toggle class=\"switch-toggle\" color=\"warn\"  [(ngModel)]='retailer.isActive' >&nbsp;</mat-slide-toggle>\n                        </td> -->\n                        <td *ngIf=\"this.role==1\" class=\"w60\">\n                          <div class=\"action-btns default-action\">\n                            <!-- <a mat-button class=\"edit\"><i class=\"material-icons\">add</i></a> -->\n                            <button mat-button class=\"delete\"  (click)=\"delete_network(retailer.networkId)\"><i class=\"material-icons\">delete_sweep</i></button>\n                          </div>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"div\" class=\"data-not-available\" >\n          <div class=\"outer\">\n            <div class=\"iinear\">\n              <div class=\"figure\" matRipple>\n                <div class=\"header\">\n                  <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                </div>\n                \n                <div class=\"description\">\n                  <div class=\"img\">\n                    <i class=\"material-icons\">error_outline</i>\n                  </div>\n                  <div class=\"psc\">\n                    <p>data not available</p>\n                    <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n    \n    <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/distribution/engine-list/engine-list.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/distribution/engine-list/engine-list.component.ts ***!
  \*******************************************************************/
/*! exports provided: EngineListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EngineListComponent", function() { return EngineListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var EngineListComponent = /** @class */ (function () {
    function EngineListComponent(user, toast, db, dialog) {
        this.user = user;
        this.toast = toast;
        this.db = db;
        this.dialog = dialog;
        this.userdata = [];
        this.wholeSalerList = [];
        this.tmp_wholesalerlist = [];
        this.segmentlist = [];
        this.filter = {};
        this.div = false;
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
    }
    EngineListComponent.prototype.ngOnInit = function () {
        this.Whole_saler_list();
        this.segment_list();
    };
    EngineListComponent.prototype.refreshlist = function () {
        this.Whole_saler_list();
        this.toast.openSucess('Refreshed successfully!', '');
    };
    EngineListComponent.prototype.clearfilter = function () {
        this.filter = {};
        this.Whole_saler_list();
    };
    EngineListComponent.prototype.Whole_saler_list = function () {
        var _this = this;
        this.name = this.filter.companyname;
        this.nameOfApplicant = this.filter.nameOfApplicant;
        this.mobile = this.filter.mobile;
        this.loader = true;
        this.div = false;
        if (this.userdata['userType'] != 1) {
            this.senddata = { "isActive": true, "segments": this.filter.segment, "nameOfApplicant": this.nameOfApplicant, "contactName": this.filter.contact, "mobile": this.mobile, "establishment": this.name, "salesUserId": this.userdata['userId'], "role": '14' };
            this.db.fetchData(this.senddata, 'mynetwork/detail').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.wholeSalerList = response['data'];
                }
                else {
                    _this.wholeSalerList = [];
                    _this.div = true;
                }
                console.log(_this.wholeSalerList);
                _this.loader = false;
            });
        }
        else {
            this.senddata = { "isActive": true, "segments": this.filter.segment, "nameOfApplicant": this.nameOfApplicant, "contactName": this.filter.contact, "mobile": this.mobile, "establishment": this.name, "role": '14' };
            this.db.fetchData(this.senddata, 'network/list').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.wholeSalerList = response['data'];
                }
                else {
                    _this.wholeSalerList = [];
                    _this.div = true;
                }
                console.log(_this.wholeSalerList);
                _this.loader = false;
            });
        }
    };
    EngineListComponent.prototype.delete_network = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "Network";
        this.dialog.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fileData(id, 'network/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message = "Network removed successfully") {
                        _this.toast.openSucess('Network removed successfully', '');
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    _this.Whole_saler_list();
                });
            }
        });
    };
    EngineListComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    EngineListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-engine-list',
            template: __webpack_require__(/*! ./engine-list.component.html */ "./src/app/distribution/engine-list/engine-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_3__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_local_storage_service__WEBPACK_IMPORTED_MODULE_4__["sessionStorage"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], EngineListComponent);
    return EngineListComponent;
}());



/***/ }),

/***/ "./src/app/distribution/mechanic-list/mechanic-list.component.html":
/*!*************************************************************************!*\
  !*** ./src/app/distribution/mechanic-list/mechanic-list.component.html ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"loader\"> \n  <div class=\"cs-loader\">\n    <img src=\"assets/img/loader.png\" class=\"rotate\"> \n  </div>\n</div>\n<div class=\"main-container\" >\n  <div class=\"middle-container padding0\">\n    <div class=\"master-heading\">\n      <div class=\"vl-info\">\n        <ul>\n          <li><p>Total Mechanic : <span *ngIf='wholeSalerList'>{{wholeSalerList.length}}</span><span *ngIf='!wholeSalerList'>0</span></p></li>\n          <!-- <li><p>Active : <span class=\"green-clr\">15</span></p></li>\n            <li><p>Deactive : <span class=\"yellow-clr\">25</span></p></li>\n            <li class=\"af-none\"><p class=\"pl30\"><img src=\"assets/img/filter.svg\" class=\"icon\"><span>FILTER</span></p></li> -->\n          </ul>\n        </div>\n        <!-- <div class=\"top-pagination m-right-data\">\n          <ul>\n            <li class=\"refresh-area af-none\">\n              <a class=\"refresh-btn\" mat-raised-button (click)=\"refreshlist()\" matTooltip=\"Refresh\"><i class=\"material-icons\"> refresh</i></a>\n            </li>\n            <li><p>Pages 2 of 6</p></li>\n            <li><button mat-button class=\"left-btn\"><i class=\"material-icons\">keyboard_arrow_left</i></button></li>\n            <li><input type=\"text\" placeholder=\"GO TO\"></li>\n            <li><button mat-button class=\"right-btn\"><i class=\"material-icons\">keyboard_arrow_right</i></button></li>\n          </ul>\n        </div> -->\n        <div *ngIf=\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment\" class=\"filter-container left-auto\">\n          <div (click)=\"clearfilter()\" class=\"filter-btn\">\n            <button mat-button >CLEAR FILTER</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"sticky-head-flat\">\n                <div class=\"table-head\">\n                  <table>\n                    <tr>\n                      <th class=\"w100\">Date</th>\n                      <th class=\"w190\">Name</th>\n                      <th class=\"w190\">Applicant Name</th>\n                      <th class=\"w110\"> Mobile</th>\n                      <!-- <th class=\"w100 text-right\"> Target</th>\n                      <th class=\"w110 text-right\"> Credit Limit</th> -->\n                      <th class=\"w120\">Segments</th>\n                      <!-- <th *ngIf=\"role==1\" class=\"w250\">Assign To</th> -->\n                      <th>Address</th>\n                      <th class=\"w60\" *ngIf=\"role==1\">Action</th>\n                    </tr>\n                  </table>\n                </div>\n                <div class=\"table-head bdrt\">\n                  <table>\n                    <tr>\n                      <th class=\"w100\">\n                        \n                      </th>\n                      <th class=\"w190\">\n                        <div class=\"th-search\">\n                          <input type=\"text\" (keyup)=\"Whole_saler_list()\" name=\"companyname\" #companyname=\"ngModel\" [(ngModel)]=\"filter.companyname\" placeholder=\"Search....\">\n                          \n                        </div>\n                      </th>\n                      <th class=\"w190\">\n                        <div class=\"th-search\">\n                          <input type=\"text\" (keyup)=\"Whole_saler_list()\" name=\"nameOfApplicant\" #nameOfApplicant=\"ngModel\" [(ngModel)]=\"filter.nameOfApplicant\" placeholder=\"Search....\">\n                          \n                        </div>\n                      </th>\n                      <th class=\"w110\">\n                        <div class=\"th-search\">\n                          <input type=\"text\" (keyup)=\"Whole_saler_list()\" name=\"mobile\" #mobile=\"ngModel\" [(ngModel)]=\"filter.mobile\" placeholder=\"Search....\">\n                          \n                        </div>\n                      </th>\n                      <!-- <th class=\"w100\"></th>\n                      <th class=\"w110\"></th> -->\n                      <th class=\"w120\">\n                        <div class=\"th-search\">\n                          <mat-select placeholder=\"Select\" id=\"segment\" name=\"segment\" [(ngModel)]=\"filter.segment\" #segment=\"ngModel\"  multiple>\n                            <mat-option value=\"{{segment.text}}\" (click)=\"Whole_saler_list()\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\n                          </mat-select>\n                        </div>\n                      </th>\n                      <th *ngIf=\"role==1\"></th>\n                      <!-- <th>&nbsp;</th> -->\n                      <th class=\"w60\" *ngIf=\"role==1\">&nbsp;</th>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let retailer of wholeSalerList\">\n                      <td class=\"w100\">{{retailer.createdOn|date:'d MMM y'}}</td>\n                      <td class=\"w190\"><a class=\"link-btn\" mat-button routerLink=\"/distribution-detail/{{retailer.networkId}}\" routerLinkActive=\"active\">{{retailer.establishment}}</a></td>\n                      <td class=\"w190\">{{retailer.nameOfApplicant}}</td>\n                      <td class=\"w110\">{{retailer.mobile}}</td>\n                      <!-- <td class=\"w100 text-right\">&#x20B9; {{retailer.targetLimit}}</td>\n                      <td class=\"w110 text-right\">&#x20B9; {{retailer.creditLimit}}</td> -->\n                      <td class=\"w120\"><ng-container  *ngFor=\"let segments of retailer.networkSegments\"><span>{{segments.segmentCode}},</span><br></ng-container></td>\n                      <!-- <td *ngIf=\"role==1\" class=\"w250\">\n                        <div class=\"tags\"> \n                          <ul>\n                            <li  *ngFor=\"let sales of retailer.networkSalesUsers\"><span>{{sales.salesUserName}}</span></li>\n                          </ul>\n                        </div>\n                      </td> -->\n                      <td>{{retailer.state}}</td>\n                      <td *ngIf=\"this.role==1\" class=\"w60\">\n                        <div class=\"action-btns default-action\">\n                          <!-- <a mat-button class=\"edit\"><i class=\"material-icons\">add</i></a> -->\n                          <button mat-button class=\"delete\"  (click)=\"delete_network(retailer.networkId)\"><i class=\"material-icons\">delete_sweep</i></button>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"div\" class=\"data-not-available\" >\n        <div class=\"outer\">\n          <div class=\"iinear\">\n            <div class=\"figure\" matRipple>\n              <div class=\"header\">\n                <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n              </div>\n              \n              <div class=\"description\">\n                <div class=\"img\">\n                  <i class=\"material-icons\">error_outline</i>\n                </div>\n                <div class=\"psc\">\n                  <p>data not available</p>\n                  <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n  </div>\n  \n  <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/distribution/mechanic-list/mechanic-list.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/distribution/mechanic-list/mechanic-list.component.ts ***!
  \***********************************************************************/
/*! exports provided: MechanicListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MechanicListComponent", function() { return MechanicListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var MechanicListComponent = /** @class */ (function () {
    function MechanicListComponent(user, toast, db, dialog) {
        this.user = user;
        this.toast = toast;
        this.db = db;
        this.dialog = dialog;
        this.userdata = [];
        this.wholeSalerList = [];
        this.tmp_wholesalerlist = [];
        this.segmentlist = [];
        this.filter = {};
        this.div = false;
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
    }
    MechanicListComponent.prototype.ngOnInit = function () {
        this.Whole_saler_list();
        this.segment_list();
    };
    MechanicListComponent.prototype.refreshlist = function () {
        this.Whole_saler_list();
        this.toast.openSucess('Refreshed successfully!', '');
    };
    MechanicListComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    MechanicListComponent.prototype.delete_network = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "Network";
        this.dialog.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fileData(id, 'network/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message = "Network removed successfully") {
                        _this.toast.openSucess('Network removed successfully', '');
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    _this.Whole_saler_list();
                });
            }
        });
    };
    MechanicListComponent.prototype.clearfilter = function () {
        this.filter = {};
        this.Whole_saler_list();
    };
    MechanicListComponent.prototype.Whole_saler_list = function () {
        var _this = this;
        this.div = false;
        this.name = this.filter.companyname;
        this.mobile = this.filter.mobile;
        this.nameOfApplicant = this.filter.nameOfApplicant;
        this.loader = true;
        if (this.userdata['userType'] != 1) {
            this.senddata = { "isActive": true, "segments": this.filter.segment, "nameOfApplicant": this.nameOfApplicant, "contactName": this.filter.contact, "mobile": this.mobile, "establishment": this.name, "salesUserId": this.userdata['userId'], "role": '15' };
            this.db.fetchData(this.senddata, 'mynetwork/detail').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.wholeSalerList = response['data'];
                }
                if (response['status'] == "Failed") {
                    _this.div = true;
                }
                console.log(_this.wholeSalerList);
                _this.loader = false;
            });
        }
        else {
            this.senddata = { "isActive": true, "segments": this.filter.segment, "nameOfApplicant": this.nameOfApplicant, "contactName": this.filter.contact, "mobile": this.mobile, "establishment": this.name, "role": '15' };
            this.db.fetchData(this.senddata, 'network/list').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.wholeSalerList = response['data'];
                }
                if (response['status'] == "Failed") {
                    _this.div = true;
                }
                console.log(_this.wholeSalerList);
                _this.loader = false;
            });
        }
    };
    MechanicListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-mechanic-list',
            template: __webpack_require__(/*! ./mechanic-list.component.html */ "./src/app/distribution/mechanic-list/mechanic-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_3__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_local_storage_service__WEBPACK_IMPORTED_MODULE_4__["sessionStorage"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], MechanicListComponent);
    return MechanicListComponent;
}());



/***/ }),

/***/ "./src/app/distribution/retailer-list/retailer-list.component.html":
/*!*************************************************************************!*\
  !*** ./src/app/distribution/retailer-list/retailer-list.component.html ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"loader\"> \n  <div class=\"cs-loader\">\n    <img src=\"assets/img/loader.png\" class=\"rotate\"> \n  </div>\n</div>\n<div class=\"main-container\">\n  <div class=\"middle-container padding0\">\n    <div class=\"master-heading\">\n      <div class=\"vl-info\">\n        <ul>\n          <li><p>Total Retailer : <span >{{retaileList.length}}</span><span *ngIf='!retaileList'>0</span></p></li>\n          <!-- <li><p>Active : <span class=\"green-clr\">15</span></p></li>\n            <li><p>Deactive : <span class=\"yellow-clr\">25</span></p></li>\n            <li class=\"af-none\"><p class=\"pl30\"><img src=\"assets/img/filter.svg\" class=\"icon\"><span>FILTER</span></p></li> -->\n          </ul>\n        </div>\n        <!-- <div class=\"top-pagination m-right-data\">\n          <ul>\n            <li class=\"refresh-area af-none\">\n              <a class=\"refresh-btn\" mat-raised-button (click)=\"refreshlist()\" matTooltip=\"Refresh\"><i class=\"material-icons\"> refresh</i></a>\n            </li>\n            <li><p>Pages 2 of 6</p></li>\n            <li><button mat-button class=\"left-btn\"><i class=\"material-icons\">keyboard_arrow_left</i></button></li>\n            <li><input type=\"text\" placeholder=\"GO TO\"></li>\n            <li><button mat-button class=\"right-btn\"><i class=\"material-icons\">keyboard_arrow_right</i></button></li>\n          </ul>\n        </div> -->\n        <div *ngIf=\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment\" class=\"filter-container left-auto\">\n          <div (click)=\"clearfilter()\" class=\"filter-btn\">\n            <button mat-button >CLEAR FILTER</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head sticky-first\">\n                <table>\n                  <tr>\n                    <th class=\"w100\">Date</th>\n                    <th class=\"w190\">Company Name</th>\n                    <th class=\"w190\">Applicant Name</th>\n                    <th class=\"w110\"> Mobile</th>\n                    <!-- <th class=\"w100 text-right\"> Target</th>\n                      <th class=\"w110 text-right\"> Credit Limit</th> -->\n                      <th class=\"w120\">Segments</th>\n                      <!-- <th *ngIf=\"role==1\" class=\"w250\">Assign To</th> -->\n                      <th>Address</th>\n                      <th class=\"w60\" *ngIf=\"role==1\">Action</th>\n                    </tr>\n                  </table>\n                </div>\n                <div class=\"table-head bdrt sticky-second\" >\n                  <table>\n                    <tr>\n                      <th class=\"w100\">        \n                      </th>\n                      <th class=\"w190\">\n                        <div class=\"th-search\">\n                          <input type=\"text\" (keyup)=\"retailer_list()\" name=\"companyname\" #companyname=\"ngModel\" [(ngModel)]=\"filter.companyname\" placeholder=\"Search....\">\n                          \n                        </div>\n                      </th>\n                      <th class=\"w190\">\n                        <div class=\"th-search\">\n                          <input type=\"text\" (keyup)=\"retailer_list()\" name=\"nameOfApplicant\" #nameOfApplicant=\"ngModel\" [(ngModel)]=\"filter.nameOfApplicant\" placeholder=\"Search....\">\n                          \n                        </div>\n                      </th>\n                      <th class=\"w110\">\n                        <div class=\"th-search\">\n                          <input type=\"text\" (keyup)=\"retailer_list()\" name=\"mobile\" #mobile=\"ngModel\" [(ngModel)]=\"filter.mobile\" placeholder=\"Search....\">\n                          \n                        </div>\n                      </th>\n                      <!-- <th class=\"w100\"></th>\n                        <th class=\"w110\"></th> -->\n                        <th class=\"w120\">\n                          <div class=\"th-search\">\n                            <mat-select placeholder=\"Select\" id=\"segment\" name=\"segment\" [(ngModel)]=\"filter.segment\" #segment=\"ngModel\"  multiple>\n                              <mat-option value=\"{{segment.text}}\" (click)=\"retailer_list()\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\n                            </mat-select>\n                          </div>\n                        </th>\n                        <th *ngIf=\"role==1\"></th>\n                        <!-- <th>&nbsp;</th> -->\n                        <th class=\"w60\" *ngIf=\"role==1\">&nbsp;</th>\n                      </tr>\n                    </table>\n                  </div>\n                  \n                  <div class=\"table-container\">\n                    <div class=\"table-content\">\n                      <table>\n                        <tr *ngFor=\"let retailer of retaileList\">\n                          <td class=\"w100\">{{retailer.createdOn|date:'d MMM y'}}</td>\n                          <td class=\"w190\"><a class=\"link-btn\" mat-button routerLink=\"/distribution-detail/{{retailer.networkId}}\" routerLinkActive=\"active\">{{retailer.establishment}}</a></td>\n                          <td class=\"w190\">{{retailer.nameOfApplicant}}</td>\n                          <td class=\"w110\">{{retailer.mobile}}</td>\n                          <!-- <td class=\"w100\">&#x20B9; {{retailer.targetLimit}}</td>\n                            <td class=\"w110\">&#x20B9; {{retailer.creditLimit}}</td> -->\n                            <td class=\"w120\"><ng-container *ngFor=\"let segments of retailer.networkSegments\"><span>{{segments.segmentCode}},</span><br></ng-container></td>\n                            <!-- <td *ngIf=\"role==1\" class=\"w250\">\n                              <div class=\"tags\"> \n                                <ul>\n                                  <li  *ngFor=\"let sales of retailer.networkSalesUsers\"><span>{{sales.salesUserName}}</span></li>\n                                </ul>\n                              </div>\n                            </td> -->\n                            <td>{{retailer.state}}</td>\n                            <td *ngIf=\"this.role==1\" class=\"w60\">\n                              <div class=\"action-btns default-action\">\n                                <!-- <a mat-button class=\"edit\"><i class=\"material-icons\">add</i></a> -->\n                                <button mat-button class=\"delete\"  (click)=\"delete_network(retailer.networkId)\"><i class=\"material-icons\">delete_sweep</i></button>\n                              </div>\n                            </td>\n                          </tr>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"div\" class=\"data-not-available\" >\n              <div class=\"outer\">\n                <div class=\"iinear\">\n                  <div class=\"figure\" matRipple>\n                    <div class=\"header\">\n                      <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                    </div>\n                    \n                    <div class=\"description\">\n                      <div class=\"img\">\n                        <i class=\"material-icons\">error_outline</i>\n                      </div>\n                      <div class=\"psc\">\n                        <p>data not available</p>\n                        <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        \n        <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/distribution/retailer-list/retailer-list.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/distribution/retailer-list/retailer-list.component.ts ***!
  \***********************************************************************/
/*! exports provided: RetailerListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RetailerListComponent", function() { return RetailerListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var RetailerListComponent = /** @class */ (function () {
    function RetailerListComponent(user, toast, db, dialog) {
        this.user = user;
        this.toast = toast;
        this.db = db;
        this.dialog = dialog;
        this.userdata = [];
        this.retaileList = [];
        this.tmp_retailer_list = [];
        this.segmentlist = [];
        this.filter = {};
        this.div = false;
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
    }
    RetailerListComponent.prototype.ngOnInit = function () {
        this.retailer_list();
        this.segment_list();
    };
    RetailerListComponent.prototype.refreshlist = function () {
        this.retailer_list();
        this.toast.openSucess('Refreshed successfully!', '');
    };
    RetailerListComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    RetailerListComponent.prototype.delete_network = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "Network";
        this.dialog.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fileData(id, 'network/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message = "Network removed successfully") {
                        _this.toast.openSucess('Network removed successfully', '');
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    _this.retailer_list();
                });
            }
        });
    };
    RetailerListComponent.prototype.clearfilter = function () {
        this.filter = {};
        this.retailer_list();
    };
    RetailerListComponent.prototype.retailer_list = function () {
        var _this = this;
        this.div = false;
        this.loader = true;
        this.name = this.filter.companyname;
        this.nameOfApplicant = this.filter.nameOfApplicant;
        this.mobile = this.filter.mobile;
        if (this.userdata['userType'] != 1) {
            this.senddata = { "isActive": true, "segments": this.filter.segment, "nameOfApplicant": this.nameOfApplicant, "contactName": this.filter.contact, "mobile": this.mobile, "establishment": this.name, "salesUserId": this.userdata['userId'], "role": 13 };
            this.db.fetchData(this.senddata, 'mynetwork/detail').subscribe(function (response) {
                console.log(response);
                if (response['status'] == 'Success') {
                    _this.retaileList = response['data'];
                }
                else {
                    _this.retaileList = [];
                    _this.div = true;
                }
                console.log(_this.retaileList);
                _this.loader = false;
            });
        }
        else {
            this.senddata = { "isActive": true, "segments": this.filter.segment, "nameOfApplicant": this.nameOfApplicant, "contactName": this.filter.contact, "mobile": this.mobile, "establishment": this.name, "role": 13 };
            this.db.fetchData(this.senddata, 'network/list').subscribe(function (response) {
                console.log(response);
                if (response['status'] == 'Success') {
                    _this.retaileList = response['data'];
                }
                else {
                    _this.retaileList = [];
                    _this.div = true;
                }
                console.log(_this.retaileList);
                _this.loader = false;
            });
        }
    };
    RetailerListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-retailer-list',
            template: __webpack_require__(/*! ./retailer-list.component.html */ "./src/app/distribution/retailer-list/retailer-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_3__["slideToTop"])()]
            // styleUrls: ['./retailer-list.component.scss']
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_local_storage_service__WEBPACK_IMPORTED_MODULE_4__["sessionStorage"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], RetailerListComponent);
    return RetailerListComponent;
}());



/***/ }),

/***/ "./src/app/distribution/update-network-address/update-network-address.component.html":
/*!*******************************************************************************************!*\
  !*** ./src/app/distribution/update-network-address/update-network-address.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div mat-dialog-content>\n  <p class=\"heading\">Update Address</p>\n  <div class=\"from-fields\">\n    <div class=\"row\">\n      <div class=\"col s6\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <mat-select placeholder=\"State\" name=\"state\" [(ngModel)]=\"networkUserDetail.state\" >\n                  <mat-option (click)=\"get_district()\"  *ngFor=\"let state of statelist\" value=\"{{state}}\">{{state}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n      </div>\n      <div class=\"col s6\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <mat-select placeholder=\"District\"   name=\"district\" [(ngModel)]=\"networkUserDetail.district\" >\n                  <mat-option (click)=\"get_city()\"  *ngFor=\"let district of district1\" value=\"{{district.districtName}}\">{{district.districtName}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n      </div>\n      <div class=\"col s6\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <mat-select placeholder=\"City\"  name=\"city\" [(ngModel)]=\"networkUserDetail.city\" >\n                  <mat-option   *ngFor=\"let city of cities\" (click)=\" stateId=city.stateMasterId ;get_pincode()\" value=\"{{city.cityName}}\">{{city.cityName}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n      </div>\n      <div class=\"col s6\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <mat-select placeholder=\"Pin\"  name=\"pin\" [(ngModel)]=\"networkUserDetail.pin\" >\n                <mat-option *ngFor=\"let pin of areas\" value=\"{{pin}}\">{{pin}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n    </div>\n    \n    <div class=\"row mb15\">\n      <div class=\"col s12\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\" >\n                <textarea matInput placeholder=\"Address\" name=\"street\" [(ngModel)]=\"networkUserDetail.street\" class=\"h100\"></textarea>\n              </mat-form-field>\n            </div>\n      </div>\n      \n    </div>\n  </div>\n  </div>\n\n  <div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\">Cancel</button>\n  <button mat-raised-button color=\"accent\" (click)=\"update_salesuser()\">Save</button>\n  </div>\n\n  </div>"

/***/ }),

/***/ "./src/app/distribution/update-network-address/update-network-address.component.scss":
/*!*******************************************************************************************!*\
  !*** ./src/app/distribution/update-network-address/update-network-address.component.scss ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi91cGRhdGUtbmV0d29yay1hZGRyZXNzL3VwZGF0ZS1uZXR3b3JrLWFkZHJlc3MuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/distribution/update-network-address/update-network-address.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/distribution/update-network-address/update-network-address.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: UpdateNetworkAddressComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateNetworkAddressComponent", function() { return UpdateNetworkAddressComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");






var UpdateNetworkAddressComponent = /** @class */ (function () {
    function UpdateNetworkAddressComponent(toast, router, dialogRef, data, db) {
        this.toast = toast;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.areas = [];
        this.statecode = [];
        this.networkUpdateActions = [];
        this.networkUserDetail = this.data;
        // this.networkUserDetail.state=this.data.state;
        // this.networkUserDetail.district=this.data.district;
        // this.networkUserDetail.city=this.data.city;
        // this.networkUserDetail.street=this.data.street;
        console.log(this.networkUserDetail);
        this.get_state();
        this.get_district();
        this.get_city();
    }
    UpdateNetworkAddressComponent.prototype.ngOnInit = function () {
    };
    UpdateNetworkAddressComponent.prototype.get_state = function () {
        var _this = this;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.statelist = response['data'];
            console.log(_this.statelist);
            _this.get_district();
        });
    };
    UpdateNetworkAddressComponent.prototype.get_district = function () {
        var _this = this;
        console.log(this.networkUserDetail.state);
        this.st = Array(this.networkUserDetail.state);
        this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
            console.log(response);
            _this.districtlist = response['data'];
            _this.district1 = _this.districtlist[0].distrcits;
        });
        this.get_city();
    };
    UpdateNetworkAddressComponent.prototype.get_city = function () {
        var _this = this;
        console.log(this.networkUserDetail.state, this.networkUserDetail.district);
        console.log(this.networkUserDetail.district);
        this.db.fetchData(Array({ "stateName": this.networkUserDetail.state, "distrcits": Array({ "districtName": this.networkUserDetail.district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.citylist = response['data'];
            _this.districts1 = _this.citylist[0].distrcits;
            _this.cities = _this.districts1[0].cities;
            console.log(_this.cities);
            _this.statecode = _this.cities.filter(function (x) { return x.cityName == _this.data.city; });
            console.log(_this.statecode);
            _this.statemasterid = _this.statecode[0].stateMasterId;
        });
        this.get_pincode();
    };
    UpdateNetworkAddressComponent.prototype.get_pincode = function () {
        var _this = this;
        console.log("check function");
        var cityarray = [];
        if (this.stateId) {
            console.log(this.stateId);
            cityarray[0] = this.stateId;
        }
        else {
            console.log(this.statemasterid);
            cityarray[0] = this.statemasterid;
        }
        console.log(cityarray);
        this.db.fetchData({ 'stateMasterIds': cityarray }, 'city/pincodes').subscribe(function (response) {
            console.log(response);
            _this.areas = response['data'][0]['pinCodes'];
            console.log(_this.areas);
        });
    };
    UpdateNetworkAddressComponent.prototype.update_salesuser = function () {
        var _this = this;
        this.loader = true;
        console.log(this.data);
        this.networkUpdateActions = { 'basicInfoModified': true };
        this.db.fetchData({ "networkUpdateActions": this.networkUpdateActions,
            "networkId": this.data.networkId,
            "street": this.networkUserDetail.street,
            "state": this.networkUserDetail.state,
            "district": this.networkUserDetail.district,
            "city": this.networkUserDetail.city,
            "pin": this.networkUserDetail.pin }, 'network/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "Distributor Network Updated Successfully") {
                _this.toast.openSucess('Address updated successfully', '');
                _this.router.navigate(['/distribution-detail/' + _this.data.networkId]);
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
        this.dialogRef.close();
    };
    UpdateNetworkAddressComponent.prototype.onNoClick = function () {
        this.dialogRef.close();
    };
    UpdateNetworkAddressComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-update-network-address',
            template: __webpack_require__(/*! ./update-network-address.component.html */ "./src/app/distribution/update-network-address/update-network-address.component.html"),
            styles: [__webpack_require__(/*! ./update-network-address.component.scss */ "./src/app/distribution/update-network-address/update-network-address.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], UpdateNetworkAddressComponent);
    return UpdateNetworkAddressComponent;
}());



/***/ }),

/***/ "./src/app/distribution/update-network/update-network.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/distribution/update-network/update-network.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n    <form name=\"form\" (ngSubmit)=\"f.form.valid && updateMobileEmail()\"  #f=\"ngForm\" novalidate>\n        <div *ngIf=\"loader\"> \n            <div class=\"cs-loader\">\n              <img src=\"assets/img/loader.png\" class=\"rotate\"> \n            </div>\n          </div>\n        \n        <div *ngIf=\"networkUserDetail.type=='email'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Email</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput placeholder=\"Email-ID\" name=\"email\" value=\"email\" [(ngModel)]=\"networkUserDetail.email\" #email=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!email.valid && email.touched\">\n                        Please Enter Valid Email!\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div *ngIf=\"networkUserDetail.type=='networkCode'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Network Code</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput placeholder=\"Network Code\" name=\"networkCode\" value=\"networkCode\" [(ngModel)]=\"networkUserDetail.networkCode\" #networkCode=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && networkCode.invalid }\" required>\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!networkCode.valid && networkCode.touched\">\n                        Please Enter Network Code!\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div *ngIf=\"networkUserDetail.type=='dates'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Dates</p>\n            <div class=\" from-fields\">\n                <div class=\"row\">\n\n                <div class=\"col s4 control-field\">\n                        <!-- <mat-form-field class=\"example-full-width cs-input\">\n                            <input input matInput type=\"date\" placeholder=\"Commencement Date\" name=\"dateOfCommencement\" [(ngModel)]=\"dateArray.dateOfCommencement\" #dateOfCommencement=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && dateOfCommencement.invalid }\" required>\n                        </mat-form-field> -->\n                        <mat-form-field class=\"cs-input\">\n                            <input matInput [matDatepicker]=\"pickertwo\" placeholder=\"Commencement Date\" name=\"dateOfCommencement\" [(ngModel)]=\"dateArray.dateOfCommencement\" #dateOfCommencement=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && dateOfCommencement.invalid }\" required>\n                            <mat-datepicker-toggle matSuffix [for]=\"pickertwo\"></mat-datepicker-toggle>\n                            <mat-datepicker #pickertwo></mat-datepicker>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!dateOfCommencement.valid && dateOfCommencement.touched\">\n                            Please Enter Commencement Date!\n                        </div>\n                    </div>\n\n\n                    <div class=\"col s4 control-field\">\n                        <!-- <mat-form-field class=\"example-full-width cs-input\">\n                            <input input matInput type=\"date\" placeholder=\"Date Of Birth\" name=\"dateOfBirth\" [(ngModel)]=\"dateArray.dateOfBirth\" #dateOfBirth=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && dateOfBirth.invalid }\" required>\n                        </mat-form-field> -->\n                        \n                        <mat-form-field class=\"cs-input\">\n                            <input matInput [matDatepicker]=\"picker\" placeholder=\"Date Of Birth\" name=\"dateOfBirth\" [(ngModel)]=\"dateArray.dateOfBirth\" #dateOfBirth=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && dateOfBirth.invalid }\" required>\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!dateOfBirth.valid && dateOfBirth.touched\">\n                            Please Enter Birth Date!\n                        </div>\n                    </div>\n                    \n                    <div class=\"col s4 control-field\">\n                        <!-- <mat-form-field class=\"example-full-width cs-input\">\n                            <input input matInput type=\"date\" placeholder=\"Date Of Marriage\" name=\"dateOfMarriage\"  [(ngModel)]=\"dateArray.dateOfMarriage\" #dateOfMarriage=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && dateOfMarriage.invalid }\" required>\n                        </mat-form-field> -->\n                        \n                        <mat-form-field class=\"cs-input\">\n                            <input matInput [matDatepicker]=\"pickerone\" placeholder=\"Date Of Marriage\" name=\"dateOfMarriage\"  [(ngModel)]=\"dateArray.dateOfMarriage\" #dateOfMarriage=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && dateOfMarriage.invalid }\" required>\n                            <mat-datepicker-toggle matSuffix [for]=\"pickerone\"></mat-datepicker-toggle>\n                            <mat-datepicker #pickerone></mat-datepicker>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!dateOfMarriage.valid && dateOfMarriage.touched\">\n                            Please Enter Marriage Date!\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"networkUserDetail.type=='bank'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Bank Details</p>\n            <div class=\" from-fields\">\n                <div class=\"row\">\n                    <div class=\"col s4 control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                            <input matInput placeholder=\"Bank Name\" name=\"bankName\" value=\"bankName\" [(ngModel)]=\"networkUserDetail.bankName\" #bankName=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && bankName.invalid }\" required>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!bankName.valid && bankName.touched\">\n                            Please Enter Bank Name.\n                        </div>\n                    </div>\n                    <div class=\"col s4 control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                            <input matInput placeholder=\"Account Number\" name=\"accountNumber\" value=\"accountNumber\"  minlength=\"10\" maxlength=\"14\" min=\"0\" [(ngModel)]=\"networkUserDetail.accountNumber\" #accountNumber=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && accountNumber.invalid }\" required>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!accountNumber.valid && accountNumber.touched\">\n                            Please Enter Account Number.\n                        </div>\n                    </div>\n                    <div class=\"col s4 control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                            <input matInput placeholder=\"IFSC Code\" name=\"ifscCode\" value=\"ifscCode\" [(ngModel)]=\"networkUserDetail.ifscCode\" minlength=\"11\" maxlength=\"11\" #ifscCode=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && ifscCode.invalid }\" required>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!ifscCode.valid && ifscCode.touched\">\n                            Please Enter IFSC Code.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div *ngIf=\"networkUserDetail.type=='gst'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update GST</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput placeholder=\"GST\" name=\"gst\" value=\"gst\" [(ngModel)]=\"networkUserDetail.gst\" #gst=\"ngModel\" minlength=\"15\" maxlength=\"15\" min=\"0\" [ngClass]=\"{ 'is-invalid': f.submitted && gst.invalid }\" required>\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!gst.valid && gst.touched\">\n                        Please Enter 15 Digit GST\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div *ngIf=\"networkUserDetail.type=='pan'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update PAN</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput placeholder=\"PAN\" name=\"pan\" value=\"pan\" [(ngModel)]=\"networkUserDetail.pan\" #pan=\"ngModel\" minlength=\"10\" maxlength=\"10\" min=\"0\" [ngClass]=\"{ 'is-invalid': f.submitted && pan.invalid }\" required>\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!pan.valid && pan.touched\">\n                        Please Enter 10 Digit Valid PAN....\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div *ngIf=\"networkUserDetail.type=='mobile'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Mobile</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput type=\"text\"  maxlength=\"10\"  placeholder=\"Mobile\" name=\"mobile\"   value=\"mobile\" [(ngModel)]=\"networkUserDetail.mobile\" minlength=\"10\" maxlength=\"10\" min=\"0\" #mobile=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && mobile.invalid }\" (keypress)=\"MobileNumber($event)\" required>\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!mobile.valid && mobile.touched\">\n                        Please Enter Valid Mobile\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"networkUserDetail.type=='taskremarks'\" mat-dialog-content style=\"overflow: hidden;\">\n                <p class=\"heading\">Update Remark</p>\n                <div class=\" from-fields\">\n                    <div class=\"control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                            <input matInput placeholder=\"Remark\" name=\"remarks\" value=\"remarks\" [(ngModel)]=\"networkUserDetail.remarks\" #remarks=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && remarks.invalid }\" required>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!remarks.valid && remarks.touched\">\n                            Please Enter remarks !\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        <div *ngIf=\"networkUserDetail.type=='landline'\" mat-dialog-content style=\"overflow: hidden;\">\n                <p class=\"heading\">Update Landline</p>\n                <div class=\" from-fields\">\n                    <div class=\"control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                            <input matInput type=\"text\"  maxlength=\"10\"  placeholder=\"Landline\" name=\"landline\"   value=\"landline\" [(ngModel)]=\"networkUserDetail.landline\"  minlength=\"6\" maxlength=\"13\" #landline=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && landline.invalid }\" required>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"landline.invalid && landline.touched\">\n                                Landline is must be atleast 6 digit\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"landline.invalid && landline.errors.required\">\n                                    Landline is required\n                            </div>\n                    </div>\n                </div>\n       </div>\n        \n        <div *ngIf=\"networkUserDetail.type=='nameOfApplicant'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Name Of Applicant</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput type=\"text\" placeholder=\"Name Of Applicant\" name=\"nameOfApplicant\"   value=\"nameOfApplicant\" [(ngModel)]=\"networkUserDetail.nameOfApplicant\" #nameOfApplicant=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && nameOfApplicant.invalid }\" required>\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!nameOfApplicant.valid && nameOfApplicant.touched\">\n                        Please Enter Name Of Applicant.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"networkUserDetail.type=='addlimit'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Add Target</p>\n            <div class=\" from-fields\">\n                <div class=\"row\">\n                    <div class=\"col s6 control-field\">\n                        <mat-form-field class=\"cs-input\">\n                            <mat-select placeholder=\"Select year\" name=\"financialYear\" id=\"financialYear\" [(ngModel)]=\"networkUserDetail.financialYear\" #financialYear=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && financialYear.invalid }\" required>\n                                <mat-option value=\"2019-2020\"  >2019-2020</mat-option>\n                                <mat-option value=\"2020-2021\"  >2020-2021</mat-option>\n                                <mat-option value=\"2021-2022\"  >2021-2022</mat-option>\n                                <mat-option value=\"2022-2023\"  >2022-2023</mat-option>\n                                <mat-option value=\"2023-2024\"  >2023-2024</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && financialYear.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"financialYear.errors.required\">Financial Year is required</mat-error>\n                        </mat-error>\n                    </div>\n                    \n                    <div class=\"col s6 control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                            <input matInput type=\"text\" placeholder=\"Target\" name=\"targetLimit\"   value=\"targetLimit\" [(ngModel)]=\"networkUserDetail.targetLimit\" #targetLimit=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && targetLimit.invalid }\" required>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!targetLimit.valid && targetLimit.touched\">\n                            Please Enter Target....\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div *ngIf=\"networkUserDetail.type=='editlimit'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Target</p>\n            <div class=\" from-fields\">\n                <div class=\"row\">\n                    <div class=\"col s6 control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                            <input matInput type=\"text\" placeholder=\"Financial Year\" name=\"financialYear\"  readonly value=\"financialYear\" [(ngModel)]=\"networkUserDetail.financialYear\" #financialYear=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && financialYear.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && financialYear.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"financialYear.errors.required\">Financial Year is required</mat-error>\n                        </mat-error>\n                    </div>\n                    <div class=\"col s6 control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                            <input matInput type=\"text\" placeholder=\"Target\" name=\"targetLimit\"   value=\"targetLimit\" [(ngModel)]=\"networkUserDetail.targetLimit\" #targetLimit=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && targetLimit.invalid }\" required>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!targetLimit.valid && targetLimit.touched\">\n                            Please Enter Target!\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"data.type=='assign'\" mat-dialog-content>\n            <p class=\"heading\">Update Sales</p>\n            <mat-form-field class=\"cs-input\">\n                <mat-select placeholder=\"Select Sales\" name=\"sales\" [(ngModel)]=\"data.sales\" multiple>\n                    <mat-option *ngFor='let sales of saleslist' value=\"{{sales.userId}}\" >{{sales.userName}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div> \n\n        <div *ngIf=\"data.type=='source'\" mat-dialog-content>\n            <p class=\"heading\">Update Source</p>\n            <mat-form-field class=\"cs-input\">\n                <mat-select placeholder=\"Source\" matNativeControl name=\"source\" id=\"source\" #source=\"ngModel\" [(ngModel)]=\"networkUserDetail.source\"  [ngClass]=\"{'has-error' : source.invalid }\">\n                    <mat-option [value]=\"\" disabled>Select Source</mat-option>\n                    <mat-option [value]=\"1\">SOCIAL</mat-option>\n                    <mat-option [value]=\"5\">CALL</mat-option>\n                    <mat-option [value]=\"2\">DIRECT</mat-option>\n                    <mat-option [value]=\"3\">WALK-IN</mat-option>\n                    <mat-option [value]=\"4\">REFERRAL</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div> \n        \n        <div *ngIf=\"data.type=='contact'\" mat-dialog-content>\n            <p class=\"heading\">Update Contact</p>\n            <div class=\"from-fields\">\n                <form #p=\"ngForm\" (ngSubmit)=\"p.valid && addContactPerson()\">\n                    <div class=\"row\">\n                        <div class=\"col s4 \">\n                            <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input\">\n                                    <input matInput placeholder=\"Name\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"contact_person.name\" (keypress)=\"namecheck($event)\" >\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"col s4\">\n                            <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input\">\n                                    <input matInput placeholder=\"Mobile No. 1\" name=\"mobile1\" #mobile1=\"ngModel\" [(ngModel)]=\"contact_person.mobile1\" minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\">\n                                </mat-form-field>\n                                <div class=\"alert alert-danger\" *ngIf=\"!mobile1.valid && mobile1.touched\">\n                                    Contact no is Invalid...\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col s4 \">\n                            <div class=\"control-field pr80\">\n                                <mat-form-field class=\"cs-input\">\n                                    <input matInput placeholder=\"Mobile No. 2\"  name=\"mobile2\" #mobile2=\"ngModel\" [(ngModel)]=\"contact_person.mobile2\" minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" >\n                                </mat-form-field>\n                                <div class=\"plus-btn\">\n                                    <button mat-raised-button color=\"accent\">\n                                        <i class=\"material-icons\" >add</i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"row mt15\">\n                <div class=\"col s12 padding0\">\n                    <div class=\"cs-table left-right-20\">\n                        <div class=\"table-head\">\n                            <table>\n                                <tr>\n                                    <th>Name</th>\n                                    <th class=\"w200\">Mobile No. 1</th>\n                                    <th class=\"w200 bdr0\">Mobile No. 2</th>\n                                    <th class=\"w130\">&nbsp;</th>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class=\"table-container\">\n                            <div class=\"table-content\">\n                                <table>\n                                    <tr *ngFor=\"let value of tmp_list;let index=index\">\n                                        <td>{{value.name}}</td>\n                                        <td class=\"w200\">{{value.mobile1}}</td>\n                                        <td class=\"w200\">{{value.mobile2}}</td>\n                                        <td class=\"w130\">\n                                            <a mat-button class=\"del-btn\" (click)=\"removeContact(index)\">Delete</a>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div mat-dialog-actions>\n            <button mat-raised-button  color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n            <button mat-raised-button color=\"accent\">Save</button>\n        </div>\n    </form>\n</div>"

/***/ }),

/***/ "./src/app/distribution/update-network/update-network.component.scss":
/*!***************************************************************************!*\
  !*** ./src/app/distribution/update-network/update-network.component.scss ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi91cGRhdGUtbmV0d29yay91cGRhdGUtbmV0d29yay5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/distribution/update-network/update-network.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/distribution/update-network/update-network.component.ts ***!
  \*************************************************************************/
/*! exports provided: UpdateNetworkComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateNetworkComponent", function() { return UpdateNetworkComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);







var UpdateNetworkComponent = /** @class */ (function () {
    function UpdateNetworkComponent(toast, router, dialogRef, data, db) {
        this.toast = toast;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.contact_person = {};
        this.tmp_list = [];
        this.networkUpdateActions = [];
        this.saleslist = [];
        this.dateArray = {};
        this.update_data = {};
        console.log(data);
        this.networkUserDetail = this.data;
        console.log(this.networkUserDetail);
        this.tmp_list = this.networkUserDetail.networkContacts;
        console.log(this.networkUserDetail);
        console.log(this.networkUserDetail.financialYear);
        console.log(this.networkUserDetail.targetLimit);
        console.log(this.networkUserDetail.networkId);
        this.dateArray = { 'dateOfBirth': moment__WEBPACK_IMPORTED_MODULE_6__(this.networkUserDetail.dateOfBirth).format('YYYY-MM-DD'), 'dateOfMarriage': moment__WEBPACK_IMPORTED_MODULE_6__(this.networkUserDetail.dateOfMarriage).format('YYYY-MM-DD'), 'dateOfCommencement': moment__WEBPACK_IMPORTED_MODULE_6__(this.networkUserDetail.dateOfCommencement).format('YYYY-MM-DD') };
        console.log(this.dateArray);
    }
    UpdateNetworkComponent.prototype.ngOnInit = function () {
    };
    UpdateNetworkComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    UpdateNetworkComponent.prototype.addContactPerson = function () {
        if (!this.contact_person.mobile2) {
            this.contact_person.mobile2 = '';
        }
        this.tmp_list.push(this.contact_person);
        this.contact_person = {};
        console.log(this.tmp_list);
    };
    UpdateNetworkComponent.prototype.removeContact = function (index) {
        this.tmp_list.splice(index, 1);
    };
    UpdateNetworkComponent.prototype.namecheck = function (event) {
        var pattern = /[A-Z\+\a-z\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    UpdateNetworkComponent.prototype.updateMobileEmail = function () {
        var _this = this;
        if (this.networkUserDetail.type == 'email') {
            this.update_data.email = this.networkUserDetail.email;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'networkCode') {
            this.update_data.networkCode = this.networkUserDetail.networkCode;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'source') {
            this.update_data.source = this.networkUserDetail.source;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'mobile') {
            this.update_data.mobile = this.networkUserDetail.mobile;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'landline') {
            this.update_data.landline = this.networkUserDetail.landline;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'gst') {
            this.update_data.gst = this.networkUserDetail.gst;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'pan') {
            this.update_data.pan = this.networkUserDetail.pan;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'bank') {
            this.update_data.bankName = this.networkUserDetail.bankName;
            this.update_data.accountNumber = this.networkUserDetail.accountNumber;
            this.update_data.ifscCode = this.networkUserDetail.ifscCode;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'nameOfApplicant') {
            this.update_data.nameOfApplicant = this.networkUserDetail.nameOfApplicant;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'dates') {
            this.update_data.dateOfBirth = moment__WEBPACK_IMPORTED_MODULE_6__(this.dateArray.dateOfBirth).format('YYYY-MM-DD');
            this.update_data.dateOfMarriage = moment__WEBPACK_IMPORTED_MODULE_6__(this.dateArray.dateOfMarriage).format('YYYY-MM-DD');
            this.update_data.dateOfCommencement = moment__WEBPACK_IMPORTED_MODULE_6__(this.dateArray.dateOfCommencement).format('YYYY-MM-DD');
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'basicInfoModified': true };
            console.log(this.update_data);
        }
        else if (this.networkUserDetail.type == 'contact') {
            this.update_data.networkContacts = this.tmp_list;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'contactsModified': true };
            console.log(this.update_data);
        }
        console.log(this.data.sales);
        this.loader = true;
        this.db.fetchData(this.update_data, 'network/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "Distributor Network Updated Successfully") {
                _this.toast.openSucess('Updated successfully', '');
                _this.router.navigate(['/distribution-detail/' + _this.data.networkId]);
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
            _this.dialogRef.close();
        });
        if (this.networkUserDetail.type == 'addlimit') {
            this.update_data.targetLimit = this.networkUserDetail.targetLimit;
            this.update_data.financialYear = this.networkUserDetail.financialYear;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'contactsModified': true };
            console.log(this.update_data);
            console.log(this.data.sales);
            this.db.fetchData(this.update_data, 'network/limit/add').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                if (_this.message == "Network limit added successfully") {
                    _this.toast.openSucess('Updated successfully', '');
                    _this.router.navigate(['/distribution-detail/' + _this.data.networkId]);
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
                _this.dialogRef.close();
            });
        }
        if (this.networkUserDetail.type == 'editlimit') {
            console.log(this.networkUserDetail.type);
            console.log(this.networkUserDetail.limitIndex);
            console.log("data recieved at update limit");
            this.update_data.targetLimit = this.networkUserDetail.targetLimit;
            this.update_data.financialYear = this.networkUserDetail.financialYear;
            this.update_data.networkId = this.data.networkId;
            this.update_data.networkUpdateActions = { 'contactsModified': true };
            console.log(this.update_data);
            console.log(this.data.sales);
            this.db.fetchData(this.update_data, 'network/limit/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                if (_this.message == "Network limit added successfully") {
                    _this.toast.openSucess('Updated successfully', '');
                    _this.router.navigate(['/distribution-detail/' + _this.data.networkId]);
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
                _this.dialogRef.close();
            });
        }
        if (this.networkUserDetail.type == 'taskremarks') {
            console.log(this.networkUserDetail.type);
            console.log(this.networkUserDetail.remarks);
            this.update_data.remarks = this.networkUserDetail.remarks;
            this.update_data.taskId = this.networkUserDetail.taskId;
            this.update_data.taskDetailId = this.networkUserDetail.taskDetailId;
            ;
            console.log(this.update_data);
            this.db.fetchData(this.update_data, 'taskdetail/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == "Success") {
                    _this.toast.openSucess('Updated successfully', '');
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
                _this.dialogRef.close();
            });
        }
    };
    UpdateNetworkComponent.prototype.onNoClick = function () {
        this.dialogRef.close();
    };
    UpdateNetworkComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-update-network',
            template: __webpack_require__(/*! ./update-network.component.html */ "./src/app/distribution/update-network/update-network.component.html"),
            styles: [__webpack_require__(/*! ./update-network.component.scss */ "./src/app/distribution/update-network/update-network.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], UpdateNetworkComponent);
    return UpdateNetworkComponent;
}());



/***/ }),

/***/ "./src/app/distribution/wholesaler-list/wholesaler-list.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/distribution/wholesaler-list/wholesaler-list.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"loader\"> \n  <div class=\"cs-loader\">\n    <img src=\"assets/img/loader.png\" class=\"rotate\"> \n  </div>\n</div>\n<div class=\"main-container\" >\n  <div class=\"middle-container padding0\">\n    <div class=\"master-heading\">\n      <div class=\"vl-info\">\n        <ul>\n          <li><p>Total Wholesaler : <span *ngIf='wholeSalerList'>{{wholeSalerList.length}}</span><span *ngIf='!wholeSalerList'>0</span></p></li>\n          <!-- <li><p>Active : <span class=\"green-clr\">15</span></p></li>\n            <li><p>Deactive : <span class=\"yellow-clr\">25</span></p></li>\n            <li class=\"af-none\"><p class=\"pl30\"><img src=\"assets/img/filter.svg\" class=\"icon\"><span>FILTER</span></p></li> -->\n          </ul>\n        </div>\n        <!-- <div class=\"top-pagination m-right-data\">\n          <ul>\n            <li class=\"refresh-area af-none\">\n              <a class=\"refresh-btn\" mat-raised-button (click)=\"refreshlist()\" matTooltip=\"Refresh\"><i class=\"material-icons\"> refresh</i></a>\n            </li>\n            <li><p>Pages 2 of 6</p></li>\n              <li><button mat-button class=\"left-btn\"><i class=\"material-icons\">keyboard_arrow_left</i></button></li>\n              <li><input type=\"text\" placeholder=\"GO TO\"></li>\n              <li><button mat-button class=\"right-btn\"><i class=\"material-icons\">keyboard_arrow_right</i></button></li>\n            </ul>\n          </div> -->\n          <div *ngIf=\"filter.companyname || filter.nameOfApplicant || filter.mobile || filter.segment\" class=\"filter-container left-auto\">\n            <div (click)=\"clearfilter()\" class=\"filter-btn\">\n              <button mat-button >CLEAR FILTER</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"container-outer\">\n        <div class=\"container\" >\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"cs-table left-right-20\">\n                <div class=\"sticky-head-flat\">\n                  <div class=\"table-head\">\n                    <table>\n                      <tr>\n                        <th class=\"w100\">Date</th>\n                        <th class=\"w190\">Company Name</th>\n                        <th class=\"w190\">Applicant Name</th>\n                        <th class=\"w110\"> Mobile</th>\n                        <!-- <th class=\"w100 text-right\"> Target</th>\n                        <th class=\"w110 text-right\"> Credit Limit</th> -->\n                        <th class=\"w120\">Segments</th>\n                        <!-- <th *ngIf=\"role==1\" class=\"w250\">Assign To</th> -->\n                        <th>Address</th>\n                        <th class=\"w60\" *ngIf=\"role==1\">Action</th>\n                      </tr>\n                    </table>\n                  </div>\n                  <div class=\"table-head bdrt\">\n                    <table>\n                      <tr>\n                        <th class=\"w100\">\n                        </th>\n                        <th class=\"w190\">\n                          <div class=\"th-search\">\n                            <input type=\"text\" (keyup)=\"Whole_saler_list()\" name=\"companyname\" #companyname=\"ngModel\" [(ngModel)]=\"filter.companyname\" placeholder=\"Search....\">\n                           \n                          </div>\n                        </th>\n                        <th class=\"w190\">\n                          <div class=\"th-search\">\n                            <input type=\"text\" (keyup)=\"Whole_saler_list()\" name=\"nameOfApplicant\" #nameOfApplicant=\"ngModel\" [(ngModel)]=\"filter.nameOfApplicant\" placeholder=\"Search....\">\n                           \n                          </div>\n                        </th>\n                        <th class=\"w110\">\n                          <div class=\"th-search\">\n                            <input type=\"text\" (keyup)=\"Whole_saler_list()\" name=\"mobile\" #mobile=\"ngModel\" [(ngModel)]=\"filter.mobile\" placeholder=\"Search....\">\n                           \n                          </div>\n                        </th>\n                        <!-- <th class=\"w100\"></th>\n                        <th class=\"w110\"></th> -->\n                        <th class=\"w120\">\n                          <div class=\"th-search\">\n                            <mat-select placeholder=\"Select\" id=\"segment\" name=\"segment\" [(ngModel)]=\"filter.segment\" #segment=\"ngModel\"  multiple>\n                              <mat-option value=\"{{segment.text}}\" (click)=\"Whole_saler_list()\" *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\n                            </mat-select>\n                          </div>\n                        </th>\n                        <th *ngIf=\"role==1\"></th>\n                        <!-- <th>&nbsp;</th> -->\n                        <th class=\"w60\" *ngIf=\"role==1\">&nbsp;</th>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                \n                <div class=\"table-container\">\n                  <div class=\"table-content\">\n                    <table>\n                      <tr *ngFor=\"let retailer of wholeSalerList\">\n                        <td class=\"w100\">{{retailer.createdOn|date:'d MMM y'}}</td>\n                        <td class=\"w190\"><a class=\"link-btn\" mat-button routerLink=\"/distribution-detail/{{retailer.networkId}}\" routerLinkActive=\"active\">{{retailer.establishment}}</a></td>\n                        <td class=\"w190\">{{retailer.nameOfApplicant}}</td>\n                        <td class=\"w110\">{{retailer.mobile}}</td>\n                        <!-- <td class=\"w100 text-right\">&#x20B9; {{retailer.targetLimit}}</td>\n                        <td class=\"w110 text-right\">&#x20B9; {{retailer.creditLimit}}</td> -->\n                        <td class=\"w120\"><ng-container *ngFor=\"let segments of retailer.networkSegments\"><span>{{segments.segmentCode}},</span><br></ng-container></td>\n                        <!-- <td *ngIf=\"role==1\" class=\"w250\">\n                          <div class=\"tags\"> \n                            <ul>\n                              <li  *ngFor=\"let sales of retailer.networkSalesUsers\"><span>{{sales.salesUserName}}</span></li>\n                            </ul>\n                          </div>\n                        </td> -->\n                        <td>{{retailer.state}}</td>\n                        <td *ngIf=\"this.role==1\" class=\"w60\">\n                          <div class=\"action-btns default-action\">\n                            <!-- <a mat-button class=\"edit\"><i class=\"material-icons\">add</i></a> -->\n                            <button mat-button class=\"delete\"  (click)=\"delete_network(retailer.networkId)\"><i class=\"material-icons\">delete_sweep</i></button>\n                          </div>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"div\" class=\"data-not-available\" >\n          <div class=\"outer\">\n            <div class=\"iinear\">\n              <div class=\"figure\" matRipple>\n                <div class=\"header\">\n                  <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                </div>\n                \n                <div class=\"description\">\n                  <div class=\"img\">\n                    <i class=\"material-icons\">error_outline</i>\n                  </div>\n                  <div class=\"psc\">\n                    <p>data not available</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n    \n    <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/distribution/wholesaler-list/wholesaler-list.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/distribution/wholesaler-list/wholesaler-list.component.ts ***!
  \***************************************************************************/
/*! exports provided: WholesalerListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WholesalerListComponent", function() { return WholesalerListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var WholesalerListComponent = /** @class */ (function () {
    function WholesalerListComponent(user, toast, db, dialog) {
        this.user = user;
        this.toast = toast;
        this.db = db;
        this.dialog = dialog;
        this.userdata = [];
        this.wholeSalerList = [];
        this.segmentlist = [];
        this.tmp_wholesalerlist = [];
        this.filter = {};
        this.div = false;
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
    }
    WholesalerListComponent.prototype.ngOnInit = function () {
        this.Whole_saler_list();
        this.segment_list();
    };
    WholesalerListComponent.prototype.refreshlist = function () {
        this.Whole_saler_list();
        this.toast.openSucess('Refreshed successfully!', '');
    };
    WholesalerListComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    WholesalerListComponent.prototype.Whole_saler_list = function () {
        var _this = this;
        this.div = false;
        this.name = this.filter.companyname;
        this.nameOfApplicant = this.filter.nameOfApplicant;
        this.mobile = this.filter.mobile;
        this.loader = true;
        if (this.userdata['userType'] != 1) {
            this.senddata = { "isActive": true, "segments": this.filter.segment, "nameOfApplicant": this.nameOfApplicant, "contactName": this.filter.contact, "mobile": this.mobile, "establishment": this.name, "salesUserId": this.userdata['userId'], "role": '11' };
            this.db.fetchData(this.senddata, 'mynetwork/detail').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.wholeSalerList = response['data'];
                }
                else {
                    _this.wholeSalerList = [];
                    _this.div = true;
                }
                console.log(_this.wholeSalerList);
                _this.loader = false;
            });
        }
        else {
            this.senddata = { "isActive": true, "segments": this.filter.segment, "nameOfApplicant": this.nameOfApplicant, "contactName": this.filter.contact, "mobile": this.mobile, "establishment": this.name, "role": '11' };
            this.db.fetchData(this.senddata, 'network/list').subscribe(function (response) {
                console.log(response);
                if (response['status'] == "Success") {
                    _this.wholeSalerList = response['data'];
                }
                else {
                    _this.wholeSalerList = [];
                    _this.div = true;
                }
                console.log(_this.wholeSalerList);
                _this.loader = false;
            });
        }
    };
    WholesalerListComponent.prototype.clearfilter = function () {
        this.filter = {};
        this.Whole_saler_list();
    };
    WholesalerListComponent.prototype.delete_network = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "Network";
        this.dialog.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fileData(id, 'network/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message = "Network removed successfully") {
                        _this.toast.openSucess('Network removed successfully', '');
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    _this.Whole_saler_list();
                });
            }
        });
    };
    WholesalerListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-wholesaler-list',
            template: __webpack_require__(/*! ./wholesaler-list.component.html */ "./src/app/distribution/wholesaler-list/wholesaler-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_3__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_local_storage_service__WEBPACK_IMPORTED_MODULE_4__["sessionStorage"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], WholesalerListComponent);
    return WholesalerListComponent;
}());



/***/ }),

/***/ "./src/app/expense/add-expense/add-expense.component.html":
/*!****************************************************************!*\
  !*** ./src/app/expense/add-expense/add-expense.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/payment_icon.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Expense</h2>\n        <p>Add Expense</p>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer\" >\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"sprate-box pt0 mb15\">\n            <div class=\"cs-heading\">\n              <h2>USER EXPENSE</h2>\n            </div>\n            <div class=\"row\">\n              <div class=\"col s12 padding0\">\n                <div class=\"select-one\">\n                  <mat-radio-group (change)=\"openExpenseForm()\" #form=\"ngModel\" [(ngModel)]=\"expenseForm.form\" required>\n                    <mat-radio-button value=2>Outstation Travel</mat-radio-button>\n                    <mat-radio-button value=3>Sales Promotion Activity</mat-radio-button>\n                    <mat-radio-button value=4>Misc Exp</mat-radio-button>\n                    <mat-radio-button value=1>Local Conveyance</mat-radio-button>\n                  </mat-radio-group>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- <div *ngIf=\"expenseForm.form && seniorList.length!=0\" class=\"row\">\n        <div class=\"col s6 pl0\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr8\">\n              <mat-select placeholder=\"Select Senior For Approval\" name=\"expenseSanctioner\" #expenseSanctioner=\"ngModel\" id=\"expenseSanctioner\" [(ngModel)]=\"expenseForm.expenseSanctioner\"  required >\n                <mat-option *ngFor=\"let senior of seniorList\" value={{senior.userId}}>{{senior.userName}}</mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"expenseSanctioner.errors.required\">Purpose Of Visit required</mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </div> -->\n      <form *ngIf=\"expenseForm.form==1\" (ngSubmit)=\"f.form.valid && LocalConvenseExpense() || setFocus(f.form)\" #f=\"ngForm\" novalidate>\n        <div class=\"cs-bill\" >\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sprate-box pt0\">\n                <div class=\"cs-heading\">\n                  <h2> BASIC INFORMATION</h2>\n                </div>\n                <div class=\"from-fields\">\n                  <div class=\"row\">\n                    <div class=\"col s4 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <mat-select placeholder=\"Select Senior For Approval\" name=\"expenseSanctioner\" #expenseSanctioner=\"ngModel\" id=\"expenseSanctioner\" [(ngModel)]=\"localConvense.expenseSanctioner\"  required >\n                            <mat-option *ngFor=\"let senior of seniorList\" value={{senior.userId}}>{{senior.userName}}</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && expenseSanctioner.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"expenseSanctioner.errors.required\">Approver is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"collaps flat-collaps\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      TRAVEL ENTITLEMENT\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      \n                      <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                          <div class=\"row\">\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput [matDatepicker]=\"days\" [max]='currentDate' readonly placeholder=\"Date Of Visit\" name=\"visitDate\" #visitDate=\"ngModel\" [(ngModel)]=\"localHQExpense.visitDate\" >\n                                  <mat-datepicker-toggle matSuffix [for]=\"days\"></mat-datepicker-toggle>\n                                  <mat-datepicker #days></mat-datepicker>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"From\" name=\"from\" #from=\"ngModel\" [(ngModel)]=\"localHQExpense.from\" >\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"To\" name=\"to\" #to=\"ngModel\" [(ngModel)]=\"localHQExpense.to\" >\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <mat-select placeholder=\"Type of Mode\" name=\"modeType\" #modeType=\"ngModel\" [(ngModel)]=\"localHQExpense.modeType\" >\n                                    <mat-option *ngIf=\"allowanceList.selfCarPerKM!=0 ||allowanceList.selfBikePerKM!=0 \" (click)=\"readonlyValue(localHQExpense.modeType)\" value=1>SELF VEHICLE</mat-option>\n                                    <mat-option (click)=\"readonlyValue(localHQExpense.modeType)\" value=2>PUBLIC TRANSPORT</mat-option>\n                                  </mat-select>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <mat-select placeholder=\"Mode Of Travel\" name=\"mode\" #mode=\"ngModel\" [(ngModel)]=\"localHQExpense.mode\" >\n                                    <mat-option value=10 *ngIf=\"localHQExpense.modeType==2\">AUTO</mat-option>\n                                    <mat-option value=1 *ngIf=\"localHQExpense.modeType==2\">BUS</mat-option>\n                                    <mat-option value=6 *ngIf=\"localHQExpense.modeType==2\">AC TAXI</mat-option>\n                                    <mat-option value=7 *ngIf=\"localHQExpense.modeType==2\">NON-AC TAXI </mat-option>\n                                    <mat-option value=5 *ngIf=\"localHQExpense.modeType==2\">METRO </mat-option>\n                                    <mat-option value=9 *ngIf=\"localHQExpense.modeType==1 && allowanceList.selfCarPerKM!=0\">CAR</mat-option>\n                                    <mat-option value=8 *ngIf=\"localHQExpense.modeType==1 && allowanceList.selfBikePerKM!=0\">BIKE </mat-option>\n                                    \n                                  </mat-select>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div *ngIf=\"localHQExpense.modeType==1\" class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Vehicle No\" type=\"text\" name=\"vehicleNumber\" #vehicleNumber=\"ngModel\" [(ngModel)]=\"localHQExpense.vehicleNumber\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          <div  class=\"row\">\n                            <div *ngIf=\"localHQExpense.modeType==1\" class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"KMs Covered\" type=\"number\" (input)=\"calculateAmount(localHQExpense.mode,localHQExpense.distanceKMS)\" name=\"distanceKMS\" #distanceKMS=\"ngModel\" [(ngModel)]=\"localHQExpense.distanceKMS\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Amount\" type=\"number\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"localHQExpense.amount\" readonly={{readonlyArea}} >\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            \n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Other Exp.\" type=\"number\" name=\"otherExpense\" #otherExpense=\"ngModel\" [(ngModel)]=\"localHQExpense.otherExpense\" >\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <textarea matInput placeholder=\"Remark\" class=\"h165\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"localHQExpense.remarks\"></textarea>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col s12 padding0 mt15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" [disabled]=\"!localHQExpense.remarks || !localHQExpense.visitDate|| !localHQExpense.from || !localHQExpense.to ||!localHQExpense.mode ||!localHQExpense.modeType ||!localHQExpense.otherExpense \" (click)=\"addToLocalConvenseList()\" type=\"button\">Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n          \n          \n          <div *ngIf=\"localConveyances.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr>\n                    <th class=\"w160\">Date Of Visit</th>\n                    <th class=\"w110\">From</th>\n                    <th class=\"w110\">To</th>\n                    <th class=\"w150\">Modal Of Type</th>\n                    <th class=\"w150\">Modal Of Travel</th>\n                    <th class=\"w130\">KMs Covered</th>\n                    <th class=\"w110 text-right\">Amount</th>\n                    <th class=\"w110 text-right\">Other Exp.</th>\n                    <th>Remark</th>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let Localexpense of localConveyances;let index=index\">\n                      <td class=\"w160\"> {{Localexpense.visitDate |date:'EEEE, MMMM d, y'}}</td>\n                      <td class=\"w110\">{{Localexpense.from}}</td>\n                      <td class=\"w110\">{{Localexpense.to}}</td>\n                      <td *ngIf=\"Localexpense.modeType==1\" class=\"w150\">SELF</td>\n                      <td *ngIf=\"Localexpense.modeType==2\"class=\"w150\">PUBLIC TRANSPORT</td>\n                      <td *ngIf=\"Localexpense.mode==10\" class=\"w150\">AUTO</td>\n                      <td *ngIf=\"Localexpense.mode==1\" class=\"w150\">BUS</td>\n                      <td *ngIf=\"Localexpense.mode==6\" class=\"w150\">AC-TAXI</td>\n                      <td *ngIf=\"Localexpense.mode==7\" class=\"w150\">NON AC-TAXI</td>\n                      <td *ngIf=\"Localexpense.mode==5\" class=\"w150\">METRO</td>\n                      <td *ngIf=\"Localexpense.mode==9\" class=\"w150\">CAR</td>\n                      <td *ngIf=\"Localexpense.mode==8\" class=\"w150\">BIKE</td>\n                      <td class=\"w130 \">{{Localexpense.distanceKMS}}</td>\n                      <td class=\"w110 text-right\"> &#x20B9; {{Localexpense.amount}}</td>\n                      <td class=\"w130 text-right\"> &#x20B9; {{Localexpense.otherExpense}}</td>\n                      <td>{{Localexpense.remarks}}\n                        <div class=\"action-btns\">\n                          <button mat-button class=\"delete\" (click)=\"removeLocalConvenseList(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              \n            </div>\n          </div>\n          <div class=\"row mt15\">\n            <div class=\"col s12\">\n              <div class=\"cs-file-multiple scroll\">\n                <ul>\n                  <li class=\"w110 pr10\" *ngFor=\"let urlData of urls;let i=index\">\n                    <label>\n                      <img src=\"{{urlData}}\">\n                      <a (click)=\"deleteimg(i)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                    </label>\n                  </li>\n                  <li class=\"w110 pr10\">\n                    <div class=\"cs-file wp100\">\n                      <label>\n                        <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\" multiple>\n                        <i class=\"material-icons add-file-icon\" >add</i>\n                      </label>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sm-table\">\n                <table>\n                  <tr>\n                    <th class=\"text-right\">Local Travel Expense</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">&#x20B9; {{localExp}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Other Type Expense</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">&#x20B9; {{otherLocalExp}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Total</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">&#x20B9; {{totalLocalExp}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"cs-btn mt15 text-right\">\n                <div class=\"in-btn\">\n                  <button mat-raised-button color=\"accent\" (click)=\"localConvense.status=1\" >Save as Draft</button>\n                  <button mat-raised-button color=\"accent\" (click)=\"localConvense.status=2\">Save For Approval</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n      </form>\n      \n      <form *ngIf=\"expenseForm.form==2\" (ngSubmit)=\"f1.form.valid && outTravelExpense()|| setFocus(f1.form)\" #f1=\"ngForm\" novalidate>\n        <div class=\"cs-bill\"  >\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sprate-box pt0\">\n                <div class=\"cs-heading\">\n                  <h2> BASIC INFORMATION {{f1.form.valid}}</h2>\n                </div>\n                <div class=\"from-fields\">\n                  <div class=\"row\">\n                    <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Purpose Of Visit\" type=\"text\" id=\"purposeOfVisit\" name=\"purposeOfVisit\" #purposeOfVisit=\"ngModel\" [(ngModel)]=\"OutStationExpense.purposeOfVisit\"  [ngClass]=\"{'has-error' : purposeOfVisit.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f1.submitted && purposeOfVisit.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"purposeOfVisit.errors.required\">Purpose Of Visit required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"ADVANCE AMOUNT\" type=\"number\" id=\"advanceAmount\" name=\"advanceAmount\" #advanceAmount=\"ngModel\" [(ngModel)]=\"OutStationExpense.advanceAmount\"  [ngClass]=\"{'has-error' : advanceAmount.invalid }\" required>\n                          <!--  -->\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f1.submitted && advanceAmount.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"advanceAmount.errors.required\">Advance Amount is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div class=\"col s4 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <mat-select placeholder=\"Select Senior For Approval\" name=\"expenseSanctioner\" #expenseSanctioner=\"ngModel\" id=\"expenseSanctioner\" [(ngModel)]=\"OutStationExpense.expenseSanctioner\"  required >\n                            <mat-option *ngFor=\"let senior of seniorList\" value={{senior.userId}}>{{senior.userName}}</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f1.submitted && expenseSanctioner.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"expenseSanctioner.errors.required\">Approver is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"collaps flat-collaps mt15\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      TRAVEL ENTITLEMENT\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <mat-select placeholder=\"Mode Of Travel\" name=\"modeOfTravel\" #modeOfTravel=\"ngModel\" [(ngModel)]=\"journyExpense.modeOfTravel\" >\n                                <mat-option value=1>BUS</mat-option>\n                                <mat-option value=2>TRAIN</mat-option>\n                                <mat-option value=3>AIRLINE</mat-option>\n                                <mat-option value=5>TAXI </mat-option>\n                              </mat-select>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s6\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <mat-select placeholder=\"Class\" name=\"class\" #class=\"ngModel\" [(ngModel)]=\"journyExpense.class\">\n                                <mat-option (click)=\"checkValid(journyExpense.class)\"value='AC Buses' *ngIf=\"journyExpense.modeOfTravel==1\" >AC Buses </mat-option>\n                                <mat-option (click)=\"checkValid(journyExpense.class)\"value='Non - AC Buses' *ngIf=\"journyExpense.modeOfTravel==1\">Non - AC Buses</mat-option>\n                                <mat-option (click)=\"checkValid(journyExpense.class)\"value='2A' *ngIf=\"journyExpense.modeOfTravel==2\">2A</mat-option>\n                                <mat-option (click)=\"checkValid(journyExpense.class)\"value='3A' *ngIf=\"journyExpense.modeOfTravel==2\">3A</mat-option>\n                                <mat-option (click)=\"checkValid(journyExpense.class)\"value='SL' *ngIf=\"journyExpense.modeOfTravel==2\">SL</mat-option>\n                                <mat-option (click)=\"checkValid(journyExpense.class)\"value='Economy Class' *ngIf=\"journyExpense.modeOfTravel==3\">Economy Class </mat-option>\n                                <mat-option (click)=\"checkValid(journyExpense.class)\"value='Private' *ngIf=\"journyExpense.modeOfTravel==5\">Private</mat-option>\n                                <mat-option (click)=\"checkValid(journyExpense.class)\"value='Shared' *ngIf=\"journyExpense.modeOfTravel==5\">Shared</mat-option>\n                              </mat-select>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col s4\" *ngIf=\"modeError==1\">\n                        You Are Not Eligable for This Type of Mode\n                      </div>\n                      <div >\n                        <div class=\"row mb0\">\n                          <div class=\"col s12 pl0\">\n                            <div class=\"heading-bg mb0 mt15 mrl24\">\n                              <h2>DEPARTURE</h2>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"row\">\n                          <div class=\"col s4 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput [matDatepicker]=\"nine\"  readonly [max]='currentDate' placeholder=\"Date\" name=\"departureDate\" #departureDate=\"ngModel\" [(ngModel)]=\"journyExpense.departureDate\">\n                                <mat-datepicker-toggle matSuffix [for]=\"nine\"></mat-datepicker-toggle>\n                                <mat-datepicker #nine></mat-datepicker>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s4\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Station\" name=\"departureStation\" #departureStation=\"ngModel\" [(ngModel)]=\"journyExpense.departureStation\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          \n                          <div class=\"col s4\">\n                            <!-- <div class=\"control-field mt14\">\n                              <div class=\"cs-input\">\n                                <input [owlDateTimeTrigger]=\"dt5\" [owlDateTime]=\"dt5\" placeholder=\"Time\" name=\"departureTime\" #departureTime=\"ngModel\" [(ngModel)]=\"journyExpense.departureTime\">\n                                <owl-date-time [pickerType]=\"'timer'\" #dt5></owl-date-time>\n                              </div>\n                            </div> -->\n                            <div class=\"control-field mt14\">\n                              <div class=\"cs-input\">\n                                <!-- required -->\n                                <input placeholder=\"Check In Time\" #departureTime=\"ngModel\" name=\"departureTime\" [(ngModel)]=\"journyExpense.departureTime\" id=\"departureTime\" [format]=\"12\" [ngxTimepicker]=\"default\"  readonly >\n                              </div>\n                            </div>\n                            <ngx-material-timepicker #default></ngx-material-timepicker>\n                            \n                          </div>\n                        </div>\n                        \n                        \n                        <div class=\"row mb0\">\n                          <div class=\"col s12 pl0\">\n                            <div class=\"heading-bg  mb0 mt15\">\n                              <h2>ARRIVAL</h2>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"row\">\n                          <div class=\"col s4\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput [matDatepicker]=\"elevn\" readonly [min]=\"journyExpense.departureDate\" [max]=\"currentDate\" placeholder=\"Date\" name=\"arrivalDate\" #arrivalDate=\"ngModel\" [(ngModel)]=\"journyExpense.arrivalDate\">\n                                <mat-datepicker-toggle matSuffix [for]=\"elevn\"></mat-datepicker-toggle>\n                                <mat-datepicker #elevn></mat-datepicker>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s4\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Station\" name=\"arrivalStation\" #arrivalStation=\"ngModel\" [(ngModel)]=\"journyExpense.arrivalStation\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          \n                          <div class=\"col s4\">\n                            <!-- <div class=\"control-field\">\n                              <div class=\"cs-input mt14\">\n                                <input [owlDateTimeTrigger]=\"dt4\" [owlDateTime]=\"dt4\" placeholder=\"Time\" name=\"arrivalTime\" #arrivalTime=\"ngModel\" [(ngModel)]=\"journyExpense.arrivalTime\">\n                                <owl-date-time [pickerType]=\"'timer'\" #dt4></owl-date-time>\n                              </div>\n                            </div> -->\n                            <div class=\"control-field mt14\">\n                              <div class=\"cs-input\">\n                                <!-- required -->\n                                <input placeholder=\"Check Out Time\" #arrivalTime=\"ngModel\" name=\"arrivalTime\" [(ngModel)]=\"journyExpense.arrivalTime\"  id=\"arrivalTime\" [format]=\"12\" [ngxTimepicker]=\"default1\" readonly >\n                              </div>\n                            </div>\n                            <ngx-material-timepicker #default1></ngx-material-timepicker>\n                            \n                          </div>\n                        </div>\n                        \n                        <mat-divider class=\"left-right-15 mt15\"></mat-divider>\n                        <div class=\"row\">\n                          <div *ngIf=\"journyExpense.mode!=4\" class=\"col s4 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Detail Ticket No\" name=\"ticketNo\" #ticketNo=\"ngModel\" [(ngModel)]=\"journyExpense.ticketNo\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s4 \">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Amount\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"journyExpense.amount\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div  *ngIf=\"journyExpense.mode!=4\" class=\"col s12 mt15 mb15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" [disabled]=\"!journyExpense.departureDate||!journyExpense.departureStation|| !journyExpense.departureTime||!journyExpense.arrivalStation||!journyExpense.arrivalDate||!journyExpense.arrivalTime||!journyExpense.modeOfTravel||!journyExpense.ticketNo||!journyExpense.amount||!journyExpense.class\" (click)=\"addToOutTravelExpense()\">Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n          \n          <div *ngIf=\"tmpJournyExpense.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr>\n                    <th class=\"text-center\">BUS/RAIL/AIR FARE</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div  class=\"table-head  bdrt\">\n                <table> \n                  <tr >\n                    <th class=\"padding0 pt10 text-center\">\n                      DEPARTURE\n                      <table class=\"inner-table bdrt mt10\">\n                        <tr>\n                          <th class=\"text-center\">Date</th>\n                          <th class=\"text-center\">Station</th>\n                          <th class=\"text-center\">Time</th>\n                        </tr>\n                      </table>\n                    </th>\n                    <th class=\"padding0 pt10 text-center\">\n                      ARRIVAL\n                      <table class=\"inner-table bdrt mt10\">\n                        <tr>\n                          <th class=\"text-center\">Date</th>\n                          <th class=\"text-center\">Station</th>\n                          <th class=\"text-center\">Time</th>\n                        </tr>\n                      </table>\n                    </th>\n                    <th class=\"w150 text-center\">Class & Mode Of Travel</th>\n                    <th class=\"w100 text-center\">Status</th>\n                    <th class=\"w150\">Deatil Of Ticket No. / K.M. (PVT. VEHICLE)</th>\n                    <th class=\"w100 text-right\">Amount</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let journy of tmpJournyExpense;let index=index\">\n                      <td class=\"padding0\">\n                        <table class=\"inner-table\">\n                          <tr>\n                            <td class=\"text-center\">{{journy.departureDate |date:'EEEE, MMMM d, y'}}</td>\n                            <td class=\"text-center\">{{journy.departureStation}}</td>\n                            <td class=\"text-center\">{{journy.departureTime }}</td>\n                          </tr>\n                        </table>\n                      </td>\n                      <td class=\"padding0\">\n                        <table class=\"inner-table\">\n                          <tr>\n                            <td class=\"text-center\">{{journy.arrivalDate|date:'EEEE, MMMM d, y'}}</td>\n                            <td class=\"text-center\">{{journy.arrivalStation}}</td>\n                            <td class=\"text-center\">{{journy.arrivalTime }}</td>\n                          </tr>\n                        </table>\n                      </td>\n                      <td class=\"w170 text-center\">\n                        <span *ngIf=\"journy.modeOfTravel==1\"> BUS /</span>\n                        <span *ngIf=\"journy.modeOfTravel==2\"> TRAIN /</span>\n                        <span *ngIf=\"journy.modeOfTravel==3\"> AIRLINE /</span>\n                        <span *ngIf=\"journy.modeOfTravel==5\"> TEXI /</span>\n                        <span >{{journy.class}}</span></td>\n\n                      <td class=\"w100 approved\">Allow</td>\n                      <td *ngIf=\"journy.distanceKMS==null\" class=\"w150\">{{journy.ticketNo}}</td>\n                      <td class=\"w100 text-right\">&#x20B9; {{journy.amount}}\n                        <div class=\"action-btns\">\n                          <button mat-button class=\"delete\" (click)=\"removeOutTravelExpense(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                      </td>\n                    </tr>\n                    \n                    <tr class=\"active-col\">\n                      <td class=\"padding0\">\n                        <table class=\"inner-table\">\n                          <tr>\n                            <td>&nbsp;</td>\n                            <td>&nbsp;</td>\n                            <td>&nbsp;</td>\n                          </tr>\n                        </table>\n                      </td>\n                      <td class=\"padding0\">\n                        <table class=\"inner-table\">\n                          <tr>\n                            <td>&nbsp;</td>\n                            <td>&nbsp;</td>\n                            <td>&nbsp;</td>\n                          </tr>\n                        </table>\n                      </td>\n                      <td class=\"w150 text-center\">&nbsp;</td>\n                      <td class=\"w150 text-center\">&nbsp;</td>\n                      <td class=\"w100\">Total</td>\n                      <td class=\"w100 text-right\">&#x20B9; {{totalOutTravelExp}}</td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \n          \n          <div class=\"collaps flat-collaps mt15\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      HOTEL\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input type=\"text\" placeholder=\"City\" aria-label=\"city\"  name=\"city\" [(ngModel)]=\"Arraycity.city\" (input)=\"cityList(Arraycity.city)\" matInput  [matAutocomplete]=\"city\">\n                                  <mat-autocomplete #city=\"matAutocomplete\" >\n                                    <mat-option (click)=\"selectedCity(city)\" *ngFor=\"let city of cityListArray\" value=\"{{city.city}}\">\n                                      {{city.city}} / {{city.stateName}}\n                                    </mat-option>\n                                  </mat-autocomplete>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput [matDatepicker]=\"thirteens\" readonly [max]='currentDate' placeholder=\"Check In Date\" name=\"checkInDate\" #checkInDate=\"ngModel\" [(ngModel)]=\"outStationHotelExp.checkInDate\">\n                                  <mat-datepicker-toggle matSuffix [for]=\"thirteens\"></mat-datepicker-toggle>\n                                  <mat-datepicker #thirteens></mat-datepicker>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput [matDatepicker]=\"thirteen\" readonly [min]=\"outStationHotelExp.checkInDate\" [max]='currentDate' placeholder=\"Check Out Date\" name=\"checkOutDate\" #checkOutDate=\"ngModel\" [(ngModel)]=\"outStationHotelExp.checkOutDate\">\n                                  <mat-datepicker-toggle matSuffix [for]=\"thirteen\"></mat-datepicker-toggle>\n                                  <mat-datepicker #thirteen></mat-datepicker>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Hotel Name\" name=\"hotelName\" #hotelName=\"ngModel\" [(ngModel)]=\"outStationHotelExp.hotelName\" >\n                                  <!-- name=\"hotelBill\" #hotelBill=\"ngModel\" [(ngModel)]=\"outStationHotelExp.hotelBill\" -->\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Amount\" (input)=\"checkValidAmount(outStationHotelExp.billAmount)\"  name=\"billAmount\" #billAmount=\"ngModel\" [(ngModel)]=\"outStationHotelExp.billAmount\" >\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          <div *ngIf=\"hotelcitydiv==true\">\n                            You Are not eligable for this Amount\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <textarea matInput placeholder=\"Remark\"name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"outStationHotelExp.remarks\" class=\"h168\"></textarea>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div class=\"col s12 mt15 mb15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" [disabled]=\"!outStationHotelExp.checkInDate ||!outStationHotelExp.checkOutDate ||!outStationHotelExp.billAmount || !outStationHotelExp.hotelName || !outStationHotelExp.city || !outStationHotelExp.remarks\" (click)=\"outStationHotelExpList()\">Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n          \n          \n          <div *ngIf=\"tmpoutStationHotelExp.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr>\n                    <th class=\"w150\">City</th>\n                    <th class=\"w120\">Check In Date</th>\n                    <th class=\"w135\">Check Out Date</th>\n                    <th class=\"w160\">Hotel name</th>\n                    <th class=\"w100 text-right\">Amount</th>\n                    <th class=\"w100\">Status</th>\n                    <th>Remark</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\" let hotel of tmpoutStationHotelExp;let index=index\">\n                      <td class=\"w150\">{{hotel.city.city}}</td>\n                      <td class=\"w120\">{{hotel.checkInDate|date:'EEEE, MMMM d, y'}}</td>\n                      <td class=\"w135\">{{hotel.checkOutDate|date:'EEEE, MMMM d, y'}}</td>\n                      <td class=\"w160\">{{hotel.hotelName}}</td>\n                      <td class=\"w100 text-right\">&#x20B9; {{hotel.billAmount}}</td>\n                      <td class=\"w100 approved\" *ngIf=\"hotelCityError==0\" >Allow</td>\n                      <td class=\"w100 reject\" *ngIf=\"hotelCityError==1\" >Not Allow</td>\n                      <td><p>{{hotel.remarks}}</p>\n                        <div class=\"action-btns\">\n                          <button mat-button class=\"delete\" (click)=\"removeOutStationHotelExpense(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                      </td>\n                    </tr>\n                    \n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \n          <div class=\"collaps flat-collaps mt15\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      FOOD\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input type=\"text\" placeholder=\"City\" aria-label=\"city\"  name=\"city\" [(ngModel)]=\"Arraycity.city\" (input)=\"cityList(Arraycity.city)\" matInput  [matAutocomplete]=\"city1\">\n                                  <mat-autocomplete #city1=\"matAutocomplete\" >\n                                    <mat-option (click)=\"selectedFoodExpenseCity(city)\" *ngFor=\"let city of cityListArray\" value=\"{{city.city}}\">\n                                      {{city.city}} / {{city.stateName}}\n                                    </mat-option>\n                                  </mat-autocomplete>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput [matDatepicker]=\"thirteenss\"  placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [max]=\"currentDate\" [(ngModel)]=\"outStationFoodExp.date\">\n                                  <mat-datepicker-toggle matSuffix [for]=\"thirteenss\"></mat-datepicker-toggle>\n                                  <mat-datepicker #thirteenss></mat-datepicker>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Amount\" (input)=\"checkValidFoodAmount(outStationFoodExp.billAmount)\" name=\"billAmount\" #billAmount=\"ngModel\" [(ngModel)]=\"outStationFoodExp.billAmount\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          <div *ngIf=\"foodCityError==1\">\n                            You are not Eligable for this Amount\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <textarea matInput placeholder=\"Remark\" class=\"h100\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"outStationFoodExp.remarks\" ></textarea>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div class=\"col s12 mt15 mb15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"outStationFoodExpList()\" >Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n          \n          <div *ngIf=\"tmpoutStationFoodExp.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr>\n                    <th class=\"w200\">City</th>\n                    <th class=\"w200\">Date</th>\n                    <th class=\"w120\">Status</th>\n                    <th class=\"w150 text-right\">Amount</th>\n                    <th>Remark</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let food of tmpoutStationFoodExp;let index=index\">\n                      <td class=\"w200\">{{food.city}}</td>\n                      <td class=\"w200\">{{food.date|date:'EEEE, MMMM d, y'}}</td>\n                      <td class=\"w120 approved\" *ngIf=\"foodCityError==0\">Allow</td>\n                      <td class=\"w120 reject\" *ngIf=\"foodCityError==1\">Not-Allow</td>\n                      <td class=\"w150 text-right\">&#x20B9; {{food.billAmount}}</td>\n                      <td><p>{{food.remarks}}</p>\n                        <div class=\"action-btns\">\n                          <button mat-button class=\"delete\" (click)=\"removeOutStationFoodExp(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \n          <div class=\"collaps flat-collaps mt15\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      LOCAL CONVENCE\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      <div class=\"row\">\n                        <div class=\"col s2\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <mat-select placeholder=\"Mode Of Travel\" name=\"modeOfTravel\" #modeOfTravel=\"ngModel\" [(ngModel)]=\"outStationLocalExp.modeOfTravel\" >\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=10>AUTO</mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=1>BUS</mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=6>AC TAXI</mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=7>NON-AC TAXI </mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=8>TWO WHEELER </mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=5>METRO </mat-option>\n                              </mat-select>\n                            </mat-form-field>\n                          </div>\n                          <div *ngIf=\"localFareError==1\">\n                            You Are Not Allow This Travel Mode\n                          </div>\n                        </div>\n                        <div class=\"col s2\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput [matDatepicker]=\"fourteen\" readonly [max]='currentDate' placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"outStationLocalExp.date\"> \n                              <mat-datepicker-toggle matSuffix [for]=\"fourteen\"></mat-datepicker-toggle>\n                              <mat-datepicker #fourteen></mat-datepicker>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        <div class=\"col s2 \">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput placeholder=\"From\" name=\"from\" #from=\"ngModel\" [(ngModel)]=\"outStationLocalExp.from\" >\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        <div class=\"col s2 \">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput placeholder=\"To\" name=\"to\" #to=\"ngModel\" [(ngModel)]=\"outStationLocalExp.to\" >\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        <div class=\"col s2\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput placeholder=\"Fare\" name=\"fare\" #fare=\"ngModel\" [(ngModel)]=\"outStationLocalExp.fare\">\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s2\">\n                          <div class=\"cs-btn mt12\">\n                            <div class=\"in-btn\">\n                              <button mat-raised-button color=\"accent\" [disabled]=\"!outStationLocalExp.date||!outStationLocalExp.from||!outStationLocalExp.to||!outStationLocalExp.modeOfTravel||!outStationLocalExp.fare\" (click)=\"outStationLocalExpList()\">Add To List</button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n          \n          <div *ngIf=\"tmpoutStationLocalExp.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr>\n                    <th class=\"w130\">Date</th>\n                    <th class=\"w170 text-center\">From</th>\n                    <th class=\"w170 text-center\">To</th>\n                    <th class=\"w170 text-center\">Mode</th>\n                    \n                    <th>Fare</th>\n                  </tr>\n                </table>\n              </div>\n              \n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let outLocalTravel of tmpoutStationLocalExp;let index=index \">\n                      <td class=\"w130\"> {{outLocalTravel.date|date:'EEEE, MMMM d, y'}}</td>\n                      <td class=\"w170 text-center\">{{outLocalTravel.from}}</td>\n                      <td class=\"w170 text-center\">{{outLocalTravel.to}}</td>\n                      <td class=\"w170 text-center\">\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==10\">AUTO</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==1\">BUS</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==6\">AC TEXI</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==7\">NON-AC TEXI</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==8\">TWO WHEELER</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==5\">METRO</span>\n                      </td>\n                      <td *ngIf=\"localFareError==0\"class=\"w170 text-center approved\">Allow</td>\n                      <td *ngIf=\"localFareError==1 \"class=\"w170 text-center reject\">Not-Allow</td>\n                      <td>&#x20B9; {{outLocalTravel.fare}}\n                        <div class=\"action-btns\">\n                          <button mat-button class=\"delete\" (click)=\"removeOutStatonLocalExp(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"collaps flat-collaps mt15\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      MISC EXPENSE INFORMATION\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <mat-select placeholder=\"Nature of expense\" name=\"miscActivityType\" #miscActivityType=\"ngModel\" [(ngModel)]=\"outStationMiscExp.miscActivityType\" >\n                                    <mat-option value=\"1\">Entertainment Expenses</mat-option>\n                                    <mat-option value=\"2\">Gift To Dealers</mat-option>\n                                    <mat-option value=\"3\">Lunch/Dinner With Team</mat-option>\n                                    <mat-option value=\"4\">Training Program</mat-option>\n                                    <mat-option value=\"5\">Other</mat-option>\n                                  </mat-select>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput [matDatepicker]=\"five\" readonly [max]='currentDate' placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"outStationMiscExp.date\" readonly>\n                                  <mat-datepicker-toggle matSuffix [for]=\"five\"></mat-datepicker-toggle>\n                                  <mat-datepicker #five></mat-datepicker>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Place Of Expense\" name=\"placeOfExpense\" #placeOfExpense=\"ngModel\" [(ngModel)]=\"outStationMiscExp.placeOfExpense\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            \n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Name of Beneficiaries\" name=\"nameOfBeneficiary\" #nameOfBeneficiary=\"ngModel\" [(ngModel)]=\"outStationMiscExp.nameOfBeneficiary\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <!-- <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Reason\" name=\"reason\" #reason=\"ngModel\" [(ngModel)]=\"miscExpenselist.reason\">\n                                </mat-form-field>\n                              </div>\n                            </div> -->\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Amount\" name=\"amount\" #total=\"ngModel\" [(ngModel)]=\"outStationMiscExp.amount\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <textarea matInput placeholder=\"Remark\" class=\"h165\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"outStationMiscExp.remarks\" ></textarea>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        \n                      </div>\n                    </div>\n                    \n                    <div class=\"col s12 mt15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" [disabled]=\"!outStationMiscExp.miscActivityType ||!outStationMiscExp.date ||!outStationMiscExp.placeOfExpense ||!outStationMiscExp.nameOfBeneficiary ||!outStationMiscExp.amount ||!outStationMiscExp.remarks\" (click)=\"addOutMiscExpenseList()\">Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n          \n          <div *ngIf=\"tmpOutTravelMiscExp.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr >\n                    <th class=\"w160\">Date</th>\n                    <th class=\"w180\">Nature Of Exp.</th>\n                    <th class=\"w170\">Beneficiaries Name</th>\n                    <th class=\"w160\">Place Of Expense</th>\n                    <th class=\"w100 text-right\">Total</th>\n                    <th>Remark</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let misc of tmpOutTravelMiscExp\">\n                      <td class=\"w160\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\n                      <!-- <td class=\"w200\">{{misc.miscActivityType}}</td> -->\n                      <td *ngIf=\"misc.miscActivityType==1\" class=\"w180\">Entertainment Expenses</td>\n                      <td *ngIf=\"misc.miscActivityType==2\" class=\"w180\">Gift To Dealers</td>\n                      <td *ngIf=\"misc.miscActivityType==3\" class=\"w180\">Lunch/Dinner With Team</td>\n                      <td *ngIf=\"misc.miscActivityType==4\" class=\"w180\">Training Program</td>\n                      <td *ngIf=\"misc.miscActivityType==5\" class=\"w180\"> Other</td>\n                      <td class=\"w170\">{{misc.nameOfBeneficiary}}</td>\n                      <td class=\"w160\">{{misc.placeOfExpense}}</td>\n                      <td class=\"w100 text-right\"> &#x20B9; {{misc.amount}}</td>\n                      <td> {{misc.remarks}}\n                        <div class=\"action-btns\">\n                          <button mat-button class=\"delete\" (click)=\"removeOutStationMiscExp(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row mt15\">\n            <div class=\"col s12\">\n              <div class=\"cs-file-multiple scroll\">\n                <ul>\n                  <li class=\"w110 pr10\" *ngFor=\"let urlData of urls;let i=index\">\n                    <label>\n                      <img src=\"{{urlData}}\">\n                      <a (click)=\"deleteimg(i)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                    </label>\n                  </li>\n                  <li class=\"w110 pr10\">\n                    <div class=\"cs-file wp100\">\n                      <label>\n                        <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\" multiple>\n                        <i class=\"material-icons add-file-icon\" >add</i>\n                      </label>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          \n          \n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sm-table\">\n                <table>\n                  <tr>\n                    <th class=\"text-right\">OutStation Travel</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">{{totalOutTravelExp |currency: 'INR':true}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">OutStation Hotel Exp.</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">{{totalOutHotelExp|currency: 'INR':true}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">OutStation LOACL CONVENEC</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">{{totalOutLocalExp|currency: 'INR':true}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">OutStation Food Exp.</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">{{totalOutStationFoodExp |currency: 'INR':true}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">OutStation Misc Exp.</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">{{totalOutMiscExp |currency: 'INR':true}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n          \n          <mat-divider class=\"mt15 mb15\"></mat-divider>\n          \n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sm-table\">\n                <table>\n                  <tr>\n                    <th class=\"text-right\">BILL AMOUNT</th>\n                    <th class=\" w30 text-center\">:</th>\n                    <td class=\" w120 text-right\"> {{totalOutStationExp|currency: 'INR':true}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">ADVANCE</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">{{OutStationExpense.advanceAmount|currency: 'INR':true}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">CLAIM</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\"> {{TotalClaimAmount|currency: 'INR':true}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"row\">\n            <div class=\"col s12 mt15\">\n              <div class=\"cs-btn text-right\">\n                <div class=\"in-btn\">\n                  <button mat-raised-button color=\"accent\"(click)=\"OutStationExpense.status=1\" >Save as Draft</button>\n                  <button mat-raised-button color=\"accent\" (click)=\"OutStationExpense.status=2\">Subbmit For Approvel</button>\n                </div>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </form>\n      \n      <form *ngIf=\"expenseForm.form==3\" (ngSubmit)=\"f2.form.valid && promationExpense()|| setFocus(f2.form)\" #f2=\"ngForm\" novalidate>\n        <div class=\"cs-bill\">\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sprate-box pt0\">\n                <div class=\"cs-heading\">\n                  <h2>BASIC INFORMATION</h2>\n                </div>\n                <div class=\"from-fields\">\n                  \n                  <div class=\"row\">\n                    <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"ADVANCE AMOUNT\" type=\"number\" id=\"advanceAmount\" name=\"advanceAmount\" #advanceAmount=\"ngModel\" [(ngModel)]=\"allPromationExpense.advanceAmount\"  [ngClass]=\"{'has-error' : advanceAmount.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f2.submitted && advanceAmount.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"advanceAmount.errors.required\">Purpose Of Visit required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div class=\"col s4 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <mat-select placeholder=\"Select Senior For Approval\" name=\"expenseSanctioner\" #expenseSanctioner=\"ngModel\" id=\"expenseSanctioner\" [(ngModel)]=\"allPromationExpense.expenseSanctioner\" [ngClass]=\"{'has-error' : expenseSanctioner.invalid }\" required >\n                            <mat-option *ngFor=\"let senior of seniorList\" value={{senior.userId}}>{{senior.userName}}</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f2.submitted && expenseSanctioner.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"expenseSanctioner.errors.required\">Advance Amount is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n          </div>\n          \n          \n          \n          <div class=\"collaps flat-collaps mt15\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      SALES PERMOTION ACTIVITY\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\"> \n                      <div class=\"row\">\n                        <div class=\"col s3 pl0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <mat-select placeholder=\"Sales Promotion\" name=\"salesActivityType\" #salesActivityType=\"ngModel\" [(ngModel)]=\"promation_Expense.salesActivityType\">\n                                <mat-option value=\"1\">Mechanic get together</mat-option>\n                                <mat-option value=\"2\">Retailer get together</mat-option>\n                                <mat-option value=\"3\">van Campaign</mat-option>\n                                <mat-option value=\"4\">Stall Campaign</mat-option>\n                                <mat-option value=\"5\">Exhibition Participation</mat-option>\n                                <mat-option value=\"6\">Signboard</mat-option>\n                                <mat-option value=\"7\">Wall/Shop Painting</mat-option>\n                                <mat-option value=\"8\">GiveAways</mat-option>\n                                <mat-option value=\"9\">Printing Of Lesafelts,banners, posters etc.</mat-option>\n                                <!-- <mat-option value=\"10\">Other</mat-option> -->\n                              </mat-select>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        <div class=\"col s3\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput [matDatepicker]=\"two\" readonly [max]='currentDate' placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"promation_Expense.date\">\n                              <mat-datepicker-toggle matSuffix [for]=\"two\"></mat-datepicker-toggle>\n                              <mat-datepicker #two></mat-datepicker>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        <div class=\"col s3\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput placeholder=\"Place Of Activity\" name=\"placeOfActivity\" #placeOfActivity=\"ngModel\" [(ngModel)]=\"promation_Expense.placeOfActivity\" >\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        <div class=\"col s3 pr0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput type=\"number\" placeholder=\"No Of Attendees\" name=\"noOfAttendees\" #noOfAttendees=\"ngModel\" [(ngModel)]=\"promation_Expense.noOfAttendees\">\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Rental Expense\" type=\"number\" name=\"rentalExpenses\" #rentalExpenses=\"ngModel\" [(ngModel)]=\"promation_Expense.rentalExpenses\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Food Expense\"  type=\"number\" name=\"foodExpense\" #foodExpense=\"ngModel\" [(ngModel)]=\"promation_Expense.foodExpense\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Av Aids Expense\"  type=\"number\" name=\"avAidsExpense\" #avAidsExpense=\"ngModel\" [(ngModel)]=\"promation_Expense.avAidsExpense\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Gift Expense\"  type=\"number\" name=\"giftsExpense\" #giftsExpense=\"ngModel\" [(ngModel)]=\"promation_Expense.giftsExpense\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s12 padding0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Misc Expense\"  type=\"number\" name=\"miscExpense\" #miscExpense=\"ngModel\" [(ngModel)]=\"promation_Expense.miscExpense\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <textarea matInput placeholder=\"Remark\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"promation_Expense.remarks\" class=\"h165\"></textarea>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div class=\"col s12 mt15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" (click)=\"addToPromationList()\" type=\"button\">Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n          \n          <div *ngIf=\"pExpenseArray.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr>\n                    <th class=\"w160\">Date</th>\n                    <th>Sales Promotion</th>\n                    <th class=\"w90\">Place of Activity</th>\n                    <th class=\"w100\">No Of Attendees</th>\n                    <th class=\"w100 text-right\">Rental Exp.</th>\n                    <th class=\"w100 text-right\">Food Exp.</th>\n                    <th class=\"w100 text-right\">Av-Aids Exp.</th>\n                    <th class=\"w80 text-right\">Gift Exp.</th>\n                    <th class=\"w90 text-right\">Misc Exp.</th>\n                    <th class=\"w80 text-right\">Total</th>\n                    <th>Remark</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\" let promation of pExpenseArray;let index=index\">\n                      <td class=\"w160\"> {{promation.date |date:'EEEE, MMMM d, y'}}</td>\n                      <!-- <td>{{promation.salesActivityType}}</td> -->\n                      <td *ngIf=\"promation.salesActivityType==1\">Mechanic get together</td>\n                      <td *ngIf=\"promation.salesActivityType==2\"> Retailer get together</td>\n                      <td *ngIf=\"promation.salesActivityType==3\">van Campaign</td>\n                      <td *ngIf=\"promation.salesActivityType==4\">Stall Campaign</td>\n                      <td *ngIf=\"promation.salesActivityType==5\">Exhibition Participation</td>\n                      <td *ngIf=\"promation.salesActivityType==6\">Signboard</td>\n                      <td *ngIf=\"promation.salesActivityType==7\">Wall/Shop Painting</td>\n                      <td *ngIf=\"promation.salesActivityType==8\">GiveAways</td>\n                      <td *ngIf=\"promation.salesActivityType==9\">Printing Of Lesafelts,banners, posters etc.</td>\n                      <td class=\"w90\">{{promation.placeOfActivity}}</td>\n                      <td class=\"w100\">{{promation.noOfAttendees}}</td>\n                      <td class=\"w100 text-right\">&#x20B9; {{promation.rentalExpenses}}</td>\n                      <td class=\"w100 text-right\">&#x20B9; {{promation.foodExpense}}</td>\n                      <td class=\"w100 text-right\">&#x20B9; {{promation.avAidsExpense}}</td>\n                      <td class=\"w80 text-right\"> &#x20B9; {{promation.giftsExpense}}</td>\n                      <td class=\"w90 text-right\">&#x20B9; {{promation.miscExpense}}</td>\n                      <td class=\"w80 text-right\"> &#x20B9; {{promation.total}}</td>\n                      <td> {{promation.remarks}}\n                        <div class=\"action-btns\">\n                          <button mat-button class=\"delete\" (click)=\"removeSalesPromotionalList(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"row mt15\">\n            <div class=\"col s12\">\n              <div class=\"cs-file-multiple scroll\">\n                <ul>\n                  <li class=\"w110 pr10\" *ngFor=\"let urlData of urls;let i=index\">\n                    <label>\n                      <img src=\"{{urlData}}\">\n                      <a (click)=\"deleteimg(i)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                    </label>\n                  </li>\n                  <li class=\"w110 pr10\">\n                    <div class=\"cs-file wp100\">\n                      <label>\n                        <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\" multiple>\n                        <i class=\"material-icons add-file-icon\" >add</i>\n                      </label>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sm-table\">\n                <table>\n                  <tr>\n                    <th class=\"text-right\">Total Rental Exp.</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">&#x20B9; {{totalrentalExp}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Total Food Exp.</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">&#x20B9; {{totalfoodExpense}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Total AV Aids Exp.</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"text-right\">&#x20B9; {{totalavAidsExpense}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Total Gifts Exp.</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">&#x20B9; {{totalgiftsExpense}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Total Misc Exp.</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">&#x20B9; {{totalotherExpense}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Total promational Exp.</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">&#x20B9; {{totalPromationalExp}}</td>\n                  </tr>\n                </table>\n                <table>\n                  <tr>\n                    <th class=\"text-right\">Advance Amount </th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">&#x20B9; {{allPromationExpense.advanceAmount}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Claim Amount</th>\n                    <th class=\"text-center\">:</th>\n                    <td class=\"text-right\">&#x20B9; {{OutStationExpense.claimAmount}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col s12 mt15\">\n              <div class=\"cs-btn text-right\">\n                <div class=\"in-btn\">\n                  <button mat-raised-button color=\"accent\" (click)=\"promotionexpense('1')\">Save</button>\n                  <button mat-raised-button color=\"accent\" (click)=\"promotionexpense('2')\">Save as Draft</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n      </form>\n      \n      <form *ngIf=\"expenseForm.form==4\" (ngSubmit)=\"f3.form.valid && miscExpense()|| setFocus(f3.form)\" #f3=\"ngForm\" novalidate>\n        <div class=\"cs-bill\" >\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sprate-box pt0\">\n                <div class=\"cs-heading\">\n                  <h2>BASIC INFORMATION</h2>\n                </div>\n                <div class=\"from-fields\">\n                  \n                  <div class=\"row\">\n                    <div class=\"col s4 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Purpose Of Visit\" type=\"text\" id=\"purposeOfVisit\" name=\"purposeOfVisit\" #purposeOfVisit=\"ngModel\" [(ngModel)]=\"misc_Expense.purposeOfVisit\" [ngClass]=\"{'has-error' : purposeOfVisit.invalid }\"  required >\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f3.submitted && purposeOfVisit.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"purposeOfVisit.errors.required\">Purpose of Visit required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"ADVANCE AMOUNT\" type=\"number\" id=\"advanceAmount\" name=\"advanceAmount\" #advanceAmount=\"ngModel\" [(ngModel)]=\"misc_Expense.advanceAmount\"  [ngClass]=\"{'has-error' : advanceAmount.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f3.submitted && advanceAmount.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"advanceAmount.errors.required\">Purpose Of Visit required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div class=\"col s4 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <mat-select placeholder=\"Select Senior For Approval\" name=\"expenseSanctioner\" #expenseSanctioner=\"ngModel\" id=\"expenseSanctioner\" [(ngModel)]=\"misc_Expense.expenseSanctioner\" [ngClass]=\"{'has-error' : expenseSanctioner.invalid }\" required >\n                            <mat-option *ngFor=\"let senior of seniorList\" value={{senior.userId}}>{{senior.userName}}</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f3.submitted && expenseSanctioner.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"expenseSanctioner.errors.required\">Advance Amount is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \n          \n          <div class=\"collaps flat-collaps mt15\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      MISC EXPENSE INFORMATION\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <mat-select placeholder=\"Nature of expense\" name=\"miscActivityType\" #miscActivityType=\"ngModel\" [(ngModel)]=\"miscExpenselist.miscActivityType\" >\n                                    <mat-option value=\"1\">Entertainment Expenses</mat-option>\n                                    <mat-option value=\"2\">Gift To Dealers</mat-option>\n                                    <mat-option value=\"3\">Lunch/Dinner With Team</mat-option>\n                                    <mat-option value=\"4\">Training Program</mat-option>\n                                    <mat-option value=\"5\">Other</mat-option>\n                                  </mat-select>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput [matDatepicker]=\"five\" readonly [max]='currentDate' placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"miscExpenselist.date\" readonly>\n                                  <mat-datepicker-toggle matSuffix [for]=\"five\"></mat-datepicker-toggle>\n                                  <mat-datepicker #five></mat-datepicker>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Place Of Expense\" name=\"placeOfExpense\" #placeOfExpense=\"ngModel\" [(ngModel)]=\"miscExpenselist.placeOfExpense\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            \n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Name of Beneficiaries\" name=\"nameOfBeneficiary\" #nameOfBeneficiary=\"ngModel\" [(ngModel)]=\"miscExpenselist.nameOfBeneficiary\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Amount\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"miscExpenselist.amount\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <textarea matInput placeholder=\"Remark\" class=\"h165\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"miscExpenselist.remarks\" ></textarea>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        \n                      </div>\n                    </div>\n                    \n                    <div class=\"col s12 mt15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" [disabled]=\"!miscExpenselist.miscActivityType ||!miscExpenselist.date ||!miscExpenselist.placeOfExpense ||!miscExpenselist.nameOfBeneficiary ||!miscExpenselist.amount ||!miscExpenselist.remarks\" (click)=\"addToMiscExpenseList()\">Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n          \n          <div *ngIf=\"msExpArray.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr >\n                    <th class=\"w160\">Date</th>\n                    <th class=\"w180\">Nature Of Exp.</th>\n                    <th class=\"w170\">Beneficiaries Name</th>\n                    <th class=\"w160\">Place Of Expense</th>\n                    <th class=\"w100 text-right\">amount</th>\n                    <th>Remark</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let misc of msExpArray;let index=index\">\n                      <td class=\"w160\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\n                      <!-- <td class=\"w200\">{{misc.miscActivityType}}</td> -->\n                      <td *ngIf=\"misc.miscActivityType==1\" class=\"w180\">Entertainment Expenses</td>\n                      <td *ngIf=\"misc.miscActivityType==2\" class=\"w180\">Gift To Dealers</td>\n                      <td *ngIf=\"misc.miscActivityType==3\" class=\"w180\">Lunch/Dinner With Team</td>\n                      <td *ngIf=\"misc.miscActivityType==4\" class=\"w180\">Training Program</td>\n                      <td *ngIf=\"misc.miscActivityType==5\" class=\"w180\"> Other</td>\n                      <td class=\"w170\">{{misc.nameOfBeneficiary}}</td>\n                      <td class=\"w160\">{{misc.placeOfExpense}}</td>\n                      <td class=\"w100 text-right\"> &#x20B9; {{misc.amount}}</td>\n                      <td> {{misc.remarks}}\n                        <div class=\"action-btns\">\n                          <button mat-button class=\"delete\" (click)=\"removeMiscExpenseList(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row mt15\">\n            <div class=\"col s12\">\n              <div class=\"cs-file-multiple scroll\">\n                <ul>\n                  <li class=\"w110 pr10\" *ngFor=\"let urlData of urls;let i=index\">\n                    <label>\n                      <img src=\"{{urlData}}\">\n                      <a (click)=\"deleteimg(i)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                    </label>\n                  </li>\n                  <li class=\"w110 pr10\">\n                    <div class=\"cs-file wp100\">\n                      <label>\n                        <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\" multiple>\n                        <i class=\"material-icons add-file-icon\" >add</i>\n                      </label>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sm-table\">\n                <table>\n                  <tr>\n                    <th class=\"text-right\">Total Misc Exp.</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">&#x20B9; {{totalMiscExp}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Advance Amount</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">&#x20B9; {{misc_Expense.advanceAmount}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">Claim Amount</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">&#x20B9; {{misc_Expense.claimAmount}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"cs-btn mt15 text-right\">\n                <div class=\"in-btn\">\n                  <button mat-raised-button color=\"accent\" (click)=\"allmiscexpense('1')\">Save as Draft</button>\n                  <button mat-raised-button color=\"accent\" (click)=\"allmiscexpense('2')\">Save For Approvel</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n      </form>\n      \n    </div>\n  </div>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/expense/add-expense/add-expense.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/expense/add-expense/add-expense.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvYWRkLWV4cGVuc2UvYWRkLWV4cGVuc2UuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/expense/add-expense/add-expense.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/expense/add-expense/add-expense.component.ts ***!
  \**************************************************************/
/*! exports provided: AddExpenseComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddExpenseComponent", function() { return AddExpenseComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_6__);







// import { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';
var AddExpenseComponent = /** @class */ (function () {
    function AddExpenseComponent(el, service, route, toast, platformId) {
        this.el = el;
        this.service = service;
        this.route = route;
        this.toast = toast;
        this.platformId = platformId;
        this.data = {};
        this.user = {};
        this.expenseForm = {};
        this.localConvense = {};
        this.localHQExpense = {};
        this.localConveyances = [];
        this.userInformation = {};
        this.allPromationExpense = {};
        this.promation_Expense = {};
        this.pExpenseArray = [];
        this.misc_Expense = {};
        this.miscExpenselist = {};
        this.msExpArray = [];
        this.OutStationExpense = {};
        this.journyExpense = {};
        this.outStationHotelExp = {};
        this.outStationLocalExp = {};
        this.allowanceList = [];
        this.loader = false;
        this.outStationMiscExp = {};
        this.currentDate = new Date().toJSON().split('T')[0];
        //   files: FileList; 
        //   filestring: string; 
        //   uploadFile(event) { 
        //       this.files = event.target.files; 
        //       var reader = new FileReader(); 
        //       reader.onload = this._handleReaderLoaded.bind(this); 
        //       reader.readAsBinaryString(this.files[0]); 
        //   } 
        //   _handleReaderLoaded(readerEvt) { 
        //       var binaryString = readerEvt.target.result; 
        //       this.filestring = btoa(binaryString);
        //       this.data.attachment=this.filestring;
        //       console.log(this.data);
        //  } 
        this.seniorList = [];
        this.urls = [];
        this.selectedFile = [];
        this.cityListArray = [];
        this.Arraycity = {};
        this.hotelCity = {};
        this.hotelcitydiv = false;
        this.hotelCityError = 0;
        this.foodCityError = 0;
        this.modeError = 0;
        this.localFareError = 0;
        this.tmpOutTravelMiscExp = [];
        this.totalOutMiscExp = 0;
        this.tmpJournyExpense = [];
        this.tmpoutStationHotelExp = [];
        this.tmpoutStationLocalExp = [];
        this.outStationFoodExp = {};
        this.tmpoutStationFoodExp = [];
        this.totalOutStationFoodExp = 0;
        this.totalOutTravelExp = 0;
        this.totalOutHotelExp = 0;
        this.totalOutLocalExp = 0;
        this.totalOutStationExp = 0;
        this.TotalClaimAmount = 0;
        this.readonlyArea = false;
        this.otherLocalExp = 0;
        this.localExp = 0;
        this.totalLocalExp = 0;
        this.totalrentalExp = 0;
        this.totalfoodExpense = 0;
        this.totalavAidsExpense = 0;
        this.totalgiftsExpense = 0;
        this.totalotherExpense = 0;
        this.totalPromationalExp = 0;
        this.totalMiscExp = 0;
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.journyExpense.mode = 2;
        this.OutStationExpense.claimAmount = 0;
        this.OutStationExpense.advanceAmount = 0;
        this.designation = this.user.data.salesUser.designation;
        console.log(this.designation);
        this.misc_Expense.claimAmount = 0;
        this.misc_Expense.advanceAmount = 0;
        if (this.designation != 0) {
            this.getAllowanceList(this.designation);
        }
        this.getSeniorList();
    }
    AddExpenseComponent.prototype.ngOnInit = function () {
    };
    AddExpenseComponent.prototype.getSeniorList = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData("", "getseniors/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.seniorList = result['data'];
            }
        });
    };
    AddExpenseComponent.prototype.insertImage = function (data) {
        var _this = this;
        console.log(data);
        //  this.selectedFile=[];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        console.log(this.selectedFile);
        //  setTimeout(() => {
        //    this.Insert_Image();
        //  }, 500);
    };
    // for(var i=0; i<this.selectedFile.length; i++)
    // {
    //     this.giftdata=new FormData;
    //     this.giftdata.action=1;
    //     this.giftdata.binaryData=this.urls[i];
    //     this.giftdata.documentType=3;
    //     this.giftdata.documentName=this.gift_form.name;
    //     this.giftdata.referenceId=0;
    //     this.giftdata.fileName="image"+i+".jpg",this.selectedFile[i];
    //     console.log(this.giftdata.documentName);
    //     this.gift_form.documents[i] = JSON.parse(JSON.stringify(this.giftdata));
    // }
    AddExpenseComponent.prototype.deleteimg = function (index) {
        this.urls.splice(index, 1);
        this.selectedFile.splice(index, 1);
    };
    AddExpenseComponent.prototype.setFocus = function (form) {
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_5__["isPlatformBrowser"])(this.platformId)) {
                        jquery__WEBPACK_IMPORTED_MODULE_6__('#' + key).focus();
                    }
                    break;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
    };
    AddExpenseComponent.prototype.getAllowanceList = function (designation) {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ designation: designation }, "allowance/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.allowanceList = result['data'][0];
            }
        });
    };
    AddExpenseComponent.prototype.cityList = function (city) {
        var _this = this;
        // this.loader=true;
        console.log(city);
        this.service.fileData("", "city/list/" + city).subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.cityListArray = result['data'];
            }
        });
    };
    AddExpenseComponent.prototype.selectedCity = function (city) {
        this.hotelCity = city;
        // let value={stateMasterId:city.stateMasterId,city:city.city+'/'+city.stateName+'/'+city.districtName};
        this.outStationHotelExp.city = city.city + '/' + city.stateName + '/' + city.districtName;
        this.outStationHotelExp.stateMasterId = city.stateMasterId;
        console.log(this.outStationHotelExp.city);
    };
    AddExpenseComponent.prototype.selectedFoodExpenseCity = function (city) {
        this.hotelCity = city;
        var value = { stateMasterId: city.stateMasterId, city: city.city + '/' + city.stateName + '/' + city.districtName };
        console.log(value);
        this.outStationFoodExp.city = city.city + '/' + city.stateName + '/' + city.districtName;
        this.outStationFoodExp.stateMasterId = city.stateMasterId;
    };
    AddExpenseComponent.prototype.checkValidAmount = function (amount) {
        this.hotelCityError = 0;
        this.hotelcitydiv = true;
        if (this.hotelCity.category == 'A') {
            if (parseInt(amount) > parseInt(this.allowanceList.lodgingAllowanceA)) {
                this.hotelCityError = 1;
                this.hotelcitydiv = true;
            }
        }
        if (this.hotelCity.category == 'B') {
            if (parseInt(amount) > parseInt(this.allowanceList.lodgingAllowanceB)) {
                this.hotelcitydiv = true;
                this.hotelCityError = 1;
            }
        }
        if (this.hotelCity.category == 'C') {
            if (parseInt(amount) > parseInt(this.allowanceList.lodgingAllowanceC)) {
                this.hotelcitydiv = true;
                this.hotelCityError = 1;
            }
        }
        if (this.hotelCity.category == 'A+') {
            if (parseInt(amount) > parseInt(this.allowanceList.lodgingAllowanceAPlus)) {
                this.hotelcitydiv = true;
                this.hotelCityError = 1;
            }
        }
        console.log(this.hotelCityError);
    };
    AddExpenseComponent.prototype.checkValidFoodAmount = function (amount) {
        this.foodCityError = 0;
        console.log("food");
        if (this.hotelCity.category == 'A') {
            if (parseInt(amount) > parseInt(this.allowanceList.foodAllowanceA)) {
                this.foodCityError = 1;
            }
        }
        if (this.hotelCity.category == 'B') {
            if (parseInt(amount) > parseInt(this.allowanceList.foodAllowanceA)) {
                this.foodCityError = 1;
            }
        }
        if (this.hotelCity.category == 'C') {
            if (parseInt(amount) > parseInt(this.allowanceList.foodAllowanceA)) {
                this.foodCityError = 1;
            }
        }
        if (this.hotelCity.category == 'A+') {
            if (parseInt(amount) > parseInt(this.allowanceList.foodAllowanceAPlus)) {
                this.foodCityError = 1;
            }
        }
        console.log(this.foodCityError);
    };
    AddExpenseComponent.prototype.checkValid = function (modeType) {
        console.log(modeType);
        this.modeError = 0;
        if (modeType == 'AC Buses') {
            if (this.allowanceList.travelBusAC == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'Non - AC Buses') {
            if (this.allowanceList.travelBusNonAC == false) {
                this.modeError = 1;
            }
        }
        if (modeType == '2A') {
            if (this.allowanceList.travelTrain2A == false) {
                this.modeError = 1;
            }
        }
        if (modeType == '3A') {
            if (this.allowanceList.travelTrain3A == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'SL') {
            if (this.allowanceList.travelTrainSL == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'Private') {
            if (this.allowanceList.travelTaxiPrivate == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'Economy Class') {
            if (this.allowanceList.travelTaxiShared == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'Shared') {
            if (this.allowanceList.flightEconomyClass == false) {
                this.modeError = 1;
            }
            console.log(this.modeError);
        }
    };
    AddExpenseComponent.prototype.checkValidLocalFare = function (modeType) {
        this.localFareError = 0;
        if (modeType == '1') {
            if (this.allowanceList.localAuto != true) {
                this.localFareError = 1;
            }
        }
        if (modeType == '2') {
            if (this.allowanceList.localBus != true) {
                this.localFareError = 1;
            }
        }
        if (modeType == '3') {
            if (this.allowanceList.localTaxiAC != true) {
                this.localFareError = 1;
            }
        }
        if (modeType == '4') {
            if (this.allowanceList.localTaxiNonAC != true) {
                this.localFareError = 1;
            }
        }
        if (modeType == '5') {
            if (this.allowanceList.localTwoWheeler != true) {
                this.localFareError = 1;
            }
        }
    };
    AddExpenseComponent.prototype.mylocalexpense = function (status) {
        this.localConvense.status = status;
    };
    AddExpenseComponent.prototype.myoutstationexpense = function (status) {
        console.log(status);
        this.OutStationExpense.status = status;
    };
    AddExpenseComponent.prototype.promotionexpense = function (status) {
        this.allPromationExpense.status = status;
    };
    AddExpenseComponent.prototype.allmiscexpense = function (status) {
        this.misc_Expense.status = status;
    };
    AddExpenseComponent.prototype.outTravelExpense = function () {
        var _this = this;
        this.OutStationExpense.outStationExpense = { outStationHotelExp: this.tmpoutStationHotelExp, outStationLocalExp: this.tmpoutStationLocalExp, outStationTravelExp: this.tmpJournyExpense, foodExpenses: this.tmpoutStationFoodExp, miscExpenses: this.tmpOutTravelMiscExp };
        this.OutStationExpense.userId = this.userId;
        this.OutStationExpense.department = this.userInformation.userType;
        this.OutStationExpense.expenseType = this.expenseForm.form;
        // this.OutStationExpense.expenseSanctioner=this.expenseForm.expenseSanctioner;
        this.OutStationExpense.claimAmount = this.TotalClaimAmount;
        this.OutStationExpense.actualExpenseAmount = this.totalOutStationExp;
        console.log(this.OutStationExpense);
        this.loader = true;
        this.service.fetchData(this.OutStationExpense, "expense/add").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.uploadBillAttechment(result['data']);
                _this.toast.openSucess("Expense", "Added SuccessFully");
                _this.route.navigate(['/expense-list']);
            }
        });
    };
    AddExpenseComponent.prototype.uploadBillAttechment = function (id) {
        var _this = this;
        var documentData = {};
        console.log(this.urls);
        var value = [];
        for (var j = 0; j < this.urls.length; j++) {
            documentData = new FormData;
            documentData['action'] = 1;
            documentData['binaryData'] = this.urls[j];
            documentData['documentType'] = 4;
            documentData['documentName'] = this.selectedFile[0].name;
            documentData['referenceId'] = id;
            this.loader = true;
            for (var i = 0; i < this.selectedFile.length; i++) {
                if (this.selectedFile[i].type == 'application/pdf') {
                    documentData['fileName'] = "document" + i + ".pdf", this.selectedFile[i];
                }
                else {
                    documentData['fileName'] = "document" + i + ".jpg", this.selectedFile[i];
                }
            }
            value.push(documentData);
        }
        console.log(documentData);
        console.log(value);
        this.service.fetchData(value, "document/update").subscribe(function (resp) {
            console.log(resp);
            if (resp) {
                _this.loader = false;
                _this.toast.openSucess('Document Added Sucessfully', '');
            }
        });
    };
    AddExpenseComponent.prototype.addOutMiscExpenseList = function () {
        this.tmpOutTravelMiscExp.push(this.outStationMiscExp);
        this.outStationMiscExp = {};
        this.calculateOutMiscExp(this.tmpOutTravelMiscExp);
    };
    AddExpenseComponent.prototype.removeOutStationMiscExp = function (index) {
        this.tmpOutTravelMiscExp.splice(index, 1);
        this.calculateOutMiscExp(this.tmpOutTravelMiscExp);
    };
    AddExpenseComponent.prototype.calculateOutMiscExp = function (miscExp) {
        if (miscExp === void 0) { miscExp = []; }
        this.totalOutMiscExp = 0;
        for (var i = 0; i < miscExp.length; i++) {
            this.totalOutMiscExp = parseInt(this.totalOutMiscExp) + parseInt(miscExp[i].amount);
        }
        console.log(this.totalOutMiscExp);
    };
    AddExpenseComponent.prototype.addToOutTravelExpense = function () {
        console.log(this.journyExpense);
        this.tmpJournyExpense.push(this.journyExpense);
        console.log(this.tmpJournyExpense);
        this.calculateOutTravelExpese(this.tmpJournyExpense);
        this.journyExpense = {};
    };
    AddExpenseComponent.prototype.removeOutTravelExpense = function (index) {
        this.tmpJournyExpense.splice(index, 1);
        this.calculateOutTravelExpese(this.tmpJournyExpense);
    };
    AddExpenseComponent.prototype.outStationHotelExpList = function () {
        console.log(this.outStationHotelExp);
        // this.outStationHotelExp.total=parseInt(this.outStationHotelExp.hotelBill)+parseInt(this.outStationHotelExp.fixedDA)+parseInt(this.outStationHotelExp.foodExpense)+parseInt(this.outStationHotelExp.otherExpense);
        this.tmpoutStationHotelExp.push(this.outStationHotelExp);
        console.log(this.tmpoutStationHotelExp);
        this.calculateOutHotelExp(this.tmpoutStationHotelExp);
        this.outStationHotelExp = {};
        this.Arraycity.city = '';
        this.hotelcitydiv = false;
    };
    AddExpenseComponent.prototype.removeOutStationHotelExpense = function (index) {
        this.tmpoutStationHotelExp.splice(index, 1);
        this.calculateOutHotelExp(this.tmpoutStationHotelExp);
    };
    AddExpenseComponent.prototype.outStationLocalExpList = function () {
        console.log(this.outStationLocalExp);
        this.tmpoutStationLocalExp.push(this.outStationLocalExp);
        console.log(this.tmpoutStationLocalExp);
        this.calculateOutStationLocalExp(this.tmpoutStationLocalExp);
        this.outStationLocalExp = {};
    };
    AddExpenseComponent.prototype.removeOutStatonLocalExp = function (index) {
        this.tmpoutStationLocalExp.splice(index, 1);
        this.calculateOutStationLocalExp(this.tmpoutStationLocalExp);
    };
    AddExpenseComponent.prototype.outStationFoodExpList = function () {
        console.log(this.outStationFoodExp);
        this.tmpoutStationFoodExp.push(this.outStationFoodExp);
        this.calculateOutStationFood(this.tmpoutStationFoodExp);
        this.outStationFoodExp = {};
        this.Arraycity.city = '';
    };
    AddExpenseComponent.prototype.removeOutStationFoodExp = function (index) {
        this.tmpoutStationFoodExp.splice(index, 1);
        this.calculateOutStationFood(this.tmpoutStationFoodExp);
    };
    AddExpenseComponent.prototype.calculateOutStationFood = function (foodExpense) {
        this.totalOutStationFoodExp = 0;
        for (var i = 0; i < foodExpense.length; i++) {
            this.totalOutStationFoodExp = parseInt(this.totalOutStationFoodExp) + parseInt(foodExpense[i].billAmount);
        }
        console.log(this.totalOutStationFoodExp);
        this.calculateTotalOutStationExp();
    };
    AddExpenseComponent.prototype.calculateOutTravelExpese = function (outTravelExpenseArray) {
        this.totalOutTravelExp = 0;
        for (var i = 0; i < outTravelExpenseArray.length; i++) {
            this.totalOutTravelExp = parseInt(this.totalOutTravelExp) + parseInt(outTravelExpenseArray[i].amount);
        }
        this.calculateTotalOutStationExp();
    };
    AddExpenseComponent.prototype.calculateOutHotelExp = function (outHotelExpArray) {
        this.totalOutHotelExp = 0;
        for (var i = 0; i < outHotelExpArray.length; i++) {
            this.totalOutHotelExp = parseInt(this.totalOutHotelExp) + parseInt(outHotelExpArray[i].billAmount);
        }
        this.calculateTotalOutStationExp();
    };
    AddExpenseComponent.prototype.calculateOutStationLocalExp = function (OutstationTravelExpArray) {
        this.totalOutLocalExp = 0;
        for (var i = 0; i < OutstationTravelExpArray.length; i++) {
            this.totalOutLocalExp = parseInt(this.totalOutLocalExp) + parseInt(OutstationTravelExpArray[i].fare);
        }
        this.calculateTotalOutStationExp();
    };
    AddExpenseComponent.prototype.calculateTotalOutStationExp = function () {
        this.totalOutStationExp = parseInt(this.totalOutTravelExp) + parseInt(this.totalOutHotelExp) + parseInt(this.totalOutLocalExp) + parseInt(this.totalOutStationFoodExp) + parseInt(this.totalOutMiscExp);
        if (parseInt(this.totalOutStationExp) > parseInt(this.OutStationExpense.advanceAmount)) {
            this.TotalClaimAmount = parseInt(this.totalOutStationExp) - parseInt(this.OutStationExpense.advanceAmount);
        }
    };
    AddExpenseComponent.prototype.LocalConvenseExpense = function () {
        var _this = this;
        this.localConvense.localHQExpense = { "localConveyances": this.localConveyances };
        this.localConvense.userId = this.userId;
        this.localConvense.department = this.userInformation.userType;
        this.localConvense.expenseType = this.expenseForm.form;
        // this.localConvense.expenseSanctioner=this.expenseForm.expenseSanctioner;
        this.localConvense.claimAmount = this.totalLocalExp;
        this.localConvense.actualExpenseAmount = this.totalLocalExp;
        console.log(this.localConvense);
        this.loader = true;
        this.service.fetchData(this.localConvense, "expense/add").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.uploadBillAttechment(result['data']);
                _this.route.navigate(['/expense-list']);
                _this.toast.openSucess("Expense", "Added SuccessFully");
            }
        });
    };
    AddExpenseComponent.prototype.calculateAmount = function (mode, km) {
        console.log(this.allowanceList);
        if (mode == 9) {
            this.localHQExpense.amount = parseFloat(this.allowanceList.selfCarPerKM) * parseFloat(km);
        }
        if (mode == 8) {
            this.localHQExpense.amount = parseFloat(this.allowanceList.selfBikePerKM) * parseFloat(km);
        }
    };
    AddExpenseComponent.prototype.readonlyValue = function (value) {
        if (value == 1) {
            this.readonlyArea = true;
        }
        if (value == 2) {
            this.readonlyArea = false;
        }
    };
    AddExpenseComponent.prototype.addToLocalConvenseList = function () {
        console.log(this.localHQExpense);
        this.localConveyances.push(this.localHQExpense);
        this.localHQExpense = {};
        this.calculateLocalExpense(this.localConveyances);
        console.log(this.localConveyances);
    };
    AddExpenseComponent.prototype.removeLocalConvenseList = function (index) {
        this.localConveyances.splice(index, 1);
        this.calculateLocalExpense(this.localConveyances);
    };
    AddExpenseComponent.prototype.calculateLocalExpense = function (localExpArray) {
        this.otherLocalExp = 0;
        this.localExp = 0;
        this.totalLocalExp = 0;
        for (var i = 0; i < localExpArray.length; i++) {
            this.otherLocalExp = parseInt(this.otherLocalExp) + parseInt(localExpArray[i].otherExpense);
            this.localExp = parseInt(this.localExp) + parseInt(localExpArray[i].amount);
        }
        this.totalLocalExp = parseInt(this.otherLocalExp) + parseInt(this.localExp);
    };
    AddExpenseComponent.prototype.promationExpense = function () {
        var _this = this;
        this.allPromationExpense.salesPromotionExpense = { "salesPromotionExps": this.pExpenseArray };
        this.allPromationExpense.department = this.userInformation.userType;
        this.allPromationExpense.userId = this.userId;
        this.allPromationExpense.expenseType = this.expenseForm.form;
        // this.allPromationExpense.expenseSanctioner=this.expenseForm.expenseSanctioner;
        // this.allPromationExpense.claimAmount=this.totalPromationalExp;
        this.allPromationExpense.actualExpenseAmount = this.totalPromationalExp;
        console.log(this.allPromationExpense);
        this.loader = true;
        this.service.fetchData(this.allPromationExpense, "expense/add").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.uploadBillAttechment(result['data']);
                _this.route.navigate(['/expense-list']);
                _this.toast.openSucess("Expense", "Added SuccessFully");
            }
        });
    };
    AddExpenseComponent.prototype.addToPromationList = function () {
        this.promation_Expense.total = parseInt(this.promation_Expense.rentalExpenses) + parseInt(this.promation_Expense.foodExpense) + parseInt(this.promation_Expense.avAidsExpense) + parseInt(this.promation_Expense.giftsExpense) + parseInt(this.promation_Expense.miscExpense);
        this.pExpenseArray.push(this.promation_Expense);
        console.log(this.pExpenseArray);
        this.calculatePromationalExpense(this.pExpenseArray);
        this.promation_Expense = {};
    };
    AddExpenseComponent.prototype.removeSalesPromotionalList = function (index) {
        this.pExpenseArray.push(index, 1);
        this.calculatePromationalExpense(this.pExpenseArray);
    };
    AddExpenseComponent.prototype.calculatePromationalExpense = function (promationalExpArray) {
        this.totalrentalExp = 0;
        this.totalfoodExpense = 0;
        this.totalavAidsExpense = 0;
        this.totalgiftsExpense = 0;
        this.totalotherExpense = 0;
        this.totalPromationalExp = 0;
        for (var i = 0; i < promationalExpArray.length; i++) {
            this.totalrentalExp = parseInt(this.totalrentalExp) + parseInt(promationalExpArray[i].rentalExpenses);
            this.totalfoodExpense = parseInt(this.totalfoodExpense) + parseInt(promationalExpArray[i].foodExpense);
            this.totalavAidsExpense = parseInt(this.totalavAidsExpense) + parseInt(promationalExpArray[i].avAidsExpense);
            this.totalgiftsExpense = parseInt(this.totalgiftsExpense) + parseInt(promationalExpArray[i].giftsExpense);
            this.totalotherExpense = parseInt(this.totalotherExpense) + parseInt(promationalExpArray[i].miscExpense);
        }
        this.totalPromationalExp = parseInt(this.totalrentalExp) + parseInt(this.totalfoodExpense) + parseInt(this.totalavAidsExpense) + parseInt(this.totalgiftsExpense) + parseInt(this.totalotherExpense);
        if (parseInt(this.totalPromationalExp) > parseInt(this.allPromationExpense.advanceAmount)) {
            this.allPromationExpense.claimAmount = parseInt(this.totalPromationalExp) - parseInt(this.allPromationExpense.advanceAmount);
        }
    };
    AddExpenseComponent.prototype.miscExpense = function () {
        var _this = this;
        this.misc_Expense.miscExpense = { "miscExp": this.msExpArray };
        this.misc_Expense.department = this.userInformation.userType;
        this.misc_Expense.userId = this.userId;
        this.misc_Expense.expenseType = this.expenseForm.form;
        // this.misc_Expense.expenseSanctioner=this.expenseForm.expenseSanctioner;
        this.misc_Expense.actualExpenseAmount = this.totalMiscExp;
        // this.misc_Expense.claimAmount=this.OutStationExpense.claimAmount;
        console.log(this.misc_Expense);
        this.loader = true;
        this.service.fetchData(this.misc_Expense, "expense/add").subscribe(function (result) {
            console.log(result);
            _this.loader;
            if (result['status'] == 'Success') {
                _this.uploadBillAttechment(result['data']);
                _this.route.navigate(['/expense-list']);
                _this.toast.openSucess("Expense", "Added SuccessFully");
            }
        });
    };
    AddExpenseComponent.prototype.addToMiscExpenseList = function () {
        this.msExpArray.push(this.miscExpenselist);
        this.miscExpenselist = {};
        this.calculateMiscExp(this.msExpArray);
        console.log(this.msExpArray);
    };
    AddExpenseComponent.prototype.removeMiscExpenseList = function (index) {
        this.msExpArray.splice(index, 1);
        this.calculateMiscExp(this.msExpArray);
    };
    AddExpenseComponent.prototype.calculateMiscExp = function (miscExpenseArray) {
        this.totalMiscExp = 0;
        this.misc_Expense.claimAmount = 0;
        for (var i = 0; i < miscExpenseArray.length; i++) {
            this.totalMiscExp = parseInt(this.totalMiscExp) + parseInt(miscExpenseArray[i].amount);
        }
        if (parseInt(this.totalMiscExp) > parseInt(this.misc_Expense.advanceAmount)) {
            this.misc_Expense.claimAmount = parseInt(this.totalMiscExp) - parseInt(this.misc_Expense.advanceAmount);
        }
    };
    AddExpenseComponent.prototype.openExpenseForm = function () {
        if (this.userType == 1) {
            this.userInformation.userName = this.user.data.userName;
            this.userInformation.userType = 'System User';
            if (this.userRole == 1) {
                this.userInformation.role = 'Admin';
            }
            else if (this.userRole == 2) {
                this.userInformation.role = 'Human Resource';
            }
            else if (this.userRole == 3) {
                this.userInformation.role = 'Accounts';
            }
            else if (this.userRole == 4) {
                this.userInformation.role = 'Marketing Co-ordinator';
            }
            else if (this.userRole == 5) {
                this.userInformation.role = 'Business Head';
            }
        }
        else if (this.userType == 2) {
            this.userInformation.userName = this.user.data.userName;
            this.userInformation.userType = 'Sales User';
            if (this.userRole == 6) {
                this.userInformation.role = 'National Manager';
            }
            else if (this.userRole == 7) {
                this.userInformation.role = 'Regional Manager';
            }
            else if (this.userRole == 8) {
                this.userInformation.role = 'Area Manager';
            }
            else if (this.userRole == 9) {
                this.userInformation.role = 'Zonal Manger';
            }
            else if (this.userRole == 10) {
                this.userInformation.role = 'Territory Incharge';
            }
        }
        else {
        }
        console.log("FormOpen");
        console.log(this.expenseForm);
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('vehicleNumber'),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"])
    ], AddExpenseComponent.prototype, "vehicleNumber", void 0);
    AddExpenseComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-expense',
            template: __webpack_require__(/*! ./add-expense.component.html */ "./src/app/expense/add-expense/add-expense.component.html"),
            styles: [__webpack_require__(/*! ./add-expense.component.scss */ "./src/app/expense/add-expense/add-expense.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], Object])
    ], AddExpenseComponent);
    return AddExpenseComponent;
}());



/***/ }),

/***/ "./src/app/expense/detail-by-date/detail-by-date.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/expense/detail-by-date/detail-by-date.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"cs-loader\" *ngIf=\"loader\"> \n  <img src=\"assets/img/loader.png\" class=\"rotate\">\n</div>\n\n<div class=\"main-container\">\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/expense-list\" routerLinkActive=\"active\" ><i   class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{expenseDetailList.userName}}</h2>\n      </div>\n      \n      <div class=\"cs-value\">\n        <h2>Total</h2>\n        <p class=\"light\">{{expenseDetailList.actualExpenseAmount |currency: 'INR':true }}</p>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s8\">\n          <div class=\"details-info\">\n            <div class=\"basic-details\">\n              <div class=\"col s12 cs-figure\">\n                <ul>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Expense Type</span>\n                        <p *ngIf=\"expenseDetailList.expenseType==1\">Local Conveyance</p>\n                        <p *ngIf=\"expenseDetailList.expenseType==2\">Outstation Travel</p>\n                        <p *ngIf=\"expenseDetailList.expenseType==3\">Sales Promotion</p>\n                        <p *ngIf=\"expenseDetailList.expenseType==4\">Misc Exp</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Purpose Of Visit</span>\n                        <p>{{expenseDetailList.purposeOfVisit}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Date</span>\n                        <p>{{expenseDetailList.createdOn |date:'EEEE, MMMM d, y'}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>E.C. No</span>\n                        <p>{{expenseDetailList.ecNumber}}</p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n                \n                \n                <ul class=\"mt15\">\n                  <li *ngIf=\"expenseDetailList.status==5\" class=\"approved\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Satus</span>\n                        <p>Approve</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li *ngIf=\"expenseDetailList.status==2 || expenseDetailList.status==3\" class=\"pending\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Satus</span>\n                        <p>{{expenseDetailList.status==2?'Pending':'Forward For Approval'}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li *ngIf=\"expenseDetailList.status==4 || expenseDetailList.status==6\" class=\"reject\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Satus</span>\n                        <p>Reject</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li *ngIf=\"expenseDetailList.status==1\" class=\"draft\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Satus</span>\n                        <p>Draft</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Department</span>\n                        <p>{{expenseDetailList.department}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li *ngIf=\"expenseDetailList.createdBy!=userId && (expenseDetailList.status==2|| expenseDetailList.status==3)\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <div class=\"from-fields\">\n                          <div *ngIf=\"expenseDetailList.status==2\" class=\"dflex\">\n                            <div class=\"control-field wp100\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <mat-select placeholder=\"Select Status\" name=\"status\" #status=\"ngModel\" [(ngModel)]=\"data.status\" >\n                                  <mat-option  value=3>Forward For Approval</mat-option>\n                                  <mat-option  value=4>Reject</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                            </div>\n                            <div *ngIf=\"data.status==3\" class=\"control-field wp100 ml10\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <mat-select  placeholder=\"Select Status\" name=\"expenseSanctionedBy\" #expenseSanctionedBy=\"ngModel\" [(ngModel)]=\"data.expenseSanctionedBy\" >\n                                  <mat-option *ngFor=\"let user of financeUserList\" value=\"{{user.userId}}\">{{user.userName}}</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                            </div>\n                            <div *ngIf=\"data.status==4\" class=\"control-field wp100 ml10\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <input matInput placeholder=\"Remark\" name=\"expenseSanctionRejectedBy\" #expenseSanctionRejectedBy=\"ngModel\" [(ngModel)]=\"data.expenseSanctionRejectedBy\">\n                              </mat-form-field>\n                            </div>\n                            \n                            <div *ngIf=\"data.status\" class=\"cs-btn ml10\">\n                              <div class=\"in-btn\">\n                                <button mat-raised-button color=\"accent\" (click)=\"statusUpdate()\" style=\"color: #fff;\">Go</button>\n                              </div>\n                            </div>\n                          </div>\n                          <div *ngIf=\"expenseDetailList.status==3 && userRole==17\" class=\"dflex\">\n                            <div class=\"control-field wp100\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <mat-select placeholder=\"Select Status\" name=\"status\" #status=\"ngModel\" [(ngModel)]=\"data.status\" >\n                                  <mat-option value=5>Approve</mat-option>\n                                  <mat-option value=6>Reject</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                            </div>\n                            \n                            <div *ngIf=\"data.status==6\" class=\"control-field wp100 ml10\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <input matInput placeholder=\"Remark\" name=\"expenseApprovedRejectionRemarks\" #expenseApprovedRejectionRemarks=\"ngModel\" [(ngModel)]=\"data.expenseApprovedRejectionRemarks\">\n                              </mat-form-field>\n                            </div>\n                            \n                            <div *ngIf=\"data.status\" class=\"cs-btn ml10\">\n                              <div class=\"in-btn\">\n                                <button mat-raised-button color=\"accent\" (click)=\"changeStatus()\" style=\"color: #fff;\">Go</button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n              \n              \n            </div>\n          </div>\n        </div>\n        \n        \n        <div class=\"col s4\">\n          <div class=\"sprate-box pt0\">\n            <div class=\"cs-logs\">\n              <div class=\"cs-heading\">\n                <h2>Expense Bill</h2>\n              </div>\n              <div class=\"logs-outer padding0\">\n                <div class=\"cs-image\">\n                  \n                  <div *ngIf=\"expenseDetailList.documents?.length == 0\" class=\"not-data mt15 padding0\">\n                    <div class=\"inner-data\">\n                      <p>Image not available</p>\n                    </div>\n                  </div>\n                  <div *ngIf=\"expenseDetailList.documents?.length > 0\" class=\"vertical-img {{expenseDetailList.documents.length == 2 ? 'double-img' : (expenseDetailList.documents.length > 2 ? 'multiple-img' : '')}}\"class=\"vertical-img\">\n                    <ul>\n                      <li *ngFor=\"let expenseImage of expenseDetailList.documents;let i=index\" class=\"overlay-content\" >\n                        <img src=\"{{api+expenseImage.documentId+'/'+'2'}}\">\n                        <a class=\"close dowload\" matRipple matTooltip=\"Download Bill\" href=\"{{api+expenseImage.documentId+'/'+'2'}}\" ><i class=\"material-icons\">cloud_download</i></a>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        \n        <div *ngIf=\"localConveyances.length!=0\" class=\"row\">\n          <div class=\"sprate-box pt0\">\n            <div class=\"cs-heading\">\n              <h2>Local Conveyances</h2>\n            </div>\n          </div>\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w200\">Date Of Visit</th>\n                  <th class=\"w110\">From</th>\n                  <th class=\"w110\">To</th>\n                  <th class=\"w150\">Type Of mode</th>\n                  <th class=\"w150\">Modal Of Travel</th>\n                  <th class=\"w130\">KMs Covered</th>\n                  <th class=\"w110 text-right\">Amount</th>\n                  <th class=\"w130\">Other Expense</th>\n                  <th>Remark</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let expense of localConveyances\">\n                    <td class=\"w200\"> {{expense.visitDate |date:'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w110\">{{expense.from}}</td>\n                    <td class=\"w110\">{{expense.to}}</td>\n                    <td  class=\"w150\">\n                      <span *ngIf=\"expense.modeType==1\"> SELF</span>\n                      <span *ngIf=\"expense.modeType==1\"> PUBLIC TRANSPORT</span>\n                    </td>\n                    <td  class=\"w150\">\n                      <span *ngIf=\"expense.mode==10\">AUTO</span>\n                      <span *ngIf=\"expense.mode==1\">BUS</span>\n                      <span *ngIf=\"expense.mode==6\">AC TEXI</span>\n                      <span *ngIf=\"expense.mode==7\">NON-AC TEXI</span>\n                      <span *ngIf=\"expense.mode==5\">METRO</span>\n                      <span *ngIf=\"expense.mode==9\">CAR</span>\n                      <span *ngIf=\"expense.mode==8\">BIKE</span>\n                    </td>\n                    <td class=\"w130\">{{expense.distanceKMS}} KMs</td>\n                    <td class=\"w110 text-right\">{{expense.otherExpense|currency: 'INR':true}}</td>\n                    <td class=\"w130\"> {{expense.otherExpense|currency: 'INR':true}}</td>\n                    <td> {{expense.remarks}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n        <div  *ngIf=\"salesPromotionExpense.length !=0\" class=\"row\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"heading-bg mb0\">\n              <h2>Sales Permoton Expenses</h2>\n            </div>\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w180\">Date</th>\n                  <th>Activity Type</th>\n                  <th class=\"w100\">Place of Activity</th>\n                  <th class=\"w100\">No Of Attendees</th>\n                  <th class=\"w110 text-right\">Rental Exp.</th>\n                  <th class=\"w100 text-right\">Food Exp.</th>\n                  <th class=\"w110 text-right\">Av-Aids Exp.</th>\n                  <th class=\"w80 text-right\">Gift Exp.</th>\n                  <th class=\"w110 text-right\">Misc Exp.</th>\n                  <th>Remark</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\" let promation of salesPromotionExpense\">\n                    <td class=\"w180\"> {{promation.date |date:'EEEE, MMMM d, y'}}</td>\n                    <td *ngIf=\"promation.salesActivityType==1\">Mechanic get together</td>\n                    <td *ngIf=\"promation.salesActivityType==2\"> Retailer get together</td>\n                    <td *ngIf=\"promation.salesActivityType==3\">van Campaign</td>\n                    <td *ngIf=\"promation.salesActivityType==4\">Stall Campaign</td>\n                    <td *ngIf=\"promation.salesActivityType==5\">Exhibition Participation</td>\n                    <td *ngIf=\"promation.salesActivityType==6\">Signboard</td>\n                    <td *ngIf=\"promation.salesActivityType==7\">Wall/Shop Painting</td>\n                    <td *ngIf=\"promation.salesActivityType==8\">GiveAways</td>\n                    <td *ngIf=\"promation.salesActivityType==9\">Printing Of Lesafelts,banners, posters etc.</td>\n                    <td class=\"w100\">{{promation.placeOfActivity}}</td>\n                    <td class=\"w100\">{{promation.noOfAttendees}}</td>\n                    <td class=\"w110 text-right\">{{promation.rentalExpenses|currency: 'INR':true}}</td>\n                    <td class=\"w100 text-right\"> {{promation.foodExpense|currency: 'INR':true}}</td>\n                    <td class=\"w110 text-right\">{{promation.avAidsExpense|currency: 'INR':true}}</td>\n                    <td class=\"w80 text-right\">  {{promation.giftsExpense|currency: 'INR':true}}</td>\n                    <td class=\"w110 text-right\"> {{promation.miscExpense|currency: 'INR':true}}</td>\n                    <td> {{promation.remarks}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"miscExpense.length!=0\" class=\"row\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"heading-bg  mb0\">\n              <h2>Misc Expense</h2>\n            </div>\n            <div class=\"table-head\">\n              <table> \n                <tr >\n                  \n                  <th class=\"w200\">Date</th>\n                  <th class=\"w200\">Nature Of Exp.</th>\n                  <th class=\"w200\">Beneficiaries Name</th>\n                  <th class=\"w200\">Place Of Expense</th>\n                  <th class=\"w100 text-right\">Amount</th>\n                  <th>Remark</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let misc of miscExpense\">\n                    <td class=\"w200\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\n                    <td *ngIf=\"misc.miscActivityType==1\" class=\"w200\">Entertainment Expenses</td>\n                    <td *ngIf=\"misc.miscActivityType==2\" class=\"w200\">Gift To Dealers</td>\n                    <td *ngIf=\"misc.miscActivityType==3\" class=\"w200\">Lunch/Dinner With Team</td>\n                    <td *ngIf=\"misc.miscActivityType==4\" class=\"w200\">Training Program</td>\n                    <td *ngIf=\"misc.miscActivityType==5\" class=\"w200\"> Other</td>\n                    <td class=\"w200\">{{misc.nameOfBeneficiary}}</td>\n                    <td class=\"w200\">{{misc.placeOfExpense}}</td>\n                    <td class=\"w100 text-right\"> &#x20B9; {{misc.amount|currency: 'INR':true}}</td>\n                    <td> {{misc.remarks}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"outStationExpense.length!=0\" class=\"row\">\n          <div *ngIf=\"outStationExpense.foodExpenses.length!=0\" class=\"cs-table left-right-20\">\n            <div class=\"heading-bg  mb0\">\n              <h2>Food Expense</h2>\n            </div>\n            \n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w200\">Date Of Visit</th>\n                  <th class=\"w110\">City</th>\n                  <th class=\"w150\">Bill Amount</th>\n                  <th class=\"w300\">Remark</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let foodExpense of outStationExpense.foodExpenses\">\n                    <td class=\"w200\"> {{foodExpense.date|date:'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w110\">{{foodExpense.city}}</td>\n                    <td class=\"w150\">{{foodExpense.billAmount}}</td>\n                    <td class=\"w300\">{{foodExpense.remarks}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n          </div>\n          <div *ngIf=\"outStationExpense.outStationLocalExp.length!=0\" class=\"cs-table left-right-20\">\n            \n            <div class=\"heading-bg  mb0\">\n              <h2>Local Expense</h2>\n            </div>\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w200\">Date Of Visit</th>\n                  <th class=\"w110\">From</th>\n                  <th class=\"w110\">To</th>\n                  <th class=\"w150\">Modal Of Travel</th>\n                  <th class=\"w130\">Fare</th>\n                  \n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let outTravel of outStationExpense.outStationLocalExp\">\n                    <td class=\"w200\"> {{outTravel.date |date:'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w110\">{{outTravel.from}}</td>\n                    <td class=\"w110\">{{outTravel.to}}</td>\n                    <td class=\"w150\">\n                      <span *ngIf=\"outTravel.modeOfTravel==10\">AUTO</span>\n                      <span *ngIf=\"outTravel.modeOfTravel==1\">BUS</span>\n                      <span *ngIf=\"outTravel.modeOfTravel==6\"> AC TAXI</span>\n                      <span *ngIf=\"outTravel.modeOfTravel==7\">NON-AC TAXI</span>\n                      <span *ngIf=\"outTravel.modeOfTravel==8\">TWO WHEELER</span>\n                      <span *ngIf=\"outTravel.modeOfTravel==5\">METRO</span>\n                    </td>\n                    <td class=\"w130\">{{outTravel.fare}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n          </div>\n          <div *ngIf=\"outStationExpense.outStationTravelExp.length!=0\" class=\"cs-table left-right-20\">\n            \n            <div class=\"heading-bg  mb0\">\n              <h2>Travel Expense</h2>\n            </div>\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w200\">Date Of Depature</th>\n                  <th class=\"w150\">From</th>\n                  <th class=\"w200\">Date of Arrival</th>\n                  <th class=\"w150\">TO</th>\n                  <th class=\"w150\">Mode of Travel</th>\n                  <th class=\"w130\">Class</th>\n                  \n                  <th class=\"w130\">Ticket No</th>\n                  <th class=\"w130 \">Amount</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let outTravel of outStationExpense.outStationTravelExp\">\n                    <td class=\"w200\"> {{outTravel.departureTime |date:'medium'}}</td>\n                    <td class=\"w150\">{{outTravel.departureStation}}</td>\n                    <td class=\"w200\">{{outTravel.arrivalTime |date:'medium'}}</td>\n                    <td class=\"w150\">{{outTravel.arrivalStation}}</td>\n                    <td class=\"w150\">\n                      <span *ngIf=\"outTravel.modeOfTravel==1\">BUS</span>\n                      <span *ngIf=\"outTravel.modeOfTravel==2\">TRAIN</span>\n                      <span *ngIf=\"outTravel.modeOfTravel==3\">AIRLINE</span>\n                      <span *ngIf=\"outTravel.modeOfTravel==5\">TEXI</span>\n                    </td>\n                    <td class=\"w130\">{{outTravel.class}}</td>\n                    \n                    <td class=\"w130\">{{outTravel.ticketNo}}</td>\n                    <td class=\"w130\">{{outTravel.amount}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n          </div>\n          <div *ngIf=\"outStationExpense.outStationHotelExp.length!=0\" class=\"cs-table left-right-20\">\n            <div class=\"heading-bg  mb0\">\n              <h2>Hotel Expense</h2>\n            </div>\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w200\">Check In Date</th>\n                  <th class=\"w200\">Check Out Date</th>\n                  <th class=\"w110\">City</th>\n                  <th class=\"w150\">Hotel Name</th>\n                  <th class=\"w130\">Amount</th>\n                  <th>Remark</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let outTravel of outStationExpense.outStationHotelExp\">\n                    <td class=\"w200\"> {{outTravel.checkInDate|date:'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w200\">{{outTravel.checkOutDate|date:'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w110\">{{outTravel.city}}</td>\n                    <td class=\"w150\">{{outTravel.hotelName}}</td>\n                    <td class=\"w130\">{{outTravel.billAmount}}</td>\n                    <td >{{outTravel.remarks}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n          </div>\n          <div *ngIf=\"outStationExpense.miscExpenses.length!=0\" class=\"row\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"heading-bg  mb0\">\n                <h2>Misc Expense</h2>\n              </div>\n              <div class=\"table-head\">\n                <table> \n                  <tr >\n                    \n                    <th class=\"w200\">Date</th>\n                    <th class=\"w200\">Nature Of Exp.</th>\n                    <th class=\"w200\">Beneficiaries Name</th>\n                    <th class=\"w200\">Place Of Expense</th>\n                    <th class=\"w100 text-right\">Amount</th>\n                    <th>Remark</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let misc of outStationExpense.miscExpense\">\n                      <td class=\"w200\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\n                      <td *ngIf=\"misc.miscActivityType==1\" class=\"w200\">Entertainment Expenses</td>\n                      <td *ngIf=\"misc.miscActivityType==2\" class=\"w200\">Gift To Dealers</td>\n                      <td *ngIf=\"misc.miscActivityType==3\" class=\"w200\">Lunch/Dinner With Team</td>\n                      <td *ngIf=\"misc.miscActivityType==4\" class=\"w200\">Training Program</td>\n                      <td *ngIf=\"misc.miscActivityType==5\" class=\"w200\"> Other</td>\n                      <td class=\"w200\">{{misc.nameOfBeneficiary}}</td>\n                      <td class=\"w200\">{{misc.placeOfExpense}}</td>\n                      <td class=\"w100 text-right\"> &#x20B9; {{misc.amount|currency: 'INR':true}}</td>\n                      <td> {{misc.remarks}}</td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n      </div>\n    </div>\n    \n    <!-- <div class=\"fixed-btn\">\n      <a class=\"bottom-btn\" mat-button routerLink=\"/expenseclaim\" routerLinkActive=\"active\"><i class=\"material-icons\">edit</i></a>\n    </div> -->\n    \n  </div>\n  \n  <div class=\"h100\"></div>\n  \n  "

/***/ }),

/***/ "./src/app/expense/detail-by-date/detail-by-date.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/expense/detail-by-date/detail-by-date.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZGV0YWlsLWJ5LWRhdGUvZGV0YWlsLWJ5LWRhdGUuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/expense/detail-by-date/detail-by-date.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/expense/detail-by-date/detail-by-date.component.ts ***!
  \********************************************************************/
/*! exports provided: DetailByDateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetailByDateComponent", function() { return DetailByDateComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);





var DetailByDateComponent = /** @class */ (function () {
    // today=moment().
    function DetailByDateComponent(route, service) {
        var _this = this;
        this.route = route;
        this.service = service;
        this.data = {};
        this.user = {};
        this.expenseDetailList = [];
        this.loader = false;
        this.reasonDiv = false;
        this.localConveyances = [];
        this.salesPromotionExpense = [];
        this.outStationExpense = [];
        this.miscExpense = [];
        this.statusValue = ['Forward For Approval', 'Reject'];
        this.financeUserList = [];
        // expenseId:any=[];
        // action(event,id,index)
        // {
        //   if(event.checked)
        //   {
        //     this.expenseId.push(id);
        //     console.log(this.expenseId);
        //   }
        //   else
        //   {
        //     this.expenseId.splice(index,1);
        //   }
        // }
        this.expenseIds = [];
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.expenseId = params.id;
            console.log(_this.date, "&", _this.expenseId);
            if (params) {
                _this.getExpenseDetail();
            }
        });
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
    }
    DetailByDateComponent.prototype.ngOnInit = function () {
    };
    DetailByDateComponent.prototype.getExpenseDetail = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData("", "expense/detail/" + this.expenseId).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            _this.getUserList();
            if (result['status'] == 'Success') {
                _this.expenseDetailList = result['data'];
                console.log(_this.expenseDetailList);
                _this.localConveyances = _this.expenseDetailList.localHQExpense.localConveyances;
                _this.salesPromotionExpense = _this.expenseDetailList.salesPromotionExpense.salesPromotionExps;
                _this.outStationExpense = _this.expenseDetailList.outStationExpense;
                _this.miscExpense = _this.expenseDetailList.miscExpense.miscExp;
                console.log(_this.outStationExpense);
                _this.url = _this.service.dburl;
                _this.requestfn = 'download/document/';
                _this.api = _this.url + _this.requestfn;
            }
        });
    };
    DetailByDateComponent.prototype.getUserList = function () {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ role: 17, "currentPage": 1, "pageSize": 50 }, "user/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.financeUserList = result['data'];
            }
        });
    };
    // updateStatus()
    // {
    //   console.log(this.data.status);
    //   this.expenseIds.push(this.expenseId);
    //   this.data.userId=this.userId;
    //   this.data.expenseIds=this.expenseIds;
    //   console.log(this.data);
    //   this.service.fetchData(this.data,"expense/updatestatus").subscribe((result)=>{
    //     console.log(result);
    //     if(result['status']=='Success')
    //     {
    //       this.data={};
    //       this.getExpenseDetail();
    //     }
    //   })
    // }
    DetailByDateComponent.prototype.changeStatus = function () {
        var _this = this;
        // this.data={};
        if (this.data.status == 6) {
            this.data.expenseId = this.expenseId;
            this.data.expenseApprovedRejectedBy = this.userId;
            this.data.expenseApprovedRejectedOn = moment__WEBPACK_IMPORTED_MODULE_4__().format('YYYY-MM-DD');
        }
        else {
            this.data.expenseId = this.expenseId;
            this.data.expenseApprovedBy = this.userId;
            this.data.expenseApprovedOn = moment__WEBPACK_IMPORTED_MODULE_4__().format('YYYY-MM-DD');
        }
        this.service.fetchData(this.data, "expense/approve").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.getExpenseDetail();
            }
        });
    };
    DetailByDateComponent.prototype.statusUpdate = function () {
        var _this = this;
        if (this.data.status == 4) {
            this.data.expenseSanctionRejectedBy = this.userId;
        }
        this.data.expenseId = this.expenseId;
        // this.data.expenseSanctionedBy=this.userId
        this.data.expenseSanctionedOn = moment__WEBPACK_IMPORTED_MODULE_4__().format('YYYY-MM-DD');
        console.log(this.data);
        this.service.fetchData(this.data, "expense/sanction").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.getExpenseDetail();
            }
        });
    };
    DetailByDateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-detail-by-date',
            template: __webpack_require__(/*! ./detail-by-date.component.html */ "./src/app/expense/detail-by-date/detail-by-date.component.html"),
            styles: [__webpack_require__(/*! ./detail-by-date.component.scss */ "./src/app/expense/detail-by-date/detail-by-date.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], DetailByDateComponent);
    return DetailByDateComponent;
}());



/***/ }),

/***/ "./src/app/expense/edit-local-expense/edit-local-expense.component.html":
/*!******************************************************************************!*\
  !*** ./src/app/expense/edit-local-expense/edit-local-expense.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n      <img src=\"assets/img/loader.png\" class=\"rotate\">\n    </div>\n  \n<div class=\"middle-container\">\n  <div class=\"page-heading\">\n    <img src=\"assets/img/payment_icon.svg\" class=\"h-icon\">\n    <div class=\"heading-text\">\n      <h2>Expense</h2>\n      <p>Add Expense</p>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"container-outer\" >\n  <div class=\"container\" >\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"sprate-box pt0 mb15\">\n          <div class=\"cs-heading\">\n            <h2>Local EXPENSE</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n    <form (ngSubmit)=\"f.form.valid && LocalConvenseExpense()\" #f=\"ngForm\" novalidate>\n      <div class=\"cs-bill\" >\n        <!-- <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>BASIC INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s4 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Purpose Of Visit\" id=\"purposeOfVisit\" type=\"number\" name=\"purposeOfVisit\" #purposeOfVisit=\"ngModel\" [(ngModel)]=\"localConvense.purposeOfVisit\"  [ngClass]=\"{'has-error' : purposeOfVisit.invalid }\" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && purposeOfVisit.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"purposeOfVisit.errors.required\">Purpose Of Visit required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"ADVANCE AMOUNT\" type=\"number\" id=\"advanceAmount\" name=\"advanceAmount\" #advanceAmount=\"ngModel\" [(ngModel)]=\"localConvense.advanceAmount\"  [ngClass]=\"{'has-error' : advanceAmount.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f3.submitted && advanceAmount.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"advanceAmount.errors.required\">Advance Amount is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                </div>\n              </div>\n            </div>\n            <div>\n            </div>\n          </div>\n        </div>\n         -->\n        \n        <div class=\"collaps flat-collaps mt15\">\n          <div class=\"collaps-area\">\n            <mat-accordion>\n              <mat-expansion-panel>\n                <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                  <mat-panel-title>\n                    TRAVEL ENTITLEMENT\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <!-- <div class=\"inner-body\">\n                  <div class=\"from-fields\">\n                    <div class=\"row\">\n                      <div class=\"col s3 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput [matDatepicker]=\"days\" [max]='currentDate' readonly placeholder=\"Date Of Visit\" name=\"visitDate\" #visitDate=\"ngModel\" [(ngModel)]=\"localHQExpense.visitDate\" >\n                            <mat-datepicker-toggle matSuffix [for]=\"days\"></mat-datepicker-toggle>\n                            <mat-datepicker #days></mat-datepicker>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"col s3 \">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"From\" name=\"from\" #from=\"ngModel\" [(ngModel)]=\"localHQExpense.from\" >\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"col s3 \">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"To\" name=\"to\" #to=\"ngModel\" [(ngModel)]=\"localHQExpense.to\" >\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"col s3 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"Mode Of Travel\" name=\"mode\" #mode=\"ngModel\" [(ngModel)]=\"localHQExpense.mode\" >\n                              <mat-option value=1>BUS</mat-option>\n                              <mat-option value=2>TRAIN</mat-option>\n                              <mat-option value=3>AIRLINE</mat-option>\n                              <mat-option value=4>PRIVATEVEHICLE </mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col s6 pl0\">\n                        <div class=\"row\">\n                          <div class=\"col s6 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"KMs Covered\" type=\"number\" name=\"distanceKMS\" #distanceKMS=\"ngModel\" [(ngModel)]=\"localHQExpense.distanceKMS\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s6 pr0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Amount\" type=\"number\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"localHQExpense.amount\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col s12 padding0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput placeholder=\"Other Exp.\" type=\"number\" name=\"otherExpense\" #otherExpense=\"ngModel\" [(ngModel)]=\"localHQExpense.otherExpense\" >\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <textarea matInput placeholder=\"Remark\" class=\"h105\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"localHQExpense.remarks\"></textarea>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col s12 padding0 mt15\">\n                    <div class=\"cs-btn text-right\">\n                      <div class=\"in-btn\">\n                        <button mat-raised-button color=\"accent\" [disabled]=\"!localHQExpense.remarks || !localHQExpense.visitDate|| !localHQExpense.from || !localHQExpense.to ||!localHQExpense.mode ||!localHQExpense.otherExpense \" (click)=\"addToLocalConvenseList()\" type=\"button\">Add To List</button>\n                      </div>\n                    </div>\n                  </div>\n                </div> -->\n                <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      \n                      <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                          <div class=\"row\">\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput [matDatepicker]=\"days\" [max]='currentDate' readonly placeholder=\"Date Of Visit\" name=\"visitDate\" #visitDate=\"ngModel\" [(ngModel)]=\"localHQExpense.visitDate\" >\n                                  <mat-datepicker-toggle matSuffix [for]=\"days\"></mat-datepicker-toggle>\n                                  <mat-datepicker #days></mat-datepicker>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"From\" name=\"from\" #from=\"ngModel\" [(ngModel)]=\"localHQExpense.from\" >\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"To\" name=\"to\" #to=\"ngModel\" [(ngModel)]=\"localHQExpense.to\" >\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <mat-select placeholder=\"Type of Mode\" name=\"modeType\" #modeType=\"ngModel\" [(ngModel)]=\"localHQExpense.modeType\" >\n                                    <mat-option (click)=\"readonlyValue(localHQExpense.modeType)\" value=1>SELF VEHICLE</mat-option>\n                                    <mat-option (click)=\"readonlyValue(localHQExpense.modeType)\" value=2>PUBLIC TRANSPORT</mat-option>\n                                  </mat-select>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <mat-select placeholder=\"Mode Of Travel\" name=\"mode\" #mode=\"ngModel\" [(ngModel)]=\"localHQExpense.mode\" >\n                                    <mat-option value=10 *ngIf=\"localHQExpense.modeType==2\">AUTO</mat-option>\n                                    <mat-option value=1 *ngIf=\"localHQExpense.modeType==2\">BUS</mat-option>\n                                    <mat-option value=6 *ngIf=\"localHQExpense.modeType==2\">AC TAXI</mat-option>\n                                    <mat-option value=7 *ngIf=\"localHQExpense.modeType==2\">NON-AC TAXI </mat-option>\n                                    <mat-option value=5 *ngIf=\"localHQExpense.modeType==2\">METRO </mat-option>\n                                    <mat-option value=9 *ngIf=\"localHQExpense.modeType==1 && allowanceList.selfCarPerKM!=0\">CAR</mat-option>\n                                    <mat-option value=8 *ngIf=\"localHQExpense.modeType==1 && allowanceList.selfBikePerKM!=0\">BIKE </mat-option>\n                                    \n                                  </mat-select>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div *ngIf=\"localHQExpense.modeType==1\" class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Vehicle No\" type=\"text\" name=\"vehicleNumber\" #vehicleNumber=\"ngModel\" [(ngModel)]=\"localHQExpense.vehicleNumber\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          <div  class=\"row\">\n                            <div *ngIf=\"localHQExpense.modeType==1\" class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"KMs Covered\" type=\"number\" (input)=\"calculateAmount(localHQExpense.mode,localHQExpense.distanceKMS)\" name=\"distanceKMS\" #distanceKMS=\"ngModel\" [(ngModel)]=\"localHQExpense.distanceKMS\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Amount\" type=\"number\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"localHQExpense.amount\" readonly={{readonlyArea}} >\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            \n                            <div class=\"col s4\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Other Exp.\" type=\"number\" name=\"otherExpense\" #otherExpense=\"ngModel\" [(ngModel)]=\"localHQExpense.otherExpense\" >\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <textarea matInput placeholder=\"Remark\" class=\"h165\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"localHQExpense.remarks\"></textarea>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col s12 padding0 mt15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" [disabled]=\"!localHQExpense.remarks || !localHQExpense.visitDate|| !localHQExpense.from || !localHQExpense.to ||!localHQExpense.mode ||!localHQExpense.modeType ||!localHQExpense.otherExpense \" (click)=\"addToLocalConvenseList()\" type=\"button\">Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              </mat-expansion-panel>\n            </mat-accordion>\n          </div>\n        </div>\n        \n        \n        <!-- <div class=\"row mt15\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w160\">Date Of Visit</th>\n                  <th class=\"w110\">From</th>\n                  <th class=\"w110\">To</th>\n                  <th class=\"w150\">Modal Of Travel</th>\n                  <th class=\"w130\">KMs Covered</th>\n                  <th class=\"w110 text-right\">Amount</th>\n                  <th class=\"w110 text-right\">Other Exp.</th>\n                  <th>Remark</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let Localexpense of localConveyances\">\n                    <td class=\"w160\"> {{Localexpense.visitDate |date:'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w110\">{{Localexpense.from}}</td>\n                    <td class=\"w110\">{{Localexpense.to}}</td>\n                    <td *ngIf=\"Localexpense.mode==1\" class=\"w150\">BUS</td>\n                    <td *ngIf=\"Localexpense.mode==2\" class=\"w150\">TRAIN</td>\n                    <td *ngIf=\"Localexpense.mode==3\" class=\"w150\">AIRLINE</td>\n                    <td *ngIf=\"Localexpense.mode==4\" class=\"w150\">PRIVATEVEHICLE</td>\n                    <td class=\"w130 \">{{Localexpense.distanceKMS}}</td>\n                    <td class=\"w110 text-right\"> &#x20B9; {{Localexpense.amount}}</td>\n                    <td class=\"w130 text-right\"> &#x20B9; {{Localexpense.otherExpense}}</td>\n                    <td>{{Localexpense.remarks}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n          </div>\n        </div> -->\n        \n        <div *ngIf=\"localConveyances.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr>\n                    <th class=\"w160\">Date Of Visit</th>\n                    <th class=\"w110\">From</th>\n                    <th class=\"w110\">To</th>\n                    <th class=\"w150\">Modal Of Type</th>\n                    <th class=\"w150\">Modal Of Travel</th>\n                    <th class=\"w130\">KMs Covered</th>\n                    <th class=\"w110 text-right\">Amount</th>\n                    <th class=\"w110 text-right\">Other Exp.</th>\n                    <th>Remark</th>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let Localexpense of localConveyances;let index=index\">\n                      <td class=\"w160\"> {{Localexpense.visitDate |date:'EEEE, MMMM d, y'}}</td>\n                      <td class=\"w110\">{{Localexpense.from}}</td>\n                      <td class=\"w110\">{{Localexpense.to}}</td>\n                      <td *ngIf=\"Localexpense.modeType==1\" class=\"w150\">SELF</td>\n                      <td *ngIf=\"Localexpense.modeType==2\"class=\"w150\">PUBLIC TRANSPORT</td>\n                      <td *ngIf=\"Localexpense.mode==10\" class=\"w150\">AUTO</td>\n                      <td *ngIf=\"Localexpense.mode==1\" class=\"w150\">BUS</td>\n                      <td *ngIf=\"Localexpense.mode==6\" class=\"w150\">AC-TAXI</td>\n                      <td *ngIf=\"Localexpense.mode==7\" class=\"w150\">NON AC-TAXI</td>\n                      <td *ngIf=\"Localexpense.mode==5\" class=\"w150\">METRO</td>\n                      <td *ngIf=\"Localexpense.mode==9\" class=\"w150\">CAR</td>\n                      <td *ngIf=\"Localexpense.mode==8\" class=\"w150\">BIKE</td>\n                      <td class=\"w130 \">{{Localexpense.distanceKMS}}</td>\n                      <td class=\"w110 text-right\"> &#x20B9; {{Localexpense.amount}}</td>\n                      <td class=\"w130 text-right\"> &#x20B9; {{Localexpense.otherExpense}}</td>\n                      <td>{{Localexpense.remarks}}\n                        <div class=\"action-btns\">\n                          <button mat-button class=\"delete\" (click)=\"removeLocalConvenseList(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              \n            </div>\n          </div>\n        <div class=\"row mt15\">\n          <div class=\"col s12\">\n              <div class=\"cs-file-multiple scroll\">\n                <ul>\n                  <li class=\"w110 pr10\" *ngFor=\"let urlData of localExpense.documents;let i=index\">\n                    <label>\n                      <img src=\"{{api+urlData.documentId+'/'+'2'}}\">\n                      <a (click)=\"deleteimg(urlData.documentId,urlData.fileName)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                    </label>\n                  </li>\n                  <li class=\"w110 pr10\">\n                    <div class=\"cs-file wp100\">\n                      <label>\n                        <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\">\n                        <i class=\"material-icons add-file-icon\" >add</i>\n                      </label>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n      </div>\n\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sm-table\">\n              <table>\n                <tr>\n                  <th class=\"text-right\">Local Travel Expense</th>\n                  <th class=\"w30 text-center\">:</th>\n                  <td class=\"w100 text-right\">&#x20B9; {{localExp}}</td>\n                </tr>\n                <tr>\n                  <th class=\"text-right\">Other Type Expense</th>\n                  <th class=\"text-center\">:</th>\n                  <td class=\"text-right\">&#x20B9; {{otherLocalExp}}</td>\n                </tr>\n                <tr>\n                  <th class=\"text-right\">Total</th>\n                  <th class=\"text-center\">:</th>\n                  <td class=\"text-right\">&#x20B9; {{totalLocalExp}}</td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"cs-btn fixedd mt15  text-right\">\n                <div class=\"in-btn\">\n                  <button mat-raised-button color=\"accent\" (click)=\"localexpense(1)\" >Save as Draft</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"cs-btn fixedd mt15  text-right\">\n              <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\" (click)=\"localexpense(2)\">Save For Approval</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/expense/edit-local-expense/edit-local-expense.component.scss":
/*!******************************************************************************!*\
  !*** ./src/app/expense/edit-local-expense/edit-local-expense.component.scss ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZWRpdC1sb2NhbC1leHBlbnNlL2VkaXQtbG9jYWwtZXhwZW5zZS5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/expense/edit-local-expense/edit-local-expense.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/expense/edit-local-expense/edit-local-expense.component.ts ***!
  \****************************************************************************/
/*! exports provided: EditLocalExpenseComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditLocalExpenseComponent", function() { return EditLocalExpenseComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");






var EditLocalExpenseComponent = /** @class */ (function () {
    function EditLocalExpenseComponent(route, service, dialog, toast, router) {
        var _this = this;
        this.route = route;
        this.service = service;
        this.dialog = dialog;
        this.toast = toast;
        this.router = router;
        this.expenseList = [];
        this.loader = false;
        this.div = false;
        this.user = {};
        this.localExpense = {};
        this.localHQExpense = {};
        this.localConveyances = [];
        this.SalesExpenseList = [];
        this.allowanceList = [];
        this.readonlyArea = false;
        this.otherLocalExp = 0;
        this.localExp = 0;
        this.totalLocalExp = 0;
        this.selectedFile = [];
        this.documentUrl = [];
        this.picdata = {};
        this.picvalue = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.designation = this.user.data.salesUser.designation;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.expenseId = params.id;
            console.log(_this.expenseId);
            if (_this.expenseId) {
                _this.getExpenseList(_this.expenseId);
                _this.getAllowanceList(_this.designation);
            }
        });
    }
    EditLocalExpenseComponent.prototype.ngOnInit = function () {
    };
    // localConveyances:any=[]
    EditLocalExpenseComponent.prototype.getExpenseList = function (expenseId) {
        var _this = this;
        this.loader = true;
        console.log(expenseId);
        this.service.fileData("", "expense/detail/" + expenseId).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.localExpense = result['data'];
                console.log(_this.localExpense);
                console.log(_this.localExpense.localHQExpense.localConveyances);
                _this.localConveyances = _this.localExpense.localHQExpense.localConveyances;
                _this.calculateLocalExpense(_this.localConveyances);
                _this.url = _this.service.dburl;
                _this.requestfn = 'download/document/';
                _this.api = _this.url + _this.requestfn;
                // this.calculatePromationalExpense(this.SalesExpenseList)
            }
        });
    };
    EditLocalExpenseComponent.prototype.localexpense = function (status) {
        this.localExpense.status = status;
    };
    EditLocalExpenseComponent.prototype.LocalConvenseExpense = function () {
        var _this = this;
        this.localExpense.localHQExpense = { "localConveyances": this.localConveyances };
        this.localExpense.userId = this.userId;
        // this.localConvense.department=this.userInformation.userType;
        // this.localConvense.expenseType=this.expenseForm.form;
        // this.localConvense.expenseSanctioner=this.expenseForm.expenseSanctioner;
        this.localExpense.claimAmount = this.totalLocalExp;
        this.localExpense.actualExpenseAmount = this.totalLocalExp;
        console.log(this.localExpense);
        this.loader = true;
        this.service.fetchData(this.localExpense, "expense/update").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                // this.uploadBillAttechment(result['data']);
                _this.router.navigate(['/expense-list']);
                _this.toast.openSucess("Expense", "Added SuccessFully");
            }
        });
    };
    EditLocalExpenseComponent.prototype.getAllowanceList = function (designation) {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ designation: designation }, "allowance/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.allowanceList = result['data'][0];
            }
        });
    };
    EditLocalExpenseComponent.prototype.readonlyValue = function (value) {
        if (value == 1) {
            this.readonlyArea = true;
        }
        if (value == 2) {
            this.readonlyArea = false;
        }
    };
    EditLocalExpenseComponent.prototype.calculateAmount = function (mode, km) {
        console.log(this.allowanceList);
        if (mode == 9) {
            this.localHQExpense.amount = parseFloat(this.allowanceList.selfCarPerKM) * parseFloat(km);
        }
        if (mode == 8) {
            this.localHQExpense.amount = parseFloat(this.allowanceList.selfBikePerKM) * parseFloat(km);
        }
    };
    EditLocalExpenseComponent.prototype.addToLocalConvenseList = function () {
        console.log(this.localHQExpense);
        this.localConveyances.push(this.localHQExpense);
        this.localHQExpense = {};
        this.calculateLocalExpense(this.localConveyances);
        console.log(this.localConveyances);
    };
    EditLocalExpenseComponent.prototype.removeLocalConvenseList = function (index) {
        this.localConveyances.splice(index, 1);
        this.calculateLocalExpense(this.localConveyances);
    };
    EditLocalExpenseComponent.prototype.calculateLocalExpense = function (localExpArray) {
        this.otherLocalExp = 0;
        this.localExp = 0;
        this.totalLocalExp = 0;
        for (var i = 0; i < localExpArray.length; i++) {
            this.otherLocalExp = parseInt(this.otherLocalExp) + parseInt(localExpArray[i].otherExpense);
            this.localExp = parseInt(this.localExp) + parseInt(localExpArray[i].amount);
        }
        this.totalLocalExp = parseInt(this.otherLocalExp) + parseInt(this.localExp);
    };
    EditLocalExpenseComponent.prototype.insertImage = function (data) {
        var _this = this;
        this.selectedFile = [];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.documentUrl.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.documentUrl);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        setTimeout(function () {
            _this.Insert_Image();
        }, 500);
    };
    EditLocalExpenseComponent.prototype.Insert_Image = function () {
        var _this = this;
        this.misc_Expense_Document = new FormData;
        this.misc_Expense_Document.action = 1;
        this.misc_Expense_Document.binaryData = this.documentUrl[this.documentUrl.length - 1];
        this.misc_Expense_Document.documentType = 4;
        this.misc_Expense_Document['documentName'] = this.selectedFile[0].name;
        this.misc_Expense_Document.referenceId = this.expenseId;
        this.loader = true;
        for (var i = 0; i < this.selectedFile.length; i++) {
            this.misc_Expense_Document.fileName = "image" + i + ".jpg", this.selectedFile[i];
        }
        console.log(this.misc_Expense_Document);
        var value = [];
        value[0] = this.misc_Expense_Document;
        console.log(value);
        this.service.fetchData(value, "document/update").subscribe(function (resp) {
            console.log(resp);
            if (resp) {
                _this.loader = false;
                _this.getExpenseList(_this.expenseId);
                _this.toast.openSucess('Image Added Sucessfully', '');
            }
        });
    };
    EditLocalExpenseComponent.prototype.deleteimg = function (picid, filename) {
        var _this = this;
        console.log(picid, filename);
        this.picdata.documentId = picid;
        this.picdata.action = 2;
        this.picdata.fileName = filename;
        this.picdata.documentType = 4;
        this.picdata.referenceId = this.expenseId;
        this.picvalue.push(this.picdata);
        console.log(this.picvalue);
        this.dialog.delete("Document").then(function (result) {
            console.log(result);
            if (result) {
                _this.loader = true;
                _this.service.fetchData(_this.picvalue, "document/update").subscribe(function (resp) {
                    console.log(resp);
                    if (resp['status'] == 'Success') {
                        _this.toast.openSucess('Image Deleted Sucessfully', '');
                        _this.loader = false;
                        _this.getExpenseList(_this.expenseId);
                        _this.picvalue = [];
                    }
                });
            }
        });
    };
    EditLocalExpenseComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-edit-local-expense',
            template: __webpack_require__(/*! ./edit-local-expense.component.html */ "./src/app/expense/edit-local-expense/edit-local-expense.component.html"),
            styles: [__webpack_require__(/*! ./edit-local-expense.component.scss */ "./src/app/expense/edit-local-expense/edit-local-expense.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], EditLocalExpenseComponent);
    return EditLocalExpenseComponent;
}());



/***/ }),

/***/ "./src/app/expense/edit-out-station/edit-out-station.component.html":
/*!**************************************************************************!*\
  !*** ./src/app/expense/edit-out-station/edit-out-station.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n      <img src=\"assets/img/loader.png\" class=\"rotate\">\n    </div>\n  \n<div class=\"middle-container\">\n  <div class=\"page-heading\">\n    <img src=\"assets/img/payment_icon.svg\" class=\"h-icon\">\n    <div class=\"heading-text\">\n      <h2>Expense</h2>\n      <p>Add Expense</p>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"container-outer\" >\n  <div class=\"container\" >\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"sprate-box pt0 mb15\">\n          <div class=\"cs-heading\">\n            <h2>Out Station EXPENSE</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n    <form (ngSubmit)=\"f1.form.valid && outTravelExpense()\" #f1=\"ngForm\" novalidate>\n      <div class=\"cs-bill\"  >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2> BASIC INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s4\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Purpose Of Visit\" type=\"text\" id=\"purposeOfVisit\" name=\"purposeOfVisit\" #purposeOfVisit=\"ngModel\" [(ngModel)]=\"OutStationExpense.purposeOfVisit\"  [ngClass]=\"{'has-error' : purposeOfVisit.invalid }\" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f1.submitted && purposeOfVisit.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"purposeOfVisit.errors.required\">Purpose Of Visit required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"ADVANCE AMOUNT\" type=\"number\" id=\"advanceAmount\" name=\"advanceAmount\" #advanceAmount=\"ngModel\" [(ngModel)]=\"OutStationExpense.advanceAmount\"  [ngClass]=\"{'has-error' : advanceAmount.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f1.submitted && advanceAmount.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"advanceAmount.errors.required\">Purpose Of Visit required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                </div>\n              </div>\n            </div>\n         \n          </div>\n        </div>\n\n           \n        <div class=\"collaps flat-collaps mt15\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      TRAVEL ENTITLEMENT\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      <div class=\"col s4 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">{{journyExpense.modeOfTravel}}\n                            <mat-select placeholder=\"Mode Of Travel\" name=\"modeOfTravel\" #modeOfTravel=\"ngModel\" [(ngModel)]=\"journyExpense.modeOfTravel\" >\n                              <mat-option [value]=1>BUS</mat-option>\n                              <mat-option [value]=2>TRAIN</mat-option>\n                              <mat-option [value]=3>AIRLINE</mat-option>\n                              <mat-option [value]=5>TAXI </mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s4\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"Mode\" name=\"class\" #class=\"ngModel\" [(ngModel)]=\"journyExpense.class\">\n                              <mat-option (click)=\"checkValid(journyExpense.class)\"value='AC Buses' *ngIf=\"journyExpense.mode==1\" >AC Buses </mat-option>\n                              <mat-option (click)=\"checkValid(journyExpense.class)\"value='Non - AC Buses' *ngIf=\"journyExpense.mode==1\">Non - AC Buses</mat-option>\n                              <mat-option (click)=\"checkValid(journyExpense.class)\"value='2A' *ngIf=\"journyExpense.mode==2\">2A</mat-option>\n                              <mat-option (click)=\"checkValid(journyExpense.class)\"value='3A' *ngIf=\"journyExpense.mode==2\">3A</mat-option>\n                              <mat-option (click)=\"checkValid(journyExpense.class)\"value='SL' *ngIf=\"journyExpense.mode==2\">SL</mat-option>\n                              <mat-option (click)=\"checkValid(journyExpense.class)\"value='Economy Class' *ngIf=\"journyExpense.mode==3\">Economy Class </mat-option>\n                              <mat-option (click)=\"checkValid(journyExpense.class)\"value='Private' *ngIf=\"journyExpense.mode==5\">Private</mat-option>\n                              <mat-option (click)=\"checkValid(journyExpense.class)\"value='Shared' *ngIf=\"journyExpense.mode==5\">Shared</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s4\" *ngIf=\"modeError==1\">\n                        You Are Not Eligable for This Type of Mode\n                      </div>\n                      <div >\n                        <div class=\"row mb0\">\n                          <div class=\"col s12 pl0\">\n                            <div class=\"heading-bg mb0 mt15 mrl24\">\n                              <h2>DEPARTURE</h2>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"row\">\n                          <div class=\"col s4 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput [matDatepicker]=\"nine\"  readonly [max]='currentDate' placeholder=\"Date\" name=\"departureDate\" #departureDate=\"ngModel\" [(ngModel)]=\"journyExpense.departureDate\">\n                                <mat-datepicker-toggle matSuffix [for]=\"nine\"></mat-datepicker-toggle>\n                                <mat-datepicker #nine></mat-datepicker>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s4\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Station\" name=\"departureStation\" #departureStation=\"ngModel\" [(ngModel)]=\"journyExpense.departureStation\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          \n                          <div class=\"col s4\">\n                            <div class=\"control-field mt14\">\n                              <div class=\"cs-input\">\n                                <input [owlDateTimeTrigger]=\"dt5\" [owlDateTime]=\"dt5\" placeholder=\"Time\" name=\"departureTime\" #departureTime=\"ngModel\" [(ngModel)]=\"journyExpense.departureTime\">\n                                <owl-date-time [pickerType]=\"'timer'\" #dt5></owl-date-time>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        \n                        <div class=\"row mb0\">\n                          <div class=\"col s12 pl0\">\n                            <div class=\"heading-bg  mb0 mt15\">\n                              <h2>ARRIVAL</h2>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"row\">\n                          <div class=\"col s4\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput [matDatepicker]=\"elevn\" readonly [min]=\"journyExpense.departureDate\" [max]=\"currentDate\" placeholder=\"Date\" name=\"arrivalDate\" #arrivalDate=\"ngModel\" [(ngModel)]=\"journyExpense.arrivalDate\">\n                                <mat-datepicker-toggle matSuffix [for]=\"elevn\"></mat-datepicker-toggle>\n                                <mat-datepicker #elevn></mat-datepicker>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s4\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Station\" name=\"arrivalStation\" #arrivalStation=\"ngModel\" [(ngModel)]=\"journyExpense.arrivalStation\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          \n                          <div class=\"col s4\">\n                            <div class=\"control-field\">\n                              <div class=\"cs-input mt14\">\n                                <input [owlDateTimeTrigger]=\"dt4\" [owlDateTime]=\"dt4\" placeholder=\"Time\" name=\"arrivalTime\" #arrivalTime=\"ngModel\" [(ngModel)]=\"journyExpense.arrivalTime\">\n                                <owl-date-time [pickerType]=\"'timer'\" #dt4></owl-date-time>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <mat-divider class=\"left-right-15 mt15\"></mat-divider>\n                        <div class=\"row\">\n                          <div *ngIf=\"journyExpense.mode!=4\" class=\"col s4 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Detail Ticket No\" name=\"ticketNo\" #ticketNo=\"ngModel\" [(ngModel)]=\"journyExpense.ticketNo\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s4 \">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Amount\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"journyExpense.amount\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    \n                    <div  *ngIf=\"journyExpense.mode!=4\" class=\"col s12 mt15 mb15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" [disabled]=\"!journyExpense.departureDate||!journyExpense.departureStation|| !journyExpense.departureTime||!journyExpense.arrivalStation||!journyExpense.arrivalDate||!journyExpense.arrivalTime||!journyExpense.modeOfTravel||!journyExpense.ticketNo||!journyExpense.amount\" (click)=\"addToOutTravelExpense()\">Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n        \n        <div *ngIf=\"tmpJournyExpense.length!=0\" class=\"row mt15\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"text-center\">BUS/RAIL/AIR FARE</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-head  bdrt\">\n              <table> \n                <tr >\n                  <th class=\"padding0 pt10 text-center\">\n                    DEPARTURE\n                    <table class=\"inner-table bdrt mt10\">\n                      <tr>\n                        <th class=\"text-center\">Date</th>\n                        <th class=\"text-center\">Station</th>\n                        <th class=\"text-center\">Time</th>\n                      </tr>\n                    </table>\n                  </th>\n                  <th class=\"padding0 pt10 text-center\">\n                    ARRIVAL\n                    <table class=\"inner-table bdrt mt10\">\n                      <tr>\n                        <th class=\"text-center\">Date</th>\n                        <th class=\"text-center\">Station</th>\n                        <th class=\"text-center\">Time</th>\n                      </tr>\n                    </table>\n                  </th>\n                  <th class=\"w150 text-center\">Class & Mode Of Travel</th>\n                  <th class=\"w100 text-center\">Status</th>\n                  <th class=\"w150\">Deatil Of Ticket No. / K.M. (PVT. VEHICLE)</th>\n                  <th class=\"w100 text-right\">Amount</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let journy of tmpJournyExpense;let index=index\">\n                    <td class=\"padding0\">\n                      <table class=\"inner-table\">\n                        <tr>\n                          <td class=\"text-center\">{{journy.departureDate |date:'EEEE, MMMM d, y'}}</td>\n                          <td class=\"text-center\">{{journy.departureStation}}</td>\n                          <td class=\"text-center\">{{journy.departureTime | date:'h:mm a'}}</td>\n                        </tr>\n                      </table>\n                    </td>\n                    <td class=\"padding0\">\n                      <table class=\"inner-table\">\n                        <tr>\n                          <td class=\"text-center\">{{journy.arrivalDate|date:'EEEE, MMMM d, y'}}</td>\n                          <td class=\"text-center\">{{journy.arrivalStation}}</td>\n                          <td class=\"text-center\">{{journy.arrivalTime | date:'h:mm a'}}</td>\n                        </tr>\n                      </table>\n                    </td>\n                    <td class=\"w170 text-center\">\n                        <span *ngIf=\"journy.modeOfTravel==1\"> BUS / </span>\n                        <span *ngIf=\"journy.modeOfTravel==2\"> TRAIN / </span>\n                        <span *ngIf=\"journy.modeOfTravel==3\"> AIRLINE / </span>\n                        <span *ngIf=\"journy.modeOfTravel==5\"> TEXI / </span>\n                        <span >{{journy.class}}</span></td>\n                    <td class=\"w100 approved\">Allow</td>\n                    <td *ngIf=\"journy.distanceKMS==null\" class=\"w150\">{{journy.ticketNo}}</td>\n                    <td class=\"w100 text-right\">&#x20B9; {{journy.amount}}\n                        <div class=\"action-btns\">\n                            <button mat-button class=\"delete\" (click)=\"removeOutTravelExps(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                          </div>\n                    </td>\n                  </tr>\n                  \n                  <tr class=\"active-col\">\n                    <td class=\"padding0\">\n                      <table class=\"inner-table\">\n                        <tr>\n                          <td>&nbsp;</td>\n                          <td>&nbsp;</td>\n                          <td>&nbsp;</td>\n                        </tr>\n                      </table>\n                    </td>\n                    <td class=\"padding0\">\n                      <table class=\"inner-table\">\n                        <tr>\n                          <td>&nbsp;</td>\n                          <td>&nbsp;</td>\n                          <td>&nbsp;</td>\n                        </tr>\n                      </table>\n                    </td>\n                    <td class=\"w150 text-center\">&nbsp;</td>\n                    <td class=\"w150 text-center\">&nbsp;</td>\n                    <td class=\"w100\">Total</td>\n                    <td class=\"w100 text-right\">&#x20B9; {{totalOutTravelExp}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        <div class=\"collaps flat-collaps mt15\">\n          <div class=\"collaps-area\">\n            <mat-accordion>\n              <mat-expansion-panel>\n                <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                  <mat-panel-title>\n                    HOTEL\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"inner-body\">\n                  <div class=\"from-fields\">\n                    <div class=\"row\">\n                      <div class=\"col s6 pl0\">\n                        <div class=\"row\">\n                          <div class=\"col s6 pl0\">\n                            <mat-form-field class=\"example-full-width\">\n                              <input type=\"text\" placeholder=\"City\" aria-label=\"city\"  name=\"city\" [(ngModel)]=\"Arraycity.city\" (input)=\"cityList(Arraycity.city)\" matInput  [matAutocomplete]=\"city\">\n                              <mat-autocomplete #city=\"matAutocomplete\" >\n                                <mat-option (click)=\"selectedCity(city)\" *ngFor=\"let city of cityListArray\" value=\"{{city.city}}\">\n                                  {{city.city}} / {{city.stateName}}\n                                </mat-option>\n                              </mat-autocomplete>\n                            </mat-form-field>\n                          </div>\n                          <div class=\"col s6 pr0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput [matDatepicker]=\"thirteens\" readonly [max]='currentDate' placeholder=\"Check In Date\" name=\"checkInDate\" #checkInDate=\"ngModel\" [(ngModel)]=\"outStationHotelExp.checkInDate\">\n                                <mat-datepicker-toggle matSuffix [for]=\"thirteens\"></mat-datepicker-toggle>\n                                <mat-datepicker #thirteens></mat-datepicker>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col s6 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput [matDatepicker]=\"thirteen\" readonly [min]=\"outStationHotelExp.checkInDate\" [max]='currentDate' placeholder=\"Check Out Date\" name=\"checkOutDate\" #checkOutDate=\"ngModel\" [(ngModel)]=\"outStationHotelExp.checkOutDate\">\n                                <mat-datepicker-toggle matSuffix [for]=\"thirteen\"></mat-datepicker-toggle>\n                                <mat-datepicker #thirteen></mat-datepicker>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s6 pr0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Hotel Name\" name=\"hotelName\" #hotelName=\"ngModel\" [(ngModel)]=\"outStationHotelExp.hotelName\" >\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"row\">\n                          <div class=\"col s6 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Amount\" (input)=\"checkValidAmount(outStationHotelExp.billAmount)\"  name=\"billAmount\" #billAmount=\"ngModel\" [(ngModel)]=\"outStationHotelExp.billAmount\" >\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                        <div *ngIf=\"hotelcitydiv==true\">\n                          You Are not eligable for this Amount\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <textarea matInput placeholder=\"Remark\"name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"outStationHotelExp.remarks\" class=\"h168\"></textarea>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s12 mt15 mb15\">\n                    <div class=\"cs-btn text-right\">\n                      <div class=\"in-btn\">\n                        <button mat-raised-button color=\"accent\" [disabled]=\"!outStationHotelExp.checkInDate ||!outStationHotelExp.checkOutDate ||!outStationHotelExp.billAmount || !outStationHotelExp.hotelName || !outStationHotelExp.city || !outStationHotelExp.remarks\" (click)=\"outStationHotelExpList()\">Add To List</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </mat-expansion-panel>\n            </mat-accordion>\n          </div>\n        </div>\n        \n        \n        <div *ngIf=\"tmpoutStationHotelExp.length!=0\" class=\"row mt15\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w150\">City</th>\n                  <th class=\"w120\">Check In Date</th>\n                  <th class=\"w135\">Check Out Date</th>\n                  <th class=\"w160\">Hotel name</th>\n                  <th class=\"w100 text-right\">Amount</th>\n                  <th class=\"w100\">Status</th>\n                  <th>Remark</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\" let hotel of tmpoutStationHotelExp;let index=index\">\n                    <td class=\"w150\">{{hotel.city.city}}</td>\n                    <td class=\"w120\">{{hotel.checkInDate|date:'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w135\">{{hotel.checkOutDate|date:'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w160\">{{hotel.hotelName}}</td>\n                    <td class=\"w100 text-right\">&#x20B9; {{hotel.billAmount}}</td>\n                    <td class=\"w100 approved\" *ngIf=\"hotelCityError==0\" >Allow</td>\n                    <td class=\"w100 reject\" *ngIf=\"hotelCityError==1\" >Not Allow</td>\n                    <td><p>{{hotel.remarks}}</p>\n                        <div class=\"action-btns\">\n                            <button mat-button class=\"delete\" (click)=\"removeOutHotelExps(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                          </div>\n                    \n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n         <div class=\"collaps flat-collaps mt15\">\n          <div class=\"collaps-area\">\n            <mat-accordion>\n              <mat-expansion-panel>\n                <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                  <mat-panel-title>\n                    FOOD\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"inner-body\">\n                  <div class=\"from-fields\">\n                    <div class=\"row\">\n                      <div class=\"col s6 pl0\">\n                        <div class=\"row\">\n                          <div class=\"col s6 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"example-full-width\">\n                                <input type=\"text\" placeholder=\"City\" aria-label=\"city\"  name=\"city\" [(ngModel)]=\"Arraycity.city\" (input)=\"cityList(Arraycity.city)\" matInput  [matAutocomplete]=\"city1\">\n                                <mat-autocomplete #city1=\"matAutocomplete\" >\n                                  <mat-option (click)=\"selectedFoodExpenseCity(city)\" *ngFor=\"let city of cityListArray\" value=\"{{city.city}}\">\n                                    {{city.city}} / {{city.stateName}}\n                                  </mat-option>\n                                </mat-autocomplete>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s6 pr0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput [matDatepicker]=\"thirteenss\"  placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"outStationFoodExp.date\">\n                                <mat-datepicker-toggle matSuffix [for]=\"thirteenss\"></mat-datepicker-toggle>\n                                <mat-datepicker #thirteenss></mat-datepicker>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col s6 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Amount\" (input)=\"checkValidFoodAmount(outStationFoodExp.billAmount)\" name=\"billAmount\" #billAmount=\"ngModel\" [(ngModel)]=\"outStationFoodExp.billAmount\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                        <div *ngIf=\"foodCityError==1\">\n                          You are not Eligable for this Amount\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <textarea matInput placeholder=\"Remark\" class=\"h100\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"outStationFoodExp.remarks\" ></textarea>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s12 mt15 mb15\">\n                    <div class=\"cs-btn text-right\">\n                      <div class=\"in-btn\">\n                        <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"outStationFoodExpList()\" >Add To List</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </mat-expansion-panel>\n            </mat-accordion>\n          </div>\n        </div>\n        \n        <div *ngIf=\"tmpoutStationFoodExp.length!=0\" class=\"row mt15\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w200\">City</th>\n                  <th class=\"w120\">Date</th>\n                  <th class=\"w120\">Status</th>\n                  <th class=\"w150 text-right\">Amount</th>\n                  <th>Remark</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let food of tmpoutStationFoodExp;let index=index\">\n                    <td class=\"w200\">{{food.city.city}}</td>\n                    <td class=\"w120\">{{food.date}}</td>\n                    <td class=\"w120 approved\" *ngIf=\"foodCityError==0\">Allow</td>\n                    <td class=\"w120 reject\" *ngIf=\"foodCityError==0\">Not-Allow</td>\n                    <td class=\"w150 text-right\">&#x20B9; {{food.billAmount}}</td>\n                    <td><p>{{food.remarks}}</p>\n                        <div class=\"action-btns\">\n                            <button mat-button class=\"delete\" (click)=\"removeOutFoodExpnse(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                          </div>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div> \n        \n        \n        <div class=\"collaps flat-collaps mt15\">\n          <div class=\"collaps-area\">\n            <mat-accordion>\n              <mat-expansion-panel>\n                <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                  <mat-panel-title>\n                    LOCAL CONVENCE\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"inner-body\">\n                  <div class=\"from-fields\">\n                     <div class=\"row\">\n                      <div class=\"col s3 pr0\">\n                        <div class=\"control-field\">\n                          <!-- <mat-form-field class=\"cs-input infix-bodr8\">\n                            <mat-select placeholder=\"Mode Of Travel\" name=\"modeOfTravel\" #modeOfTravel=\"ngModel\" [(ngModel)]=\"outStationLocalExp.modeOfTravel\" >\n                              <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" [value]=1>AUTO</mat-option>\n                              <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" [value]=2>BUS</mat-option>\n                              <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" [value]=3>AC TAXI</mat-option>\n                              <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" [value]=4>NON-AC TAXI </mat-option>\n                              <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" [value]=5>TWO WHEELER </mat-option>\n                            </mat-select>\n                          </mat-form-field> -->\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                              <mat-select placeholder=\"Mode Of Travel\" name=\"modeOfTravel\" #modeOfTravel=\"ngModel\" [(ngModel)]=\"outStationLocalExp.modeOfTravel\" >\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=10>AUTO</mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=1>BUS</mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=6>AC TAXI</mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=7>NON-AC TAXI </mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=8>TWO WHEELER </mat-option>\n                                <mat-option (click)=\"checkValidLocalFare(outStationLocalExp.modeOfTravel)\" value=5>METRO </mat-option>\n                              </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div *ngIf=\"localFareError==1\">\n                          You Are Not Allow This Travel Mode\n                        </div>\n                      </div>\n                      <div class=\"col s3 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput [matDatepicker]=\"fourteen\" readonly [max]='currentDate' placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"outStationLocalExp.date\"> \n                            <mat-datepicker-toggle matSuffix [for]=\"fourteen\"></mat-datepicker-toggle>\n                            <mat-datepicker #fourteen></mat-datepicker>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"col s3 \">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"From\" name=\"from\" #from=\"ngModel\" [(ngModel)]=\"outStationLocalExp.from\" >\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"col s3 \">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"To\" name=\"to\" #to=\"ngModel\" [(ngModel)]=\"outStationLocalExp.to\" >\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      \n                    </div> \n                    \n                    <div class=\"row\">\n                      <div class=\"col s3 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Fare\" name=\"fare\" #fare=\"ngModel\" [(ngModel)]=\"outStationLocalExp.fare\">\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </div>\n                    \n                  </div>\n                  \n                  <div class=\"col s12 mt15 mb15\">\n                    <div class=\"cs-btn text-right\">\n                      <div class=\"in-btn\">\n                        <button mat-raised-button color=\"accent\" [disabled]=\"!outStationLocalExp.date||!outStationLocalExp.from||!outStationLocalExp.to||!outStationLocalExp.modeOfTravel||!outStationLocalExp.fare\" (click)=\"outStationLocalExpList()\">Add To List</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </mat-expansion-panel>\n            </mat-accordion>\n          </div>\n        </div> \n        \n         <div *ngIf=\"tmpoutStationLocalExp.length!=0\" class=\"row mt15\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table> \n                <tr>\n                  <th class=\"w130\">Date</th>\n                  <th class=\"w170 text-center\">From</th>\n                  <th class=\"w170 text-center\">To</th>\n                  <th class=\"w170 text-center\">Mode</th>\n                  <th>Fare</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let outLocalTravel of tmpoutStationLocalExp;let index=index \">\n                    <td class=\"w130\"> {{outLocalTravel.date|date:'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w170 text-center\">{{outLocalTravel.from}}</td>\n                    <td class=\"w170 text-center\">{{outLocalTravel.to}}</td>\n                    <td class=\"w170 text-center\">\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==10\">AUTO</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==1\">BUS</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==6\">AC TEXI</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==7\">NON-AC TEXI</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==8\">TWO WHEELER</span>\n                        <span *ngIf=\"outLocalTravel.modeOfTravel==5\">METRO</span>\n                      </td>\n                    <td>&#x20B9; {{outLocalTravel.fare}}\n                        <div class=\"action-btns\">\n                            <button mat-button class=\"delete\" (click)=\"removeOutLocalExps(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                          </div>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div> \n        \n        <div class=\"collaps flat-collaps mt15\">\n            <div class=\"collaps-area\">\n              <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                    <mat-panel-title>\n                      MISC EXPENSE INFORMATION\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <div class=\"inner-body\">\n                    <div class=\"from-fields\">\n                      <div class=\"row\">\n                        <div class=\"col s6 pl0\">\n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <mat-select placeholder=\"Nature of expense\" name=\"miscActivityType\" #miscActivityType=\"ngModel\" [(ngModel)]=\"outStationMiscExp.miscActivityType\" >\n                                    <mat-option value=\"1\">Entertainment Expenses</mat-option>\n                                    <mat-option value=\"2\">Gift To Dealers</mat-option>\n                                    <mat-option value=\"3\">Lunch/Dinner With Team</mat-option>\n                                    <mat-option value=\"4\">Training Program</mat-option>\n                                    <mat-option value=\"5\">Other</mat-option>\n                                  </mat-select>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput [matDatepicker]=\"five\" readonly [max]='currentDate' placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"outStationMiscExp.date\" readonly>\n                                  <mat-datepicker-toggle matSuffix [for]=\"five\"></mat-datepicker-toggle>\n                                  <mat-datepicker #five></mat-datepicker>\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s6 pl0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Place Of Expense\" name=\"placeOfExpense\" #placeOfExpense=\"ngModel\" [(ngModel)]=\"outStationMiscExp.placeOfExpense\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                            \n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Name of Beneficiaries\" name=\"nameOfBeneficiary\" #nameOfBeneficiary=\"ngModel\" [(ngModel)]=\"outStationMiscExp.nameOfBeneficiary\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"row\">\n                            <div class=\"col s6 pr0\">\n                              <div class=\"control-field\">\n                                <mat-form-field class=\"cs-input infix-bodr8\">\n                                  <input matInput placeholder=\"Amount\" name=\"amount\" #total=\"ngModel\" [(ngModel)]=\"outStationMiscExp.amount\">\n                                </mat-form-field>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <textarea matInput placeholder=\"Remark\" class=\"h165\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"outStationMiscExp.remarks\" ></textarea>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        \n                      </div>\n                    </div>\n                    \n                    <div class=\"col s12 mt15\">\n                      <div class=\"cs-btn text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" [disabled]=\"!outStationMiscExp.miscActivityType ||!outStationMiscExp.date ||!outStationMiscExp.placeOfExpense ||!outStationMiscExp.nameOfBeneficiary ||!outStationMiscExp.amount ||!outStationMiscExp.remarks\" (click)=\"addOutMiscExpenseList()\">Add To List</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n          \n          <div *ngIf=\"tmpOutTravelMiscExp.length!=0\" class=\"row mt15\">\n            <div class=\"cs-table left-right-20\">\n              <div class=\"table-head\">\n                <table> \n                  <tr >\n                    <th class=\"w160\">Date</th>\n                    <th class=\"w180\">Nature Of Exp.</th>\n                    <th class=\"w170\">Beneficiaries Name</th>\n                    <th class=\"w160\">Place Of Expense</th>\n                    <th class=\"w100 text-right\">Total</th>\n                    <th>Remark</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr *ngFor=\"let misc of tmpOutTravelMiscExp\">\n                      <td class=\"w160\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\n                      <!-- <td class=\"w200\">{{misc.miscActivityType}}</td> -->\n                      <td *ngIf=\"misc.miscActivityType==1\" class=\"w180\">Entertainment Expenses</td>\n                      <td *ngIf=\"misc.miscActivityType==2\" class=\"w180\">Gift To Dealers</td>\n                      <td *ngIf=\"misc.miscActivityType==3\" class=\"w180\">Lunch/Dinner With Team</td>\n                      <td *ngIf=\"misc.miscActivityType==4\" class=\"w180\">Training Program</td>\n                      <td *ngIf=\"misc.miscActivityType==5\" class=\"w180\"> Other</td>\n                      <td class=\"w170\">{{misc.nameOfBeneficiary}}</td>\n                      <td class=\"w160\">{{misc.placeOfExpense}}</td>\n                      <td class=\"w100 text-right\"> &#x20B9; {{misc.amount}}</td>\n                      <td> {{misc.remarks}}\n                          <div class=\"action-btns\">\n                              <button mat-button class=\"delete\" (click)=\"removeOutStationMiscExp(index)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                            </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        <div class=\"row mt15\">\n            <div class=\"col s12\">\n                <div class=\"cs-file-multiple scroll\">\n                  <ul>\n                    <li class=\"w110 pr10\" *ngFor=\"let urlData of OutStationExpense.documents;let i=index\">\n                      <label>\n                        <img src=\"{{api+urlData.documentId+'/'+'2'}}\">\n                        <a (click)=\"deleteimg(urlData.documentId,urlData.fileName)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                      </label>\n                    </li>\n                    <li class=\"w110 pr10\">\n                      <div class=\"cs-file wp100\">\n                        <label>\n                          <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\">\n                          <i class=\"material-icons add-file-icon\" >add</i>\n                        </label>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n        </div>\n        \n        \n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sm-table\">\n              <table>\n                <tr>\n                  <th class=\"text-right\">OutStation Travel</th>\n                  <th class=\"w30 text-center\">:</th>\n                  <td class=\"w100 text-right\">{{totalOutTravelExp |currency: 'INR':true}}</td>\n                </tr>\n                <tr>\n                  <th class=\"text-right\">OutStation Hotel Exp.</th>\n                  <th class=\"text-center\">:</th>\n                  <td class=\"text-right\">{{totalOutHotelExp|currency: 'INR':true}}</td>\n                </tr>\n                <tr>\n                  <th class=\"text-right\">OutStation Local Conveyances</th>\n                  <th class=\"text-center\">:</th>\n                  <td class=\"text-right\">{{totalOutLocalExp|currency: 'INR':true}}</td>\n                </tr>\n                <tr>\n                    <th class=\"text-right\">OutStation Food Exp.</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">{{totalOutStationFoodExp |currency: 'INR':true}}</td>\n                  </tr>\n                  <tr>\n                    <th class=\"text-right\">OutStation Misc Exp.</th>\n                    <th class=\"w30 text-center\">:</th>\n                    <td class=\"w100 text-right\">{{totalOutStationFoodExp |currency: 'INR':true}}</td>\n                  </tr>\n              </table>\n            </div>\n          </div>\n        </div> \n        \n        <mat-divider class=\"mt15 mb15\"></mat-divider>\n        \n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sm-table\">\n              <table>\n                <tr>\n                  <th class=\"text-right\">BILL AMOUNT</th>\n                  <th class=\" w30 text-center\">:</th>\n                  <td class=\" w120 text-right\"> {{totalOutStationExp|currency: 'INR':true}}</td>\n                </tr>\n                <tr>\n                  <th class=\"text-right\">ADVANCE</th>\n                  <th class=\"text-center\">:</th>\n                  <td class=\"text-right\">{{OutStationExpense.advanceAmount|currency: 'INR':true}}</td>\n                </tr>\n                <tr>\n                  <th class=\"text-right\">CLAIM</th>\n                  <th class=\"text-center\">:</th>\n                  <td class=\"text-right\"> {{TotalClaimAmount|currency: 'INR':true}}</td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col s12 mt15 mb15\">\n            <div class=\"cs-btn text-right\">\n              <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\"(click)=\"myoutstationexpense(1)\" >Save as Draft</button>\n              </div>\n            </div>\n          </div>\n          <div class=\"col s12 mt15 mb15\">\n              <div class=\"cs-btn text-right\">\n                <div class=\"in-btn\">\n                  <button mat-raised-button color=\"accent\" (click)=\"myoutstationexpense(2)\">Subbmit For Approvel</button>\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n    </form>\n    \n      </div>\n    </div>\n  </div>\n  \n  <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/expense/edit-out-station/edit-out-station.component.scss":
/*!**************************************************************************!*\
  !*** ./src/app/expense/edit-out-station/edit-out-station.component.scss ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZWRpdC1vdXQtc3RhdGlvbi9lZGl0LW91dC1zdGF0aW9uLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/expense/edit-out-station/edit-out-station.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/expense/edit-out-station/edit-out-station.component.ts ***!
  \************************************************************************/
/*! exports provided: EditOutStationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditOutStationComponent", function() { return EditOutStationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");






// import moment = require('moment');
var EditOutStationComponent = /** @class */ (function () {
    function EditOutStationComponent(route, service, dialog, toast, router) {
        var _this = this;
        this.route = route;
        this.service = service;
        this.dialog = dialog;
        this.toast = toast;
        this.router = router;
        this.expenseList = [];
        this.loader = false;
        this.div = false;
        this.user = {};
        this.OutStationExpense = {};
        this.miscExpenselist = {};
        this.journyExpense = {};
        this.outStationHotelExp = {};
        this.outStationFoodExp = {};
        this.outStationLocalExp = {};
        this.outStationMiscExp = {};
        this.tmpJournyExpense = [];
        this.tmpoutStationHotelExp = [];
        this.tmpoutStationFoodExp = [];
        this.tmpoutStationLocalExp = [];
        this.tmpOutTravelMiscExp = [];
        this.currentDate = new Date().toJSON().split('T')[0];
        this.totalExpenseList = [];
        this.allowanceList = [];
        this.cityListArray = [];
        this.Arraycity = {};
        this.picdata = {};
        this.picvalue = [];
        this.totalOutMiscExp = 0;
        // totalOutTravelExp:any=0;
        // calculateOutTravelExpese(outTravelExpenseArray)
        // {
        //   this.totalOutTravelExp=0;
        //   for(let i=0;i<outTravelExpenseArray.length;i++)
        //   {
        //     this.totalOutTravelExp=parseInt(this.totalOutTravelExp)+parseInt(outTravelExpenseArray[i].amount)
        //   }
        //   this.calculateTotalOutStationExp();
        // }
        this.totalOutStationExp = 0;
        this.TotalClaimAmount = 0;
        this.totalOutStationFoodExp = 0;
        this.totalOutTravelExp = 0;
        this.totalOutHotelExp = 0;
        this.totalOutLocalExp = 0;
        this.selectedFile = [];
        this.documentUrl = [];
        this.hotelCity = {};
        this.hotelcitydiv = false;
        this.hotelCityError = 0;
        this.foodCityError = 0;
        this.modeError = 0;
        this.localFareError = 0;
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.expenseId = params.id;
            console.log(_this.expenseId);
            if (_this.expenseId) {
                _this.getExpenseList(_this.expenseId);
                // this.getDocument(this.expenseId) 
            }
        });
    }
    EditOutStationComponent.prototype.ngOnInit = function () {
    };
    EditOutStationComponent.prototype.getExpenseList = function (expenseId) {
        var _this = this;
        this.loader = true;
        this.service.fileData("", "expense/detail/" + expenseId).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.OutStationExpense = result['data'];
                _this.tmpJournyExpense = _this.OutStationExpense.outStationExpense.outStationTravelExp;
                _this.tmpoutStationHotelExp = _this.OutStationExpense.outStationExpense.outStationHotelExp;
                _this.tmpoutStationFoodExp = _this.OutStationExpense.outStationExpense.foodExpenses;
                _this.tmpoutStationLocalExp = _this.OutStationExpense.outStationExpense.outStationLocalExp;
                _this.tmpOutTravelMiscExp = _this.OutStationExpense.outStationExpense.miscExpenses;
                _this.url = _this.service.dburl;
                _this.requestfn = 'download/document/';
                _this.api = _this.url + _this.requestfn;
                if (_this.tmpJournyExpense.length) {
                    _this.calculateOutTravelExpese(_this.tmpJournyExpense);
                }
                if (_this.tmpoutStationHotelExp.length) {
                    _this.calculateOutHotelExp(_this.tmpoutStationHotelExp);
                }
                if (_this.tmpoutStationFoodExp.length) {
                    _this.calculateOutStationFood(_this.tmpoutStationFoodExp);
                }
                if (_this.tmpoutStationLocalExp.length) {
                    _this.calculateOutStationLocalExp(_this.tmpoutStationLocalExp);
                }
                if (_this.tmpOutTravelMiscExp.length) {
                    _this.calculateOutMiscExp(_this.tmpOutTravelMiscExp);
                }
            }
        });
    };
    EditOutStationComponent.prototype.myoutstationexpense = function (status) {
        this.OutStationExpense.status = status;
    };
    EditOutStationComponent.prototype.outTravelExpense = function () {
        var _this = this;
        this.OutStationExpense.outStationExpense = { outStationHotelExp: this.tmpoutStationHotelExp, outStationLocalExp: this.tmpoutStationLocalExp, outStationTravelExp: this.tmpJournyExpense, foodExpenses: this.tmpoutStationFoodExp, miscExpenses: this.tmpOutTravelMiscExp };
        this.OutStationExpense.userId = this.userId;
        // this.OutStationExpense.department=this.userInformation.userType;
        // this.OutStationExpense.expenseType=this.expenseForm.form;
        // this.OutStationExpense.expenseSanctioner=this.expenseForm.expenseSanctioner;
        this.OutStationExpense.claimAmount = this.TotalClaimAmount;
        this.OutStationExpense.actualExpenseAmount = this.totalOutStationExp;
        console.log(this.OutStationExpense);
        this.loader = true;
        this.service.fetchData(this.OutStationExpense, "expense/update").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                // this.uploadBillAttechment(result['data']);
                _this.toast.openSucess("Expense", "Added SuccessFully");
                _this.router.navigate(['/expense-list']);
            }
        });
    };
    EditOutStationComponent.prototype.getAllowanceList = function (designation) {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ designation: designation }, "allowance/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.allowanceList = result['data'][0];
            }
        });
    };
    EditOutStationComponent.prototype.cityList = function (city) {
        var _this = this;
        // this.loader=true;
        console.log(city);
        this.service.fileData("", "city/list/" + city).subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.cityListArray = result['data'];
            }
        });
    };
    EditOutStationComponent.prototype.deleteimg = function (picid, filename) {
        var _this = this;
        console.log(picid, filename);
        this.picdata.documentId = picid;
        this.picdata.action = 2;
        this.picdata.fileName = filename;
        this.picdata.documentType = 4;
        this.picdata.referenceId = this.expenseId;
        this.picvalue.push(this.picdata);
        console.log(this.picvalue);
        this.dialog.delete("Document").then(function (result) {
            console.log(result);
            if (result) {
                _this.loader = true;
                _this.service.fetchData(_this.picvalue, "document/update").subscribe(function (resp) {
                    console.log(resp);
                    if (resp['status'] == 'Success') {
                        _this.toast.openSucess('Image Deleted Sucessfully', '');
                        _this.loader = false;
                        _this.getExpenseList(_this.expenseId);
                        _this.picvalue = [];
                    }
                });
            }
        });
    };
    EditOutStationComponent.prototype.calculateOutMiscExp = function (miscExp) {
        if (miscExp === void 0) { miscExp = []; }
        this.totalOutMiscExp = 0;
        for (var i = 0; i < miscExp.length; i++) {
            this.totalOutMiscExp = parseInt(this.totalOutMiscExp) + parseInt(miscExp[i].amount);
        }
        console.log(this.totalOutMiscExp);
    };
    EditOutStationComponent.prototype.calculateTotalOutStationExp = function () {
        this.totalOutStationExp = parseInt(this.totalOutTravelExp) + parseInt(this.totalOutHotelExp) + parseInt(this.totalOutLocalExp) + parseInt(this.totalOutStationFoodExp) + parseInt(this.totalOutMiscExp);
        if (parseInt(this.totalOutStationExp) > parseInt(this.OutStationExpense.advanceAmount)) {
            this.TotalClaimAmount = parseInt(this.totalOutStationExp) - parseInt(this.OutStationExpense.advanceAmount);
        }
    };
    EditOutStationComponent.prototype.calculateOutStationFood = function (foodExpense) {
        this.totalOutStationFoodExp = 0;
        for (var i = 0; i < foodExpense.length; i++) {
            this.totalOutStationFoodExp = parseInt(this.totalOutStationFoodExp) + parseInt(foodExpense[i].billAmount);
        }
        console.log(this.totalOutStationFoodExp);
        this.calculateTotalOutStationExp();
    };
    EditOutStationComponent.prototype.calculateOutTravelExpese = function (outTravelExpenseArray) {
        this.totalOutTravelExp = 0;
        for (var i = 0; i < outTravelExpenseArray.length; i++) {
            this.totalOutTravelExp = parseInt(this.totalOutTravelExp) + parseInt(outTravelExpenseArray[i].amount);
        }
        this.calculateTotalOutStationExp();
    };
    EditOutStationComponent.prototype.calculateOutHotelExp = function (outHotelExpArray) {
        this.totalOutHotelExp = 0;
        for (var i = 0; i < outHotelExpArray.length; i++) {
            this.totalOutHotelExp = parseInt(this.totalOutHotelExp) + parseInt(outHotelExpArray[i].billAmount);
        }
        this.calculateTotalOutStationExp();
    };
    EditOutStationComponent.prototype.calculateOutStationLocalExp = function (OutstationTravelExpArray) {
        console.log(OutstationTravelExpArray);
        this.totalOutLocalExp = 0;
        for (var i = 0; i < OutstationTravelExpArray.length; i++) {
            this.totalOutLocalExp = parseInt(this.totalOutLocalExp) + parseInt(OutstationTravelExpArray[i].fare);
        }
        this.calculateTotalOutStationExp();
    };
    // totalOutMiscExp:any=0
    // tmpJournyExpense:any=[];
    EditOutStationComponent.prototype.addToOutTravelExpense = function () {
        console.log(this.journyExpense);
        this.tmpJournyExpense.push(this.journyExpense);
        console.log(this.tmpJournyExpense);
        this.calculateOutTravelExpese(this.tmpJournyExpense);
        this.journyExpense = {};
    };
    // tmpoutStationHotelExp:any=[];
    EditOutStationComponent.prototype.outStationHotelExpList = function () {
        console.log(this.outStationHotelExp);
        // this.outStationHotelExp.total=parseInt(this.outStationHotelExp.hotelBill)+parseInt(this.outStationHotelExp.fixedDA)+parseInt(this.outStationHotelExp.foodExpense)+parseInt(this.outStationHotelExp.otherExpense);
        this.tmpoutStationHotelExp.push(this.outStationHotelExp);
        console.log(this.tmpoutStationHotelExp);
        this.calculateOutHotelExp(this.tmpoutStationHotelExp);
        this.outStationHotelExp = {};
        this.Arraycity.city = '';
        // this.hotelcitydiv=false;
    };
    // outStationFoodExp:any={};
    // tmpoutStationFoodExp:any=[];
    EditOutStationComponent.prototype.outStationFoodExpList = function () {
        console.log(this.outStationFoodExp);
        this.tmpoutStationFoodExp.push(this.outStationFoodExp);
        this.calculateOutStationFood(this.tmpoutStationFoodExp);
        this.outStationFoodExp = {};
        this.Arraycity.city = '';
    };
    // tmpoutStationLocalExp:any=[];
    EditOutStationComponent.prototype.outStationLocalExpList = function () {
        console.log(this.outStationLocalExp);
        this.tmpoutStationLocalExp.push(this.outStationLocalExp);
        console.log(this.tmpoutStationLocalExp);
        this.calculateOutStationLocalExp(this.tmpoutStationLocalExp);
        this.outStationLocalExp = {};
    };
    // tmpOutTravelMiscExp:any=[];
    EditOutStationComponent.prototype.addOutMiscExpenseList = function () {
        this.tmpOutTravelMiscExp.push(this.outStationMiscExp);
        this.outStationMiscExp = {};
        this.calculateOutMiscExp(this.tmpOutTravelMiscExp);
    };
    EditOutStationComponent.prototype.removeOutStationMiscExp = function (index) {
        this.tmpOutTravelMiscExp.splice(index, 1);
    };
    EditOutStationComponent.prototype.removeOutLocalExps = function (index) {
        this.tmpoutStationLocalExp.splice(index, 1);
    };
    EditOutStationComponent.prototype.removeOutFoodExpnse = function (index) {
        this.tmpoutStationFoodExp.splice(index, 1);
    };
    EditOutStationComponent.prototype.removeOutHotelExps = function (index) {
        this.tmpoutStationHotelExp.splice(index, 1);
    };
    EditOutStationComponent.prototype.removeOutTravelExps = function (index) {
        this.tmpJournyExpense.splice(index, 1);
    };
    EditOutStationComponent.prototype.insertImage = function (data) {
        var _this = this;
        this.selectedFile = [];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.documentUrl.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.documentUrl);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        setTimeout(function () {
            _this.Insert_Image();
        }, 500);
    };
    EditOutStationComponent.prototype.Insert_Image = function () {
        var _this = this;
        this.misc_Expense_Document = new FormData;
        this.misc_Expense_Document.action = 1;
        this.misc_Expense_Document.binaryData = this.documentUrl[this.documentUrl.length - 1];
        this.misc_Expense_Document.documentType = 4;
        this.misc_Expense_Document['documentName'] = this.selectedFile[0].name;
        this.misc_Expense_Document.referenceId = this.expenseId;
        this.loader = true;
        for (var i = 0; i < this.selectedFile.length; i++) {
            this.misc_Expense_Document.fileName = "image" + i + ".jpg", this.selectedFile[i];
        }
        console.log(this.misc_Expense_Document);
        var value = [];
        value[0] = this.misc_Expense_Document;
        console.log(value);
        this.service.fetchData(value, "document/update").subscribe(function (resp) {
            console.log(resp);
            if (resp) {
                _this.loader = false;
                _this.getExpenseList(_this.expenseId);
                _this.toast.openSucess('Image Added Sucessfully', '');
            }
        });
    };
    EditOutStationComponent.prototype.selectedCity = function (city) {
        this.hotelCity = city;
        // let value={stateMasterId:city.stateMasterId,city:city.city+'/'+city.stateName+'/'+city.districtName};
        this.outStationHotelExp.city = city.city + '/' + city.stateName + '/' + city.districtName;
        this.outStationHotelExp.stateMasterId = city.stateMasterId;
        console.log(this.outStationHotelExp.city);
    };
    EditOutStationComponent.prototype.selectedFoodExpenseCity = function (city) {
        this.hotelCity = city;
        var value = { stateMasterId: city.stateMasterId, city: city.city + '/' + city.stateName + '/' + city.districtName };
        console.log(value);
        this.outStationFoodExp.city = city.city + '/' + city.stateName + '/' + city.districtName;
        this.outStationFoodExp.stateMasterId = city.stateMasterId;
    };
    EditOutStationComponent.prototype.checkValidAmount = function (amount) {
        this.hotelCityError = 0;
        this.hotelcitydiv = true;
        if (this.hotelCity.category == 'A') {
            if (parseInt(amount) > parseInt(this.allowanceList.lodgingAllowanceA)) {
                this.hotelCityError = 1;
                this.hotelcitydiv = true;
            }
        }
        if (this.hotelCity.category == 'B') {
            if (parseInt(amount) > parseInt(this.allowanceList.lodgingAllowanceB)) {
                this.hotelcitydiv = true;
                this.hotelCityError = 1;
            }
        }
        if (this.hotelCity.category == 'C') {
            if (parseInt(amount) > parseInt(this.allowanceList.lodgingAllowanceC)) {
                this.hotelcitydiv = true;
                this.hotelCityError = 1;
            }
        }
        if (this.hotelCity.category == 'A+') {
            if (parseInt(amount) > parseInt(this.allowanceList.lodgingAllowanceAPlus)) {
                this.hotelcitydiv = true;
                this.hotelCityError = 1;
            }
        }
        console.log(this.hotelCityError);
    };
    EditOutStationComponent.prototype.checkValidFoodAmount = function (amount) {
        this.foodCityError = 0;
        console.log("food");
        if (this.hotelCity.category == 'A') {
            if (parseInt(amount) > parseInt(this.allowanceList.foodAllowanceA)) {
                this.foodCityError = 1;
            }
        }
        if (this.hotelCity.category == 'B') {
            if (parseInt(amount) > parseInt(this.allowanceList.foodAllowanceA)) {
                this.foodCityError = 1;
            }
        }
        if (this.hotelCity.category == 'C') {
            if (parseInt(amount) > parseInt(this.allowanceList.foodAllowanceA)) {
                this.foodCityError = 1;
            }
        }
        if (this.hotelCity.category == 'A+') {
            if (parseInt(amount) > parseInt(this.allowanceList.foodAllowanceAPlus)) {
                this.foodCityError = 1;
            }
        }
        console.log(this.foodCityError);
    };
    EditOutStationComponent.prototype.checkValid = function (modeType) {
        console.log(modeType);
        this.modeError = 0;
        if (modeType == 'AC Buses') {
            if (this.allowanceList.travelBusAC == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'Non - AC Buses') {
            if (this.allowanceList.travelBusNonAC == false) {
                this.modeError = 1;
            }
        }
        if (modeType == '2A') {
            if (this.allowanceList.travelTrain2A == false) {
                this.modeError = 1;
            }
        }
        if (modeType == '3A') {
            if (this.allowanceList.travelTrain3A == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'SL') {
            if (this.allowanceList.travelTrainSL == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'Private') {
            if (this.allowanceList.travelTaxiPrivate == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'Economy Class') {
            if (this.allowanceList.travelTaxiShared == false) {
                this.modeError = 1;
            }
        }
        if (modeType == 'Shared') {
            if (this.allowanceList.flightEconomyClass == false) {
                this.modeError = 1;
            }
            console.log(this.modeError);
        }
    };
    EditOutStationComponent.prototype.checkValidLocalFare = function (modeType) {
        this.localFareError = 0;
        if (modeType == '1') {
            if (this.allowanceList.localAuto != true) {
                this.localFareError = 1;
            }
        }
        if (modeType == '2') {
            if (this.allowanceList.localBus != true) {
                this.localFareError = 1;
            }
        }
        if (modeType == '3') {
            if (this.allowanceList.localTaxiAC != true) {
                this.localFareError = 1;
            }
        }
        if (modeType == '4') {
            if (this.allowanceList.localTaxiNonAC != true) {
                this.localFareError = 1;
            }
        }
        if (modeType == '5') {
            if (this.allowanceList.localTwoWheeler != true) {
                this.localFareError = 1;
            }
        }
    };
    EditOutStationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-edit-out-station',
            template: __webpack_require__(/*! ./edit-out-station.component.html */ "./src/app/expense/edit-out-station/edit-out-station.component.html"),
            styles: [__webpack_require__(/*! ./edit-out-station.component.scss */ "./src/app/expense/edit-out-station/edit-out-station.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], EditOutStationComponent);
    return EditOutStationComponent;
}());



/***/ }),

/***/ "./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n      <img src=\"assets/img/loader.png\" class=\"rotate\">\n    </div>\n  \n<div class=\"middle-container\">\n  <div class=\"page-heading\">\n    <img src=\"assets/img/payment_icon.svg\" class=\"h-icon\">\n    <div class=\"heading-text\">\n      <h2>Expense</h2>\n      <p>Add Expense</p>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"container-outer\" >\n  <div class=\"container\" >\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"sprate-box pt0 mb15\">\n          <div class=\"cs-heading\">\n            <h2>Promotion EXPENSE</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n    <form (ngSubmit)=\"f2.form.valid && promotionexpense()\" #f2=\"ngForm\" novalidate>\n      <div class=\"cs-bill\">\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>BASIC INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s4 \">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Purpose Of Visit\" type=\"text\" id=\"purposeOfVisit\" name=\"purposeOfVisit\" #purposeOfVisit=\"ngModel\" [(ngModel)]=\"salesExpense.purposeOfVisit\" [ngClass]=\"{'has-error' : purposeOfVisit.invalid }\" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f2.submitted && purposeOfVisit.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"purposeOfVisit.errors.required\">Purpose of Visit required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"ADVANCE AMOUNT\" type=\"number\" id=\"advanceAmount\" name=\"advanceAmount\" #advanceAmount=\"ngModel\" [(ngModel)]=\"salesExpense.advanceAmount\"  [ngClass]=\"{'has-error' : advanceAmount.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f2.submitted && advanceAmount.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"advanceAmount.errors.required\">Purpose Of Visit required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            \n            \n            <div class=\"collaps flat-collaps mt15\">\n              <div class=\"collaps-area\">\n                <mat-accordion>\n                  <mat-expansion-panel>\n                    <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                      <mat-panel-title>\n                        SALES PERMOTION ACTIVITY\n                      </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <div class=\"inner-body\">\n                      <div class=\"from-fields\"> \n                        <div class=\"row\">\n                          <div class=\"col s3 pl0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <mat-select placeholder=\"Sales Promotion\" name=\"salesActivityType\" #salesActivityType=\"ngModel\" [(ngModel)]=\"promation_Expense.salesActivityType\">\n                                  <mat-option value=\"1\">Mechanic get together</mat-option>\n                                  <mat-option value=\"2\">Retailer get together</mat-option>\n                                  <mat-option value=\"3\">van Campaign</mat-option>\n                                  <mat-option value=\"4\">Stall Campaign</mat-option>\n                                  <mat-option value=\"5\">Exhibition Participation</mat-option>\n                                  <mat-option value=\"6\">Signboard</mat-option>\n                                  <mat-option value=\"7\">Wall/Shop Painting</mat-option>\n                                  <mat-option value=\"8\">GiveAways</mat-option>\n                                  <mat-option value=\"9\">Printing Of Lesafelts,banners, posters etc.</mat-option>\n                                  <!-- <mat-option value=\"10\">Other</mat-option> -->\n                                </mat-select>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s3\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput [matDatepicker]=\"two\" readonly [max]='currentDate' placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"promation_Expense.date\">\n                                <mat-datepicker-toggle matSuffix [for]=\"two\"></mat-datepicker-toggle>\n                                <mat-datepicker #two></mat-datepicker>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s3\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput placeholder=\"Place Of Activity\" name=\"placeOfActivity\" #placeOfActivity=\"ngModel\" [(ngModel)]=\"promation_Expense.placeOfActivity\" >\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          <div class=\"col s3 pr0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <input matInput type=\"number\" placeholder=\"No Of Attendees\" name=\"noOfAttendees\" #noOfAttendees=\"ngModel\" [(ngModel)]=\"promation_Expense.noOfAttendees\">\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"row\">\n                          <div class=\"col s6 pl0\">\n                            <div class=\"row\">\n                              <div class=\"col s6 pl0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Rental Expense\" type=\"number\" name=\"rentalExpenses\" #rentalExpenses=\"ngModel\" [(ngModel)]=\"promation_Expense.rentalExpenses\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                              <div class=\"col s6 pr0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Food Expense\"  type=\"number\" name=\"foodExpense\" #foodExpense=\"ngModel\" [(ngModel)]=\"promation_Expense.foodExpense\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                            </div>\n                            \n                            <div class=\"row\">\n                              <div class=\"col s6 pl0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Av Aids Expense\"  type=\"number\" name=\"avAidsExpense\" #avAidsExpense=\"ngModel\" [(ngModel)]=\"promation_Expense.avAidsExpense\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                              <div class=\"col s6 pr0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Gift Expense\"  type=\"number\" name=\"giftsExpense\" #giftsExpense=\"ngModel\" [(ngModel)]=\"promation_Expense.giftsExpense\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                            </div>\n                            \n                            <div class=\"row\">\n                              <div class=\"col s6 \">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Misc Expense\"  type=\"number\" name=\"miscExpense\" #miscExpense=\"ngModel\" [(ngModel)]=\"promation_Expense.miscExpense\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                              <div class=\"col s6 padding0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Approved Amount\"  type=\"number\" name=\"approvedAmount\" #approvedAmount=\"ngModel\" [(ngModel)]=\"promation_Expense.approvedAmount\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n                          \n                          \n                          <div class=\"col s6 pr0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <textarea matInput placeholder=\"Remark\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"promation_Expense.remarks\" class=\"h165\"></textarea>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s12 mt15\">\n                        <div class=\"cs-btn text-right\">\n                          <div class=\"in-btn\">\n                            <button mat-raised-button color=\"accent\" (click)=\"addToPromationList()\" type=\"button\">Add To List</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </mat-expansion-panel>\n                </mat-accordion>\n              </div>\n            </div>\n            \n            <div class=\"row mt15\">\n              <div class=\"cs-table left-right-20\">\n                <div class=\"table-head\">\n                  <table> \n                    <tr>\n                      <th class=\"w160\">Date</th>\n                      <th>Sales Promotion</th>\n                      <th class=\"w90\">Place of Activity</th>\n                      <th class=\"w80\">No Of Attendees</th>\n                      <th class=\"w90 text-right\">Rental Exp.</th>\n                      <th class=\"w90 text-right\">Food Exp.</th>\n                      <th class=\"w90 text-right\">Av-Aids Exp.</th>\n                      <th class=\"w80 text-right\">Gift Exp.</th>\n                      <th class=\"w90 text-right\">Misc Exp.</th>\n                      <th class=\"w90 text-right\">Aprroved Amt</th>\n                      <th class=\"w80 text-right\">Total</th>\n                      <th>Remark</th>\n                    </tr>\n                  </table>\n                </div>\n                \n                <div class=\"table-container\">\n                  <div class=\"table-content\">\n                    <table>\n                      <tr *ngFor=\" let promation of SalesExpenseList;let i=index\">\n                        <td class=\"w160\"> {{promation.date |date:'EEEE, MMMM d, y'}}</td>\n                        <!-- <td>{{promation.salesActivityType}}</td> -->\n                        <td *ngIf=\"promation.salesActivityType==1\">Mechanic get together</td>\n                        <td *ngIf=\"promation.salesActivityType==2\"> Retailer get together</td>\n                        <td *ngIf=\"promation.salesActivityType==3\">van Campaign</td>\n                        <td *ngIf=\"promation.salesActivityType==4\">Stall Campaign</td>\n                        <td *ngIf=\"promation.salesActivityType==5\">Exhibition Participation</td>\n                        <td *ngIf=\"promation.salesActivityType==6\">Signboard</td>\n                        <td *ngIf=\"promation.salesActivityType==7\">Wall/Shop Painting</td>\n                        <td *ngIf=\"promation.salesActivityType==8\">GiveAways</td>\n                        <td *ngIf=\"promation.salesActivityType==9\">Printing Of Lesafelts,banners, posters etc.</td>\n                        <td class=\"w90\">{{promation.placeOfActivity}}</td>\n                        <td class=\"w80\">{{promation.noOfAttendees}}</td>\n                        <td class=\"w90 text-right\">&#x20B9; {{promation.rentalExpenses}}</td>\n                        <td class=\"w90 text-right\">&#x20B9; {{promation.foodExpense}}</td>\n                        <td class=\"w90 text-right\">&#x20B9; {{promation.avAidsExpense}}</td>\n                        <td class=\"w80 text-right\"> &#x20B9; {{promation.giftsExpense}}</td>\n                        <td class=\"w90 text-right\">&#x20B9; {{promation.miscExpense}}</td>\n                        <td class=\"w90 text-right\">&#x20B9; {{promation.approvedAmount}}</td>\n                        <td class=\"w80 text-right\"> &#x20B9; {{promation.total}}</td>\n                        <td> {{promation.remarks}}\n                          <div class=\"action-btns default-action\" style=\"right: 3px;\">\n                            <button  mat-button class=\"delete\" (click)=\"removeExpense(i)\"><i class=\"material-icons\">delete_sweep</i></button>\n                          </div>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row mt15\">\n                <div class=\"col s12\">\n                    <div class=\"cs-file-multiple scroll\">\n                      <ul>\n                        <li class=\"w110 pr10\" *ngFor=\"let urlData of SalesExpenseList.documents;let i=index\">\n                          <label>\n                            <img src=\"{{api+urlData.documentId+'/'+'2'}}\">\n                            <a (click)=\"deleteimg(urlData.documentId,urlData.fileName)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                          </label>\n                        </li>\n                        <li class=\"w110 pr10\">\n                          <div class=\"cs-file wp100\">\n                            <label>\n                              <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\">\n                              <i class=\"material-icons add-file-icon\" >add</i>\n                            </label>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col s12\">\n                <div class=\"sm-table\">\n                  <table>\n                    <tr>\n                      <th class=\"text-right\">Total Rental Exp.</th>\n                      <th class=\"w30 text-center\">:</th>\n                      <td class=\"w100 text-right\">&#x20B9; {{totalrentalExp}}</td>\n                    </tr>\n                    <tr>\n                      <th class=\"text-right\">Total Food Exp.</th>\n                      <th class=\"text-center\">:</th>\n                      <td class=\"text-right\">&#x20B9; {{totalfoodExpense}}</td>\n                    </tr>\n                    <tr>\n                      <th class=\"text-right\">Total AV Aids Exp.</th>\n                      <th class=\"w30 text-center\">:</th>\n                      <td class=\"text-right\">&#x20B9; {{totalavAidsExpense}}</td>\n                    </tr>\n                    <tr>\n                      <th class=\"text-right\">Total Gifts Exp.</th>\n                      <th class=\"text-center\">:</th>\n                      <td class=\"text-right\">&#x20B9; {{totalgiftsExpense}}</td>\n                    </tr>\n                    <tr>\n                      <th class=\"text-right\">Total Misc Exp.</th>\n                      <th class=\"text-center\">:</th>\n                      <td class=\"text-right\">&#x20B9; {{totalotherExpense}}</td>\n                    </tr>\n                    <tr>\n                      <th class=\"text-right\">Total promational Exp.</th>\n                      <th class=\"text-center\">:</th>\n                      <td class=\"text-right\">&#x20B9; {{totalPromationalExp}}</td>\n                    </tr>\n                  </table>\n                  <!-- <table>\n                      <tr>\n                        <th class=\"text-right\">Advance Amount </th>\n                        <th class=\"w30 text-center\">:</th>\n                        <td class=\"w100 text-right\">&#x20B9; {{advanceAmount}}</td>\n                      </tr>\n                      <tr>\n                        <th class=\"text-right\">Claim Amount</th>\n                        <th class=\"text-center\">:</th>\n                        <td class=\"text-right\">&#x20B9; {{claimAmount}}</td>\n                      </tr>\n                      </table> -->\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col s12 mt15 mb15\">\n                <div class=\"cs-btn fixedd text-right\">\n                  <div class=\"in-btn\">\n                    <button mat-raised-button color=\"accent\" (click)=\"promotionexpense(1)\">Save</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col s12 mt15 mb15\">\n                  <div class=\"cs-btn fixedd text-right\">\n                    <div class=\"in-btn\">\n                      <button mat-raised-button color=\"accent\" (click)= \"promationExpense(2)\">Save as Draft</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.scss":
/*!**********************************************************************************!*\
  !*** ./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.scss ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZWRpdC1zYWxlcy1wb3Jtb3Rpb24vZWRpdC1zYWxlcy1wb3Jtb3Rpb24uY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.ts ***!
  \********************************************************************************/
/*! exports provided: EditSalesPormotionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditSalesPormotionComponent", function() { return EditSalesPormotionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");




var EditSalesPormotionComponent = /** @class */ (function () {
    function EditSalesPormotionComponent(route, service) {
        var _this = this;
        this.route = route;
        this.service = service;
        this.expenseList = [];
        this.loader = false;
        this.div = false;
        this.user = {};
        this.salesExpense = {};
        this.promation_Expense = {};
        this.totalrentalExp = 0;
        this.totalfoodExpense = 0;
        this.totalavAidsExpense = 0;
        this.totalgiftsExpense = 0;
        this.totalotherExpense = 0;
        this.totalPromationalExp = 0;
        this.currentDate = new Date().toJSON().split('T')[0];
        this.SalesExpenseList = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.expenseId = params.id;
            console.log(_this.expenseId);
            if (_this.expenseId) {
                _this.getExpenseList(_this.expenseId);
            }
        });
    }
    EditSalesPormotionComponent.prototype.ngOnInit = function () {
    };
    EditSalesPormotionComponent.prototype.getExpenseList = function (expenseId) {
        var _this = this;
        this.loader = true;
        this.service.fileData("", "expense/detail/" + expenseId).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.salesExpense = result['data'];
                console.log(_this.salesExpense);
                console.log(_this.salesExpense.salesPromotionExpense.salesPromotionExps);
                _this.SalesExpenseList = _this.salesExpense.salesPromotionExpense.salesPromotionExps;
                _this.url = _this.service.dburl;
                _this.requestfn = 'download/document/';
                _this.api = _this.url + _this.requestfn;
                _this.calculatePromationalExpense(_this.SalesExpenseList);
            }
        });
    };
    EditSalesPormotionComponent.prototype.addToPromationList = function () {
        this.promation_Expense.total = parseInt(this.promation_Expense.rentalExpenses) + parseInt(this.promation_Expense.foodExpense) + parseInt(this.promation_Expense.avAidsExpense) + parseInt(this.promation_Expense.giftsExpense) + parseInt(this.promation_Expense.miscExpense);
        this.SalesExpenseList.push(this.promation_Expense);
        this.calculatePromationalExpense(this.SalesExpenseList);
        this.promation_Expense = {};
    };
    EditSalesPormotionComponent.prototype.calculatePromationalExpense = function (promationalExpArray) {
        this.totalrentalExp = 0;
        this.totalfoodExpense = 0;
        this.totalavAidsExpense = 0;
        this.totalgiftsExpense = 0;
        this.totalotherExpense = 0;
        this.totalPromationalExp = 0;
        for (var i = 0; i < promationalExpArray.length; i++) {
            this.totalrentalExp = parseInt(this.totalrentalExp) + parseInt(promationalExpArray[i].rentalExpenses);
            this.totalfoodExpense = parseInt(this.totalfoodExpense) + parseInt(promationalExpArray[i].foodExpense);
            this.totalavAidsExpense = parseInt(this.totalavAidsExpense) + parseInt(promationalExpArray[i].avAidsExpense);
            this.totalgiftsExpense = parseInt(this.totalgiftsExpense) + parseInt(promationalExpArray[i].giftsExpense);
            this.totalotherExpense = parseInt(this.totalotherExpense) + parseInt(promationalExpArray[i].miscExpense);
        }
        this.totalPromationalExp = parseInt(this.totalrentalExp) + parseInt(this.totalfoodExpense) + parseInt(this.totalavAidsExpense) + parseInt(this.totalgiftsExpense) + parseInt(this.totalotherExpense);
    };
    EditSalesPormotionComponent.prototype.removeExpense = function (index) {
        this.SalesExpenseList.splice(index, 1);
    };
    EditSalesPormotionComponent.prototype.promationExpense = function (expenseStatus) {
        this.salesExpense.satus = expenseStatus;
    };
    EditSalesPormotionComponent.prototype.promotionexpense = function () {
        console.log(this.SalesExpenseList);
        this.salesExpense.actualExpenseAmount = this.totalPromationalExp;
        this.salesExpense.salesPromotionExpense = { "salesPromotionExps": this.SalesExpenseList };
        console.log(this.salesExpense);
        this.service.fetchData(this.salesExpense, "expense/update").subscribe(function (result) {
            console.log(result);
        });
    };
    EditSalesPormotionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-edit-sales-pormotion',
            template: __webpack_require__(/*! ./edit-sales-pormotion.component.html */ "./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.html"),
            styles: [__webpack_require__(/*! ./edit-sales-pormotion.component.scss */ "./src/app/expense/edit-sales-pormotion/edit-sales-pormotion.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], EditSalesPormotionComponent);
    return EditSalesPormotionComponent;
}());



/***/ }),

/***/ "./src/app/expense/editmisc/editmisc.component.html":
/*!**********************************************************!*\
  !*** ./src/app/expense/editmisc/editmisc.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n      <img src=\"assets/img/loader.png\" class=\"rotate\">\n    </div>\n  \n<div class=\"middle-container\">\n  <div class=\"page-heading\">\n    <img src=\"assets/img/payment_icon.svg\" class=\"h-icon\">\n    <div class=\"heading-text\">\n      <h2>Expense</h2>\n      <p>Add Expense</p>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"container-outer\" >\n  <div class=\"container\" >\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"sprate-box pt0 mb15\">\n          <div class=\"cs-heading\">\n            <h2>Misc EXPENSE</h2>\n          </div>\n          <!-- <div class=\"row\">\n            <div class=\"col s12 padding0\">\n              <div class=\"select-one\">\n                <mat-radio-group (change)=\"openExpenseForm()\" #form=\"ngModel\" [(ngModel)]=\"expenseForm.form\" required>\n                  <mat-radio-button value=2>Outstation Travel</mat-radio-button>\n                  <mat-radio-button value=3>Sales Promotion Activity</mat-radio-button>\n                  <mat-radio-button value=4>Misc Exp</mat-radio-button>\n                  <mat-radio-button value=1>Local Conveyance</mat-radio-button>\n                </mat-radio-group>\n              </div>\n            </div>\n          </div> -->\n        </div>\n      </div>\n    </div>\n        <form (ngSubmit)=\"f3.form.valid && miscExpense()|| setFocus(f3.form)\" #f3=\"ngForm\" novalidate>\n          <div class=\"cs-bill\" >\n            <div class=\"row\">\n              <div class=\"col s12\">\n                <div class=\"sprate-box pt0\">\n                  <div class=\"cs-heading\">\n                    <h2>BASIC INFORMATION</h2>\n                  </div>\n                  <div class=\"from-fields\">\n                    <div class=\"row\">\n                      <div class=\"col s4 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Purpose Of Visit\" type=\"text\" id=\"purposeOfVisit\" name=\"purposeOfVisit\" #purposeOfVisit=\"ngModel\" [(ngModel)]=\"misc_Expense.purposeOfVisit\" [ngClass]=\"{'has-error' : purposeOfVisit.invalid }\"  required >\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f3.submitted && purposeOfVisit.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"purposeOfVisit.errors.required\">Purpose of Visit required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s4\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput placeholder=\"ADVANCE AMOUNT\" type=\"number\" id=\"advanceAmount\" name=\"advanceAmount\" #advanceAmount=\"ngModel\" [(ngModel)]=\"misc_Expense.advanceAmount\"  [ngClass]=\"{'has-error' : advanceAmount.invalid }\" required>\n                            </mat-form-field>\n                            <mat-error *ngIf=\"f3.submitted && advanceAmount.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"advanceAmount.errors.required\">Advance Amount is required</mat-error>\n                            </mat-error>\n                          </div>\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            \n            \n            <div class=\"collaps flat-collaps mt15\">\n              <div class=\"collaps-area\">\n                <mat-accordion>\n                  <mat-expansion-panel>\n                    <mat-expansion-panel-header class=\"outer-panel form-collaps mb10\">\n                      <mat-panel-title>\n                        MISC EXPENSE INFORMATION\n                      </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <div class=\"inner-body\">\n                      <div class=\"from-fields\">\n                        <div class=\"row\">\n                          <div class=\"col s6 pl0\">\n                            <div class=\"row\">\n                              <div class=\"col s6 pl0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <mat-select placeholder=\"Nature of expense\" name=\"miscActivityType\" #miscActivityType=\"ngModel\" [(ngModel)]=\"miscExpenselist.miscActivityType\" >\n                                      <mat-option value=\"1\">Entertainment Expenses</mat-option>\n                                      <mat-option value=\"2\">Gift To Dealers</mat-option>\n                                      <mat-option value=\"3\">Lunch/Dinner With Team</mat-option>\n                                      <mat-option value=\"4\">Training Program</mat-option>\n                                      <mat-option value=\"5\">Other</mat-option>\n                                    </mat-select>\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                              <div class=\"col s6 pr0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput [matDatepicker]=\"five\" readonly [max]='currentDate' placeholder=\"Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"miscExpenselist.date\" readonly>\n                                    <mat-datepicker-toggle matSuffix [for]=\"five\"></mat-datepicker-toggle>\n                                    <mat-datepicker #five></mat-datepicker>\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                            </div>\n                            \n                            <div class=\"row\">\n                              <div class=\"col s6 pl0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Place Of Expense\" name=\"placeOfExpense\" #placeOfExpense=\"ngModel\" [(ngModel)]=\"miscExpenselist.placeOfExpense\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                              \n                              <div class=\"col s6 pr0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Name of Beneficiaries\" name=\"nameOfBeneficiary\" #nameOfBeneficiary=\"ngModel\" [(ngModel)]=\"miscExpenselist.nameOfBeneficiary\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                            </div>\n                            \n                            <div class=\"row\">\n                              <div class=\"col s6 pl0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Reason\" name=\"reason\" #reason=\"ngModel\" [(ngModel)]=\"miscExpenselist.reason\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                              <div class=\"col s6 pr0\">\n                                <div class=\"control-field\">\n                                  <mat-form-field class=\"cs-input infix-bodr8\">\n                                    <input matInput placeholder=\"Amount\" type=\"number\" name=\"total\" #total=\"ngModel\" [(ngModel)]=\"miscExpenselist.amount\">\n                                  </mat-form-field>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div class=\"col s6 pr0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <textarea matInput placeholder=\"Remark\" class=\"h165\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"miscExpenselist.remarks\" ></textarea>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                          \n                        </div>\n                      </div>\n                      \n                      <div class=\"col s12 mt15\">\n                        <div class=\"cs-btn text-right\">\n                          <div class=\"in-btn\">\n                            <button mat-raised-button color=\"accent\" [disabled]=\"!miscExpenselist.miscActivityType ||!miscExpenselist.date ||!miscExpenselist.placeOfExpense ||!miscExpenselist.nameOfBeneficiary ||!miscExpenselist.amount ||!miscExpenselist.remarks\" (click)=\"addToMiscExpenseList()\">Add To List</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </mat-expansion-panel>\n                </mat-accordion>\n              </div>\n            </div>\n            \n            <div class=\"row mt15\">\n              <div class=\"cs-table left-right-20\">\n                <div class=\"table-head\">\n                  <table> \n                    <tr >\n                      <th class=\"w160\">Date</th>\n                      <th class=\"w180\">Nature Of Exp.</th>\n                      <th class=\"w170\">Beneficiaries Name</th>\n                      <th class=\"w160\">Place Of Expense</th>\n                      <th class=\"w170\">Reasons</th>\n                      <th class=\"w100 text-right\">Total</th>\n                      <th>Remark</th>\n                    </tr>\n                  </table>\n                </div>\n                \n                <div class=\"table-container\">\n                  <div class=\"table-content\">\n                    <table>\n                      <tr *ngFor=\"let misc of totalExpenseList;let i=index\">\n                        <td class=\"w160\">{{misc.date|date:'EEEE, MMMM d, y'}}</td>\n                        <!-- <td class=\"w200\">{{misc.miscActivityType}}</td> -->\n                        <td *ngIf=\"misc.miscActivityType==1\" class=\"w180\">Entertainment Expenses</td>\n                        <td *ngIf=\"misc.miscActivityType==2\" class=\"w180\">Gift To Dealers</td>\n                        <td *ngIf=\"misc.miscActivityType==3\" class=\"w180\">Lunch/Dinner With Team</td>\n                        <td *ngIf=\"misc.miscActivityType==4\" class=\"w180\">Training Program</td>\n                        <td *ngIf=\"misc.miscActivityType==5\" class=\"w180\"> Other</td>\n                        <td class=\"w170\">{{misc.nameOfBeneficiary}}</td>\n                        <td class=\"w160\">{{misc.placeOfExpense}}</td>\n                        <td class=\"w170\">{{misc.reason}}</td>\n                        <td class=\"w100 text-right\"> &#x20B9; {{misc.amount}}</td>\n                        <td> {{misc.remarks}}\n                          <div class=\"action-btns default-action\" style=\"right: 3px;\">\n                            <button  mat-button class=\"delete\" (click)=\"removeExpense(i)\"><i class=\"material-icons\">delete_sweep</i></button>\n                          </div>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row mt15\">\n                <div class=\"col s12\">\n                    <div class=\"cs-file-multiple scroll\">\n                      <ul>\n                        <li class=\"w110 pr10\" *ngFor=\"let urlData of misc_Expense.documents;let i=index\">\n                          <label>\n                            <img src=\"{{api+urlData.documentId+'/'+'2'}}\">\n                            <a (click)=\"deleteimg(urlData.documentId,urlData.fileName)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                          </label>\n                        </li>\n                        <li class=\"w110 pr10\">\n                          <div class=\"cs-file wp100\">\n                            <label>\n                              <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\">\n                              <i class=\"material-icons add-file-icon\" >add</i>\n                            </label>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col s12\">\n                <div class=\"sm-table\">\n                  <table>\n                    <tr>\n                      <th class=\"text-right\">Total Misc Exp.</th>\n                      <th class=\"w30 text-center\">:</th>\n                      <td class=\"w100 text-right\">&#x20B9; {{totalAmount}}</td>\n                    </tr>\n                    <tr>\n                        <th class=\"text-right\">Advance Amount</th>\n                        <th class=\"w30 text-center\">:</th>\n                        <td class=\"w100 text-right\">&#x20B9; {{misc_Expense.advanceAmount}}</td>\n                      </tr>\n                      <tr>\n                          <th class=\"text-right\">Claim Amount</th>\n                          <th class=\"w30 text-center\">:</th>\n                          <td class=\"w100 text-right\">&#x20B9; {{misc_Expense.claimAmount}}</td>\n                        </tr>\n                  </table>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"row\">\n              <div class=\"col s12\">\n                <div class=\"cs-btn  mt15 text-right\">\n                  <div class=\"in-btn\">\n                    <button mat-raised-button color=\"accent\" (click)=\"allmiscexpense(1)\">Save as Draft</button>\n                    <button mat-raised-button color=\"accent\" (click)=\"allmiscexpense(2)\">Save For Approvel</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n        \n      </div>\n    </div>\n  </div>\n  \n  <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/expense/editmisc/editmisc.component.scss":
/*!**********************************************************!*\
  !*** ./src/app/expense/editmisc/editmisc.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZWRpdG1pc2MvZWRpdG1pc2MuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/expense/editmisc/editmisc.component.ts":
/*!********************************************************!*\
  !*** ./src/app/expense/editmisc/editmisc.component.ts ***!
  \********************************************************/
/*! exports provided: EditmiscComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditmiscComponent", function() { return EditmiscComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var EditmiscComponent = /** @class */ (function () {
    function EditmiscComponent(dialog, route, router, service, platformId, toast) {
        var _this = this;
        this.dialog = dialog;
        this.route = route;
        this.router = router;
        this.service = service;
        this.platformId = platformId;
        this.toast = toast;
        this.expenseList = [];
        this.loader = false;
        this.div = false;
        this.user = {};
        this.misc_Expense = {};
        this.miscExpenselist = {};
        this.currentDate = new Date().toJSON().split('T')[0];
        this.totalExpenseList = [];
        this.totalAmount = 0;
        this.selectedFile = [];
        this.documentUrl = [];
        this.picdata = {};
        this.picvalue = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.expenseId = params.id;
            console.log(_this.expenseId);
            if (_this.expenseId) {
                _this.getExpenseList(_this.expenseId);
            }
        });
    }
    EditmiscComponent.prototype.ngOnInit = function () {
    };
    EditmiscComponent.prototype.getExpenseList = function (expenseId) {
        var _this = this;
        this.loader = true;
        this.service.fileData("", "expense/detail/" + expenseId).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.misc_Expense = result['data'];
                console.log(_this.misc_Expense);
                console.log(_this.misc_Expense.miscExpense.miscExp);
                _this.totalExpenseList = _this.misc_Expense.miscExpense.miscExp;
                _this.urls = _this.service.dburl;
                _this.requestfn = 'download/document/';
                _this.api = _this.urls + _this.requestfn;
                _this.calculateamount(_this.totalExpenseList);
            }
        });
    };
    EditmiscComponent.prototype.addToMiscExpenseList = function () {
        console.log(this.miscExpenselist);
        this.totalExpenseList.push(this.miscExpenselist);
        this.calculateamount(this.totalExpenseList);
        this.miscExpenselist = {};
    };
    EditmiscComponent.prototype.calculateamount = function (forCalculation) {
        this.totalAmount = 0;
        for (var i = 0; i < forCalculation.length; i++) {
            this.totalAmount = parseInt(this.totalAmount) + parseInt(forCalculation[i].amount);
        }
        console.log(this.totalAmount);
    };
    EditmiscComponent.prototype.removeExpense = function (index) {
        this.totalExpenseList.splice(index, 1);
    };
    EditmiscComponent.prototype.miscExpense = function () {
        var _this = this;
        console.log(this.totalAmount);
        console.log(this.totalExpenseList);
        this.misc_Expense.actualExpenseAmount = this.totalAmount;
        this.misc_Expense.miscExpense = { "miscExp": this.totalExpenseList };
        console.log(this.misc_Expense);
        this.service.fetchData(this.misc_Expense, "expense/update").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.router.navigate(['/expense-list']);
                _this.toast.openSucess("Expense", "Updated SuccessFully");
            }
        });
    };
    EditmiscComponent.prototype.allmiscexpense = function (expenseStatus) {
        this.misc_Expense.status = expenseStatus;
    };
    EditmiscComponent.prototype.setFocus = function (form) {
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_4__["isPlatformBrowser"])(this.platformId)) {
                        $('#' + key).focus();
                    }
                    break;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
    };
    EditmiscComponent.prototype.insertImage = function (data) {
        var _this = this;
        this.selectedFile = [];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.documentUrl.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.documentUrl);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        setTimeout(function () {
            _this.Insert_Image();
        }, 500);
    };
    EditmiscComponent.prototype.Insert_Image = function () {
        var _this = this;
        this.misc_Expense_Document = new FormData;
        this.misc_Expense_Document.action = 1;
        this.misc_Expense_Document.binaryData = this.documentUrl[this.documentUrl.length - 1];
        this.misc_Expense_Document.documentType = 4;
        this.misc_Expense_Document['documentName'] = this.selectedFile[0].name;
        this.misc_Expense_Document.referenceId = this.expenseId;
        this.loader = true;
        for (var i = 0; i < this.selectedFile.length; i++) {
            this.misc_Expense_Document.fileName = "image" + i + ".jpg", this.selectedFile[i];
        }
        console.log(this.misc_Expense_Document);
        var value = [];
        value[0] = this.misc_Expense_Document;
        console.log(value);
        this.service.fetchData(value, "document/update").subscribe(function (resp) {
            console.log(resp);
            if (resp) {
                _this.loader = false;
                _this.getExpenseList(_this.expenseId);
                _this.toast.openSucess('Image Added Sucessfully', '');
            }
        });
    };
    EditmiscComponent.prototype.deleteimg = function (picid, filename) {
        var _this = this;
        console.log(picid, filename);
        this.picdata.documentId = picid;
        this.picdata.action = 2;
        this.picdata.fileName = filename;
        this.picdata.documentType = 4;
        this.picdata.referenceId = this.expenseId;
        this.picvalue.push(this.picdata);
        console.log(this.picvalue);
        this.dialog.delete("Document").then(function (result) {
            console.log(result);
            if (result) {
                _this.loader = true;
                _this.service.fetchData(_this.picvalue, "document/update").subscribe(function (resp) {
                    console.log(resp);
                    if (resp['status'] == 'Success') {
                        _this.toast.openSucess('Image Deleted Sucessfully', '');
                        _this.loader = false;
                        _this.getExpenseList(_this.expenseId);
                        _this.picvalue = [];
                    }
                });
            }
        });
    };
    EditmiscComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-editmisc',
            template: __webpack_require__(/*! ./editmisc.component.html */ "./src/app/expense/editmisc/editmisc.component.html"),
            styles: [__webpack_require__(/*! ./editmisc.component.scss */ "./src/app/expense/editmisc/editmisc.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], Object, src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"]])
    ], EditmiscComponent);
    return EditmiscComponent;
}());



/***/ }),

/***/ "./src/app/expense/expense-detail/expense-detail.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/expense/expense-detail/expense-detail.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n    <div class=\"cs-loader\" *ngIf=\"loader\"> \n        <img src=\"assets/img/loader.png\" class=\"rotate\">\n      </div>\n    \n\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n        <img src=\"assets/img/payment_icon.svg\" class=\"h-icon\">\n        <div class=\"heading-text\">\n        <!-- <div *ngIf=\"userRole==1\" class=\"back-btn\">\n            <a mat-button ><i  routerLink=\"/expense-list\" routerLinkActive=\"active\" class=\"material-icons\">arrow_right_alt</i></a>\n          </div> -->\n          <h2>Expense List</h2>\n          <p>{{userName}}</p>\n        </div>\n    </div>\n  </div>\n  \n  \n  \n  <div class=\"container-outer\">\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table class=\"sno-border\">\n                <tr>\n                  <th  class=\"w30\">&nbsp;</th>\n                  <th>Date</th>\n                  <th class=\"w200\">Expense Type</th>\n                  <th class=\"w150\">Expense Amount</th>\n                  <th class=\"w200\">Status</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table class=\"sno-border\">\n                  <tr *ngFor=\"let expense of expenseList;let i=index\">\n                    <td class=\"w30\">{{i+1}}</td>\n                    <td><a class=\"link-btn\" routerLink=\"/detail-by-date/{{expense.expenseId}}\" routerLinkActive=\"active\" mat-button>{{expense.createdOn | date :'EEEE, MMMM d, y'}}</a></td>\n                    <td *ngIf=\"expense.expenseType==1\" class=\"w200\">Local Conveyance</td>\n                    <td *ngIf=\"expense.expenseType==2\" class=\"w200\">Outstation Travel</td>\n                    <td *ngIf=\"expense.expenseType==3\" class=\"w200\">Sales Promotion Activity</td>\n                    <td *ngIf=\"expense.expenseType==4\" class=\"w200\">Misc Exp.</td>\n                    <td class=\"w150\">{{expense.actualExpenseAmount |currency: 'INR':true}}</td>\n                    <td *ngIf=\"expense.status==1\"  class=\"w200 yellow-clr\">Pending</td>\n                    <td *ngIf=\"expense.status==2\" class=\"w200 green-clr\">Approve</td>\n                    <td *ngIf=\"expense.status==3\" class=\"w200 red-clr\">Reject</td>\n\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"data-not-available\" *ngIf=\"div\">\n    <div class=\"outer\">\n        <div class=\"iinear\">\n            <div class=\"figure\" matRipple>\n                <div class=\"header\">\n                    <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                </div>\n                \n                <div class=\"description\">\n                    <div class=\"cs-heading\">\n                        <h2>No Expense of This User</h2>\n                    </div>\n                    <div class=\"img\">\n                            <i class=\"material-icons\">error_outline</i>\n                    </div>\n                    <div class=\"psc\">\n                        <p>data not available</p>\n                        <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"fixed-multibtn-botm\">\n  <ul>\n    <li><a  matTooltip=\"Add New\" routerLink=\"/add-expense\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n  </ul>\n</div>\n</div>"

/***/ }),

/***/ "./src/app/expense/expense-detail/expense-detail.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/expense/expense-detail/expense-detail.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZXhwZW5zZS1kZXRhaWwvZXhwZW5zZS1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/expense/expense-detail/expense-detail.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/expense/expense-detail/expense-detail.component.ts ***!
  \********************************************************************/
/*! exports provided: ExpenseDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpenseDetailComponent", function() { return ExpenseDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");




var ExpenseDetailComponent = /** @class */ (function () {
    function ExpenseDetailComponent(route, service) {
        var _this = this;
        this.route = route;
        this.service = service;
        this.expenseList = [];
        this.loader = false;
        this.div = false;
        this.user = {};
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.userId = params.id;
            console.log(_this.userId);
            if (_this.userId) {
                _this.getExpenseList();
            }
        });
    }
    ExpenseDetailComponent.prototype.ngOnInit = function () {
    };
    ExpenseDetailComponent.prototype.getExpenseList = function () {
        var _this = this;
        this.div = false;
        this.loader = true;
        this.service.fetchData({ "userId": this.userId, "currentPage": 1, "pageSize": 50 }, "expense/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.expenseList = result['data'];
                _this.userName = _this.expenseList[0]['userName'];
            }
            if (result['status'] == 'Failed') {
                _this.div = true;
            }
        });
    };
    ExpenseDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-expense-detail',
            template: __webpack_require__(/*! ./expense-detail.component.html */ "./src/app/expense/expense-detail/expense-detail.component.html"),
            styles: [__webpack_require__(/*! ./expense-detail.component.scss */ "./src/app/expense/expense-detail/expense-detail.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], ExpenseDetailComponent);
    return ExpenseDetailComponent;
}());



/***/ }),

/***/ "./src/app/expense/expense-list/expense-list.component.html":
/*!******************************************************************!*\
  !*** ./src/app/expense/expense-list/expense-list.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  \n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/payment_icon.svg\" class=\"h-icon\">\n      <div class=\"heading-text flex-heading\">\n        <div class=\"content\">\n          <h2>Expense List</h2>\n          <p>{{expenseList.length}}</p>\n        </div>\n       \n        <div *ngIf=\"userRole!=10\" class=\"item-filter\" >\n          <mat-form-field *ngIf=\"userRole!=17\" class=\"wp100\">\n            <mat-select   name=\"expense\" #expense=\"ngModel\" [(ngModel)]=\"filter.expense\">\n              <mat-option (click)=\"getExpenseList(1,2)\" [value]=1>My Expense</mat-option>\n              <mat-option (click)=\"getExpenseList(2,2)\" [value]=2>Wating For Approvel</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"userRole!=17\" class=\"left-auto\">\n        <div *ngIf=\"filterData.expenseType|| filterData.createdOn||filterData.createdByName\" class=\"filter-container left-auto\">\n            <div (click)=\"clearfilter()\" class=\"filter-btn\">\n              <button mat-button >CLEAR FILTER</button>\n            </div>\n          </div>\n      <div class=\"tabs right-tab none-af\">\n        <ul>\n          <li><a class=\"pending\" [ngClass]=\"{'tab-active':expenseStatus==2}\" (click)=\"getExpenseList(filter.expense,2)\" >PENDING</a></li>\n          <li><a class=\"approved\" [ngClass]=\"{'tab-active':expenseStatus==5}\" (click)=\"getExpenseList(filter.expense,5)\" >APPROVED</a></li>\n          <li><a class=\"reject\" [ngClass]=\"{'tab-active':expenseStatus==6}\" (click)=\"getExpenseList(filter.expense,6)\" >REJECT</a></li>\n          <li *ngIf=\"filter.expense==1\"><a class=\"draft\" [ngClass]=\"{'tab-active':expenseStatus==1}\" (click)=\"getExpenseList(filter.expense,1)\" >DRAFT</a></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  \n  \n  \n  <div class=\"container-outer pt0\">\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"cs-table left-right-20\">\n          \n          <div class=\"sticky-head\">\n            <div class=\"table-head\">\n              <table class=\"sno-border\">\n                <tr>\n                  <th  class=\"w30\">&nbsp;</th>\n                  <th class=\"w160\">Date</th>\n                  <th>User Name</th>\n                  <th class=\"w180\">designation</th>\n                  <th class=\"w180\">Expense Type</th>\n                  <th class=\"w150 text-right\">Expense Amount</th>\n                  <th class=\"w150\">Status</th>\n                </tr>\n              </table>\n            </div>\n            <div class=\"table-head bdrt\">\n              <table class=\"sno-border\">\n                <tr>\n                  <th class=\"w30\">&nbsp;</th>\n                  <th class=\"w160\">\n                    <div class=\"th-search padding0\" >\n                      <mat-form-field class=\"wp100 toggle-date-picker\">\n                        <input matInput (dateChange)=\"getExpenseList(filter.expense,expenseStatus)\" name=\"createdOn\" [(ngModel)]=\"filterData.createdOn\" [matDatepicker]=\"picker\" >\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker  #picker></mat-datepicker>\n                      </mat-form-field>\n                    </div>\n                  </th>\n                  <th>\n                    <div class=\"th-search\">\n                      <input type=\"text\" name=\"createdByName\" [(ngModel)]=\"filterData.createdByName\" (input)=\"getExpenseList(filter.expense,expenseStatus)\">\n                    </div>\n                  </th>\n                  <th class=\"w180\">&nbsp;\n                  </th>\n                  <th class=\"w180\">\n                    <div class=\"th-search padding0\">\n                      <mat-select   name=\"expenseType\" #expenseType=\"ngModel\" [(ngModel)]=\"filterData.expenseType\">\n                        <mat-option (click)=\"getExpenseList(filter.expense,expenseStatus)\" [value]=1>Local Expense</mat-option>\n                        <mat-option (click)=\"getExpenseList(filter.expense,expenseStatus)\" [value]=2>Out Station Expense</mat-option>\n                        <mat-option (click)=\"getExpenseList(filter.expense,expenseStatus)\" [value]=3>Sales Promotion Expense</mat-option>\n                        <mat-option (click)=\"getExpenseList(filter.expense,expenseStatus)\" [value]=4>Misc Expense</mat-option>\n                      </mat-select>\n                    </div>\n                  </th>\n                  <th class=\"w150\">&nbsp;</th>\n                  <th class=\"w150\">&nbsp;</th>\n                </tr>\n              </table>\n            </div>\n          </div>\n          \n          \n          <div class=\"table-container\">\n            <div class=\"table-content\">\n              <!-- <div infinite-scroll\n                [infiniteScrollDistance]=\"2\"\n                [infiniteScrollThrottle]=\"1000\"\n                [scrollWindow]=\"true\"\n                (scrolled)=\"onScrollDown($event)\"\n                [infiniteScrollDisabled]=\"isFullListDisplayed\"\n                >\n              </div> -->\n              <table class=\"sno-border\">\n                <tr *ngFor=\"let expense of expenseList;let i=index\">\n                  <td class=\"w30\">{{i+1}}</td>\n                  <td class=\"w160\" *ngIf=\"expense.status==1\"><a class=\"link-btn\" (click)=\"editExpense(expense.expenseId,expense.expenseType)\" mat-button>{{expense.createdOn | date :'EEEE, MMMM d, y'}}</a></td>\n                  <td class=\"w160\" *ngIf=\"expense.status!=1\"><a class=\"link-btn\" routerLink=\"/detail-by-date/{{expense.expenseId}}\" routerLinkActive=\"active\" mat-button>{{expense.createdOn | date :'EEEE, MMMM d, y'}}</a></td>\n                  <td>{{expense.userName}}</td>\n                  <td class=\"w180\">{{expense.designationName}}</td>\n                  \n                  <td *ngIf=\"expense.expenseType==1\" class=\"w180\">Local Conveyance</td>\n                  <td *ngIf=\"expense.expenseType==2\" class=\"w180\">Outstation Travel</td>\n                  <td *ngIf=\"expense.expenseType==3\" class=\"w180\">Sales Promotion Activity</td>\n                  <td *ngIf=\"expense.expenseType==4\" class=\"w180\">Misc Exp.</td>\n                  <td class=\"w150 text-right\">{{expense.actualExpenseAmount |currency: 'INR':true}}</td>\n                  <td  class=\"w150 txt-center\" [ngClass]=\"{'pending':expense.status==2||expense.status==3,'approved':expense.status==5,'reject':expense.status==4||expense.status==6,'draft':expense.status==1}\">\n                    <span *ngIf=\"expense.status==2 ||expense.status==3\">Pending</span>\n                    <span *ngIf=\"expense.status==5\">Approve</span>\n                    <span *ngIf=\"expense.status==6\" >Reject</span>\n                    <span *ngIf=\"expense.status==1\">Draft</span>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"data-not-available\" *ngIf=\"div\">\n    <div class=\"outer\">\n      <div class=\"iinear\">\n        <div class=\"figure\" matRipple>\n          <div class=\"header\">\n            <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n          </div>\n          \n          <div class=\"description\">\n            <div class=\"cs-heading\">\n              <h2>No Expense of This User</h2>\n            </div>\n            <div class=\"img\">\n              <i class=\"material-icons\">error_outline</i>\n            </div>\n            <div class=\"psc\">\n              <p>data not available</p>\n              <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" routerLink=\"/add-expense\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/expense/expense-list/expense-list.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/expense/expense-list/expense-list.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2UvZXhwZW5zZS1saXN0L2V4cGVuc2UtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/expense/expense-list/expense-list.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/expense/expense-list/expense-list.component.ts ***!
  \****************************************************************/
/*! exports provided: ExpenseListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpenseListComponent", function() { return ExpenseListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);






// import moment = require('moment');
var ExpenseListComponent = /** @class */ (function () {
    function ExpenseListComponent(service, router) {
        this.service = service;
        this.router = router;
        this.user = {};
        this.salesUserList = [];
        this.date = new Date();
        this.today = '';
        this.loader = false;
        this.div = false;
        this.expenseList = [];
        this.expenseStatus = 2;
        this.data = {};
        this.currentPage = 1;
        this.pageSize = 50;
        this.filterData = {};
        this.filter = {};
        this.tmpExpenseList = [];
        this.today = Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(this.date, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0530');
        console.log(this.today);
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.expenseStatus = 2;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        if (this.userId) {
            this.filter.expense = 1;
            this.getExpenseList(this.filter.expense, this.expenseStatus);
        }
    }
    ExpenseListComponent.prototype.ngOnInit = function () {
    };
    ExpenseListComponent.prototype.getExpenseList = function (status, expenseStatus) {
        var _this = this;
        if (this.filterData.createdOn) {
            this.filterData.createdOn = moment__WEBPACK_IMPORTED_MODULE_5__(this.filterData.createdOn).format('YYYY-MM-DD');
        }
        this.expenseList = [];
        this.expenseStatus = expenseStatus;
        console.log(status);
        if (this.userRole != 17) {
            if (status == 1) {
                this.filterData.createById = this.userId;
                this.filterData.currentPage = 1;
                this.filterData.pageSize = this.pageSize;
                this.filterData.status = expenseStatus;
            }
            else {
                this.filterData.currentPage = 1;
                this.filterData.pageSize = this.pageSize;
                this.filterData.createById = undefined;
                this.filterData.status = expenseStatus;
            }
        }
        else {
            this.filterData.currentPage = 1;
            this.filterData.pageSize = this.pageSize;
            this.filterData.status = 3;
        }
        this.div = false;
        this.loader = true;
        this.service.fetchData(this.filterData, "expense/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (_this.userRole != 17) {
                if (status == 1) {
                    if (expenseStatus == 2) {
                        _this.getSenctionerPendingList(3);
                    }
                    if (expenseStatus == 6) {
                        _this.getSenctionerPendingList(4);
                    }
                }
                if (result['status'] == 'Success') {
                    _this.expenseList = result['data'];
                    _this.tmpExpenseList = result['data'];
                    // this.userName=this.expenseList[0]['userName'];
                    if (status == 2) {
                        var expenseArray = _this.tmpExpenseList.filter(function (row) { return row.createdBy != _this.userId && row.status != 1; });
                        console.log(expenseArray);
                        _this.expenseList = expenseArray;
                    }
                }
            }
            else if (result['status'] == 'Success') {
                _this.expenseList = result['data'];
            }
            if (result['status'] == 'Failed') {
                _this.div = true;
            }
        });
    };
    ExpenseListComponent.prototype.getSenctionerPendingList = function (status) {
        var _this = this;
        this.filterData.createById = this.userId;
        this.filterData.currentPage = 1;
        this.filterData.pageSize = this.pageSize;
        this.filterData.status = status;
        this.loader = true;
        this.service.fetchData(this.filterData, "expense/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.pendingExpenseList = result['data'];
                _this.expenseList = _this.expenseList.concat(_this.pendingExpenseList);
                console.log(_this.expenseList);
            }
        });
    };
    ExpenseListComponent.prototype.clearfilter = function () {
        this.filterData.createdByName = undefined;
        this.filterData.createdOn = undefined;
        this.filterData.expenseType = undefined;
        this.getExpenseList(this.filter.expense, this.expenseStatus);
        // filterData.expenseType|| filterData.createdOn||filterData.createdByName
    };
    ExpenseListComponent.prototype.editExpense = function (id, type) {
        console.log(id, type);
        if (type == 1) {
            this.localExpensePage(id);
        }
        if (type == 2) {
            this.outStationExpensePage(id);
        }
        if (type == 3) {
            this.salesPromotionPage(id);
        }
        if (type == 4) {
            this.miscExpensePage(id);
        }
    };
    ExpenseListComponent.prototype.outStationExpensePage = function (id) {
        this.router.navigate(['/edit-out-station/' + id]);
    };
    ExpenseListComponent.prototype.miscExpensePage = function (id) {
        this.router.navigate(['/editmisc/' + id]);
    };
    ExpenseListComponent.prototype.localExpensePage = function (id) {
        this.router.navigate(['/edit-local-expense/' + id]);
    };
    ExpenseListComponent.prototype.salesPromotionPage = function (id) {
        this.router.navigate(['/edit-sales-pormotion/' + id]);
    };
    ExpenseListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-expense-list',
            template: __webpack_require__(/*! ./expense-list.component.html */ "./src/app/expense/expense-list/expense-list.component.html"),
            styles: [__webpack_require__(/*! ./expense-list.component.scss */ "./src/app/expense/expense-list/expense-list.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]])
    ], ExpenseListComponent);
    return ExpenseListComponent;
}());



/***/ }),

/***/ "./src/app/followup/add-followup/add-followup.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/followup/add-followup/add-followup.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form #f=\"ngForm\" (ngSubmit)=\"f.valid && onSubmit()\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n<div class=\"main-container\">\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/leads_icon.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>{{lead_data.establishment}}</h2>\n        <p>{{lead_data.city}}</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s2\">&nbsp;</div>\n        <div class=\"col s8\">\n          <div class=\"sprate-box\">\n            <div class=\"cs-heading\">\n              <h2>Create Follow-up</h2>\n              <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n            </div>\n            <mat-divider class=\"left-right-15 mt10\"></mat-divider>\n            <div class=\"from-fields\">\n              <div class=\"row mb0\">\n                <div class=\"col s6 pl0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select  placeholder=\"Select Network\" id=\"role\" name=\"role\" [(ngModel)]=\"activitydata.role\" #role=\"ngModel\"  [ngClass]=\"{ 'is-invalid': f.submitted && role.invalid }\" required>\n                        <mat-option  (click)=\"getnetworklist(role.roleId)\" *ngFor=\"let role of client1\" value=\"{{role.roleId}}\">{{role.roleName}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && role.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"role.errors.required\">Network  is required</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n                <div class=\"col s6 pr0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select  placeholder=\"Select Company\"  id=\"networkId\" name=\"networkId\" #networkId=\"ngModel\" [(ngModel)]=\"activitydata.networkId\" [ngClass]=\"{ 'is-invalid': f.submitted && networkId.invalid }\" required>\n                        <mat-option *ngFor=\"let netdata of distributionList\" value=\"{{netdata.networkId}}\">{{netdata.establishment}}</mat-option>\n                        <!-- <mat-option value=\"OtherCustomerType\">Other User</mat-option> -->\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && networkId.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"networkId.errors.required\">Company is required</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n                <div *ngIf=\"activitydata.networkId=='OtherCustomerType'\" class=\"row\">\n                  <div  class=\"col s6 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput placeholder=\"Name\" id=\"OtherCustomer\" name=\"OtherCustomer\" #OtherCustomer=\"ngModel\" [(ngModel)]=\"activitydata.OtherCustomer\" [ngClass]=\"{ 'is-invalid': f.submitted && OtherCustomer.invalid }\" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && OtherCustomer.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"OtherCustomer.errors.required\">Name is required</mat-error>\n                        \n                      </mat-error>\n                    </div>\n                  </div>\n                </div>\n                <!-- <div class=\"col s6\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <mat-select placeholder=\"Activity Type\" name=\"activityType\" #activityType=\"ngModel\" [(ngModel)]=\"activitydata.activityType\"  [ngClass]=\"{ 'is-invalid': f.submitted && activityType.invalid }\" required>\n                        <mat-option value=\"1\">Call </mat-option>\n                        <mat-option value=\"2\">Metting </mat-option>\n                        <mat-option value=\"3\">Email </mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && activityType.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"activityType.errors.required\">Activity Type is required</mat-error>\n                      </mat-error>\n                  </div>\n                </div> -->\n              </div>\n              <div class=\"row mb0\">\n                <div class=\"col s6\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <input matInput [matDatepicker]=\"picker\"  [min]='currentDate' placeholder=\"Choose a date\" name=\"followUpDate\" #followUpDate=\"ngModel\" [(ngModel)]=\"activitydata.followUpDate\" [ngClass]=\"{ 'is-invalid': f.submitted && followUpDate.invalid }\" readonly required>\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                      <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && followUpDate.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"followUpDate.errors.required\">Date is required</mat-error>\n                      </mat-error>\n                  </div>\n                </div>\n                <div class=\"col s6\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <mat-select placeholder=\"Next Follow-up Type\" name=\"followUpType\" #followUpType=\"ngModel\" [(ngModel)]=\"activitydata.followUpType\" [ngClass]=\"{ 'is-invalid': f.submitted && followUpType.invalid }\" required >\n                        <mat-option value=\"1\">Call </mat-option>\n                        <mat-option value=\"2\">Metting </mat-option>\n                        <mat-option value=\"3\">Email </mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && followUpType.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"followUpType.errors.required\">Follow-up Type is required</mat-error>\n                      </mat-error>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row mb0\">\n                <div class=\"col s12\">\n                  <div class=\"from-fields\">\n                    <div class=\"control-field\" >\n                      <mat-form-field class=\"cs-input wp100 h-input\">\n                        <textarea matInput placeholder=\"Remark\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"activitydata.remarks\" [ngClass]=\"{ 'is-invalid': f.submitted && remarks.invalid }\" required  ></textarea>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && remarks.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"remarks.errors.required\">Remarks is required</mat-error>\n                        </mat-error>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col s2\">&nbsp;</div>\n          <div class=\"col s2\">&nbsp;</div>\n          <div class=\"col s8\">\n            <div class=\"cs-btn fixedd mt32 text-right\">\n              <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\" >Save</button>\n              </div>\n            </div>\n          </div>\n          <div class=\"col s2\">&nbsp;</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"h50\"></div>\n</div>\n</form>\n"

/***/ }),

/***/ "./src/app/followup/add-followup/add-followup.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/followup/add-followup/add-followup.component.ts ***!
  \*****************************************************************/
/*! exports provided: AddFollowupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddFollowupComponent", function() { return AddFollowupComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);








var AddFollowupComponent = /** @class */ (function () {
    function AddFollowupComponent(db, toast, ses, router, route, dialog) {
        this.db = db;
        this.toast = toast;
        this.ses = ses;
        this.router = router;
        this.route = route;
        this.dialog = dialog;
        this.currentDate = new Date();
        this.userdata = [];
        this.rolelists = [];
        this.lead_data = {};
        this.activitydata = {};
        this.loader = false;
    }
    AddFollowupComponent.prototype.ngOnInit = function () {
        this.userdata = this.ses['user']['data'];
        this.userType = this.userdata['userType'];
        this.activitydata.userId = this.userdata['userId'];
        this.activitydata.role = this.userdata['role'];
        console.log(this.activitydata.userId);
        // this.route.params.subscribe(params=>{
        //   this.id = params.id;
        //   this.db.fetchData({"leadId":this.id},'lead/list').subscribe((response)=>{
        //   console.log(response)
        //   this.lead_data=response['data'][0];
        //   this.activitydata.referenceId=this.lead_data.leadId;
        //   console.log("check session");
        //   this.activitydata.userId=this.ses.user.data.userId;
        // });
        // });
        this.rolelist();
    };
    AddFollowupComponent.prototype.onSubmit = function () {
        var _this = this;
        this.loader = true;
        console.log(this.activitydata);
        console.log(this.activitydata.followUpDate);
        var nextFollowUpDate = moment__WEBPACK_IMPORTED_MODULE_7__(this.activitydata.followUpDate).format('YYYY-MM-DD ');
        this.activitydata.followUpDate = nextFollowUpDate;
        console.log(this.activitydata.followUpDate);
        var activitydata2 = JSON.parse(JSON.stringify(this.activitydata));
        if (activitydata2['networkId'] == 'OtherCustomerType') {
            delete activitydata2['networkId'];
        }
        console.log(activitydata2);
        this.db.fetchData(activitydata2, 'followup/add').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['message'] == "FollowUp added Successfully") {
                _this.toast.openSucess('User added successfully', '');
                _this.router.navigate(['//followup-list']);
            }
            else {
                _this.toast.openSucess(response['message'], '');
            }
        });
    };
    AddFollowupComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var cllient = _this.rolelists.filter(function (x) { return x.userTypeId == 3; });
            _this.client1 = cllient[0].roles;
            console.log(_this.client1);
        });
    };
    AddFollowupComponent.prototype.getnetworklist = function (role) {
        var _this = this;
        if (role == 11) {
            this.activitydata.activityModule = 2;
        }
        else if (role == 12) {
            this.activitydata.activityModule = 1;
        }
        else if (role == 13) {
            this.activitydata.activityModule = 3;
        }
        else if (role == 14) {
            this.activitydata.activityModule = 4;
        }
        else if (role == 15) {
            this.activitydata.activityModule = 5;
        }
        this.loader = true;
        if (this.userdata['userType'] == 2) {
            this.senddata = { "role": this.activitydata.role, "salesUserId": this.userdata['userId'] };
            console.log(this.senddata);
            this.db.fetchData(this.senddata, 'mynetwork/detail').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.distributionList = response['data'];
                console.log(_this.distributionList);
            });
        }
        else {
            this.senddata = { "role": this.activitydata.role, };
            console.log(this.senddata);
            this.db.fetchData(this.senddata, 'network/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.distributionList = response['data'];
                console.log(_this.distributionList);
            });
        }
    };
    AddFollowupComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-followup',
            template: __webpack_require__(/*! ./add-followup.component.html */ "./src/app/followup/add-followup/add-followup.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], _local_storage_service__WEBPACK_IMPORTED_MODULE_6__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], AddFollowupComponent);
    return AddFollowupComponent;
}());



/***/ }),

/***/ "./src/app/followup/all-followup-list/all-followup-list.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/followup/all-followup-list/all-followup-list.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form  #f=\"ngForm\" (ngSubmit)=\"f.form.valid && creatNextFollowUp()\" novalidate>\n  <div class=\"main-container\">\n    <div *ngIf=\"loader\"> \n      <div class=\"cs-loader\">\n        <img src=\"assets/img/loader.png\" class=\"rotate\"> \n      </div>\n    </div>\n    <div class=\"middle-container\">\n      <div class=\"page-heading\">\n        <!-- <img src=\"assets/img/leads_icon.svg\" class=\"h-icon\"> -->\n        <div class=\"heading-text bc-space\">\n          <h2><span *ngIf='activityDetail.networkEstablishement'>{{activityDetail.networkEstablishement}}</span><span *ngIf='activityDetail.otherCustomer'>{{activityDetail.otherCustomer}}</span></h2>\n          <!-- <h2>{{activityDetail.establishment}}</h2> -->\n          <p></p>\n          \n          <div class=\"back-btn\">\n            <a mat-button routerLink=\"/followup-list\" routerLinkActive=\"active\" ><i class=\"material-icons\">arrow_right_alt</i></a>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"left-auto\" *ngIf=\"activityDetail.isClosed==false\">\n        <div class=\"cs-btn  text-right\">\n          <div class=\"in-btn\">\n            <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"close_followup()\">Close Follow-Up</button>\n            <a mat-raised-button color=\"accent\" *ngIf=\"activityDetail.nextFollowUpType==2 ||activityDetail.followUpType==2\"  (click)=\"createactivity(activityDetail.activityId)\" routerLinkActive=\"active\">Create Check-In</a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"details-info\">\n              <div class=\"basic-details \">\n                <div class=\"col s12 cs-figure pl0 pr0\">\n                  <ul>\n                    <li>\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Follow Up Date</span>\n                          <p> {{activityDetail.followUpDate | date:'EEEE, MMMM d, y'}}</p>\n                        </div>\n                      </div>\n                    </li>\n                    <li>\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Follow Up Type</span>\n                          <p>{{activityDetail.followUpTypeName}}</p>\n                        </div>\n                      </div>\n                    </li>\n                    <li>\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>User Name</span>\n                          <p>{{activityDetail.userName}}</p>\n                        </div>\n                      </div>\n                    </li>\n                    <li>\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Activity Module</span>\n                          <p>{{activityDetail.activityModuleName}}</p>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                  <ul>\n                  <li>\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Remarks</span>\n                          <p>{{activityDetail.remarks}}</p>\n                        </div>\n                      </div>\n                    </li>\n                    <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>Status</span>\n                            <p><span *ngIf=\"activityDetail.isClosed==true\">Closed</span><span *ngIf=\"activityDetail.isClosed==false\">Open</span></p>\n                          </div>\n                        </div>\n                      </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"tabs\">\n              <ul>\n                <li><a  routerLinkActive=\"active\" (click)=\"cloase_followup()\">Close Follow-Up</a></li>\n                <li><a *ngIf=\"activityDetail.nextFollowUpType==2 ||activityDetail.followUpType==2\"  (click)=\"createactivity(activityDetail.activityId)\" routerLinkActive=\"active\">create activity</a></li>\n              </ul>\n            </div>\n          </div>\n        </div> -->\n        <div class=\"row mt15\" *ngIf=\"openfollowup==1\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>Next Follow-up Information</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s6 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Next Followup Type\" name=\"nextFollowUpType\" #nextFollowUpType=\"ngModel\"  [ngClass]=\"{'has-error' :f.submitted && nextFollowUpType.invalid } \" [(ngModel)]=\"data.nextFollowUpType\" required>\n                          <mat-option value=\"1\">Call</mat-option>\n                          <mat-option value=\"2\">Meeting</mat-option>\n                          <mat-option value=\"3\">Email</mat-option>\n                          <mat-option value=\"4\">Taks</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && nextFollowUpType.invalid\" class=\"invalid-feedback\">\n                        <mat-error>Follow Up Type is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s6 pr0\" *ngIf=\"data.nextFollowUpType!=4\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput [matDatepicker]=\"pickers\" placeholder=\"Next Followup Date\" name=\"nextFollowUpDate\"  [ngClass]=\"{'has-error' :f.submitted && nextFollowUpDate.invalid } \" #nextFollowUpDate=\"ngModel\" [min]='currentDate' [(ngModel)]=\"data.nextFollowUpDate\" readonly required>\n                        <mat-datepicker-toggle matSuffix [for]=\"pickers\"></mat-datepicker-toggle>\n                        <mat-datepicker #pickers></mat-datepicker>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && nextFollowUpDate.invalid\" class=\"invalid-feedback\">\n                        <mat-error>Follow Up Date is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row mb20\" *ngIf=\"data.nextFollowUpType!=4\">\n                  <div class=\"col s12 padding0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <textarea matInput placeholder=\"Remark\"  name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"data.remarks\"  required></textarea>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col s4 empty\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"openfollowup==1\">\n          <div class=\"col s12\">\n            <div class=\"cs-btn fixedd mt32 text-right\">\n              <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\">Save</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        \n        <!-- <div class=\"row\" *ngIf=\"followuphistory!=''\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box mt15 padding0\" >\n              <div class=\"full-address\">\n                <div class=\"top-heading\">\n                  <h2>Follow-up History</h2>\n                </div>\n                <div class=\"cs-table\">\n                  <div class=\"table-head\">\n                    <table>\n                      <tr>\n                        <th class=\"w170\"> date</th>\n                        <th class=\"w170\">Follow-up type</th>\n                        <th >Remarks</th>\n                        <th >Status</th>\n                      </tr>\n                    </table>\n                  </div>\n                  <div class=\"table-container\">\n                    <div class=\"table-content none-shadow\">\n                      <table>\n                        <tr *ngFor=\"let check of followuphistory\">\n                          <td class=\"w170\">{{check.followUpDate|date:'d MMM y'}}</td>\n                          <td class=\"w170\">\n                            <span *ngIf=\"check.followUpType==1\">Call</span>\n                            <span *ngIf=\"check.followUpType==2\">Meeting</span>\n                            <span *ngIf=\"check.followUpType==3\">Email</span>\n                          </td>\n                          <td>{{check.remarks}}</td>\n                          <td><span *ngIf=\"check.isClosed==true\">Closed</span><span *ngIf=\"check.isClosed==false\">Open</span></td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n         -->\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n      </div>\n    </div>\n  </div>\n</form>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/followup/all-followup-list/all-followup-list.component.scss":
/*!*****************************************************************************!*\
  !*** ./src/app/followup/all-followup-list/all-followup-list.component.scss ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvbGxvd3VwL2FsbC1mb2xsb3d1cC1saXN0L2FsbC1mb2xsb3d1cC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/followup/all-followup-list/all-followup-list.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/followup/all-followup-list/all-followup-list.component.ts ***!
  \***************************************************************************/
/*! exports provided: AllFollowupListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AllFollowupListComponent", function() { return AllFollowupListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");








var AllFollowupListComponent = /** @class */ (function () {
    function AllFollowupListComponent(alrt, parms, toast, service, user, router) {
        var _this = this;
        this.alrt = alrt;
        this.parms = parms;
        this.toast = toast;
        this.service = service;
        this.user = user;
        this.router = router;
        this.openfollowup = 0;
        this.activityDetail = [];
        this.loader = false;
        this.data = {};
        this.followuphistory = [];
        this.userdata = [];
        // currentDate = moment();
        this.currentDate = new Date().toJSON().split('T')[0];
        this.userdata = this.user['user']['data'];
        this.parms.params.subscribe(function (params) {
            console.log(params);
            _this.activityId = params.id;
            console.log(_this.activityId);
            if (_this.activityId) {
                _this.getActivityDetail();
            }
        });
    }
    AllFollowupListComponent.prototype.ngOnInit = function () {
    };
    AllFollowupListComponent.prototype.createactivity = function () {
        var _this = this;
        this.openfollowup = 0;
        this.data.activityId = this.activityDetail.activityId;
        this.data.followUpId = this.lastfollowupid;
        this.data.isClosed = true;
        this.service.fetchData(this.data, "followup/update").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.alrt.success();
            }
        });
        localStorage.setItem('activityId', JSON.stringify(this.activityId));
        this.router.navigate(['/add-activity']);
        console.log(localStorage);
    };
    AllFollowupListComponent.prototype.getActivityDetail = function () {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ 'followupId': this.activityId, 'currentPage': 1, 'pageSize': 50 }, "followup/list").subscribe(function (result) {
            console.log(result);
            setTimeout(function () {
                _this.loader = false;
            }, 1000);
            if (result['status'] == 'Success') {
                _this.activityDetail = result['data'][0];
                console.log(_this.activityDetail);
                // this.service.fileData(this.activityDetail.activityId,"activity/detail/").subscribe((result)=>{
                //   console.log(result);
                //   console.log("check data avlok for follow-ups");
                //   this.followuphistory=result['data']['activityFollowUps'];
                //   console.log(this.followuphistory);
                //   for(var k=0;k<this.followuphistory.length;k++){
                //     this.lastfollowupid=this.followuphistory[k].followUpId;
                //   }
                //   console.log("this is the last follow-up");
                //   console.log(this.lastfollowupid);
                // })
            }
        });
    };
    AllFollowupListComponent.prototype.creatNextFollowUp = function () {
        var _this = this;
        if (this.data.nextFollowUpType != 4) {
            this.loader = true;
            console.log(this.activityDetail.networkId);
            console.log(this.activityDetail.referenceId);
            if (this.activityDetail.networkId != "") {
                this.data.networkId = this.activityDetail.networkId;
            }
            else {
                this.data.networkId = this.activityDetail.referenceId;
            }
            this.data.activityModule = this.activityDetail.activityModule;
            this.data.activityId = this.activityDetail.activityId;
            this.data.followUpType = this.data.nextFollowUpType;
            this.data.followUpDate = moment__WEBPACK_IMPORTED_MODULE_5__(this.data.nextFollowUpDate).format('YYYY-MM-DD ');
            this.data.status = 1;
            this.data.userId = this.userdata['userId'];
            console.log(this.data);
            this.service.fetchData(this.data, "followup/add").subscribe(function (result) {
                console.log(result);
                _this.loader = false;
                if (result['status'] == 'Success') {
                    _this.alrt.success();
                    _this.router.navigate(['/followup-list']);
                }
            });
        }
        else {
            this.openfollowup = 0;
            this.data.networkId = this.activityDetail.networkId;
            this.data.activityId = this.activityDetail.activityId;
            this.data.followUpId = this.lastfollowupid;
            this.data.isClosed = true;
            this.service.fetchData(this.data, "followup/update").subscribe(function (result) {
                console.log(result);
                _this.loader = false;
                if (result['status'] == 'Success') {
                    _this.alrt.success();
                    _this.router.navigate(['/add-task']);
                }
            });
        }
    };
    AllFollowupListComponent.prototype.close_followup = function () {
        var _this = this;
        this.msg = "Follow-Up";
        this.alrt.followup(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.openfollowup = 1;
            }
            else {
                _this.openfollowup = 0;
                console.log(_this.activityDetail.followUpId);
                _this.data.activityId = _this.activityDetail.activityId;
                _this.data.followUpId = _this.activityDetail.followUpId;
                _this.data.isClosed = true;
                _this.service.fileData(_this.data.followUpId, "followup/close/").subscribe(function (result) {
                    console.log(result);
                    _this.loader = false;
                    if (result['status'] == 'Success') {
                        _this.alrt.success();
                        _this.router.navigate(['/followup-list']);
                    }
                });
            }
        });
    };
    AllFollowupListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-all-followup-list',
            template: __webpack_require__(/*! ./all-followup-list.component.html */ "./src/app/followup/all-followup-list/all-followup-list.component.html"),
            styles: [__webpack_require__(/*! ./all-followup-list.component.scss */ "./src/app/followup/all-followup-list/all-followup-list.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_toast__WEBPACK_IMPORTED_MODULE_7__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_local_storage_service__WEBPACK_IMPORTED_MODULE_4__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], AllFollowupListComponent);
    return AllFollowupListComponent;
}());



/***/ }),

/***/ "./src/app/followup/followup-list/followup-list.component.html":
/*!*********************************************************************!*\
  !*** ./src/app/followup/followup-list/followup-list.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n    <div *ngIf=\"loader\"> \n        <div class=\"cs-loader\">\n          <img src=\"assets/img/loader.png\" class=\"rotate\"> \n        </div>\n      </div>\n    <div class=\"middle-container pb15\">\n        <div class=\"page-heading\">\n            <img src=\"assets/img/folowup.svg\" class=\"h-icon\">\n            <div class=\"heading-text\">\n                <h2>Follow Ups</h2>\n                <p>Total Follow Up - {{this.followupList.length}}</p>\n            </div>\n        </div>\n        <div class=\"tabs right-tab\">\n            <ul>\n                <li>\n                    <a class=\"pr40\" [ngClass]= \"{'active' : filter.followUpBeforeDate == 1}\" (click)=\"filter.followUpBeforeDate=1;filter.followUpAfterDate = 0;filter.date=0;todayFollowUpList(currentDate)\">Today's Follow-Ups</a>\n                </li>\n                <li>\n                    <a class=\"pr40\" [ngClass]= \"{'active' : filter.followUpAfterDate == 1}\" (click)=\"filter.followUpAfterDate = 1;filter.followUpBeforeDate = 0;filter.date=0;todayFollowUpList(currentDate)\">Up Coming Follow-Ups</a>\n                </li>\n                <!-- <li>\n                    <a class=\"pr40\" [ngClass]= \"{'active' : tab_class == true}\" (click)=\"tab_class = !tab_class\">Today's Follow-Ups | {{tab_class}}</a>\n                </li>\n                <li>\n                    <a class=\"pr40\" [ngClass]= \"{'active' : tab_class == false}\" (click)=\"tab_class = !tab_class\">Up Coming Follow-Ups</a>\n                </li> -->\n            </ul>\n        </div>\n        <!-- <div  class=\"filter-container left-auto\" *ngIf=\"filter.date!='' || filter.establishment!='' || filter.nextFollowUpType!=''\">\n            <div  class=\"filter-btn\">\n                <button mat-button >CLEAR FILTER</button>\n            </div>\n        </div> -->\n    </div>\n    \n    <div class=\"container-outer pt0\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <!-- <div class=\"col s3\">\n                    <div class=\"cs-calender\">\n                        <div class=\"calendar\">\n                            <div class=\"calendar-navs\">\n                                <div class=\"outer\">\n                                    <div class=\"innear\">\n                                        <div class=\"cal-header\">\n                                            <div class=\"month-nav \">\n                                                <button (click)=\"prevMonth()\" class=\"chevron\">\n                                                    <i class=\"material-icons dp48\">chevron_left</i>\n                                                </button>\n                                                <p>{{ currentDate.format('MMMM') }} {{ currentDate.format('YYYY') }}</p>\n                                                <button (click)=\"nextMonth()\" class=\"chevron\">\n                                                    <i class=\"material-icons dp48\">chevron_right</i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"year-nav\">\n                                    <button (click)=\"prevYear()\">&lt;</button>\n                                    <span></span>\n                                    <button (click)=\"nextYear()\">&gt;</button>\n                                </div>\n                            </div>\n                            <div class=\"month-grid\">\n                                <div class=\"day-names\">\n                                    <div *ngFor=\"let name of dayNames\" class=\"day-name p9\">\n                                        {{ name }}\n                                    </div>\n                                </div>\n                                <div class=\"weeks\">\n                                    <div *ngFor=\"let week of weeks\" class=\"week\">\n                                        <ng-container *ngFor=\"let day of week\">\n                                            <div class=\"week-date disabled\" *ngIf=\"!isSelectedMonth(day.mDate,currentDate)\">\n                                                <p class=\"date-text\">{{ day.mDate.date() }}</p>\n                                            </div>\n                                            <div  class=\"week-date enabled\" *ngIf=\"isSelectedMonth(day.mDate,currentDate)\" (click)=\"selectDate(day.mDate)\"\n                                            [ngClass]=\"{ today: day.today, selected: day.selected, workday: day.worked,'workday': day.mDate.format('DD')==date  }\"><p class=\"date-text\">{{ day.mDate.date() }}</p></div>\n                                        </ng-container>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div> -->\n                <div class=\"col s12 padding0\">\n                    <div class=\"cs-table left-right-15\">\n                        <div class=\"sticky-head\">\n                            <div class=\"table-head\">\n                                <table class=\"sno-border\"> \n                                    <tr>\n                                        <th class=\"w30\">&nbsp;</th>\n                                        <th class=\"w110\">Date</th>\n                                        <th class=\"w200\">Company</th>\n                                        <th class=\"w150\">Network Type</th>\n                                        <th *ngIf=\"role==1\" class=\"w150\">Users</th>\n                                        <th class=\"w150\">Follow-Up Type</th>\n                                        <th class=\"w150\">Status</th>\n                                        <!-- <th>Remark</th> -->\n                                    </tr>\n                                </table>\n                            </div>\n                            <div class=\"table-head bdrt\">\n                                <table class=\"sno-border\">\n                                    <tr>\n                                        <th class=\"w30\">&nbsp;</th>\n                                        <th class=\"w110\">\n                                            <div class=\"th-search padding0\" >\n                                                <mat-form-field class=\"wp100 toggle-date-picker\">\n                                                    <input matInput [matDatepicker]=\"picker\" (dateChange)=\"filter.followUpBeforeDate=0;filter.followUpAfterDate=0;selectDate(filter.date)\" #date=\"ngModel\" [(ngModel)]=\"filter.date\"  readonly>\n                                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                                    <mat-datepicker  #picker></mat-datepicker>\n                                                </mat-form-field>\n                                            </div>\n                                        </th>\n                                        <th  class=\"w200\">\n                                            <div class=\"th-search\">\n                                                <input type=\"text\" name=\"   \" (keyup)=\"todayFollowUpList(currentDate)\" #establishment=\"ngModel\" [(ngModel)]=\"filter.establishment\" placeholder=\"Search....\">\n                                            </div>\n                                        </th>\n                                        <th  class=\"w150\">\n                                            <!-- <div class=\"th-search\">\n                                                <select placeholder=\"Select Role\" (change)=\"todayFollowUpList(currentDate)\" name=\"role\" #role=\"ngModel\" [(ngModel)]=\"filter.role\"  >\n                                                    <option value=\"\" disabled>Select</option>\n                                                    <option  *ngFor=\"let user of userRole\" value={{user.roleId}}>{{user.roleName}}</option>\n                                                </select>\n                                            </div> -->\n                                        </th>\n                                        <th *ngIf=\"role==1\" class=\"w150\">\n                                            <!-- <div class=\"th-search\">\n                                                <input type=\"text\" name=\"userName\" (keyup)=\"todayFollowUpList(currentDate)\" #userName=\"ngModel\" [(ngModel)]=\"filter.userName\" placeholder=\"Search....\">\n                                            </div> -->\n                                            <div class=\"th-search\">\n                                                <select placeholder=\"Select Role\" (change)=\"todayFollowUpList(currentDate)\" name=\"role\" #role=\"ngModel\" [(ngModel)]=\"filter.role\"  >\n                                                    <option value=\"\" disabled>Select</option>\n                                                    <option  *ngFor=\"let user of userRole\" value={{user.roleId}}>{{user.roleName}}</option>\n                                                </select>\n                                            </div>\n                                        </th>\n                                        <th class=\"w150\">\n                                            <div class=\"th-search\">\n                                                <select (change)=\"todayFollowUpList(currentDate)\" placeholder=\"Select Type\" name=\"nextFollowUpType\" #nextFollowUpType=\"ngModel\" [(ngModel)]=\"filter.nextFollowUpType\">\n                                                    <option value=\"\" disabled>Select</option>\n                                                    <option value=\"1\">Call</option>\n                                                    <option value=\"2\">Meeting</option>\n                                                    <option value=\"3\">Email</option>\n                                                </select>\n                                            </div>\n                                        </th>\n                                        <th class=\"w150\">\n                                            <div class=\"th-search\">\n                                                <select (change)=\"todayFollowUpList(currentDate)\" placeholder=\"Select Type\" name=\"isClosed\" #isClosed=\"ngModel\" [(ngModel)]=\"filter.isClosed\">\n                                                    <option value=\"\" disabled>Select</option>\n                                                    <option value=\"false\">Open</option>\n                                                    <option value=\"true\">Closed</option>\n                                                    \n                                                </select>\n                                            </div>\n                                        </th>\n                                        <!-- <th>&nbsp;</th> -->\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                        \n                        <div class=\"table-container\">\n                            <div class=\"table-content\">\n                                <table class=\"sno-border\">\n                                    <tr  *ngFor=\"let data of followupList;let i = index\">\n                                        <td class=\"w30\">{{i+1}}</td>\n                                        <td class=\"w110\">{{data.followUpDate |date:'d MMM y'}}</td>\n                                        <td class=\"w200\"><a class=\"link-btn\" mat-button routerLink=\"/all-followup-list/{{data.followUpId}}\" routerLinkActive=\"active\" ><span *ngIf='data.networkEstablishement'>{{data.networkEstablishement}}</span><span *ngIf='data.otherCustomer'>{{data.otherCustomer}}</span></a></td>\n                                        <td class=\"w150\">{{data.activityModuleName}}</td>\n                                        <td *ngIf=\"role==1\" class=\"w150\">{{data.userName}}</td>\n                                        <td class=\"w150\"><span *ngIf=\"data.followUpType==1\">Call</span><span *ngIf=\"data.followUpType==2\">Meeting</span><span *ngIf=\"data.followUpType==3\">Email</span>\n                                            <!-- <div class=\"action-btns\">\n                                                <a mat-button class=\"view\" (click)=\"goToDetail(data.followUpId)\"><i class=\"material-icons\"  >remove_red_eye</i> View</a>\n                                            </div> -->\n                                        </td>\n                                        <td class=\"w150\"><span *ngIf=\"data.isClosed==true\">Closed</span><span *ngIf=\"data.isClosed==false\">Open</span>\n                                            <div class=\"action-btns\">\n                                                <a mat-button class=\"view\" (click)=\"goToDetail(data.followUpId)\"><i class=\"material-icons\"  >remove_red_eye</i> View</a>\n                                            </div>\n                                        </td>\n                                        <!-- <td>{{data.remarks}}</td> -->\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"data-not-available\" *ngIf=\"div\" >\n                        <div class=\"outer\">\n                            <div class=\"iinear\">\n                                <div class=\"figure\" matRipple>\n                                    <div class=\"header\">\n                                        <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                    </div>\n                                    \n                                    <div class=\"description\">\n                                        <!-- <div class=\"cs-heading\">\n                                            <h2>No FollowUp</h2>\n                                        </div> -->\n                                        <div class=\"img\">\n                                            <i class=\"material-icons\">error_outline</i>\n                                        </div>\n                                        <div class=\"psc\">\n                                            <p>data not available</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"fixed-multibtn-botm\">\n        <ul>\n            <li><a  matTooltip=\"Add New\" routerLink=\"/add-followup/32\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n        </ul>\n    </div>\n</div>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/followup/followup-list/followup-list.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/followup/followup-list/followup-list.component.ts ***!
  \*******************************************************************/
/*! exports provided: FollowupListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FollowupListComponent", function() { return FollowupListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_6__);







var FollowupListComponent = /** @class */ (function () {
    function FollowupListComponent(db, router, user, route) {
        var _this = this;
        this.db = db;
        this.router = router;
        this.user = user;
        this.route = route;
        this.userdata = [];
        this.senddata = [];
        this.filter = {};
        this.loader = false;
        this.currentDate = new Date().toJSON().split('T')[0];
        this.selectedDates = [];
        this.onSelectDate = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.followupList = [];
        this.dayNames = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];
        this.weeks = [];
        this.sortedDates = [];
        this.tab_class = true;
        this.cal_date = '';
        this.div = false;
        this.rolelistsales1 = [];
        this.rolelists = [];
        this.userRole = [];
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
        this.filter.isClosed = false;
        this.filter.followUpBeforeDate = 1;
        setTimeout(function () {
            _this.generateCalendar();
            _this.todayFollowUpList(_this.currentDate);
            _this.getUserTypeList();
        }, 500);
    }
    FollowupListComponent.prototype.ngOnInit = function () {
    };
    FollowupListComponent.prototype.isSelectedMonth = function (date, d) {
        return moment__WEBPACK_IMPORTED_MODULE_5__(date).isSame(d, 'month');
    };
    FollowupListComponent.prototype.prevMonth = function () {
        this.currentDate = moment__WEBPACK_IMPORTED_MODULE_5__(this.currentDate).subtract(1, 'months');
    };
    FollowupListComponent.prototype.nextMonth = function () {
        this.currentDate = moment__WEBPACK_IMPORTED_MODULE_5__(this.currentDate).add(1, 'months');
    };
    FollowupListComponent.prototype.selectDate = function (date) {
        var _this = this;
        console.log(moment__WEBPACK_IMPORTED_MODULE_5__(date).format('YYYY-MM-DD'));
        setTimeout(function () {
            _this.todayFollowUpList(moment__WEBPACK_IMPORTED_MODULE_5__(date).format('YYYY-MM-DD'));
        }, 500);
    };
    FollowupListComponent.prototype.goToDetail = function (id) {
        this.router.navigate(['/all-followup-list/' + id]);
    };
    FollowupListComponent.prototype.generateCalendar = function () {
        var dates = this.fillDates(this.currentDate);
        var weeks = [];
        while (dates.length > 0) {
            weeks.push(dates.splice(0, 7));
        }
        this.weeks = weeks;
        console.log(this.weeks);
    };
    FollowupListComponent.prototype.fillDates = function (currentMoment) {
        var _this = this;
        var firstOfMonth = moment__WEBPACK_IMPORTED_MODULE_5__(currentMoment).startOf('month').day();
        var firstDayOfGrid = moment__WEBPACK_IMPORTED_MODULE_5__(currentMoment).startOf('month').subtract(firstOfMonth, 'days');
        var start = firstDayOfGrid.date();
        return lodash__WEBPACK_IMPORTED_MODULE_6__["range"](start, start + 42)
            .map(function (date) {
            var d = moment__WEBPACK_IMPORTED_MODULE_5__(firstDayOfGrid).date(date);
            return {
                today: _this.isToday(d),
                selected: _this.isSelected(d, _this.selectedDates),
                cal_date: _this.cal_date,
                mDate: d,
            };
        });
    };
    FollowupListComponent.prototype.isToday = function (date) {
        return moment__WEBPACK_IMPORTED_MODULE_5__().isSame(moment__WEBPACK_IMPORTED_MODULE_5__(date), 'day');
    };
    FollowupListComponent.prototype.isSelected = function (date, d) {
        return lodash__WEBPACK_IMPORTED_MODULE_6__["findIndex"](d, function (selectedDate) {
            return moment__WEBPACK_IMPORTED_MODULE_5__(date).isSame(selectedDate.mDate, 'day');
        }) > -1;
    };
    FollowupListComponent.prototype.isActive = function (date, user_data) {
        var _this = this;
        return lodash__WEBPACK_IMPORTED_MODULE_6__["findIndex"](user_data, function (diet) {
            if (moment__WEBPACK_IMPORTED_MODULE_5__(date).isSame(diet.date_created, 'day')) {
                _this.cal_date = diet.date_created;
                return true;
            }
            else {
                _this.cal_date = undefined;
                return false;
            }
        }) > -1;
    };
    FollowupListComponent.prototype.todayFollowUpList = function (dates) {
        var _this = this;
        console.log(dates);
        console.log(this.filter.followUpBeforeDate);
        console.log(this.filter.followUpAfterDate);
        if (this.filter.followUpBeforeDate == 1) {
            console.log("befor date is working");
            this.befordate = undefined;
            this.afterdate = undefined;
            this.nextFollowUpDate = moment__WEBPACK_IMPORTED_MODULE_5__(dates).format('YYYY-MM-DD');
        }
        else if (this.filter.followUpAfterDate == 1) {
            console.log("after date is working");
            this.afterdate = moment__WEBPACK_IMPORTED_MODULE_5__(dates).format('YYYY-MM-DD');
            this.befordate = undefined;
            this.nextFollowUpDate = undefined;
        }
        else {
            console.log(dates);
            console.log("todays date is working");
            this.nextFollowUpDate = moment__WEBPACK_IMPORTED_MODULE_5__(dates).format('YYYY-MM-DD');
            this.afterdate = undefined;
            this.befordate = undefined;
        }
        this.div = false;
        this.followupList = [];
        this.date = moment__WEBPACK_IMPORTED_MODULE_5__(dates).format('DD');
        if (this.userdata['userType'] == 2) {
            this.senddata = { 'isClosed': this.filter.isClosed, 'followUpAfterDate': this.afterdate, 'followUpBeforeDate': this.befordate, "userId": this.userdata['userId'], 'followUpDate': this.nextFollowUpDate, 'companyName': this.filter.establishment, 'followUpType': this.filter.nextFollowUpType, "userRole  ": this.filter.role, "userName": this.filter.userName, 'currentPage': 1, 'pageSize': 50 };
        }
        if (this.userdata['userType'] == 1) {
            this.senddata = { 'isClosed': this.filter.isClosed, 'followUpAfterDate': this.afterdate, 'followUpBeforeDate': this.befordate, 'followUpDate': this.nextFollowUpDate, 'companyName': this.filter.establishment, 'followUpType': this.filter.nextFollowUpType, "userRole": this.filter.role, "userName": this.filter.userName, 'currentPage': 1, 'pageSize': 50 };
        }
        this.loader = true;
        console.log(this.senddata);
        this.db.fetchData(this.senddata, "followup/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                setTimeout(function () {
                    _this.loader = false;
                }, 1500);
                _this.followupList = result['data'];
                for (var i = 0; i < _this.followupList.length; i++) {
                    for (var j = 0; j < _this.userRole.length; j++) {
                        if (_this.userRole[j]['roleId'] === _this.followupList[i]['userRole']) {
                            _this.followupList[i]['roleName'] = _this.userRole[j]['roleName'];
                        }
                    }
                }
            }
            if (result['status'] == 'Failed') {
                setTimeout(function () {
                    _this.div = true;
                    _this.loader = false;
                }, 1000);
            }
        });
        console.log('****** FILTER *******');
        console.log(this.filter);
    };
    FollowupListComponent.prototype.getUserTypeList = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var filterrolesales = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.userRole = filterrolesales[0].roles;
            // console.log(this.rolelistsales1);
            // let filterrolesystem= this.rolelists.filter(x => x.userTypeId==1);
            // // this.rolelistsystem1=filterrolesystem[0].roles;
            // for(let i=0;i<this.rolelistsales1.length;i++){
            //   this.userRole.push({"roleName":this.rolelistsales1[i]['roleName']});}
            // console.log(this.rolelistsales1);
            console.log(_this.userRole);
        });
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], FollowupListComponent.prototype, "selectedDates", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], FollowupListComponent.prototype, "onSelectDate", void 0);
    FollowupListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-followup-list',
            template: __webpack_require__(/*! ./followup-list.component.html */ "./src/app/followup/followup-list/followup-list.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _local_storage_service__WEBPACK_IMPORTED_MODULE_4__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]])
    ], FollowupListComponent);
    return FollowupListComponent;
}());



/***/ }),

/***/ "./src/app/footer/footer.component.html":
/*!**********************************************!*\
  !*** ./src/app/footer/footer.component.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- \n<footer>\n  <p>Powered by Abacusdesk</p>\n</footer> -->"

/***/ }),

/***/ "./src/app/footer/footer.component.ts":
/*!********************************************!*\
  !*** ./src/app/footer/footer.component.ts ***!
  \********************************************/
/*! exports provided: FooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterComponent", function() { return FooterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var FooterComponent = /** @class */ (function () {
    function FooterComponent() {
    }
    FooterComponent.prototype.ngOnInit = function () {
    };
    FooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-footer',
            template: __webpack_require__(/*! ./footer.component.html */ "./src/app/footer/footer.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], FooterComponent);
    return FooterComponent;
}());



/***/ }),

/***/ "./src/app/header/header.component.html":
/*!**********************************************!*\
  !*** ./src/app/header/header.component.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<header>\n    <div class=\"logo\">\n        <img src=\"assets/img/theme/kenshjn/logo.svg\">\n        \n    </div>\n    \n    <div id=\"nav-icon2\" (click)=\"toggleNav()\" matRipple>\n        <span></span>\n        <span></span>\n        <span></span>\n    </div>\n    \n    <div class=\"animation-content\">\n        <h2>Welcome to the world opportunities.</h2>\n        <!-- <h2>Your journey to deliver quality products with smartest solutions start here!</h2> -->\n    </div>\n    \n    <!-- <div class=\"cs-type\">\n        <mat-form-field class=\"sel-opt\">\n            <select matNativeControl required>\n                <option value=\"volvo\">Type</option>\n                <option value=\"saab\">Saab</option>\n                <option value=\"mercedes\">Mercedes</option>\n                <option value=\"audi\">Audi</option>\n                <option value=\"distribution net\">Distribution Net.</option>\n            </select>\n        </mat-form-field>\n    </div>\n    \n    <div class=\"top-search wp20\">\n        <input type=\"text\" placeholder=\"SEARCH. . .\">\n        <i class=\"material-icons\">search</i>\n    </div> -->\n    \n    <div class=\"right-data\" >\n        <div class=\"outer\">\n            <div class=\"inner\">\n                <ul>\n                    <li>\n                        <a mat-button><img src=\"assets/img/notification.svg\" class=\"h25\" alt=\"\">\n                            <span class=\"count\">{{taskNotification.length}}</span>\n                        </a>\n                    </li>\n                    <li class=\"af-none\">\n                        <div class=\"flex\">\n                            <a *ngIf=\"userType!=3\" class=\"profile\" routerLink=\"/sale-user-detail/{{userId}}\" routerLinkActive=\"active\" ><img src=\"assets/img/user.svg\" class=\"nav-icon h20\"></a>\n                            <div style=\"width: max-content;\">\n                                <p>{{this.userName}}</p>\n                                <span *ngIf=\"this.userRole==1 && !user.superAdmin\">Admin</span>\n                                <span *ngIf=\"this.userRole==1 && user.superAdmin\">Super Admin</span>\n                                <span *ngIf=\"this.userRole==2\">Human Resource</span>\n                                <span *ngIf=\"this.userRole==3\">Accounts</span>\n                                <span *ngIf=\"this.userRole==4\">Marketing Co-ordinator</span>\n                                <span *ngIf=\"this.userRole==5\">Business Head</span>\n                                <span *ngIf=\"this.userRole==6\">National Manager</span>\n                                <span *ngIf=\"this.userRole==7\">Regional Manager</span>\n                                <span *ngIf=\"this.userRole==8\">Area Manager</span>\n                                <span *ngIf=\"this.userRole==9\">Zonal Manger</span>\n                                <span *ngIf=\"this.userRole==10\">Territory Incharge</span>\n                                <span *ngIf=\"this.userRole==11\">Wholeseller</span>\n                                <span *ngIf=\"this.userRole==12\">Distributer</span>\n                                <span *ngIf=\"this.userRole==13\">Retailer</span>\n                                <span *ngIf=\"this.userRole==14\">Engine Recondtioner</span>\n                                <span *ngIf=\"this.userRole==15\">Mechanic</span>\n                            </div>\n                        </div>\n                        \n                        \n                    </li>\n                    <li><a class=\"logout\" matRipple matTooltip=\"Logout\">\n                        <div (click)=\"logout()\">\n                            <i class=\"material-icons\" >power_settings_new</i>\n                            logout\n                        </div>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n\n\n</header>"

/***/ }),

/***/ "./src/app/header/header.component.ts":
/*!********************************************!*\
  !*** ./src/app/header/header.component.ts ***!
  \********************************************/
/*! exports provided: HeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function() { return HeaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);






var HeaderComponent = /** @class */ (function () {
    function HeaderComponent(renderer, router, ses, service) {
        this.renderer = renderer;
        this.router = router;
        this.ses = ses;
        this.service = service;
        this.user = {};
        this.taskDate = moment__WEBPACK_IMPORTED_MODULE_5__().format('YYYY-MM-DD');
        this.toggle = false;
        this.status1 = false;
        this.taskNotification = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.userName = this.user.data.userName;
        this.getTaskNotification();
    }
    HeaderComponent.prototype.ngOnInit = function () {
    };
    HeaderComponent.prototype.logout = function () {
        this.ses.logoutSession();
        this.router.navigate(['']);
    };
    HeaderComponent.prototype.toggleNav = function () {
        this.status1 = !this.status1;
        if (this.status1) {
            this.renderer.addClass(document.body, 'active');
        }
        else {
            this.renderer.removeClass(document.body, 'active');
        }
    };
    HeaderComponent.prototype.getTaskNotification = function () {
        var _this = this;
        var myDate = moment__WEBPACK_IMPORTED_MODULE_5__(this.taskDate, "YYYY-MM-DD").add(2, 'days');
        this.taskDate = moment__WEBPACK_IMPORTED_MODULE_5__(myDate["_d"]).format('YYYY-MM-DD');
        console.log(this.taskDate);
        // return this.endDate;
        console.log(this.taskDate);
        this.service.fetchData({ deadline: this.taskDate }, "mytask/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.taskNotification = result['data'];
            }
        });
    };
    HeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-header',
            template: __webpack_require__(/*! ./header.component.html */ "./src/app/header/header.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _local_storage_service__WEBPACK_IMPORTED_MODULE_3__["sessionStorage"], _constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"]])
    ], HeaderComponent);
    return HeaderComponent;
}());



/***/ }),

/***/ "./src/app/lead/add-lead/add-lead.component.html":
/*!*******************************************************!*\
  !*** ./src/app/lead/add-lead/add-lead.component.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form #f=\"ngForm\" (ngSubmit)=\"f.valid && p.valid && submitDetail(f)\" id=\"mainForm\" novalidate>\n  <div class=\"main-container\" >\n    <div *ngIf=\"loader\"> \n      <div class=\"cs-loader\">\n        <img src=\"assets/img/loader.png\" class=\"rotate\"> \n      </div>\n    </div>\n    <div class=\"middle-container\">\n      <div class=\"page-heading\">\n        <img src=\"assets/img/leads_icon.svg\" class=\"h-icon h16\">\n        <div class=\"heading-text\">\n          <h2>Lead</h2>\n          <p>Add New Lead</p>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s4 \">\n            \n          </div>\n          <div class=\"col s12\">\n              <div class=\"sprate-box padding0\">\n                  <div class=\"cs-logs\">\n                    <div class=\"top-heading\">\n                      <h2>LEAD TYPE</h2>\n                    </div>\n                    <div class=\"select-one padding15\">\n                        <mat-radio-group class=\"select-type\"  name=\"leadType\" id=\"leadType\" [(ngModel)]=\"data.leadType\"  #leadType=\"ngModel\" [ngClass]=\"{'has-error' : leadType.invalid }\" required>\n                          <ng-container *ngFor=\"let client of client1\" >\n                            <mat-radio-button [value]=\"client.roleId\" class=\"w170\">{{client.roleName}}</mat-radio-button>\n                          </ng-container>\n                        </mat-radio-group>\n                      </div>\n                  </div>\n                </div>\n             \n            <div class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>BASIC INFORMATION</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s8 pl0\" >\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Company Name\" name=\"establishment\" #establishment=\"ngModel\" [(ngModel)]=\"data.establishment\" id=\"establishment\" [ngClass]=\"{'has-error' : establishment.invalid } \" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && establishment.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"establishment.errors.required\">Company Name is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Mobile \" name=\"mobile\" id=\"mobile\"  #mobile=\"ngModel\" [(ngModel)]=\"data.mobile\" (keypress)=\"MobileNumber($event)\" minlength=\"10\" maxlength=\"10\" min=\"0\" [ngClass]=\"{'has-error' : mobile.invalid } \" required>\n                      </mat-form-field>\n\n                      <mat-error *ngIf=\"f.submitted && mobile.invalid && mobile.touched\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"mobile && (mobile.errors.minlength || mobile.errors.maxlength)\">Mobile no Invalid </mat-error>\n                      </mat-error>\n\n                      <mat-error *ngIf=\"f.submitted && mobile.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"mobile.errors.required\">Mobile no is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  \n                </div>\n                <div class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Email ID\" type=\"email\" name=\"email\" id=\"email\" #email=\"ngModel\" [(ngModel)]=\"data.email\" [ngClass]=\"{'has-error' : email.invalid } \" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required=\"{{data.leadType < 13 ? true : false}}\">\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"data.leadType<13 && f.submitted && email.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"email.touched\">Email Invalid</mat-error>\n                      </mat-error>\n\n                      <mat-error *ngIf=\" data.leadType<13 && f.submitted && email.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"email.errors.required\">Email required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4 \">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Landline \" name=\"landline\" id=\"landline\" #landline=\"ngModel\" [(ngModel)]=\"data.landline\" (keypress)=\"MobileNumber($event)\" minlength=\"10\" maxlength=\"13\" min=\"0\" >\n                      </mat-form-field>\n\n                       <mat-error *ngIf=\"f.submitted && landline.invalid && landline.touched\" class=\"invalid-feedback\">\n                          <mat-error>Landline no Invalid</mat-error>\n                      </mat-error>\n\n                    </div>\n                  </div>\n                  <div class=\"col s4 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"GST No.\" name=\"gst\" id=\"gst\" #gst = \"ngModel\" minlength=\"15\" maxlength=\"15\" [(ngModel)]=\"data.gst\">\n                      </mat-form-field>\n\n                      <mat-error *ngIf=\"f.submitted && gst.invalid\" class=\"invalid-feedback\">\n                          <mat-error>GST must be 15 digit</mat-error>\n                      </mat-error>\n\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <mat-select placeholder=\"Source\" matNativeControl name=\"source\" id=\"source\" #source=\"ngModel\" [(ngModel)]=\"data.source\"  [ngClass]=\"{'has-error' : source.invalid } \" required>\n                          <mat-option value=\"\" disabled>Select One</mat-option>\n                          <mat-option value=\"1\">SOCIAL</mat-option>\n                          <mat-option value=\"5\">CALL</mat-option>\n                          <mat-option value=\"2\">DIRECT</mat-option>\n                          <mat-option value=\"3\">WALK-IN</mat-option>\n                          <mat-option value=\"4\">REFERRAL</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"f.submitted && source.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"source.errors.required\">Source is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"sprate-box pt0 mt15\" >\n              <div class=\"cs-heading\">\n                <h2>CONTACT PERSON INFORMATION</h2>\n              </div>\n              <form #p=\"ngForm\" (ngSubmit)=\"p.valid && addContactPerson()\" novalidate>\n                <div class=\"from-fields\">\n                  <div class=\"row\">\n                    <div class=\"col s4 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Name\" name=\"name\" id=\"name\"  #name=\"ngModel\" [(ngModel)]=\"contact_person.name\" required=\"{{contact_person.mobile1 ? true : false}}\" (keypress)=\"namecheck($event)\" [ngClass]=\"{'has-error' : name.invalid } \">\n                        </mat-form-field>\n                       \n                       <mat-error *ngIf=\"f.submitted && name.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"name.errors.required\">Contact person is required</mat-error>\n                        </mat-error>\n\n                      </div>\n                    </div>\n                    <div class=\"col s4\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Mobile No. 1\" name=\"mobile1\" id=\"mobile1\" #mobile1=\"ngModel\" [(ngModel)]=\"contact_person.mobile1\" minlength=\"10\" maxlength=\"10\" min=\"0\" required=\"{{contact_person.name ? true : false}}\" (keypress)=\"MobileNumber($event)\" [ngClass]=\"{'has-error' : mobile1.invalid } \">\n                        </mat-form-field>\n                        \n\n                         <mat-error *ngIf=\"f.submitted && mobile1.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"mobile1.errors.required\">Mobile No 1 is required</mat-error>\n                        </mat-error>\n\n                        <mat-error *ngIf=\"f.submitted && mobile1.invalid\" class=\"invalid-feedback\">\n                            <mat-error>Mobile No 1 is invalid</mat-error>\n                        </mat-error>\n\n                      </div>\n                    </div>\n\n\n                    <div class=\"col s4 pr0\">\n                      <div class=\"control-field pr80\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Mobile No. 2\"  name=\"mobile2\" id=\"mobile2\" #mobile2=\"ngModel\" [(ngModel)]=\"contact_person.mobile2\" minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" [ngClass]=\"{'has-error' : mobile2.invalid }\">\n                        </mat-form-field>\n\n                        <mat-error *ngIf=\"f.submitted && mobile2.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"mobile2.errors.required\">Mobile No 2 is required</mat-error>\n                        </mat-error>\n\n                        <mat-error *ngIf=\"mobile2.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"mobile2.errors.minlength || mobile2.errors.maxlength\">Mobile No 2 is invalid</mat-error>\n                        </mat-error>\n\n\n\n                        <div class=\"plus-btn\" style=\"top: 14px;\">\n                          <button [disabled]=\"!contact_person.name || !contact_person.mobile1 || contact_person.mobile1==null\" mat-raised-button color=\"accent\">\n                            <i class=\"material-icons\" >add</i>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <div class=\"row mt15\" *ngIf=\"tmp_list!=''\">\n                <div class=\"col s12 padding0\">\n                  <div class=\"cs-table left-right-20\">\n                    <div class=\"table-head\">\n                      <table>\n                        <tr>\n                          <th>Name</th>\n                          <th class=\"w200\">Mobile No. 1</th>\n                          <th class=\"w200 bdr0\">Mobile No. 2</th>\n                          <th class=\"w130\">&nbsp;</th>\n                        </tr>\n                      </table>\n                    </div>\n                    <div class=\"table-container\">\n                      <div class=\"table-content none-shadow\">\n                        <table>\n                          <tr *ngFor=\"let value of tmp_list;let index=index\">\n                            <td>{{value.name}}</td>\n                            <td class=\"w200\">{{value.mobile1}}</td>\n                            <td class=\"w200\">{{value.mobile2}}</td>\n                            <td class=\"w130\">\n                              <a mat-button class=\"del-btn\" (click)=\"removeContact(index)\">Delete</a>\n                            </td>\n                          </tr>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n            </div>\n            \n            <div class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>ADDRESS INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n\n                <div class=\"row\">\n                  <div class=\"col s6 pl0\">\n                      <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <textarea matInput placeholder=\"Street\" name=\"street\" id=\"street\" [(ngModel)]=\"data.street\"  #street=\"ngModel\" class=\"h165\"></textarea>\n                          </mat-form-field>\n                          <!-- <mat-error *ngIf=\"f.submitted && street.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"street.errors.required\">Street is required</mat-error>\n                          </mat-error> -->\n                        </div>\n                  </div>\n\n                  <div class=\"col s6 pr0\">\n                    <div class=\"row\">\n                      <div class=\"col s6\">\n                          <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <mat-select placeholder=\"Country\" name=\"country\" id=\"country\"#country=\"ngModel\" [(ngModel)]=\"data.country\" required>\n                                  <mat-option value=\"India\" >India</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                              <mat-error *ngIf=\"f.submitted && country.invalid\" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"country.errors.required\">Country is required</mat-error>\n                              </mat-error>\n                            </div>\n                      </div>\n\n                      <div class=\"col s6 pr0\">\n                          <div class=\"control-field \" [ngClass]=\"{'has-error' : state.invalid } \" >\n                              <mat-form-field class=\"example-full-width cs-input infix-bodr8 select-input\">\n                                <input matInput placeholder=\"State\" (keyup.enter)=\"get_district()\" [matAutocomplete]=\"state\" (input)=\"state_array_filter(data.state)\" name=\"state\" id=\"state\" #state=\"ngModel\" [(ngModel)]=\"data.state\" required>\n                                <mat-autocomplete #state=\"matAutocomplete\">\n                                  <mat-option (click)=\"get_district()\"  *ngFor='let state of tmpstateList' value=\"{{state}}\">\n                                    <small>{{state}}</small>\n                                  </mat-option>\n                                </mat-autocomplete>\n                              </mat-form-field>\n                            </div>\n                            <mat-error *ngIf=\"f.submitted && state.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"state.errors.required\">State is required</mat-error>\n                            </mat-error>\n                      </div>\n                    </div>\n\n                    <div class=\"row\">\n                      <div class=\"col s6\">\n                          <div class=\"control-field \" [ngClass]=\"{'has-error' : district.invalid } \" >\n                              <mat-form-field class=\"example-full-width cs-input infix-bodr8 select-input\">\n                                <input matInput placeholder=\"District\" (keyup.enter)=\"get_city()\" [matAutocomplete]=\"district\" (input)=\"district_array_filter(data.district)\" name=\"district\" id=\"district\" #district=\"ngModel\" [(ngModel)]=\"data.district\" required>\n                                <mat-autocomplete #district=\"matAutocomplete\">\n                                  <mat-option  (click)=\"get_city()\"  *ngFor='let district of districtlist' value=\"{{district.districtName}}\">\n                                    <small>{{district.districtName}}</small>\n                                  </mat-option>\n                                </mat-autocomplete>\n                              </mat-form-field>\n                            </div>\n                            <mat-error *ngIf=\"f.submitted && district.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"district.errors.required\"> District is required</mat-error>\n                            </mat-error>\n                      </div>\n\n                      <div class=\"col s6 pr0\">\n                          <div class=\"control-field \" [ngClass]=\"{'has-error' : city.invalid } \" >\n                              <mat-form-field class=\"example-full-width cs-input infix-bodr8 select-input\">\n                                <input matInput placeholder=\"City\" (keyup.enter)=\"get_pincode(city.stateMasterId)\" [matAutocomplete]=\"city\" (input)=\"city_array_filter(data.city)\" name=\"city\" id=\"city\"#city=\"ngModel\" [(ngModel)]=\"data.city\" required>\n                                <mat-autocomplete #city=\"matAutocomplete\">\n                                  <mat-option  (click)=\" get_pincode(city.stateMasterId)\" *ngFor='let city of citylist' value=\"{{city.cityName}}\">\n                                    <small>{{city.cityName}}</small>\n                                  </mat-option>\n                                </mat-autocomplete>\n                              </mat-form-field>\n                            </div>\n                            <mat-error *ngIf=\"f.submitted && city.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"city.errors.required\"> City is required</mat-error>\n                            </mat-error>\n                      </div>\n                    </div>\n\n                    <div class=\"row\">\n                      <div class=\"col s12 pr0\" >\n                          <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : pin.invalid } \" >\n                              <mat-form-field class=\"example-full-width cs-input infix-bodr8 select-input\">\n                                <input matInput placeholder=\"Pin\" (keyup.enter)=\"get_sales(data.pin)\" [matAutocomplete]=\"pin\" (input)=\"pin_array_filter(data.pin)\" name=\"pin\" id=\"pin\" #pin=\"ngModel\" [(ngModel)]=\"data.pin\" required>\n                                <mat-autocomplete #pin=\"matAutocomplete\">\n                                  <mat-option  *ngFor='let pin of areas' value=\"{{pin}}\">\n                                    <small>{{pin}}</small>\n                                  </mat-option>\n                                </mat-autocomplete>\n                              </mat-form-field>\n                            </div>\n                            <mat-error *ngIf=\"f.submitted && pin.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"pin.errors.required\"> Pincode is required</mat-error>\n                            </mat-error>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n              \n\n            <div class=\"sprate-box pt0 mt15\" *ngIf=\"data.pin\">\n              <div class=\"cs-heading\" >\n                <h2>SEGMENT INFORMATION</h2>\n              </div>\n              <div class=\"col s6 mt15 pl0\">\n                <div class=\"territory-info\">\n                  <!-- <div class=\"head\" >\n                    <h2>SEGMENT</h2>\n                  </div> -->\n                  <div class=\"cs-checkbox\">\n                    <div class=\"checkbox-outer\">\n                      <section class=\"checkbox-inner\"  id=\"segment\">\n                        <ng-container  *ngFor=\"let list of segmentlist;let index=index\" aria-required=\"true\">\n                            <mat-checkbox class=\"check-list\" (change)=\"select_segment(list.value,index,$event)\" value=\"{{list.value}}\">{{list.value}}</mat-checkbox>\n                        </ng-container>\n                      </section>\n\n                      <mat-error class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"!isSegmentSelected\">No Segment Selected!</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"from-fields\" *ngIf=\"userRole==1 && data.pin!='' && segment !=''\">\n                <div class=\"col s6 pr0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select placeholder=\"Territory\" name=\"tid\" id=\"tid\" #tid=\"ngModel\" [(ngModel)]=\"data.tid\">\n                        <mat-option (click)=\"get_salesuserdata(territoryId.territoryID)\" *ngFor='let territoryId of territoryId' value=\"{{territoryId.territoryID}}\">{{territoryId.territoryName}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n\n\n                    <mat-error class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"!territoryId || territoryId.length=='0'\">\n                                No Data Found!\n                               </mat-error>\n                       </mat-error>\n\n\n                  </div>\n                </div>\n                <div *ngIf=\"data.tid\" class=\"row\" >\n                  <div class=\"col s6 control-field pr0\" *ngIf=\"userRole==1\" >\n                    <mat-form-field class=\"cs-input\">\n                      <mat-select placeholder=\"Select SalesUser\" name=\"assignTo\" id=\"assignTo\" #assignTo = \"ngModel\" [(ngModel)]=\"data.assignTo\">\n                        <span *ngFor='let sales of territoryList' >\n                          <mat-option value=\"{{sales.userId}}\" selected>{{sales.userName}}</mat-option>\n                        </span>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"!territoryList || territoryList.length=='0'\">No Data Found!</mat-error>\n                            </mat-error>\n                  </div>\n\n                  <div class=\"row\" *ngIf=\"data.tid && data.assignTo\">\n                      <div class=\"col s6 mt15 \">\n                        <div>\n                          <div class=\"in-btn text-right\">\n                            <button mat-raised-button color=\"accent\" (click)=\"cleardata()\" >Remove Sales User</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                </div>\n\n            \n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"cs-btn fixedd mt32 text-right\">\n              <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\" (click)=\"setFocus(f.form, p.form)\" >Save</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<div class=\"h50\"></div>\n"

/***/ }),

/***/ "./src/app/lead/add-lead/add-lead.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/lead/add-lead/add-lead.component.ts ***!
  \*****************************************************/
/*! exports provided: AddLeadComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadComponent", function() { return AddLeadComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");









var AddLeadComponent = /** @class */ (function () {
    function AddLeadComponent(service, route, msg, platformId, toast) {
        this.service = service;
        this.route = route;
        this.msg = msg;
        this.platformId = platformId;
        this.toast = toast;
        this.staffSegments = [];
        this.data = {};
        this.contact_person = {};
        this.contectpersondata = [];
        this.statelist = [];
        this.districtlist = [];
        this.citylist = [];
        this.areas = [];
        this.segmentlist = [];
        this.saleslist = [];
        this.client1 = [];
        this.loader = false;
        this.user = {};
        this.tmp_list = [];
        this.isSegmentSelected = false;
        this.active = {};
        this.territoryList = [];
        this.tmpstateList = [];
        this.tmpdistrictList = [];
        this.tmpcityList = [];
        this.tmpPinList = [];
        this.segment = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.get_state();
        this.segmentList();
        this.rolelist();
    }
    AddLeadComponent.prototype.ngOnInit = function () {
        this.data.country = 'India';
        // this.data.leadType=12;
    };
    AddLeadComponent.prototype.rolelist = function () {
        var _this = this;
        this.service.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var clientIndex = _this.rolelists.findIndex(function (x) { return x.userTypeId == 3; });
            _this.client1 = _this.rolelists[clientIndex]['roles'];
            _this.data.leadType = 12;
            console.log(_this.client1);
        });
    };
    AddLeadComponent.prototype.setFocus = function (form, contactForm) {
        console.log(form.controls);
        console.log(contactForm);
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_8__["isPlatformBrowser"])(this.platformId)) {
                        console.log(key);
                        jquery__WEBPACK_IMPORTED_MODULE_7__('#' + key).focus();
                        jquery__WEBPACK_IMPORTED_MODULE_7__(window).scrollTop(0);
                    }
                    console.log(key);
                    return true;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
        for (var key in contactForm.controls) {
            if (contactForm.controls.hasOwnProperty(key)) {
                if (contactForm.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_8__["isPlatformBrowser"])(this.platformId)) {
                        console.log(key);
                        jquery__WEBPACK_IMPORTED_MODULE_7__('#' + key).focus();
                        jquery__WEBPACK_IMPORTED_MODULE_7__(window).scrollTop(0);
                    }
                    console.log(key);
                    return true;
                }
                console.log(key + " -> " + contactForm.controls[key].status);
            }
        }
    };
    AddLeadComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    AddLeadComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    AddLeadComponent.prototype.namecheck = function (event) {
        var pattern = /[A-Z\+\a-z\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    AddLeadComponent.prototype.get_sales = function (pin) {
        var _this = this;
        this.loader = true;
        this.saleslist = [];
        console.log(pin);
        console.log('hello');
        if (pin && this.segment) {
            this.service.fetchData({ 'pinCode': pin, 'segments': this.segment }, '/territory/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.territoryId = response['data'];
                    _this.loader = false;
                    console.log(_this.territoryId);
                }
            });
        }
    };
    AddLeadComponent.prototype.get_salesuserdata = function (tid) {
        var _this = this;
        console.log(tid);
        this.service.fetchData({}, 'territory/salesusers?territoryIds=' + tid).subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.saleslist = response['data'];
                console.log(_this.saleslist);
                var role = _this.saleslist.filter(function (x) { return x.role == 10; });
                if (role.length != 0) {
                    console.log(role);
                    _this.territoryList = role;
                }
                else {
                    var role_1 = _this.saleslist.filter(function (x) { return x.role == 8; });
                    if (role_1.length != 0) {
                        console.log(role_1);
                        _this.territoryList = role_1;
                    }
                    else {
                        var role_2 = _this.saleslist.filter(function (x) { return x.role == 7; });
                        if (role_2.length != 0) {
                            console.log(role_2);
                            _this.territoryList = role_2;
                        }
                        else {
                            var role_3 = _this.saleslist.filter(function (x) { return x.role == 6; });
                            if (role_3.length != 0) {
                                console.log(role_3);
                                _this.territoryList = role_3;
                            }
                        }
                    }
                }
            }
            console.log(_this.saleslist);
        });
    };
    AddLeadComponent.prototype.cleardata = function () {
        this.data.assignTo = '';
        this.data.tid = '';
    };
    AddLeadComponent.prototype.submitDetail = function (form) {
        var _this = this;
        for (var i = 0; i < this.segment.length; i++) {
            this.staffSegments.push({ "segmentCode": this.segment[i], "segment": this.segment[i] });
        }
        console.log(this.staffSegments);
        if (!this.staffSegments || this.staffSegments.length == 0) {
            this.isSegmentSelected = false;
            jquery__WEBPACK_IMPORTED_MODULE_7__('#segment').focus();
            return;
        }
        else {
            this.isSegmentSelected = true;
        }
        console.log(this.staffSegments);
        this.data.leadSegments = this.staffSegments;
        if (this.contact_person.name) {
            if (!this.contact_person.mobile2) {
                this.contact_person.mobile2 = '';
            }
            this.tmp_list.push(this.contact_person);
        }
        if (this.tmp_list && this.tmp_list.length > 0) {
            this.data.leadContacts = this.tmp_list;
        }
        else {
            this.data.leadContacts = [];
        }
        console.log("hello");
        console.log(this.data);
        // if(this.data.leadType >13) {
        //      this.data.email = '';
        // }
        var activitydata2 = JSON.parse(JSON.stringify(this.data));
        if (activitydata2['assignTo'] == '') {
            delete activitydata2['assignTo'];
            delete activitydata2['tid'];
        }
        console.log(activitydata2);
        this.loader = true;
        this.service.fetchData(activitydata2, "lead/add/").subscribe(function (result) {
            console.log(result);
            _this.staffSegments = [];
            if (result['message'] != "Lead created successfully") {
                // console.log("this. messages  is after result to be succe");
                _this.resmsg = result['message'];
                _this.msg.error(_this.resmsg);
                _this.contact_person = {};
            }
            else {
                // console.log("this. messages  is after result not to be succe");
                if (_this.userType == 2) {
                    _this.msg.leadSaveSuccess();
                    _this.data = {};
                    _this.tmp_list = [];
                    _this.contact_person = {};
                    // $('#mainForm').trigger('reset');
                    console.log(form);
                    form.resetForm();
                    setTimeout(function () {
                        _this.data.leadType = 12;
                    }, 2000);
                    console.log("change the page here");
                    _this.route.navigate(['/lead-list']);
                }
                else {
                    // console.log("this. messages  is after result not to be succe");
                    _this.toast.openSucess('Lead Saved successfully', '');
                    _this.route.navigate(['/lead-list']);
                }
            }
            _this.loader = false;
        });
    };
    AddLeadComponent.prototype.segmentList = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.segmentlist = response['data'];
            console.log(_this.segmentlist);
        });
    };
    AddLeadComponent.prototype.addContactPerson = function () {
        console.log("hello");
        if (!this.contact_person.mobile2) {
            this.contact_person.mobile2 = '';
        }
        this.tmp_list.push(this.contact_person);
        this.contact_person = {};
        console.log(this.tmp_list);
    };
    AddLeadComponent.prototype.removeContact = function (index) {
        this.tmp_list.splice(index, 1);
    };
    AddLeadComponent.prototype.get_state = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.statelist = response['data'];
            _this.tmpstateList = _this.statelist;
        });
    };
    AddLeadComponent.prototype.get_district = function () {
        var _this = this;
        this.loader = true;
        this.data.district = '';
        this.data.pin = '';
        this.data.city = '';
        var state_list = Array(this.data.state);
        this.service.fetchData(state_list, 'district/list/').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            _this.districtlist = response['data'][0]['distrcits'];
            _this.tmpdistrictList = _this.districtlist;
            console.log(_this.districtlist);
        });
    };
    AddLeadComponent.prototype.get_city = function () {
        var _this = this;
        this.loader = true;
        this.data.city = '';
        this.data.pin = '';
        this.service.fetchData(Array({ "stateName": this.data.state, "distrcits": Array({ "districtName": this.data.district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.citylist = response['data'][0]['distrcits'][0]['cities'];
            _this.tmpcityList = _this.citylist;
            console.log(_this.citylist);
        });
    };
    AddLeadComponent.prototype.get_pincode = function (stateMasterIds) {
        var _this = this;
        console.log(stateMasterIds);
        var cityarray = [];
        cityarray[0] = stateMasterIds;
        this.service.fetchData({ 'stateMasterIds': cityarray }, 'city/pincodes').subscribe(function (res) {
            console.log(res);
            _this.areas = res['data'][0]['pinCodes'];
        });
    };
    AddLeadComponent.prototype.select_segment = function (value, index, event) {
        if (event.checked) {
            this.segment.push(value);
            console.log(this.segment);
            this.get_sales(this.data.pin);
            this.isSegmentSelected = true;
        }
        else {
            console.log(index);
            console.log(this.segment[0]);
            for (var j = 0; j < this.segmentlist.length; j++) {
                if (this.segmentlist[index]['value'] == this.segment[j]) {
                    this.segment.splice(j, 1);
                }
            }
            console.log(this.segment);
        }
    };
    AddLeadComponent.prototype.state_array_filter = function (state) {
        this.tmpstateList = [];
        var value = state.toUpperCase();
        this.tmpstateList = [];
        for (var i = 0; i < this.statelist.length; i++) {
            if (this.statelist[i].toUpperCase().search(value) !== -1) {
                this.tmpstateList.push(this.statelist[i]);
            }
        }
        console.log(this.tmpstateList);
    };
    AddLeadComponent.prototype.district_array_filter = function (district) {
        this.districtlist = [];
        var value = district.toUpperCase();
        for (var i = 0; i < this.tmpdistrictList.length; i++) {
            if (this.tmpdistrictList[i]['districtName'].toUpperCase().search(value) !== -1) {
                this.districtlist.push(this.tmpdistrictList[i]);
            }
        }
    };
    AddLeadComponent.prototype.city_array_filter = function (city) {
        console.log(city);
        console.log(this.tmpcityList);
        this.citylist = [];
        var value = city.toUpperCase();
        for (var i = 0; i < this.tmpcityList.length; i++) {
            if (this.tmpcityList[i]['cityName'].toUpperCase().search(value) !== -1) {
                this.citylist.push(this.tmpcityList[i]);
            }
        }
    };
    AddLeadComponent.prototype.pin_array_filter = function (pin) {
        this.areas = [];
        console.log(this.tmpPinList);
        var value = pin;
        console.log(value);
        for (var i = 0; i < this.tmpPinList.length; i++) {
            if (this.tmpPinList[i].toString().search(value) !== -1) {
                this.areas.push(this.tmpPinList[i]);
            }
        }
    };
    AddLeadComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-lead',
            template: __webpack_require__(/*! ./add-lead.component.html */ "./src/app/lead/add-lead/add-lead.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"], Object, src_app_toast__WEBPACK_IMPORTED_MODULE_6__["SnackBarOverview"]])
    ], AddLeadComponent);
    return AddLeadComponent;
}());



/***/ }),

/***/ "./src/app/lead/lead-detail/lead-detail.component.html":
/*!*************************************************************!*\
  !*** ./src/app/lead/lead-detail/lead-detail.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/lead-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{lead.establishment}}</h2>\n        <p class=\"light\">{{lead.role_name}}</p>\n      </div>\n    </div>\n    <div class=\"multi-btn\">\n      <ul>\n        <!-- <li *ngIf=\"this.role==1 && lead.leadRole==12\">\n          <a (click)=\"convert()\" class=\"green-btn\" matRipple>CONVERT TO CUSTOMER</a>\n        </li> -->\n      </ul>\n    </div>\n  </div>\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info\">\n            <div class=\"basic-details\">\n              <div class=\"profile-info\">\n                <ul>\n\n                  <li  class=\"col s4\">\n                      <div class=\"cs-box\">\n                        <img src=\"assets/img/gst.svg\" class=\"fix-img\">\n                        <span>Mobile</span>\n                        <p>{{lead.mobile ? lead.mobile : '--'}}</p>\n                        <a *ngIf=\"role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('mobile')\"><i class=\"material-icons\">create</i></a>\n                      </div>\n                  </li>\n\n                  <li class=\"col s4\">\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/gmail.svg\" class=\"fix-img\">\n                      <span>Email</span>\n                      <p class=\"link-clr\">{{lead.email ? lead.email : '--'}}</p>\n                      <a  *ngIf=\"role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('email')\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n                  <li  class=\"col s4\">\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/phone.svg\" class=\"fix-img\">\n                      <span>Landline</span>\n                      <p>{{lead.landline ? lead.landline : '--'}}</p>\n                      <a class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('landline')\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n                  \n                </ul>\n\n                <ul class=\"mt15\">\n\n                    <li  class=\"col s4\">\n                        <div class=\"cs-box\">\n                          <img src=\"assets/img/gst.svg\" class=\"fix-img\">\n                          <span>GST Number</span>\n                          <p>{{lead.gst ? lead.gst : '--'}}</p>\n                          <a  class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('gst')\"><i class=\"material-icons\">create</i></a>\n                        </div>\n                    </li>\n                    \n                   \n                    <li  class=\"col s4\">\n                      <div class=\"cs-box\">\n                        <img src=\"assets/img/gst.svg\" class=\"fix-img\">\n                        <span>Source</span>\n                        <p>{{lead.gst ? lead.sourceName : '--'}}</p>\n                        <!-- <a  *ngIf=\"role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('gst')\"><i class=\"material-icons\">create</i></a> -->\n                      </div>\n                    </li>\n                    <li  class=\"col s4\" *ngIf=\"role==1\">\n                      <div class=\"cs-box\">\n                        <img src=\"assets/img/gst.svg\" class=\"fix-img\">\n                        <span>Assigned To</span>\n                        <p>{{lead.salesUserName ? lead.salesUserName : '--'}}</p>\n                        <!-- <a  *ngIf=\"role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('gst')\"><i class=\"material-icons\">create</i></a> -->\n                      </div>\n                    </li>\n                    \n                  </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"col s8\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>ADDRESS</h2>\n              </div>\n              <a mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\"  (click)=\"openEmail('address')\"><i class=\"material-icons\">edit</i></a>\n              <div class=\"nationality\">\n                <img src=\"assets/img/india.svg\" alt=\"\">\n                <p>India</p>\n              </div>\n              <div class=\"ds-from-fields\">\n                  <div class=\"cs-row\">\n                      <div class=\"static-info\">\n                        <p>address</p>\n                        <p>{{lead.street ? lead.street : '--'}}</p>\n                      </div>\n                    </div>\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>State</p>\n                    <p>{{lead.state}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>District</p>\n                    <p>{{lead.district}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>City</p>\n                    <p>{{lead.city}}</p>\n                  </div>\n                  <div class=\"static-info w100\" style=\"min-width: 100px;\">\n                    <p>Pincode</p>\n                    <p>{{lead.pin}}</p>\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n          <div class=\"sprate-box padding0 mt20\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>CONTACT PERSONS</h2>\n              </div>\n              <a  mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\" (click)=\"openEmail('contact')\"><i class=\"material-icons\">edit</i></a>\n              <div *ngIf=\"lead.leadContacts && lead.leadContacts.length>0\" class=\"cs-table\">\n                <div class=\"table-head\">\n                  <table>\n                    <tr>\n                      <th>Name</th>\n                      <th class=\"w150\">Mobile No 1</th>\n                      <th class=\"w150\">Mobile No 2</th>\n                    </tr>\n                  </table>\n                </div>\n                <div class=\"table-container\">\n                  <div class=\"table-content none-shadow\">\n                    <table>\n                      <tr *ngFor=\"let contact of lead.leadContacts\">\n                        <td>{{contact.name}}</td>\n                        <td class=\"w150\">{{contact.mobile1}}</td>\n                        <td class=\"w150\">{{contact.mobile2}}\n                          <!-- <div class=\"action-btns\">\n                            <a mat-button class=\"edit\"><i class=\"material-icons\">create</i> Edit</a>\n                            <button mat-button class=\"delete\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                          </div> -->\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \n          <div class=\"sprate-box padding0 mt20\">\n            <div class=\"top-heading\" *ngIf=\"lead.userTasks!=''\">\n              <h2>\n                Task History\n              </h2>\n            </div>\n            <div class=\"cs-table\" *ngIf=\"lead.userTasks!=''\">\n              <div class=\"table-head\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th class=\"w100\">Date</th>\n                    <!-- <th class=\"w180\">Created By</th> -->\n                    <th class=\"w180\">Sales User</th>\n                    <th>Description</th>\n                    <th class=\"w100 text-center\">Status</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content none-shadow\">\n                  <table class=\"sno-border\">\n                    <tr *ngFor=\" let data of lead.userTasks;let i=index\">\n                      <td class=\"w30\">{{i+1}}</td>\n                      <td class=\"w100\">{{data.createdOn |date:'d MMM y'}}</td>\n                      <!-- <td class=\"w180\">{{data.createdByName}}</td> -->\n                      <td class=\"w180\">{{data.userName}}</td>\n                      <td>{{data.remarks}}</td>\n\n                      \n                      <td *ngIf=\"data.taskStatusName == 'InProcess'\" class=\"w100  text-center\">InProcess</td>\n\n                      <td *ngIf=\"data.taskStatusName != 'InProcess'\" class=\"w100  text-center\">{{data.leadConverted ? 'Converted' : 'Not Converted'}}</td>\n                     \n                    </tr>\n                  </table>\n                </div>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n        \n        <div class=\"col s4 right-sticky\">\n\n\n          <div *ngIf=\"isSegmentEditClicked==false\" class=\"sprate-box padding0\">\n            <div class=\"top-heading\">\n              <h2>Segments</h2>\n              <a *ngIf=\"role==1\" (click)=\"isSegmentEditClicked = true;\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\"><i class=\"material-icons\">edit</i></a>\n            </div>\n            <div class=\"territory-info bodr0\">\n\n              <div *ngIf=\"lead.leadSegments?.length == 0\" class=\"not-data\">\n                <div  class=\"inner-data\">\n                  <p>No Data</p>\n                </div>\n              </div>\n\n              <div *ngIf=\"lead.leadSegments?.length > 0\" class=\"cs-checkbox\">\n                <div class=\"checkbox-outer\" >\n                  <section class=\"checkbox-inner bodr0\" >\n\n                    <mat-checkbox *ngFor=\"let list of lead.leadSegments\" class=\"check-list bg-none check-none check-none check-none check-none\">\n                      <div class=\"name-outer\">\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <div class=\"name-inner\">\n                              S\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"text-box\">\n                        <h2>{{list.segment}}</h2>\n                      </div>\n                    </mat-checkbox>\n\n                  </section>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div *ngIf=\"isSegmentEditClicked==true\" class=\"sprate-box padding0\">\n\n            <div class=\"top-heading\">\n              <h2>Segments</h2>\n            </div>\n\n            <div class=\"territory-info bodr0\">\n                <div class=\"cs-checkbox\">\n                  <div class=\"checkbox-outer auto-height-scroll\">\n                    <section class=\"checkbox-inner\" >\n                      <ng-container *ngFor='let segment of segmentlist;let i=index' aria-required=\"true\">\n                        <mat-checkbox class=\"check-list\" [(ngModel)]='segment.check'>{{segment.text}}</mat-checkbox>\n                      </ng-container>\n                    </section>\n                  </div>\n                </div>\n            </div>\n\n            <div class=\"row mt15\">\n                <div class=\"col s12\">\n                  <div class=\"cs-btn mb15 text-right\">\n                    <button (click)=\"isSegmentEditClicked=false\"  mat-raised-button color=\"warn\" class=\"mr15\" >Cancel</button>\n                    <button mat-raised-button color=\"accent\" (click)=\"updateSegment()\">Update</button>\n                  </div>\n                </div>\n            </div>\n\n          </div>\n\n        </div>\n\n\n      </div>\n    </div>\n  </div>\n  \n</div>\n\n<div class=\"h50\"></div>\n\n"

/***/ }),

/***/ "./src/app/lead/lead-detail/lead-detail.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/lead/lead-detail/lead-detail.component.ts ***!
  \***********************************************************/
/*! exports provided: LeadDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadDetailComponent", function() { return LeadDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var _update_lead_update_lead_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../update-lead/update-lead.component */ "./src/app/lead/update-lead/update-lead.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");










var LeadDetailComponent = /** @class */ (function () {
    function LeadDetailComponent(db, dialog1, toast, user, router, route, dialog) {
        this.db = db;
        this.dialog1 = dialog1;
        this.toast = toast;
        this.user = user;
        this.router = router;
        this.route = route;
        this.dialog = dialog;
        this.lead = {};
        this.salesUsersegment = [];
        this.segmentlist = [];
        this.salesUser = [];
        this.string = [];
        this.saleslist = [];
        this.call_logs = {};
        this.userdata = [];
        this.rolelists = [];
        this.rolelistlead = [];
        this.loader = false;
        this.assign = {};
        this.isSegmentEditClicked = false;
        this.territoryList = [];
    }
    LeadDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            console.log(_this.user);
            _this.userdata = _this.user['user']['data'];
            _this.role = _this.userdata['role'];
        });
        this.show_details();
    };
    LeadDetailComponent.prototype.show_details = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData(this.id, 'lead/detail/').subscribe(function (response) {
            console.log(response);
            _this.lead = response['data'];
            console.log(_this.lead);
            setTimeout(function () {
                _this.loader = false;
            }, 1000);
            _this.segment_list();
            _this.rolelist();
            // this.get_sales();
        });
        console.log(this.id);
    };
    LeadDetailComponent.prototype.get_sales = function () {
        var _this = this;
        console.log('hello');
        this.db.fileData(this.lead.pin, 'territorybypin/').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.territoryId = response['data'];
                console.log(_this.territoryId);
                var territoryIDs = [];
                for (var index = 0; index < _this.territoryId.length; index++) {
                    territoryIDs.push({ 'territoryIds': _this.territoryId[index].territoryId });
                }
                var territoryStr = '';
                for (var index = 0; index < territoryIDs.length; index++) {
                    if (index == 0) {
                        territoryStr += '?territoryIds=' + territoryIDs[index]['territoryIds'];
                    }
                    else {
                        territoryStr += '&territoryIds=' + territoryIDs[index]['territoryIds'];
                    }
                }
                console.log(territoryStr);
                _this.db.fetchData({}, 'territory/salesusers' + territoryStr).subscribe(function (response) {
                    console.log(response);
                    _this.saleslist = response['data'];
                    var role = _this.saleslist.filter(function (x) { return x.role == 10; });
                    if (role.length != 0) {
                        console.log(role);
                        _this.territoryList = role;
                    }
                    else {
                        var role_1 = _this.saleslist.filter(function (x) { return x.role == 8; });
                        if (role_1.length != 0) {
                            console.log(role_1);
                            _this.territoryList = role_1;
                        }
                        else {
                            var role_2 = _this.saleslist.filter(function (x) { return x.role == 7; });
                            if (role_2.length != 0) {
                                console.log(role_2);
                                _this.territoryList = role_2;
                            }
                            else {
                                var role_3 = _this.saleslist.filter(function (x) { return x.role == 6; });
                                if (role_3.length != 0) {
                                    console.log(role_3);
                                    _this.territoryList = role_3;
                                }
                            }
                        }
                    }
                    console.log(_this.territoryList);
                    for (var i = 0; i < _this.territoryList.length; i++) {
                        console.log(_this.lead.salesUserID);
                        console.log(_this.territoryList[i].userId);
                        if (_this.lead.salesUserID == _this.territoryList[i].userId) {
                            _this.assign.assignTo = _this.territoryList[i].userId;
                        }
                    }
                });
            }
        });
    };
    LeadDetailComponent.prototype.updateAssign = function () {
        var _this = this;
        console.log('hello');
        console.log(this.assign);
        this.loader = true;
        this.lead.assignTo = this.assign.assignTo;
        this.lead.leadAssignTo = this.assign.assignTo;
        this.db.fetchData(this.lead, 'lead/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "Lead Updated successfully") {
                _this.toast.openSucess('Updated successfully', '');
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
    };
    LeadDetailComponent.prototype.openEmail = function (check) {
        var _this = this;
        this.lead.type = check;
        console.log(check);
        console.log(this.lead);
        var dialogRef = this.dialog.open(_update_lead_update_lead_component__WEBPACK_IMPORTED_MODULE_6__["UpdateLeadComponent"], { width: '768px', data: this.lead });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.saleslist = [];
            _this.show_details();
        });
    };
    LeadDetailComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
            console.log(_this.lead);
            if (_this.lead.leadSegments && _this.lead.leadSegments.length > 0) {
                for (var i = 0; i < _this.segmentlist.length; i++) {
                    for (var j = 0; j < _this.lead.leadSegments.length; j++) {
                        if (_this.lead.leadSegments[j]['segmentCode'] == _this.segmentlist[i].value) {
                            _this.segmentlist[i].check = true;
                        }
                    }
                }
            }
        });
    };
    LeadDetailComponent.prototype.select_segments = function (value, index, event) {
        if (event.checked) {
            var isIndexExist = this.salesUsersegment.findIndex(function (row) { return row.segment == value; });
            if (isIndexExist == -1) {
                this.salesUsersegment.push({ 'leadId': this.id, 'segmentCode': value, 'segment': value });
            }
            console.log(this.salesUsersegment);
        }
        else {
            this.salesUsersegment.splice(index, 1);
            console.log(this.salesUsersegment);
        }
    };
    LeadDetailComponent.prototype.updateSegment = function () {
        var _this = this;
        this.loader = true;
        var segmentSelectedData = [];
        console.log(this.segmentlist);
        for (var index = 0; index < this.segmentlist.length; index++) {
            if (this.segmentlist[index].check) {
                segmentSelectedData.push({ 'leadId': this.id, 'segmentCode': this.segmentlist[index].value, 'segment': this.segmentlist[index].text });
            }
        }
        var segmentData = {};
        segmentData['leadId'] = this.lead.leadId;
        segmentData['leadSegments'] = segmentSelectedData;
        segmentData['leadContacts'] = this.lead['leadContacts'];
        console.log(segmentData);
        this.db.fetchData(segmentData, 'lead/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message) {
                _this.isSegmentEditClicked = false;
                _this.toast.openSucess('Segment Updated successfully', '');
                _this.show_details();
                // this.router.navigate(['/lead-detail/'+this.id]) ;
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
    };
    LeadDetailComponent.prototype.convert = function () {
        var _this = this;
        this.msg = "Lead";
        this.dialog1.convert(this.msg).then(function (result) {
            if (result) {
                _this.loader = true;
                _this.string.push(parseInt(_this.lead.leadId));
                console.log(_this.string);
                _this.db.fetchData({ "leadIds": _this.string }, 'lead/convert').subscribe(function (response) {
                    console.log(response);
                    setTimeout(function () {
                        _this.loader = false;
                    }, 300);
                    _this.message = response['message'];
                    if (_this.message == "Lead converted successfully") {
                        _this.toast.openSucess('Lead converted successfully', '');
                        if (_this.lead.leadRole == '11') {
                            console.log('hi');
                            _this.router.navigate(['/distribution-list/']);
                        }
                        else if (_this.lead.leadRole == '12') {
                            console.log('hii');
                            _this.router.navigate(['/distribution-list/']);
                        }
                        else if (_this.lead.leadRole == '13') {
                            console.log('hiii');
                            _this.router.navigate(['/retailer-list/']);
                        }
                        else if (_this.lead.leadRole == '14') {
                            console.log('hiiii');
                            _this.router.navigate(['/engine-list/']);
                        }
                        else {
                            console.log('hiiiii');
                            _this.router.navigate(['/mechanic-list/']);
                        }
                    }
                    else if (_this.message == "Email is not available") {
                        _this.toast.openError('Email Already Exist Please Enter Another Email', '');
                    }
                });
            }
        });
    };
    LeadDetailComponent.prototype.rolelist = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.rolelists = response['data'];
            var filterrolelead = _this.rolelists.filter(function (x) { return x.userTypeId == 3; });
            console.log(filterrolelead);
            _this.rolelistlead = filterrolelead[0].roles;
            console.log(_this.rolelistlead);
            console.log(_this.lead.leadType);
            var filterroleleaddetail = _this.rolelistlead.filter(function (x) { return x.roleId == _this.lead.leadType; });
            console.log(filterroleleaddetail);
            if (filterroleleaddetail.length > 0) {
                _this.lead.role_name = filterroleleaddetail[0].roleName;
                console.log(_this.lead.role_name);
            }
        });
    };
    LeadDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-lead-detail',
            template: __webpack_require__(/*! ./lead-detail.component.html */ "./src/app/lead/lead-detail/lead-detail.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_8__["DialogComponent"], src_app_toast__WEBPACK_IMPORTED_MODULE_9__["SnackBarOverview"], _local_storage_service__WEBPACK_IMPORTED_MODULE_5__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]])
    ], LeadDetailComponent);
    return LeadDetailComponent;
}());



/***/ }),

/***/ "./src/app/lead/lead-list/lead-list.component.html":
/*!*********************************************************!*\
  !*** ./src/app/lead/lead-list/lead-list.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <!-- <div class=\"middle-container padding0\">\n    <div class=\"master-heading h65\">\n      <div class=\"vl-info\">\n        <ul>\n          <li><p>Total Lead : <span *ngIf=\"leadlist\">{{leadlist.length}}</span><span *ngIf=\"!leadlist\">0</span></p></li>\n          <li *ngIf=\"userdata.role!=1\" class=\"af-none\">  \n            <div class=\"item-filter\" >\n              <mat-form-field class=\"wp100\">\n                <mat-select  name=\"role\" id=\"role\" [(ngModel)]=\"filter.assignedToMe\" #assignedToMe=\"ngModel\" >\n                  <mat-option *ngIf=\"userRole!=1\" [value]=\"true\" (click)=\"filter.assignedToMe=true;filter.createdbyme=false;leadList()\">Assigned To Me</mat-option>\n                  <mat-option  [value]=\"false\" (click)=\"filter.assignedToMe=false;filter.createdbyme=true; leadList()\">Created By Me</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </li>\n          <li *ngIf=\"userdata.userType==1\" class=\"af-none\">\n            <div class=\"item-filter\">\n              <mat-form-field class=\"wp100\">\n                <mat-select  name=\"role\" [(ngModel)]=\"datarole.role\" (ngModelChange)=\"leadList()\">\n                  <mat-option *ngFor=\"let role of client1\" (click)=\"rejected='false'\" [value]=\"role.roleId\">{{role.roleName}}</mat-option>\n                  <mat-option [value]=0>Other</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </li>\n          \n        </ul>\n      </div>\n    </div>\n  </div>\n-->\n\n<div class=\"middle-container pb15\">\n  <div class=\"page-heading\">\n    <img src=\"assets/img/task.svg\" class=\"h-icon\">\n    <div class=\"heading-text flex-heading\">\n      <div class=\"content\">\n        <h2>Lead</h2>\n        <p>Total <span *ngIf=\"leadlist\">{{leadlist.length}}</span><span *ngIf=\"!leadlist\">0</span></p>\n      </div>\n      <div class=\"item-filter\" *ngIf=\"userdata.role!=1\">\n        <mat-form-field class=\"wp100\">\n          <mat-select  name=\"role\" id=\"role\" [(ngModel)]=\"filter.assignedToMe\" #assignedToMe=\"ngModel\" >\n            <mat-option *ngIf=\"userRole!=1\" [value]=\"true\" (click)=\"filter.assignedToMe=true;filter.createdbyme=false;leadList()\">Assigned To Me</mat-option>\n            <mat-option  [value]=\"false\" (click)=\"filter.assignedToMe=false;filter.createdbyme=true; leadList()\">Created By Me</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      \n      <div class=\"item-filter\" *ngIf=\"userdata.userType==1\">\n        <mat-form-field class=\"wp100\">\n          <mat-select  name=\"role\" [(ngModel)]=\"datarole.role\" (ngModelChange)=\"leadList()\">\n            <mat-option *ngFor=\"let role of client1\" (click)=\"rejected='false'\" [value]=\"role.roleId\">{{role.roleName}}</mat-option>\n            <mat-option [value]=0>Other</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div class=\"left-auto dflex\">\n    <div  class=\"filter-container ml15\" *ngIf=\"filter.establishment || filter.mobile || filter.state\">\n      <div (click)=\"clearfilter()\" class=\"filter-btn\">\n        <button mat-button >CLEAR FILTER</button>\n      </div>\n    </div>\n    \n    <div class=\"tabs right-tab none-af\">\n      <ul *ngIf=\"datarole.role==12 && userdata.role==1\">\n        <li><a class=\"pending\"  [ngClass]= \"{'tab-active' : filter.status==1}\" (click)=\"filter.status=1;leadList()\">PENDING</a></li>\n        <li><a class=\"assign\" [ngClass]= \"{'tab-active' : filter.status==2}\" (click)=\"filter.status=2;leadList()\">ASSIGNED</a></li>\n        <li><a class=\"reject\" [ngClass]= \"{'tab-active' : filter.status==4}\" (click)=\"filter.status=4;leadList()\">REJECTED</a></li>\n      </ul>\n    </div>\n  </div>\n  \n</div>\n<div class=\"container-outer pt0\">\n  <div class=\"container\" >\n    \n    <div class=\"row\">\n      <div class=\"cs-table left-right-20\">\n        <div class=\"sticky-head\">\n          <div class=\"table-head\">\n            <table class=\"sno-border\"> \n              <tr>\n                <th class=\"w30\">&nbsp;</th>\n                <th class=\"w100\" *ngIf=\"datarole.role!=0\"> Date</th>\n                <th class=\"w130\" *ngIf=\"datarole.role!=0\">Created By</th>\n                <th class=\"w200\">Lead Name</th>\n                <th class=\"w120\">Mobile</th>\n                <th class=\"w150\" *ngIf=\"datarole.role!=0 && datarole.role!=14 && datarole.role!=15\">Contact Person</th>\n                <th class=\"w150\"  *ngIf=\"datarole.role!=0 && filter.status==2\">Assigned To</th>\n                <th class=\"w150\" *ngIf=\"datarole.role==0\">Email</th>\n                <th *ngIf=\"datarole.role!=0\">Address</th>\n                <th *ngIf=\"datarole.role==0\">Pincode</th>\n                <!-- <th class=\"w100\" *ngIf=\"filter.createdbyme==true\">Status</th> -->\n              </tr>\n            </table>\n          </div>\n          <div class=\"table-head bdrt\">\n            <form>\n              <table class=\"sno-border\">\n                <tr>\n                  <th class=\"w30\">&nbsp;</th>\n                  <th  class=\"w100\" *ngIf=\"datarole.role!=0\">&nbsp;</th>\n                  <th class=\"w130\" *ngIf=\"datarole.role!=0\">&nbsp;</th> \n                  <th class=\"w200\">\n                    <div class=\"th-search\">\n                      <input type=\"text\" (keyup)=\"leadList()\" name=\"establishment\" #establishment=\"ngModel\" [(ngModel)]=\"filter.establishment\" placeholder=\"Search....\">\n                    </div>\n                  </th>\n                  <th class=\"w120\">\n                    <div class=\"th-search\">\n                      <input type=\"text\" (keyup)=\"leadList()\" name=\"mobile\" #mobile=\"ngModel\" [(ngModel)]=\"filter.mobile\" placeholder=\"Search....\">\n                    </div>\n                  </th>\n                  <th class=\"w150\" *ngIf=\"datarole.role!=0 && datarole.role!=14 && datarole.role!=15\">&nbsp;</th>\n                  <th class=\"w150\" *ngIf=\"datarole.role!=0 && filter.status==2\">&nbsp;</th> \n                  <th>\n                    <div class=\"th-search\" *ngIf=\"datarole.role!=0\">\n                      <mat-select placeholder=\"Select State\" id=\"state\" name=\"state\" [(ngModel)]=\"filter.state\" #state=\"ngModel\">\n                        <mat-option value=\"\" (click)=\"leadList()\" >All</mat-option>\n                        <mat-option value=\"{{stat}}\" (click)=\"leadList()\" *ngFor='let stat of statelist'>{{stat}}</mat-option>\n                      </mat-select>\n                    </div>\n                  </th>\n                  <th *ngIf=\"role==1\">\n                    <div class=\"th-search\"  *ngIf=\"datarole.role!=0\">\n                      <mat-select placeholder=\"Select State\" id=\"state\" name=\"state\" [(ngModel)]=\"filter.state\" #state=\"ngModel\">\n                        <mat-option value=\"\" (click)=\"leadList()\" >All</mat-option>\n                        <mat-option value=\"{{stat}}\" (click)=\"leadList()\" *ngFor='let stat of statelist'>{{stat}}</mat-option>\n                      </mat-select>\n                    </div>\n                  </th>\n                  <!-- <th class=\"w100\"> -->\n                    <!-- <div class=\"th-search\" *ngIf=\"datarole.role==12\">\n                      <mat-select placeholder=\"Select\" id=\"status\" name=\"status\" [(ngModel)]=\"filter.status\" #status=\"ngModel\">\n                        <mat-option value=\"1\" (click)=\"leadList()\">Pending</mat-option>\n                        <mat-option value=\"2\" (click)=\"leadList()\">Assigned</mat-option>\n                        <mat-option value=\"4\" (click)=\"leadList()\">Rejected</mat-option>\n                      </mat-select>\n                    </div> -->\n                    <!-- </th> -->\n                    <!-- <th *ngIf=\"filter.createdbyme==true\" class=\"w100\">&nbsp;</th> -->\n                  </tr>\n                </table>\n              </form>\n            </div>\n          </div>\n          \n          \n          <div class=\"table-container\">\n            <div class=\"table-content\">\n              <table class=\"sno-border\">\n                <tr *ngFor=\"let lead of leadlist; let i = index\" [ngClass]=\"{'download':lead.isRead==true}\">\n                  <td class=\"w30\">{{i+1}}</td>\n                  <td class=\"w100\" *ngIf=\"datarole.role!=0\">{{lead.createdOn |date:'d MMM y'}}</td>\n                  <td class=\"w130\" *ngIf=\"datarole.role!=0\">{{lead.createdByName}}</td>\n                  <td class=\"w200\"  ><a (click)=\"isLeadRead(lead.leadId)\" class=\"link-btn\" routerLink=\"/lead-detail/{{lead.leadId}}\" routerLinkActive=\"active\">{{lead.establishment}}</a></td>\n                  <td class=\"w120\">{{lead.mobile}}</td>\n                  <td class=\"w150\" *ngIf=\"datarole.role!=0 && datarole.role!=14 && datarole.role!=15\"><span *ngIf=\"lead.leadContacts.length\">{{lead.leadContacts[0].name}}</span></td>\n                  <td class=\"w150\" *ngIf=\"datarole.role!=0 && filter.status==2\">{{lead.salesUserName}}</td>\n                  <td class=\"w150\" *ngIf=\"datarole.role==0\"><span >{{lead.email}}</span></td>\n                  <td>\n                    <span *ngIf=\"datarole.role!=0\">{{lead.street}},{{lead.district}},{{lead.state}},{{lead.pin}}</span>\n                    <span *ngIf=\"datarole.role==0\">{{lead.pin}}</span>\n                    <div class=\"action-btns\">\n                      <a mat-button class=\"view\" *ngIf=\"filter.status!=2 && datarole.role==12 && userdata.role==1\"  routerLink=\"/assigntask/{{lead.leadId}}\" routerLinkActive=\"active\"><i class=\"material-icons\">assignment_turned_in</i>Assign Task </a>\n                      <a mat-button class=\"view\" *ngIf=\"datarole.role==0\" (click)=\"openEmail('changelead',lead.leadId)\" routerLinkActive=\"active\"><i class=\"material-icons\">assignment_turned_in</i>Change Lead Type </a>\n                      <a mat-button class=\"view\" *ngIf=\"lead.leadType!=12 && datarole.role!=0 \" routerLinkActive=\"active\"><i class=\"material-icons\">assignment_turned_in</i>Convert To Distributor</a>\n                      <a mat-button class=\"view\" *ngIf=\"datarole.role!=0\" routerLink=\"/lead-detail/{{lead.leadId}}\" routerLinkActive=\"active\"><i class=\"material-icons\">remove_red_eye</i>View</a>\n                      <!-- <button mat-button *ngIf=\"userdata.role==1 && userdata.superAdmin\" (click)=\"delete_lead(lead.leadId)\" class=\"delete\"><i class=\"material-icons\">delete_sweep</i> Delete</button> -->\n                    </div>\n                  </td>\n                  <!-- <td *ngIf=\"filter.createdbyme==true\" [ngClass]=\"{'pending' : lead.status==1,'approved' : lead.status==3,'assign' : lead.status==2,'reject' : lead.status==4 } \" class=\"w100\">\n                    <span *ngIf=\"lead.status==1\">Pending</span>\n                    <span *ngIf=\"lead.status==2\">Assigned</span>\n                    <span *ngIf=\"lead.status==3\">Converted</span>\n                    <span *ngIf=\"lead.status==4\">Rejected</span>\n                    <div class=\"action-btns\">\n                      <a mat-button class=\"view\" *ngIf=\"filter.status!=2 && datarole.role==12\"  routerLink=\"/assigntask/{{lead.leadId}}\" routerLinkActive=\"active\"><i class=\"material-icons\">assignment_turned_in</i>Assign Task </a>\n                      \n                      <a mat-button class=\"view\" *ngIf=\"datarole.role==0\" (click)=\"openEmail('changelead',lead.leadId)\" routerLinkActive=\"active\"><i class=\"material-icons\">assignment_turned_in</i>Change Lead Type </a>\n                      \n                      <button mat-button *ngIf=\"userdata.role==1 && userdata.superAdmin\" (click)=\"delete_lead(lead.leadId)\" class=\"delete\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                    </div>\n                  </td> -->\n                </tr>\n              </table>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n      \n    </div>\n    <div *ngIf=\"div\" class=\"data-not-available\" >\n      <div class=\"outer\">\n        <div class=\"iinear\">\n          <div class=\"figure\" matRipple>\n            <div class=\"header\">\n              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n            </div>\n            <div class=\"description\">\n              \n              <div class=\"img\">\n                <i class=\"material-icons\">error_outline</i>\n              </div>\n              \n              <div class=\"cs-heading\">\n                <h2>Data Not Available</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" matRipple><i class=\"material-icons\" routerLink=\"/add-lead\" routerLinkActive=\"active\" >add</i></a></li>\n    </ul>\n  </div>\n</div>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/lead/lead-list/lead-list.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/lead/lead-list/lead-list.component.ts ***!
  \*******************************************************/
/*! exports provided: LeadListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadListComponent", function() { return LeadListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _update_lead_update_lead_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../update-lead/update-lead.component */ "./src/app/lead/update-lead/update-lead.component.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");










var LeadListComponent = /** @class */ (function () {
    function LeadListComponent(dialog1, db, router, user, route, toast, dialog, dia) {
        this.dialog1 = dialog1;
        this.db = db;
        this.router = router;
        this.user = user;
        this.route = route;
        this.toast = toast;
        this.dialog = dialog;
        this.dia = dia;
        this.leadlist = [];
        this.lead = {};
        this.contact = [];
        this.msg = [];
        this.string = [];
        this.filter = {};
        this.message = [];
        this.datarole = {};
        this.statelist = [];
        this.loader = false;
        this.rejected = false;
        this.userdata = [];
        this.client1 = [];
        this.div = false;
        this.userdata = this.user['user']['data'];
        console.log(this.userdata.role);
        console.log("avlok role check");
        if (this.userdata.role == 1) {
            this.filter.status = 1;
        }
        else {
            this.filter.status = 2;
        }
        console.log(this.filter.status);
        this.filter.assignedToMe = true;
    }
    LeadListComponent.prototype.ngOnInit = function () {
        var _this = this;
        // this.filter.status=1;
        setTimeout(function () {
            _this.leadList();
            _this.rolelist();
            _this.get_state();
        }, 500);
        this.string = [];
    };
    LeadListComponent.prototype.get_state = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.statelist = response['data'];
            // this.shippingState=response['data'];
        });
    };
    LeadListComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var cllient = _this.rolelists.filter(function (x) { return x.userTypeId == 3; });
            _this.client1 = cllient[0].roles;
            console.log(_this.client1);
        });
    };
    LeadListComponent.prototype.convert = function () {
        var _this = this;
        console.log("avlok");
        this.loader = true;
        this.msg = "Lead";
        this.dialog1.convert(this.msg).then(function (result) {
            if (result) {
                for (var j = 0; j < _this.leadlist.length; j++) {
                    _this.string.push(_this.leadlist[j].leadId);
                }
                console.log(_this.string);
                _this.db.fetchData({ "leadIds": _this.string }, 'lead/convert').subscribe(function (response) {
                    console.log(response);
                    // this.loader=false;
                    _this.string = [];
                    _this.message = response['message'];
                    if (response['status'] == 'Success') {
                        _this.toast.openSucess('Lead converted successfully', '');
                        console.log(_this.datarole.role);
                        if (_this.datarole.role == 11) {
                            _this.router.navigate(['/wholesaler-list/']);
                        }
                        else if (_this.datarole.role == 12) {
                            _this.router.navigate(['/distribution-list/']);
                        }
                        else if (_this.datarole.role == 13) {
                            _this.router.navigate(['/retailer-list/']);
                        }
                        else if (_this.datarole.role == 14) {
                            _this.router.navigate(['/engine-list/']);
                        }
                        else {
                            _this.router.navigate(['/mechanic-list/']);
                        }
                    }
                    else if (response['status'] == 'Failed') {
                        //  this.toast.openError(response['message'],'');
                        _this.dialog.alertWarning("Email or Mobile No is Already Exist");
                    }
                });
            }
        });
        this.loader = false;
    };
    LeadListComponent.prototype.leadList = function () {
        var _this = this;
        this.leadlist = [];
        this.div = false;
        this.loader = true;
        console.log(this.datarole.role);
        if (!this.datarole.role && this.datarole.role != 0) {
            this.datarole.role = 12;
            console.log(this.datarole.role);
        }
        console.log(this.filter.status);
        console.log(this.filter);
        // if(!this.filter || !this.filter.status) {
        //     this.filter.status = 1;
        // }
        if (this.userdata['userType'] != 1) {
            setTimeout(function () {
                console.log(_this.datarole.role);
                if (_this.filter.createdbyme == true) {
                    _this.senddata = { 'createdBy': _this.userdata['userId'], 'filterOnAssignTo': false, 'establishment': _this.filter.establishment, 'mobile': _this.filter.mobile, "currentPage": 1, 'state': _this.filter.state, "pageSize": 500 };
                }
                else {
                    _this.senddata = { 'userId': _this.userdata['userId'], 'establishment': _this.filter.establishment, 'mobile': _this.filter.mobile, "currentPage": 1, 'state': _this.filter.state, 'status': _this.filter.status, "pageSize": 500, 'leadType': _this.datarole.role, 'rejected': _this.rejected, 'filterOnAssignTo': true, 'isActive': 1 };
                }
                _this.db.fetchData(_this.senddata, 'lead/list').subscribe(function (response) {
                    console.log(response);
                    _this.loader = false;
                    if (response['status'] == 'Success') {
                        _this.leadlist = response['data'];
                        console.log(_this.leadlist);
                    }
                    if (response['status'] == 'Failed') {
                        _this.div = true;
                    }
                });
            }, 500);
        }
        else {
            setTimeout(function () {
                console.log(_this.filter.status);
                if (_this.filter.status == 4) {
                    _this.rejected = true;
                }
                _this.senddata = { 'establishment': _this.filter.establishment, 'mobile': _this.filter.mobile, "currentPage": 1, "pageSize": 500, 'state': _this.filter.state, 'status': _this.filter.status, 'leadType': _this.datarole.role, 'rejected': _this.rejected, 'isActive': 1 };
                _this.db.fetchData(_this.senddata, 'lead/list').subscribe(function (response) {
                    console.log(response);
                    _this.loader = false;
                    if (response['status'] == 'Success') {
                        _this.leadlist = response['data'];
                        console.log(_this.leadlist);
                    }
                    if (response['status'] == 'Failed') {
                        _this.div = true;
                    }
                });
            }, 500);
        }
    };
    LeadListComponent.prototype.clearfilter = function () {
        this.filter.establishment = '';
        this.filter.mobile = '';
        this.filter.state = '';
        this.leadList();
    };
    LeadListComponent.prototype.delete_lead = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "Lead";
        this.dialog.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fileData(id, 'lead/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message = "Lead removed successfully") {
                        _this.toast.openSucess('Lead removed successfully', '');
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    _this.leadList();
                });
            }
        });
    };
    LeadListComponent.prototype.openEmail = function (check, leadid) {
        var _this = this;
        this.lead.type = check;
        this.lead.leadId = leadid;
        console.log(this.lead);
        var dialogRef = this.dia.open(_update_lead_update_lead_component__WEBPACK_IMPORTED_MODULE_8__["UpdateLeadComponent"], { data: this.lead });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.leadList();
        });
        this.leadList();
    };
    LeadListComponent.prototype.isLeadRead = function (leadId) {
        var _this = this;
        if (this.userdata['userType'] == 1) {
            this.db.fileData("", "lead/read/" + leadId).subscribe(function (result) {
                console.log(result);
                if (result['status'] == 'Success') {
                    _this.leadList();
                }
            });
        }
    };
    LeadListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-lead-list',
            template: __webpack_require__(/*! ./lead-list.component.html */ "./src/app/lead/lead-list/lead-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _local_storage_service__WEBPACK_IMPORTED_MODULE_9__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"], _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]])
    ], LeadListComponent);
    return LeadListComponent;
}());



/***/ }),

/***/ "./src/app/lead/update-lead/update-lead.component.html":
/*!*************************************************************!*\
  !*** ./src/app/lead/update-lead/update-lead.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n  <form name=\"form\" (ngSubmit)=\"f.form.valid && updateassign()\"  #f=\"ngForm\" novalidate>\n    <div *ngIf=\"loader\"> \n      <div class=\"cs-loader\">\n        <img src=\"assets/img/loader.png\" class=\"rotate\"> \n      </div>\n    </div>\n    <div  *ngIf=\"data.type=='address'\" mat-dialog-content>\n      <p class=\"heading\">Update Address</p>\n      <div class=\"from-fields\">\n          <div class=\"row\">\n              <div class=\"col s6 pl0\">\n                <div class=\"control-field\">\n                  <mat-form-field class=\"cs-input\">\n                    <mat-select placeholder=\"State\" name=\"state\" [(ngModel)]=\"data.state\" >\n                      <mat-option (click)=\"get_district()\"  *ngFor=\"let state of statelist\" value=\"{{state}}\">{{state}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"col s6 pr0\">\n                <div class=\"control-field\">\n                  <mat-form-field class=\"cs-input\">\n                    <mat-select placeholder=\"District\"   name=\"district\" [(ngModel)]=\"data.district\" >\n                      <mat-option (click)=\"get_city()\"  *ngFor=\"let district of district1\"  value=\"{{district.districtName}}\">{{district.districtName}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col s6 pl0\">\n                <div class=\"control-field\">\n                  <mat-form-field class=\"cs-input\">\n                    <mat-select placeholder=\"City\"  name=\"city\" [(ngModel)]=\"data.city\" >\n                      <mat-option   *ngFor=\"let city of cities\"  (click)=\" stateId=city.stateMasterId ;get_pincode()\" value=\"{{city.cityName}}\">{{city.cityName}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"col s6 pr0\">\n                <div class=\"control-field\">\n                  <mat-form-field class=\"cs-input\">\n                    <mat-select placeholder=\"Pin\"  name=\"pin\" [(ngModel)]=\"data.pin\" >\n                      <mat-option *ngFor=\"let pin of areas\" value=\"{{pin}}\">{{pin}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n            <div class=\"row mb10\">\n              <div class=\"col s12 padding0\">\n                <div class=\"control-field\">\n                  <mat-form-field class=\"cs-input\" >\n                    <textarea matInput placeholder=\"Address\" name=\"street\" [(ngModel)]=\"data.street\" class=\"h90\"></textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n      </div>\n    </div>\n    <div *ngIf=\"data.type=='assign'\" mat-dialog-content>\n      <p class=\"heading\">Update Sales</p>\n      <mat-form-field class=\"cs-input\">\n        <mat-select placeholder=\"Select Sales\" name=\"assignTo\" [(ngModel)]=\"data.assignTo\" >\n          <mat-option *ngFor=\"let sales of saleslist\" value=\"{{sales.userId}}\">{{sales.userName}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div> \n    \n    <div *ngIf=\"data.type=='changelead'\" mat-dialog-content>\n      <p class=\"heading\">Update Lead Type</p>\n      <mat-form-field class=\"cs-input\">\n        <mat-select placeholder=\"Select Sales\" name=\"leadType\" [(ngModel)]=\"data.leadType\" >\n          <mat-option *ngFor=\"let role of client1\" [value]=\"role.roleId\">{{role.roleName}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    \n    <div *ngIf=\"data.type=='email'\" mat-dialog-content style=\"overflow: hidden;\">\n      <p class=\"heading\">Update Email</p>\n      <div class=\"row from-fields\">\n        <div class=\"col s6 control-field\">\n          <mat-form-field class=\"cs-input\">\n            <input matInput placeholder=\"Email-ID\" name=\"email\" value=\"email\" [(ngModel)]=\"data.email\" #email=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n          </mat-form-field>\n          <div class=\"alert alert-danger\" *ngIf=\"!email.valid && email.touched\">\n            Please Enter Valid Email!\n          </div>\n        </div>\n      </div>\n      \n      \n    </div>\n    \n    <div *ngIf=\"data.type=='mobile'\" mat-dialog-content style=\"overflow: hidden;\">\n      <p class=\"heading\">Update Mobile</p>\n      <div class=\"row from-fields\">\n        <div class=\"col s6 control-field\">\n          <mat-form-field class=\"cs-input\">\n            <input matInput type=\"text\"  maxlength=\"10\"  placeholder=\"Mobile\" name=\"mobile\"    [(ngModel)]=\"data.mobile\" minlength=\"10\" maxlength=\"10\" min=\"0\" #mobile=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && mobile.invalid }\" (keypress)=\"MobileNumber($event)\" required>\n          </mat-form-field>\n        </div>\n      </div>\n      \n      <div class=\"alert alert-danger\" *ngIf=\"!mobile.valid\">\n        Mobile Must be 10 Digit!\n      </div>\n    </div>\n\n\n    <div *ngIf=\"data.type=='landline'\" mat-dialog-content style=\"overflow: hidden;\">\n        <p class=\"heading\">Update landline</p>\n        <div class=\"row from-fields\">\n          <div class=\"col s6 control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput type=\"text\"  maxlength=\"10\"  placeholder=\"Landline\" name=\"landline\"   value=\"landline\" [(ngModel)]=\"data.landline\" minlength=\"10\" maxlength=\"13\" min=\"0\" #landline=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && landline.invalid }\" (keypress)=\"MobileNumber($event)\" required>\n            </mat-form-field>\n          </div>\n        </div>\n        \n        <div class=\"alert alert-danger\" *ngIf=\"!landline.valid && landline.touched\">\n          Please Enter Valid Landline!\n        </div>\n      </div>\n    \n    <div *ngIf=\"data.type=='gst'\" mat-dialog-content style=\"overflow: hidden;\">\n      <p class=\"heading\">Update GST</p>\n      <div class=\"row from-fields\">\n        <div class=\"col s6 control-field\">\n          <mat-form-field class=\"cs-input\">\n            <input matInput type=\"text\"   placeholder=\"GST\" name=\"gst\"   value=\"gst\" [(ngModel)]=\"data.gst\" #gst=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && gst.invalid }\"  required>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"alert alert-danger\" *ngIf=\"!gst.valid && gst.touched\">\n        Please Enter GST!\n      </div>\n    </div>\n    \n    \n    <div *ngIf=\"data.type=='contact'\" mat-dialog-content>\n      <p class=\"heading\">Update Contact</p>\n      <div class=\"from-fields\">\n        <form #p=\"ngForm\" (ngSubmit)=\"p.valid && addContactPerson(p)\">\n          <div class=\"row\">\n            <div class=\"col s4 pl0\">\n              <div class=\"control-field\">\n                <mat-form-field class=\"cs-input\">\n                  <input matInput placeholder=\"Name\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"contact_person.name\" (keypress)=\"namecheck($event)\" required>\n                </mat-form-field>\n\n                <mat-error *ngIf=\"p.submitted && name.invalid\" class=\"invalid-feedback\">\n                    <mat-error *ngIf=\"name.errors.required\">Contact person is required</mat-error>\n                </mat-error>\n\n              </div>\n            </div>\n            <div class=\"col s4 \">\n              <div class=\"control-field\">\n                <mat-form-field class=\"cs-input\">\n                  <input matInput placeholder=\"Mobile No. 1\" name=\"mobile1\" #mobile1=\"ngModel\" [(ngModel)]=\"contact_person.mobile1\" minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" required>\n                </mat-form-field>\n\n                <mat-error *ngIf=\"p.submitted && mobile1.invalid\" class=\"invalid-feedback\">\n                    <mat-error *ngIf=\"mobile1.errors.required\">Mobile No 1 is required</mat-error>\n                </mat-error>\n\n                <mat-error *ngIf=\"p.submitted && mobile1.invalid && mobile1.touched\" class=\"invalid-feedback\">\n                    <mat-error>Mobile No is invalid</mat-error>\n                </mat-error>\n\n              </div>\n            </div>\n            <div class=\"col s4 pr0\">\n              <div class=\"control-field pr80\">\n                <mat-form-field class=\"cs-input\">\n                  <input matInput placeholder=\"Mobile No. 2\"  name=\"mobile2\" #mobile2=\"ngModel\" [(ngModel)]=\"contact_person.mobile2\" minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" >\n                </mat-form-field>\n\n                <mat-error *ngIf=\"p.submitted && mobile2.invalid && mobile2.touched\" class=\"invalid-feedback\">\n                    <mat-error>Mobile No is invalid</mat-error>\n                </mat-error>\n\n\n                <div class=\"plus-btn\">\n                  <button  mat-raised-button color=\"accent\">\n                    <i class=\"material-icons\" >add</i>\n                  </button>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      \n      \n      <div class=\"row mt15\">\n        <div class=\"col s12 padding0\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table>\n                <tr>\n                  <th>Name</th>\n                  <th class=\"w200\">Mobile No. 1</th>\n                  <th class=\"w200 bdr0\">Mobile No. 2</th>\n                  <th class=\"w130\">&nbsp;</th>\n                </tr>\n              </table>\n            </div>\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let value of tmp_list;let index=index\">\n                    <td>{{value.name}}</td>\n                    <td class=\"w200\">{{value.mobile1}}</td>\n                    <td class=\"w200\">{{value.mobile2}}</td>\n                    <td class=\"w130\">\n                      <a mat-button class=\"del-btn\" (click)=\"removeContact(index)\">Delete</a>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-raised-button color=\"warn\"  [mat-dialog-close]=\"false\">Cancel</button>\n      <button mat-raised-button color=\"accent\" >Save</button>\n    </div>\n  </form>\n</div>"

/***/ }),

/***/ "./src/app/lead/update-lead/update-lead.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/lead/update-lead/update-lead.component.ts ***!
  \***********************************************************/
/*! exports provided: UpdateLeadComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadComponent", function() { return UpdateLeadComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");






var UpdateLeadComponent = /** @class */ (function () {
    function UpdateLeadComponent(toast, router, dialogRef, data, db) {
        this.toast = toast;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.client1 = [];
        this.saleslist = [];
        this.statelist = [];
        this.st = [];
        this.citylist = [];
        this.district1 = [];
        this.statecode = [];
        this.districtlist = [];
        this.districts1 = [];
        this.contact_person = {};
        this.cities = [];
        this.cities1 = [];
        this.districts2 = [];
        this.areas = [];
        this.tmp_list = [];
        this.update_data = {};
        console.log(data);
        console.log(data.pin);
        this.update_data = data;
        console.log(this.update_data.leadContacts);
        this.tmp_list = this.update_data.leadContacts;
        this.leadType = data.leadType;
        this.pincode = data.pin;
        this.get_state();
        this.get_district();
        this.get_city();
        this.rolelist();
    }
    UpdateLeadComponent.prototype.ngOnInit = function () {
        console.log(this.contact_person);
    };
    UpdateLeadComponent.prototype.addContactPerson = function (form) {
        console.log("hello");
        if (!this.contact_person.mobile2) {
            this.contact_person.mobile2 = '';
        }
        this.tmp_list.push(this.contact_person);
        this.contact_person = {};
        console.log(this.tmp_list);
        form.resetForm();
    };
    UpdateLeadComponent.prototype.removeContact = function (index) {
        this.tmp_list.splice(index, 1);
    };
    UpdateLeadComponent.prototype.namecheck = function (event) {
        var pattern = /[A-Z\+\a-z\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    UpdateLeadComponent.prototype.get_state = function () {
        var _this = this;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.statelist = response['data'];
            console.log(_this.statelist);
            _this.get_district();
        });
    };
    UpdateLeadComponent.prototype.get_district = function () {
        var _this = this;
        console.log(this.data.state);
        this.st = Array(this.data.state);
        this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
            console.log(response);
            _this.districtlist = response['data'];
            _this.district1 = _this.districtlist[0].distrcits;
        });
        this.get_city();
    };
    UpdateLeadComponent.prototype.get_city = function () {
        var _this = this;
        console.log(this.data.state, this.data.district);
        console.log(this.data.district);
        this.db.fetchData(Array({ "stateName": this.data.state, "distrcits": Array({ "districtName": this.data.district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.citylist = response['data'];
            _this.districts1 = _this.citylist[0].distrcits;
            _this.cities = _this.districts1[0].cities;
            console.log(_this.cities);
            _this.statecode = _this.cities.filter(function (x) { return x.cityName == _this.data.city; });
            console.log(_this.statecode);
            _this.statemasterid = _this.statecode[0].stateMasterId;
            _this.get_pincode();
        });
    };
    UpdateLeadComponent.prototype.get_pincode = function () {
        var _this = this;
        console.log("check function");
        var cityarray = [];
        if (this.stateId) {
            console.log(this.stateId);
            cityarray[0] = this.stateId;
        }
        else {
            console.log(this.statemasterid);
            cityarray[0] = this.statemasterid;
        }
        console.log(cityarray);
        this.db.fetchData({ 'stateMasterIds': cityarray }, 'city/pincodes').subscribe(function (response) {
            console.log(response);
            _this.areas = response['data'][0]['pinCodes'];
            console.log(_this.areas);
        });
    };
    UpdateLeadComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var cllient = _this.rolelists.filter(function (x) { return x.userTypeId == 3; });
            _this.client1 = cllient[0].roles;
            console.log(_this.client1);
        });
    };
    UpdateLeadComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    UpdateLeadComponent.prototype.updateassign = function () {
        var _this = this;
        if (this.data.type == 'email') {
            this.update_data.email = this.data.email;
            this.update_data.leadId = this.data.leadId;
            console.log(this.update_data);
        }
        else if (this.data.type == 'landline') {
            this.update_data.landline = this.data.landline;
            this.update_data.leadId = this.data.leadId;
            console.log(this.update_data);
        }
        else if (this.data.type == 'mobile') {
            this.update_data.mobile = this.data.mobile;
            this.update_data.leadId = this.data.leadId;
            console.log(this.update_data);
        }
        else if (this.data.type == 'changelead') {
            this.update_data.leadType = this.data.leadType;
            this.update_data.leadId = this.data.leadId;
            console.log(this.update_data);
        }
        else if (this.data.type == 'gst') {
            this.update_data.gst = this.data.gst;
            this.update_data.leadId = this.data.leadId;
            console.log(this.update_data);
        }
        else if (this.data.type == 'address') {
            this.update_data.state = this.data.state;
            this.update_data.city = this.data.city;
            this.update_data.street = this.data.street;
            this.update_data.district = this.data.district;
            this.update_data.pin = this.data.pin;
            this.update_data.leadId = this.data.leadId;
            console.log(this.update_data);
        }
        else if (this.data.type == 'contact') {
            console.log(this.update_data);
            console.log(this.tmp_list);
            this.update_data.leadContacts = this.tmp_list;
        }
        console.log(this.data);
        this.update_data.leadtype = this.leadType;
        this.loader = true;
        this.db.fetchData(this.update_data, 'lead/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "Lead Updated successfully") {
                _this.toast.openSucess('Updated successfully', '');
                _this.dialogRef.close();
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
    };
    UpdateLeadComponent.prototype.onNoClick = function () {
        this.dialogRef.close();
    };
    UpdateLeadComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-update-lead',
            template: __webpack_require__(/*! ./update-lead.component.html */ "./src/app/lead/update-lead/update-lead.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], UpdateLeadComponent);
    return UpdateLeadComponent;
}());



/***/ }),

/***/ "./src/app/leave-and-holiday/add-holiday/add-holiday.component.html":
/*!**************************************************************************!*\
  !*** ./src/app/leave-and-holiday/add-holiday/add-holiday.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/holiday.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Leaves & Holidays</h2>\n        <p>Add New Leave Rule & Holiday</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"container-outer\">\n  <!-- <app-master-tab></app-master-tab> -->\n  <!-- <div class=\"container tab-container\" > -->\n    <div class=\"row\">\n      <form name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\"  #f=\"ngForm\" novalidate>\n      <div class=\"col s12\">\n        <div class=\"sprate-box pt0\">\n          <div class=\"cs-heading\">\n            <h2>ADD LEAVES & HOLIDAYS</h2>\n            <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n          </div>\n          <div class=\"row\">\n            <div class=\"col s12 padding0\">\n              <div class=\"tabs mt15\">\n                <ul>\n                  <li><a routerLink=\"/add-leave-rules/0\" routerLinkActive=\"active\">LEAVES RULES</a></li>\n                  <li><a routerLink=\"/add-holiday\" routerLinkActive=\"active\">HOLIDAYS</a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"select-one\">\n                <mat-radio-group  name=\"type\" [(ngModel)]=\"holiday_form.type\"  #type=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && type.invalid }\" required>\n                  <mat-radio-button value=\"1\" >National</mat-radio-button>\n                  <mat-radio-button value=\"2\" >Regional</mat-radio-button>\n                  <mat-error *ngIf=\"f.submitted && type.invalid\" class=\"invalid-feedback\">\n                    <mat-error *ngIf=\"type.errors.required\">Type is required</mat-error>\n                  </mat-error>\n                </mat-radio-group>\n              </div>\n            </div>\n          </div>\n          \n\n          <div class=\"from-fields\">\n            <div class=\"row\">\n\n              <div class=\"col s6 pl0\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n\n                        <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" name=\"date\" [(ngModel)]=\"holiday_form.date\"  #date=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && date.invalid }\" readonly required>\n\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\" ></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n\n                      </mat-form-field>\n\n                      <mat-error *ngIf=\"f.submitted && date.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"date.errors.required\">Date is required</mat-error>\n                      </mat-error>\n\n                </div>\n              </div>\n              \n              <div class=\"col s6 pr0\">\n                <div class=\"control-field\">\n                  <mat-form-field class=\"cs-input\">\n                    <input matInput placeholder=\"Holiday Title\" name=\"title\" [(ngModel)]=\"holiday_form.title\"  #title=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && title.invalid }\" required>\n                  </mat-form-field>\n                  <mat-error *ngIf=\"f.submitted && title.invalid\" class=\"invalid-feedback\">\n                    <mat-error *ngIf=\"title.errors.required\">Holiday Title is required</mat-error>\n                  </mat-error>\n                </div>\n              </div>\n\n                 <div class=\"col s6 pl0\">\n                  <div class=\"control-field\"  *ngIf=\"holiday_form.type=='2'\">\n                  <mat-form-field class=\"cs-input\">\n                      <mat-select placeholder=\"State\"  name=\"states\" [(ngModel)]=\"holiday_form.states\" #states=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && states.invalid }\" multiple  required >\n                        <mat-option *ngFor=\"let states of statedata\" [value]=\"states\">{{states}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && states.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"states.errors.required\">state Title is required</mat-error>\n                    </mat-error>\n                    </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n          <div class=\"row\">\n              <div class=\"col s12 padding0\">\n                <div class=\"cs-btn fixedd mt30 text-right\">\n                  <div class=\"in-btn\">\n                    <button mat-raised-button color=\"accent\">Save</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n        \n      </div>\n      </form>\n    </div>\n  <!-- </div> -->\n  </div>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/leave-and-holiday/add-holiday/add-holiday.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/leave-and-holiday/add-holiday/add-holiday.component.ts ***!
  \************************************************************************/
/*! exports provided: AddHolidayComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddHolidayComponent", function() { return AddHolidayComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");







var AddHolidayComponent = /** @class */ (function () {
    function AddHolidayComponent(db, router, route, toast) {
        var _this = this;
        this.db = db;
        this.router = router;
        this.route = route;
        this.toast = toast;
        this.holiday_form = {};
        this.statelist = {};
        this.statedata = [];
        this.user = {};
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.statelist = response;
            _this.statedata = _this.statelist.data;
            console.log(_this.statedata);
        });
    }
    AddHolidayComponent.prototype.ngOnInit = function () {
    };
    AddHolidayComponent.prototype.onSubmit = function () {
        var _this = this;
        this.loader = true;
        if (this.holiday_form.type == 2) {
            var s = this.holiday_form.states.join(",");
            console.log(s);
        }
        this.holiday_form.states = s;
        var datenow = moment__WEBPACK_IMPORTED_MODULE_4__(this.holiday_form.date).format('YYYY-MM-DD');
        console.log(datenow);
        this.holiday_form.date = datenow;
        this.holiday_form.userId = this.userId;
        console.log(this.holiday_form);
        this.db.fetchData(this.holiday_form, 'holiday/add').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "Holiday added successfully") {
                _this.toast.openSucess('Holiday added successfully', '');
                _this.router.navigate(['/holiday-list']);
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
        });
        console.log(this.holiday_form);
    };
    AddHolidayComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-holiday',
            template: __webpack_require__(/*! ./add-holiday.component.html */ "./src/app/leave-and-holiday/add-holiday/add-holiday.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"], src_app_toast__WEBPACK_IMPORTED_MODULE_6__["SnackBarOverview"]])
    ], AddHolidayComponent);
    return AddHolidayComponent;
}());



/***/ }),

/***/ "./src/app/leave-and-holiday/add-leave-rules/add-leave-rules.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/leave-and-holiday/add-leave-rules/add-leave-rules.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\"> \n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/holiday.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Leaves & Holidays</h2>\n        <p *ngIf=\"ruleId==0\">Add New Leave Rule</p>\n        <p *ngIf=\"ruleId && ruleId!=0\">UPdate Leave Rule</p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container-outer\">\n    <!-- <app-master-tab></app-master-tab>\n      <div class=\"container tab-container\" > -->\n        <form name=\"form\" (ngSubmit)=\"f.form.valid && submit(f)\" #f=\"ngForm\" novalidate>\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sprate-box pt0\">\n                <div class=\"cs-heading\">\n                  <h2 *ngIf=\"ruleId==0\">ADD LEAVES RULE</h2>\n                  <h2 *ngIf=\"ruleId && ruleId!=0\">UPDATE LEAVES</h2>\n                  <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n                </div>\n                <div class=\"row mb0\">\n                  <div class=\"col s12 padding0\">\n                    <div class=\"tabs mt15\">\n                      <ul>\n                        <li><a routerLink=\"/add-leave-rules\" routerLinkActive=\"active\">LEAVES RULES</a></li>\n                        <li><a routerLink=\"/add-holiday\" routerLinkActive=\"active\">HOLIDAYS</a></li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                \n                \n                \n                <div class=\"from-fields\">\n                  <div class=\"row\">\n                    \n                    <div class=\"col s8 pl0\">\n                      <div class=\"row\">\n                        <div class=\"col s12\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input\">\n                              <input matInput placeholder=\"Subject\" name=\"name\" [(ngModel)]=\"leave_form.subject\"  #name=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && name.invalid }\" required>\n                            </mat-form-field>\n                            <mat-error *ngIf=\"f.submitted && name.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"name.errors.required\">Leave Subject is required</mat-error>\n                            </mat-error>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div class=\"row mt15\">\n                        <div class=\"col s12\">\n                          <div class=\"from-fields\">\n                            <div class=\"control-field editor-height\" >\n                              <app-ngx-editor [placeholder]=\"'Description'\" [spellcheck]=\"true\" name=\"description\" name=\"description\" [(ngModel)]=\"leave_form.description\"  #description=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && description.invalid }\" required></app-ngx-editor>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div class=\"col s4 pr0\">\n                      <div class=\"role-leave\">\n                        <h2>Role Wise Leave {{daysInvalid}}</h2>\n                        <ul>\n                          <li *ngFor=\"let list of designationData\">\n                            <p>{{list.designationName}}</p>\n                            <div class=\"control-field\">\n                              <div class=\"cs-input infix-bodr\">\n                                <input type=\"number\" [(ngModel)]=\"list.noOfLeaves\" name=\"{{list.designation}}\" placeholder=\"Days\" (keyup)=\"onDayChangeHandler(list.designation)\">\n                              </div>\n                            </div>\n                          </li>\n                        </ul>\n\n                        <mat-error *ngIf=\"f.submitted && daysInvalid\" class=\"invalid-feedback\">\n                           <mat-error>At Least 1 Designation Leave Days Required</mat-error>\n                        </mat-error>\n\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"cs-btn fixedd mt32 text-right\">\n                <div class=\"in-btn\">\n                  <button mat-raised-button color=\"accent\"  >Save</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <!-- </div> -->\n    </div>\n    <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/leave-and-holiday/add-leave-rules/add-leave-rules.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/leave-and-holiday/add-leave-rules/add-leave-rules.component.ts ***!
  \********************************************************************************/
/*! exports provided: AddLeaveRulesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeaveRulesComponent", function() { return AddLeaveRulesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var AddLeaveRulesComponent = /** @class */ (function () {
    function AddLeaveRulesComponent(db, router, route, toast, msg) {
        this.db = db;
        this.router = router;
        this.route = route;
        this.toast = toast;
        this.msg = msg;
        this.leave_form = {};
        this.designationData = [];
        this.daysInvalid = true;
        this.ruleId = '';
        this.ruleData = [];
        this.designationData = [
            { ruleId: 0, designationName: 'Vice President', designation: 1, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Deputy General Manager', designation: 2, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'General Manager', designation: 3, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Assistant General Manager', designation: 4, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Sr Manager', designation: 5, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Manager', designation: 6, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Deputy Manager', designation: 7, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Sr Executive', designation: 8, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Executive', designation: 9, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Assistant Manager', designation: 10, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Assistant', designation: 11, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Trainee', designation: 12, noOfLeaves: 0 },
            { ruleId: 0, designationName: 'Others', designation: 13, noOfLeaves: 0 }
        ];
    }
    AddLeaveRulesComponent.prototype.ngOnInit = function () {
        var _this = this;
        console.log(this.leave_form);
        this.route.params.subscribe(function (params) {
            console.log(params);
            if (params.id && params.id != '0') {
                _this.ruleId = params.id;
                console.log(_this.ruleId);
                _this.leaveRulesData();
            }
            else {
                _this.ruleId = 0;
            }
        });
    };
    AddLeaveRulesComponent.prototype.leaveRulesData = function () {
        var _this = this;
        console.log("Function call");
        this.loader = true;
        console.log(this.ruleId);
        this.db.fetchData({ 'ruleId': this.ruleId }, 'leave/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.ruleData = response['data'][0];
            _this.leave_form.subject = _this.ruleData.subject;
            _this.leave_form.description = _this.ruleData.description;
            var _loop_1 = function (index) {
                var indexExist = _this.designationData.findIndex(function (row) { return row.designation == _this.ruleData.designationsWiseLeaves[index].designation; });
                _this.designationData[indexExist].noOfLeaves = _this.ruleData.designationsWiseLeaves[index].noOfLeaves;
            };
            for (var index = 0; index < _this.ruleData.designationsWiseLeaves.length; index++) {
                _loop_1(index);
            }
        });
    };
    AddLeaveRulesComponent.prototype.onDayChangeHandler = function (designation) {
        var designationIndex = this.designationData.findIndex(function (row) { return row.designation == designation; });
        if (this.designationData[designationIndex].noOfLeaves < 0) {
            this.designationData[designationIndex].noOfLeaves = 0;
        }
    };
    AddLeaveRulesComponent.prototype.submit = function (f) {
        var _this = this;
        this.leave_form.designationLeaves = this.designationData;
        this.daysInvalid = true;
        for (var index = 0; index < this.leave_form.designationLeaves.length; index++) {
            if (this.leave_form.designationLeaves[index].noOfLeaves != 0) {
                this.daysInvalid = false;
            }
        }
        if (this.daysInvalid) {
            return;
        }
        console.log(this.leave_form);
        this.loader = true;
        var apiURL = '';
        if (this.ruleId && this.ruleId != '0') {
            this.leave_form.ruleId = this.ruleId;
            apiURL = 'leave/update';
        }
        else {
            apiURL = 'leave/add';
        }
        this.db.fetchData(this.leave_form, apiURL).subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (response.status == 'Failed') {
                _this.msg.error(_this.message);
            }
            else {
                _this.router.navigate(['/leave-rule-list']);
            }
        });
    };
    AddLeaveRulesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-leave-rules',
            template: __webpack_require__(/*! ./add-leave-rules.component.html */ "./src/app/leave-and-holiday/add-leave-rules/add-leave-rules.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], AddLeaveRulesComponent);
    return AddLeaveRulesComponent;
}());



/***/ }),

/***/ "./src/app/leave-and-holiday/holiday-list/holiday-list.component.html":
/*!****************************************************************************!*\
  !*** ./src/app/leave-and-holiday/holiday-list/holiday-list.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n    <div class=\"middle-container\">\n      <div class=\"page-heading\">\n        <img src=\"assets/img/holiday.svg\" class=\"h-icon\">\n        <div class=\"heading-text pr20\">\n          <h2>Leaves & Holidays</h2>\n          <p>Add New Leave Rule & Holiday</p>\n        </div>\n      </div>\n      <div class=\"tabs left-auto\">\n        <ul>\n          <li><a routerLink=\"/leave-rule-list\" routerLinkActive=\"active\">LEAVES RULES</a></li>\n          <li><a routerLink=\"/holiday-list\" routerLinkActive=\"active\">HOLIDAYS</a></li>\n        </ul>\n      </div>\n    </div>\n    \n\n    <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table class=\"sno-border\">\n                <tr>\n                  <th  class=\"w30\">&nbsp;</th>\n                  <th class=\"w100\">Day</th>\n                  <th class=\"w100\">Date</th>\n                  <th class=\"w180\">Holiday</th>\n                  <th>State</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table class=\"sno-border\">\n                  <tr *ngFor=\"let holiday of holidays\">\n                    <td class=\"w30\"></td>\n                    <td class=\"w100\">{{holiday.date|date:' EEEE '}}</td>\n                    <td class=\"w100\">{{holiday.date|date:'d MMM y'}} </td>\n                    <td class=\"w180  green-clr\">{{holiday.title}}</td>\n                    <td class=\"green-clr\">{{holiday.states}}\n                    <div  *ngIf=\"this.role==1\" class=\"action-btns\">\n                        <!-- <a mat-button class=\"view\"><i class=\"material-icons\">remove_red_eye</i> View</a> -->\n                        <button  mat-button class=\"delete\" (click)=\"deleteHoliday(holiday.holidayId)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                    </div>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div> \n          </div>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"div\" class=\"data-not-available\" >\n      <div class=\"outer\">\n        <div class=\"iinear\">\n          <div class=\"figure\" matRipple>\n            <div class=\"header\">\n              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n            </div>\n            \n            <div class=\"description\">\n            \n              <div class=\"img\">\n                <i class=\"material-icons\">error_outline</i>\n              </div>\n              <div class=\"psc\">\n                <p>data not available</p>\n             \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n    <div *ngIf=\"userdata.role==1 && userdata.superAdmin\" class=\"fixed-multibtn-botm\">\n      <ul>\n        <li><a  matTooltip=\"Add New\" routerLink=\"/add-leave-rules\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n      </ul>\n    </div>\n  </div>"

/***/ }),

/***/ "./src/app/leave-and-holiday/holiday-list/holiday-list.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/leave-and-holiday/holiday-list/holiday-list.component.ts ***!
  \**************************************************************************/
/*! exports provided: HolidayListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HolidayListComponent", function() { return HolidayListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");







var HolidayListComponent = /** @class */ (function () {
    function HolidayListComponent(db, user, toast, dialog) {
        this.db = db;
        this.user = user;
        this.toast = toast;
        this.dialog = dialog;
        this.holidaylist = {};
        this.holidays = [];
        this.date = [];
        this.userdata = [];
        this.div = false;
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
        this.holidayList();
    }
    HolidayListComponent.prototype.holidayList = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'holiday/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.holidaylist = response;
                _this.holidays = _this.holidaylist.data;
            }
            if (response['status'] == 'Failed') {
                _this.div = true;
                _this.holidays = [];
            }
            _this.holidaylist = response;
            _this.holidays = _this.holidaylist.data;
            console.log(_this.holidays);
        });
    };
    HolidayListComponent.prototype.deleteHoliday = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "Holiday";
        this.dialog.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fileData(id, 'holiday/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message = "Holiday removed successfully") {
                        _this.toast.openSucess('Holiday removed successfully', '');
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    _this.holidayList();
                });
            }
        });
    };
    HolidayListComponent.prototype.ngOnInit = function () {
    };
    HolidayListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-holiday-list',
            template: __webpack_require__(/*! ./holiday-list.component.html */ "./src/app/leave-and-holiday/holiday-list/holiday-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _local_storage_service__WEBPACK_IMPORTED_MODULE_6__["sessionStorage"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], HolidayListComponent);
    return HolidayListComponent;
}());



/***/ }),

/***/ "./src/app/leave-and-holiday/leave-rule-detail/leave-rule-detail.component.html":
/*!**************************************************************************************!*\
  !*** ./src/app/leave-and-holiday/leave-rule-detail/leave-rule-detail.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n\n  <div class=\"middle-container\">\n\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/leave-rule-list/\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{ruleData.subject}} Policy</h2>\n        <p class=\"light\">{{ruleData.createdOn | date: 'dd-MMM-yyyy'}}</p>\n      </div>\n    </div>\n    \n\n    <div *ngIf=\"userdata.role==1 && userdata.superAdmin\" class=\"left-auto\">\n      <div class=\"cs-btn text-right\">\n        <div class=\"in-btn\">\n          <a mat-raised-button color=\"accent\"  matTooltip=\"Edit\"  routerLink=\"/add-leave-rules/{{this.ruleId}}\" routerLinkActive=\"active\"><i class=\"material-icons\">edit</i></a>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info padding0\">\n            <div class=\"basic-details\">\n              <div class=\"col s12 {{index>0 ? 'mt15' : ''}} cs-figure grid-figure space-li padding0\" >\n                <ul>\n                  <li *ngFor=\"let list of ruleData.designationsWiseLeaves; let index = index\" style=\"border: 1px solid #B29D9D;\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>{{list.designationName}}</span>\n                        <p class=\"counter\">{{list.noOfLeaves}} days</p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n      <div class=\"row mt15\">\n          <div class=\"col s12\">\n              <div class=\"cs-description\">\n                  <h2>description</h2>\n                  <p [innerHTML]=\"ruleData.description\"></p>\n                  </div>\n              </div>\n          </div>\n    </div>\n  </div>\n  \n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/leave-and-holiday/leave-rule-detail/leave-rule-detail.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/leave-and-holiday/leave-rule-detail/leave-rule-detail.component.ts ***!
  \************************************************************************************/
/*! exports provided: LeaveRuleDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeaveRuleDetailComponent", function() { return LeaveRuleDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");







var LeaveRuleDetailComponent = /** @class */ (function () {
    function LeaveRuleDetailComponent(db, toast, dialog, route, user) {
        this.db = db;
        this.toast = toast;
        this.dialog = dialog;
        this.route = route;
        this.user = user;
        this.ruleData = {};
        this.userdata = [];
        this.userdata = this.user['user']['data'];
    }
    LeaveRuleDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.ruleId = params.id;
            console.log(_this.ruleId);
            _this.leaveRulesData();
        });
    };
    LeaveRuleDetailComponent.prototype.leaveRulesData = function () {
        var _this = this;
        console.log("Function call");
        this.loader = true;
        console.log(this.ruleId);
        this.db.fetchData({ 'ruleId': this.ruleId }, 'leave/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.ruleData = response['data'][0];
        });
    };
    LeaveRuleDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-leave-rule-detail',
            template: __webpack_require__(/*! ./leave-rule-detail.component.html */ "./src/app/leave-and-holiday/leave-rule-detail/leave-rule-detail.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"], _local_storage_service__WEBPACK_IMPORTED_MODULE_6__["sessionStorage"]])
    ], LeaveRuleDetailComponent);
    return LeaveRuleDetailComponent;
}());



/***/ }),

/***/ "./src/app/leave-and-holiday/leave-rule-list/leave-rule-list.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/leave-and-holiday/leave-rule-list/leave-rule-list.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n    <div class=\"middle-container pb15\">\n      <div class=\"page-heading\">\n        <img src=\"assets/img/holiday.svg\" class=\"h-icon\">\n        <div class=\"heading-text pr20\">\n          <h2>Leaves & Holidays</h2>\n          <p>Add New Leave Rule & Holiday</p>\n        </div>\n      </div>\n      <div class=\"tabs left-auto\">\n        <ul>\n          <li><a routerLink=\"/leave-rule-list\" routerLinkActive=\"active\">LEAVES RULES</a></li>\n          <li><a routerLink=\"/holiday-list\" routerLinkActive=\"active\">HOLIDAYS</a></li>\n        </ul>\n      </div>\n    </div>\n    \n    \n    <div class=\"container-outer pt0\">\n      <div class=\"container\">\n          <div class=\"row\">\n              <div class=\"cs-table left-right-20\">\n                <div class=\"sticky-head\">\n                  <div class=\"table-head\">\n                    <table class=\"sno-border\"> \n                      <tr>\n                        <th class=\"w30\">&nbsp;</th>\n                        <th class=\"w110\">Date</th>\n                        <th class=\"w200\">Subject</th>\n                        <th>Description</th>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                <div class=\"table-container\">\n                  <div class=\"table-content\">\n                    <table class=\"sno-border\">\n                      <tr *ngFor=\"let leave of leaves;let i=index\">\n                          <td class=\"w30\">{{i+1}}</td>\n                          <td class=\"w110\">{{leave.createdOn | date: 'dd-MMM-yyyy'}}</td>\n                          <td class=\"w200\"> <a class=\"link-btn\" routerLink=\"/leave-rule-detail/{{leave.ruleId}}\" routerLinkActive=\"active\">{{leave.subject}}</a></td>\n                          <td><p [innerHTML]=\"leave.description\"></p></td>\n\n                          <td>\n                              <div class=\"edit-menu\">\n                                <button mat-icon-button [matMenuTriggerFor]=\"menu\"> \n                                  <i class=\"material-icons\">more_vert</i>\n                                </button>\n                                <mat-menu #menu=\"matMenu\">\n                                  <button *ngIf=\"this.role==1\" mat-menu-item (click)=\"delete_leave(leave.ruleId)\">\n                                    <span class=\"red-clr\" >Delete</span>\n                                  </button>\n                                </mat-menu>\n                              </div>\n                          </td>\n                          \n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                  \n                </div>\n        </div>\n\n        <div class=\"row\" style=\"display: none;\">\n          <div class=\"col s12\">\n            <div class=\"list-thumbnail\"  >\n              <div class=\"cs-list\" *ngFor=\"let leave of leaves;let i=index\">\n                <div class=\"list-heading\">\n                  <h2>{{leave.name}} Policy</h2>\n                  <div class=\"left-icon-menu\">\n                    <ul>\n                      <li><span class=\"counter-digit\">{{leave.noOfLeaves}}</span></li>\n                      <li>\n                        <div class=\"edit-menu\">\n                          <button mat-icon-button [matMenuTriggerFor]=\"menu\"> \n                            <i class=\"material-icons\">more_vert</i>\n                          </button>\n                          <mat-menu #menu=\"matMenu\">\n                            <button *ngIf=\"this.role==1\" mat-menu-item (click)=\"delete_leave(leave.ruleId)\">\n                              <span class=\"red-clr\" >Delete</span>\n                            </button>\n                            <!-- <button mat-menu-item disabled>\n                              <span>Check voicemail</span>\n                            </button>\n                            <button mat-menu-item>\n                              <span>Disable alerts</span>\n                            </button> -->\n                          </mat-menu>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                \n                <div class=\"text-box-outer\">\n                  <div class=\"text-box-inner\" [innerHTML]=\"leave.description\"> \n                  </div>\n\n                  <!-- <div class=\"text-right\">\n                    <a class=\"link-btn\" style=\"color: #0006b7; cursor: pointer;\">View More</a>\n                  </div> -->\n                </div>\n              </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"div\" class=\"data-not-available\" >\n            <div class=\"outer\">\n              <div class=\"iinear\">\n                <div class=\"figure\" matRipple>\n                  <div class=\"header\">\n                    <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                  </div>\n                  \n                  <div class=\"description\">\n                  \n                    <div class=\"img\">\n                      <i class=\"material-icons\">error_outline</i>\n                    </div>\n                    <div class=\"psc\">\n                      <p>data not available</p>\n                   \n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"userdata.role == 1 && userdata.superAdmin\" class=\"fixed-multibtn-botm\">\n          <ul>\n            <li><a  matTooltip=\"Add New\" routerLink=\"/add-leave-rules/0\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n          </ul>\n        </div>\n\n      </div>  \n    <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/leave-and-holiday/leave-rule-list/leave-rule-list.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/leave-and-holiday/leave-rule-list/leave-rule-list.component.ts ***!
  \********************************************************************************/
/*! exports provided: LeaveRuleListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeaveRuleListComponent", function() { return LeaveRuleListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");







var LeaveRuleListComponent = /** @class */ (function () {
    function LeaveRuleListComponent(db, user, toast, dialog) {
        this.db = db;
        this.user = user;
        this.toast = toast;
        this.dialog = dialog;
        this.leavelist = {};
        this.leaves = [];
        this.div = false;
        this.userdata = [];
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
        this.leavelists();
    }
    LeaveRuleListComponent.prototype.leavelists = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({}, 'leave/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.leavelist = response;
                _this.leaves = _this.leavelist.data;
            }
            if (response['status'] == 'Failed') {
                _this.div = true;
                _this.leaves = [];
            }
            _this.leavelist = response;
            _this.leaves = _this.leavelist.data;
            console.log(_this.leaves);
        });
    };
    LeaveRuleListComponent.prototype.ngOnInit = function () {
    };
    LeaveRuleListComponent.prototype.delete_leave = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "Leave Rule";
        this.dialog.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fileData(id, 'leave/delete/').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (_this.message = "Leave Rules removed successfully") {
                        _this.toast.openSucess('LeaveRules removed successfully', '');
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                    _this.leavelists();
                });
            }
        });
    };
    LeaveRuleListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-leave-rule-list',
            template: __webpack_require__(/*! ./leave-rule-list.component.html */ "./src/app/leave-and-holiday/leave-rule-list/leave-rule-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _local_storage_service__WEBPACK_IMPORTED_MODULE_6__["sessionStorage"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], LeaveRuleListComponent);
    return LeaveRuleListComponent;
}());



/***/ }),

/***/ "./src/app/leave-apply/leave-apply-add/leave-apply-add.component.html":
/*!****************************************************************************!*\
  !*** ./src/app/leave-apply/leave-apply-add/leave-apply-add.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/leads_icon.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Leave</h2>\n        <p>Add New Leave</p>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"sprate-box\">\n            <div class=\"cs-heading\">\n              <h2>LEAVE INFORMATION</h2>\n              <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n            </div>\n            \n            <mat-divider class=\"left-right-15 mt10\"></mat-divider>\n            <div class=\"from-fields\">\n              <div class=\"row\">\n                <div class=\"col s4\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <mat-select placeholder=\"Leave Type\">\n                        <mat-option value=\"option1\">Casual</mat-option>\n                        <mat-option value=\"option2\">Casual</mat-option>\n                        <mat-option value=\"option3\">Casual</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                  </div>\n                </div>\n                <div class=\"col s4\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <input matInput [matDatepicker]=\"picker\" placeholder=\"Start Date\">\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                      <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                  </div>\n                </div>\n                <div class=\"col s4\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <input matInput [matDatepicker]=\"pickers\" placeholder=\"End Date\">\n                      <mat-datepicker-toggle matSuffix [for]=\"pickers\"></mat-datepicker-toggle>\n                      <mat-datepicker #pickers></mat-datepicker>\n                    </mat-form-field>\n                  </div>\n                </div>\n              </div>\n              \n              \n              <div class=\"row mb10\">\n                <div class=\"col s12\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <textarea matInput placeholder=\"Description\" class=\"h100\"></textarea>\n                    </mat-form-field>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col s12\">\n          <div class=\"cs-btn fixedd mt32 text-right\">\n            <div class=\"in-btn\">\n              <button mat-raised-button color=\"accent\">Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/leave-apply/leave-apply-add/leave-apply-add.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/leave-apply/leave-apply-add/leave-apply-add.component.ts ***!
  \**************************************************************************/
/*! exports provided: LeaveApplyAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeaveApplyAddComponent", function() { return LeaveApplyAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var LeaveApplyAddComponent = /** @class */ (function () {
    function LeaveApplyAddComponent() {
    }
    LeaveApplyAddComponent.prototype.ngOnInit = function () {
    };
    LeaveApplyAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-leave-apply-add',
            template: __webpack_require__(/*! ./leave-apply-add.component.html */ "./src/app/leave-apply/leave-apply-add/leave-apply-add.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], LeaveApplyAddComponent);
    return LeaveApplyAddComponent;
}());



/***/ }),

/***/ "./src/app/leave-apply/leave-apply-list/leave-apply-list.component.html":
/*!******************************************************************************!*\
  !*** ./src/app/leave-apply/leave-apply-list/leave-apply-list.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n    <div class=\"middle-container padding0\">\n      <div class=\"master-heading\">\n            <div class=\"top-pagination m-right-data\">\n              <ul>\n                <li class=\"refresh-area\">\n                  <a class=\"refresh-btn\" mat-raised-button  matTooltip=\"Refresh\"><i class=\"material-icons\"> refresh</i></a>\n                </li>\n                <li><p>Pages 2 of 6</p></li>\n                <li><button mat-button class=\"left-btn\"><i class=\"material-icons\">keyboard_arrow_left</i></button></li>\n                <li><input type=\"text\" placeholder=\"GO TO\"></li>\n                <li><button mat-button class=\"right-btn\"><i class=\"material-icons\">keyboard_arrow_right</i></button></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"container-outer\">\n          <div class=\"container\" >\n            <div class=\"row\">\n              <div class=\"col s12\">\n                <div class=\"cs-table left-right-20\">\n                  <div class=\"table-head\">\n                    <table class=\"sno-border\"> \n                      <tr>\n                        <th class=\"w30\">&nbsp;</th>\n                        <th>Created By & Date</th>\n                        <th class=\"w120\">Leave Type</th>\n                        <th class=\"w120 text-center\">Start Date</th>\n                        <th class=\"w120\">End date</th>\n                        <th class=\"w120\">Status</th>\n                        <th class=\"w120\">Action</th>\n                      </tr>\n                    </table>\n                  </div>\n                  \n                  <div class=\"table-container\">\n                    <div class=\"table-content\">\n                      <table class=\"sno-border\">\n                        <tr>\n                          <td class=\"w30\">1</td>\n                          <td>2 Jan 2018 / Rahul Dubey</td>\n                          <td class=\"w120\">Urgent Leave</td>\n                          <td class=\"w120\">13 May 2019</td>\n                          <td class=\"w120\">14 May 2019</td>\n                          <td class=\"w120 red-clr\">Reject</td>\n                          <td class=\"w120\">\n                              <a class=\"link-btn\" mat-button >Chanege Status</a>\n                          </td>\n                        </tr>\n                        <tr>\n                            <td>2</td>\n                            <td>2 Jan 2018 / Rahul Dubey</td>\n                            <td>Urgent Leave</td>\n                            <td>13 May 2019</td>\n                            <td>14 May 2019</td>\n                            <td class=\"red-clr\">Reject</td>\n                            <td>\n                                <a class=\"link-btn\" mat-button >Chanege Status</a>\n                            </td>\n                          </tr>\n                      </table>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n      \n      <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/leave-apply/leave-apply-list/leave-apply-list.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/leave-apply/leave-apply-list/leave-apply-list.component.ts ***!
  \****************************************************************************/
/*! exports provided: LeaveApplyListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeaveApplyListComponent", function() { return LeaveApplyListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var LeaveApplyListComponent = /** @class */ (function () {
    function LeaveApplyListComponent() {
    }
    LeaveApplyListComponent.prototype.ngOnInit = function () {
    };
    LeaveApplyListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-leave-apply-list',
            template: __webpack_require__(/*! ./leave-apply-list.component.html */ "./src/app/leave-apply/leave-apply-list/leave-apply-list.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], LeaveApplyListComponent);
    return LeaveApplyListComponent;
}());



/***/ }),

/***/ "./src/app/leave/add-leave/add-leave.component.html":
/*!**********************************************************!*\
  !*** ./src/app/leave/add-leave/add-leave.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\"> \n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/leave.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Leave</h2>\n        <p>Add New Leave</p>\n      </div>\n    </div>\n  </div>\n  <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\" f.form.valid && save_sales_leave()\" novalidate>\n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>ADD LEAVE {{isLeavesAllowed}}</h2>\n              </div>\n              <div class=\"from-fields\">\n                \n                <div class=\"row\">\n                  <div class=\"col s8 pl0\">\n                    \n                    <div class=\"row\">\n                      <div class=\"col s4 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input\">\n                            <mat-select placeholder=\"Leave Type\" name=\"LeaveType\"  [(ngModel)]=\"form.LeaveType\" #LeaveType=\"ngModel\" required>\n                              <mat-option (click)=\"apple(form.LeaveType)\" value={{a.ruleId}} *ngFor=\"let a of newArrayList\">{{a.subject}}</mat-option>\n                              <mat-option  value=\"other\">other</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                          \n                          <mat-error *ngIf=\"f.submitted && LeaveType.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"LeaveType.errors.required\">LeaveType is required</mat-error>\n                          </mat-error>\n                          <mat-error *ngIf=\"iseligible\" class=\"invalid-feedback\">You don't have any pending {{leaveName}}</mat-error>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s4\" >\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input\">\n                            <input matInput [matDatepicker]=\"picker\" readonly\n                            placeholder=\"Date From\" name=\"StartDate\" [(ngModel)]=\"form.StartDate\" #StartDate=\"ngModel\"\n                            [min]='currentDate' (dateChange)=\"onDateChangeHandler(form.StartDate)\"\n                            \n                            required>\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && StartDate.invalid\" class=\"invalid-feedback\">   \n                            <mat-error *ngIf=\"(form.StartDate > form.EndDate)\">Enter Date Properlly</mat-error>                      \n                          </mat-error>\n                          <mat-error *ngIf=\"f.submitted && StartDate.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"StartDate.errors.required\">Start Date is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s4\" >\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input\">\n                            <input matInput [matDatepicker]=\"pickerone\" readonly placeholder=\"Date To\" name=\"EndDate\" [(ngModel)]=\"form.EndDate\" #EndDate=\"ngModel\"   required\n                            [max]=\"endDate\" [min]=\"form.StartDate\">\n                            \n                            <mat-datepicker-toggle matSuffix [for]=\"pickerone\"></mat-datepicker-toggle>\n                            <mat-datepicker #pickerone></mat-datepicker>\n                          </mat-form-field>\n                          \n                          <mat-error *ngIf=\"f.submitted && EndDate.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"EndDate.errors.required\">End-Date is required</mat-error> \n                          </mat-error>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div class=\"row\">\n                      <div class=\"col s12 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input\">\n                            <!-- #remark=\"ngModel\" -->\n                            <textarea matInput placeholder=\"Remark\" class=\"h170\" name=\"remark\" [(ngModel)]=\"form.remark\" #remark=\"ngModel\"  required ></textarea>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && remark.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"remark.errors.required\">Remark is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s12 pl0\" *ngIf=\"isDescription\">\n                        Description\n                        <div class=\"control-field\">\n                          <mat-form-field [innerHTML]=\"form.description\" class=\"cs-input\">\n                            <textarea  matInput   name=\"description\" #description=\"ngModel\"  [(ngModel)]=\"form.description\" readonly class=\"h200\"></textarea>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s4 pr0\">\n                    <div class=\"role-leave li-border\">\n                      <div class=\"arrow-btn\">\n                        <button type=\"button\"  (click)=\"previous()\"     ><i class=\"material-icons\" *ngIf=\"yearSelected ==2019\"   >chevron_left</i></button>\n                        <button type=\"button\"  (click)=\"next()\"  ><i class=\"material-icons\" *ngIf=\"yearSelected < currentYear1\"   >chevron_right</i></button>\n                      </div>\n                      <h2> Leave Info \n                        {{yearSelected}} - {{yearSelected+1}}\n                      </h2>\n                      <ul>\n                        <li style =\"text-align: right\">\n                          \n                          <span>Total</span>\n                          <span>Used</span>\n                          <span>Pending</span>\n                        </li>\n                        \n                        <li *ngFor=\"let a of myLeavLeft\">                          \n                          <p   >{{a.leaveType}}</p>\n                          <span  class=\"counter\">{{a.totalLeaves}}</span>\n                          <span  class=\"counter\">{{ a.totalLeaves - a.remainingLeaves}}</span>\n                          <span  class=\"counter\">{{a.remainingLeaves}}  </span>\n                          \n                        </li>\n                        \n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"row\">\n              <div class=\"col s12 padding0\">\n                <div class=\"cs-btn fixedd mt13 text-right\">\n                  <div class=\"in-btn\">\n                    <button mat-raised-button color=\"accent\"  (click)=\"setFocus(f.form)\" >Save</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n      </div>\n    </div>\n  </form>\n  \n  \n</div>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/leave/add-leave/add-leave.component.ts":
/*!********************************************************!*\
  !*** ./src/app/leave/add-leave/add-leave.component.ts ***!
  \********************************************************/
/*! exports provided: AddLeaveComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeaveComponent", function() { return AddLeaveComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_7__);







// import { log } from 'util';
// import { ConcatSource } from 'webpack-sources';
// import { formArrayNameProvider } from '@angular/forms/src/directives/reactive_directives/form_group_name';
// import { slideToTop } from '../../router-animation/router-animation.component';


var AddLeaveComponent = /** @class */ (function () {
    function AddLeaveComponent(alrt, datePipe, db, router, platformId) {
        this.alrt = alrt;
        this.datePipe = datePipe;
        this.db = db;
        this.router = router;
        this.platformId = platformId;
        this.form = {};
        this.user = {};
        this.iseligible = false;
        this.loader = false;
        this.isLeavesAllowed = false;
        this.currentDate = new Date().toJSON().split('T')[0];
        this.newArrayList = [];
        this.array = [];
        this.role_array = [];
        this.leaveCountLeft = [];
        this.myLeavLeft = [];
        this.limitdate = [];
        this.isDescription = false;
        this.limitdate1 = {};
        this.leaveTypeFunction();
        var date = new Date();
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.username = this.user.data.userName;
        console.log(this.userType, "&", this.userId, "&", this.userRole, "&&", this.username);
        // this.getTodayFilter();
        this.getCountUserLeave(this.userId);
    }
    ;
    AddLeaveComponent.prototype.ngOnInit = function () {
        this.yearSelected = parseInt(moment__WEBPACK_IMPORTED_MODULE_5__().format('YYYY'));
        this.currentYear1 = moment__WEBPACK_IMPORTED_MODULE_5__().format('YYYY');
        //  alert(this.currentYear1)
    };
    AddLeaveComponent.prototype.leaveTypeFunction = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({}, 'leave/list').subscribe(function (r) {
            console.log("=====================================================");
            _this.loader = false;
            console.log(r);
            _this.newArrayList = r['data'];
            console.log("==============bunny====================");
            console.log(_this.newArrayList);
        });
    };
    AddLeaveComponent.prototype.onDateChangeHandler = function (date) {
        if (this.form.LeaveType == 'other') {
            this.endDate = "";
        }
        else {
            console.log(date);
            var myDate = moment__WEBPACK_IMPORTED_MODULE_5__(date, "YYYY-MM-DD").add(this.limitdate - 1, 'days');
            this.endDate = myDate["_d"];
            console.log(this.endDate);
            return this.endDate;
        }
    };
    AddLeaveComponent.prototype.save_sales_leave = function () {
        var _this = this;
        this.startDate = moment__WEBPACK_IMPORTED_MODULE_5__(this.form.StartDate).format('YYYY-MM-DD');
        this.endDate = moment__WEBPACK_IMPORTED_MODULE_5__(this.form.EndDate).format('YYYY-MM-DD');
        var currentDate = moment__WEBPACK_IMPORTED_MODULE_5__().format('YYYY-MM-DD');
        this.diffrence = moment__WEBPACK_IMPORTED_MODULE_5__(this.endDate).diff(moment__WEBPACK_IMPORTED_MODULE_5__(this.startDate), 'days');
        console.log(this.diffrence);
        var isLeaveAllowed = this.onDateChangeHandler(0);
        //  alert(this.diffrence);
        this.loader = true;
        this.db.fetchData({
            'leaveType': this.form.LeaveType, 'startDate': this.startDate, 'endDate': moment__WEBPACK_IMPORTED_MODULE_5__(this.form.EndDate).format("YYYY-MM-DD"), 'remarks': this.form.remark,
            'userId': this.userId,
            'numberOfDays': this.diffrence + 1, 'ApplicationDate': currentDate,
            'approvalStatus': 0, 'leaveApplicationId': 0
        }, 'applyLeave').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response["message"] == "Success") {
                _this.router.navigate(['/leave-list']);
            }
        });
    };
    AddLeaveComponent.prototype.getCountUserLeave = function (userId) {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ 'userId': userId }, 'getUserRemainingLeaves').subscribe(function (r) {
            console.log("this is the type wise count");
            console.log(r);
            // this.loader=false
            _this.leaveCountLeft = r['data'];
            _this.currentyear = r['data'][0]['year'];
            // this.currentyear = moment().format('MM YYYY');
            console.log(_this.currentyear);
            console.log("this is the type wise count", _this.leaveCountLeft);
            for (var i = 0; i < _this.leaveCountLeft.length; i++) {
                if (_this.leaveCountLeft[i].year == _this.currentyear) {
                    _this.myLeavLeft.push(_this.leaveCountLeft[i]);
                }
            }
            console.log("this is remaining leaves", _this.myLeavLeft);
        });
        this.loader = false;
    };
    AddLeaveComponent.prototype.apple = function (ruleId) {
        this.form.EndDate = '';
        this.form.StartDate = '';
        this.loader = true;
        console.log(ruleId, this.form);
        var index = this.newArrayList.findIndex(function (x) { return x.ruleId == ruleId; });
        this.form.description = this.newArrayList[index].description;
        this.isDescription = true;
        console.log(this.form);
        for (var i = 0; i <= this.myLeavLeft.length; i++) {
            console.log(this.myLeavLeft[i].leaveTypeID);
            console.log(ruleId);
            console.log(this.myLeavLeft[i].leaveTypeID == ruleId);
            if (this.myLeavLeft[i].leaveTypeID == ruleId) {
                console.log("test");
                console.log(this.myLeavLeft[i].remainingLeaves);
                this.limitdate = this.myLeavLeft[i].remainingLeaves;
                this.leaveName = this.myLeavLeft[i].leaveType;
                console.log(this.limitdate);
                this.loader = false;
                break;
            }
        }
        console.log(this.limitdate);
        if (this.limitdate == 0) {
            this.msg = "You Don't Have Any Pending " + this.leaveName;
            this.alrt.error(this.msg);
            this.iseligible = true;
        }
        else {
            this.iseligible = false;
        }
        console.log("this is limit date", this.limitdate);
    };
    AddLeaveComponent.prototype.setFocus = function (form) {
        console.log(form.controls);
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_4__["isPlatformBrowser"])(this.platformId)) {
                        console.log(key);
                        jquery__WEBPACK_IMPORTED_MODULE_7__('#' + key).focus();
                        jquery__WEBPACK_IMPORTED_MODULE_7__(window).scrollTop(0);
                    }
                    console.log(key);
                    return true;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
    };
    // currentyear:any;
    AddLeaveComponent.prototype.previous = function () {
        var _this = this;
        this.yearSelected = this.yearSelected - 1;
        console.log(this.yearSelected);
        this.db.fetchData({ 'userId': this.userId, 'year': this.yearSelected }, 'getUserYearLeaves').subscribe(function (rep) {
            console.log("this is getYearUser");
            console.log(rep);
            _this.myLeavLeft = rep['data'];
            console.log("this is getYearUser");
            // this.forGettingDatsFunction();
            // this.forGettingDatsFunction();
            _this.loader = false;
        });
    };
    AddLeaveComponent.prototype.next = function () {
        var _this = this;
        this.yearSelected = this.yearSelected + 1;
        console.log(this.yearSelected);
        this.db.fetchData({ 'userId': this.userId, 'year': this.yearSelected }, 'getUserYearLeaves').subscribe(function (rep) {
            console.log("this is getYearUser");
            console.log(rep);
            _this.myLeavLeft = rep['data'];
            console.log("this is getYearUser");
            // this.forGettingDatsFunction();
            // this.forGettingDatsFunction();
            _this.loader = false;
        });
    };
    AddLeaveComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-leave',
            template: __webpack_require__(/*! ./add-leave.component.html */ "./src/app/leave/add-leave/add-leave.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"],
            _angular_common__WEBPACK_IMPORTED_MODULE_4__["DatePipe"],
            src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            Object])
    ], AddLeaveComponent);
    return AddLeaveComponent;
}());



/***/ }),

/***/ "./src/app/leave/editleave/editleave.component.html":
/*!**********************************************************!*\
  !*** ./src/app/leave/editleave/editleave.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\"> \n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n      <img src=\"assets/img/loader.png\" class=\"rotate\">\n    </div>\n  \n<div class=\"middle-container\">\n  <div class=\"page-heading\">\n    <img src=\"assets/img/leave.svg\" class=\"h-icon\">\n    <div class=\"heading-text\">\n      <h2>Leave</h2>\n      <p>Update Leave</p>\n    </div>\n  </div>\n</div>\n<!-- form.StartDate && form.EndDate && form.remark -->\n<form name=\"form\" #f=\"ngForm\" (ngSubmit)=\" f.form.valid && update_leave(form.leaveApplicationId)\" novalidate>\n<div class=\"container-outer\">\n  <div class=\"container\" >\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"sprate-box pt0\">\n          <div class=\"cs-heading\">\n            <h2>Update LEAVE </h2>\n            <!-- <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span> -->\n          </div>\n          <div class=\"from-fields\">\n            \n            <div class=\"row\">\n              <div class=\"col s8 pl0\">\n                <div class=\"row\">\n                  <div class=\"col s12 pl0\">\n                    <!-- <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                          [ngClass]=\"{ 'is-invalid': f.submitted && segment.invalid }\" \n                        <mat-select placeholder=\"Leave Type\" name=\"leaveType\" [(ngModel)]=\"form.leaveType\" #leaveType=\"ngModel\" required>\n                            <mat-option (click)=\"getCount(form.leaveType)\"  [value]=\"a.ruleId\" *ngFor=\"let a of newArrayList\">{{a.subject}}</mat-option>                          \n                        </mat-select>\n                      </mat-form-field>\n\n                      <mat-error *ngIf=\"f.submitted && leaveType.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"leaveType.errors.required\">LeaveType is required</mat-error>\n                        </mat-error>\n                    </div> -->\n                    <div class=\" cs-figure\">\n                      <ul>\n                          <li>\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <span>Leave Type</span>\n                                  <p>{{form.leaveName}}</p>\n                                </div>\n                              </div>\n                            </li>\n                      </ul>\n                    </div>\n                \n                  </div>\n                </div>\n                \n                <div class=\"row\">\n                  <div class=\"col s6 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                          <!---->\n                        <input matInput [matDatepicker]=\"picker\"\n                        placeholder=\"Date From\" name=\"startDate\" (dateChange)=\"checkValid(form.startDate)\" [(ngModel)]=\"form.startDate\" #startDate=\"ngModel\"\n                        [min]='currentDate'\n                        (dateChange)=\"onDateChangeHandler(form.StartDate)\"\n                        required>\n                        <!--   -->\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                      </mat-form-field>\n\n\n                      <mat-error *ngIf=\"f.submitted && startDate.invalid\" class=\"invalid-feedback\">   \n                          <mat-error *ngIf=\"(form.startDate > form.EndDate)\">Enter Date Properlly</mat-error>                      \n                        </mat-error>\n                      <mat-error *ngIf=\"f.submitted && startDate.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"startDate.errors.required\">Start Date is required</mat-error>\n                        </mat-error>\n\n                     \n                    </div>\n                  </div>\n                  \n                  <div class=\"col s6\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput [matDatepicker]=\"pickerone\" placeholder=\"Date To\" name=\"endDate\" [(ngModel)]=\"form.endDate\" #endDate=\"ngModel\" required\n                     \n                        \n                        [min]='form.startDate' [max]=\"lastDate\"\n                        \n                        >\n                        <!-- [min]='form.startDate' [max]=\"lastDate\" -->\n                        <mat-datepicker-toggle matSuffix [for]=\"pickerone\"></mat-datepicker-toggle>\n                        <mat-datepicker #pickerone></mat-datepicker>\n                      </mat-form-field>\n\n                      <mat-error *ngIf=\"f.submitted && endDate.invalid\" class=\"invalid-feedback\">\n                          <!-- <mat-error *ngIf=\"(form.StartDate > form.EndDate)\">Enter Date Properlly</mat-error> -->\n                          <mat-error *ngIf=\"endDate.errors.required\">End-Date is required</mat-error> \n                        </mat-error>\n\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col s12 padding0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input\">\n                              <!-- #remark=\"ngModel\" -->\n                            <textarea matInput placeholder=\"Remark\" class=\"h140\" name=\"remarks\" [(ngModel)]=\"form.remarks\" #remarks=\"ngModel\"  required ></textarea>\n                          </mat-form-field>\n      \n                          <mat-error *ngIf=\"f.submitted && remarks.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"remarks.errors.required\">Remark is required</mat-error>\n                            </mat-error>\n      \n                        </div>\n                      </div>\n                </div>\n              </div>\n\n              <div class=\"col s4 pr0\">\n                <div class=\"role-leave li-border\">\n                  <h2>Role Wise Leave</h2>\n                  <ul>\n                      <li style =\"text-align: right\">\n\n                          <span>Total</span>\n                          <span>Used</span>\n                          <span>Pending</span>\n                      </li>\n                    <li *ngFor=\"let a of myLeavLeft\">\n                      <p >{{a.leaveType}}</p>\n                      <span class=\"counter\" >{{a.totalLeaves}}</span>\n                     \n                      <span class=\"counter\" >{{a.totalLeaves -  a.remainingLeaves}}</span>\n                      <span class=\"counter\" >{{a.remainingLeaves}}</span>\n                     \n                    \n                    </li>\n                   \n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col s12 padding0\">\n            <div class=\"cs-btn fixedd mt13 text-right\">\n              <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\" >Save</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    \n  </div>\n</div>\n</form>\n\n\n</div>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/leave/editleave/editleave.component.scss":
/*!**********************************************************!*\
  !*** ./src/app/leave/editleave/editleave.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlYXZlL2VkaXRsZWF2ZS9lZGl0bGVhdmUuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/leave/editleave/editleave.component.ts":
/*!********************************************************!*\
  !*** ./src/app/leave/editleave/editleave.component.ts ***!
  \********************************************************/
/*! exports provided: EditleaveComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditleaveComponent", function() { return EditleaveComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);





var EditleaveComponent = /** @class */ (function () {
    // leaveApplicationId: any;
    function EditleaveComponent(route, db, router) {
        this.route = route;
        this.db = db;
        this.router = router;
        this.form = {};
        this.currentDate = new Date().toJSON().split('T')[0];
        this.user = {};
        this.loader = false;
        this.editData = {};
        this.limitdate = [];
        this.myLeavLeft = [];
        this.leaveCountLeft = {};
        this.newArrayList = {};
    }
    EditleaveComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.leaveTypeFunction();
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.userRole_name = this.user.data.roleName;
        this.username = this.user.data.userName;
        console.log(this.userType, "&", this.userId, "&", this.username);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.detailed_id = params;
            console.log(_this.detailed_id);
            _this.getCountUserLeave(_this.userId);
            // alert(this.detailed_id);
            // this.getDetail();
        });
    };
    EditleaveComponent.prototype.getDetail = function () {
        var _this = this;
        console.log(this.detailed_id);
        this.loader = true;
        this.db.fetchData({ 'leaveApplicationId': this.detailed_id.id }, 'getAllLeaves').subscribe(function (resp) {
            console.log(resp);
            _this.loader = false;
            _this.form = resp['data'][0];
            console.log("detailed data");
            console.log(_this.form);
            for (var i = 0; i < _this.newArrayList.length; i++) {
                if (_this.newArrayList[i].ruleId == _this.form.leaveType) {
                    _this.form.leaveName = _this.newArrayList[i].subject;
                }
            }
            console.log(_this.form.endDate);
            console.log(_this.form.startDate);
            _this.diff = moment__WEBPACK_IMPORTED_MODULE_4__(_this.form.endDate).diff(moment__WEBPACK_IMPORTED_MODULE_4__(_this.form.startDate), 'days');
            _this.dbDiffrence = _this.diff + 1;
            console.log("detailed data");
        });
    };
    EditleaveComponent.prototype.onDateChangeHandler = function (date) {
        if (this.form.LeaveType == 'other') {
            this.endDate = "";
        }
        else {
            console.log(date);
            var myDate = moment__WEBPACK_IMPORTED_MODULE_4__(date, "YYYY-MM-DD").add(this.limitdate - 1, 'days');
            this.endDate = myDate["_d"];
            console.log(this.endDate);
            return this.endDate;
        }
    };
    EditleaveComponent.prototype.getCountUserLeave = function (userId) {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ 'userId': userId }, 'getUserRemainingLeaves').subscribe(function (r) {
            console.log("this is the type wise count");
            console.log(r);
            _this.loader = false;
            _this.leaveCountLeft = r['data'];
            console.log("this is the type wise count", _this.leaveCountLeft);
            _this.currentyear = moment__WEBPACK_IMPORTED_MODULE_4__().format('YYYY');
            for (var i = 0; i < _this.leaveCountLeft.length; i++) {
                if (_this.leaveCountLeft[i].year == _this.currentyear) {
                    _this.myLeavLeft.push(_this.leaveCountLeft[i]);
                }
            }
            console.log("this is remaining leaves", _this.leaveCountLeft.remainingLeaves);
        });
    };
    EditleaveComponent.prototype.getCount = function (id) {
        console.log(id);
        for (var i = 0; i < this.leaveCountLeft.length; i++) {
            console.log(this.leaveCountLeft[i]);
            if (id == this.leaveCountLeft[i].leaveTypeID) {
                this.leavCount = this.leaveCountLeft[i].remainingLeaves;
            }
        }
        console.log(this.leavCount);
    };
    EditleaveComponent.prototype.checkValid = function (date) {
        this.form.endDate = null;
        var myDate = moment__WEBPACK_IMPORTED_MODULE_4__(date, "YYYY-MM-DD").add(this.leavCount, 'days');
        this.lastDate = myDate["_d"];
        console.log(this.lastDate);
    };
    EditleaveComponent.prototype.update_leave = function (updated_id) {
        // alert(this.form.leaveApplicationId);
        var _this = this;
        this.startDate = moment__WEBPACK_IMPORTED_MODULE_4__(this.form.startDate).format('YYYY-MM-DD');
        this.endDate = moment__WEBPACK_IMPORTED_MODULE_4__(this.form.endDate).format('YYYY-MM-DD');
        console.log(this.startDate);
        console.log(this.endDate);
        this.diffrence = moment__WEBPACK_IMPORTED_MODULE_4__(this.endDate).diff(moment__WEBPACK_IMPORTED_MODULE_4__(this.startDate), 'days');
        console.log(moment__WEBPACK_IMPORTED_MODULE_4__(this.endDate).diff(moment__WEBPACK_IMPORTED_MODULE_4__(this.startDate), 'days'));
        console.log(this.diffrence);
        this.update_diffrence = this.diffrence + 1;
        //  alert("this is save diffrence"+this.update_diffrence);
        console.log(this.form);
        // console.log(this.form);
        if (this.dbDiffrence > this.update_diffrence) {
            this.diffrence = -(this.dbDiffrence - this.update_diffrence);
        }
        else {
            this.diffrence = (this.update_diffrence - this.dbDiffrence);
        }
        var currentDate = moment__WEBPACK_IMPORTED_MODULE_4__().format('YYYY-MM-DD');
        this.loader = true;
        this.db.fetchData({ 'leaveType': this.form.leaveType, 'startDate': this.startDate, 'endDate': this.endDate, 'remarks': this.form.remarks, 'userId': this.userId,
            'numberOfDays': this.diffrence, 'ApplicationDate': currentDate,
            'approvalStatus': 0,
            'leaveApplicationId': this.form.leaveApplicationId
        }, 'modifyLeaveApplication').subscribe(function (r) {
            console.log(r);
            _this.loader = false;
            _this.router.navigate(['/leave-list']);
        });
    };
    EditleaveComponent.prototype.leaveTypeFunction = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({}, 'leave/list').subscribe(function (r) {
            _this.loader = false;
            console.log("=====================================================");
            console.log(r);
            _this.newArrayList = r['data'];
            console.log(_this.newArrayList);
            _this.getDetail();
        });
    };
    EditleaveComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-editleave',
            template: __webpack_require__(/*! ./editleave.component.html */ "./src/app/leave/editleave/editleave.component.html"),
            styles: [__webpack_require__(/*! ./editleave.component.scss */ "./src/app/leave/editleave/editleave.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], EditleaveComponent);
    return EditleaveComponent;
}());



/***/ }),

/***/ "./src/app/leave/leave-detail/leave-detail.component.html":
/*!****************************************************************!*\
  !*** ./src/app/leave/leave-detail/leave-detail.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  <div class=\"middle-container\">\n    \n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/leave-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{allDetailedData.userName}}</h2>\n      </div>\n    </div>\n    <div *ngIf=\"userId==allDetailedData.userID\"  class=\"left-auto\">\n      <div  class=\"cs-btn  text-right\">\n        <div class=\"in-btn\">\n          <button mat-raised-button color=\"accent\" routerLink=\"/editleave/{{allDetailedData.leaveApplicationId}}\"><i class=\"material-icons\">create</i></button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s7\">\n          <div class=\"details-info padding0\">\n            <div class=\"basic-details\">\n              <div class=\"col s12 cs-figure padding0\">\n                <h2>Basic Detail</h2>\n                <ul>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Created Date</span>\n                        <p>{{allDetailedData.applicationDate | date: 'dd-MM-yyyy' }}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Leave Type</span>\n                          <p>{{allDetailedData.leaveTypeName}}</p>\n                        </div>\n                      </div>\n                    </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Start Date</span>\n                        <p>{{allDetailedData.startDate | date: 'dd-MM-yyyy'}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li >\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>End Date</span>\n                        <p>{{allDetailedData.endDate | date: 'dd-MM-yyyy'}}</p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n                <ul class=\"mt15\">\n                  <li style=\"border-left: 1px solid #B29D9D; min-height: 100px;\">\n                    <span>Remark</span>\n                    <p >{{allDetailedData.remarks}}</p>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n          <div class=\"col s5\" *ngIf=\"userRole > 5\" >\n            <div class=\"details-info padding0\">\n              <div class=\"basic-details\">\n                <div class=\"cs-figure\">\n                  <h2>Status </h2>\n                  <ul>\n                    <li style=\"border: 1px solid #B29D9D;\">\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Leave Status</span>\n                          <p *ngIf=\"allDetailedData.approvalStatus==1\" class=\"status pending\">Approved</p>\n                          <p *ngIf=\"allDetailedData.approvalStatus==0\" class=\"status pending\">Pending</p>\n                          <p *ngIf=\"allDetailedData.approvalStatus==2\" class=\"status pending\">Reject</p>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n\n                  <ul class=\"mt15\" *ngIf=\"allDetailedData.approvalStatus==2\">\n                      <li style=\"border: 1px solid #B29D9D; min-height: 100px;\">\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <span>Reason</span>\n                            <p>{{allDetailedData.reason}}</p>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                </div>\n                \n                \n                \n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"userId!=allDetailedData.userID\" class=\"col s5\">\n            <div class=\"details-info padding0\">\n              <div class=\"basic-details\">\n                <div class=\"cs-figure\">\n                  <h2 class=\"pb0\">Update Status </h2>\n                  \n                </div>\n                \n                <form  name=\"form\"   #f=ngForm   (ngSubmit)=\" f.form.valid && update_status(allDetailedData.approvalStatus,allDetailedData.leaveApplicationId)\" novalidate>\n                  <div class=\"from-fields\">\n                    <div class=\"row\">\n                      <div class=\"col s12 padding0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr\">\n                            \n                            <mat-select placeholder=\"Select Status\"  name=\"approvalStatus\" [(ngModel)]=\"allDetailedData.approvalStatus\">\n                              <mat-option [value]=1>Approved</mat-option>\n                              <mat-option [value]=0>Pending</mat-option>\n                              <mat-option [value]=2>Reject</mat-option>\n                            </mat-select>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div *ngIf=\"allDetailedData.approvalStatus == 2 \" class=\"col s12 padding0\">\n                        <div class=\"control-field\">\n                          <mat-form-field   class=\"cs-input infix-bodr8\">\n                            <!-- -->\n                            <textarea    matInput placeholder=\"Reason\" #reason=\"ngModel\" class=\"h70\" name=\"reason\" [(ngModel)]=\"form.reason\" required  ></textarea>\n                          </mat-form-field>\n\n                          <mat-error *ngIf=\"f.submitted && reason.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"reason.errors.required\">Reason of reject is required</mat-error>\n                            </mat-error>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col s12 padding0\">\n                        <div  class=\"cs-btn fixedd mt15 text-right\">\n                          <div class=\"in-btn\">\n                            <button mat-raised-button color=\"accent\" mat-stroked-button [disabled]=\"!allDetailedData.approvalStatus\"  >Save</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n    \n  </div>\n  \n  <div class=\"h50\"></div>\n  \n  "

/***/ }),

/***/ "./src/app/leave/leave-detail/leave-detail.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/leave/leave-detail/leave-detail.component.ts ***!
  \**************************************************************/
/*! exports provided: LeaveDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeaveDetailComponent", function() { return LeaveDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");




var LeaveDetailComponent = /** @class */ (function () {
    function LeaveDetailComponent(route, router, db) {
        this.route = route;
        this.router = router;
        this.db = db;
        this.form = {};
        this.user = {};
        this.loader = false;
        this.from = {};
        // allList:any={};
        //   getUserLeaves()
        //   {
        //     this.db.fetchData({},'getAllLeaves').subscribe((rep)=>{
        //       console.log(rep);
        //      this.allList=rep['data'];
        //      console.log("=====================================list data===========");
        //      console.log(this.allList);   
        //      console.log("=====================================list data===========");
        //     })
        //   }
        this.allDetailedData = {};
    }
    LeaveDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.getUserDetail();
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.userRole_name = this.user.data.roleName;
        this.username = this.user.data.userName;
        console.log(this.userType, "&", this.userId, "&", this.username);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.detailed_id = params;
            console.log(_this.detailed_id);
            _this.getDetail();
        });
    };
    LeaveDetailComponent.prototype.getDetail = function () {
        var _this = this;
        console.log(this.detailed_id);
        // 'leaveApplicationId':this.detailed_id
        // this.db.fetchData({'leaveApplicationId':this.detailed_id},'getUserLeaves').subscribe(resp=>{
        this.loader = true;
        this.db.fetchData({ 'leaveApplicationId': this.detailed_id.id, 'approvalStatus': 3 }, 'getAllLeaves').subscribe(function (resp) {
            console.log(resp);
            _this.loader = false;
            _this.allDetailedData = resp['data'][0];
            console.log("detailed data");
            console.log(_this.allDetailedData);
            console.log("detailed data");
        });
    };
    LeaveDetailComponent.prototype.getUserDetail = function () {
        var _this = this;
        // 'userId': this.userId
        this.loader = true;
        console.log(this.userId);
        this.db.fetchData({}, 'detail/' + this.userId).subscribe(function (resp) {
            console.log(resp);
            _this.loader = false;
            _this.allDetailedData = resp['data'][0];
            console.log("detailed data");
            console.log(_this.allDetailedData);
            console.log("detailed data");
        });
    };
    // for update status functions 
    LeaveDetailComponent.prototype.update_status = function (status, la_id) {
        console.log(status, la_id);
        if (status == 1) {
            this.form.reason = "";
        }
        this.loader = true;
        this.db.fetchData({ approvalStatus: status, 'leaveApplicationId': la_id, reason: this.form.reason }, 'approveLeave').subscribe(function (rep) {
            return console.log(rep);
        });
        this.loader = false;
        this.router.navigate(['/leave-list']);
    };
    LeaveDetailComponent.prototype.edit_detail = function (id) {
        var _this = this;
        // alert(id);
        this.loader = true;
        this.db.fetchData({ 'leaveApplicationId': id }, 'getAllLeaves').subscribe(function (resp) {
            console.log(resp);
            _this.loader = false;
            _this.allDetailedData = resp['data'][0];
            console.log("detailed data");
            console.log(_this.allDetailedData);
            _this.router.navigate(['/add-leave']);
            console.log("detailed data");
        });
        // 
        // this.db.fetchData({'leaveApplicationId':id},'modifyLeaveApplication').subscribe((r)=>{
        //   console.log("this is leaveApplicationId");
        //   console.log(r);
        //   console.log("this is leaveApplicationId");
        // });
    };
    LeaveDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-leave-detail',
            template: __webpack_require__(/*! ./leave-detail.component.html */ "./src/app/leave/leave-detail/leave-detail.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], LeaveDetailComponent);
    return LeaveDetailComponent;
}());



/***/ }),

/***/ "./src/app/leave/leave-list/leave-list.component.html":
/*!************************************************************!*\
  !*** ./src/app/leave/leave-list/leave-list.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- <div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  <div class=\"middle-container pb15\" >\n    <div class=\"page-heading\">\n      <img src=\"assets/img/leave.svg\" class=\"h-icon\">\n      <div class=\"heading-text\" style=\"display: flex; align-items: center; flex-direction: row;\">\n        <h2>Leave List</h2>\n        <div class=\"item-filter ml15\" >\n          <div class=\"item-filter\" >\n            <mat-form-field class=\"wp100\">\n              <mat-select name=\"leaveType\" [(ngModel)]=\"form.leaveType\"  >\n                <mat-option value=\"\" aria-placeholder=\"Select Lead Type\" disabled>Select Lead Type</mat-option>\n                <mat-option  value=\"All Leave\" (click)=\"getAllLeaves()\">All Leave</mat-option>\n                <mat-option  value=\"Today Leave\" (click)=\"MiddelDateLeaves();\">Today Leave</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"left-auto\">\n      <div  class=\"filter-container ml15\">\n        <div (click)=\"clearfilter()\" class=\"filter-btn\">\n          <button mat-button >CLEAR FILTER</button>\n        </div>\n      </div>\n      <div class=\"tabs right-tab\" *ngIf=\"form.leaveType !='Today Leave' \" >\n        <ul >\n          <li><a [ngClass]=\"{'tab-active': leaveStatus==0}\"  (click)=\"leaveStatus= 0; pendingTask()\">PENDING</a></li>\n          <li><a [ngClass]=\"{'tab-active': leaveStatus==1}\"  (click)=\"leaveStatus= 1; approvedTask()\">Approved</a></li>\n          <li><a [ngClass]=\"{'tab-active': leaveStatus==2}\" (click)=\"leaveStatus= 2; RejectTask()\">Reject</a></li>\n        </ul>\n      </div>\n    </div>\n    \n  </div>\n  <div *ngFor=\"let a of rolelistsales1\">\n    <p>{{a.roleName}}</p>\n    <p>{{a.roleCode}}</p>\n    \n  </div>\n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table> \n                  <tr >\n                    <th class=\"w220\" *ngIf=\"userRole == 1 \">Name </th>  \n                    <th class=\"w150\" *ngIf=\"userRole == 1\" > Designation</th>  \n                    <th class=\"w110\" *ngIf=\"userRole == 1\" >Mobile No</th>  \n                    <th class=\"w150\">Type</th> \n                    <th  class=\"w200\">Date Form - To</th>\n                    <th class=\"w80 text-center\">Days</th>\n                    <th class=\"w100\" *ngIf=\"form.leaveType != 'Today Leave'\" >Status</th>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-head bdrt\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w220\">\n                      <div class=\"th-search\">\n                        <input placeholder=\"Select Name\" type=\"text\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"search.name\" (keyup)=\"deginationFilter(leaveStatus)\">\n                      </div>\n                    </th>\n                    <th class=\"w150\">\n                      <div class=\"th-search\">\n                        <mat-select name=\"designation\" [(ngModel)]=\"search.designation\" placeholder=\"--Select--\">\n                          <mat-option value=\"Select Role\"> Select Role</mat-option>\n                          <mat-option  value=\"{{d.designation}}\"   (click)= \"deginationFilter()\" *ngFor=\"let d of designationData \">{{d.designationName}}</mat-option>\n                        </mat-select>\n                      </div>\n                    </th>\n                    <th class=\"w110\" >\n                      &nbsp;\n                    </th>\n                    <th >\n                      <div class=\"th-search\">\n                        <mat-select name=\"leaveType\" [(ngModel)]=\"search.leaveType\" placeholder=\"--Select--\" >\n                          <mat-option value=\"select\">Select </mat-option>\n                          <mat-option  value={{a.ruleId}} *ngFor=\"let a of newArrayList\"   (click)= \"deginationFilter()\" >{{a.subject}}</mat-option>\n                        </mat-select>\n                      </div>\n                    </th>\n                    <th class=\"200\">&nbsp;</th>\n                    <th class=\"w80\">&nbsp;</th>\n                    <th class=\"w100\" *ngIf=\"form.leaveType != 'Today Leave'\">&nbsp;</th>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr>\n                    <td>\n                    </td>\n                    <td>\n                      <mat-select name=\"designation\" [(ngModel)]=\"search.designation\" placeholder=\"--Select--\">\n                        <mat-option value=\"Select Role\"> Select Role</mat-option>\n                        <mat-option  value=\"{{d.designation}}\"   (click)= \"deginationFilter()\" *ngFor=\"let d of designationData \">{{d.designationName}}</mat-option>\n                      </mat-select>\n                    </td>\n                    <td></td>\n                    <td>\n                      <div class=\"item-filter ml15\">\n                        <mat-select name=\"leaveType\" [(ngModel)]=\"search.leaveType\" placeholder=\"--Select--\" >\n                          <mat-option value=\"select\">Select </mat-option>\n                          <mat-option  value={{a.ruleId}} *ngFor=\"let a of newArrayList\"   (click)= \"deginationFilter()\" >{{a.subject}}</mat-option>\n                        </mat-select>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr *ngFor=\"let a of allList;let i=index\">\n                    <td class=\"w220\" *ngIf=\"userRole == 1\">{{a.userName}}  </td> \n                    <td class=\"w150\" *ngIf=\"userRole == 1\">\n                      <span *ngIf=\"a.designation == 1\">VicePresident</span>\n                      <span *ngIf=\"a.designation == 2\">DeputyGeneralManager</span>\n                      <span *ngIf=\"a.designation == 3\">GeneralManager</span>\n                      <span *ngIf=\"a.designation == 4\">AssistantGeneralManager</span>\n                      <span *ngIf=\"a.designation == 5\">SrManager</span>\n                      <span *ngIf=\"a.designation == 6\">Manager</span>\n                      <span *ngIf=\"a.designation == 7\">DeputyManager</span>\n                      <span *ngIf=\"a.designation == 8\">SrExecutive</span>\n                      <span *ngIf=\"a.designation == 9\">Executive</span>\n                      <span *ngIf=\"a.designation == 10\">AssistantManager</span>\n                      <span *ngIf=\"a.designation == 11\">Assistant</span>\n                      <span *ngIf=\"a.designation == 12\">Trainee</span>\n                      <span *ngIf=\"a.designation == 13\">Others</span>\n                    </td>\n                    <td class=\"w110\" *ngIf=\"userRole == 1\" >{{a.mobile}}</td>  \n                    <td ><a class=\"link-btn\" routerLink=\"/leave-detail/{{a.leaveApplicationId}}\"  routerLinkActive=\"active\" >{{a.leaveTypeName}}</a></td>\n                    <td class=\"w200\">{{a.startDate | date:'MMMM d, y'}} to {{a.endDate | date:'MMMM d, y'}}</td>\n                    <td class=\"w80 text-center\">{{a.allLeave}}</td>\n                    <td *ngIf=\"form.leaveType != 'Today Leave'\" class=\"w100\" [ngClass]=\"{'pending':a.approvalStatus==0,'approved':a.approvalStatus==1,'reject':a.approvalStatus==2}\">\n                      <span *ngIf=\"a.approvalStatus==0  &&  form.leaveType != 'Today Leave'\">Pending</span>\n                      <span *ngIf=\"a.approvalStatus==1  &&  form.leaveType != 'Today Leave'\">Approve</span>\n                      <span *ngIf=\"a.approvalStatus==2  &&  form.leaveType != 'Today Leave'\">Reject</span>\n                      <div class=\"action-btns\">\n                        <button mat-button (click)=\"deleteLeaveRequest(a.leaveApplicationId,i)\" class=\"delete\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                      </div>\n                    </td>\n                  </tr>\n                  \n                </table>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" routerLink=\"/add-leave\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n</div>\n\n<div class=\"h50\"></div> -->\n\n<div class=\"main-container\" >\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  \n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/payment_icon.svg\" class=\"h-icon\">\n      <div class=\"heading-text flex-heading\">\n        <div class=\"content\">\n          <h2>Leave</h2>\n          <p>Total Leave List{{leaveList.length}}</p>\n        </div>\n        \n        <div *ngIf=\"userRole!=10\" class=\"item-filter\" >\n          <mat-form-field class=\"wp100\">\n            <mat-select   name=\"leave\" #leave=\"ngModel\" [(ngModel)]=\"leaveFilter.leave\">\n              <mat-option (click)=\"getUserLeave(1,data.approvalStatus)\" [value]=1>My Leave</mat-option>\n              <mat-option (click)=\"getUserLeave(2,data.approvalStatus)\" [value]=2>My junior leave</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div *ngIf=\"leaveFilter.leave==2 && userRole!=10 \" class=\"item-filter\" >\n          <mat-form-field class=\"wp100\">\n            <mat-select   name=\"startDate\" #startDate=\"ngModel\" [(ngModel)]=\"currentDate\" >\n              <mat-option (click)=\"getTodayFilter(1)\" [value]=1>All Leave</mat-option>\n              <mat-option (click)=\"getTodayFilter(2)\" [value]=2>Today leave</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n    <div  class=\"left-auto\">\n      <div *ngIf=\"data.userName ||data.designation||data.startDate|| data.endDate\" class=\"filter-container left-auto\">\n        <div (click)=\"clearfilter()\" class=\"filter-btn\">\n          <button mat-button >CLEAR FILTER</button>\n        </div>\n      </div>\n      <div *ngIf=\"leaveFilter.leave==1\" class=\"filter-container left-auto\">\n        <div (click)=\"getRemainingLeave()\" class=\"filter-btn\">\n          <button mat-button >Remaining Leave</button>\n        </div>\n      </div>\n      <div class=\"tabs right-tab none-af\">\n        <ul>\n          <li><a class=\"pending\" [ngClass]=\"{'tab-active':data.approvalStatus==0}\" (click)=\"getUserLeave(leaveFilter.leave,0)\" >PENDING</a></li>\n          <li><a class=\"approved\" [ngClass]=\"{'tab-active':data.approvalStatus==1}\" (click)=\"getUserLeave(leaveFilter.leave,1)\" >APPROVED</a></li>\n          <li><a class=\"reject\" [ngClass]=\"{'tab-active':data.approvalStatus==2}\" (click)=\"getUserLeave(leaveFilter.leave,2)\" >REJECT</a></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  \n  \n  \n  <div class=\"container-outer pt0\">\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"cs-table left-right-20\">\n          \n          <div class=\"sticky-head\">\n            <div class=\"table-head\">\n              <table class=\"sno-border\">\n                <tr>\n                  <th  class=\"w30\">&nbsp;</th>\n                  <th class=\"w160\">Date</th>\n                  <th>User Name</th>\n                  <th class=\"w180\">Designation</th>\n                  <th class=\"w180\">Leave Type</th>\n                  <th class=\"w150\">Date From</th>\n                  <th class=\"w150\">Date To</th>\n                  <th class=\"w150 text-center\">No of Day</th>\n                  <th class=\"w150\">Status</th>\n                </tr>\n              </table>\n            </div>\n            <div class=\"table-head bdrt\">\n              <table class=\"sno-border\">\n                <tr>\n                  <th class=\"w30\">&nbsp;</th>\n                  <th class=\"w160\">\n                    &nbsp;\n                  </th>\n                  <th>\n                    <div class=\"th-search\">\n                      <input placeholder=\"Select Name\" type=\"text\" name=\"userName\" #userName=\"ngModel\" [(ngModel)]=\"data.userName\" (keyup)=\"getUserLeave(leaveFilter.leave,data.approvalStatus)\">\n                    </div>\n                  </th>\n                  <th class=\"w180\">\n                    <div class=\"th-search\">\n                      <mat-select name=\"designation\" [(ngModel)]=\"data.designation\" placeholder=\"--Select--\">\n                        <mat-option value=\"0\" (click)= \"getUserLeave(leaveFilter.leave,data.approvalStatus)\">All Role</mat-option>\n                        <mat-option  value=\"{{d.designation}}\"   (click)= \"getUserLeave(leaveFilter.leave,data.approvalStatus)\" *ngFor=\"let d of designationData \">{{d.designationName}}</mat-option>\n                      </mat-select>\n                    </div>\n                  </th>\n                  <th class=\"w180\">&nbsp;</th>\n                  <th class=\"w150\">\n                      <div class=\"th-search padding0\" >\n                          <mat-form-field class=\"wp100 toggle-date-picker\">\n                            <input matInput (dateChange)=\"getUserLeave(leaveFilter.leave,data.approvalStatus)\" name=\"startDate\" [(ngModel)]=\"data.startDate\" [matDatepicker]=\"picker1\" >\n                            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                            <mat-datepicker  #picker1></mat-datepicker>\n                          </mat-form-field>\n                        </div>\n                  </th>\n                  <th class=\"w150\">\n                      <div class=\"th-search padding0\" >\n                          <mat-form-field class=\"wp100 toggle-date-picker\">\n                            <input matInput (dateChange)=\"getUserLeave(leaveFilter.leave,data.approvalStatus)\" name=\"endDate\" [(ngModel)]=\"data.endDate\" [min]=\"data.startDate\"[matDatepicker]=\"picker\" >\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker  #picker></mat-datepicker>\n                          </mat-form-field>\n                        </div>\n                    </th>\n                  <th class=\"w150\">&nbsp;</th>\n                  <th class=\"w150\">&nbsp;</th>\n                </tr>\n              </table>\n            </div> \n          </div>\n          \n          \n          <div class=\"table-container\">\n            <div class=\"table-content\">\n              <table class=\"sno-border\">\n                <tr *ngFor=\"let leave of leaveList;let i=index\">\n                  <td class=\"w30\">{{i+1}}</td>\n                  <td class=\"w160\"><a class=\"link-btn\" mat-button>{{leave.applicationDate | date :'EEEE, MMMM d, y'}}</a></td>\n                  <td>{{leave.userName}}</td>\n                  <td>{{leave.leaveTypeName}}</td>\n                  <td class=\"w180\">\n                    <span *ngIf=\"leave.designation == 1\">VicePresident</span>\n                    <span *ngIf=\"leave.designation == 2\">DeputyGeneralManager</span>\n                    <span *ngIf=\"leave.designation == 3\">GeneralManager</span>\n                    <span *ngIf=\"leave.designation == 4\">AssistantGeneralManager</span>\n                    <span *ngIf=\"leave.designation == 5\">SrManager</span>\n                    <span *ngIf=\"leave.designation == 6\">Manager</span>\n                    <span *ngIf=\"leave.designation == 7\">DeputyManager</span>\n                    <span *ngIf=\"leave.designation == 8\">SrExecutive</span>\n                    <span *ngIf=\"leave.designation == 9\">Executive</span>\n                    <span *ngIf=\"leave.designation == 10\">AssistantManager</span>\n                    <span *ngIf=\"leave.designation == 11\">Assistant</span>\n                    <span *ngIf=\"leave.designation == 12\">Trainee</span>\n                    <span *ngIf=\"leave.designation == 13\">Others</span>\n                  </td>\n                  <td class=\"w150\">{{leave.startDate|date:'MMMM d, y'}}</td>\n                  <td class=\"w150\">{{leave.endDate|date:'MMMM d, y'}} </td>\n                  <td class=\"w150 text-center\">{{leave.allLeave}}</td>\n                  <td  class=\"w150 txt-center\" [ngClass]=\"{'pending':leave.approvalStatus==0,'approved':leave.approvalStatus==1,'reject':leave.approvalStatus==2}\">\n                    <span *ngIf=\"leave.approvalStatus==0\">Pending</span>\n                    <span *ngIf=\"leave.approvalStatus==1\">Approve</span>\n                    <span *ngIf=\"leave.approvalStatus==2\" >Reject</span>\n                    <div class=\"action-btns\">\n                      <a mat-button class=\"view\"  routerLink=\"/leave-detail/{{leave.leaveApplicationId}}\" routerLinkActive=\"active\"><i class=\"material-icons\">assignment_turned_in</i>View</a>\n                      <button *ngIf=\"data.approvalStatus==0\" mat-button (click)=\"deleteLeaveRequest(leave.leaveApplicationId,i)\" class=\"delete\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"data-not-available\" *ngIf=\"div\">\n    <div class=\"outer\">\n      <div class=\"iinear\">\n        <div class=\"figure\" matRipple>\n          <div class=\"header\">\n            <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n          </div>\n          \n          <div class=\"description\">\n            <div class=\"cs-heading\">\n              <h2>No Leave of Any User</h2>\n            </div>\n            <div class=\"img\">\n              <i class=\"material-icons\">error_outline</i>\n            </div>\n            <div class=\"psc\">\n              <p>data not available</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" routerLink=\"/add-leave\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/leave/leave-list/leave-list.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/leave/leave-list/leave-list.component.ts ***!
  \**********************************************************/
/*! exports provided: LeaveListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeaveListComponent", function() { return LeaveListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _remaining_leave_remaining_leave_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../remaining-leave/remaining-leave.component */ "./src/app/leave/remaining-leave/remaining-leave.component.ts");






// import { log } from 'util';
var LeaveListComponent = /** @class */ (function () {
    function LeaveListComponent(db, dialog) {
        this.db = db;
        this.dialog = dialog;
        // leaveType:string = "today" 
        // leaveType:string= "today";
        this.form = {};
        this.user = {};
        this.data = {};
        this.loader = false;
        this.div = false;
        this.show = false;
        this.buttonName = 'Show';
        this.designationData = [];
        this.leaveFilter = {};
        this.leaveList = [];
        this.designationData = [
            { designationName: 'Vice President', designation: 1 },
            { designationName: 'Deputy General Manager', designation: 2 },
            { designationName: 'General Manager', designation: 3 },
            { designationName: 'Assistant General Manager', designation: 4 },
            { designationName: 'Sr Manager', designation: 5 },
            { designationName: 'Manager', designation: 6 },
            { designationName: 'Deputy Manager', designation: 7 },
            { designationName: 'Sr Executive', designation: 8 },
            { designationName: 'Executive', designation: 9 },
            { designationName: 'Assistant Manager', designation: 10 },
            { designationName: 'Assistant', designation: 11 },
            { designationName: 'Trainee', designation: 12 },
            { designationName: 'Others', designation: 13 }
        ];
        this.data.approvalStatus = 0;
    }
    //  loader:any=false;
    LeaveListComponent.prototype.ngOnInit = function () {
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.userRole_name = this.user.data.roleName;
        this.username = this.user.data.userName;
        this.superAdmin = this.user.data.superAdmin;
        this.userType = this.user.data.userType;
        if (this.userRole != 10) {
            this.leaveFilter.leave = 2;
        }
        else {
            this.leaveFilter.leave = 1;
        }
        if (this.userId) {
            this.getUserLeave(this.leaveFilter.leave, this.data.approvalStatus);
        }
    };
    LeaveListComponent.prototype.getUserLeave = function (leaveType, leaveStatus) {
        var _this = this;
        if (this.data.startDate) {
            this.data.startDate = moment__WEBPACK_IMPORTED_MODULE_3__(this.data.startDate).format('YYYY-MM-DD');
            this.data.endDate = moment__WEBPACK_IMPORTED_MODULE_3__(this.data.startDate).format('YYYY-MM-DD');
        }
        else {
            this.data.startDate = undefined;
        }
        if (this.data.endDate) {
            this.data.endDate = moment__WEBPACK_IMPORTED_MODULE_3__(this.data.endDate).format('YYYY-MM-DD');
        }
        else {
            this.data.endDate = undefined;
        }
        this.div = false;
        this.leaveList = [];
        this.loader = true;
        this.data.approvalStatus = leaveStatus;
        if (leaveType == 1) {
            this.url = "getAllLeaves";
            this.currentDate = undefined;
            this.data.userID = this.userId;
        }
        else if (leaveType == 2) {
            this.currentDate = 1;
            this.url = "GetAllAssignedLeaveRequests";
            this.data.userID = this.userId;
        }
        this.db.fetchData(this.data, this.url).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['message'] == 'Success') {
                _this.leaveList = result['data'];
                for (var i = 0; i < _this.leaveList.length; i++) {
                    console.log("test");
                    _this.leaveList[i].allLeave = (moment__WEBPACK_IMPORTED_MODULE_3__(_this.leaveList[i].endDate).diff(moment__WEBPACK_IMPORTED_MODULE_3__(_this.leaveList[i].startDate), "days")) + 1;
                }
            }
            if (_this.leaveList.length == 0) {
                _this.div = true;
            }
        });
    };
    // currentDate:any;
    LeaveListComponent.prototype.getTodayFilter = function (dateType) {
        if (dateType == 1) {
            this.data.startDate = undefined;
            this.data.endDate = undefined;
        }
        else {
            this.data.startDate = moment__WEBPACK_IMPORTED_MODULE_3__().format('YYYY-MM-DD');
            this.data.endDate = moment__WEBPACK_IMPORTED_MODULE_3__().format('YYYY-MM-DD');
        }
        this.getUserLeave(this.leaveFilter.leave, this.data.approvalStatus);
    };
    LeaveListComponent.prototype.clearfilter = function () {
        this.data.userName = undefined;
        this.data.designation = undefined;
        this.data.startDate = undefined;
        this.data.endDate = undefined;
        this.getUserLeave(this.leaveFilter.leave, this.data.approvalStatus);
    };
    LeaveListComponent.prototype.deleteLeaveRequest = function (id) {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ leaveApplicationId: id }, "deleteLeaveRequest").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['message'] == 'Success') {
                _this.getUserLeave(_this.leaveFilter.leave, _this.data.approvalStatus);
            }
        });
    };
    LeaveListComponent.prototype.getRemainingLeave = function () {
        var dialogRef = this.dialog.open(_remaining_leave_remaining_leave_component__WEBPACK_IMPORTED_MODULE_5__["RemainingLeaveComponent"], {
            width: '500px',
            data: {
                userId: this.userId
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
        });
    };
    LeaveListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-leave-list',
            template: __webpack_require__(/*! ./leave-list.component.html */ "./src/app/leave/leave-list/leave-list.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"]])
    ], LeaveListComponent);
    return LeaveListComponent;
}());



/***/ }),

/***/ "./src/app/leave/remaining-leave/remaining-leave.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/leave/remaining-leave/remaining-leave.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"col s4 pr0\">\n  <div class=\"role-leave li-border\">\n    <h2> Leave Info \n    </h2>\n    <ul>\n        <li style =\"text-align: right\">\n\n            <span>Total</span>\n            <span>Used</span>\n            <span>Pending</span>\n        </li>\n\n      <li *ngFor=\"let a of leaveList\">                          \n        <p   >{{a.leaveType}}</p>\n        <span  class=\"counter\">{{a.totalLeaves}}</span>\n        <span  class=\"counter\">{{ a.totalLeaves - a.remainingLeaves}}</span>\n        <span  class=\"counter\">{{a.remainingLeaves}}  </span>\n      </li>\n     \n    </ul>\n  </div>\n</div>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button [mat-dialog-close]=\"false\" color=\"warn\">Close</button>\n</mat-dialog-actions>"

/***/ }),

/***/ "./src/app/leave/remaining-leave/remaining-leave.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/leave/remaining-leave/remaining-leave.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlYXZlL3JlbWFpbmluZy1sZWF2ZS9yZW1haW5pbmctbGVhdmUuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/leave/remaining-leave/remaining-leave.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/leave/remaining-leave/remaining-leave.component.ts ***!
  \********************************************************************/
/*! exports provided: RemainingLeaveComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemainingLeaveComponent", function() { return RemainingLeaveComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);





var RemainingLeaveComponent = /** @class */ (function () {
    function RemainingLeaveComponent(data, dialog, service) {
        this.data = data;
        this.dialog = dialog;
        this.service = service;
        this.leaveList = [];
        console.log(data);
        this.userId = data['userId'];
        if (this.userId) {
            this.getRemainingLeave();
        }
    }
    RemainingLeaveComponent.prototype.ngOnInit = function () {
    };
    RemainingLeaveComponent.prototype.getRemainingLeave = function () {
        var _this = this;
        this.service.fetchData({ 'userId': this.userId }, 'getUserRemainingLeaves').subscribe(function (result) {
            console.log(result);
            if (result['message'] == 'Success') {
                var leaveArray = result['data'];
                _this.currentyear = result['data'][0]['year'];
                _this.currentyear = moment__WEBPACK_IMPORTED_MODULE_4__().format('YYYY');
                console.log(_this.currentyear);
                for (var i = 0; i < leaveArray.length; i++) {
                    if (leaveArray[i].year == _this.currentyear) {
                        _this.leaveList.push(leaveArray[i]);
                    }
                }
            }
        });
    };
    RemainingLeaveComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-remaining-leave',
            template: __webpack_require__(/*! ./remaining-leave.component.html */ "./src/app/leave/remaining-leave/remaining-leave.component.html"),
            styles: [__webpack_require__(/*! ./remaining-leave.component.scss */ "./src/app/leave/remaining-leave/remaining-leave.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], RemainingLeaveComponent);
    return RemainingLeaveComponent;
}());



/***/ }),

/***/ "./src/app/local-storage.service.ts":
/*!******************************************!*\
  !*** ./src/app/local-storage.service.ts ***!
  \******************************************/
/*! exports provided: sessionStorage, LocalStorageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sessionStorage", function() { return sessionStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageService", function() { return LocalStorageService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");






var sessionStorage = /** @class */ (function () {
    function sessionStorage(route, router, service, dialog) {
        this.route = route;
        this.router = router;
        this.service = service;
        this.dialog = dialog;
        this.loading = false;
        this.user = {};
    }
    sessionStorage.prototype.ngOnInit = function () {
        this.user.st_log = false;
        console.log(this.user);
    };
    sessionStorage.prototype.getSe = function () {
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        var expirationTime = this.user.expirationTime;
        var currentTime = new Date().getTime();
        console.log(expirationTime, currentTime);
        if (currentTime > expirationTime) {
            this.user = {};
            this.user.st_log = false;
            this.service.can_active = '';
            this.service.datauser = {};
            localStorage.removeItem('user');
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(this.user);
    };
    sessionStorage.prototype.logoutSession = function () {
        this.user = {};
        this.user.st_log = false;
        this.service.can_active = '';
        this.service.datauser = {};
        localStorage.removeItem('user');
    };
    sessionStorage = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({ providedIn: 'root' }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], sessionStorage);
    return sessionStorage;
}());

var LocalStorageService = /** @class */ (function () {
    function LocalStorageService() {
    }
    return LocalStorageService;
}());



/***/ }),

/***/ "./src/app/login/login.component.html":
/*!********************************************!*\
  !*** ./src/app/login/login.component.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"login\">\n  <div class=\"login-container\">\n\n  <div *ngIf=\"loading\"> \n      <div class=\"cs-loader pl0\">\n        <img src=\"assets/img/loader.png\" class=\"rotate\"> \n      </div>\n  </div>\n\n    <div class=\"login-left\">\n      <div class=\"outer\">\n        <div class=\"inner\">\n          <div class=\"project-name\">\n            <ul>\n              <li>\n                <div class=\"digit-box\">\n                 <h2>Konnect</h2>\n                </div> \n              </li>\n            </ul>\n            <p>Stay Informed And Stay Ahead</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <form (ngSubmit)=\"f.valid && login()\" #f=\"ngForm\" >\n\n    <div class=\"login-right\">\n     <div class=\"outer\">\n       <div class=\"inner\">\n        <div class=\"login-form\" [@routerTransition]>\n          <div class=\"form-logo\">\n            <!-- <img src=\"assets/img/company_logo.svg\"> -->\n            <img src=\"assets/img/theme/kenshjn/logo.svg\">\n          </div>\n          <div class=\"short-description\">\n            <p>Please enter your username and password to login.</p>\n          </div>\n\n          <div class=\"form\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"example-full-width\">\n                <input matInput placeholder=\"Name\" name=\"username\" [(ngModel)]=\"data.username\" #username=\"ngModel\" required>\n                <i class=\"material-icons input-icon\">person</i>\n              </mat-form-field>\n            </div>\n            <div class=\"control-field\">\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"password\" name=\"password\" [(ngModel)]=\"data.password\" #password=\"ngModel\" matInput placeholder=\"Password\" required>\n                <i class=\"material-icons input-icon\">vpn_key</i>\n              </mat-form-field>\n            </div>\n\n\n            <div class=\"cs-btn text-left mt30 fixedd140\">\n              <div class=\"in-btn \">\n                <button mat-raised-button  matTooltipPosition=\"below\" matTooltip=\"Login\" class=\"login-btn\" style=\"background: #00A0C1;\">Login</button>\n              </div>\n            </div>\n          </div>\n        </div>\n       </div>\n     </div>\n     <!-- <p class=\"bootom-text\">Powered by Abacusdesk</p> -->\n    </div>\n    </form>\n  </div>\n</div>\n"

/***/ }),

/***/ "./src/app/login/login.component.ts":
/*!******************************************!*\
  !*** ./src/app/login/login.component.ts ***!
  \******************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var LoginComponent = /** @class */ (function () {
    function LoginComponent(service, ses, router, route, dialog) {
        this.service = service;
        this.ses = ses;
        this.router = router;
        this.route = route;
        this.dialog = dialog;
        this.data = {};
        this.loading = false;
        this.user = {};
    }
    LoginComponent.prototype.ngOnInit = function () {
    };
    LoginComponent.prototype.login = function () {
        var _this = this;
        this.loading = true;
        console.log(this.data);
        this.nexturl = this.route.snapshot.queryParams['returnUrl'] || '/lead-list';
        this.service.login(this.data, 'login')
            .subscribe(function (data) {
            console.log(data);
            setTimeout(function () {
                _this.loading = false;
            }, 1000);
            if (data) {
                _this.user = data;
                console.log(_this.user);
                _this.user.st_log = true;
                _this.user.expirationTime = (new Date().getTime()) + 60000 * 360;
                localStorage.setItem('user', JSON.stringify(_this.user));
                console.log(_this.user);
                console.log(_this.user.token);
                localStorage.removeItem('accessModuleData');
                if (_this.user.data && !_this.user.data.superAdmin) {
                    _this.service.fileData('', 'admin/access/' + _this.user['data']['userId']).subscribe(function (responseData) {
                        console.log(responseData);
                        localStorage.setItem('accessModuleData', JSON.stringify(responseData['data']));
                        console.log(_this.nexturl);
                        if (_this.user.data.userType == 1) {
                            _this.router.navigate(['/dashboard/']);
                        }
                        else if (_this.user.data.role == 12) {
                            _this.router.navigate(['/distribution-detail/' + _this.user.data.distributerNetwork['networkId']]);
                        }
                        else if (_this.user.data.userType == 2) {
                            _this.router.navigate(['/dashboard/']);
                        }
                        else {
                            _this.router.navigate(['/lead-list']);
                        }
                        //   else if(this.userdata)
                        //   {
                        //       this.router.navigate(['/lead-list']);
                        //   }
                        // this.dbModuleData = responseData['data'];
                        // this.moduleAssignedEdit = false;
                        // this.system_detail = response;
                        // this.systemdata=this.system_detail.data;
                    }, function (error) {
                        console.log(error);
                    });
                }
                else {
                    localStorage.setItem('accessModuleData', '');
                    _this.router.navigate(['/lead-list']);
                }
            }
            else {
                _this.dialog.error('Please check your Username and Password');
            }
        }, function (error) {
            _this.loading = false;
            console.log(error);
            _this.dialog.error('Invalid login credentials');
        });
    };
    LoginComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-login',
            template: __webpack_require__(/*! ./login.component.html */ "./src/app/login/login.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToRight"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _local_storage_service__WEBPACK_IMPORTED_MODULE_4__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], LoginComponent);
    return LoginComponent;
}());



/***/ }),

/***/ "./src/app/master-tab-list/master-tab-list/master-tab-list.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/master-tab-list/master-tab-list/master-tab-list.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"master-tab\" >\n    <ul>\n      <li routerLink=\"/product-list\" routerLinkActive=\"active\"><a>Products</a></li>\n      <li *ngIf=\"userRole==1\" routerLink=\"/sale-user-list\" routerLinkActive=\"active\"><a>Users</a></li>\n      <li *ngIf=\"userRole==1\" routerLink=\"/territory-list\" routerLinkActive=\"active\"><a>Postal / Territory Master</a></li>\n      <li *ngIf=\"userRole!-3\" routerLink=\"/gift-list\" routerLinkActive=\"active\"><a>POP & Gift</a></li>\n      <li *ngIf=\"userRole!=3\" routerLink=\"/leave-rule-list\" routerLinkActive=\"active\"><a>Leaves & Holidays</a></li>\n      <li  *ngIf=\"userType!=3\" routerLink=\"/annoucement-list\" routerLinkActive=\"active\"><a>Announcement</a></li>\n    </ul>\n  </div>\n  "

/***/ }),

/***/ "./src/app/master-tab-list/master-tab-list/master-tab-list.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/master-tab-list/master-tab-list/master-tab-list.component.ts ***!
  \******************************************************************************/
/*! exports provided: MasterTabListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MasterTabListComponent", function() { return MasterTabListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var MasterTabListComponent = /** @class */ (function () {
    function MasterTabListComponent() {
        this.user = {};
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
    }
    MasterTabListComponent.prototype.ngOnInit = function () {
    };
    MasterTabListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-master-tab-list',
            template: __webpack_require__(/*! ./master-tab-list.component.html */ "./src/app/master-tab-list/master-tab-list/master-tab-list.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], MasterTabListComponent);
    return MasterTabListComponent;
}());



/***/ }),

/***/ "./src/app/master-tab/master-tab/master-tab.component.html":
/*!*****************************************************************!*\
  !*** ./src/app/master-tab/master-tab/master-tab.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"master-tab\">\n  <ul>\n    <!-- <li routerLink=\"/add-product\" routerLinkActive=\"active\"><a>Products</a></li> -->\n    <li routerLink=\"/user-add\" routerLinkActive=\"active\"><a>Users</a></li>\n    <li routerLink=\"/territory-add\" routerLinkActive=\"active\"><a>Postal / Territory Master</a></li>\n    <li routerLink=\"/pop_and_gift\" routerLinkActive=\"active\"><a>POP & Gift</a></li>\n    <li routerLink=\"/add-leave-rules\" routerLinkActive=\"active\"><a>Leaves & Holidays</a></li>\n    <li routerLink=\"/add-annoucement\" routerLinkActive=\"active\"><a>Announcement</a></li>\n  </ul>\n</div>\n"

/***/ }),

/***/ "./src/app/master-tab/master-tab/master-tab.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/master-tab/master-tab/master-tab.component.ts ***!
  \***************************************************************/
/*! exports provided: MasterTabComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MasterTabComponent", function() { return MasterTabComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var MasterTabComponent = /** @class */ (function () {
    function MasterTabComponent() {
    }
    MasterTabComponent.prototype.ngOnInit = function () {
    };
    MasterTabComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-master-tab',
            template: __webpack_require__(/*! ./master-tab.component.html */ "./src/app/master-tab/master-tab/master-tab.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], MasterTabComponent);
    return MasterTabComponent;
}());



/***/ }),

/***/ "./src/app/material.ts":
/*!*****************************!*\
  !*** ./src/app/material.ts ***!
  \*****************************/
/*! exports provided: MaterialModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaterialModule", function() { return MaterialModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");



var MaterialModule = /** @class */ (function () {
    function MaterialModule() {
    }
    MaterialModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatButtonModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatCheckboxModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatGridListModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatFormFieldModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatInputModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatMenuModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatRippleModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatAutocompleteModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSelectModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginatorModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDividerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatRadioModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDatepickerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatNativeDateModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatProgressSpinnerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTabsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTooltipModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSlideToggleModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatExpansionModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatChipsModule"]
            ],
            exports: [
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatButtonModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatCheckboxModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatGridListModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatFormFieldModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatInputModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatMenuModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatRippleModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatAutocompleteModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSelectModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginatorModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDividerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatRadioModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDatepickerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatNativeDateModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatProgressSpinnerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTabsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTooltipModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSlideToggleModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatExpansionModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatChipsModule"]
            ],
        })
    ], MaterialModule);
    return MaterialModule;
}());



/***/ }),

/***/ "./src/app/navigation/navigation.component.html":
/*!******************************************************!*\
  !*** ./src/app/navigation/navigation.component.html ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"navigation\">\n    <div class=\"menu\">\n        <ul *ngIf=\"userType == '1'\">\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"userType!=3\">\n                <a routerLink=\"/dashboard\" routerLinkActive=\"active\" >Dashboard <img src=\"assets/img/dashboard_icon.svg\" class=\"nav-icon h18\"></a>\n            </li>\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][0].show) || (user.data.userType == '2'))\">\n                <a routerLink=\"/lead-list\" routerLinkActive=\"active\" >Leads<img src=\"assets/img/leads_icon.svg\" class=\"nav-icon\"><span class=\"nav-counter orange-count\">{{service.leadCount}}</span></a>\n            </li>\n            <li *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][1].show) || (userType==2))\">\n                <a  routerLink=\"/distribution-list\" routerLinkActive=\"active\" (click)=\"toggleDropdown()\" id=\"distributionNetwork\">Distributor <img src=\"assets/img/distribution_icon.svg \" class=\"nav-icon h23\">\n                    <span class=\"nav-counter sub-conter green-count\">{{service.distributorCount}}</span> \n                </a>\n                <!-- <ul>\n                    <li>\n                        <a routerLink=\"/distribution-list\" routerLinkActive=\"active\">\n                            Distributors\n                            <i class=\"material-icons\">keyboard_arrow_right</i>   \n                            <span class=\"sub-conter green-count\">{{distributorCount}}</span> \n                        </a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/wholesaler-list\" routerLinkActive=\"active\">\n                            Wholesellers\n                            <i class=\"material-icons\">keyboard_arrow_right</i> \n                            <span class=\"sub-conter orange-count\">{{wholeSellerCount}}</span> \n                        </a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/retailer-list\" routerLinkActive=\"active\">\n                            Retailers\n                            <i class=\"material-icons\">keyboard_arrow_right</i> \n                            <span class=\"sub-conter blue-count\">{{retailerCount}}</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/engine-list\" routerLinkActive=\"active\">\n                            Reconditioners\n                            <i class=\"material-icons\">keyboard_arrow_right</i> \n                            <span class=\"sub-conter purple-count\">{{reconditionerCount}}</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/mechanic-list\" routerLinkActive=\"active\">\n                            Mechanics\n                            <i class=\"material-icons\">keyboard_arrow_right</i>\n                            <span class=\"sub-conter red-count\">{{mechanicCount}}</span> \n                        </a>\n                    </li>\n                </ul> -->\n            </li>\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][3].show) || (userType==2) || (userType==3))\">\n                <a routerLink=\"/order-list\" routerLinkActive=\"active\" >Orders <img src=\"assets/img/order_icon.svg\" class=\"nav-icon h24\">\n                    <span class=\"nav-counter green-count\">{{ service.counterArray.orderCount}}</span>\n                </a>\n            </li>\n            <!-- <li *ngIf=\"userRole==1\">\n                <a >Invoice <img src=\"assets/img/invoice_icon.svg\" class=\"nav-icon h22\"></a>\n            </li> -->\n            <!-- <li *ngIf=\"userRole==1\">\n                <a >Payments <img src=\"assets/img/payment_icon.svg\" class=\"nav-icon h22\"></a>\n            </li> -->\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (userType == 1 && user.data?.role != 1) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][2].show) || (userType==2))\">\n                <a routerLink=\"/task-list\" routerLinkActive=\"active\" >Tasks<img src=\"assets/img/task.svg\" class=\"nav-icon h22\">\n                    <span class=\"nav-counter blue-count\">{{service.counterArray.taskCount}}</span> \n                </a>\n            </li>\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][7].show) || (userType==2) || (userType==1))\" >\n                <a routerLink=\"/checkin-list\" routerLinkActive=\"active\">DVR<img src=\"assets/img/activity.svg\" class=\"nav-icon h19\"></a>\n            </li>\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][8].show) || (userType==2))\">\n                <a routerLink=\"/followup-list\" routerLinkActive=\"active\" >Follow Ups<img src=\"assets/img/folowup.svg\" class=\"nav-icon h23\">\n                    <span class=\"nav-counter green-count\">{{service.counterArray.followUpCount}}</span> \n                </a>\n            </li>\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][4].show) || (userType==2))\">\n                <a routerLink=\"/list-travel\" routerLinkActive=\"active\" >Travel Plans <img src=\"assets/img/travel.svg\" class=\"nav-icon h22\"><span class=\"nav-counter green-count\">{{service.counterArray.travelPlanCount}}</span></a>\n            </li>\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][6].show) || (userType==2) || (userType==3))\" >\n                <a  routerLink=\"/concern-list\" routerLinkActive=\"active\" >Customer Concerns <img src=\"assets/img/concern.svg\" class=\"nav-icon h23\"> <span class=\"nav-counter orange-count\">{{service.counterArray.concernCount}}</span></a>\n            </li>\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][5].show) || (userType==2))\">\n                <a routerLink=\"/expense-list\" routerLinkActive=\"active\" >Expenses <img src=\"assets/img/payment_icon.svg\" class=\"nav-icon h23\"><span class=\"nav-counter blue-count\">{{service.counterArray.expenseCount}}</span></a>\n            </li>\n            <li>\n                <a routerLink=\"/pop-and-gift-distributor-list\" routerLinkActive=\"active\">\n                    Pop & Gift Orders\n                    <img src=\"assets/img/gift.svg\" class=\"nav-icon h20\">\n                    <span class=\"nav-counter orange-count\">{{service.counterArray.popOrderCount}}</span>\n                </a>\n            </li>\n            <li>\n                <a routerLink=\"/leave-list\" routerLinkActive=\"active\" >Leave Application<img src=\"assets/img/leave.svg\" class=\"nav-icon  h20\"></a>\n            </li>\n            \n            <li (click)=\"navBarModuleHandler()\">\n                <a routerLink=\"/vendor-list\" routerLinkActive=\"active\" >Vendor<img src=\"assets/img/vendor.svg\" class=\"nav-icon  h20\"></a>\n            </li>\n            \n            <li (click)=\"navBarModuleHandler()\">\n                <a routerLink=\"/purchase-order-list\" routerLinkActive=\"active\" >Purchase Order<img src=\"assets/img/order_icon.svg\" class=\"nav-icon  h24\"></a>\n            </li>\n            \n            <li (click)=\"navBarModuleHandler()\">\n                <a routerLink=\"/scheme-list\" routerLinkActive=\"active\" >Schemes<img src=\"assets/img/scheme.svg\" class=\"nav-icon  h23\"></a>\n            </li>\n\n            <li *ngIf=\"((user.data.role == 1 && user.data?.superAdmin) || (!user.data.superAdmin && accessModuleData['moduleAccesses'][9].show) || (userType==2))\" class=\"dropdown\">\n                <a (click)=\"toggleDropdown()\" id=\"masters\">Masters <img src=\"assets/img/master_icon.svg\" class=\"nav-icon h23\">\n                </a>\n                <ul>\n                    <li>\n                        <a routerLink=\"/product-list\" routerLinkActive=\"active\">\n                            Products\n                            <i class=\"material-icons\">keyboard_arrow_right</i>   \n                        </a>\n                    </li>\n                    <li *ngIf=\"userType==1\">\n                        <a routerLink=\"/sale-user-list\" routerLinkActive=\"active\">\n                            Users\n                            <i class=\"material-icons\">keyboard_arrow_right</i> \n                        </a>\n                    </li>\n                    <li *ngIf=\"userType==1\">\n                        <a routerLink=\"/territory-list\" routerLinkActive=\"active\">\n                            Territories\n                            <i class=\"material-icons\"> keyboard_arrow_right  </i> \n                        </a>\n                    </li>\n                    <li *ngIf=\"userType==1\">\n                        <a routerLink=\"/gift-list\" routerLinkActive=\"active\">\n                            Marketing\n                            <i class=\"material-icons\">keyboard_arrow_right</i> \n                        </a>\n                    </li>\n                    <li *ngIf=\"userType==1\">\n                        <a routerLink=\"/leave-rule-list\" routerLinkActive=\"active\">\n                            Leaves & Holidays\n                            <i class=\"material-icons\">keyboard_arrow_right</i> \n                        </a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/annoucement-list\" routerLinkActive=\"active\">\n                            Announcements\n                            <i class=\"material-icons\">keyboard_arrow_right</i> \n                        </a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/allowance\" routerLinkActive=\"active\">\n                            Allowances\n                            <i class=\"material-icons\">keyboard_arrow_right</i> \n                        </a>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n        \n        <ul *ngIf=\"userType == 2\">\n            <!-- <li (click)=\"navBarModuleHandler()\">\n                <a routerLink=\"/sale-user-detail/{{userId}}\" routerLinkActive=\"active\" >Profile<img src=\"assets/img/user.svg\" class=\"nav-icon h18\"></a>\n            </li> -->\n            <li (click)=\"navBarModuleHandler()\" *ngIf=\"userType!=3\">\n                    <a routerLink=\"/dashboard\" routerLinkActive=\"active\" >Dashboard <img src=\"assets/img/dashboard_icon.svg\" class=\"nav-icon h18\"></a>\n                </li>\n            <li (click)=\"navBarModuleHandler()\">\n                <a routerLink=\"/lead-list\" routerLinkActive=\"active\" >Leads<img src=\"assets/img/leads_icon.svg\" class=\"nav-icon h14\">\n                    <span class=\"nav-counter orange-count\">{{service.leadCount}}</span></a>\n                </li>\n                <li >\n                    <a  routerLink=\"/distribution-list\" routerLinkActive=\"active\" (click)=\"toggleDropdown()\" id=\"distributionNetwork\">Distributor <img src=\"assets/img/distribution_icon.svg \" class=\"nav-icon h23\">\n                        <span class=\"nav-counter sub-conter green-count\">{{service.distributorCount}}</span> \n                    </a>\n                    <!-- <ul>\n                        <li>\n                            <a routerLink=\"/distribution-list\" routerLinkActive=\"active\">\n                                Distributors\n                                <i class=\"material-icons\">keyboard_arrow_right</i>   \n                                <span class=\"sub-conter green-count\">{{distributorCount}}</span> \n                            </a>\n                        </li>\n                        <li>\n                            <a routerLink=\"/wholesaler-list\" routerLinkActive=\"active\">\n                                Wholesellers\n                                <i class=\"material-icons\">keyboard_arrow_right</i> \n                                <span class=\"sub-conter orange-count\">{{wholeSellerCount}}</span> \n                            </a>\n                        </li>\n                        <li>\n                            <a routerLink=\"/retailer-list\" routerLinkActive=\"active\">\n                                Retailers\n                                <i class=\"material-icons\">keyboard_arrow_right</i> \n                                <span class=\"sub-conter blue-count\">{{retailerCount}}</span>\n                            </a>\n                        </li>\n                        <li>\n                            <a routerLink=\"/engine-list\" routerLinkActive=\"active\">\n                                Reconditioners\n                                <i class=\"material-icons\">keyboard_arrow_right</i> \n                                <span class=\"sub-conter purple-count\">{{reconditionerCount}}</span>\n                            </a>\n                        </li>\n                        <li>\n                            <a routerLink=\"/mechanic-list\" routerLinkActive=\"active\">\n                                Mechanics\n                                <i class=\"material-icons\">keyboard_arrow_right</i>\n                                <span class=\"sub-conter red-count\">{{mechanicCount}}</span> \n                            </a>\n                        </li>\n                    </ul> -->\n                </li>\n                <li (click)=\"navBarModuleHandler()\">\n                    <a routerLink=\"/order-list\" routerLinkActive=\"active\" >Orders <img src=\"assets/img/order_icon.svg\" class=\"nav-icon h24\">\n                        <span class=\"nav-counter orange-count\">{{service.counterArray.orderCount}}</span>\n                    </a>\n                </li>\n                <li (click)=\"navBarModuleHandler()\">\n                    <a routerLink=\"/task-list\" routerLinkActive=\"active\" >Tasks<img src=\"assets/img/task.svg\" class=\"nav-icon h22\">\n                        <span class=\"nav-counter blue-count\">{{service.counterArray.taskCount}}</span> \n                    </a>\n                </li>\n                <li (click)=\"navBarModuleHandler()\" >\n                    <a routerLink=\"/checkin-list\" routerLinkActive=\"active\">DVR<img src=\"assets/img/activity.svg\" class=\"nav-icon h19\"></a>\n                </li>\n                \n                <li (click)=\"navBarModuleHandler()\">\n                    <a routerLink=\"/followup-list\" routerLinkActive=\"active\" >Follow Ups<img src=\"assets/img/folowup.svg\" class=\"nav-icon h23\">\n                        <span class=\"nav-counter green-count\">{{service.counterArray.followUpCount}}</span> \n                    </a>\n                </li>\n                <li (click)=\"navBarModuleHandler()\">\n                    <a routerLink=\"/list-travel\" routerLinkActive=\"active\" >Travel Plans <img src=\"assets/img/travel.svg\" class=\"nav-icon h22\">\n                        <span class=\"nav-counter blue-count\">{{service.counterArray.travelPlanCount}}</span> </a>\n                    </li>\n                    <li (click)=\"navBarModuleHandler()\">\n                        <a  routerLink=\"/concern-list\" routerLinkActive=\"active\" >Customer Concerns <img src=\"assets/img/concern.svg\" class=\"nav-icon h23\">\n                            <span class=\"nav-counter blue-count\">{{service.counterArray.concernCount}}</span> </a>\n                        </li>\n                        <li (click)=\"navBarModuleHandler()\">\n                            <a routerLink=\"/expense-list\" routerLinkActive=\"active\" >Expenses <img src=\"assets/img/payment_icon.svg\" class=\"nav-icon h23\">\n                                <span class=\"nav-counter blue-count\">{{service.counterArray.expenseCount}}</span> </a>\n                            </li>\n                            <li>\n                                <a routerLink=\"/leave-list\" routerLinkActive=\"active\" >Leave Application<img src=\"assets/img/leave.svg\" class=\"nav-icon  h20\"></a>\n                            </li>\n\n\n                            <li (click)=\"navBarModuleHandler()\">\n                                <a routerLink=\"/scheme-list\" routerLinkActive=\"active\" >Schemes<img src=\"assets/img/scheme.svg\" class=\"nav-icon  h23\"></a>\n                            </li>\n                            \n                            <li>\n                                <a routerLink=\"/product-list\" routerLinkActive=\"active\" >Products<img src=\"assets/img/product.svg\" class=\"nav-icon  h15\"></a>\n                            </li>\n                            <li>\n                                <a routerLink=\"/gift-list\" routerLinkActive=\"active\" >Marketing<img src=\"assets/img/market.svg\" class=\"nav-icon h21\">\n                                    <span class=\"nav-counter orange-count\">{{service.counterArray.popCount}}</span>\n                                    \n                                </a>\n                            </li>\n                            <li>\n                                <a routerLink=\"/annoucement-list\" routerLinkActive=\"active\" >Announcements<img src=\"assets/img/announcement.svg\" class=\"nav-icon  h22\">\n                                    <span class=\"nav-counter orange-count\">{{service.counterArray.announcementCount}}</span>\n                                </a>\n                            </li>\n                        </ul>\n                        \n                        <ul *ngIf=\"userType == 3\">\n                            <li (click)=\"navBarModuleHandler()\">\n                                <a routerLink=\"/distribution-detail/{{userNetworkId}}\" routerLinkActive=\"active\" >Profile<img src=\"assets/img/profile.svg\" class=\"nav-icon h20\"></a>\n                            </li>\n                            <li (click)=\"navBarModuleHandler()\">\n                                <a routerLink=\"/order-list\" routerLinkActive=\"active\" >Image & Document <img src=\"assets/img/document.svg\" class=\"nav-icon h19\">\n                                    <!-- <span class=\"nav-counter orange-count\"></span> -->\n                                </a>\n                            </li>\n                            <li (click)=\"navBarModuleHandler()\">\n                                <a routerLink=\"/order-list\" routerLinkActive=\"active\" >Orders <img src=\"assets/img/order_icon.svg\" class=\"nav-icon h24\">\n                                    <span class=\"nav-counter orange-count\">{{service.counterArray.orderCount}}</span>\n                                </a>\n                            </li>\n                            <li (click)=\"navBarModuleHandler()\">\n                                <a  routerLink=\"/concern-list\" routerLinkActive=\"active\" >Customer Concerns <img src=\"assets/img/concern.svg\" class=\"nav-icon h24\">\n                                    <span class=\"nav-counter orange-count\">{{service.counterArray.concernCount}}</span></a>\n                                </li>\n                                <li>\n                                    <a routerLink=\"/product-list\" routerLinkActive=\"active\" >Products<img src=\"assets/img/product.svg\" class=\"nav-icon  h16\"></a>\n                                </li>\n                                <li>\n                                    <a routerLink=\"/pop-and-gift-distributor-list\" routerLinkActive=\"active\">\n                                        Pop & Gift Orders\n                                        <img src=\"assets/img/gift.svg\" class=\"nav-icon h20\">\n                                    </a>\n                                </li>\n                                <li>\n                                    <a routerLink=\"/gift-list\" routerLinkActive=\"active\">\n                                        Marketing\n                                        <img src=\"assets/img/market.svg\" class=\"nav-icon h21\">\n                                        <!-- <i class=\"material-icons\">keyboard_arrow_right</i>  -->\n                                    </a>\n                                </li>\n                            </ul>\n                            \n                            \n                            <div class=\"h30\"></div>\n                        </div>\n                    </div>\n                    \n                    "

/***/ }),

/***/ "./src/app/navigation/navigation.component.ts":
/*!****************************************************!*\
  !*** ./src/app/navigation/navigation.component.ts ***!
  \****************************************************/
/*! exports provided: NavigationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationComponent", function() { return NavigationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);




var NavigationComponent = /** @class */ (function () {
    function NavigationComponent(renderer, service) {
        this.renderer = renderer;
        this.service = service;
        this.user = {};
        this.data = {};
        this.counterArray = {};
        this.accessModuleData = [];
        this.moduleActiveData = '';
        this.status = false;
        this.status1 = false;
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        if (this.user.data.distributerNetwork && this.user.data.distributerNetwork['networkId']) {
            this.userNetworkId = this.user.data.distributerNetwork['networkId'];
        }
        this.userRole = this.user.data.role;
        this.userName = this.user.data.userName;
        if (this.userType == 3) {
            this.networkId = this.user.data.distributerNetwork.networkId;
        }
        if (localStorage.getItem('accessModuleData')) {
            this.accessModuleData = JSON.parse(localStorage.getItem('accessModuleData')) || [];
        }
        else {
            this.accessModuleData = [];
        }
        console.log(this.accessModuleData);
    }
    NavigationComponent.prototype.ngOnInit = function () {
        this.counterArray = this.service.counterArray;
        console.log(this.counterArray);
    };
    NavigationComponent.prototype.toggleHeader = function () {
        this.renderer.removeClass(document.body, 'nav-active');
    };
    NavigationComponent.prototype.toggleDropdown = function () {
        var activeClass = jquery__WEBPACK_IMPORTED_MODULE_3__(event.target).hasClass('active');
        var activeId = jquery__WEBPACK_IMPORTED_MODULE_3__(event.target).attr('id');
        console.log(activeClass);
        console.log(activeId);
        jquery__WEBPACK_IMPORTED_MODULE_3__('a.active').removeClass('active');
        if (!activeClass) {
            console.log(event.target);
            this.renderer.addClass(event.target, 'active');
            this.renderer.removeClass(document.body, 'active');
            if (activeId == 'distributionNetwork') {
                jquery__WEBPACK_IMPORTED_MODULE_3__('.menu').scrollTop(0);
            }
            if (activeId == 'masters') {
                jquery__WEBPACK_IMPORTED_MODULE_3__('.menu').scrollTop(9999);
            }
        }
        else {
            console.log(event.target);
            this.renderer.removeClass(event.target, 'active');
        }
    };
    NavigationComponent.prototype.navBarModuleHandler = function () {
        jquery__WEBPACK_IMPORTED_MODULE_3__('a.active').removeClass('active');
        this.renderer.addClass(event.target, 'active');
    };
    NavigationComponent.prototype.toggleNav = function () {
        console.log('helloooo');
        this.status1 = !this.status1;
        if (this.status1) {
            this.renderer.addClass(document.body, 'active');
        }
        else {
            this.renderer.removeClass(document.body, 'active');
        }
    };
    NavigationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-navigation',
            template: __webpack_require__(/*! ./navigation.component.html */ "./src/app/navigation/navigation.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"]])
    ], NavigationComponent);
    return NavigationComponent;
}());



/***/ }),

/***/ "./src/app/order/add-order/add-order.component.html":
/*!**********************************************************!*\
  !*** ./src/app/order/add-order/add-order.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n    <div class=\"cs-loader\" *ngIf=\"loader\"> \n        <img src=\"assets/img/loader.png\" class=\"rotate\">\n    </div>\n    \n    <div class=\"middle-container\">\n        <div class=\"page-heading\">\n            <img src=\"assets/img/order_icon.svg\" class=\"h-icon\">\n            <div class=\"heading-text\">\n                <h2>Order</h2>\n                <p>Add New Order</p>\n            </div>\n            <div>\n                \n            </div>\n        </div>\n    </div>\n    <div class=\"container-outer\">\n        <div class=\"container\" >\n            <div class=\"row\">\n                <div class=\"col s12\">\n                    <div class=\"sprate-box padding0\"  style=\"overflow: inherit;\">\n                        <div class=\"top-heading\">\n                            <h2 class=\"ng-tns-c10-6\">Customer Information</h2>\n                        </div>\n                        <div class=\"from-fields padding15\">\n                            <div class=\"row\">\n                                <div  *ngIf=\"userRole !=12\" class=\"col s4 pl0\">\n                                    <div class=\"multi-all-select\">\n                                        <label>Distributor</label>\n                                        <ng-multiselect-dropdown\n                                        [placeholder]=\"'Select Distributor'\"\n                                        [data]=\"distributor_list\"\n                                        [(ngModel)]=\"data.networkId\"\n                                        name=\"networkId\"\n                                        #networkId=\"ngModel\"\n                                        [settings]=\"dropdownSettings\"\n                                        (onSelect)=\"openOrderDiv(data.networkId,0)\"\n                                        (onDeSelect)=\"openOrderDiv(data.networkId,0)\"\n                                        >\n                                    </ng-multiselect-dropdown>\n                                </div>\n                            </div>\n                            \n                            <div *ngIf=\"orderDiv==true\" class=\"col s8 pr0\">\n                                <div class=\"multi-all-select\">\n                                    <label>Shipping Address</label>\n                                    <ng-multiselect-dropdown\n                                    [placeholder]=\"'Shipping Address'\"\n                                    [data]=\"tmpShippingAddress\"\n                                    [(ngModel)]=\"adrs.shipping\"\n                                    name=\"shipping\"\n                                    #shipping=\"ngModel\"\n                                    [settings]=\"dropdownSettings4\"\n                                    (onSelect)=\"selectAddress($event)\"\n                                    (onDeSelect)=\"selectAddress(adrs.shipping)\"\n                                    >\n                                </ng-multiselect-dropdown>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"orderDiv==true\"  class=\"sprate-box mt15 mb25 padding0\"  style=\"overflow: inherit;\">\n                <div class=\"top-heading\">\n                    <h2 class=\"ng-tns-c10-6\">Product Information</h2>\n                </div>\n                <div  class=\"row padding15\" >\n                    <div  class=\"col s4 pl0\">\n                        <div class=\"multi-all-select\">\n                            <label>Segment</label>\n                            <ng-multiselect-dropdown\n                            [placeholder]=\"'Select Segment'\"\n                            [data]=\"segmentList\"\n                            [(ngModel)]=\"data.segment\"\n                            name=\"segment\"\n                            #segment=\"ngModel\"\n                            [settings]=\"dropdownSettings1\"\n                            (onSelect)=\"productList(data.segment,data.category)\"\n                            (onDeSelect)=\"productList(data.segment,data.category)\"\n                            >\n                        </ng-multiselect-dropdown>\n                    </div>\n                </div>                           \n                <div class=\"col s4\">\n                    <div class=\"multi-all-select\">\n                        <label>Category</label>\n                        <ng-multiselect-dropdown\n                        [placeholder]=\"'Select Category'\"\n                        [data]=\"category_list\"\n                        [(ngModel)]=\"data.category\"\n                        name=\"category\"\n                        #category=\"ngModel\"\n                        [settings]=\"dropdownSettings2\"\n                        (onSelect)=\"productList(data.segment,data.category)\"\n                        (onDeSelect)=\"productList(data.segment,data.category)\"\n                        \n                        >\n                    </ng-multiselect-dropdown>\n                </div>\n            </div>                                \n            <div class=\"col s4 pr0\">\n                <div class=\"multi-all-select\">\n                    <label>Product Name</label>\n                    <ng-multiselect-dropdown\n                    [placeholder]=\"'Select Product'\"\n                    [data]=\"ProductName_list\"\n                    [(ngModel)]=\"data.product\"\n                    name=\"product\"\n                    #product=\"ngModel\"\n                    [settings]=\"dropdownSettings3\"\n                    (onSelect)=\"getCartProductList(data.segment,data.category,data.product)\"\n                    (onDeSelect)=\"getCartProductList(data.segment,data.category,data.product)\"\n                    >\n                </ng-multiselect-dropdown>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n\n<div *ngIf=\"orderDiv\">   \n    \n    <!-- <div class=\"sprate-box mb20 mt20\">\n        <div class=\"col s4 ml0\">\n            <div class=\"upload-excel\">\n                <label>\n                    <input multiple=\"\" style=\"display: none;\" name=\"attachment\" type=\"file\" id=\"selectfile\"  (change)=\"incomingfile('selectfile',$event)\" required >\n                    <div class=\"outer\">\n                        <div class=\"innear\">\n                            <i class=\"material-icons upload-ic\" >cloud_upload</i>\n                            <p>Import Attachment</p>\n                        </div>\n                    </div>\n                </label>\n                <p></p>\n            </div>\n        </div>\n        \n        <div class=\"col s8 text-right\">\n            <div class=\"cs-btn\">\n                <div *ngIf=\"productNameList.length!=0\" class=\"in-btn\">\n                    <button mat-raised-button color=\"accent\" (click)=\"downloadFile()\" >\n                        <i class=\"material-icons\">cloud_download</i> Download\n                    </button>\n                </div>\n            </div>\n        </div>\n        \n    </div> -->\n    \n    <div *ngIf=\"productlist.length!=0 || productdiv==true\" class=\"col s12 pl0\">\n        <div class=\"dflex mb15\">\n            <div class=\"heading-bg left-right-15 mb0\">\n                <h2>PRODUCT ITEM DETAIL</h2>\n            </div>\n            \n            <div class=\"sprate-box wp50 flat-sprate left-auto\">\n                <div class=\"col s9 ml0\">\n                    <div class=\"upload-excel attach\">\n                        <label>\n                            <input multiple=\"\" style=\"display: none;\" name=\"attachment\" type=\"file\" id=\"selectfile\"  (change)=\"incomingfile('selectfile',$event)\" required >\n                            <div class=\"outer\">\n                                <div class=\"innear\">\n                                    <i class=\"material-icons upload-ic\" >cloud_upload</i>\n                                    <p>Import Attachment</p>\n                                </div>\n                            </div>\n                        </label>\n                        <p></p>\n                    </div>\n                </div>\n                <div class=\"col s3 text-right\">\n                    <div class=\"cs-btn\">\n                        <div class=\"in-btn\">\n                            <button mat-raised-button color=\"accent\" (click)=\"downloadFile()\" >\n                                <i class=\"material-icons\">cloud_download</i> Download\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"cs-table left-right-15\">\n            <div class=\"\">\n                <div class=\"table-head pr28\">\n                    <table>\n                        <tr>\n                            <th class=\"w40\"></th>\n                            <th class=\"w120\">Part Number</th>\n                            <th > Model</th>\n                            <th class=\"w80\">STD Qty</th>\n                            <th class=\"w60\">Qty</th>\n                            <th class=\"w80\">Pending Order</th>\n                            <th class=\"w80 \">Price</th>\n                            <th class=\"w80\">Price Support</th>\n                            <th class=\"w80 \">Item Value</th>\n                            <th class=\"w110\">Order Value</th>\n                            <th class=\"w60\">GST %</th>\n                            <th class=\"w80\">Scheme</th>\n                        </tr>\n                    </table>\n                </div>\n                <div class=\"table-head bdrt pr28\" >\n                    <table>\n                        <tr>\n                            <th class=\"w40\"></th>\n                            <th  class=\"w120\">\n                                <div class=\"th-search-acmt\">\n                                    <mat-form-field>\n                                        <input type=\"text\"  name=\"search\" [(ngModel)]=\"productName.search\" (input)=\"productSearchByNumber(productName.search,modelName.search)\" matInput [matAutocomplete]=\"auto1\">\n                                        <mat-autocomplete #auto1=\"matAutocomplete\" >\n                                        </mat-autocomplete>\n                                    </mat-form-field> \n                                </div>\n                            </th>\n                            <th>\n                                <div class=\"th-search-acmt\">\n                                    <mat-form-field>\n                                        <input type=\"text\"  name=\"search\" [(ngModel)]=\"modelName.search\" (input)=\"productSearchByNumber(productName.search,modelName.search)\"  matInput [matAutocomplete]=\"auto4\">\n                                        <mat-autocomplete #auto4=\"matAutocomplete\" >\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </div>\n                            </th>\n                            <th class=\"w80\">&nbsp;</th>\n                            <th class=\"w60\">&nbsp;</th>\n                            <th class=\"w80\">&nbsp;</th>\n                            <th class=\"w80\">&nbsp;</th>\n                            <th class=\"w80\">&nbsp;</th>\n                            <th class=\"w80\">&nbsp;</th>\n                            <th class=\"w110\">&nbsp;</th>\n                            <th class=\"w60\">&nbsp;</th>\n                            <th class=\"w80\">&nbsp;</th>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n            \n            <div *ngIf=\"productdiv==true\" class=\"table-container \">\n                <div class=\"table-content height-scroll\">\n                    <table>\n                        <tr *ngFor=\"let product of productlist;let index=index\" [ngClass]=\"{'download':product.add==true}\">\n                            <td class=\"w40\"><span *ngIf=\"product.ifcheck\"><mat-checkbox  name=\"datacheck\" [checked]=\"product.datacheck\"  (change)=\"addCart(product,index,$event)\" >&nbsp; </mat-checkbox></span></td>\n                            <td class=\"w120\">{{product.partNumber}}</td>\n                            <td  >{{product.model}}</td>\n                            <td class=\"w80\">{{product.moq}}</td>\n                            <td class=\"w60\">\n                                <div class=\"td-input\">\n                                    <input type=\"number\" (keyup.enter)=\"addToMyCart(index)\" (change)=\"checkValidate(index)\" (input)=\"selectProduct(index)\" (input)=\"calculateAmount(product.moq,product.quantity,index)\" name=\"qty\" #quantity=\"ngModel\" [(ngModel)]=\"product.quantity\" required class=\"text-center\">\n                                </div>\n                            </td>\n                            <td class=\"w80\">\n                                <a class=\"link-btn\" (click)=\"pendingOrder(product.productId)\">{{product.pendingQty}}</a>\n                            </td>\n                            <td class=\"w80\" >&#8377; {{product.discountedListPrice}}</td>\n                            <td class=\"w80\" >&#8377; {{product.priceSupport}}</td>\n                            <td class=\"w80 \" >&#8377; {{product.itemValue}}</td>\n                            <td class=\"w110\">&#8377; {{product.amount}}</td>\n                            <td class=\"w60\">{{product.gstPercentage}} %</td>\n                            <td class=\"w80 \" (click)=\"SchemeDetail(product.partNumber,index)\">\n                                <div *ngIf=\"product.schemeCount!=0\" class=\"icons-list\">\n                                    <i class=\"material-icons check\">check_circle </i>\n                                    <i class=\"material-icons forword\">keyboard_arrow_right </i>\n                                    <!-- <i *ngIf=\"product.schemeCount==0\" class=\"material-icons close\">clear </i> -->\n                                </div>\n                            </td>                                 \n                        </tr>\n                    </table>\n                </div>\n                <div class=\"data-not-available\" *ngIf=\"productlist.length==0\">\n                    <div class=\"outer\">\n                        <div class=\"iinear\">\n                            <div class=\"figure\" matRipple>\n                                <div class=\"header\">\n                                    <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                </div>\n                                \n                                <div class=\"description\">\n                                    <div class=\"cs-heading\">\n                                        <h2>No Product</h2>\n                                    </div>\n                                    <div class=\"img\">\n                                        <i class=\"material-icons\">error_outline</i>\n                                    </div>\n                                    <div class=\"psc\">\n                                        <p>data not available</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"cs-btn mt20 text-right\">\n            <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\" [disabled]=\"tmp_orderDetail.length==0\" (click)=\"addToCart()\" >Add to Cart</button>\n            </div>\n        </div>\n    </div>\n    \n    \n    <div *ngIf=\"tmp_array && tmp_array.length > 0\" class=\"col s12 padding0\">\n        \n        <div class=\"heading-bg left-right-15\">\n            <h2>Product In Cart</h2>\n        </div>\n        <div class=\"row\">\n            <div class=\"col s12\">\n                <div class=\"cs-table left-right-15\">\n                    <div class=\"table-head\">\n                        <table>\n                            <tr>\n                                <th class=\"w110\">Category</th>\n                                <th class=\"w110\">Items</th>\n                                <th class=\"w110\">Net Order Value</th>\n                            </tr>\n                        </table>\n                    </div>\n                    <div class=\"table-container\">\n                        <div class=\"table-content\">\n                            <table>\n                                <tr *ngFor=\"let order of tmp_array;let i=index\">\n                                    <td class=\"w110\"><a mat-button class=\"link-btn\" (click)=\"productDetail(order.category)\" >{{order.category}}</a></td>\n                                    <td class=\"w110\">{{order.quantity}}</td>\n                                    <td class=\"w110\">{{order.amount}}</td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n        \n        \n        <div class=\"from-fields\">\n            <div class=\"row\">\n                <!-- <div class=\"col s8\">\n                    <div class=\"col s6\">\n                        <div class=\"table-info\">\n                            <h2>Credit Info</h2>\n                            <ul>\n                                <li>\n                                    <label><strong>Limit</strong> </label>\n                                    <p>{{distributorDetail.creditLimit | currency: 'INR':true}}</p>\n                                </li>\n                                <li>\n                                    <label><strong>Used</strong> </label>\n                                    <p>{{distributorDetail.creditUsed | currency: 'INR':true}}</p>\n                                </li>\n                                <li>\n                                    <label><strong>Balanced</strong> </label>\n                                    <p>{{distributorDetail.creditBalanced | currency: 'INR':true}}</p>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"col s6\">\n                        <div class=\"table-info\">\n                            <h2>Target Info</h2>\n                            <ul>\n                                <li class=\"static-info\">\n                                    <label><strong>{{current_month}} Target</strong></label>\n                                    <p>{{monthleyTarget | currency: 'INR':true}}</p>\n                                </li>\n                                <li>\n                                    <label><strong>Achived</strong></label>\n                                    \n                                </li>\n                                <li>\n                                    <label><strong>Balance</strong></label>\n                                    <p>{{distributorDetail.targetBalanced | currency: 'INR':true}}</p>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div> -->\n                \n                <div class=\"col s6\">\n                    <div class=\"details-info pt0\">\n                        <div class=\"basic-details \">\n                            <div class=\"row\">\n                                <div class=\"col s12 pl0 cs-figure\">\n                                    <h2>CREDIT LIMIT</h2>\n                                    <ul>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Limit</span>\n                                                    <p>{{distributorDetail.creditLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Used</span>\n                                                    <p>{{distributorDetail.creditUsed | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{distributorDetail.creditBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div class=\"row mt15\">\n                                <div class=\"col s12 pl0 cs-figure\">\n                                    <h2>Target Info</h2>\n                                    <ul *ngIf=\"currentMonth==1\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.janTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.janTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.janTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                    <ul *ngIf=\"currentMonth==2\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.febTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.febTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.febTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                    <ul *ngIf=\"currentMonth==3\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.marTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.marTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.marTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul> \n                                    <ul *ngIf=\"currentMonth==4\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.aprTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.aprTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.aprTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                    <ul *ngIf=\"currentMonth==5\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.mayTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.mayTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.mayTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul> \n                                    <ul *ngIf=\"currentMonth==6\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.junTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.junTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.junTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul> \n                                    <ul *ngIf=\"currentMonth==7\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.julTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.julTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.julTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul> \n                                    <ul *ngIf=\"currentMonth==8\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.augTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.augTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.augTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul> \n                                    <ul *ngIf=\"currentMonth==9\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.sepTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.sepTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.sepTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                    <ul *ngIf=\"currentMonth==10\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.octTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.octTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.octTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                    <ul *ngIf=\"currentMonth==11\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.novTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.novTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.novTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                    <ul *ngIf=\"currentMonth==12\">\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>{{current_month}} Target</span>\n                                                    <p>{{monthleyTarget.decTargetLimit | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Achived</span>\n                                                    <p>{{monthleyTarget.decTargetAchieved | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div class=\"outer\">\n                                                <div class=\"inner\">\n                                                    <span>Balance</span>\n                                                    <p>{{monthleyTarget.decTargetBalanced | currency: 'INR':true}}</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n                \n                <div class=\"col s6\">\n                    <div class=\"invoice-details\">\n                        <table class=\"invoice-table\">\n                            <tr>\n                                <td class=\"td\">Total Quantity</td>\n                                <td class=\"w120 td\">{{itemTotel}}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"td\">Basic Total</td>\n                                <td class=\"td\"> {{subTotal | currency: 'INR':true}}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"td\">GST</td>\n                                <td class=\"td\"> {{gstTotal | currency: 'INR':true}}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"td\">Grand Total</td>\n                                <td class=\"td\"> {{grandTotal | currency: 'INR':true}}</td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div class=\"control-field wp70\" style=\"float: right;\">\n                        <mat-form-field class=\"cs-input\">\n                            <textarea matInput placeholder=\"Enter Remark\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"data.remarks\" class=\"h110\" style=\"background: #fff;\"></textarea>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"row\">\n        <div class=\"col s12\">\n            <div class=\"cs-btn mt32 text-right\">\n                \n                <div *ngIf=\"tmp_array && tmp_array.length > 0\" class=\"in-btn mr15\">\n                    <button mat-raised-button color=\"accent\" (click)=\"SaveOrder()\" [disabled]=\"orderDetail.length==0 || !data.distributor\">Save As Draft</button>\n                </div>\n                \n                <div *ngIf=\"tmp_array && tmp_array.length > 0\" class=\"in-btn\">\n                    <button mat-raised-button color=\"accent\" (click)=\"SubbmitOrder()\" [disabled]=\"orderDetail.length==0 || !data.distributor\" >Place Order</button>\n                </div>\n                \n            </div>\n        </div>\n    </div>\n</div>\n</div>\n\n</div>\n</div>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/order/add-order/add-order.component.ts":
/*!********************************************************!*\
  !*** ./src/app/order/add-order/add-order.component.ts ***!
  \********************************************************/
/*! exports provided: AddOrderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddOrderComponent", function() { return AddOrderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _list_order_list_order_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../list-order/list-order.component */ "./src/app/order/list-order/list-order.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _other_address_other_address_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../other-address/other-address.component */ "./src/app/order/other-address/other-address.component.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var ts_xlsx__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ts-xlsx */ "./node_modules/ts-xlsx/lib/main.browser.js");
/* harmony import */ var ts_xlsx__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(ts_xlsx__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _schemepopup_schemepopup_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../schemepopup/schemepopup.component */ "./src/app/order/schemepopup/schemepopup.component.ts");
/* harmony import */ var _pending_order_pending_order_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../pending-order/pending-order.component */ "./src/app/order/pending-order/pending-order.component.ts");
















// import {ExcelService} from './services/excel.service';
// import * as FileSaver from 'file-saver';
// import * as XLSX from 'xlsx';
var AddOrderComponent = /** @class */ (function () {
    function AddOrderComponent(alrt, service, rout, toast, dialog) {
        this.alrt = alrt;
        this.service = service;
        this.rout = rout;
        this.toast = toast;
        this.dialog = dialog;
        this.user = {};
        this.distributor_list = [];
        this.category_list = [];
        this.segmentList = [];
        this.oemList = [];
        this.data = {};
        this.subSegment_List = [];
        this.ProductName_list = [];
        this.loader = false;
        this.itemTotel = 0;
        this.subTotal = 0;
        this.grandTotal = 0;
        this.gstTotal = 0;
        this.tmp_categoryList = [];
        this.tmp_segmentList = [];
        this.tmp_subsegmentList = [];
        this.tmp_oemList = [];
        this.cartProductList = [];
        this.orderDiv = false;
        this.currentMonth = moment__WEBPACK_IMPORTED_MODULE_10__().format('M');
        this.current_month = moment__WEBPACK_IMPORTED_MODULE_10__().format('MMMM');
        this.dropdownSettings = {};
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        this.dropdownSettings3 = {};
        this.dropdownSettings4 = {};
        this.active = {};
        this.adrs = {};
        this.tmpShipping = [];
        this.tmpShippingAddress = [];
        this.distributorDetail = {};
        this.monthleyTarget = [];
        this.shippingAddress = [];
        this.tmpDistributor_list = [];
        this.deselectProduct = [];
        // getOemList()
        // {
        //   this.service.fileData("","oem/list").subscribe((result)=>{
        //     console.log(result);
        //     if(result['status']=="Success")
        //     {
        //       this.oemList=result['data'];
        //       this.tmp_oemList=this.oemList;
        //     }
        //   })
        // }
        this.tmpproduct_list = [];
        this.productlist = [];
        this.tmpProductList = [];
        this.productdiv = false;
        this.segment = [];
        this.category = [];
        this.productNameList = [];
        this.ExcelArray = [];
        this.tmpExcelOrderArray = [];
        this.partNumberArray = [];
        this.notUploadPartNumber = [];
        this.schemeList = [];
        this.schemeString2 = '';
        this.cartArray = [];
        // datacheck:Boolean;
        this.tmp = false;
        this.finel_Array = [];
        this.tmp_array = [];
        this.orderDetail = [];
        this.tmpSubTotal = 0;
        this.tmp_orderDetail = [];
        this.tmporderArray = [];
        this.ExcelUploadOrder = [];
        this.attachment = {};
        this.value = {};
        this.temp = false;
        this.ordlength = [];
        this.tmp_userList = [];
        this.catsearch = [];
        this.tmp_cat = [];
        this.segsearch = [];
        this.tmp_seg = [];
        this.oemsearch = [];
        this.tmp_oem = [];
        // subsegsearch:any=[];
        // tmp_subseg:any=[];
        // subSegmentSearch()
        // {
        //   this.product_list=[];
        //   for(var i=0;i<this.tmpproduct_list.length; i++)
        //   {
        //     this.subsegsearch.search=this.subsegsearch.search.toLowerCase();
        //     this.tmp_subseg=this.tmpproduct_list[i]['productName'].toLowerCase();
        //     if(this.tmp_subseg.includes(this.subsegsearch.search))
        //     {
        //       this.product_list.push(this.tmpproduct_list[i]);
        //     }     
        //   }    
        // }
        this.productName = [];
        this.tmp_pro = [];
        this.modelName = [];
        this.tmpModel = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        if (this.userType == 3) {
            this.networkId = this.user.data.distributerNetwork.networkId;
            this.data.distributor = this.networkId;
            console.log(this.networkId);
            if (this.networkId) {
                this.openOrderDiv(this.networkId, 0);
            }
            this.orderDiv = true;
        }
        console.log(this.currentMonth);
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        // if(this.user)
        // {
        //   if(this.userType==2)
        //   {
        //     this.loader=true;
        //     this.categoryList()
        //     this.userTypeList();
        //     this.getSegmentList();
        //     this.getOemList();
        //     //  this.distributorList()
        //   }
        // }
        this.loader = true;
        this.userTypeList();
    }
    AddOrderComponent.prototype.ngOnInit = function () {
        this.dropdownSettings = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'networkId',
            textField: 'establishment',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings1 = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'value',
            textField: 'text',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings2 = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'value',
            textField: 'text',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings3 = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'productName',
            textField: 'productName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings4 = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'shippingAddressId',
            textField: 'shipping',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
    };
    AddOrderComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
            jquery__WEBPACK_IMPORTED_MODULE_11__('#' + key).focus();
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    AddOrderComponent.prototype.openOrderDiv = function (id, val) {
        var _this = this;
        console.log(id);
        console.log(val);
        this.categoryList();
        this.getSegmentList();
        // this.getcat
        var networkId;
        if (id != '') {
            this.tmpShippingAddress = [];
            this.orderDiv = true;
            if (this.userType != 3) {
                this.data.distributor = id[0].networkId;
                console.log(this.data.distributor);
                networkId = this.data.distributor;
            }
            else {
                networkId = id;
            }
            this.loader = true;
            this.service.fetchData({ 'networkId': networkId }, "network/list").subscribe((function (result) {
                _this.loader = false;
                console.log(result);
                if (result['status'] == 'Success') {
                    _this.distributorDetail = result['data'][0];
                    _this.tmpShipping = _this.distributorDetail.shippingAddresses;
                    if (_this.distributorDetail.networkLimits)
                        _this.monthleyTarget = _this.distributorDetail.networkLimits[0];
                }
                console.log(_this.tmpShipping);
                var shippingData = [];
                for (var j = 0; j < _this.tmpShipping.length; j++) {
                    shippingData.push({ "shipping": _this.tmpShipping[j]['city'] + ',' + _this.tmpShipping[j]['district'] + ',' + _this.tmpShipping[j]['state'] + ',' + _this.tmpShipping[j]['pin'], "shippingAddressId": _this.tmpShipping[j]['shippingAddressId'] });
                }
                shippingData.push({ "shipping": 'Other Adrress', "shippingAddressId": 'Other' });
                _this.adrs.shipping = [];
                _this.tmpShippingAddress = shippingData;
                console.log(_this.tmpShippingAddress);
                if (shippingData.length > 1 && val == 0) {
                    _this.adrs.shipping.push(shippingData[0]);
                    _this.data.shippingAddressId = shippingData[0].shippingAddressId;
                }
                if (val == 1) {
                    _this.adrs.shipping.push(shippingData[shippingData.length - 2]);
                    _this.data.shippingAddressId = shippingData[shippingData.length - 2].shippingAddressId;
                }
                console.log(_this.tmpShippingAddress);
                console.log(_this.distributorDetail);
            }));
        }
        else {
            this.tmpShippingAddress = [];
            this.orderDiv = false;
        }
    };
    AddOrderComponent.prototype.otherAddress = function (id) {
        var _this = this;
        console.log(id);
        var dialogRef = this.dialog.open(_other_address_other_address_component__WEBPACK_IMPORTED_MODULE_9__["OtherAddressComponent"], {
            width: '800px',
            data: {
                id: id
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            if (result == false) {
                console.log('false');
                if (_this.userType == 3) {
                    _this.openOrderDiv(_this.networkId, 0);
                }
                else {
                    _this.openOrderDiv(_this.data.networkId, 0);
                }
            }
            else {
                console.log('true');
                if (_this.userType == 3) {
                    _this.openOrderDiv(_this.networkId, 1);
                }
                else {
                    _this.openOrderDiv(_this.data.networkId, 1);
                }
            }
            console.log('The dialog was closed');
        });
    };
    AddOrderComponent.prototype.alldistributorList = function () {
        var _this = this;
        this.loader = true;
        console.log("this.distribotur_roleId");
        this.service.fetchData({ "role": this.distribotur_roleId, "currentPage": 1, "pageSize": 100 }, "network/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == "Success") {
                _this.loader = false;
                _this.tmpDistributor_list = result['data'];
                var distArr = [];
                for (var i = 0; i < _this.tmpDistributor_list.length; i++) {
                    distArr.push({ 'networkId': _this.tmpDistributor_list[i].networkId, 'establishment': _this.tmpDistributor_list[i].establishment + '/' + _this.tmpDistributor_list[i].networkCode });
                }
                _this.distributor_list = distArr;
                console.log(_this.distributor_list);
            }
            else {
                _this.loader = false;
            }
            // this.categoryList()
            // this.getSegmentList();
            // this.getOemList();
        });
    };
    AddOrderComponent.prototype.onDeSelect = function (segment, category, event) {
        var _this = this;
        console.log(segment, category, event);
        this.service.fetchData({ "networkId": this.data.distributor, "segmentCode": segment[0], "categoryCode": category[0], "productName": event, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.deselectProduct = result['data'];
                console.log(_this.deselectProduct);
                var _loop_1 = function (i) {
                    _this.productlist = _this.productlist.filter(function (row) { return row.productId != _this.deselectProduct[i].productId; });
                    console.log(_this.productlist);
                };
                for (var i = 0; i < _this.deselectProduct.length; i++) {
                    _loop_1(i);
                }
            }
        });
    };
    AddOrderComponent.prototype.distributorList = function () {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ "role": this.distribotur_roleId, "salesUserId": this.userId }, "mynetwork/detail").subscribe(function (result) {
            console.log(result);
            if (result['status'] == "Success") {
                _this.loader = false;
                _this.tmpDistributor_list = result['data'];
                var distArr = [];
                for (var i = 0; i < _this.tmpDistributor_list.length; i++) {
                    distArr.push({ 'networkId': _this.tmpDistributor_list[i].networkId, 'establishment': _this.tmpDistributor_list[i].establishment + '/' + _this.tmpDistributor_list[i].networkCode });
                }
                _this.distributor_list = distArr;
                console.log(_this.distributor_list);
            }
            else {
                _this.loader = false;
            }
            // this.categoryList()
            // this.getSegmentList();
            // this.getOemList();
        });
    };
    AddOrderComponent.prototype.categoryList = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData("", "category/list").subscribe(function (result) {
            console.log(result);
            setTimeout(function () {
                _this.loader = false;
            }, 700);
            if (result['status'] == "Success") {
                _this.category_list = result['data'];
                _this.tmp_categoryList = _this.category_list;
            }
        });
    };
    AddOrderComponent.prototype.getSegmentList = function () {
        var _this = this;
        this.service.fileData('', "segment/list").subscribe((function (result) {
            console.log(result['data']);
            if (result['status'] == "Success") {
                _this.segmentList = result['data'];
                _this.tmp_segmentList = _this.segmentList;
            }
        }));
    };
    AddOrderComponent.prototype.getSubSegmentList = function (segment) {
        var _this = this;
        console.log(segment);
        this.service.fetchData({ "segmentCode": segment }, "subsegment/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] = "Success") {
                _this.subSegment_List = result['data'];
                _this.tmp_subsegmentList = _this.subSegment_List;
            }
        });
    };
    AddOrderComponent.prototype.pendingOrder = function (id) {
        var _this = this;
        console.log(id);
        this.loader = true;
        this.service.fileData('', "order/pending/" + this.data.distributor + '/' + id).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                var dialogRef = _this.dialog.open(_pending_order_pending_order_component__WEBPACK_IMPORTED_MODULE_15__["PendingOrderComponent"], {
                    width: '868px',
                    data: result['data']
                });
                dialogRef.afterClosed().subscribe(function (result) {
                    console.log(result);
                    console.log('The dialog was closed');
                });
            }
        });
    };
    AddOrderComponent.prototype.productList = function (segment, category) {
        var _this = this;
        if (segment === void 0) { segment = []; }
        if (category === void 0) { category = []; }
        this.productdiv = true;
        this.data.product = [];
        this.ProductName_list = [];
        var selectedCategory;
        this.productlist = [];
        // let selectedSegment;
        if (segment.length != 0 || category.length != 0) {
            if (category.length != 0) {
                this.tmpcat = category;
                if (this.tmpcat != selectedCategory) {
                    selectedCategory = category[0];
                    this.productlist = [];
                }
                else {
                    selectedCategory = category[0];
                }
                console.log("Not Null");
            }
            if (segment.length != 0) {
                this.tmpseg = segment[0];
                if (this.tmpseg != this.selectedSegment) {
                    console.log(this.tmpseg);
                    console.log(this.selectedSegment);
                    this.selectedSegment = segment[0];
                    this.productlist = [];
                    this.data.category = [];
                }
                else {
                    this.selectedSegment = segment[0];
                }
                console.log("Not Null");
            }
            this.loader = true;
            console.log(this.data.category);
            this.service.fetchData({ "networkId": this.data.distributor, "segmentCode": this.selectedSegment, "categoryCode": selectedCategory, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
                console.log(result);
                setTimeout(function () {
                    _this.loader = false;
                }, 700);
                if (result) {
                    _this.ProductName_list = [];
                    _this.cartProductList = result['data'];
                    for (var i = 0; i < _this.cartProductList.length; i++) {
                        _this.cartProductList[i].quantity = 0;
                        // this.cartProductList[i].priceSupport=0;
                        _this.cartProductList[i].ifcheck = false;
                        _this.cartProductList[i].itemValue = parseFloat(_this.cartProductList[i].discountedListPrice) - parseFloat(_this.cartProductList[i].priceSupport);
                        _this.cartProductList[i].amount = parseFloat(_this.cartProductList[i].quantity) * parseFloat(_this.cartProductList[i].itemValue);
                        _this.cartProductList[i].gstamount = (parseFloat(_this.cartProductList[i]['discountedListPrice']) * parseFloat(_this.cartProductList[i]['gstPercentage']) / 100) * parseFloat(_this.cartProductList[i]['quantity']);
                    }
                    var productTempArr_1 = _this.cartProductList;
                    _this.productlist = JSON.parse(JSON.stringify(_this.cartProductList));
                    _this.tmpProductList = JSON.parse(JSON.stringify(_this.cartProductList));
                    console.log(_this.tmpproduct_list);
                    // JSON.parse(JSON.stringify(productTempArr))
                    console.log(_this.productlist);
                    var _loop_2 = function (index) {
                        var itemIndex = _this.ProductName_list.findIndex(function (row) { return row.productName == productTempArr_1[index].productName; });
                        if (itemIndex == -1) {
                            _this.ProductName_list.push(JSON.parse(JSON.stringify(productTempArr_1[index])));
                        }
                    };
                    for (var index = 0; index < productTempArr_1.length; index++) {
                        _loop_2(index);
                    }
                    // this.tmpproduct_list=this.productlist;
                }
            });
        }
        else {
            this.productlist = [];
            this.ProductName_list = [];
            this.cartProductList = [];
        }
    };
    AddOrderComponent.prototype.getCartProductList = function (segment, category, productname) {
        var _this = this;
        this.productdiv = true;
        var selectedCategory;
        var selectedSegment;
        var selectedproduct;
        this.productlist = [];
        this.cartProductList = [];
        this.tmpProductList = [];
        console.log(productname);
        if (segment != null || category != null || productname != null) {
            if (segment != null) {
                selectedSegment = segment[0];
            }
            if (category != null) {
                selectedCategory = category[0];
            }
            if (productname != null) {
                selectedproduct = productname[productname.length - 1];
            }
        }
        // {
        console.log(category, segment, productname);
        this.loader = true;
        console.log(segment, category, productname);
        this.service.fetchData({ "networkId": this.data.distributor, "segmentCode": selectedSegment, "categoryCode": selectedCategory, "productName": selectedproduct, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.cartProductList = result['data'];
                for (var i = 0; i < _this.cartProductList.length; i++) {
                    _this.cartProductList[i].quantity = 0;
                    // this.cartProductList[i].priceSupport=0;
                    _this.cartProductList[i].ifcheck = false;
                    _this.cartProductList[i].itemValue = parseFloat(_this.cartProductList[i].discountedListPrice) - parseFloat(_this.cartProductList[i].priceSupport);
                    _this.cartProductList[i].amount = parseFloat(_this.cartProductList[i].quantity) * parseFloat(_this.cartProductList[i].itemValue);
                    _this.cartProductList[i].gstamount = (parseFloat(_this.cartProductList[i]['discountedListPrice']) * parseFloat(_this.cartProductList[i]['gstPercentage']) / 100) * parseFloat(_this.cartProductList[i]['quantity']);
                }
                _this.productlist = _this.productlist.concat(_this.cartProductList);
                _this.tmpProductList = JSON.parse(JSON.stringify(_this.productlist));
                // console.log(this.tmpproduct_list);
                // this.tmpProductList=this.productlist;
            }
        });
        // else{
        //   for(let i=0;i<this.productlist.length;i++)
        //   {
        //     if(productname===this.productlist[i]['productName'])
        //     {
        //       this.productlist.splice(i,1);
        //     }
        //   }
        // }
    };
    AddOrderComponent.prototype.selectedItem = function (segment, category, productName) {
        console.log(segment, category, productName);
        if (segment != '') {
            this.segment = [];
            this.segment.push(segment);
        }
        if (category != '') {
            this.category = [];
            this.category.push(category);
        }
        if (productName != null) {
            this.productNameList = productName;
            console.log(this.productNameList);
        }
    };
    AddOrderComponent.prototype.downloadFile = function () {
        var _this = this;
        this.loader = true;
        console.log("function");
        this.service.excelFileData({ "segments": this.data.segment, "categories": this.data.category, "productNames": this.data.product }, 'order/excel').subscribe(function (result) {
            Object(file_saver__WEBPACK_IMPORTED_MODULE_12__["saveAs"])(result, 'OrderProductSheet.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
            _this.loader = false;
        });
    };
    AddOrderComponent.prototype.incomingfile = function (id, event) {
        this.file = event.target.files[0];
        this.Upload();
        jquery__WEBPACK_IMPORTED_MODULE_11__('#' + id).val('');
    };
    AddOrderComponent.prototype.Upload = function () {
        var _this = this;
        var fileReader = new FileReader();
        fileReader.onload = function (e) {
            _this.arrayBuffer = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = ts_xlsx__WEBPACK_IMPORTED_MODULE_13__["read"](bstr, { type: "binary" });
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            console.log(ts_xlsx__WEBPACK_IMPORTED_MODULE_13__["utils"].sheet_to_json(worksheet, { raw: true }));
            _this.ExcelArray = ts_xlsx__WEBPACK_IMPORTED_MODULE_13__["utils"].sheet_to_json(worksheet, { raw: true });
            for (var j = 0; j < _this.ExcelArray.length; j++) {
                _this.partNumberArray.push(_this.ExcelArray[j]['Part #']);
            }
            console.log(_this.partNumberArray);
            _this.service.fetchData({ "networkId": _this.data.distributor, "partNumbers": _this.partNumberArray, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
                _this.ExcelUploadOrder = result['data'];
                console.log(_this.ExcelUploadOrder);
                for (var k = 0; k < _this.ExcelUploadOrder.length; k++) {
                    for (var i_1 = 0; i_1 < _this.ExcelArray.length; i_1++) {
                        if (_this.ExcelArray[i_1]['Part #'] == _this.ExcelUploadOrder[k]['partNumber']) {
                            _this.ExcelUploadOrder[k].quantity = _this.ExcelArray[i_1]['Order QTY'];
                        }
                    }
                }
                console.log(_this.ExcelUploadOrder);
                for (var i_2 = 0; i_2 < _this.ExcelUploadOrder.length; i_2++) {
                    console.log(parseFloat(_this.ExcelUploadOrder[i_2].quantity), parseFloat(_this.ExcelUploadOrder[i_2].moq));
                    _this.ExcelUploadOrder[i_2].gstamount = (parseFloat(_this.ExcelUploadOrder[i_2]['discountedListPrice']) * parseFloat(_this.ExcelUploadOrder[i_2]['gstPercentage']) / 100) * parseFloat(_this.ExcelUploadOrder[i_2]['quantity']);
                    if (parseFloat(_this.ExcelUploadOrder[i_2].quantity) % parseFloat(_this.ExcelUploadOrder[i_2].moq) != 0 || parseFloat(_this.ExcelUploadOrder[i_2].quantity) < parseFloat(_this.ExcelUploadOrder[i_2].moq)) {
                        console.log(_this.notUploadPartNumber);
                        _this.notUploadPartNumber.push(_this.ExcelArray[i_2]);
                    }
                    else {
                        _this.cartArray.push({
                            "gstPercentage": _this.ExcelUploadOrder[i_2]['gstPercentage'],
                            "productId": _this.ExcelUploadOrder[i_2]['productId'],
                            "partNumber": _this.ExcelUploadOrder[i_2]['partNumber'],
                            "category": _this.ExcelUploadOrder[i_2]['category'],
                            "segment": _this.ExcelUploadOrder[i_2]['segment'],
                            "model": _this.ExcelUploadOrder[i_2]['model'],
                            "oem": _this.ExcelUploadOrder[i_2]['oem'],
                            "moq": _this.ExcelUploadOrder[i_2]['moq'],
                            "quantity": parseFloat(_this.ExcelUploadOrder[i_2]['quantity']),
                            "discountedListPrice": _this.ExcelUploadOrder[i_2]['discountedListPrice'],
                            "priceSupport": _this.ExcelUploadOrder[i_2]['priceSupport'],
                            "itemValue": parseFloat(_this.ExcelUploadOrder[i_2]['discountedListPrice']) - parseFloat(_this.ExcelUploadOrder[i_2]['priceSupport']),
                            "amount": parseFloat(_this.ExcelUploadOrder[i_2]['quantity']) * (parseFloat(_this.ExcelUploadOrder[i_2]['discountedListPrice']) - parseFloat(_this.ExcelUploadOrder[i_2]['priceSupport'])),
                            "gstamount": _this.ExcelUploadOrder[i_2]['gstamount']
                        });
                    }
                    if (i_2 == _this.ExcelUploadOrder.length - 1) {
                        _this.toast.openSucess("Product Sheet", "Upload SuccessFully");
                        console.log(_this.notUploadPartNumber);
                        if (_this.notUploadPartNumber.length != 0) {
                            _this.service.exportAsExcelFile(_this.notUploadPartNumber, 'Product Error Sheet');
                            _this.alrt.alertWarning("Item Quantity multiple of MOQ ");
                        }
                        _this.showInCart(_this.cartArray);
                    }
                }
            });
        };
        fileReader.readAsArrayBuffer(this.file);
    };
    // const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
    // const EXCEL_EXTENSION = '.xlsx';
    //   public exportAsExcelFile(json: any[], excelFileName: string): void {
    //     const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheeet(json);
    //     const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
    //     const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });
    //     this.saveAsExcelFile(excelBuffer, excelFileName);
    //   }
    //   private saveAsExcelFile(buffer: any, fileName: string): void {
    //      const data: Blob = new Blob([buffer], {type: EXCEL_TYPE});
    //      FileSaver.saveAs(data, fileName + '_export_' + new  Date().getTime() + EXCEL_EXTENSION);
    //   }
    AddOrderComponent.prototype.selectProduct = function (index) {
        this.productlist[index].ifcheck = true;
        this.productlist[index].datacheck = true;
    };
    AddOrderComponent.prototype.addToMyCart = function (index) {
        // this.tmp_orderDetail=[];
        console.log(this.productlist[index]);
        if (parseFloat(this.productlist[index].quantity) % parseFloat(this.productlist[index].moq) == 0 && parseFloat(this.productlist[index].quantity) >= parseFloat(this.productlist[index].moq)) {
            this.tmp_orderDetail.push({
                "gstPercentage": this.productlist[index]['gstPercentage'],
                "productId": this.productlist[index]['productId'],
                "partNumber": this.productlist[index]['partNumber'],
                "category": this.productlist[index]['category'],
                "segment": this.productlist[index]['segment'],
                "model": this.productlist[index]['model'],
                "oem": this.productlist[index]['oem'],
                "moq": this.productlist[index]['moq'],
                "quantity": parseFloat(this.productlist[index]['quantity']),
                "discountedListPrice": this.productlist[index]['discountedListPrice'],
                "priceSupport": this.productlist[index]['priceSupport'],
                "itemValue": this.productlist[index]['itemValue'],
                "amount": parseFloat(this.productlist[index]['itemValue']) * parseFloat(this.productlist[index]['quantity']),
                "gstamount": this.productlist[index]['gstamount']
            });
            this.toast.openSucess("Add to cart SuccessFully", '');
            this.showInCart(this.tmp_orderDetail);
        }
        else {
            console.log("enter");
            this.alrt.alertWarning("Order Quantity should be multiple of " + this.productlist[index].moq);
            this.productlist[index].datacheck = false;
            this.productlist[index].ifcheck = false;
            this.productlist[index].add = false;
        }
    };
    AddOrderComponent.prototype.calculatePriceSupport = function (index, discount) {
        var _this = this;
        console.log(index, discount);
        if (discount < 1) {
            console.log("hello");
            this.productlist[index].itemValue = this.productlist[index].itemValue;
            this.productlist[index].amount = this.productlist[index].amount;
        }
        if (discount > 0) {
            this.productlist[index].itemValue = parseFloat(this.productlist[index].itemValue) - parseFloat(this.productlist[index].priceSupport);
            this.productlist[index].amount = parseFloat(this.productlist[index]['itemValue']) * parseFloat(this.productlist[index]['quantity']);
            console.log(this.productlist);
            console.log(this.tmp_orderDetail);
            var tmpindex = this.tmp_orderDetail.findIndex(function (row) { return row.productId === _this.productlist[index].productId; });
            if (tmpindex != -1) {
                console.log("id");
                this.tmp_orderDetail[tmpindex].itemValue = this.productlist[index].itemValue;
                this.tmp_orderDetail[tmpindex].amount = this.productlist[index].amount;
                this.tmp_orderDetail[tmpindex].priceSupport = discount;
            }
        }
    };
    AddOrderComponent.prototype.checkValidate = function (index) {
        console.log(this.productlist[index].quantity);
        console.log(this.productlist[index].moq);
        if (parseFloat(this.productlist[index].quantity) % parseFloat(this.productlist[index].moq) == 0) {
            console.log("inchangIf");
            this.productlist[index].add = true;
            this.tmp_orderDetail.push({
                "gstPercentage": this.productlist[index]['gstPercentage'],
                "productId": this.productlist[index]['productId'],
                "partNumber": this.productlist[index]['partNumber'],
                "category": this.productlist[index]['category'],
                "segment": this.productlist[index]['segment'],
                "model": this.productlist[index]['model'],
                "oem": this.productlist[index]['oem'],
                "moq": this.productlist[index]['moq'],
                "quantity": parseFloat(this.productlist[index]['quantity']),
                "discountedListPrice": this.productlist[index]['discountedListPrice'],
                "priceSupport": this.productlist[index]['priceSupport'],
                "itemValue": this.productlist[index]['itemValue'],
                "amount": parseFloat(this.productlist[index]['itemValue']) * parseFloat(this.productlist[index]['quantity']),
                "gstamount": this.productlist[index]['gstamount']
            });
        }
        else {
            console.log("change");
            this.productlist[index].datacheck = false;
            this.productlist[index].ifcheck = false;
            this.alrt.alertWarning("Order Quantity should be multiple of " + this.productlist[index].moq);
        }
    };
    AddOrderComponent.prototype.SchemeDetail = function (partNumber, index) {
        var _this = this;
        if (this.productlist[index].schemeCount == 0) {
            console.log("hello");
        }
        else {
            this.loader = true;
            this.service.fetchData({ "partNumberCode": partNumber }, "/getschemeonproduct").subscribe(function (result) {
                console.log(result);
                _this.loader = false;
                if (result['message'] == 'Success') {
                    _this.schemeList = result['data'];
                    // for(let i=0;i<this.schemeList.length;i++)
                    // {
                    //   this.schemeString=this.schemeList[i].offerDescription;
                    //   this.schemeString2=this.schemeString2+this.schemeString+'<br>';
                    //   this.schemeString='';
                    // }
                    // console.log(this.schemeString2);
                    // this.alrt.alertWarning(this.schemeString2);
                    var dialogRef = _this.dialog.open(_schemepopup_schemepopup_component__WEBPACK_IMPORTED_MODULE_14__["SchemepopupComponent"], {
                        width: '600px',
                        data: _this.schemeList
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        console.log(result);
                        console.log('The dialog was closed');
                    });
                }
            });
        }
    };
    AddOrderComponent.prototype.addCart = function (product, index, event) {
        console.log(event);
        if (event.checked) {
            // this.cartArray.push(product);
        }
        else {
            var idIndex = this.tmp_orderDetail.findIndex(function (row) { return row.productId == product.productId; });
            console.log(idIndex);
            this.tmp_orderDetail.splice(idIndex, 1);
            this.productlist[index].ifcheck = false;
            this.productlist[index].quantity = this.productlist[index].moq;
        }
        console.log(this.cartArray);
    };
    AddOrderComponent.prototype.addToCart = function () {
        console.log(this.tmp_orderDetail);
        for (var i = 0; i < this.tmp_orderDetail.length; i++) {
            if (this.tmp_orderDetail[i].quantity < parseFloat(this.productlist[i].moq)) {
                this.alrt.alertWarning("Order Quantity Minimum" + this.productlist[i].moq);
                break;
            }
            else {
                this.cartArray.push({
                    "gstPercentage": this.tmp_orderDetail[i]['gstPercentage'],
                    "productId": this.tmp_orderDetail[i]['productId'],
                    "partNumber": this.tmp_orderDetail[i]['partNumber'],
                    "category": this.tmp_orderDetail[i]['category'],
                    "segment": this.tmp_orderDetail[i]['segment'],
                    "model": this.tmp_orderDetail[i]['model'],
                    "oem": this.tmp_orderDetail[i]['oem'],
                    "moq": this.tmp_orderDetail[i]['moq'],
                    "quantity": parseFloat(this.tmp_orderDetail[i]['quantity']),
                    "discountedListPrice": this.tmp_orderDetail[i]['discountedListPrice'],
                    "priceSupport": this.tmp_orderDetail[i]['priceSupport'],
                    "itemValue": this.tmp_orderDetail[i]['itemValue'],
                    "amount": parseFloat(this.tmp_orderDetail[i]['itemValue']) * parseFloat(this.tmp_orderDetail[i]['quantity']),
                    "gstamount": this.tmp_orderDetail[i]['gstamount']
                });
                if (i == this.tmp_orderDetail.length - 1) {
                    this.toast.openSucess("Add to cart SuccessFully", '');
                    this.showInCart(this.cartArray);
                }
            }
        }
    };
    AddOrderComponent.prototype.showInCart = function (orderArray) {
        if (orderArray === void 0) { orderArray = []; }
        // this.toast.openSucess("Add to cart SuccessFully",'');
        console.log(orderArray);
        var _loop_3 = function (i) {
            if (this_1.tmp_array.length == 0) {
                this_1.finel_Array.push(orderArray[i]);
                this_1.tmp_array.push({ category: orderArray[i]['category'], quantity: orderArray[i]['quantity'], amount: orderArray[i]['amount'], gstamount: orderArray[i]['gstamount'] });
                this_1.tmporderArray.push(orderArray[i]);
                this_1.orderDetail.push({ category: orderArray[i]['category'], "productId": orderArray[i].productId, "quantity": orderArray[i].quantity, "price": orderArray[i].itemValue, "gstPercentage": orderArray[i].gstPercentage });
                console.log(this_1.tmporderArray);
            }
            else {
                var idIndex = this_1.orderDetail.findIndex(function (row) { return row.productId == orderArray[i].productId; });
                var tmpval = false;
                if (idIndex != -1) {
                    console.log(idIndex);
                    console.log(this_1.tmporderArray);
                    console.log(this_1.finel_Array);
                    this_1.tmporderArray.splice(idIndex, 1);
                    this_1.orderDetail.splice(idIndex, 1);
                    this_1.tmporderArray.push(orderArray[i]);
                    this_1.orderDetail.push({ category: orderArray[i]['category'], "productId": orderArray[i].productId, "quantity": orderArray[i].quantity, "price": orderArray[i].itemValue, "gstPercentage": orderArray[i].gstPercentage });
                    var itemIndex = this_1.tmp_array.findIndex(function (row) { return row.category == orderArray[i]['category']; });
                    if (itemIndex != -1) {
                        console.log(this_1.tmporderArray);
                        this_1.tmp_array[itemIndex].quantity = parseFloat(this_1.tmp_array[itemIndex].quantity) - parseFloat(this_1.finel_Array[idIndex].quantity);
                        this_1.tmp_array[itemIndex].amount = parseFloat(this_1.tmp_array[itemIndex].amount) - parseFloat(this_1.finel_Array[idIndex].amount);
                        this_1.tmp_array[itemIndex].gstamount = parseFloat(this_1.tmp_array[itemIndex].gstamount) - parseFloat(this_1.finel_Array[idIndex].gstamount);
                        this_1.finel_Array.splice(idIndex, 1);
                        tmpval = true;
                        if (tmpval) {
                            console.log(this_1.tmporderArray);
                            this_1.tmp_array[itemIndex].quantity = parseFloat(this_1.tmp_array[itemIndex].quantity) + parseFloat(orderArray[i].quantity);
                            this_1.tmp_array[itemIndex].amount = parseFloat(this_1.tmp_array[itemIndex].amount) + parseFloat(orderArray[i].amount);
                            this_1.tmp_array[itemIndex].gstamount = parseFloat(this_1.tmp_array[itemIndex].gstamount) + parseFloat(orderArray[i].gstamount);
                            this_1.finel_Array.push(orderArray[i]);
                        }
                    }
                }
                if (idIndex === -1) {
                    // this.tmp_orderDetail.push({"productId":orderArray[i].productId,"quantity":orderArray[i].quantity,"amount":orderArray[i].amount,"gstamount":orderArray[i].gstamount});
                    this_1.orderDetail.push({ category: orderArray[i]['category'], "productId": orderArray[i].productId, "quantity": orderArray[i].quantity, "price": orderArray[i].itemValue, "gstPercentage": orderArray[i].gstPercentage });
                    this_1.finel_Array.push(orderArray[i]);
                    this_1.tmporderArray.push(this_1.tmporderArray[i]);
                    var itemIndex = this_1.tmp_array.findIndex(function (row) { return row.category == orderArray[i]['category']; });
                    if (itemIndex === -1) {
                        this_1.tmp_array.push({ category: orderArray[i]['category'], quantity: orderArray[i]['quantity'], amount: orderArray[i]['amount'], gstamount: orderArray[i]['gstamount'] });
                    }
                    else {
                        this_1.tmp_array[itemIndex].quantity = parseFloat(orderArray[i]['quantity']) + parseFloat(this_1.tmp_array[itemIndex].quantity);
                        this_1.tmp_array[itemIndex].amount = parseFloat(orderArray[i]['amount']) + parseFloat(this_1.tmp_array[itemIndex].amount);
                        this_1.tmp_array[itemIndex].gstamount = parseFloat(orderArray[i]['gstamount']) + parseFloat(this_1.tmp_array[itemIndex].gstamount);
                    }
                }
            }
            if (i == orderArray.length - 1) {
                this_1.tmp = true;
            }
        };
        var this_1 = this;
        for (var i = 0; i < orderArray.length; i++) {
            _loop_3(i);
        }
        if (this.tmp) {
            this.cartArray = [];
            this.tmp_orderDetail = [];
            console.log(this.finel_Array);
            this.calculate(this.finel_Array);
            console.log(this.tmp_array);
            // this.productlist=this.tmpProductList;
            for (var index = 0; index < this.productlist.length; index++) {
                this.productlist[index].datacheck = false;
                this.productlist[index].ifcheck = false;
                // this.productlist[index].quantity=0;
            }
        }
    };
    AddOrderComponent.prototype.calculate = function (order_array) {
        console.log(order_array);
        this.itemTotel = 0;
        this.subTotal = 0;
        this.gstTotal = 0;
        this.grandTotal = 0;
        for (var i = 0; i < order_array.length; i++) {
            console.log("process");
            this.itemTotel = parseFloat(this.itemTotel) + parseFloat(order_array[i].quantity);
            this.subTotal = parseFloat(this.subTotal) + parseFloat(order_array[i].amount);
            this.gstTotal = parseFloat(this.gstTotal) + parseFloat(order_array[i].gstamount);
            console.log(this.gstTotal);
            if (i == order_array.length - 1) {
                this.grandTotal = parseFloat(this.grandTotal) + (parseFloat(this.gstTotal) + parseFloat(this.subTotal));
            }
        }
    };
    AddOrderComponent.prototype.productDetail = function (category) {
        var _this = this;
        var dialogRef = this.dialog.open(_list_order_list_order_component__WEBPACK_IMPORTED_MODULE_6__["ListOrderComponent"], {
            width: '1600px',
            data: {
                product: this.finel_Array,
                category: category
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
            var tmpCartArray = _this.service.getData();
            if (tmpCartArray) {
                _this.tmp_array = [];
                _this.finel_Array = [];
                _this.orderDetail = [];
                _this.showInCart(tmpCartArray);
            }
        });
    };
    AddOrderComponent.prototype.selectAddress = function (id) {
        console.log(id);
        if (id != '') {
            if (id.shippingAddressId == 'Other') {
                console.log(this.data.networkId);
                if (this.userType == 3) {
                    this.otherAddress(this.networkId);
                }
                else {
                    this.otherAddress(this.data.networkId[0].networkId);
                }
            }
            else {
                this.data.shippingAddressId = id.shippingAddressId;
            }
        }
        else {
            this.data.shippingAddressId = null;
        }
        console.log(this.data.shippingAddressId);
    };
    AddOrderComponent.prototype.SaveOrder = function () {
        if (this.userRole == 1) {
            this.companyStatus = 1;
        }
        else {
            this.companyStatus = 2;
        }
        this.orderStatus = 1;
        this.OrderPlaced();
    };
    AddOrderComponent.prototype.SubbmitOrder = function () {
        console.log(this.userRole);
        if (this.userRole == 12) {
            this.orderStatus = 3;
            this.companyStatus = 1;
            this.OrderPlaced();
        }
        else if (this.userRole == 1) {
            this.orderStatus = 2;
            this.companyStatus = 1;
            this.OrderPlaced();
        }
        else {
            this.orderStatus = 2;
            this.companyStatus = 1;
            this.OrderPlaced();
        }
    };
    AddOrderComponent.prototype.OrderPlaced = function () {
        var _this = this;
        this.loader = true;
        console.log(this.data.distributor);
        console.log(this.data);
        if (this.userRole == 12) {
            this.value = { 'shippingAddressId': this.data.shippingAddressId, "remarks": this.data.remarks, "dealerStatus": this.orderStatus, "companyStatus": this.companyStatus, "networkId": this.networkId, "orderDetail": this.orderDetail, "createBy": this.userId, "amount": this.subTotal, "quantity": this.itemTotel, "gstAmount": this.gstTotal, "totalAmount": this.grandTotal };
        }
        else {
            this.value = { 'shippingAddressId': this.data.shippingAddressId, "remarks": this.data.remarks, "dealerStatus": this.orderStatus, "companyStatus": this.companyStatus, "networkId": this.data.distributor, "orderDetail": this.orderDetail, "createBy": this.userId, "amount": this.subTotal, "quantity": this.itemTotel, "gstAmount": this.gstTotal, "totalAmount": this.grandTotal };
        }
        console.log(this.value);
        this.service.fetchData(this.value, "order/add").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.rout.navigate(['/order-list']);
                if (_this.orderStatus == 1) {
                    _this.toast.openSucess("Order Save In Draft", "SuccessFully");
                }
                else {
                    _this.toast.openSucess("Order Placed", "SuccessFully");
                }
                {
                }
            }
        });
    };
    AddOrderComponent.prototype.removeFromCart = function (index) {
        var _this = this;
        this.temp = false;
        this.alrt.delete("Product").then(function (result) {
            if (result) {
                _this.ordlength = _this.finel_Array;
                console.log(_this.tmp_array[index].quantity, "&", _this.tmp_array[index].amount, "&", _this.tmp_array[index].gstamount);
                _this.itemTotel = parseFloat(_this.itemTotel) - parseFloat(_this.tmp_array[index].quantity);
                _this.subTotal = parseFloat(_this.subTotal) - parseFloat(_this.tmp_array[index].amount);
                _this.gstTotal = parseFloat(_this.gstTotal) - parseFloat(_this.tmp_array[index].gstamount);
                _this.grandTotal = parseFloat(_this.grandTotal) - (parseFloat(_this.tmp_array[index].amount) + parseFloat(_this.tmp_array[index].gstamount));
                console.log(_this.tmp_array[index]['category']);
                _this.finel_Array = _this.finel_Array.filter(function (row) { return row.category != _this.tmp_array[index]['category']; });
                _this.orderDetail = _this.orderDetail.filter(function (row) { return row.category != _this.tmp_array[index]['category']; });
                console.log(_this.finel_Array);
                _this.temp = true;
            }
            if (_this.temp) {
                _this.tmp_array.splice(index, 1);
            }
        });
    };
    AddOrderComponent.prototype.calculateAmount = function (quantity, qty, i) {
        if (qty < 1) {
            this.productlist[i].amount = 0;
        }
        if (qty > 0) {
            this.productlist[i].amount = parseFloat(this.productlist[i]['itemValue']) * parseFloat(qty);
            this.productlist[i].gstamount = (parseFloat(this.productlist[i]['itemValue']) * parseFloat(this.productlist[i]['gstPercentage']) / 100) * this.productlist[i]['quantity'];
        }
    };
    AddOrderComponent.prototype.userTypeList = function () {
        var _this = this;
        this.service.fileData('', "usertype/list").subscribe(function (result) {
            console.log(result['data'][2]['roles']);
            _this.tmp_userList = result['data'][2]['roles'];
            for (var i = 0; i < _this.tmp_userList.length; i++) {
                console.log("hello");
                if (_this.tmp_userList[i]['roleName'] == 'Distributor') {
                    _this.distribotur_roleId = _this.tmp_userList[i]['roleId'];
                    console.log(_this.distribotur_roleId);
                    if (_this.distribotur_roleId) {
                        if (_this.userType == 2) {
                            console.log(_this.userType);
                            _this.distributorList();
                        }
                        if (_this.userType == 1) {
                            console.log(_this.userType);
                            _this.alldistributorList();
                        }
                    }
                }
            }
        });
    };
    AddOrderComponent.prototype.categorySearch = function () {
        this.category_list = [];
        for (var i = 0; i < this.tmp_categoryList.length; i++) {
            this.catsearch.search = this.catsearch.search.toLowerCase();
            this.tmp_cat = this.tmp_categoryList[i]['text'].toLowerCase();
            if (this.tmp_cat.includes(this.catsearch.search)) {
                this.category_list.push(this.tmp_categoryList[i]);
            }
        }
    };
    AddOrderComponent.prototype.segmentSearch = function () {
        this.segmentList = [];
        for (var i = 0; i < this.tmp_segmentList.length; i++) {
            this.segsearch.search = this.segsearch.search.toLowerCase();
            this.tmp_seg = this.tmp_segmentList[i]['text'].toLowerCase();
            if (this.tmp_seg.includes(this.segsearch.search)) {
                this.segmentList.push(this.tmp_segmentList[i]);
            }
        }
    };
    AddOrderComponent.prototype.oemSearch = function () {
        this.oemList = [];
        for (var i = 0; i < this.tmp_oemList.length; i++) {
            this.oemsearch.search = this.oemsearch.search.toLowerCase();
            this.tmp_oem = this.tmp_oemList[i]['text'].toLowerCase();
            if (this.tmp_oem.includes(this.oemsearch.search)) {
                this.oemList.push(this.tmp_oemList[i]);
            }
        }
    };
    AddOrderComponent.prototype.productSearchByNumber = function (partNumber, model) {
        this.productlist = [];
        for (var i = 0; i < this.tmpProductList.length; i++) {
            if (partNumber != null) {
                partNumber = partNumber.toLowerCase();
                this.tmp_pro = this.tmpProductList[i]['partNumber'].toLowerCase();
            }
            else {
                partNumber = "";
            }
            if (model != null) {
                model = model.toLowerCase();
                this.tmpModel = this.tmpProductList[i]['model'].toLowerCase();
            }
            else {
                model = "";
            }
            if (this.tmp_pro.includes(partNumber) && this.tmpModel.includes(model)) {
                this.productlist.push(this.tmpProductList[i]);
            }
        }
    };
    AddOrderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-order',
            template: __webpack_require__(/*! ./add-order.component.html */ "./src/app/order/add-order/add-order.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_dialog__WEBPACK_IMPORTED_MODULE_8__["DialogComponent"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]])
    ], AddOrderComponent);
    return AddOrderComponent;
}());



/***/ }),

/***/ "./src/app/order/detailorderlist/detailorderlist.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/order/detailorderlist/detailorderlist.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"cs-loader\" *ngIf=\"loader\"> \n        <img src=\"assets/img/loader.png\" class=\"rotate\">\n      </div>\n    \n<div class=\"edit-modal\">\n    <mat-dialog-content class=\"mat-typography pl15 pr15\" style=\"overflow-x: hidden !important; position: relative;\">\n        <p class=\"heading\">PRODUCT INFORMATION</p>\n         <!-- <div class=\"top-search right-serach\" style=\"top: 25px;\">\n                  <input type=\"text\" placeholder=\"SEARCH. . .\" style=\"background: #f8f8f8;\">\n                  <i class=\"material-icons\">search</i>\n                </div> -->\n        <div class=\"col s12 padding0\">\n            <div class=\"cs-table left-right-15\">\n                <div class=\"table-head\">\n                    <table>\n                        <tr>\n                            <th class=\"w120\">Part Number</th>\n                            <th>Model</th>\n                            <th class=\"w130\">OEM Code</th>\n                            <th class=\"w80 text-center\">QTY</th>\n                            <th class=\"w110 text-right\">Item Value</th>\n                            <th class=\"w120 text-right\">Amount</th>\n                            <th class=\"w60\">GST %</th>\n                        </tr>\n                    </table>\n                </div>\n                <div class=\"table-container pb0\">\n                    <div class=\"table-content \">\n                        <table>\n                            <tr *ngFor=\"let product of productList;let index=index\">\n                                <td class=\"w120\" >{{product.partNumberCode}}</td>\n                                <td>{{product.model}}</td>\n                                <td class=\"w130\">{{product.oem}}</td>\n                                <td class=\"w80 text-center\">\n                                    {{product.quantity}}\n                                </td>\n                                <td class=\"w110 text-right\">&#8377; {{product.price}}</td>\n                                <td class=\"w120 text-right\">&#8377; {{product.quantity * product.price}}</td>\n                                <td class=\"w60\">{{product.gstPercentage}} %</td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n        \n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-raised-button [mat-dialog-close]=\"false\" color=\"warn\">Close</button>\n    </mat-dialog-actions>\n</div>"

/***/ }),

/***/ "./src/app/order/detailorderlist/detailorderlist.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/order/detailorderlist/detailorderlist.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2RldGFpbG9yZGVybGlzdC9kZXRhaWxvcmRlcmxpc3QuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/order/detailorderlist/detailorderlist.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/order/detailorderlist/detailorderlist.component.ts ***!
  \********************************************************************/
/*! exports provided: DetailorderlistComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetailorderlistComponent", function() { return DetailorderlistComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");






var DetailorderlistComponent = /** @class */ (function () {
    function DetailorderlistComponent(data, dialog, toast, service, confirm) {
        this.data = data;
        this.dialog = dialog;
        this.toast = toast;
        this.service = service;
        this.confirm = confirm;
        this.productList = [];
        this.tmp_productList = [];
        this.finalProductList = [];
        console.log(data);
        this.category = data['category'];
        this.tmp_productList = data['product'];
        this.finalProductList = data['product'];
        for (var i = 0; i < this.tmp_productList.length; i++) {
            if (this.category === this.tmp_productList[i]['category']) {
                this.productList.push(this.tmp_productList[i]);
            }
        }
        console.log(this.productList);
    }
    DetailorderlistComponent.prototype.ngOnInit = function () {
    };
    DetailorderlistComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-detailorderlist',
            template: __webpack_require__(/*! ./detailorderlist.component.html */ "./src/app/order/detailorderlist/detailorderlist.component.html"),
            styles: [__webpack_require__(/*! ./detailorderlist.component.scss */ "./src/app/order/detailorderlist/detailorderlist.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], DetailorderlistComponent);
    return DetailorderlistComponent;
}());



/***/ }),

/***/ "./src/app/order/edit-order/edit-order.component.html":
/*!************************************************************!*\
  !*** ./src/app/order/edit-order/edit-order.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n    <div class=\"cs-loader\" *ngIf=\"loader\"> \n        <img src=\"assets/img/loader.png\" class=\"rotate\">\n    </div>\n    \n    <div class=\"middle-container\">\n        <div class=\"page-heading\">\n            <img src=\"assets/img/order_icon.svg\" class=\"h-icon\">\n            <div class=\"heading-text\">\n                <h2>Order</h2>\n                <p>Add New Order</p>\n            </div>\n        </div>\n    </div>\n    \n    <!-- <form #f=\"ngForm\" (ngSubmit)=\" f.valid && placeOrder() \"> -->\n        <div class=\"container-outer\">\n            <div class=\"container\" >\n                <div class=\"row\">\n                    <div class=\"col s12\">\n                        <div class=\"sprate-box mb20 pt0\" style=\"overflow: inherit;\">\n                            <div class=\"cs-heading\" *ngIf=\"userRole !=12\">\n                                <h2><span>Dealer :</span> {{order_data.establishment}}/{{distributorDetail.networkCode}}</h2>\n                            </div>\n                            <div class=\"from-fields\" >\n                                <div class=\"row mt15\">\n                                    <div class=\"col s6\">\n                                        <div class=\"multi-all-select\">\n                                            <label>Shipping Address</label>\n                                            <ng-multiselect-dropdown\n                                            [placeholder]=\"'Shipping Address'\"\n                                            [data]=\"tmpShippingAddress\"\n                                            [(ngModel)]=\"adrs.shipping\"\n                                            name=\"shipping\"\n                                            #shipping=\"ngModel\"\n                                            [settings]=\"dropdownSettings4\"\n                                            (onSelect)=\"selectAddress($event)\"\n                                            (onDeSelect)=\"selectAddress(adrs.shipping)\"\n                                            >\n                                        </ng-multiselect-dropdown>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div class=\"row mt15\">\n                                <div  class=\"col s4\">\n                                    <div class=\"multi-all-select\">\n                                        <label>Segment</label>\n                                        <ng-multiselect-dropdown\n                                        [placeholder]=\"'Select Segment'\"\n                                        [data]=\"segmentList\"\n                                        [(ngModel)]=\"data.segment\"\n                                        name=\"segment\"\n                                        #segment=\"ngModel\"\n                                        [settings]=\"dropdownSettings1\"\n                                        (onSelect)=\"productList(data.segment,data.category)\"\n                                        (onDeSelect)=\"productList(data.segment,data.category)\"\n                                        >\n                                        \n                                    </ng-multiselect-dropdown>\n                                </div>\n                            </div>                           \n                            <div class=\"col s4\">\n                                <div class=\"multi-all-select\">\n                                    <label>Category</label>\n                                    <ng-multiselect-dropdown\n                                    [placeholder]=\"'Select Category'\"\n                                    [data]=\"category_list\"\n                                    [(ngModel)]=\"data.category\"\n                                    name=\"category\"\n                                    #category=\"ngModel\"\n                                    [settings]=\"dropdownSettings2\"\n                                    (onSelect)=\"productList(data.segment,data.category)\"\n                                    (onDeSelect)=\"productList(data.segment,data.category)\"\n                                    >\n                                </ng-multiselect-dropdown>\n                            </div>\n                        </div>                                \n                        <div   class=\"col s4 \">\n                            <div class=\"multi-all-select\">\n                                <label>Product Name</label>\n                                <ng-multiselect-dropdown\n                                [placeholder]=\"'Select Product'\"\n                                [data]=\"ProductName_list\"\n                                [(ngModel)]=\"data.product\"\n                                name=\"product\"\n                                #product=\"ngModel\"\n                                [settings]=\"dropdownSettings3\"\n                                (onSelect)=\"getCartProductList(data.segment,data.category,data.product)\"\n                                (onDeSelect)=\"getCartProductList(data.segment,data.category,data.product)\">\n                            </ng-multiselect-dropdown>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n    </div>\n    \n    <div >\n        <!-- <div class=\"row\">\n            <div class=\"col s4\">\n                <div class=\"territory-info \">\n                    <div class=\"head\" [ngClass]=\"{'active':active.subcategory==true}\">\n                        <h2>SEGMENT</h2>\n                        <i class=\"material-icons search-icon right20\" (click)=\"toggleterritory('subcategory','open')\"  matRipple>search</i>\n                        <input type=\"text\" placeholder=\"search...\" id=\"subcategory\" (input)=\"segmentSearch()\" name=\"search\" [(ngModel)]=\"segsearch.search\" class=\"fix-search\">\n                        <i class=\"material-icons close-icon\" (click)=\"toggleterritory('subcategory','close')\" matRipple>clear</i>\n                    </div>\n                    <div class=\"cs-checkbox\">\n                        <div class=\"checkbox-outer\">\n                            <section class=\"checkbox-inner\"  >\n                                <mat-radio-button class=\"check-list category-bg\" name=\"segment\" (change)=\"productList(data.category,segment.value)\"(change)=\"selectedItem(segment.value,'','','')\" *ngFor=\"let segment of segmentList\" value=\"{{segment.value}}\">{{segment.text}}</mat-radio-button>\n                            </section>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"col s4\">\n                <div class=\"territory-info \">\n                    <div class=\"head\" [ngClass]=\"{'active':active.category==true}\">\n                        <h2>CATEGORY</h2>\n                        <i class=\"material-icons search-icon right20\" (click)=\"toggleterritory('category','open')\"  matRipple>search</i>\n                        <input type=\"text\" placeholder=\"search...\" id=\"category\" (input)=\"categorySearch()\" name=\"search\" [(ngModel)]=\"catsearch.search\" class=\"fix-search\">\n                        <i class=\"material-icons close-icon\" (click)=\"toggleterritory('category','close')\" matRipple>clear</i>\n                    </div>\n                    <div class=\"cs-checkbox\">\n                        <div class=\"checkbox-outer\">\n                            <section class=\"checkbox-inner\">\n                                <mat-radio-button class=\"check-list category-bg\"  (change)=\"productList(cat.value,data.segment)\" (change)=\"selectedItem('',cat.value,'','')\" *ngFor=\"let cat of category_list\" name=\"category\"  value={{cat.value}}>{{cat.text}}</mat-radio-button>\n                            </section>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col s4\">\n                <div class=\"territory-info \">\n                    <div class=\"head\" [ngClass]=\"{'active':active.series1==true}\">\n                        <h2>Product Name</h2>\n                        <i class=\"material-icons search-icon right20\" (click)=\"toggleterritory('series1','open')\"  matRipple>search</i>\n                        <input type=\"text\" placeholder=\"search...\" id=\"series1\" (input)=\"subSegmentSearch()\" name=\"search\" [(ngModel)]=\"subsegsearch.search\" class=\"fix-search\">\n                        <i class=\"material-icons close-icon\" (click)=\"toggleterritory('series1','close')\" matRipple>clear</i>\n                    </div>\n                    <div class=\"cs-checkbox\">\n                        <div class=\"checkbox-outer\">\n                            <section class=\"checkbox-inner\" >\n                                <mat-checkbox class=\"check-list category-bg\" name=\"subSegment\" (change)=\"getCartProductList($event,data.category,data.segment,product.productName)\" (change)=\"selectedItem('','',product.productName,$event)\"*ngFor=\"let product of product_list;let index=index\" value=\"{{product.productName}}\">{{product.productName}}</mat-checkbox>\n                            </section>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div> -->\n        \n        <div class=\"sprate-box mb20 mt20\">\n            <div class=\"row mb0\">\n                <div class=\"col s4 ml0\">\n                    <div class=\"upload-excel\">\n                        <label>\n                            <input multiple=\"\" style=\"display: none;\" name=\"attachment\" type=\"file\" id=\"selectfile\"  (change)=\"incomingfile('selectfile',$event)\" required >\n                            <div class=\"outer\">\n                                <div class=\"innear\">\n                                    <i class=\"material-icons upload-ic\" >cloud_upload</i>\n                                    <p>Import Attachment</p>\n                                </div>\n                            </div>\n                        </label>\n                        <p></p>\n                    </div>\n                </div>\n                <div class=\"col s8 text-right\">\n                    <div class=\"cs-btn\">\n                        <div *ngIf=\"productlist.length!=0\" class=\"in-btn\">\n                            <button mat-raised-button color=\"accent\" (click)=\"downloadFile()\" >\n                                <i class=\"material-icons\">cloud_download</i> Download\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        \n        <div  *ngIf=\"productlist.length!=0 || productdiv==true\" class=\"col s12 padding0\">\n            <div class=\"heading-bg left-right-15 mb0\">\n                <h2>PRODUCT INFORMATION</h2>\n            </div>\n            <div class=\"cs-table left-right-15\">\n                <div class=\"table-head pr28\">\n                    <table>\n                        <tr>\n                            <th class=\"w30\"></th>\n                            <th class=\"w150\">Part Number</th>\n                            <th >Product Model</th>\n                            <th class=\"w70\">Min. Qty</th>\n                            <th class=\"w80\">Order Qty</th>\n                            <th class=\"w80\">Pending Order</th>\n                            <th class=\"w90 text-right\">Price</th>\n                            <th class=\"w100 \">Price Support</th>\n                            <th class=\"w100 \">Net Item Value</th>\n                            <th class=\"w120\">Net Order Value</th>\n                            <th class=\"w55\">GST %</th>\n                            <th class=\"w70\">Scheme</th>\n                        </tr>\n                    </table>\n                </div>\n                <div class=\"table-head bdrt pr28\" >\n                    <table>\n                        <tr>\n                            <th class=\"w30\"></th>\n                            <th class=\"w130\">\n                                <div class=\"th-search-acmt\">\n                                    <mat-form-field>\n                                        <input type=\"text\"  name=\"search\" [(ngModel)]=\"productName.search\" (input)=\"productSearchByNumber(productName.search,modelName.search)\" matInput [matAutocomplete]=\"auto1\">\n                                        <mat-autocomplete #auto1=\"matAutocomplete\" >\n                                        </mat-autocomplete>\n                                    </mat-form-field> \n                                </div>\n                            </th>\n                            <th >\n                                <div class=\"th-search-acmt\">\n                                    <mat-form-field>\n                                        <input type=\"text\"  name=\"search\" [(ngModel)]=\"modelName.search\" (input)=\"productSearchByNumber(productName.search,modelName.search)\"  matInput [matAutocomplete]=\"auto4\">\n                                        <mat-autocomplete #auto4=\"matAutocomplete\" >\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </div>\n                            </th>\n                            <th class=\"w70\">&nbsp;</th>\n                            <th class=\"w80\">&nbsp;</th>\n                            <th class=\"w80\">&nbsp;</th>\n                            <th class=\"w90\">&nbsp;</th>\n                            <th class=\"w100\">&nbsp;</th>\n                            <th class=\"w100\">&nbsp;</th>\n                            <th class=\"w120\">&nbsp;</th>\n                            <th class=\"w55\">&nbsp;</th>\n                            <th class=\"w70\">&nbsp;</th>\n                            \n                        </tr>\n                    </table>\n                </div>\n                \n                <div *ngIf=\"productdiv==true\" class=\"table-container \">\n                    <div class=\"table-content height-scroll\">\n                        <table>\n                            <tr *ngFor=\"let product of productlist;let index=index\">\n                                <td class=\"w30\"><span *ngIf=\"product.ifcheck\"><mat-checkbox  name=\"datacheck\" [checked]=\"product.datacheck\"  (change)=\"addCart(product,index,$event)\" >&nbsp; </mat-checkbox></span></td>\n                                <td class=\"w130\">{{product.partNumber}}</td>\n                                <td  >{{product.model}}</td>\n                                <td class=\"w70\">{{product.moq}}</td>\n                                <td class=\"w80\">\n                                    <div class=\"td-input\">\n                                        <input type=\"number\" (keyup.enter)=\"addToMyCart(index)\" (change)=\"checkValidate(index)\" (input)=\"selectProduct(index)\" (input)=\"calculateAmount(product.moq,product.quantity,index)\" name=\"qty\" #quantity=\"ngModel\" [(ngModel)]=\"product.quantity\" required>\n                                    </div>\n                                </td>\n                                <td class=\"w80\" >\n                                    <a class=\"link-btn\" (click)=\"pendingOrder(product.productId)\" >{{product.pendingQty}}</a>\n                                </td>\n                                <td class=\"w90\" >&#8377; {{product.discountedListPrice}}</td>\n                                <td class=\"w100\" >&#8377; {{product.priceSupport}}</td>\n                                <!-- <td class=\"w100\">\n                                    <div class=\"td-input\">\n                                        <input type=\"number\" readonly name=\"priceSupport\" #priceSupport=\"ngModel\" (keyup.enter)=\"calculatePriceSupport(index,product.priceSupport)\" [(ngModel)]=\"product.priceSupport\" required>\n                                    </div>\n                                </td> -->\n                                <td class=\"w100\" >&#8377; {{product.itemValue}}</td>\n                                <td class=\"w120\">&#8377; {{product.amount}}</td>\n                                <td class=\"w55\">{{product.gstPercentage}} %</td>\n                                <td class=\"w70 \" (click)=\"SchemeDetail(product.partNumber,index)\">\n                                    <div *ngIf=\"product.schemeCount!=0\" class=\"icons-list\">\n                                        <i class=\"material-icons check\">check_circle </i>\n                                        <i class=\"material-icons forword\">keyboard_arrow_right </i>\n                                        <!-- <i *ngIf=\"product.schemeCount==0\" class=\"material-icons close\">clear </i> -->\n                                    </div>\n                                    \n                                </td>  \n                            </tr>\n                        </table>\n                    </div>\n                    <div class=\"data-not-available\" *ngIf=\"productlist.length==0\">\n                        <div class=\"outer\">\n                            <div class=\"iinear\">\n                                <div class=\"figure\" matRipple>\n                                    <div class=\"header\">\n                                        <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                    </div>\n                                    \n                                    <div class=\"description\">\n                                        <div class=\"cs-heading\">\n                                            <h2>No Product</h2>\n                                        </div>\n                                        <div class=\"img\">\n                                            <i class=\"material-icons\">error_outline</i>\n                                        </div>\n                                        <div class=\"psc\">\n                                            <p>data not available</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"cs-btn mt20 text-right\">\n                <div class=\"in-btn\">\n                    <button mat-raised-button color=\"accent\" [disabled]=\"tmp_orderDetail.length==0\" (click)=\"addToCart()\" >Add to Cart</button>\n                </div>\n            </div>\n        </div>\n        \n        \n        <div class=\"col s12 padding0\">\n            \n            <div class=\"heading-bg left-right-15\">\n                <h2>Product In Cart</h2>\n            </div>\n            <div class=\"row\">\n                <div class=\"col s12\">\n                    <div class=\"cs-table left-right-15\">\n                        <div class=\"table-head\">\n                            <table>\n                                <tr>\n                                    <th class=\"w110\">Category</th>\n                                    <th class=\"w110\">Items</th>\n                                    <th class=\"w110\">Net Order Value</th>\n                                    <!-- <th class=\"w80\">Action</th> -->\n                                </tr>\n                            </table>\n                        </div>\n                        <div class=\"table-container\">\n                            <div class=\"table-content\">\n                                <table>\n                                    <tr *ngFor=\"let order of tmp_array;let i=index\">\n                                        <td class=\"w110\"><a mat-button class=\"link-btn\" (click)=\"productDetail(order.category)\" >{{order.category}}</a></td>\n                                        <td class=\"w110\">{{order.quantity}}</td>\n                                        <td class=\"w110\">{{order.amount}}</td>\n                                        <!-- <td class=\"w80 text-center\">\n                                            <a class=\"action-cart\" mat-button><i class=\"material-icons red-clr\"(click)=\"removeFromCart(i)\">delete_forever</i></a>\n                                        </td> -->\n                                        \n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n            \n            \n            <div class=\"from-fields\">\n                <div class=\"row\">\n                    <div class=\"col s6\">\n                        <div class=\"details-info pt0\">\n                            <div class=\"basic-details \">\n                                <div class=\"row\">\n                                    <div class=\"col s12 padding0 cs-figure\">\n                                        <h2>CREDIT LIMIT</h2>\n                                        <ul>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Limit</span>\n                                                        <p>{{distributorDetail.creditLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Used</span>\n                                                        <p>{{distributorDetail.creditUsed | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balanced</span>\n                                                        <p>{{distributorDetail.creditBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div class=\"row mt15\">\n                                    <div class=\"col s12 padding0 cs-figure\">\n                                        <h2>Target Info</h2>\n                                        <ul *ngIf=\"currentMonth==1\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.janTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.janTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.janTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                        <ul *ngIf=\"currentMonth==2\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.febTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.febTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.febTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                        <ul *ngIf=\"currentMonth==3\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.marTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.marTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.marTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul> \n                                        <ul *ngIf=\"currentMonth==4\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.aprTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.aprTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.aprTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                        <ul *ngIf=\"currentMonth==5\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.mayTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.mayTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.mayTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul> \n                                        <ul *ngIf=\"currentMonth==6\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.junTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.junTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.junTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul> \n                                        <ul *ngIf=\"currentMonth==7\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.julTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.julTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.julTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul> \n                                        <ul *ngIf=\"currentMonth==8\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.augTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.augTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.augTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul> \n                                        <ul *ngIf=\"currentMonth==9\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.sepTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.sepTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.sepTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                        <ul *ngIf=\"currentMonth==10\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.octTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.octTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.octTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                        <ul *ngIf=\"currentMonth==11\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.novTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.novTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.novTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                        <ul *ngIf=\"currentMonth==12\">\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>{{current_month}} Target</span>\n                                                        <p>{{monthleyTarget.decTargetLimit | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Achived</span>\n                                                        <p>{{monthleyTarget.decTargetAchieved | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"outer\">\n                                                    <div class=\"inner\">\n                                                        <span>Balance</span>\n                                                        <p>{{monthleyTarget.decTargetBalanced | currency: 'INR':true}}</p>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"col s6\">\n                        <div class=\"invoice-details\">\n                            <table class=\"invoice-table\">\n                                <tr>\n                                    <td class=\"td\">Total Quantity</td>\n                                    <td class=\"w200 td\">{{itemTotel}}</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"td\">Basic Total</td>\n                                    <td class=\"td\"> {{subTotal | currency: 'INR':true}}</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"td\">GST</td>\n                                    <td class=\"td\"> {{gstTotal | currency: 'INR':true}}</td>\n                                </tr>\n                                <tr>\n                                    <td class=\"td\">Grand Total</td>\n                                    <td class=\"td\"> {{grandTotal | currency: 'INR':true}}</td>\n                                </tr>\n                            </table>\n                        </div>\n                        \n                        <div class=\"control-field wp70\" style=\"float: right;\">\n                            <mat-form-field class=\"cs-input\">\n                                <input matInput placeholder=\"Enter Remark\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"data.remarks\" class=\"h110\" style=\"background: #fff;\">\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col s12\">\n                <div class=\"cs-btn mt32 text-right\">\n                    <div class=\"in-btn  mr15\">\n                        <button mat-raised-button color=\"accent\" (click)=\"SaveOrder()\" >Save As Draft</button>\n                    </div>\n                    <div class=\"in-btn\">\n                        <button mat-raised-button color=\"accent\" (click)=\"SubbmitOrder()\" [disabled]=\"orderDetail.length==0\" >Place Order</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n</div>\n<!-- <div class=\"fix-btn\">\n    \n    <a  matTooltip=\"Download Sample File\"  matTooltipPosition=\"left\" href=\"http://nextstep.net.in/kenshin/sampleFile.xlsx\" >\n        <i class=\"material-icons\">arrow_downward</i>\n    </a>\n</div> -->\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/order/edit-order/edit-order.component.scss":
/*!************************************************************!*\
  !*** ./src/app/order/edit-order/edit-order.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2VkaXQtb3JkZXIvZWRpdC1vcmRlci5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/order/edit-order/edit-order.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/order/edit-order/edit-order.component.ts ***!
  \**********************************************************/
/*! exports provided: EditOrderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditOrderComponent", function() { return EditOrderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _list_order_list_order_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../list-order/list-order.component */ "./src/app/order/list-order/list-order.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _other_address_other_address_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../other-address/other-address.component */ "./src/app/order/other-address/other-address.component.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var ts_xlsx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ts-xlsx */ "./node_modules/ts-xlsx/lib/main.browser.js");
/* harmony import */ var ts_xlsx__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(ts_xlsx__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _schemepopup_schemepopup_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../schemepopup/schemepopup.component */ "./src/app/order/schemepopup/schemepopup.component.ts");
/* harmony import */ var _pending_order_pending_order_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../pending-order/pending-order.component */ "./src/app/order/pending-order/pending-order.component.ts");















var EditOrderComponent = /** @class */ (function () {
    function EditOrderComponent(route, toast, rout, dialog, service, alrt) {
        var _this = this;
        this.route = route;
        this.toast = toast;
        this.rout = rout;
        this.dialog = dialog;
        this.service = service;
        this.alrt = alrt;
        this.loader = false;
        this.order_data = {};
        this.category_list = [];
        this.segmentList = [];
        this.tmp_segmentList = [];
        this.data = {};
        this.product_list = [];
        this.tmpproduct_list = [];
        this.segsearch = [];
        this.catsearch = [];
        this.subsegsearch = [];
        this.productName = [];
        this.modelName = [];
        this.tmp_orderDetail = [];
        this.productlist = [];
        this.tmpProductList = [];
        this.cartProductList = [];
        this.tmp_array = [];
        this.finel_Array = [];
        this.tmporderArray = [];
        this.orderDetail = [];
        this.cartArray = [];
        this.itemTotel = 0;
        this.subTotal = 0;
        this.grandTotal = 0;
        this.gstTotal = 0;
        this.user = {};
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        this.dropdownSettings3 = {};
        this.dropdownSettings4 = {};
        this.currentMonth = moment__WEBPACK_IMPORTED_MODULE_12__().format('M');
        this.current_month = moment__WEBPACK_IMPORTED_MODULE_12__().format('MMMM');
        this.active = {};
        this.ExcelUploadOrder1 = [];
        this.attachment = {};
        //   uploadFile(event) { 
        //       this.files = event.target.files; 
        //       var reader = new FileReader(); 
        //       reader.onload = this._handleReaderLoaded.bind(this); 
        //       reader.readAsBinaryString(this.files[0]); 
        //   } 
        //   _handleReaderLoaded(readerEvt) { 
        //       var binaryString = readerEvt.target.result; 
        //       this.filestring = btoa(binaryString);
        //       this.attachment.attachment=this.filestring;
        //       console.log(this.attachment);
        //       this.service.fetchData(this.attachment,"order/generate").subscribe((result)=>{
        //         console.log(result);
        //         if(result['status']=='Success')
        //         {
        //           this.ExcelUploadOrder1=result['data'];
        //           if(this.ExcelUploadOrder1.length!=0)
        //           {
        //             for(let i=0;i<this.ExcelUploadOrder1.length;i++)
        //             {
        //               console.log(parseFloat(this.ExcelUploadOrder1[i].quantity),parseFloat(this.ExcelUploadOrder1[i].moq));
        //                this.ExcelUploadOrder1[i].gstamount=(parseFloat(this.ExcelUploadOrder1[i]['discountedListPrice'])*parseFloat(this.ExcelUploadOrder1[i]['gstPercentage'])/100)*parseFloat(this.ExcelUploadOrder1[i]['quantity']);
        //               if(parseFloat(this.ExcelUploadOrder1[i].quantity) % parseFloat(this.ExcelUploadOrder1[i].moq)!=0)
        //               {
        //                 console.log("hghghg");
        //                 this.alrt.alertWarning("Order Quantity multiple of "+this.ExcelUploadOrder1[i].moq);
        //                 break;
        //               }
        //               else
        //               {
        //                   this.cartArray.push({
        //                     "gstPercentage":this.ExcelUploadOrder1[i]['gstPercentage'],
        //                     "productId":this.ExcelUploadOrder1[i]['productId'],
        //                     "partNumber":this.ExcelUploadOrder1[i]['partNumber'],
        //                     "category":this.ExcelUploadOrder1[i]['category'],
        //                     "segment":this.ExcelUploadOrder1[i]['segment'],
        //                     "model":this.ExcelUploadOrder1[i]['model'],
        //                     "oem":this.ExcelUploadOrder1[i]['oem'],
        //                     "moq":this.ExcelUploadOrder1[i]['moq'],
        //                     "quantity":parseFloat(this.ExcelUploadOrder1[i]['quantity']),
        //                     "discountedListPrice":this.ExcelUploadOrder1[i]['discountedListPrice'],
        //                     "priceSupport":0,
        //                     "itemValue":this.ExcelUploadOrder1[i]['discountedListPrice'],
        //                     "amount":parseFloat(this.ExcelUploadOrder1[i]['quantity'])*parseFloat(this.ExcelUploadOrder1[i]['discountedListPrice']),
        //                     "gstamount":this.ExcelUploadOrder1[i]['gstamount']
        //                   });
        //                   if(i==this.ExcelUploadOrder1.length-1)
        //                   {
        //                     this.alrt.success();
        //                     this.showInCart(this.cartArray);
        //                   }
        //               }
        //             }
        //           }
        //         }
        //       })
        //  } 
        this.ExcelUploadOrder = [];
        this.tmpShippingAddress = [];
        this.tmpShipping = [];
        this.distributorDetail = [];
        this.shippingAddress = [];
        this.monthleyTarget = [];
        this.adrs = {};
        this.ProductName_list = [];
        this.productdiv = false;
        this.deselectProduct = [];
        this.segment = [];
        this.category = [];
        this.productNameList = [];
        this.ExcelArray = [];
        this.tmpExcelOrderArray = [];
        this.partNumberArray = [];
        //  Upload() {
        //       let fileReader = new FileReader();
        //         fileReader.onload = (e) => {
        //             this.arrayBuffer = fileReader.result;
        //             var data = new Uint8Array(this.arrayBuffer);
        //             var arr = new Array();
        //             for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);
        //             var bstr = arr.join("");
        //             var workbook = XLSX.read(bstr, {type:"binary"});
        //             var first_sheet_name = workbook.SheetNames[0];
        //             var worksheet = workbook.Sheets[first_sheet_name];
        //             console.log(XLSX.utils.sheet_to_json(worksheet,{raw:true}));
        //             this.ExcelArray=XLSX.utils.sheet_to_json(worksheet,{raw:true});
        //             for(let j=0;j<this.ExcelArray.length;j++)
        //             {
        //               this.partNumberArray.push(this.ExcelArray[j]['Part #']);
        //             }
        //             this.service.fetchData({"partNumbers":this.partNumberArray},"product/list").subscribe((result)=>{
        //              console.log(result);
        //              this.ExcelUploadOrder=result['data'];
        //              for(let k=0;k<this.ExcelUploadOrder.length;k++)
        //              {
        //                for(let i=0;i<this.ExcelArray.length;i++)
        //                {
        //                  if(this.ExcelArray[i]['Part #']==this.ExcelUploadOrder[k]['partNumber'])
        //                  {
        //                    this.ExcelUploadOrder[k].quantity=this.ExcelArray[i]['Order QTY'];
        //                  }
        //                }
        //              }
        //              console.log(this.ExcelUploadOrder);
        //              for(let i=0;i<this.ExcelUploadOrder.length;i++)
        //             {
        //               console.log(parseFloat(this.ExcelUploadOrder[i].quantity),parseFloat(this.ExcelUploadOrder[i].moq));
        //                this.ExcelUploadOrder[i].gstamount=(parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])*parseFloat(this.ExcelUploadOrder[i]['gstPercentage'])/100)*parseFloat(this.ExcelUploadOrder[i]['quantity']);
        //               if(parseFloat(this.ExcelUploadOrder[i].quantity) % parseFloat(this.ExcelUploadOrder[i].moq)!=0)
        //               {
        //                 console.log("hghghg");
        //                 this.alrt.alertWarning("Order Quantity multiple of "+this.ExcelUploadOrder[i].moq);
        //                 break;
        //               }
        //               else
        //               {
        //                   this.cartArray.push({
        //                     "gstPercentage":this.ExcelUploadOrder[i]['gstPercentage'],
        //                     "productId":this.ExcelUploadOrder[i]['productId'],
        //                     "partNumber":this.ExcelUploadOrder[i]['partNumber'],
        //                     "category":this.ExcelUploadOrder[i]['category'],
        //                     "segment":this.ExcelUploadOrder[i]['segment'],
        //                     "model":this.ExcelUploadOrder[i]['model'],
        //                     "oem":this.ExcelUploadOrder[i]['oem'],
        //                     "moq":this.ExcelUploadOrder[i]['moq'],
        //                     "quantity":parseFloat(this.ExcelUploadOrder[i]['quantity']),
        //                     "discountedListPrice":this.ExcelUploadOrder[i]['discountedListPrice'],
        //                     "priceSupport":this.ExcelUploadOrder[i]['priceSupport'],
        //                     "itemValue":parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])-parseFloat(this.ExcelUploadOrder[i]['priceSupport']),
        //                     "amount":parseFloat(this.ExcelUploadOrder[i]['quantity'])*(parseFloat(this.ExcelUploadOrder[i]['discountedListPrice'])-parseFloat(this.ExcelUploadOrder[i]['priceSupport'])),
        //                     "gstamount":this.ExcelUploadOrder[i]['gstamount']
        //                   });
        //                   if(i==this.ExcelUploadOrder.length-1)
        //                   {
        //                     this.toast.openSucess("","Upload SuccessFully");
        //                     this.showInCart(this.cartArray);
        //                   }
        //               }
        //             }
        //            })
        //         }
        //         fileReader.readAsArrayBuffer(this.file);
        // }
        this.notUploadPartNumber = [];
        this.schemeList = [];
        this.value = {};
        //  catsearch:any=[];
        this.tmp_cat = [];
        // segsearch:any=[];
        this.tmp_seg = [];
        // oemList:any=[];
        // oemsearch:any=[];
        // tmp_oem:any=[];
        // oemSearch()
        // {
        //   this.oemList=[];
        //   for(var i=0;i<this.tmp_oemList.length; i++)
        //     {
        //       this.oemsearch.search=this.oemsearch.search.toLowerCase();
        //       this.tmp_oem=this.tmp_oemList[i]['text'].toLowerCase();
        //       if(this.tmp_oem.includes(this.oemsearch.search))
        //       {
        //         this.oemList.push(this.tmp_oemList[i]);
        //       }     
        //     }    
        // }
        // subsegsearch:any=[];
        this.tmp_subseg = [];
        // productName:any=[];
        // productName:any=[];
        this.tmp_pro = [];
        // modelName:any=[];
        this.tmpModel = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.order_id = params.id;
            if (_this.order_id) {
                _this.order_detail();
                _this.categoryList();
                _this.getSegmentList();
            }
            if (_this.userType == 3) {
                _this.networkId = _this.user.data.distributerNetwork.networkId;
                _this.data.distributor = _this.networkId;
                console.log(_this.networkId);
                if (_this.networkId) {
                    //  this.openOrderDiv(this.networkId);
                }
                //  this.orderDiv=true;
            }
            console.log(_this.order_id);
        });
    }
    EditOrderComponent.prototype.ngOnInit = function () {
        this.dropdownSettings1 = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'value',
            textField: 'text',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings2 = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'value',
            textField: 'text',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings3 = {
            singleSelection: true,
            idField: 'productName',
            textField: 'productName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings4 = {
            closeDropDownOnSelection: true,
            singleSelection: true,
            idField: 'shippingAddressId',
            textField: 'shipping',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
    };
    EditOrderComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
            jquery__WEBPACK_IMPORTED_MODULE_9__('#' + key).focus();
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    EditOrderComponent.prototype.order_detail = function () {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ 'orderId': this.order_id }, 'order/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.order_data = response['data'][0];
                _this.data.shippingAddressId = _this.order_data.shippingAddressId;
                console.log(_this.order_data);
                _this.SelectedDistributorDetail(0);
            }
            if (response['status'] == 'Success') {
                _this.ExcelUploadOrder = _this.order_data.orderDetail;
                if (_this.ExcelUploadOrder.length != 0) {
                    for (var i = 0; i < _this.ExcelUploadOrder.length; i++) {
                        console.log(parseFloat(_this.ExcelUploadOrder[i].quantity), parseFloat(_this.ExcelUploadOrder[i].moq));
                        _this.ExcelUploadOrder[i].gstamount = (parseFloat(_this.ExcelUploadOrder[i]['discountedListPrice']) * parseFloat(_this.ExcelUploadOrder[i]['gstPercentage']) / 100) * parseFloat(_this.ExcelUploadOrder[i]['quantity']);
                        if (parseFloat(_this.ExcelUploadOrder[i].quantity) % parseFloat(_this.ExcelUploadOrder[i].moq) != 0) {
                            console.log("hghghg");
                            _this.alrt.alertWarning("Order Quantity multiple of " + _this.ExcelUploadOrder[i].moq);
                            break;
                        }
                        else {
                            _this.cartArray.push({
                                "gstPercentage": _this.ExcelUploadOrder[i]['gstPercentage'],
                                "productId": _this.ExcelUploadOrder[i]['productId'],
                                "partNumber": _this.ExcelUploadOrder[i]['partNumberCode'],
                                "category": _this.ExcelUploadOrder[i]['category'],
                                "segment": _this.ExcelUploadOrder[i]['segment'],
                                "model": _this.ExcelUploadOrder[i]['model'],
                                "oem": _this.ExcelUploadOrder[i]['oem'],
                                "moq": _this.ExcelUploadOrder[i]['moq'],
                                "quantity": parseFloat(_this.ExcelUploadOrder[i]['quantity']),
                                "discountedListPrice": _this.ExcelUploadOrder[i]['discountedListPrice'],
                                "priceSupport": 0,
                                "itemValue": _this.ExcelUploadOrder[i]['itemValue'],
                                "amount": parseFloat(_this.ExcelUploadOrder[i]['quantity']) * parseFloat(_this.ExcelUploadOrder[i]['discountedListPrice']),
                                "gstamount": _this.ExcelUploadOrder[i]['gstamount']
                            });
                            if (i == _this.ExcelUploadOrder.length - 1) {
                                _this.toast.openSucess("Add to cart SuccessFully", '');
                                //  this.alrt.success();
                                _this.showInCart(_this.cartArray);
                            }
                        }
                    }
                }
            }
        });
    };
    EditOrderComponent.prototype.SelectedDistributorDetail = function (val) {
        var _this = this;
        this.data.distributor = this.order_data.networkId;
        this.service.fetchData({ 'networkId': this.order_data.networkId }, "network/list").subscribe((function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.distributorDetail = result['data'][0];
                _this.tmpShipping = _this.distributorDetail['shippingAddresses'];
                _this.monthleyTarget = _this.distributorDetail.networkLimits[0];
            }
            // for(let j=0;j<this.tmpShipping.length;j++)
            // {
            //   this.tmpShippingAddress.push({"shipping":this.tmpShipping[j]['city']+','+this.tmpShipping[j]['district']+','+this.tmpShipping[j]['state']+','+this.tmpShipping[j]['pin'],"shippingAddressId":this.tmpShipping[j]['shippingAddressId']})
            // } 
            // console.log(this.tmpShippingAddress);
            // let shipId=this.tmpShippingAddress.findIndex(row => row.shippingAddressId==this.order_data.shippingAddressId);
            // this.adrs.shipping=this.tmpShippingAddress[shipId].shipping;
            // this.data.shippingAddressId=this.tmpShippingAddress[shipId].shippingAddressId;
            // if(val==1)
            // {
            //   this.adrs.shipping=this.tmpShippingAddress[this.tmpShippingAddress.length-1].shipping;
            //   this.data.shippingAddressId=this.tmpShippingAddress[this.tmpShippingAddress.length-1].shippingAddressId;
            //   console.log(this.adrs.shipping);
            // }
            var shippingData = [];
            for (var j = 0; j < _this.tmpShipping.length; j++) {
                shippingData.push({ "shipping": _this.tmpShipping[j]['city'] + ',' + _this.tmpShipping[j]['district'] + ',' + _this.tmpShipping[j]['state'] + ',' + _this.tmpShipping[j]['pin'], "shippingAddressId": _this.tmpShipping[j]['shippingAddressId'] });
            }
            shippingData.push({ "shipping": 'Other Adrress', "shippingAddressId": 'Other' });
            _this.adrs.shipping = [];
            _this.tmpShippingAddress = shippingData;
            console.log(_this.tmpShippingAddress);
            var shipId = shippingData.findIndex(function (row) { return row.shippingAddressId == _this.order_data.shippingAddressId; });
            if (shippingData.length > 1 && val == 0) {
                _this.adrs.shipping.push(shippingData[shipId]);
                _this.data.shippingAddressId = shippingData[shipId].shippingAddressId;
            }
            if (val == 1) {
                _this.adrs.shipping.push(shippingData[shippingData.length - 2]);
                _this.data.shippingAddressId = shippingData[shippingData.length - 2].shippingAddressId;
            }
        }));
    };
    EditOrderComponent.prototype.otherAddress = function (id) {
        var _this = this;
        var dialogRef = this.dialog.open(_other_address_other_address_component__WEBPACK_IMPORTED_MODULE_8__["OtherAddressComponent"], {
            width: '800px',
            data: {
                id: id
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log('The dialog was closed');
            if (result == false) {
                _this.SelectedDistributorDetail(0);
            }
            else {
                _this.SelectedDistributorDetail(1);
            }
        });
    };
    // selectAddress(id,index)
    // {
    //   console.log(id);
    //   console.log(this.adrs.shipping);
    //   this.data.shippingAddressId=id;
    // }
    EditOrderComponent.prototype.selectAddress = function (id) {
        console.log(id);
        if (id != '') {
            if (id.shippingAddressId == 'Other') {
                console.log(this.data.networkId);
                if (this.userType == 3) {
                    this.otherAddress(this.order_data.networkId);
                }
                else {
                    this.otherAddress(this.order_data.networkId);
                }
            }
            else {
                this.data.shippingAddressId = id.shippingAddressId;
            }
        }
        else {
            this.data.shippingAddressId = null;
        }
        console.log(this.data.shippingAddressId);
    };
    EditOrderComponent.prototype.categoryList = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData("", "category/list").subscribe(function (result) {
            console.log(result);
            setTimeout(function () {
                _this.loader = false;
            }, 700);
            if (result['status'] == "Success") {
                _this.category_list = result['data'];
                _this.tmp_categoryList = _this.category_list;
            }
        });
    };
    EditOrderComponent.prototype.getSegmentList = function () {
        var _this = this;
        this.service.fileData('', "segment/list").subscribe((function (result) {
            console.log(result['data']);
            if (result['status'] == "Success") {
                _this.segmentList = result['data'];
                _this.tmp_segmentList = _this.segmentList;
            }
        }));
    };
    EditOrderComponent.prototype.productList = function (segment, category) {
        var _this = this;
        if (segment === void 0) { segment = []; }
        if (category === void 0) { category = []; }
        this.productdiv = true;
        this.data.product = [];
        this.ProductName_list = [];
        var selectedCategory;
        this.productlist = [];
        // let selectedSegment;
        if (segment.length != 0 || category.length != 0) {
            if (category.length != 0) {
                this.tmpcat = category;
                if (this.tmpcat != selectedCategory) {
                    selectedCategory = category[0];
                    this.productlist = [];
                }
                else {
                    selectedCategory = category[0];
                }
                console.log("Not Null");
            }
            if (segment.length != 0) {
                this.tmpseg = segment[0];
                if (this.tmpseg != this.selectedSegment) {
                    console.log(this.tmpseg);
                    console.log(this.selectedSegment);
                    this.selectedSegment = segment[0];
                    this.productlist = [];
                    this.data.category = [];
                }
                else {
                    this.selectedSegment = segment[0];
                }
                console.log("Not Null");
            }
            this.loader = true;
            console.log(this.data.category);
            this.service.fetchData({ "networkId": this.data.distributor, "segmentCode": this.selectedSegment, "categoryCode": selectedCategory, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
                console.log(result);
                setTimeout(function () {
                    _this.loader = false;
                }, 700);
                if (result) {
                    _this.ProductName_list = [];
                    _this.cartProductList = result['data'];
                    for (var i = 0; i < _this.cartProductList.length; i++) {
                        _this.cartProductList[i].quantity = 0;
                        // this.cartProductList[i].priceSupport=0;
                        _this.cartProductList[i].ifcheck = false;
                        _this.cartProductList[i].itemValue = parseFloat(_this.cartProductList[i].discountedListPrice) - parseFloat(_this.cartProductList[i].priceSupport);
                        _this.cartProductList[i].amount = parseFloat(_this.cartProductList[i].quantity) * parseFloat(_this.cartProductList[i].itemValue);
                        _this.cartProductList[i].gstamount = (parseFloat(_this.cartProductList[i]['discountedListPrice']) * parseFloat(_this.cartProductList[i]['gstPercentage']) / 100) * parseFloat(_this.cartProductList[i]['quantity']);
                    }
                    var productTempArr_1 = _this.cartProductList;
                    _this.productlist = JSON.parse(JSON.stringify(_this.cartProductList));
                    // JSON.parse(JSON.stringify(productTempArr))
                    console.log(_this.productlist);
                    var _loop_1 = function (index) {
                        var itemIndex = _this.ProductName_list.findIndex(function (row) { return row.productName == productTempArr_1[index].productName; });
                        if (itemIndex == -1) {
                            _this.ProductName_list.push(JSON.parse(JSON.stringify(productTempArr_1[index])));
                        }
                    };
                    for (var index = 0; index < productTempArr_1.length; index++) {
                        _loop_1(index);
                    }
                    _this.tmpproduct_list = _this.productlist;
                }
            });
        }
        else {
            this.productlist = [];
            this.ProductName_list = [];
            this.cartProductList = [];
        }
    };
    // productlist:any=[];
    // tmpProductList:any=[];
    // productdiv:any=false;
    EditOrderComponent.prototype.getCartProductList = function (segment, category, productname) {
        var _this = this;
        this.productdiv = true;
        var selectedCategory;
        var selectedSegment;
        var selectedproduct;
        this.productlist = [];
        this.cartProductList = [];
        this.tmpProductList = [];
        console.log(productname);
        if (segment != null || category != null || productname != null) {
            if (segment != null) {
                selectedSegment = segment[0];
            }
            if (category != null) {
                selectedCategory = category[0];
            }
            if (productname != null) {
                selectedproduct = productname[productname.length - 1];
            }
        }
        // {
        console.log(category, segment, productname);
        this.loader = true;
        console.log(segment, category, productname);
        this.service.fetchData({ "networkId": this.data.distributor, "segmentCode": selectedSegment, "categoryCode": selectedCategory, "productName": selectedproduct, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.cartProductList = result['data'];
                for (var i = 0; i < _this.cartProductList.length; i++) {
                    _this.cartProductList[i].quantity = 0;
                    // this.cartProductList[i].priceSupport=0;
                    _this.cartProductList[i].ifcheck = false;
                    _this.cartProductList[i].itemValue = parseFloat(_this.cartProductList[i].discountedListPrice) - parseFloat(_this.cartProductList[i].priceSupport);
                    _this.cartProductList[i].amount = parseFloat(_this.cartProductList[i].quantity) * parseFloat(_this.cartProductList[i].itemValue);
                    _this.cartProductList[i].gstamount = (parseFloat(_this.cartProductList[i]['discountedListPrice']) * parseFloat(_this.cartProductList[i]['gstPercentage']) / 100) * parseFloat(_this.cartProductList[i]['quantity']);
                }
                _this.productlist = _this.productlist.concat(_this.cartProductList);
                _this.tmpProductList = _this.productlist;
            }
        });
        // else{
        //   for(let i=0;i<this.productlist.length;i++)
        //   {
        //     if(productname===this.productlist[i]['productName'])
        //     {
        //       this.productlist.splice(i,1);
        //     }
        //   }
        // }
    };
    EditOrderComponent.prototype.onDeSelect = function (segment, category, event) {
        var _this = this;
        console.log(segment, category, event);
        this.service.fetchData({ "networkId": this.data.distributor, "segmentCode": segment[0], "categoryCode": category[0], "productName": event, "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.deselectProduct = result['data'];
                console.log(_this.deselectProduct);
                var _loop_2 = function (i) {
                    _this.productlist = _this.productlist.filter(function (row) { return row.productId != _this.deselectProduct[i].productId; });
                    console.log(_this.productlist);
                };
                for (var i = 0; i < _this.deselectProduct.length; i++) {
                    _loop_2(i);
                }
            }
        });
    };
    // selectedItem(segment,category,productName,event)
    // {
    //   if(segment!='')
    //   {
    //     this.segment=[];
    //     this.segment.push(segment);
    //   }
    //   if(category!='')
    //   {
    //     this.category=[];
    //     this.category.push(category);
    //   }
    //   if(productName!='')
    //   {
    //     if(event.checked)
    //     {
    //       this.productNameList.push(productName);
    //     }
    //     else{
    //       let index=this.productNameList.findIndex(row=>row==productName)
    //       this.productNameList.splice(index,1);
    //     }
    //   }
    //   console.log(this.segment);
    //   console.log(this.category);
    //   console.log(this.productNameList);
    // }
    EditOrderComponent.prototype.selectedItem = function (segment, category, productName) {
        if (segment != '') {
            this.segment = [];
            this.segment.push(segment);
        }
        if (category != '') {
            this.category = [];
            this.category.push(category);
        }
        if (productName != null) {
            // if(event.checked)
            // {
            console.log(productName);
            this.productNameList = productName;
            console.log(this.productNameList);
            // }
            // else{
            //   let index=this.productNameList.findIndex(row=>row==productName)
            //   this.productNameList.splice(index,1);
            // }
        }
    };
    EditOrderComponent.prototype.downloadFile = function () {
        console.log("function");
        this.service.excelFileData({ "segments": this.segment, "categories": this.category, "productNames": this.productNameList }, 'order/excel').subscribe(function (result) {
            Object(file_saver__WEBPACK_IMPORTED_MODULE_10__["saveAs"])(result, 'OrderProductSheet.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
        });
    };
    EditOrderComponent.prototype.selectProduct = function (index) {
        this.productlist[index].ifcheck = true;
        this.productlist[index].datacheck = true;
    };
    EditOrderComponent.prototype.incomingfile = function (id, event) {
        this.file = event.target.files[0];
        this.Upload();
        jquery__WEBPACK_IMPORTED_MODULE_9__('#' + id).val('');
    };
    EditOrderComponent.prototype.Upload = function () {
        var _this = this;
        var fileReader = new FileReader();
        fileReader.onload = function (e) {
            _this.arrayBuffer = fileReader.result;
            var data = new Uint8Array(_this.arrayBuffer);
            var arr = new Array();
            for (var i = 0; i != data.length; ++i)
                arr[i] = String.fromCharCode(data[i]);
            var bstr = arr.join("");
            var workbook = ts_xlsx__WEBPACK_IMPORTED_MODULE_11__["read"](bstr, { type: "binary" });
            var first_sheet_name = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[first_sheet_name];
            console.log(ts_xlsx__WEBPACK_IMPORTED_MODULE_11__["utils"].sheet_to_json(worksheet, { raw: true }));
            _this.ExcelArray = ts_xlsx__WEBPACK_IMPORTED_MODULE_11__["utils"].sheet_to_json(worksheet, { raw: true });
            for (var j = 0; j < _this.ExcelArray.length; j++) {
                _this.partNumberArray.push(_this.ExcelArray[j]['Part #']);
            }
            _this.service.fetchData({ "partNumbers": _this.partNumberArray }, "product/list").subscribe(function (result) {
                console.log(result);
                _this.ExcelUploadOrder = result['data'];
                for (var k = 0; k < _this.ExcelUploadOrder.length; k++) {
                    for (var i_1 = 0; i_1 < _this.ExcelArray.length; i_1++) {
                        if (_this.ExcelArray[i_1]['Part #'] == _this.ExcelUploadOrder[k]['partNumber']) {
                            _this.ExcelUploadOrder[k].quantity = _this.ExcelArray[i_1]['Order QTY'];
                        }
                    }
                }
                console.log(_this.ExcelUploadOrder);
                for (var i_2 = 0; i_2 < _this.ExcelUploadOrder.length; i_2++) {
                    console.log(parseFloat(_this.ExcelUploadOrder[i_2].quantity), parseFloat(_this.ExcelUploadOrder[i_2].moq));
                    _this.ExcelUploadOrder[i_2].gstamount = (parseFloat(_this.ExcelUploadOrder[i_2]['discountedListPrice']) * parseFloat(_this.ExcelUploadOrder[i_2]['gstPercentage']) / 100) * parseFloat(_this.ExcelUploadOrder[i_2]['quantity']);
                    if (parseFloat(_this.ExcelUploadOrder[i_2].quantity) % parseFloat(_this.ExcelUploadOrder[i_2].moq) != 0 || parseFloat(_this.ExcelUploadOrder[i_2].quantity) < parseFloat(_this.ExcelUploadOrder[i_2].moq)) {
                        console.log("hghghg");
                        _this.notUploadPartNumber.push(_this.ExcelArray[i_2]);
                    }
                    else {
                        _this.cartArray.push({
                            "gstPercentage": _this.ExcelUploadOrder[i_2]['gstPercentage'],
                            "productId": _this.ExcelUploadOrder[i_2]['productId'],
                            "partNumber": _this.ExcelUploadOrder[i_2]['partNumber'],
                            "category": _this.ExcelUploadOrder[i_2]['category'],
                            "segment": _this.ExcelUploadOrder[i_2]['segment'],
                            "model": _this.ExcelUploadOrder[i_2]['model'],
                            "oem": _this.ExcelUploadOrder[i_2]['oem'],
                            "moq": _this.ExcelUploadOrder[i_2]['moq'],
                            "quantity": parseFloat(_this.ExcelUploadOrder[i_2]['quantity']),
                            "discountedListPrice": _this.ExcelUploadOrder[i_2]['discountedListPrice'],
                            "priceSupport": _this.ExcelUploadOrder[i_2]['priceSupport'],
                            "itemValue": parseFloat(_this.ExcelUploadOrder[i_2]['discountedListPrice']) - parseFloat(_this.ExcelUploadOrder[i_2]['priceSupport']),
                            "amount": parseFloat(_this.ExcelUploadOrder[i_2]['quantity']) * (parseFloat(_this.ExcelUploadOrder[i_2]['discountedListPrice']) - parseFloat(_this.ExcelUploadOrder[i_2]['priceSupport'])),
                            "gstamount": _this.ExcelUploadOrder[i_2]['gstamount']
                        });
                    }
                    if (i_2 == _this.ExcelUploadOrder.length - 1) {
                        _this.toast.openSucess("Product Sheet", "Upload SuccessFully");
                        console.log(_this.notUploadPartNumber);
                        if (_this.notUploadPartNumber.length != 0) {
                            _this.service.exportAsExcelFile(_this.notUploadPartNumber, 'Product Error Sheet');
                            _this.alrt.alertWarning("Item Quantity multiple of MOQ ");
                        }
                        _this.showInCart(_this.cartArray);
                    }
                }
            });
        };
        fileReader.readAsArrayBuffer(this.file);
    };
    EditOrderComponent.prototype.addToMyCart = function (index) {
        this.tmp_orderDetail = [];
        console.log(this.productlist[index]);
        if (parseFloat(this.productlist[index].quantity) % parseFloat(this.productlist[index].moq) == 0) {
            console.log("inIf");
            this.tmp_orderDetail.push({
                "gstPercentage": this.productlist[index]['gstPercentage'],
                "productId": this.productlist[index]['productId'],
                "partNumber": this.productlist[index]['partNumber'],
                "category": this.productlist[index]['category'],
                "segment": this.productlist[index]['segment'],
                "model": this.productlist[index]['model'],
                "oem": this.productlist[index]['oem'],
                "moq": this.productlist[index]['moq'],
                "quantity": parseFloat(this.productlist[index]['quantity']),
                "discountedListPrice": this.productlist[index]['discountedListPrice'],
                "priceSupport": this.productlist[index]['priceSupport'],
                "itemValue": this.productlist[index]['itemValue'],
                "amount": parseFloat(this.productlist[index]['itemValue']) * parseFloat(this.productlist[index]['quantity']),
                "gstamount": this.productlist[index]['gstamount']
            });
            this.toast.openSucess("Add to cart SuccessFully", '');
            this.showInCart(this.tmp_orderDetail);
        }
        else {
            console.log("enter");
            this.alrt.alertWarning("Order Quantity should be multiple of " + this.productlist[index].moq);
            this.productlist[index].datacheck = false;
            this.productlist[index].ifcheck = false;
        }
    };
    EditOrderComponent.prototype.calculatePriceSupport = function (index, discount) {
        var _this = this;
        console.log(index, discount);
        if (discount < 1) {
            console.log("hello");
            this.productlist[index].itemValue = this.productlist[index].itemValue;
            this.productlist[index].amount = this.productlist[index].amount;
        }
        if (discount > 0) {
            this.productlist[index].itemValue = parseFloat(this.productlist[index].itemValue) - parseFloat(this.productlist[index].priceSupport);
            this.productlist[index].amount = parseFloat(this.productlist[index]['itemValue']) * parseFloat(this.productlist[index]['quantity']);
            console.log(this.productlist);
            console.log(this.tmp_orderDetail);
            var tmpindex = this.tmp_orderDetail.findIndex(function (row) { return row.productId === _this.productlist[index].productId; });
            if (tmpindex != -1) {
                console.log("id");
                this.tmp_orderDetail[tmpindex].itemValue = this.productlist[index].itemValue;
                this.tmp_orderDetail[tmpindex].amount = this.productlist[index].amount;
                this.tmp_orderDetail[tmpindex].priceSupport = discount;
            }
        }
    };
    EditOrderComponent.prototype.checkValidate = function (index) {
        console.log(this.productlist[index].quantity);
        console.log(this.productlist[index].moq);
        if (parseFloat(this.productlist[index].quantity) % parseFloat(this.productlist[index].moq) == 0) {
            console.log("inchangIf");
            this.tmp_orderDetail.push({
                "gstPercentage": this.productlist[index]['gstPercentage'],
                "productId": this.productlist[index]['productId'],
                "partNumber": this.productlist[index]['partNumber'],
                "category": this.productlist[index]['category'],
                "segment": this.productlist[index]['segment'],
                "model": this.productlist[index]['model'],
                "oem": this.productlist[index]['oem'],
                "moq": this.productlist[index]['moq'],
                "quantity": parseFloat(this.productlist[index]['quantity']),
                "discountedListPrice": this.productlist[index]['discountedListPrice'],
                "priceSupport": this.productlist[index]['priceSupport'],
                "itemValue": this.productlist[index]['itemValue'],
                "amount": parseFloat(this.productlist[index]['itemValue']) * parseFloat(this.productlist[index]['quantity']),
                "gstamount": this.productlist[index]['gstamount']
            });
        }
        else {
            console.log("change");
            this.productlist[index].datacheck = false;
            this.productlist[index].ifcheck = false;
            this.alrt.alertWarning("Order Quantity should be multiple of " + this.productlist[index].moq);
        }
    };
    EditOrderComponent.prototype.SchemeDetail = function (partNumber, index) {
        var _this = this;
        if (this.productlist[index].schemeCount == 0) {
            console.log("hello");
        }
        else {
            this.loader = true;
            this.service.fetchData({ "partNumberCode": partNumber }, "/getschemeonproduct").subscribe(function (result) {
                console.log(result);
                _this.loader = false;
                if (result['message'] == 'Success') {
                    _this.schemeList = result['data'];
                    // for(let i=0;i<this.schemeList.length;i++)
                    // {
                    //   this.schemeString=this.schemeList[i].offerDescription;
                    //   this.schemeString2=this.schemeString2+this.schemeString+'<br>';
                    //   this.schemeString='';
                    // }
                    // console.log(this.schemeString2);
                    // this.alrt.alertWarning(this.schemeString2);
                    var dialogRef = _this.dialog.open(_schemepopup_schemepopup_component__WEBPACK_IMPORTED_MODULE_13__["SchemepopupComponent"], {
                        width: '600px',
                        data: _this.schemeList
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        console.log(result);
                        console.log('The dialog was closed');
                    });
                }
            });
        }
    };
    EditOrderComponent.prototype.pendingOrder = function (id) {
        var _this = this;
        console.log(id);
        this.loader = true;
        this.service.fileData('', "order/pending/" + this.data.distributor + '/' + id).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                var dialogRef = _this.dialog.open(_pending_order_pending_order_component__WEBPACK_IMPORTED_MODULE_14__["PendingOrderComponent"], {
                    width: '768px',
                    data: result['data']
                });
                dialogRef.afterClosed().subscribe(function (result) {
                    console.log(result);
                    console.log('The dialog was closed');
                });
            }
        });
    };
    EditOrderComponent.prototype.showInCart = function (orderArray) {
        if (orderArray === void 0) { orderArray = []; }
        console.log(orderArray);
        var _loop_3 = function (i) {
            if (this_1.tmp_array.length == 0) {
                this_1.finel_Array.push(orderArray[i]);
                this_1.tmp_array.push({ category: orderArray[i]['category'], quantity: orderArray[i]['quantity'], amount: orderArray[i]['amount'], gstamount: orderArray[i]['gstamount'] });
                this_1.tmporderArray.push(orderArray[i]);
                this_1.orderDetail.push({ "orderId": this_1.order_data.orderId, category: orderArray[i]['category'], "productId": orderArray[i].productId, "quantity": orderArray[i].quantity, "price": orderArray[i].itemValue, "gstPercentage": orderArray[i].gstPercentage });
                console.log(this_1.tmporderArray);
            }
            else {
                var idIndex = this_1.orderDetail.findIndex(function (row) { return row.productId == orderArray[i].productId; });
                var tmpval = false;
                if (idIndex != -1) {
                    console.log(idIndex);
                    console.log(this_1.tmporderArray);
                    console.log(this_1.finel_Array);
                    this_1.tmporderArray.splice(idIndex, 1);
                    this_1.orderDetail.splice(idIndex, 1);
                    this_1.tmporderArray.push(orderArray[i]);
                    this_1.orderDetail.push({ "orderId": this_1.order_data.orderId, category: orderArray[i]['category'], "productId": orderArray[i].productId, "quantity": orderArray[i].quantity, "price": orderArray[i].itemValue, "gstPercentage": orderArray[i].gstPercentage });
                    var itemIndex = this_1.tmp_array.findIndex(function (row) { return row.category == orderArray[i]['category']; });
                    if (itemIndex != -1) {
                        console.log(this_1.tmporderArray);
                        this_1.tmp_array[itemIndex].quantity = parseFloat(this_1.tmp_array[itemIndex].quantity) - parseFloat(this_1.finel_Array[idIndex].quantity);
                        this_1.tmp_array[itemIndex].amount = parseFloat(this_1.tmp_array[itemIndex].amount) - parseFloat(this_1.finel_Array[idIndex].amount);
                        this_1.tmp_array[itemIndex].gstamount = parseFloat(this_1.tmp_array[itemIndex].gstamount) - parseFloat(this_1.finel_Array[idIndex].gstamount);
                        this_1.finel_Array.splice(idIndex, 1);
                        tmpval = true;
                        if (tmpval) {
                            console.log(this_1.tmporderArray);
                            this_1.tmp_array[itemIndex].quantity = parseFloat(this_1.tmp_array[itemIndex].quantity) + parseFloat(orderArray[i].quantity);
                            this_1.tmp_array[itemIndex].amount = parseFloat(this_1.tmp_array[itemIndex].amount) + parseFloat(orderArray[i].amount);
                            this_1.tmp_array[itemIndex].gstamount = parseFloat(this_1.tmp_array[itemIndex].gstamount) + parseFloat(orderArray[i].gstamount);
                            this_1.finel_Array.push(orderArray[i]);
                        }
                    }
                }
                if (idIndex === -1) {
                    // this.tmp_orderDetail.push({"productId":orderArray[i].productId,"quantity":orderArray[i].quantity,"amount":orderArray[i].amount,"gstamount":orderArray[i].gstamount});
                    this_1.orderDetail.push({ "orderId": this_1.order_data.orderId, category: orderArray[i]['category'], "productId": orderArray[i].productId, "quantity": orderArray[i].quantity, "price": orderArray[i].itemValue, "gstPercentage": orderArray[i].gstPercentage });
                    this_1.finel_Array.push(orderArray[i]);
                    this_1.tmporderArray.push(this_1.tmporderArray[i]);
                    var itemIndex = this_1.tmp_array.findIndex(function (row) { return row.category == orderArray[i]['category']; });
                    if (itemIndex === -1) {
                        this_1.tmp_array.push({ category: orderArray[i]['category'], quantity: orderArray[i]['quantity'], amount: orderArray[i]['amount'], gstamount: orderArray[i]['gstamount'] });
                    }
                    else {
                        this_1.tmp_array[itemIndex].quantity = parseFloat(orderArray[i]['quantity']) + parseFloat(this_1.tmp_array[itemIndex].quantity);
                        this_1.tmp_array[itemIndex].amount = parseFloat(orderArray[i]['amount']) + parseFloat(this_1.tmp_array[itemIndex].amount);
                        this_1.tmp_array[itemIndex].gstamount = parseFloat(orderArray[i]['gstamount']) + parseFloat(this_1.tmp_array[itemIndex].gstamount);
                    }
                }
            }
            if (i == orderArray.length - 1) {
                this_1.tmp = true;
            }
        };
        var this_1 = this;
        for (var i = 0; i < orderArray.length; i++) {
            _loop_3(i);
        }
        if (this.tmp) {
            this.cartArray = [];
            this.tmp_orderDetail = [];
            console.log(this.finel_Array);
            this.calculate(this.finel_Array);
            console.log(this.tmp_array);
            // this.productlist=this.tmpProductList;
            for (var index = 0; index < this.productlist.length; index++) {
                this.productlist[index].datacheck = false;
                this.productlist[index].ifcheck = false;
            }
        }
    };
    EditOrderComponent.prototype.calculate = function (order_array) {
        console.log(order_array);
        this.itemTotel = 0;
        this.subTotal = 0;
        this.gstTotal = 0;
        this.grandTotal = 0;
        for (var i = 0; i < order_array.length; i++) {
            this.itemTotel = parseFloat(this.itemTotel) + parseFloat(order_array[i].quantity);
            this.subTotal = parseFloat(this.subTotal) + parseFloat(order_array[i].amount);
            this.gstTotal = parseFloat(this.gstTotal) + parseFloat(order_array[i].gstamount);
            if (i == order_array.length - 1) {
                this.grandTotal = parseFloat(this.grandTotal) + (parseFloat(this.gstTotal) + parseFloat(this.subTotal));
            }
        }
    };
    EditOrderComponent.prototype.calculateAmount = function (quantity, qty, i) {
        if (qty < 1) {
            this.productlist[i].amount = 0;
        }
        if (qty > 0) {
            this.productlist[i].amount = parseFloat(this.productlist[i]['itemValue']) * parseFloat(qty);
            this.productlist[i].gstamount = (parseFloat(this.productlist[i]['itemValue']) * parseFloat(this.productlist[i]['gstPercentage']) / 100) * this.productlist[i]['quantity'];
        }
    };
    EditOrderComponent.prototype.productDetail = function (category) {
        var _this = this;
        var dialogRef = this.dialog.open(_list_order_list_order_component__WEBPACK_IMPORTED_MODULE_5__["ListOrderComponent"], {
            width: '1600px',
            data: {
                product: this.finel_Array,
                category: category
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
            var tmpCartArray = _this.service.getData();
            if (tmpCartArray) {
                _this.tmp_array = [];
                _this.finel_Array = [];
                _this.orderDetail = [];
                _this.showInCart(tmpCartArray);
            }
        });
    };
    EditOrderComponent.prototype.removeFromCart = function (index) {
        var _this = this;
        this.temp = false;
        this.alrt.delete("Product").then(function (result) {
            if (result) {
                // this.ordlength=this.finel_Array;
                console.log(_this.tmp_array[index].quantity, "&", _this.tmp_array[index].amount, "&", _this.tmp_array[index].gstamount);
                _this.itemTotel = parseFloat(_this.itemTotel) - parseFloat(_this.tmp_array[index].quantity);
                _this.subTotal = parseFloat(_this.subTotal) - parseFloat(_this.tmp_array[index].amount);
                _this.gstTotal = parseFloat(_this.gstTotal) - parseFloat(_this.tmp_array[index].gstamount);
                _this.grandTotal = parseFloat(_this.grandTotal) - (parseFloat(_this.tmp_array[index].amount) + parseFloat(_this.tmp_array[index].gstamount));
                console.log(_this.tmp_array[index]['category']);
                _this.finel_Array = _this.finel_Array.filter(function (row) { return row.category != _this.tmp_array[index]['category']; });
                _this.orderDetail = _this.orderDetail.filter(function (row) { return row.category != _this.tmp_array[index]['category']; });
                console.log(_this.finel_Array);
                _this.temp = true;
            }
            if (_this.temp) {
                _this.tmp_array.splice(index, 1);
            }
        });
    };
    EditOrderComponent.prototype.addToCart = function () {
        console.log(this.tmp_orderDetail);
        for (var i = 0; i < this.tmp_orderDetail.length; i++) {
            if (this.tmp_orderDetail[i].quantity < parseFloat(this.productlist[i].moq)) {
                this.alrt.alertWarning("Order Quantity Minimum 1");
                break;
            }
            else {
                this.cartArray.push({
                    "gstPercentage": this.tmp_orderDetail[i]['gstPercentage'],
                    "productId": this.tmp_orderDetail[i]['productId'],
                    "partNumber": this.tmp_orderDetail[i]['partNumber'],
                    "category": this.tmp_orderDetail[i]['category'],
                    "segment": this.tmp_orderDetail[i]['segment'],
                    "model": this.tmp_orderDetail[i]['model'],
                    "oem": this.tmp_orderDetail[i]['oem'],
                    "moq": this.tmp_orderDetail[i]['moq'],
                    "quantity": parseFloat(this.tmp_orderDetail[i]['quantity']),
                    "discountedListPrice": this.tmp_orderDetail[i]['discountedListPrice'],
                    "priceSupport": this.tmp_orderDetail[i]['priceSupport'],
                    "itemValue": this.tmp_orderDetail[i]['itemValue'],
                    "amount": parseFloat(this.tmp_orderDetail[i]['itemValue']) * parseFloat(this.tmp_orderDetail[i]['quantity']),
                    "gstamount": this.tmp_orderDetail[i]['gstamount']
                });
                if (i == this.tmp_orderDetail.length - 1) {
                    this.toast.openSucess("Add to cart SuccessFully", '');
                    this.showInCart(this.cartArray);
                }
            }
        }
    };
    EditOrderComponent.prototype.SaveOrder = function () {
        if (this.userRole == 1) {
            this.companyStatus = 1;
        }
        else {
            this.companyStatus = 2;
        }
        this.orderStatus = 1;
        this.OrderPlaced();
    };
    EditOrderComponent.prototype.SubbmitOrder = function () {
        console.log(this.userRole);
        if (this.userRole == 12) {
            this.orderStatus = 3;
            this.companyStatus = 1;
            this.OrderPlaced();
        }
        else if (this.userRole == 1) {
            this.orderStatus = 2;
            this.companyStatus = 1;
            this.OrderPlaced();
        }
        else {
            this.orderStatus = 2;
            this.companyStatus = 1;
            this.OrderPlaced();
        }
    };
    EditOrderComponent.prototype.OrderPlaced = function () {
        var _this = this;
        this.loader = true;
        console.log(this.data.distributor);
        console.log(this.data);
        if (this.userRole == 12) {
            this.value = { "orderId": this.order_data.orderId, 'shippingAddressId': this.data.shippingAddressId, "remarks": this.data.remarks, "dealerStatus": this.orderStatus, "companyStatus": this.companyStatus, "networkId": this.order_data.networkId, "orderDetail": this.orderDetail, "createBy": this.userId, "amount": this.subTotal, "quantity": this.itemTotel, "gstAmount": this.gstTotal, "totalAmount": this.grandTotal };
        }
        else {
            this.value = { "orderId": this.order_data.orderId, 'shippingAddressId': this.data.shippingAddressId, "remarks": this.data.remarks, "dealerStatus": this.orderStatus, "companyStatus": this.companyStatus, "networkId": this.order_data.networkId, "orderDetail": this.orderDetail, "createBy": this.userId, "amount": this.subTotal, "quantity": this.itemTotel, "gstAmount": this.gstTotal, "totalAmount": this.grandTotal };
        }
        console.log(this.value);
        this.service.fetchData(this.value, "order/update").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.rout.navigate(['/order-list']);
                _this.toast.openSucess("Order Placed", "SuccessFully");
            }
        });
    };
    EditOrderComponent.prototype.categorySearch = function () {
        this.category_list = [];
        for (var i = 0; i < this.tmp_categoryList.length; i++) {
            this.catsearch.search = this.catsearch.search.toLowerCase();
            this.tmp_cat = this.tmp_categoryList[i]['text'].toLowerCase();
            if (this.tmp_cat.includes(this.catsearch.search)) {
                this.category_list.push(this.tmp_categoryList[i]);
            }
        }
    };
    EditOrderComponent.prototype.segmentSearch = function () {
        this.segmentList = [];
        for (var i = 0; i < this.tmp_segmentList.length; i++) {
            this.segsearch.search = this.segsearch.search.toLowerCase();
            this.tmp_seg = this.tmp_segmentList[i]['text'].toLowerCase();
            if (this.tmp_seg.includes(this.segsearch.search)) {
                this.segmentList.push(this.tmp_segmentList[i]);
            }
        }
    };
    EditOrderComponent.prototype.subSegmentSearch = function () {
        this.product_list = [];
        for (var i = 0; i < this.tmpproduct_list.length; i++) {
            this.subsegsearch.search = this.subsegsearch.search.toLowerCase();
            this.tmp_subseg = this.tmpproduct_list[i]['productName'].toLowerCase();
            if (this.tmp_subseg.includes(this.subsegsearch.search)) {
                this.product_list.push(this.tmpproduct_list[i]);
            }
        }
    };
    EditOrderComponent.prototype.productSearchByNumber = function (partNumber, model) {
        this.productlist = [];
        for (var i = 0; i < this.tmpProductList.length; i++) {
            if (partNumber != null) {
                partNumber = partNumber.toLowerCase();
                this.tmp_pro = this.tmpProductList[i]['partNumber'].toLowerCase();
            }
            else {
                partNumber = "";
            }
            if (model != null) {
                model = model.toLowerCase();
                this.tmpModel = this.tmpProductList[i]['model'].toLowerCase();
            }
            else {
                model = "";
            }
            if (this.tmp_pro.includes(partNumber) && this.tmpModel.includes(model)) {
                this.productlist.push(this.tmpProductList[i]);
            }
        }
    };
    EditOrderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-edit-order',
            template: __webpack_require__(/*! ./edit-order.component.html */ "./src/app/order/edit-order/edit-order.component.html"),
            styles: [__webpack_require__(/*! ./edit-order.component.scss */ "./src/app/order/edit-order/edit-order.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_toast__WEBPACK_IMPORTED_MODULE_7__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"]])
    ], EditOrderComponent);
    return EditOrderComponent;
}());



/***/ }),

/***/ "./src/app/order/list-order/list-order.component.html":
/*!************************************************************!*\
  !*** ./src/app/order/list-order/list-order.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"edit-modal\">\n        <div class=\"cs-loader\" *ngIf=\"loader\"> \n                <img src=\"assets/img/loader.png\" class=\"rotate\">\n              </div>\n            \n<mat-dialog-content class=\"mat-typography pl15 pr15\" style=\"overflow-x: hidden !important; position: relative;\">\n     <p class=\"heading\">PRODUCT INFORMATION</p>\n     <!-- <div class=\"top-search right-serach\" style=\"top: 25px;\">\n            <input type=\"text\" placeholder=\"SEARCH. . .\" style=\"background: #f8f8f8;\">\n            <i class=\"material-icons\">search</i>\n          </div> -->\n    <div class=\"col s12 padding0\">\n        <div class=\"cs-table left-right-15\">\n            <div class=\"table-head\">\n                <table>\n                    <tr>\n                        <th class=\"w110\">Part Number</th>\n                        <th>Product Model</th>\n                        <th class=\"w130\">OEM Code</th>\n                        <th class=\"w80\">Min QTY</th>\n                        <th class=\"w70\">QTY</th>\n                        <th class=\"w80 text-right\">Rate</th>\n                        <th class=\"w120 text-right\">Price Support</th>\n                        <th class=\"w100 text-right\">Item Value</th>\n                        <th class=\"w100 text-right\">Amount</th>\n                        <th class=\"w60\">GST %</th>\n                        <th *ngIf=\"div\" class=\"w170\">Action</th>\n                        <th *ngIf=\"div==false\" class=\"w70\">Action</th>\n                    </tr>\n                </table>\n            </div>\n            <div class=\"table-container pb0\">\n                <div class=\"table-content\">\n                    <table>\n                        <tr *ngFor=\"let product of productList;let index=index\">\n                            <td class=\"w110\">{{product.partNumber}}</td>\n                            <td>{{product.model}}</td>\n                            <td class=\"w130\">{{product.oem}}</td>\n                            <td class=\"w80\">{{product.moq}}</td>\n                            <td class=\"w70\">\n                                <div class=\"td-input\">\n                                    <input type=\"number\" (change)=\"checkValidate(index)\" (input)=\"calculateAmount(index,product.quantity)\" name=\"quantity\" #quantity=\"ngModel\" [(ngModel)]=\"product.quantity\" required>\n                                </div>\n                            </td>\n                            <td class=\"w80 text-right\">&#8377; {{product.discountedListPrice}}</td>\n                            <td class=\"w120 text-right\">&#8377; {{product.priceSupport}}</td>\n\n                            <!-- <td class=\"w100\">\n                                <div class=\"td-input\">\n                                    <input type=\"number\" name=\"priceSupport\" #priceSupport=\"ngModel\" (input)=\"calculatePriceSupport(index,product.priceSupport)\" [(ngModel)]=\"product.priceSupport\" required>\n                                </div>\n                            </td> -->\n                            <td class=\"w100 text-right\">&#8377; {{product.itemValue}}</td>\n                            <td class=\"w100 text-right\">&#8377; {{product.amount}}</td>\n                            <td class=\"w60\">{{product.gstPercentage}} %</td>\n                            <td *ngIf=\"product.edit\" class=\"w70 text-center\">\n                                <a class=\"action-cart\" mat-button><i class=\"material-icons green-clr\" (click)=\"saveproduct(index,product.productId)\" >save</i></a>\n                            </td>\n                            <td *ngIf=\"product.edit==false\" class=\"w70 text-center\">\n                                <a class=\"action-cart\" mat-button><i class=\"material-icons red-clr\" (click)=\"remove(product.productId,index)\">delete_sweep</i></a>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"saveUpdate()\" cdkFocusInitial color=\"warn\">Close</button>\n</mat-dialog-actions>\n</div>"

/***/ }),

/***/ "./src/app/order/list-order/list-order.component.scss":
/*!************************************************************!*\
  !*** ./src/app/order/list-order/list-order.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL2xpc3Qtb3JkZXIvbGlzdC1vcmRlci5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/order/list-order/list-order.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/order/list-order/list-order.component.ts ***!
  \**********************************************************/
/*! exports provided: ListOrderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListOrderComponent", function() { return ListOrderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");






var ListOrderComponent = /** @class */ (function () {
    function ListOrderComponent(data, alrt, dialog, toast, service, confirm) {
        this.data = data;
        this.alrt = alrt;
        this.dialog = dialog;
        this.toast = toast;
        this.service = service;
        this.confirm = confirm;
        this.productList = [];
        this.tmp_productList = [];
        this.finalProductList = [];
        this.div = false;
        console.log(data);
        this.category = data['category'];
        this.tmp_productList = data['product'];
        this.finalProductList = data['product'];
        for (var i = 0; i < this.tmp_productList.length; i++) {
            if (this.category === this.tmp_productList[i]['category']) {
                this.productList.push({
                    "amount": this.tmp_productList[i].amount,
                    "category": this.tmp_productList[i].category,
                    "gstPercentage": this.tmp_productList[i].gstPercentage,
                    "gstamount": this.tmp_productList[i].gstamount,
                    "itemValue": this.tmp_productList[i].itemValue,
                    "model": this.tmp_productList[i].model,
                    "moq": this.tmp_productList[i].moq,
                    "oem": this.tmp_productList[i].oem,
                    "partNumber": this.tmp_productList[i].partNumber,
                    "priceSupport": this.tmp_productList[i].priceSupport,
                    "discountedListPrice": this.tmp_productList[i].discountedListPrice,
                    "productId": this.tmp_productList[i].productId,
                    "quantity": this.tmp_productList[i].quantity,
                    "segment": this.tmp_productList[i].segment
                });
            }
            if (i == this.tmp_productList.length - 1) {
                for (var j = 0; j < this.productList.length; j++) {
                    this.productList[j].edit = false;
                }
            }
        }
        console.log(this.productList);
        this.service.setData(this.tmp_productList);
    }
    ListOrderComponent.prototype.ngOnInit = function () {
    };
    ListOrderComponent.prototype.checkValidate = function (index) {
        if (parseFloat(this.productList[index].quantity) % parseFloat(this.productList[index].moq) != 0) {
            this.alrt.alertWarning("Order Quantity should multiple of " + parseFloat(this.productList[index].moq));
        }
    };
    ListOrderComponent.prototype.calculateAmount = function (index, quantity) {
        this.productList[index].edit = true;
        console.log(index, quantity, this.productList[index].itemValue);
        if (parseFloat(this.productList[index].itemValue) > 0) {
            this.itemValue = this.productList[index].itemValue;
            this.itemAmount = parseFloat(quantity) * parseFloat(this.productList[index].itemValue);
        }
    };
    ListOrderComponent.prototype.saveUpdate = function () {
        console.log("save");
        this.service.setData(this.tmp_productList);
        this.dialog.closeAll();
    };
    // priceSupport:any;
    // calculatePriceSupport(index,priceSupport)
    // {
    //   this.productList[index].edit=true;
    //   console.log(index,priceSupport);
    //   if(priceSupport !=null)
    //   {
    //     this.itemValue=parseFloat(this.productList[index].itemValue)-parseFloat(priceSupport);
    //     this.itemAmount=parseFloat(this.productList[index].quantity)*this.itemValue;
    //     this.priceSupport=priceSupport;
    //   }
    // }
    ListOrderComponent.prototype.saveproduct = function (index, id) {
        var _this = this;
        if (parseFloat(this.productList[index].quantity) % parseFloat(this.productList[index].moq) == 0) {
            this.productList[index].edit = false;
            this.productList[index].itemValue = this.itemValue;
            this.productList[index].amount = this.itemAmount;
            var pindex = this.tmp_productList.findIndex(function (row) { return row.productId == _this.productList[index].productId; });
            //  this.productList[index].priceSupport=this.priceSupport;
            console.log(this.productList[index]);
            this.tmp_productList[pindex].itemValue = this.productList[index].itemValue;
            this.tmp_productList[pindex].amount = this.productList[index].amount;
            this.tmp_productList[pindex].quantity = this.productList[index].quantity;
            this.tmp_productList[pindex].priceSupport = this.productList[index].priceSupport;
            console.log(pindex);
            this.service.setData(this.tmp_productList);
            this.toast.openSucess("Product List Update", "SuccessFully");
        }
        else {
            this.alrt.alertWarning("Order Quantity should multiple of " + parseFloat(this.productList[index].moq));
        }
    };
    ListOrderComponent.prototype.remove = function (id, index) {
        var _this = this;
        console.log(id, index);
        this.confirm.delete("product").then(function (result) {
            console.log(result);
            if (result) {
                _this.productList.splice(index, 1);
                for (var i = 0; i < _this.tmp_productList.length; i++) {
                    if (_this.tmp_productList[i]['productId'] == id) {
                        _this.tmp_productList.splice(i, 1);
                    }
                }
            }
        });
    };
    ListOrderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-list-order',
            template: __webpack_require__(/*! ./list-order.component.html */ "./src/app/order/list-order/list-order.component.html"),
            styles: [__webpack_require__(/*! ./list-order.component.scss */ "./src/app/order/list-order/list-order.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], ListOrderComponent);
    return ListOrderComponent;
}());



/***/ }),

/***/ "./src/app/order/order-detail/order-detail.component.html":
/*!****************************************************************!*\
  !*** ./src/app/order/order-detail/order-detail.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n    <div class=\"cs-loader\" *ngIf=\"loader\"> \n        <img src=\"assets/img/loader.png\" class=\"rotate\">\n      </div>\n    \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/order-list/\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{network_data.establishment}}</h2>\n        <p class=\"light\"></p>\n      </div>\n    </div>\n    \n    <div *ngIf=\"role==1 && order_status.dealerStatus==3\" class=\"left-auto\">\n      <div class=\"from-fields w250 pr6\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input infix-bodr wp100\">\n            <mat-select placeholder=\"Company Status\" class=\"mat-bg\" name=\"companyStatus\" #companyStatus=\"ngModel\" [(ngModel)]=\"order_status.companyStatus\"   selected>\n              <mat-option value=\"\" disabled>Select One</mat-option>\n              <mat-option (click)=\"updatecompanyStatus()\" [value]=\"1\">Pending</mat-option>\n              <mat-option (click)=\"updatecompanyStatus()\" [value]=\"3\">Reject</mat-option>\n              <mat-option (click)=\"updatecompanyStatus()\" [value]=\"2\">Approve</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      \n    </div>\n    \n    <div *ngIf=\"role==12 && order_status.dealerStatus==2\" class=\"left-auto\">\n      <div class=\"from-fields w250 pr6\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input infix-bodr wp100\">\n            <mat-select placeholder=\"Company Status\" class=\"mat-bg\" name=\"dealerStatus\" #dealerStatus=\"ngModel\" [(ngModel)]=\"order_status.dealerStatus\"    selected>\n              <mat-option value=\"\" disabled>Select One</mat-option>\n              <mat-option (click)=\"updatedealerStatus()\" [value]=\"2\">Pending</mat-option>\n              <mat-option (click)=\"updatedealerStatus()\" [value]=\"3\">Approve</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info padding0\">\n            <div class=\"basic-details\">\n              <div class=\"profile-info\">\n                <ul class=\"flex-start\">\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/company.svg\" class=\"fix-img\">\n                      <span>Company Name</span>\n                      <p>{{network_data.establishment}}</p>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/code.svg\" class=\"fix-img\">\n                      <span>Dealer Code</span>\n                      <p>{{network_data.networkCode}}</p>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/applicant.svg\" class=\"fix-img\">\n                      <span>Contact Person</span>\n                      <p>{{network_data.userName}}</p>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/phone.svg\" class=\"fix-img\">\n                      <span>Mobile No</span>\n                      <p>{{network_data.mobile}}</p>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n              <mat-divider class=\"mt15 mb15\"></mat-divider>\n              \n              <div class=\"col s12 cs-figure space-li padding0\">\n                <h2>ORDER DETAIL</h2>\n                <ul>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Order Date</span>\n                        <p class=\"counter\">{{order_data.modifiedOn | date :'EEEE, MMMM d, y'}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Created By</span>\n                        <p class=\"counter\">{{order_data.userName}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Order No</span>\n                        <p class=\"counter\">{{order_data.orderNumber}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Total Qty</span>\n                        <p class=\"counter\">{{order_data.quantity }}</p>\n                      </div>\n                    </div>\n                  </li>\n                  \n                </ul>\n              </div>\n              \n              <div class=\"col s12 mt15 cs-figure space-li padding0\">\n                <ul>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>GST Amount</span>\n                        <p class=\"counter\">{{order_data.gstAmount | currency: 'INR':true}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Total Amount</span>\n                        <p class=\"counter\">{{order_data.amount | currency: 'INR':true}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Dealer Status</span>\n                        <p class=\"counter\" *ngIf=\"order_status.dealerStatus==2\">Pending</p>\n                        <p *ngIf=\"order_status.dealerStatus==3\">Approve</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Company Status</span>\n                        <p *ngIf=\"order_status.companyStatus==1\" class=\"status pending\">Pending</p>\n                        <p *ngIf=\"order_status.companyStatus==2\" class=\"status approved\">Approve</p>\n                        <p *ngIf=\"order_status.companyStatus==3\" class=\"status reject\">Hold</p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"sprate-box padding0 mt15\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>SHIPPING ADDRESS</h2>\n              </div>\n              <div class=\"ds-from-fields\">\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>Shop/ Office No</p>\n                    <p>{{shipping.office}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>Mobile No</p>\n                    <p>{{shipping.mobile}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>Landline No</p>\n                    <p>{{shipping.landline}}</p>\n                    <p *ngIf=\"shipping.landline==''\">---</p>\n\n                  </div>\n                  <div class=\"static-info\">\n                    <p>Email</p>\n                    <p>{{shipping.email}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>Fax</p>\n                    <p>{{shipping.fax}}</p>\n                    <p *ngIf=\"shipping.fax==''\">---</p>\n\n                  </div>\n                </div>\n                \n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>State</p>\n                    <p>{{shipping.state}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>District</p>\n                    <p>{{shipping.district}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>City</p>\n                    <p>{{shipping.city}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>Pincode</p>\n                    <p>{{shipping.pin}}</p>\n                  </div>\n                </div>\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>Street</p>\n                    <p>{{shipping.street}}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"row mt15\">\n        <div class=\"col s12\">\n          <div class=\"heading-bg left-right-20 mb0\">\n            <h2>PRODUCT INFORMATION</h2>\n          </div>\n          <div class=\"cs-table left-right-20\">\n            <div class=\"table-head\">\n              <table>\n                <tr>\n                  <th>Category</th>\n                  <th class=\"w150 text-center\">Total Item</th>\n                  <th class=\"w150 text-center\">QTY</th>\n                  <th class=\"w150 text-right\">Amount</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\" let order_detail_data of tmp_array\">\n                    <td><a mat-button class=\"link-btn\" (click)=\"productDetail(order_detail_data.category)\" >{{order_detail_data.category}}</a></td>\n                    <td class=\"w150 text-center\"><a mat-button class=\"link-btn\" (click)=\"productDetail(order_detail_data.category)\" >{{order_detail_data.item}}</a></td>\n                    <td class=\"w150  text-center\">{{order_detail_data.quantity}}</td>\n                    <td class=\"w150  text-right\"> &#x20B9; {{order_detail_data.amount}}</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n</div>\n<div  class=\"fixed-multibtn-botm\">\n  <ul>\n    <li ><a  matTooltip=\"Download Product Sheet\" (click)=\"exportAsXLSX()\" matRipple><i class=\"material-icons\">cloud_download</i></a></li>\n  </ul>\n</div>\n<div class=\"h50\"></div>\n\n"

/***/ }),

/***/ "./src/app/order/order-detail/order-detail.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/order/order-detail/order-detail.component.ts ***!
  \**************************************************************/
/*! exports provided: OrderDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderDetailComponent", function() { return OrderDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var _detailorderlist_detailorderlist_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../detailorderlist/detailorderlist.component */ "./src/app/order/detailorderlist/detailorderlist.component.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");










var OrderDetailComponent = /** @class */ (function () {
    function OrderDetailComponent(alrt, db, router, user, route, dialog, toast) {
        var _this = this;
        this.alrt = alrt;
        this.db = db;
        this.router = router;
        this.user = user;
        this.route = route;
        this.dialog = dialog;
        this.toast = toast;
        this.loader = false;
        this.order_data = {};
        this.order_status = {};
        this.userdata = [];
        this.network_data = {};
        this.shipping = {};
        this.tmp_array = [];
        this.finel_Array = [];
        this.dealerDetail = {};
        this.orderDetail = {};
        this.xLXSArray = [];
        this.loader = true;
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.order_id = params.id;
            console.log(_this.order_id);
        });
    }
    OrderDetailComponent.prototype.ngOnInit = function () {
        this.userdata = this.user['user']['data'];
        console.log(this.userdata);
        this.userType = this.userdata['userType'];
        // console.log(this.userdata['userId']);
        this.role = this.userdata['role'];
        console.log(this.role);
        if (this.userType == 3) {
            this.netId = this.userdata['distributerNetwork']['networkId'];
        }
        this.order_detail();
    };
    OrderDetailComponent.prototype.order_detail = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ 'orderId': this.order_id }, 'order/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.order_data = response['data'][0];
                console.log(_this.order_data);
                _this.order_status.dealerStatus = _this.order_data.dealerStatus;
                _this.order_status.companyStatus = _this.order_data.companyStatus;
                _this.showInCart(_this.order_data);
            }
            _this.db.fetchData({ 'networkId': _this.order_data.networkId }, 'network/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.network_data = response['data'][0];
                    console.log(_this.network_data);
                    var shippingAddrss = _this.network_data.shippingAddresses.filter(function (row) { return row.shippingAddressId == _this.order_data.shippingAddressId; });
                    console.log(shippingAddrss[0]);
                    _this.shipping = shippingAddrss[0];
                }
                _this.convertArrayToExcel();
            });
        });
    };
    OrderDetailComponent.prototype.updatecompanyStatus = function () {
        var _this = this;
        this.alrt.confirmation('Order Status  !').then(function (result) {
            if (result) {
                console.log(_this.order_status);
                _this.db.fetchData({ "orderId": _this.order_id,
                    "companyStatus": _this.order_status.companyStatus,
                    "statusFor": 1 }, 'order/updatestatus').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (response['status'] == 'Success') {
                        _this.toast.openSucess('Status updated successfully', '');
                        _this.router.navigate(['/order-list']);
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                });
            }
        });
    };
    OrderDetailComponent.prototype.updatedealerStatus = function () {
        var _this = this;
        this.alrt.confirmation('Order Status  !').then(function (result) {
            if (result) {
                console.log(_this.order_status);
                _this.db.fetchData({ "orderId": _this.order_id,
                    "dealerStatus": _this.order_status.dealerStatus,
                    "statusFor": 2 }, 'order/updatestatus').subscribe(function (response) {
                    console.log(response);
                    _this.message = response['message'];
                    if (response['status'] == 'Success') {
                        _this.toast.openSucess('Status updated successfully', '');
                        _this.router.navigate(['/order-list']);
                    }
                    else {
                        _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                    }
                });
            }
        });
    };
    OrderDetailComponent.prototype.showInCart = function (orderArray) {
        var _this = this;
        console.log(orderArray);
        var ord = false;
        var _loop_1 = function (i) {
            if (this_1.tmp_array.length == 0) {
                this_1.finel_Array.push(orderArray.orderDetail[i]);
                this_1.tmp_array.push({ category: orderArray.orderDetail[i]['category'], quantity: orderArray.orderDetail[i]['quantity'], amount: orderArray['amount'], gstamount: orderArray['gstAmount'] });
            }
            else {
                this_1.finel_Array.push(orderArray.orderDetail[i]);
                var itemIndex = this_1.tmp_array.findIndex(function (row) { return row.category == orderArray.orderDetail[i]['category']; });
                if (itemIndex === -1) {
                    this_1.tmp_array.push({ category: orderArray.orderDetail[i]['category'], quantity: orderArray.orderDetail[i]['quantity'], amount: orderArray['amount'], gstamount: orderArray['gstAmount'] });
                }
                else {
                    this_1.tmp_array[itemIndex].quantity = parseInt(orderArray.orderDetail[i]['quantity']) + parseInt(this_1.tmp_array[itemIndex].quantity);
                }
            }
            if (i == orderArray.orderDetail.length - 1) {
                var _loop_2 = function (j) {
                    var item = this_1.finel_Array.filter(function (row) { return row.category == _this.tmp_array[j].category; });
                    if (item.length != 0) {
                        this_1.tmp_array[j].item = item.length;
                    }
                };
                for (var j = 0; j < this_1.tmp_array.length; j++) {
                    _loop_2(j);
                }
            }
        };
        var this_1 = this;
        for (var i = 0; i < orderArray.orderDetail.length; i++) {
            _loop_1(i);
        }
    };
    OrderDetailComponent.prototype.productDetail = function (category) {
        console.log(this.finel_Array, category);
        var dialogRef = this.dialog.open(_detailorderlist_detailorderlist_component__WEBPACK_IMPORTED_MODULE_8__["DetailorderlistComponent"], {
            width: '1600px',
            data: {
                product: this.finel_Array,
                category: category
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
        });
    };
    OrderDetailComponent.prototype.convertArrayToExcel = function () {
        this.xLXSArray.push({
            'Company Name': this.network_data.establishment,
            'Dealer Code': this.network_data.networkCode,
            'Contact Person Name': this.network_data.networkContacts[0].name,
            'Contact Person Mobile no': this.network_data.networkContacts[0].mobile1
        });
        this.xLXSArray.push({});
        this.xLXSArray.push({});
        this.xLXSArray.push({});
        this.xLXSArray.push({
            'Order date': this.order_data.createdOn,
            'Created By': this.order_data.userName,
            'Order No.': this.order_data.orderNumber,
            'Order Quantity': this.order_data.quantity,
            'GST Amount': this.order_data.gstAmount,
            'Order Amount': this.order_data.amount,
            'Total Order Amount': this.order_data.totalAmount,
            'Company Status': (this.order_data.companyStatus == 1 ? 'Pending' : (this.order_data.companyStatus == 2 ? 'Approved' : 'Hold')),
            'Distributor Status': (this.order_data.dealerStatus == 2 ? 'Pending' : (this.order_data.dealerStatus == 3 ? 'Approved' : 'Reject')),
        });
        this.xLXSArray.push({});
        this.xLXSArray.push({});
        this.xLXSArray.push({});
        for (var i = 0; i < this.order_data.orderDetail.length; i++) {
            this.xLXSArray.push({
                'Part Number': this.order_data.orderDetail[i].partNumberCode,
                'Product Name': this.order_data.orderDetail[i].productName,
                'OEM Code': this.order_data.orderDetail[i].oem,
                'Quantity': this.order_data.orderDetail[i].quantity,
                'Unit Price': this.order_data.orderDetail[i].price,
                'Amount': parseInt(this.order_data.orderDetail[i].price) * parseInt(this.order_data.orderDetail[i].quantity),
                'GST %': this.order_data.orderDetail[i].gstPercentage
            });
        }
    };
    OrderDetailComponent.prototype.exportAsXLSX = function () {
        console.log(this.xLXSArray);
        this.db.exportAsExcelFile(this.xLXSArray, 'ORDER SHEET');
    };
    OrderDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-order-detail',
            template: __webpack_require__(/*! ./order-detail.component.html */ "./src/app/order/order-detail/order-detail.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_dialog__WEBPACK_IMPORTED_MODULE_9__["DialogComponent"], _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _local_storage_service__WEBPACK_IMPORTED_MODULE_7__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_6__["SnackBarOverview"]])
    ], OrderDetailComponent);
    return OrderDetailComponent;
}());



/***/ }),

/***/ "./src/app/order/order-list/order-list.component.html":
/*!************************************************************!*\
  !*** ./src/app/order/order-list/order-list.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/order_icon.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Order</h2>\n        <p>Total Order {{orderlist.length}}</p>\n        <!-- <div class=\"item-filter\" >\n          <mat-form-field class=\"wp100\">\n            <mat-select  name=\"travelPlanApprovel\" #travelPlanApprovel=\"ngModel\" [(ngModel)]=\"forApprovel\">\n              <mat-option (click)=\"getTravelList(2)\" value=1>My Travel Plan</mat-option>\n              <mat-option (click)=\"getTravelList(2)\" value=2>Wating For Approvel</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div> -->\n      </div>\n    </div>\n    \n    \n    <div class=\"left-auto\">\n      <div *ngIf=\"data.userName|| data.createdOn||data.companyName\" class=\"filter-container left-auto\">\n        <div (click)=\"clearfilter()\" class=\"filter-btn\">\n          <button mat-button >CLEAR FILTER</button>\n        </div>\n      </div>\n      <div class=\"tabs right-tab none-af\">\n        <ul>\n          <li>\n            <a class=\"pr40 all\" [ngClass]=\"{'tab-active':orderActive==true}\" (click)=\"order_list(0,0)\">All\n              <span class=\"counter\">{{allOredrQty.length}}</span>\n            </a>\n          </li>\n          <li>\n            <a class=\"pr40 pending\" [ngClass]=\"{'tab-active':pendingActive==true}\" (click)=\"order_list(0,1)\">PENDING\n              <span class=\"counter\">{{pendingOrderQty.length}}</span>\n            </a>\n          </li>\n          <li>\n            <a class=\"pr40 approved\" [ngClass]=\"{'tab-active':approvedActive==true}\" (click)=\"order_list(3,2)\">APPROVE\n              <span  class=\"counter\">{{approvedOrderQty.length}}</span>\n            </a>\n          </li>\n          <li >\n            <a class=\"pr40 hold\" [ngClass]=\"{'tab-active':holdActive==true}\" (click)=\"order_list(0,3)\">HOLD\n              <span class=\"counter\">{{holdOrderQty.length}}</span>\n            </a>\n          </li>\n          <li>\n            <a class=\" pr40 draft\" [ngClass]=\"{'tab-active':cartActive==true}\" (click)=\"order_list(1,0)\">Draft\n              <span class=\"counter\" >{{draftOrderQty.length}}</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    \n    <!-- <div class=\"top-pagination m-right-data\">\n      <ul>\n        <li class=\"refresh-area af-none\">\n          <a class=\"refresh-btn\" mat-raised-button  matTooltip=\"Refresh\"><i class=\"material-icons\"> refresh</i></a>\n        </li>\n      </ul>\n    </div> -->\n  </div>\n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table class=\"sno-border\"> \n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th class=\"w150\"> Date</th>\n                    <th *ngIf=\"userRole==1\" class=\"w170\">Created By</th>\n                    <th>Company Name</th>\n                    <th *ngIf=\"cartActive==false && pendingActive==false\" class=\"w125\"> Order No</th>\n                    <th class=\"w70 text-center\">QTY.</th>\n                    <th class=\"w100 text-right\">Amount</th>\n                    <th *ngIf=\"cartActive==false\" class=\"w100\"> Dist. Status</th>\n                    <th *ngIf=\"cartActive==false\" class=\"w100\"> Comp. Status</th>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-head bdrt\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th class=\"w150\">\n                      <div class=\"th-search padding0\" >\n                        <mat-form-field class=\"wp100 toggle-date-picker\">\n                          <input matInput (dateChange)=\"order_list(data.dealerStatus,data.companyStatus)\" name=\"createdOn\" [(ngModel)]=\"createdaDate\" [matDatepicker]=\"picker\" >\n                          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                          <mat-datepicker  #picker></mat-datepicker>\n                        </mat-form-field>\n                      </div>\n                    </th>\n                    <th  *ngIf=\"userRole==1\" class=\"w170\">\n                      <div class=\"th-search\">\n                        <input type=\"text\" name=\"userName\" [(ngModel)]=\"data.userName\" (input)=\"order_list(data.dealerStatus,data.companyStatus)\">\n                        <!-- <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\"removenamefilter()\"></a> -->\n                      </div>\n                    </th>\n                    <th>\n                      <div class=\"th-search\">\n                        <input type=\"text\" placeholder=\"Search....\" name=\"establishment\" [(ngModel)]=\"data.companyName\" (input)=\"order_list(data.dealerStatus,data.companyStatus)\">  \n                        <!-- <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\"removenamefilter()\"></a> -->\n                      </div>\n                    </th>\n                    <th *ngIf=\"cartActive==false&& pendingActive==false\" class=\"w125\">&nbsp;</th>\n                    <th class=\"w70\">&nbsp;</th>\n                    <th class=\"w100\">&nbsp;</th>\n                    <th *ngIf=\"cartActive==false\" class=\"w100\">&nbsp;</th>\n                    <th *ngIf=\"cartActive==false\" class=\"w100\">&nbsp;</th>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table class=\"sno-border\">\n                  <tr *ngFor=\"let order of finalOrderList; let index = index\">\n                    <td class=\"w30\">{{index+1}}</td>\n                    <td class=\"w150\">{{order.createdOn |date :'EEEE, MMMM d, y'}}</td>\n                    <td *ngIf=\"userRole==1\" class=\"w170\">{{order.createdByName}}</td>\n                    <td><a class=\"link-btn\" (click)=\"orderDetail(index)\">{{order.establishment}}</a></td>\n                    <td *ngIf=\"cartActive==false && pendingActive==false\" class=\"w125\">{{order.orderNumber}}</td>\n                    <td class=\"w70 text-center\">{{order.quantity}}</td>\n                    <td class=\"w100 text-right\">{{order.amount | currency: 'INR':true}}</td>\n                    <td *ngIf=\"cartActive==false\" [ngClass]=\"{'draft':order.dealerStatus==1,'pending':order.dealerStatus==2,'approved':order.dealerStatus==3}\" class=\"w100\">\n                      <span class=\"text-center\" *ngIf=\"order.dealerStatus=='1'\">Draft</span>\n                      <span class=\"text-center\" *ngIf=\"order.dealerStatus=='2'\">Pending</span>\n                      <span class=\"text-center\" *ngIf=\"order.dealerStatus=='3'\">Approve</span>\n                    </td>\n                    <td *ngIf=\"cartActive==false\" [ngClass]=\"{'pending':order.companyStatus==1,'approved':order.companyStatus==2,'reject':order.companyStatus==3}\" class=\"w100\">\n                      <span class=\"text-center \" *ngIf=\"order.companyStatus=='1'\">Pending</span>\n                      <span class=\"text-center \" *ngIf=\"order.companyStatus=='2'\">Approve</span>\n                      <span class=\"text-center \" *ngIf=\"order.companyStatus=='3'\">Hold</span>\n                    </td>\n                    \n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"data-not-available\" *ngIf=\"div\">\n      <div class=\"outer\">\n        <div class=\"iinear\">\n          <div class=\"figure\" matRipple>\n            <div class=\"header\">\n              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n            </div>\n            \n            <div class=\"description\">\n              <!-- <div class=\"cs-heading\">\n                <h2 *ngIf=\"cartActive=='active'\">Nothing In Draft</h2>\n                <h2 *ngIf=\"orderActive=='active'\">No Order List</h2>\n                \n              </div> -->\n              <div class=\"img\">\n                <i class=\"material-icons\">error_outline</i>\n              </div>\n              <div class=\"psc\">\n                <p>data not available</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" matRipple routerLink=\"/add-order\" routerLinkActive=\"active\"><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/order/order-list/order-list.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/order/order-list/order-list.component.ts ***!
  \**********************************************************/
/*! exports provided: OrderListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderListComponent", function() { return OrderListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);







var OrderListComponent = /** @class */ (function () {
    function OrderListComponent(db, user, router) {
        this.db = db;
        this.user = user;
        this.router = router;
        this.loader = false;
        this.orderlist = [];
        this.userdata = [];
        this.div = false;
        this.userData = {};
        this.cartActive = false;
        this.orderActive = false;
        this.pendingActive = false;
        this.holdActive = false;
        this.approvedActive = false;
        this.pendingOrderQty = [];
        this.approvedOrderQty = [];
        this.holdOrderQty = [];
        this.draftOrderQty = [];
        this.data = {};
        this.finalOrderList = [];
        this.allOredrQty = [];
        this.userData = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.userData.data.userType;
        this.userId = this.userData.data.userId;
        this.userRole = this.userData.data.role;
        this.pendingActive = true;
    }
    OrderListComponent.prototype.ngOnInit = function () {
        this.userdata = this.user['user']['data'];
        if (this.userdata['userType'] == 3) {
            console.log(this.userdata['distributerNetwork']['networkId']);
        }
        this.order_list(0, 1);
        this.getPendingOrderCount();
        this.getApprovedOrderCount();
        this.getHoldOrderCount();
        this.getDraftOrderCount();
        this.getAllOrderCount();
    };
    OrderListComponent.prototype.order_list = function (dealerStatus, companyStatus) {
        var _this = this;
        this.orderlist = [];
        this.finalOrderList = [];
        this.div = false;
        var date;
        if (this.createdaDate) {
            console.log(this.createdaDate);
            date = moment__WEBPACK_IMPORTED_MODULE_6__(this.createdaDate).format('YYYY-MM-DD');
            this.data.createdOn = date;
        }
        this.loader = true;
        // this.data.createdOn=moment(this.data.createdOn).format('YYYY-MM-DD')
        console.log(dealerStatus, companyStatus);
        this.data.dealerStatus = dealerStatus;
        this.data.companyStatus = companyStatus;
        if (this.data.dealerStatus == 0 && this.data.companyStatus == 0) {
            this.orderActive = true;
            this.cartActive = false;
            this.pendingActive = false;
            this.holdActive = false;
            this.approvedActive = false;
        }
        if (this.data.dealerStatus == 1 && this.data.companyStatus == 0) {
            this.orderActive = false;
            this.cartActive = true;
            this.pendingActive = false;
            this.holdActive = false;
            this.approvedActive = false;
        }
        if (this.data.dealerStatus == 0 && this.data.companyStatus == 1) {
            // this.data.dealerStatus=2;
            this.getpendingorderList(2);
            this.orderActive = false;
            this.cartActive = false;
            this.pendingActive = true;
            this.holdActive = false;
            this.approvedActive = false;
        }
        if (this.data.dealerStatus == 3 && this.data.companyStatus == 2) {
            this.orderActive = false;
            this.cartActive = false;
            this.pendingActive = false;
            this.holdActive = false;
            this.approvedActive = true;
        }
        if (this.data.dealerStatus == 0 && this.data.companyStatus == 3) {
            this.orderActive = false;
            this.cartActive = false;
            this.pendingActive = false;
            this.holdActive = true;
            this.approvedActive = false;
        }
        this.data.currentPage = 1;
        this.data.pageSize = 50;
        console.log(this.userdata['userType']);
        if (this.userdata['userType'] == 3) {
            this.data.networkId = this.userdata['distributerNetwork']['networkId'];
            this.data.userId = undefined;
            this.data.currentPage = 1;
            this.data.pageSize = 50;
        }
        if (this.userdata['userType'] == 2) {
            this.data.userId = this.userdata['userId'];
            this.data.networkId = undefined;
            this.data.currentPage = 1;
            this.data.pageSize = 50;
        }
        else {
            this.data.currentPage = 1;
            this.data.pageSize = 50;
        }
        this.db.fetchData(this.data, 'order/list').subscribe(function (response) {
            console.log(response);
            // this.orderActive=true;
            if (response['status'] == 'Success') {
                _this.orderlist = response['data'];
                _this.finalOrderList = _this.orderlist;
            }
            if (response['status'] == 'Failed') {
                _this.div = true;
            }
            _this.loader = false;
        });
    };
    OrderListComponent.prototype.getpendingorderList = function (status) {
        // let value={dealerStatus:status,companyStatus:0, currentPage:1,pageSize:200,networkId:'',userId:''}
        // if(this.userdata['userType']==3)
        // {
        //   value.networkId=this.userdata['distributerNetwork']['networkId'];
        //   value.userId=undefined
        // }
        // else
        // {
        //   value.userId=this.userdata['userId'];
        //   value.networkId=undefined
        // }
        // this.db.fetchData(value,"order/list").subscribe((result)=>{
        //   console.log(result);
        //   if(result['status']=='Success')
        //   {
        //     for(let i=0;i<result['data'].length;i++)
        //     {
        //       const orderArray=this.orderlist.filter(row=>row.orderId!=result['data'][i]['orderId']);
        //     }
        //        this.finalOrderList=this.finalOrderList.concat(orderArray);
        //     // this.pendingOrderQty=this.pendingOrderQty.concat(result['data']);
        //   }
        // })
    };
    OrderListComponent.prototype.orderDetail = function (index) {
        if (this.finalOrderList[index].dealerStatus == 1) {
            console.log("router work");
            this.router.navigate(['edit-order/' + this.finalOrderList[index].orderId]);
        }
        if (this.finalOrderList[index].dealerStatus == 2 || this.finalOrderList[index].dealerStatus == 3) {
            this.router.navigate(['order-detail/' + this.finalOrderList[index].orderId]);
        }
    };
    OrderListComponent.prototype.getPendingOrderCount = function () {
        var _this = this;
        var value = { dealerStatus: 0, companyStatus: 1, currentPage: 1, pageSize: 1000, networkId: '', userId: '' };
        if (this.userdata['userType'] == 3) {
            value.networkId = this.userdata['distributerNetwork']['networkId'];
            value.userId = undefined;
        }
        else {
            value.userId = this.userdata['userId'];
            value.networkId = undefined;
        }
        this.db.fetchData(value, "order/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.pendingOrderQty = result['data'];
                _this.getpendingorderList(2);
            }
        });
    };
    OrderListComponent.prototype.getApprovedOrderCount = function () {
        var _this = this;
        var value = { dealerStatus: 3, companyStatus: 2, currentPage: 1, pageSize: 1000, networkId: '', userId: '' };
        if (this.userdata['userType'] == 3) {
            value.networkId = this.userdata['distributerNetwork']['networkId'];
            value.userId = undefined;
        }
        else {
            value.userId = this.userdata['userId'];
            value.networkId = undefined;
        }
        this.db.fetchData(value, "order/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.approvedOrderQty = result['data'];
            }
        });
    };
    OrderListComponent.prototype.getDraftOrderCount = function () {
        var _this = this;
        var value = { dealerStatus: 1, companyStatus: 0, currentPage: 1, pageSize: 1000, networkId: '', userId: '' };
        if (this.userdata['userType'] == 3) {
            value.networkId = this.userdata['distributerNetwork']['networkId'];
            value.userId = undefined;
        }
        else {
            value.userId = this.userdata['userId'];
            value.networkId = undefined;
        }
        this.db.fetchData(value, "order/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.draftOrderQty = result['data'];
            }
        });
    };
    OrderListComponent.prototype.getAllOrderCount = function () {
        var _this = this;
        var value = { dealerStatus: 0, companyStatus: 0, currentPage: 1, pageSize: 1000, networkId: '', userId: '' };
        if (this.userdata['userType'] == 3) {
            value.networkId = this.userdata['distributerNetwork']['networkId'];
            value.userId = undefined;
        }
        else {
            value.userId = this.userdata['userId'];
            value.networkId = undefined;
        }
        this.db.fetchData(value, "order/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.allOredrQty = result['data'];
            }
        });
    };
    OrderListComponent.prototype.getHoldOrderCount = function () {
        var _this = this;
        var value = { dealerStatus: 0, companyStatus: 3, currentPage: 1, pageSize: 1000, networkId: '', userId: '' };
        if (this.userdata['userType'] == 3) {
            value.networkId = this.userdata['distributerNetwork']['networkId'];
            value.userId = undefined;
        }
        else {
            value.userId = this.userdata['userId'];
            value.networkId = undefined;
        }
        this.db.fetchData(value, "order/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.holdOrderQty = result['data'];
            }
        });
    };
    OrderListComponent.prototype.clearfilter = function () {
        var data;
        this.data = {};
        this.data.currentPage = 1;
        this.data.pageSize = 50;
        console.log(this.userdata['userType']);
        if (this.userdata['userType'] == 3) {
            this.data.networkId = this.userdata['distributerNetwork']['networkId'];
        }
        else if (this.userdata['userType'] == 2) {
            this.data.userId = this.userdata['userId'];
        }
        else {
            this.senddata = { "currentPage": 1, "pageSize": 50 };
        }
        this.createdaDate = '';
        this.data.createdOn = undefined;
        this.order_list(0, 1);
    };
    OrderListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-order-list',
            template: __webpack_require__(/*! ./order-list.component.html */ "./src/app/order/order-list/order-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _local_storage_service__WEBPACK_IMPORTED_MODULE_4__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
    ], OrderListComponent);
    return OrderListComponent;
}());



/***/ }),

/***/ "./src/app/order/other-address/other-address.component.html":
/*!******************************************************************!*\
  !*** ./src/app/order/other-address/other-address.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n\n\n<div class=\"edit-modal\">\n<mat-dialog-content >\n    <p class=\"heading\">Other Address</p>\n  \n  <div class=\"from-fields\">\n    <div class=\"row\">\n      <div class=\"col s6\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input\">\n            <input matInput placeholder=\"Shop/Office No\" name=\"office\" id=\"office\"  #office=\"ngModel\" [(ngModel)]=\"networkShippings.office\" required>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"col s6\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input\">\n            <input matInput placeholder=\"Landline No\" name=\"landline\" id=\"landline\" minlength=\"10\" maxlength=\"13\" (keypress)=\"MobileNumber($event)\"  #landline=\"ngModel\" [(ngModel)]=\"networkShippings.landline\">\n          </mat-form-field>\n          <div *ngIf=\"landline.invalid && landline.touched\">\n              <mat-error *ngIf=\"landline.length<10\" >Minimum 10 Digits Required </mat-error>\n            </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col s6\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input\">\n            <input matInput placeholder=\"Mobile No*\" name=\"mobile\" id=\"mobile\" minlength=\"10\" maxlength=\"10\" (keypress)=\"MobileNumber($event)\" #mobile=\"ngModel\" [(ngModel)]=\"networkShippings.mobile\" required>\n          </mat-form-field>\n           <div *ngIf=\"mobile.invalid && mobile.touched\">\n              <mat-error *ngIf=\"mobile.length!=10\" >Minimum 10 Digits Required </mat-error>\n            </div>\n        </div>\n      </div>\n      <div class=\"col s6\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input\">\n            <input matInput placeholder=\"Fax No\" name=\"fax\" id=\"fax\" (keypress)=\"MobileNumber($event)\" maxlength=\"15\"  #fax=\"ngModel\" [(ngModel)]=\"networkShippings.fax\">\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col s6\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput placeholder=\"Email ID\" id=\"email\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"networkShippings.email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n            </mat-form-field>\n            <div class=\"alert alert-danger\" *ngIf=\"!email.valid && email.touched\">\n                Email Id is Not Valid...\n              </div>\n          </div>\n        </div>\n          <div class=\"col s6 pr0\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <textarea matInput placeholder=\"Street\" name=\"street\" [(ngModel)]=\"networkShippings.street\" required></textarea>\n              </mat-form-field>\n            </div>\n          </div>\n      </div>\n    <div class=\"row\">\n      <div class=\"col s6 pl0\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input\">\n            <mat-select placeholder=\"State*\" name=\"state\" [(ngModel)]=\"networkShippings.state\"  #state=\"ngModel\">\n              <mat-option  (click)=\"getShippingDistrict(networkShippings.state)\" *ngFor='let state of shippingState' value=\"{{state}}\">{{state}}</mat-option>  \n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      \n      <div class=\"col s6\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input\">\n            <mat-select placeholder=\"District*\" name=\"district\" [(ngModel)]=\"networkShippings.district\"  #district=\"ngModel\" >\n              <mat-option (click)=\"getShippingCity(networkShippings.state,networkShippings.district)\"  value=\"{{district.districtName}}\" *ngFor=\"let district of shippingDistrict\">{{district.districtName}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col s6 p10\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input\">\n            <mat-select placeholder=\"City*\" name=\"city\" [(ngModel)]=\"networkShippings.city\" #city=\"ngModel\" >\n              <mat-option (click)=\"getShippingPin(city.stateMasterId)\" *ngFor=\"let city of shippingCity\"  value=\"{{city.cityName}}\">{{city.cityName}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n   \n      <div class=\"col s6 pl0\">\n        <div class=\"control-field\">\n          <mat-form-field class=\"cs-input\">\n            <mat-select placeholder=\"Pincode*\"  name=\"pin\" [(ngModel)]=\"networkShippings.pin\"  #pin=\"ngModel\" >\n              <mat-option *ngFor=\"let pin of shippingPin\"  value=\"{{pin}}\">{{pin}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n  <button mat-raised-button color=\"accent\" [mat-dialog-close]=\"true\" style=\"color: #fff;\" cdkFocusInitial [disabled]=\"!networkShippings.office||!networkShippings.mobile||!networkShippings.email||!networkShippings.state||!networkShippings.district||!networkShippings.city||!networkShippings.pin||!networkShippings.street\" (click)=\"saveAddress()\">Save</button>\n</mat-dialog-actions>\n</div>"

/***/ }),

/***/ "./src/app/order/other-address/other-address.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/order/other-address/other-address.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL290aGVyLWFkZHJlc3Mvb3RoZXItYWRkcmVzcy5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/order/other-address/other-address.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/order/other-address/other-address.component.ts ***!
  \****************************************************************/
/*! exports provided: OtherAddressComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OtherAddressComponent", function() { return OtherAddressComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");




var OtherAddressComponent = /** @class */ (function () {
    function OtherAddressComponent(data, db, dialog) {
        this.data = data;
        this.db = db;
        this.dialog = dialog;
        this.shippingState = [];
        this.shippingDistrict = [];
        this.shippingCity = [];
        this.shippingPin = [];
        this.loader = false;
        this.networkShippings = {};
        this.citylist = [];
        this.districts2 = [];
        this.cities1 = [];
        this.masterId = [];
        console.log(data);
        this.networkShippings.networkId = data.id;
        console.log(this.networkShippings.networkId);
        this.getshippingState();
    }
    OtherAddressComponent.prototype.ngOnInit = function () {
    };
    OtherAddressComponent.prototype.saveAddress = function () {
        var _this = this;
        this.loader = true;
        console.log("SAve");
        console.log(this.networkShippings);
        this.db.fetchData(this.networkShippings, "shippingaddress/update").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
        });
        this.dialog.closeAll();
    };
    OtherAddressComponent.prototype.getshippingState = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.shippingState = response['data'];
        });
    };
    OtherAddressComponent.prototype.getShippingDistrict = function (state) {
        var _this = this;
        this.loader = true;
        this.db.fetchData(Array(state), 'district/list/').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            _this.shippingDistrict = response['data'][0].distrcits;
            // console.log(this.district1);
        });
    };
    OtherAddressComponent.prototype.getShippingCity = function (state, district) {
        var _this = this;
        this.loader = true;
        this.db.fetchData(Array({ "stateName": state, "distrcits": Array({ 'districtName': district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.shippingCity = response['data'][0].distrcits[0].cities;
            console.log(_this.shippingCity);
        });
    };
    OtherAddressComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    OtherAddressComponent.prototype.getShippingPin = function (masterId) {
        var _this = this;
        console.log(masterId);
        this.masterId.push(masterId);
        this.loader = true;
        this.db.fetchData({ "stateMasterIds": this.masterId }, 'city/pincodes').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.shippingPin = response['data'][0]['pinCodes'];
            console.log(_this.shippingPin);
            // this.districts2=this.citylist[0].distrcits;
            // this.cities1=this.districts2[0].cities;
            // let filterpincode= this.cities1.filter(x => x.cityName==this.networkShippings.city);
            // this.shippingPin=filterpincode[0].pinCodes;
        });
    };
    OtherAddressComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-other-address',
            template: __webpack_require__(/*! ./other-address.component.html */ "./src/app/order/other-address/other-address.component.html"),
            styles: [__webpack_require__(/*! ./other-address.component.scss */ "./src/app/order/other-address/other-address.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"]])
    ], OtherAddressComponent);
    return OtherAddressComponent;
}());



/***/ }),

/***/ "./src/app/order/pending-order/pending-order.component.html":
/*!******************************************************************!*\
  !*** ./src/app/order/pending-order/pending-order.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"edit-modal\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n          <img src=\"assets/img/loader.png\" class=\"rotate\">\n        </div>\n      \n<mat-dialog-content class=\"mat-typography pl15 pr15\" style=\"overflow-x: hidden !important; position: relative;\">\n<p class=\"heading\">PRODUCT INFORMATION</p>\n<div class=\"col s12 padding0\">\n  <div class=\"cs-table left-right-15\">\n      <div class=\"table-head\">\n          <table>\n              <tr>\n                  <th class=\"w180\">Order Date</th>\n                  <th class=\"w100\">Order QTY</th>\n                  <th class=\"w100\">Order Amount</th>\n                  <th class=\"w130\">Order Number</th>\n                  <th class=\"w110\">Distributor Status</th>\n                  <th class=\"w110\">Company Status</th>\n              </tr>\n          </table>\n      </div>\n      <div class=\"table-container pb0\">\n          <div class=\"table-content\">\n              <table>\n                  <tr *ngFor=\"let order of productList;let index=index\">\n                      <td class=\"w180\">{{order.createdOn |date :'EEEE, MMMM d, y'}}</td>\n                      <td class=\"w100\">{{order.quantity}}</td>\n                      <td class=\"w100\">{{order.amount}}</td>\n                      <td class=\"w130\">---</td>\n                      <td class=\"w110\" [ngClass]=\"{'pending':order.dealerStatus==2,'approved':order.dealerStatus==3}\">\n                          <span class=\"text-center\" *ngIf=\"order.dealerStatus==2\">Pending</span>\n                          <span class=\"text-center\" *ngIf=\"order.dealerStatus==3\">Approved</span>\n                        </td>\n                        <td class=\"w110 \"[ngClass]=\"{'pending':order.companyStatus==1,'approved':order.companyStatus==2,'reject':order.companyStatus==3}\">\n                          <span class=\"text-center\" *ngIf=\"order.companyStatus==1\">Pending</span>\n                          <span class=\"text-center\" *ngIf=\"order.companyStatus==2\">Approved</span>\n                          <span class=\"text-center\" *ngIf=\"order.companyStatus==3\">Hold</span>\n                        </td>\n                    </tr>\n              </table>\n          </div>\n      </div>\n  </div>\n</div>\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n<button mat-raised-button [mat-dialog-close]=\"false\" color=\"warn\">Close</button>\n</mat-dialog-actions>\n</div>"

/***/ }),

/***/ "./src/app/order/pending-order/pending-order.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/order/pending-order/pending-order.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL3BlbmRpbmctb3JkZXIvcGVuZGluZy1vcmRlci5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/order/pending-order/pending-order.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/order/pending-order/pending-order.component.ts ***!
  \****************************************************************/
/*! exports provided: PendingOrderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PendingOrderComponent", function() { return PendingOrderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");



var PendingOrderComponent = /** @class */ (function () {
    function PendingOrderComponent(data, dialog) {
        this.data = data;
        this.dialog = dialog;
        this.productList = [];
        this.tmp_productList = [];
        this.finalProductList = [];
        console.log(data);
        this.productList = data;
        console.log(this.productList);
        // this.tmp_productList=data['product'];
        // this.finalProductList=data['product'];
        // console.log(this.productList);
    }
    PendingOrderComponent.prototype.ngOnInit = function () {
    };
    PendingOrderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-pending-order',
            template: __webpack_require__(/*! ./pending-order.component.html */ "./src/app/order/pending-order/pending-order.component.html"),
            styles: [__webpack_require__(/*! ./pending-order.component.scss */ "./src/app/order/pending-order/pending-order.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"]])
    ], PendingOrderComponent);
    return PendingOrderComponent;
}());



/***/ }),

/***/ "./src/app/order/schemepopup/schemepopup.component.html":
/*!**************************************************************!*\
  !*** ./src/app/order/schemepopup/schemepopup.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"edit-modal\">\n    <mat-dialog-content  style=\"overflow-x: hidden !important;\">\n      <p class=\"heading\">Offer Description</p>\n      <div class=\"col s12\">\n        <div class=\"container\" >\n          <div class=\"row\">\n            <div class=\"col s12 padding0\">\n\n                <ul class=\"terms-condition mt15\">\n                    <li *ngFor=\"let scheme of schemeList\">{{scheme.offerDescription}}</li>\n                </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n      <button mat-raised-button color=\"warn\"[mat-dialog-close]=\"false\" cdkFocusInitial>Close</button>\n    </mat-dialog-actions>\n  </div>"

/***/ }),

/***/ "./src/app/order/schemepopup/schemepopup.component.scss":
/*!**************************************************************!*\
  !*** ./src/app/order/schemepopup/schemepopup.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL3NjaGVtZXBvcHVwL3NjaGVtZXBvcHVwLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/order/schemepopup/schemepopup.component.ts":
/*!************************************************************!*\
  !*** ./src/app/order/schemepopup/schemepopup.component.ts ***!
  \************************************************************/
/*! exports provided: SchemepopupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchemepopupComponent", function() { return SchemepopupComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");



var SchemepopupComponent = /** @class */ (function () {
    function SchemepopupComponent(data) {
        this.data = data;
        console.log(data);
        this.schemeList = data;
        console.log(this.schemeList);
        // this.user=data.User;
        // this.status=data.status;
    }
    SchemepopupComponent.prototype.ngOnInit = function () {
    };
    SchemepopupComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-schemepopup',
            template: __webpack_require__(/*! ./schemepopup.component.html */ "./src/app/order/schemepopup/schemepopup.component.html"),
            styles: [__webpack_require__(/*! ./schemepopup.component.scss */ "./src/app/order/schemepopup/schemepopup.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object])
    ], SchemepopupComponent);
    return SchemepopupComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component.html":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component.html ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  \n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/gift.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Gift</h2>\n        <p>POP & Gift Order</p>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\" *ngIf=\"userType!=3\"> \n        <div class=\"sprate-box pt0\">\n          <div class=\"cs-heading\">\n            <h2>Select Distributor</h2>\n          </div>\n          <div class=\"col s6 from-fields\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input infix-bodr8\">\n                <mat-select placeholder=\"Distributor\" name=\"networkId\" [(ngModel)]=\"distributorId.networkId\">\n                  <mat-option (click)=\"getNetworkRedeemPointData()\" *ngFor=\"let distributor of distributorList\" [value]=\"distributor.networkId\">{{distributor.establishment}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div  *ngIf=\"distributorId.networkId\" class=\"row\">\n        <div class=\"col s8\">\n          <div class=\"sprate-box pt0\">\n            <div class=\"cs-heading\">\n              <h2>POP & GIFT Order</h2>\n            </div>\n            \n            <div class=\"gift-secation\">\n              <ul>\n                <li [ngClass]=\"{'add-cart': list.itemSelected}\" *ngFor=\"let list of giftlist;let i=index\">\n                  \n                  <img [hidden]=\"list.documents.length>0 && j!=0\" src=\"{{api+doc.documentId+'/'+'1'}}\" *ngFor=\"let doc of list.documents;let j=index\">\n                  \n                  <img *ngIf=\"list.documents.length==0\" src=\"assets/img/pp.png\">\n                  \n                  <div class=\"tittle\">\n                    {{list.name}}\n                  </div>\n                  <div class=\"dflex\">\n                    <div class=\"value\">\n                      <p>Points</p>\n                      <p>{{list.redeem}}</p>\n                    </div>\n                    <div class=\"add-qty\">\n                      <input type=\"number\" [(ngModel)]=\"list.qty\" (keyup)=\"qtyChangeHandler(list.popId )\" (keyup.enter)=\"addToCartHandler()\">\n                    </div>\n                  </div>\n                </li>\n                \n              </ul>\n            </div>\n            \n            <div class=\"add-cart mt5\">\n              <div class=\"cs-btn text-right\">\n                <div class=\"in-btn\">\n                  <button (click)=\"addToCartHandler()\" [disabled]=\"walletBalance < 1\" mat-raised-button color=\"accent\">Add To Cart</button>\n                </div>\n              </div>\n              <div *ngIf=\"walletBalance < 1\" class=\"has-error\"> \n                Your Have Not Enough Wallet Points....\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col s4 right-sticky\">\n          <div class=\"sprate-box pt0\">\n            <div class=\"cs-logs\">\n              <div class=\"cs-heading\">\n                <h2>Wallet Section</h2>\n              </div>\n              <div class=\"wallet-details\">\n                <p>Total Wallet Points</p>\n                <span>{{walletBalance}}</span>\n              </div>\n              \n              <div class=\"wallet-procsess\">\n                <ul>\n                  <li>\n                    <p>Total Item</p>\n                    <span>{{cartData.length}}</span>\n                  </li>\n                  <li>\n                    <p>Used Points</p>\n                    <span>{{totalPointsRedeemed ? totalPointsRedeemed : 0}}</span>\n                  </li>\n                  <li>\n                    <p>Available Points</p>\n                    <span>{{totalPointsRedeemed ? walletBalance - totalPointsRedeemed : walletBalance}}</span>\n                  </li>\n                </ul>\n              </div>\n              \n              <div *ngIf=\"this.cartData && this.cartData.length>0\" class=\"add-cart mt5\">\n                <a class=\"full-detail\" mat-button (click)=\"openDialog()\">View Details</a>\n              </div>\n              \n              <div class=\"add-cart mt5\">\n                <div class=\"cs-btn text-right\">\n                  <div class=\"in-btn\">\n                    <button [disabled]=\"this.cartData.length==0\" (click)=\"placeOrder();\" mat-raised-button color=\"accent\">Place Gift Order</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"

/***/ }),

/***/ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component.ts":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component.ts ***!
  \*****************************************************************************************************************/
/*! exports provided: PopAndGiftDistributorAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PopAndGiftDistributorAddComponent", function() { return PopAndGiftDistributorAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _wallet_detail_modal_wallet_detail_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../wallet-detail-modal/wallet-detail-modal.component */ "./src/app/pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");








var PopAndGiftDistributorAddComponent = /** @class */ (function () {
    function PopAndGiftDistributorAddComponent(dialog, db, rout, toast) {
        this.dialog = dialog;
        this.db = db;
        this.rout = rout;
        this.toast = toast;
        this.giftlist = [];
        this.cartData = [];
        this.loginData = {};
        this.user = {};
        this.distributorList = [];
        this.distributorId = {};
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        if (this.userType != 3) {
            this.getDistributorList();
        }
    }
    PopAndGiftDistributorAddComponent.prototype.ngOnInit = function () {
        this.loginData = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.loginData);
        if (this.loginData.data.userType == 3) {
            this.getNetworkRedeemPointData();
        }
        this.getPopGiftList();
    };
    PopAndGiftDistributorAddComponent.prototype.getDistributorList = function () {
        var _this = this;
        this.loader = true;
        var url;
        var data;
        if (this.userType != 1) {
            url = 'mynetwork/detail';
            data = { salesUserId: this.userId };
        }
        else {
            url = 'network/list';
            data = {};
        }
        this.db.fetchData(data, url).subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.distributorList = result['data'];
            }
        });
    };
    PopAndGiftDistributorAddComponent.prototype.openDialog = function () {
        var dialogRef = this.dialog.open(_wallet_detail_modal_wallet_detail_modal_component__WEBPACK_IMPORTED_MODULE_3__["WalletDetailModalComponent"], {
            width: '768px',
            data: this.cartData
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log('The dialog was closed');
        });
    };
    PopAndGiftDistributorAddComponent.prototype.getNetworkRedeemPointData = function () {
        var _this = this;
        this.loader = true;
        if (this.userType == 3) {
            this.distributorId.networkId = this.loginData['data']['distributerNetwork']['networkId'];
        }
        console.log(this.distributorId.networkId);
        this.db.fetchData({ networkId: this.distributorId.networkId }, 'network/list').subscribe(function (response) {
            console.log(response);
            _this.walletBalance = response['data'][0]['wallet'];
            console.log(_this.walletBalance);
            _this.loader = false;
        });
    };
    PopAndGiftDistributorAddComponent.prototype.getPopGiftList = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({}, 'pop/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.giftlist = response['data'];
            // this.gifts=this.giftlist.data;
            _this.url = _this.db.dburl;
            _this.request = 'download/document/';
            _this.api = _this.url + _this.request;
            console.log(_this.request);
            console.log(_this.url);
            console.log(_this.api);
        });
    };
    PopAndGiftDistributorAddComponent.prototype.qtyChangeHandler = function (popId) {
        var index = this.giftlist.findIndex(function (row) { return row.popId == popId; });
        if (index != -1) {
            if (this.giftlist[index].qty < 0) {
                this.giftlist[index].qty = 0;
            }
        }
    };
    PopAndGiftDistributorAddComponent.prototype.addToCartHandler = function () {
        var _this = this;
        var _loop_1 = function (index) {
            if (this_1.giftlist[index].qty > 0) {
                var indexExist = this_1.cartData.findIndex(function (row) { return row.popId == _this.giftlist[index].popId; });
                if (indexExist == -1) {
                    var totalRedeemPoint = this_1.giftlist[index].redeem * this_1.giftlist[index].qty;
                    this_1.cartData.push({ popId: this_1.giftlist[index].popId, name: this_1.giftlist[index].name, quantity: this_1.giftlist[index].qty, redeemPointsPerUnit: this_1.giftlist[index].redeem, totalPointsRedeemed: totalRedeemPoint });
                }
                else {
                    this_1.cartData[indexExist].name = this_1.giftlist[index].name;
                    this_1.cartData[indexExist].quantity = this_1.giftlist[index].qty;
                    this_1.cartData[indexExist].redeemPointsPerUnit = this_1.giftlist[index].redeem;
                    var totalRedeemPoint = this_1.giftlist[index].qty * this_1.giftlist[index].redeem;
                    this_1.cartData[indexExist].totalPointsRedeemed = totalRedeemPoint;
                }
            }
            else if (this_1.giftlist[index].qty == 0) {
                var indexExist = this_1.cartData.findIndex(function (row) { return row.popId == _this.giftlist[index].popId; });
                if (indexExist != -1) {
                    this_1.cartData.splice(indexExist, 1);
                }
            }
        };
        var this_1 = this;
        for (var index = 0; index < this.giftlist.length; index++) {
            _loop_1(index);
        }
        console.log(this.cartData);
        this.totalPointsRedeemed = 0;
        for (var index = 0; index < this.cartData.length; index++) {
            this.totalPointsRedeemed += this.cartData[index].totalPointsRedeemed;
        }
        var _loop_2 = function (index) {
            var isItemExist = this_2.cartData.findIndex(function (row) { return row.popId == _this.giftlist[index].popId; });
            if (isItemExist != -1) {
                this_2.giftlist[index].itemSelected = true;
            }
            else {
                this_2.giftlist[index].itemSelected = false;
            }
        };
        var this_2 = this;
        for (var index = 0; index < this.giftlist.length; index++) {
            _loop_2(index);
        }
        this.toast.openSucess('Cart Updated Successfully', '');
    };
    PopAndGiftDistributorAddComponent.prototype.placeOrder = function () {
        var _this = this;
        var totalPointsRedeemed = 0;
        for (var index = 0; index < this.cartData.length; index++) {
            totalPointsRedeemed += this.cartData[index].totalPointsRedeemed;
        }
        console.log(totalPointsRedeemed);
        var loginUser = JSON.parse(localStorage.getItem('user')) || [];
        console.log(loginUser);
        var currentDate = moment__WEBPACK_IMPORTED_MODULE_6__().format('YYYY-MM-DD');
        console.log(currentDate);
        var apiData = {
            'popOrderId': 0,
            'networkId': this.loginData['data']['distributerNetwork']['networkId'],
            'totalPointsRedeemed': totalPointsRedeemed,
            'createdBy': loginUser.data.userId,
            'createdOn': currentDate,
            'status': 0,
            'statusUpdatedBy': 0,
            'statusUpdatedOn': currentDate,
            'orderedItems': this.cartData
        };
        this.loader = true;
        this.db.fetchData(apiData, 'poporder/add').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.toast.openSucess('Gift Order Placed Successfully', '');
            _this.rout.navigate(['/order-list']);
        });
    };
    PopAndGiftDistributorAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-pop-and-gift-distributor-add',
            template: __webpack_require__(/*! ./pop-and-gift-distributor-add.component.html */ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-add/pop-and-gift-distributor-add.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], _constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"]])
    ], PopAndGiftDistributorAddComponent);
    return PopAndGiftDistributorAddComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/gift.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Pop/Gifts Orders</h2>\n        <p>Total <span>{{popOrderData.length}}</span></p>\n      </div>\n    </div>\n\n    <!-- <div  *ngIf=\"filter.gift\" class=\"filter-container left-auto\">\n      <div (click)=\"clearfilter()\" class=\"filter-btn\">\n        <button mat-button >CLEAR FILTER</button>\n      </div>\n    </div> -->\n    \n    \n    <div *ngIf=\"loginData.data.userType==3\" class=\"left-auto\">\n      <div class=\"wallet-details w300 mb0 mt0\">\n        <p>Total Wallet Points</p>\n        <span style=\"font-size: 16px; font-weight: 700;\">{{walletBalance}}</span>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th class=\"w110\">Date</th>\n                    <th *ngIf=\"loginData.data.role==1 && loginData.data.superAdmin\" class=\"w110\">Company</th>\n                    <th class=\"padding0\">\n                      <table>\n                        <tr>\n                          <th>Pop & Gift</th>\n                          <th class=\"w100\">Qty</th>\n                          <th class=\"w130\">Qty Per Points</th>\n                        </tr>\n                      </table>\n                    </th>\n                    <th class=\"w170\">Total Redeem</th>\n                    <th class=\"w130\">Status</th>\n                    <th class=\"w130\">Action</th>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-head bdrt\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th  class=\"w110\">&nbsp;</th>\n                    <th *ngIf=\"loginData.data.role==1 && loginData.data.superAdmin\" class=\"w110\">&nbsp;</th>\n                    <th class=\"padding0\">\n                      <table>\n                        <tr>\n                          <th>\n                            <div class=\"th-search-acmt\">\n\n                              <mat-form-field class=\"wp100\">\n                               <input type=\"text\"  name=\"name\" [(ngModel)]=\"filter.name\" (ngModelChange)=\"giftNameSearchList()\" matInput [matAutocomplete]=\"auto4\">\n\n                                    <mat-autocomplete #auto4=\"matAutocomplete\" >\n                                      <mat-option *ngFor='let list of giftSearchData'  (click)=\"productFilter()\" value=\"{{list.name}}\">{{list.name}}</mat-option>\n                                    </mat-autocomplete>\n\n                                    <a *ngIf=\"showClearIcon\" class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removeNameFilter()\"><i class=\"material-icons\">clear</i></a>\n                             \n                              </mat-form-field>\n                            </div>\n                          </th>\n                          <th class=\"w100\">&nbsp;</th>\n                          <th class=\"w130\">&nbsp;</th>\n                        </tr>\n                      </table>\n                    </th>\n                    <th class=\"w170\">&nbsp;</th>\n                    <th class=\"w130\">&nbsp;</th>\n                    <th class=\"w130\">&nbsp;</th>\n                  </tr>\n                </table>\n              </div>\n            </div>\n\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table class=\"sno-border\">\n                  <tr *ngFor=\"let list of popOrderData; let index = index;\">\n\n                    <td class=\"w30\">{{index+1}}</td>\n\n                    <td class=\"w110\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\n\n                    <td *ngIf=\"loginData.data.role==1 && loginData.data.superAdmin\" class=\"w110\">{{list.establishment}}</td>\n\n                    <td class=\"padding0\">\n                      <table class=\"inner-table\">\n                        <tr *ngFor=\"let row of list.orderedItems\">\n                          <td>\n                            <a class=\"link-btn\" mat-button routerLinkActive=\"active\">{{row.name}}</a>\n                          </td>\n                          <td class=\"w100\">{{row.quantity}}</td>\n                          <td class=\"w130\">{{row.redeemPointsPerUnit}}</td>\n                        </tr>\n                      </table>\n                    </td>\n                    <td class=\"w170\">{{list.totalPointsRedeemed}}</td>\n                    <td class=\"w130\">Pending\n                    </td>\n                    <td class=\"w130\">\n                        <a *ngIf=\"loginData.data.role==1 && loginData.data.superAdmin\" class=\"link-btn\" mat-button (click)=\"openDialog()\">Change Status</a>\n                        <a *ngIf=\"loginData.data.userType==3\" class=\"link-btn cancel\" mat-button (click)=\"cancelOrderHandler(list.popOrderId)\">Cancel Order</a>\n                      </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- <div *ngIf=\"div\" class=\"data-not-available\" >\n      <div class=\"outer\">\n        <div class=\"iinear\">\n          <div class=\"figure\" matRipple>\n            <div class=\"header\">\n              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n            </div>\n            \n            <div class=\"description\">\n              \n              <div class=\"img\">\n                <i class=\"material-icons\">error_outline</i>\n              </div>\n              <div class=\"psc\">\n                <p>data not available</p>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div> -->\n  </div>\n\n  <div class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" routerLink=\"/pop-and-gift-distributor-add\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component.ts":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component.ts ***!
  \*******************************************************************************************************************/
/*! exports provided: PopAndGiftDistributorListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PopAndGiftDistributorListComponent", function() { return PopAndGiftDistributorListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _status_modal_status_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../status-modal/status-modal.component */ "./src/app/pop_and_gift-distributor/status-modal/status-modal.component.ts");







var PopAndGiftDistributorListComponent = /** @class */ (function () {
    function PopAndGiftDistributorListComponent(db, toast, alrt, dialog) {
        this.db = db;
        this.toast = toast;
        this.alrt = alrt;
        this.dialog = dialog;
        this.popOrderData = [];
        this.loginData = {};
        this.filter = {};
        this.giftSearchData = [];
        this.showClearIcon = false;
    }
    PopAndGiftDistributorListComponent.prototype.ngOnInit = function () {
        this.loginData = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.loginData);
        if (this.loginData.data.userType == 3) {
            this.getNetworkRedeemPointData();
        }
        this.popGiftOrderList();
    };
    PopAndGiftDistributorListComponent.prototype.openDialog = function () {
        var dialogRef = this.dialog.open(_status_modal_status_modal_component__WEBPACK_IMPORTED_MODULE_6__["StatusModalComponent"], {
            width: '500px',
            data: {}
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log('The dialog was closed');
        });
    };
    PopAndGiftDistributorListComponent.prototype.getNetworkRedeemPointData = function () {
        var _this = this;
        this.loader = true;
        console.log(this.loginData['data']['distributerNetwork']['networkId']);
        this.db.fetchData({ networkId: this.loginData['data']['distributerNetwork']['networkId'] }, 'network/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.walletBalance = response['data'][0]['wallet'];
            }
            console.log(_this.popOrderData);
            _this.loader = false;
        });
    };
    PopAndGiftDistributorListComponent.prototype.popGiftOrderList = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ currentPage: 1, pageSize: 200, totalRecords: 200 }, 'poporder/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.popOrderData = response['data'];
            }
            console.log(_this.popOrderData);
            _this.loader = false;
        });
    };
    PopAndGiftDistributorListComponent.prototype.onGiftClickHandler = function () {
        // this.productList({ "currentPage": this.currentPage,
        // "pageSize": this.pageSize,"segmentCode":this.filter.segment,"subSegmentCode":this.filter.subsegment,"categoryCode":this.filter.category,"productName":this.filter.prod,"modelCode":this.filter.model});
        // this.removeproductname=true;
    };
    PopAndGiftDistributorListComponent.prototype.giftNameSearchList = function () {
        var _this = this;
        if (this.filter.name) {
            this.showClearIcon = true;
        }
        else {
            this.showClearIcon = false;
        }
        this.db.fetchData({ 'name': this.filter.name }, 'pop/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.giftSearchData = response['data'];
            }
            console.log(_this.giftSearchData);
        });
    };
    PopAndGiftDistributorListComponent.prototype.removeNameFilter = function () {
        var _this = this;
        this.filter.name = '';
        this.showClearIcon = false;
        setTimeout(function () {
            _this.popGiftOrderList();
        }, 500);
    };
    PopAndGiftDistributorListComponent.prototype.cancelOrderHandler = function (giftOrderId) {
        var _this = this;
        this.alrt.confirmation('Cancel Gift Order!').then(function (result) {
            if (result) {
                console.log(result);
                console.log(giftOrderId);
                _this.loader = true;
                _this.db.fileData('', 'poporder/cancel/' + giftOrderId).subscribe(function (response) {
                    _this.loader = false;
                    console.log(response);
                    _this.popGiftOrderList();
                });
            }
        });
    };
    PopAndGiftDistributorListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-pop-and-gift-distributor-list',
            template: __webpack_require__(/*! ./pop-and-gift-distributor-list.component.html */ "./src/app/pop_and_gift-distributor/pop-and-gift-distributor-list/pop-and-gift-distributor-list.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]])
    ], PopAndGiftDistributorListComponent);
    return PopAndGiftDistributorListComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift-distributor/status-modal/status-modal.component.html":
/*!***********************************************************************************!*\
  !*** ./src/app/pop_and_gift-distributor/status-modal/status-modal.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div   class=\"edit-modal\">\n  <!-- <div *ngIf=\"loader\"> \n    <mat-spinner class=\"loader\"></mat-spinner> \n  </div> -->\n  <div mat-dialog-content>\n    <p class=\"heading\">Update Status</p>\n    <div class=\"from-fields\">\n      <div class=\"col s12\">          \n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <mat-select placeholder=\"Status\">\n                  <mat-option value=\"1\">Pending</mat-option>\n                  <mat-option value=\"2\">Shipped</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"false\" color=\"warn\" (click)=\"onNoClick()\">Cancel</button>\n    <button mat-raised-button [mat-dialog-close]=\"false\" color=\"accent\">Save</button>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/pop_and_gift-distributor/status-modal/status-modal.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/pop_and_gift-distributor/status-modal/status-modal.component.ts ***!
  \*********************************************************************************/
/*! exports provided: StatusModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StatusModalComponent", function() { return StatusModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var StatusModalComponent = /** @class */ (function () {
    function StatusModalComponent() {
    }
    StatusModalComponent.prototype.ngOnInit = function () {
    };
    StatusModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-status-modal',
            template: __webpack_require__(/*! ./status-modal.component.html */ "./src/app/pop_and_gift-distributor/status-modal/status-modal.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], StatusModalComponent);
    return StatusModalComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component.html":
/*!*************************************************************************************************!*\
  !*** ./src/app/pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\" >\n  <p class=\"heading\">Gift Item Deatils</p>\n  <div mat-dialog-content style=\"overflow-x: hidden;\">\n      <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"cs-table left-right-20\">\n                <div class=\"table-head\">\n                  <table class=\"sno-border\">\n                    <tr>\n                      <th class=\"w30\">&nbsp;</th>\n                      <!-- <th class=\"w200 text-center\">Qty</th> -->\n                      <th class=\"padding0\">\n                        <table>\n                          <tr>\n                            <th>Pop & Gift</th>\n                            <th class=\"w100\">Qty</th>\n                            <th class=\"w130\">Point/Qty</th>\n                          </tr>\n                        </table>\n                      </th>\n                      <th class=\"w170\">Total Redeem</th>\n                    </tr>\n                  </table>\n                </div>\n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table class=\"sno-border\">\n                    <tr>\n                   \n                      <td class=\"padding0\">\n                        <table class=\"inner-table\">\n                          <tr *ngFor=\"let list of itemData\">\n                            <td>\n                              <a class=\"link-btn\" mat-button routerLink=\"\" routerLinkActive=\"active\">{{list.name}}</a>\n                            </td>\n                            <td class=\"w100\">{{list.quantity}}</td>\n                            <td class=\"w130\">{{list.redeemPointsPerUnit}}</td>\n                          </tr>\n                        </table>\n                      </td>\n                      <td class=\"w170\">{{this.totalPointsRedeemed}}</td>\n                    </tr>\n                \n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    \n  </div>\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\"  [mat-dialog-close]=\"false\" class=\"mr15\">Cancel</button>\n    <div >\n      <!-- <button mat-raised-button  [mat-dialog-close]=\"true\" color=\"accent\">Save</button> -->\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: WalletDetailModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WalletDetailModalComponent", function() { return WalletDetailModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");





var WalletDetailModalComponent = /** @class */ (function () {
    function WalletDetailModalComponent(dialogRef, data, db, toast) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.toast = toast;
        this.itemData = {};
        console.log(this.data);
        this.itemData = this.data;
        console.log(this.itemData);
        this.totalPointsRedeemed = 0;
        for (var index = 0; index < this.itemData.length; index++) {
            this.totalPointsRedeemed += this.itemData[index].totalPointsRedeemed;
        }
        console.log(this.totalPointsRedeemed);
    }
    WalletDetailModalComponent.prototype.ngOnInit = function () {
    };
    WalletDetailModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-wallet-detail-modal',
            template: __webpack_require__(/*! ./wallet-detail-modal.component.html */ "./src/app/pop_and_gift-distributor/wallet-detail-modal/wallet-detail-modal.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"]])
    ], WalletDetailModalComponent);
    return WalletDetailModalComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift/add-gift/add-gift.component.html":
/*!***************************************************************!*\
  !*** ./src/app/pop_and_gift/add-gift/add-gift.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/gift.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Gift</h2>\n        <p>Add New POP & Gift</p>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <form (ngSubmit)=\"f.form.valid && onSubmit() \" #f=\"ngForm\" novalidate>\n          <div class=\"col s8\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>POP & GIFT</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"from-fields\" >\n                <div class=\"row mb0\">\n                  <div class=\"col s6 pl0\">\n                    <div class=\"col s12 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Gift NAME\" name=\"name\" id=\"name\" #name=\"ngModel\" [(ngModel)]=\"gift_form.name\" #name=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && name.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && name.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"name.errors.required\">Name is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <!-- <div class=\"col s6 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Qty\" name=\"quantity\" id=\"quantity\" #quantity=\"ngModel\" [(ngModel)]=\"gift_form.quantity\" #quantity=\"ngModel\" (keypress)=\"MobileNumber($event)\" [ngClass]=\"{ 'is-invalid': f.submitted && quantity.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && quantity.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"quantity.errors.required\">Quantity is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div> -->\n                    <div class=\"col s12 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Redeem Points\" name=\"point\" id=\"point\" #point=\"ngModel\" [(ngModel)]=\"gift_form.point\" (keypress)=\"MobileNumber($event)\">\n                        </mat-form-field>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s6 pr0\">\n                    <div class=\"from-fields\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input wp100 h-input infix-bodr8\">\n                          <textarea class=\"h110\" matInput placeholder=\"Description\"  name=\"description\" id=\"description\" #description=\"ngModel\"  [(ngModel)]=\"gift_form.description\"  #description=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && description.invalid }\" required></textarea>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && description.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"description.errors.required\">Description is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>Additonal Fields</h2>\n              </div>\n              <div class=\"from-fields\" >\n                <div class=\"row mt15 mb0\">\n                  <div class=\"col s4 pl0\">\n                    <p class=\"cs-lable\">Labels</p>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <p class=\"cs-lable\">Values</p>\n                  </div>\n                </div>\n                <div class=\"row mb0\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr\">\n                        <input matInput name=\"label1\" [(ngModel)]=\"gift_form.aditionalField1Label\">\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr\">\n                        <input matInput name=\"value1\" [(ngModel)]=\"gift_form.aditionalField1Value\">\n                      </mat-form-field>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row mb0\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput name=\"label2\" [(ngModel)]=\"gift_form.aditionalField2Label\">\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput  name=\"value2\" [(ngModel)]=\"gift_form.aditionalField2Value\">\n                      </mat-form-field>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row mb0\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput  name=\"label3\" [(ngModel)]=\"gift_form.aditionalField3Label\">\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput  name=\"value3\" [(ngModel)]=\"gift_form.aditionalField3Value\">\n                      </mat-form-field>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row mb0\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput name=\"label4\" [(ngModel)]=\"gift_form.aditionalField4Label\">\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput name=\"Value4\" [(ngModel)]=\"gift_form.aditionalField4Value\">\n                      </mat-form-field>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n          </div>\n          \n          \n          <div class=\"col s4 right-sticky\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-logs\">\n                <div class=\"cs-heading\">\n                  <h2>GIFT IMAGES</h2>\n                  <!-- <label >\n                    <input type=\"file\" (change)=\"insertImage($event)\" style=\"display: none;\">\n                    Add New\n                  </label> -->\n                </div>\n                <!-- <div class=\"logs-outer padding0\">\n                </div> -->\n\n                <div class=\"col s12\">\n                    <div class=\"cs-file-multiple scroll\">\n                      <ul>\n                        <li *ngFor=\"let urlData of urls;let i=index\">\n                          <label>\n                            <img src=\"{{urlData}}\">\n                            <a (click)=\"deleteimg(i)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                          </label>\n                        </li>\n                        <li>\n                          <div class=\"cs-file\">\n                            <label>\n                              <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\">\n                              <i class=\"material-icons add-file-icon\" >add</i>\n                            </label>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"col s12\">\n            <div class=\"cs-btn fixedd mt32 text-right\">\n              <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\" (click)=\" setFocus(f.form)\" >Save</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/pop_and_gift/add-gift/add-gift.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/pop_and_gift/add-gift/add-gift.component.ts ***!
  \*************************************************************/
/*! exports provided: AddGiftComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddGiftComponent", function() { return AddGiftComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_7__);








var AddGiftComponent = /** @class */ (function () {
    function AddGiftComponent(db, router, route, toast, platformId) {
        this.db = db;
        this.router = router;
        this.route = route;
        this.toast = toast;
        this.platformId = platformId;
        this.gift_form = {};
        this.selectedFile = [];
        this.giftdata = {};
        this.urls = [];
        this.picvalue = [];
    }
    AddGiftComponent.prototype.ngOnInit = function () {
    };
    AddGiftComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    AddGiftComponent.prototype.setFocus = function (form) {
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["isPlatformBrowser"])(this.platformId)) {
                        jquery__WEBPACK_IMPORTED_MODULE_7__('#' + key).focus();
                    }
                    break;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
    };
    AddGiftComponent.prototype.insertImage = function (data) {
        var _this = this;
        //  this.selectedFile=[];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        console.log(this.selectedFile);
        //  setTimeout(() => {
        //    this.Insert_Image();
        //  }, 500);
    };
    AddGiftComponent.prototype.deleteimg = function (index) {
        this.urls.splice(index, 1);
        this.selectedFile.splice(index, 1);
    };
    AddGiftComponent.prototype.onSubmit = function () {
        var _this = this;
        this.gift_form.documents = [];
        // console()
        for (var i = 0; i < this.selectedFile.length; i++) {
            this.giftdata = new FormData;
            this.giftdata.action = 1;
            this.giftdata.binaryData = this.urls[i];
            this.giftdata.documentType = 3;
            this.giftdata.documentName = this.gift_form.name;
            this.giftdata.referenceId = 0;
            this.giftdata.fileName = "image" + i + ".jpg", this.selectedFile[i];
            console.log(this.giftdata.documentName);
            this.gift_form.documents[i] = JSON.parse(JSON.stringify(this.giftdata));
        }
        console.log(this.gift_form.documents);
        this.loader = true;
        this.gift_form.redeem = this.gift_form.point;
        this.db.fetchData(this.gift_form, 'pop/add').subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            _this.loader = false;
            if (_this.message == "PopGift added successfully") {
                _this.toast.openSucess('Gift added successfully', '');
                _this.router.navigate(['/gift-list']);
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
        });
    };
    AddGiftComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-gift',
            template: __webpack_require__(/*! ./add-gift.component.html */ "./src/app/pop_and_gift/add-gift/add-gift.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], Object])
    ], AddGiftComponent);
    return AddGiftComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift/eversion-detail/eversion-detail.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/pop_and_gift/eversion-detail/eversion-detail.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"cs-loader\" *ngIf=\"loader\"> \n  <img src=\"assets/img/loader.png\" class=\"rotate\">\n</div>\n\n<div class=\"main-container\">\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/gift-list\" routerLinkActive=\"active\" ><i   class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{eVersionDetail.files.length}}</h2>\n      </div>\n      \n      <div class=\"cs-value\">\n        <h2>Total</h2>\n        <p class=\"light\">33</p>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s8\">\n          <div class=\"details-info\">\n            <div class=\"basic-details\">\n              <div class=\"col s12 cs-figure\">\n                <ul>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Created Date</span>\n                        <p >{{eVersionDetail.createdOn |date :'EEEE, MMMM d, y'}}</p>\n                        \n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Title</span>\n                        <p>{{eVersionDetail.name}}</p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n                \n                <ul class=\"mt15\">\n                  \n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Created By</span>\n                        <p>{{eVersionDetail.createdByName}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>e-Version Type</span>\n                        <p>Document</p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n                \n                <ul class=\"mt15\">\n                  \n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Description</span>\n                        <p>{{eVersionDetail.description}}</p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n                \n                \n                \n              </div>\n              \n              \n            </div>\n          </div>\n        </div>\n        \n        \n        <div class=\"col s4\">\n          <div class=\"sprate-box pt0\">\n            <div class=\"cs-logs\">\n              <div class=\"cs-heading\">\n                <h2>e-Version Document</h2>\n              </div>\n              <div class=\"logs-outer padding0\">\n                <div class=\"cs-image\">\n                  \n                  <div *ngIf=\"eVersionDetail.files?.length == 0\" class=\"not-data mt15 padding0\">\n                    <div class=\"inner-data\">\n                      <p>Image not available</p>\n                    </div>\n                  </div>\n                  <div *ngIf=\"eVersionDetail.files?.length > 0\" class=\"vertical-img {{eVersionDetail.files.length == 2 ? 'double-img' : (eVersionDetail.files.length > 2 ? 'multiple-img' : '')}}\"class=\"vertical-img\">\n                    <ul>\n                      <li *ngFor=\"let expenseImage of eVersionDetail.files;let i=index\" class=\"overlay-content\" >\n                        <img *ngIf=\"expenseImage.extension=='.pdf'\" src=\"assets/img/pdf.png\">\n                        <img *ngIf=\"expenseImage.extension!='.pdf'\" src=\"{{api+expenseImage.documentId+'/'+'2'}}\">\n                        <a class=\"close dowload\" matRipple matTooltip=\"Download Bill\" href=\"{{api+expenseImage.documentId+'/'+'2'}}\" ><i class=\"material-icons\">cloud_download</i></a>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"h100\"></div>\n  \n  "

/***/ }),

/***/ "./src/app/pop_and_gift/eversion-detail/eversion-detail.component.scss":
/*!*****************************************************************************!*\
  !*** ./src/app/pop_and_gift/eversion-detail/eversion-detail.component.scss ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvcF9hbmRfZ2lmdC9ldmVyc2lvbi1kZXRhaWwvZXZlcnNpb24tZGV0YWlsLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/pop_and_gift/eversion-detail/eversion-detail.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/pop_and_gift/eversion-detail/eversion-detail.component.ts ***!
  \***************************************************************************/
/*! exports provided: EversionDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EversionDetailComponent", function() { return EversionDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");




var EversionDetailComponent = /** @class */ (function () {
    function EversionDetailComponent(service, route) {
        var _this = this;
        this.service = service;
        this.route = route;
        this.eVersionDetail = {};
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.eVersionId = params.id;
            // console.log(this.date ,"&" , this.expenseId);
            if (_this.eVersionId) {
                _this.getEversionDetail();
            }
        });
    }
    EversionDetailComponent.prototype.ngOnInit = function () {
    };
    EversionDetailComponent.prototype.getEversionDetail = function () {
        var _this = this;
        console.log("hello");
        this.service.fetchData({ id: this.eVersionId }, "eversion/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.eVersionDetail = result['data'][0];
                _this.url = _this.service.dburl;
                _this.requestfn = 'download/document/';
                _this.api = _this.url + _this.requestfn;
            }
        });
    };
    EversionDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-eversion-detail',
            template: __webpack_require__(/*! ./eversion-detail.component.html */ "./src/app/pop_and_gift/eversion-detail/eversion-detail.component.html"),
            styles: [__webpack_require__(/*! ./eversion-detail.component.scss */ "./src/app/pop_and_gift/eversion-detail/eversion-detail.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]])
    ], EversionDetailComponent);
    return EversionDetailComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift/gift-deatil/gift-deatil.component.html":
/*!*********************************************************************!*\
  !*** ./src/app/pop_and_gift/gift-deatil/gift-deatil.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/gift-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{giftdata.name}}</h2>\n        <p class=\"light\">{{giftdata.description}}</p>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s8 pr10\">\n          <div class=\"sprate-box pt0\">\n            <div class=\"cs-heading\">\n              <h2>Gift Detail</h2>\n              <a *ngIf=\"this.role==1\" class=\"edit-icon\" mat-button matTooltip=\"Edit Info\" (click)=\"openDialog('requiredfield')\"><i class=\"material-icons\">create</i></a>\n            </div>\n            <div class=\"details-thumbnail\">\n              <div class=\"row mb10\">\n                <div class=\"col s4 pl0\">\n                  <div class=\"detail-field\">\n                    <span>Name</span>\n                    <p>{{giftdata.name}}</p>\n                  </div>\n                </div>\n                <!-- <div class=\"col s4 \">\n                  <div class=\"detail-field\">\n                    <span>Quantity</span>\n                    <p>{{giftdata.quantity}}</p>\n                  </div>\n                </div> -->\n                <div class=\"col s4 pr0\">\n                  <div class=\"detail-field\">\n                    <span>Points</span>\n                    <p>{{giftdata.redeem}}</p>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col s12 padding0\">\n                  <div class=\"detail-field\">\n                    <span>Description</span>\n                    <p>{{giftdata.description}}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \n          \n          \n          <div class=\"sprate-box pt0 mt15\">\n            <div class=\"cs-heading\">\n              <h2>Additonal Fields</h2>\n              <a *ngIf=\"this.role==1\" class=\"edit-icon\" mat-button matTooltip=\"Edit Info\" (click)=\"openDialog('extrafield')\"><i class=\"material-icons\">create</i></a>\n            </div>\n            <div class=\"from-fields\" >\n              <div *ngIf=\"giftdata.aditionalField1Label || giftdata.aditionalField2Label || giftdata.aditionalField3Label || giftdata.aditionalField4Label\" class=\"details-thumbnail\">\n                <div  class=\"row mb0\">\n                  <div class=\"col s4 pl0\">\n                    <p class=\"cs-lable\">Labels</p>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <p class=\"cs-lable\">Values</p>\n                  </div>\n                </div>\n\n\n                <div *ngIf=\"giftdata.aditionalField1Label\" class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"detail-field\">\n                      <p>{{giftdata.aditionalField1Label}}</p>\n                    </div>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <div class=\"detail-field\">\n                      <p>{{giftdata.aditionalField1Value}}</p>\n                    </div>\n                  </div>\n                </div>\n                <!-- </div> -->\n                <div *ngIf=\"giftdata.aditionalField2Label\" class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"detail-field\">\n                      <p>{{giftdata.aditionalField2Label}}</p>\n                    </div>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <div class=\"detail-field\">\n                      <p>{{giftdata.aditionalField2Value}}</p>\n                    </div>\n                  </div>\n                </div>\n                <div *ngIf=\"giftdata.aditionalField3Label\" class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"detail-field\">\n                      <p>{{giftdata.aditionalField3Label}}</p>\n                    </div>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <div class=\"detail-field\">\n                      <p>{{giftdata.aditionalField3Value}}</p>\n                    </div>\n                  </div>\n                </div>\n                <div *ngIf=\"giftdata.aditionalField4Label\" class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"detail-field\">\n                      <p>{{giftdata.aditionalField4Label}}</p>\n                    </div>\n                  </div>\n                  <div class=\"col s8 pr0\">\n                    <div class=\"detail-field\">\n                      <p>{{giftdata.aditionalField4Value}}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        \n        <div class=\"col s4\">\n          <div class=\"sprate-box pt0\">\n            <div class=\"cs-logs\">\n              <div class=\"cs-heading\">\n                <h2>GIFT IMAGES</h2>\n                <label *ngIf=\"this.role==1\" >\n                  <input type=\"file\" (change)=\"insertImage($event)\" style=\"display: none;\">\n                  Add Image\n                </label>\n              </div>\n              <div class=\"logs-outer padding0\">\n                <div class=\"cs-image\">\n                  <div class=\"vertical-img {{giftdata.documents?.length == 2 ? 'double-img' : (giftdata.documents?.length > 2 ? 'multiple-img' : '')}}\">\n                    <ul>\n                      <li class=\"overlay-content\" *ngFor=\"let giftImg of giftdata.documents;let i=index\">\n                        <img src=\"{{api+giftImg.documentId+'/'+'1'}}\">\n                        <div class=\"tittle\">\n                          <p>{{ giftImg.documentName}}</p>\n                        </div>\n                        <a *ngIf=\"this.role==1\" class=\"close\" matRipple matTooltip=\"Delete\" (click)=\"deleteimg(giftImg.documentId,giftImg.fileName)\"><i class=\"material-icons\">delete_sweep</i></a>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>    \n      </div>\n    </div>\n  </div>\n  \n  <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/pop_and_gift/gift-deatil/gift-deatil.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/pop_and_gift/gift-deatil/gift-deatil.component.ts ***!
  \*******************************************************************/
/*! exports provided: GiftDeatilComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GiftDeatilComponent", function() { return GiftDeatilComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _gift_modal_gift_modal_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../gift-modal/gift-modal.component */ "./src/app/pop_and_gift/gift-modal/gift-modal.component.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");









var GiftDeatilComponent = /** @class */ (function () {
    function GiftDeatilComponent(db, user, router, toast, route, dialog, msg) {
        this.db = db;
        this.user = user;
        this.router = router;
        this.toast = toast;
        this.route = route;
        this.dialog = dialog;
        this.msg = msg;
        this.giftdata = {};
        this.gift_form = {};
        this.userdata = [];
        this.action = 1;
        this.selectedFile = [];
        this.giftpicdata = {};
        this.urls = [];
        this.picvalue = [];
    }
    GiftDeatilComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
        // this.giftdetail();
        // this.loader=true;
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            if (_this.id) {
                _this.giftdetail();
            }
            else {
            }
        });
    };
    GiftDeatilComponent.prototype.insertImage = function (data) {
        var _this = this;
        this.selectedFile = [];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        setTimeout(function () {
            _this.Insert_Image();
        }, 500);
    };
    GiftDeatilComponent.prototype.Insert_Image = function () {
        var _this = this;
        this.giftdata = new FormData;
        this.giftdata.action = this.action;
        this.giftdata.binaryData = this.urls[this.urls.length - 1];
        this.giftdata.documentType = 3;
        this.giftdata.documentName = this.name;
        console.log(this.giftdata.documentName);
        this.giftdata.referenceId = this.id;
        for (var i = 0; i < this.selectedFile.length; i++) {
            this.giftdata.fileName = "image" + i + ".jpg", this.selectedFile[i];
        }
        console.log(this.giftdata);
        var value = [];
        value[0] = this.giftdata;
        console.log(value);
        this.loader = true;
        this.db.fetchData(value, "document/update").subscribe(function (resp) {
            console.log(resp);
            if (resp) {
                _this.giftdetail();
                _this.toast.openSucess('Image Added Sucessfully', '');
                _this.loader = false;
            }
        });
    };
    GiftDeatilComponent.prototype.deleteimg = function (picid, filename) {
        var _this = this;
        console.log(picid, filename);
        this.giftpicdata.documentId = picid;
        this.giftpicdata.action = 2;
        this.giftpicdata.fileName = filename;
        this.giftpicdata.documentType = 3;
        this.giftpicdata.referenceId = this.id;
        this.picvalue.push(this.giftpicdata);
        console.log(this.picvalue);
        this.msge = "Image";
        this.msg.delete(this.msge).then(function (result) {
            console.log(result);
            if (result) {
                _this.loader = true;
                _this.db.fetchData(_this.picvalue, "document/update").subscribe(function (resp) {
                    console.log(resp);
                    if (resp) {
                        _this.toast.openSucess('Image Deleted Sucessfully', '');
                        _this.loader = false;
                        _this.giftdetail();
                        _this.picvalue = [];
                    }
                });
            }
        });
    };
    GiftDeatilComponent.prototype.giftdetail = function () {
        var _this = this;
        console.log(this.id);
        ;
        console.log("avlok");
        this.loader = true;
        this.db.fileData(this.id, "pop/detail/").subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.giftdata = response['data'];
            _this.name = _this.giftdata['name'];
            console.log(_this.giftdata);
            _this.url = _this.db.dburl;
            _this.request = 'download/document/';
            _this.api = _this.url + _this.request;
        });
    };
    GiftDeatilComponent.prototype.openDialog = function (check) {
        var _this = this;
        console.log(check);
        this.giftdata.check = check;
        var dialogRef = this.dialog.open(_gift_modal_gift_modal_component__WEBPACK_IMPORTED_MODULE_7__["GiftModalComponent"], {
            width: '700px',
            data: this.giftdata
        });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.giftdetail();
            console.log('The dialog was closed');
        });
    };
    GiftDeatilComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-gift-deatil',
            template: __webpack_require__(/*! ./gift-deatil.component.html */ "./src/app/pop_and_gift/gift-deatil/gift-deatil.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _local_storage_service__WEBPACK_IMPORTED_MODULE_8__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], GiftDeatilComponent);
    return GiftDeatilComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift/gift-list/gift-list.component.html":
/*!*****************************************************************!*\
  !*** ./src/app/pop_and_gift/gift-list/gift-list.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/gift.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>{{isTabActive==1?'Pop & Gift':'E-version'}}</h2>\n        <p>Total {{isTabActive==1?'Pop & Gift':'E-version'}} : {{isTabActive==1 ? gifts.length : eversionList.length}}</p>\n      </div>\n    </div>\n    \n    \n    <div class=\"left-auto\">\n      <div class=\"filter-container\" *ngIf=\"filter.gift\">\n        <div (click)=\"clearfilter()\" class=\"filter-btn\">\n          <button mat-button >CLEAR FILTER</button>\n        </div>\n      </div>\n      <div class=\"tabs right-tab\">\n        <ul>\n          <li (click)=\"isTabActive=1\"><a [ngClass]=\"{'active': isTabActive==1}\" >Pop & Gift</a></li>\n          <li (click)=\"isTabActive=2; eVersionList()\"><a [ngClass]=\"{'active': isTabActive==2}\" >E-Version</a></li>\n          <!-- <li (click)=\"isTabActive=3\"><a [ngClass]=\"{'active': isTabActive==3}\">E-Version</a></li> -->\n          <!-- <li (click)=\"downloadPriceList()\"><a>Download Price List</a></li> -->\n        </ul>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div *ngIf=\"isTabActive==1\" class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th class=\"w200\">Gift Name</th>\n                    <th class=\"w200 text-center\">Redeem Points</th>\n                    <th class=\"w200\">Image</th>\n                    <th *ngIf=\"userType!=3\">Description</th>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-head bdrt\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th  class=\"w200\">\n                      <div class=\"th-search-acmt\" [ngClass]=\"{ 'clear-feilds' : removegift == true}\">\n                        <mat-form-field>\n                          <input type=\"text\"  name=\"gift\" [(ngModel)]=\"filter.gift\" (ngModelChange)=\"name_list()\" matInput [matAutocomplete]=\"auto1\">\n                          <mat-autocomplete #auto1=\"matAutocomplete\" >\n                            <mat-option *ngFor=\"let gift of giftlist1\" (click)=\"giftFilter()\" value=\"{{gift.name}}\">{{gift.name}}</mat-option>\n                          </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removegiftfilter()\"><i class=\"material-icons\">clear</i></a>\n                        </mat-form-field> \n                      </div>\n                    </th>\n                    <th class=\"w200\">&nbsp;</th>\n                    <th class=\"w200\">&nbsp;</th>\n                    <th *ngIf=\"userType!=3\">&nbsp;</th>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table class=\"sno-border\">\n                  <tr *ngFor=\"let gift of gifts;let i=index\">\n                    <td class=\"w30\">{{i+1}}</td>\n                    <td class=\"w200\"><a class=\"link-btn\" mat-button routerLink=\"/gift-deatil/{{gift.popId}}\" routerLinkActive=\"active\">{{gift.name}}</a></td>\n                    <td class=\"w200 text-center\">{{gift.redeem}}</td>\n                    <td class=\"w200\">\n                      <div class=\"tags\">\n                        <ul>\n                          <li *ngFor=\"let doc of gift.documents;let j=index\">\n                            <img src=\"{{api+doc.documentId+'/'+'1'}}\" class=\"wp100 h70\">\n                          </li>\n                        </ul>\n                      </div>\n                    </td>\n                    <td *ngIf=\"userType!=3\">{{gift.description}}\n                      <div class=\"action-btns\">\n                        <button *ngIf=\"userRole==1\" mat-button class=\"delete\" (click)=\"deletePop(gift.popId)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                      </div>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      \n      \n      \n      <div *ngIf=\"isTabActive==2\" class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th class=\"w170\">Date</th>\n                    <th class=\"w250\">Tittle</th>\n                    <th class=\"w180\">Created By</th>\n                    <th class=\"w250\">Description</th>\n                    <th>Link</th>\n                  </tr>\n                </table>\n              </div>\n              <!-- <div class=\"table-head bdrt\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th class=\"w110\">&nbsp;</th>\n                    <th  class=\"w250\">\n                      <div class=\"th-search-acmt\">\n                        <mat-form-field>\n                          <input type=\"text\" matInput [matAutocomplete]=\"auto1\">\n                          <mat-autocomplete #auto1=\"matAutocomplete\" >\n                            <mat-option  value=\"1\">Tittle 1</mat-option>\n                            <mat-option  value=\"1\">Tittle 1</mat-option>\n                          </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removegiftfilter()\"><i class=\"material-icons\">clear</i></a>\n                        </mat-form-field> \n                      </div>\n                    </th>\n                    <th>&nbsp;</th>\n                  </tr>\n                </table>\n              </div> -->\n            </div>\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table class=\"sno-border\">\n                  <tr *ngFor=\"let eVersion of eversionList;let i=index\">\n                    <td class=\"w30\">{{i+1}}</td>\n                    <td class=\"w170\">{{eVersion.createdOn | date :'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w250\">\n                        <a *ngIf=\"eVersion.mediaType==1\" class=\"link-btn\" mat-button routerLink=\"/eversion-detail/{{eVersion.id}}\" routerLinkActive=\"active\">{{eVersion.name}}</a>\n                        <a *ngIf=\"eVersion.mediaType==2\" >{{eVersion.name}}</a></td>\n                    <td class=\"w180\">{{eVersion.createdByName}}</td>\n                    <td class=\"w250\">{{eVersion.description}}</td>\n                    <td *ngIf=\"eVersion.mediaType==1\">{{eVersion.files.length}}</td>\n                    <td  *ngIf=\"eVersion.mediaType==2\"><a class=\"link-btn\" target=\"blank\" href=\"{{eVersion.urlLink}}\" >{{eVersion.urlLink}}</a></td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n\n\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n\n    <div *ngIf=\"div\" class=\"data-not-available\" >\n      <div class=\"outer\">\n        <div class=\"iinear\">\n          <div class=\"figure\" matRipple>\n            <div class=\"header\">\n              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n            </div>\n            \n            <div class=\"description\">\n              \n              <div class=\"img\">\n                <i class=\"material-icons\">error_outline</i>\n              </div>\n              <div class=\"psc\">\n                <p>data not available</p>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"fixed-multibtn-botm\" *ngIf=\"user.data.userType==1 && user.data.superAdmin && isTabActive == 1\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" routerLink=\"/pop_and_gift\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n\n  \n  <div *ngIf=\"user.data.userType==1 && user.data.superAdmin && isTabActive == 2\" class=\"fixed-multibtn-botm\" style=\"right: 80px;\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" (click)=\"openDialogone()\" matRipple><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n\n  <div  *ngIf=\"isTabActive == 2\" class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Download Price Sheet\" matRipple (click)=\"downloadPriceList()\"><i class=\"material-icons\">cloud_download</i></a></li>\n    </ul>\n  </div>\n\n</div>"

/***/ }),

/***/ "./src/app/pop_and_gift/gift-list/gift-list.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/pop_and_gift/gift-list/gift-list.component.ts ***!
  \***************************************************************/
/*! exports provided: GiftListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GiftListComponent", function() { return GiftListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _video_modal_video_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../video-modal/video-modal.component */ "./src/app/pop_and_gift/video-modal/video-modal.component.ts");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_7__);








var GiftListComponent = /** @class */ (function () {
    function GiftListComponent(db, dialog, dialogs) {
        this.db = db;
        this.dialog = dialog;
        this.dialogs = dialogs;
        this.giftlist = {};
        this.giftlist1 = [];
        this.gifts = [];
        this.removegift = false;
        this.filter = {};
        this.div = false;
        this.user = {};
        this.eversionList = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        this.userName = this.user.data.userName;
        this.loader = true;
        this.giftList({ "currentPage": 1, "pageSize": 50 });
    }
    GiftListComponent.prototype.ngOnInit = function () {
        this.isTabActive = 1;
    };
    GiftListComponent.prototype.eVersionList = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ "currentPage": 1,
            "pageSize": 100,
            "totalRecords": 100 }, 'eversion/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.eversionList = response['data'];
            }
        });
    };
    GiftListComponent.prototype.openDialogone = function () {
        var dialogRef = this.dialogs.open(_video_modal_video_modal_component__WEBPACK_IMPORTED_MODULE_6__["VideoModalComponent"], {
            width: '850px',
            data: {}
        });
        dialogRef.afterClosed().subscribe(function (result) {
        });
    };
    GiftListComponent.prototype.clearfilter = function () {
        this.filter = {};
        this.giftList({ "currentPage": 1, "pageSize": 50 });
        this.removegift = false;
    };
    GiftListComponent.prototype.giftList = function (val) {
        var _this = this;
        this.db.fetchData(val, 'pop/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.giftlist = response;
            if (response['status'] == 'Success') {
                _this.giftlist = response;
                _this.gifts = _this.giftlist.data;
            }
            if (response['status'] == 'Failed') {
                _this.div = true;
                _this.giftlist = [];
            }
            // this.gifts=this.giftlist.data;
            _this.url = _this.db.dburl;
            _this.request = 'download/document/';
            _this.api = _this.url + _this.request;
            console.log(_this.api);
            console.log(_this.gifts);
        });
    };
    GiftListComponent.prototype.name_list = function () {
        var _this = this;
        console.log('hello');
        this.db.fetchData({ "name": this.filter.gift, }, 'pop/list/').subscribe(function (response) {
            console.log(response);
            _this.giftlist1 = response['data'];
        });
    };
    GiftListComponent.prototype.giftFilter = function () {
        this.giftList({ "name": this.filter.gift, });
        this.removegift = true;
    };
    GiftListComponent.prototype.removegiftfilter = function () {
        this.filter.gift = '';
        this.giftList({ "currentPage": 1,
            "pageSize": 50 });
        this.removegift = false;
        console.log(this.filter.gift);
    };
    GiftListComponent.prototype.deletePop = function (id) {
        var _this = this;
        this.dialog.delete('Pop & Gift !').then(function (result) {
            if (result) {
                console.log(id);
                _this.db.fileData("", "pop/delete/" + id).subscribe(function (result) {
                    console.log(result);
                    if (result['status'] == "Success") {
                        _this.giftList({ "currentPage": 1, "pageSize": 50 });
                    }
                });
            }
        });
    };
    GiftListComponent.prototype.downloadPriceList = function () {
        var _this = this;
        console.log("pricelist");
        this.dialog.downloadConfirm("Price List").then(function (result) {
            console.log(result);
            if (result) {
                console.log("function");
                _this.loader = true;
                setTimeout(function () {
                    _this.db.downloadProductData({}, 'price/list').subscribe(function (result) {
                        _this.loader = false;
                        Object(file_saver__WEBPACK_IMPORTED_MODULE_7__["saveAs"])(result, 'Price List.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                    });
                }, 1000);
            }
        });
    };
    GiftListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-gift-list',
            template: __webpack_require__(/*! ./gift-list.component.html */ "./src/app/pop_and_gift/gift-list/gift-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]])
    ], GiftListComponent);
    return GiftListComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift/gift-modal/gift-modal.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/pop_and_gift/gift-modal/gift-modal.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\" *ngIf=\"extraData.check=='extrafield'\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div mat-dialog-content>\n    <p class=\"heading\">Update Fields</p>\n    <div class=\"from-fields\" >\n        <div class=\"row mb0 mt15\">\n            <div class=\"col s4\">\n              <p class=\"cs-lable\">Labels</p>\n            </div>\n            <div class=\"col s8\">\n              <p class=\"cs-lable\">Values</p>\n            </div>\n          </div>\n      <div class=\"row mb0\">\n        <div class=\"col s4\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr\">\n              <input matInput  name=\"label1\" placeholder =\"Label 1\" [(ngModel)]=\"extraData.aditionalField1Label\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s8\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr\">\n              <input matInput  name=\"value1\" placeholder =\"Value\" [(ngModel)]=\"extraData.aditionalField1Value\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb0\">\n        <div class=\"col s4\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput  name=\"label2\" placeholder =\"Label 2\" [(ngModel)]=\"extraData.aditionalField2Label\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s8\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput name=\"value2\" placeholder =\"Value\" [(ngModel)]=\"extraData.aditionalField2Value\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb0\">\n        <div class=\"col s4\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput name=\"label3\" placeholder =\"Label 3\" [(ngModel)]=\"extraData.aditionalField3Label\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s8\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput  name=\"value3\" placeholder =\"Value\" [(ngModel)]=\"extraData.aditionalField3Value\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb0\">\n        <div class=\"col s4\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput  name=\"label4\" placeholder =\"Label 4\" [(ngModel)]=\"extraData.aditionalField4Label\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s8\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput name=\"Value4\" placeholder =\"Value\" [(ngModel)]=\"extraData.aditionalField4Value\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\">Cancel</button>\n    <button mat-raised-button color=\"accent\" (click)=\"update_detail()\">Save</button>\n  </div>\n</div>\n<div class=\"edit-modal\" *ngIf=\"extraData.check=='requiredfield'\">\n  <div *ngIf=\"loader\">\n    <mat-spinner  class=\"loader\"></mat-spinner>\n  </div>\n  <div class=\"cs-heading\">\n    <p class=\"heading\"> Update Pop And Gift</p>\n  </div>\n  <form name=\"form\" (ngSubmit)=\"f.form.valid && update_detail()\" #f=\"ngForm\" novalidate>\n    <div class=\"from-fields\" >\n      <div class=\"row\">\n        <div class=\"col s4 pr0\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput placeholder=\"NAME\" name=\"name\" [(ngModel)]=\"extraData.name\" #name=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && name.invalid }\" required>\n            </mat-form-field>\n            <mat-error *ngIf=\"f.submitted && name.invalid\" class=\"invalid-feedback\">\n              <mat-error *ngIf=\"name.errors.required\">Name is required</mat-error>\n            </mat-error>\n          </div>\n        </div>\n        <div class=\"col s4 pr0\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput placeholder=\"Qty\" name=\"quantity\" [(ngModel)]=\"extraData.quantity\" #quantity=\"ngModel\" (keypress)=\"MobileNumber($event)\" [ngClass]=\"{ 'is-invalid': f.submitted && quantity.invalid }\" required>\n            </mat-form-field>\n            <mat-error *ngIf=\"f.submitted && quantity.invalid\" class=\"invalid-feedback\">\n              <mat-error *ngIf=\"quantity.errors.required\">Quantity is required</mat-error>\n            </mat-error>\n          </div>\n        </div>\n        <div class=\"col s4 pr0\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput placeholder=\"Points\" name=\"redeem\" [(ngModel)]=\"extraData.redeem\" (keypress)=\"MobileNumber($event)\">\n            </mat-form-field>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"from-fields\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input wp100 h-input\">\n              <textarea matInput placeholder=\"Description\"  name=\"description\" [(ngModel)]=\"extraData.description\"  #description=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && description.invalid }\" required></textarea>\n            </mat-form-field>\n            <mat-error *ngIf=\"f.submitted && description.invalid\" class=\"invalid-feedback\">\n              <mat-error *ngIf=\"description.errors.required\">Description is required</mat-error>\n            </mat-error>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-raised-button color=\"warn\"  [mat-dialog-close]='false'>Cancel</button>\n      <button mat-raised-button color=\"accent\" style=\"color: #fff;\"  >Save</button>\n    </div>\n  </form>\n</div>\n"

/***/ }),

/***/ "./src/app/pop_and_gift/gift-modal/gift-modal.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/pop_and_gift/gift-modal/gift-modal.component.ts ***!
  \*****************************************************************/
/*! exports provided: GiftModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GiftModalComponent", function() { return GiftModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");






var GiftModalComponent = /** @class */ (function () {
    function GiftModalComponent(router, dialogRef, data, db, toast) {
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.toast = toast;
        this.extraData = {};
        this.doc = [];
        console.log(data);
        this.extraData = this.data;
    }
    GiftModalComponent.prototype.ngOnInit = function () {
    };
    GiftModalComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    GiftModalComponent.prototype.update_detail = function () {
        var _this = this;
        this.loader = true;
        console.log(this.extraData);
        if (this.extraData.check == 'extrafield') {
            this.db.fetchData(this.extraData, 'pop/update').subscribe(function (response) {
                console.log(response);
                _this.message = response['message'];
                _this.loader = false;
                if (_this.message == "PopGift updated successfully") {
                    _this.toast.openSucess('PopGift updated successfully', '');
                    // this.router.navigate(['/gift-list']) 
                }
                else {
                    _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                }
            });
        }
        else {
            this.db.fetchData(this.extraData, 'pop/update').subscribe(function (response) {
                console.log(response);
                _this.message = response['message'];
                _this.loader = false;
                if (_this.message == "PopGift updated successfully") {
                    _this.toast.openSucess('PopGift updated successfully', '');
                    // this.router.navigate(['/gift-list']) 
                }
                else {
                    _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                }
            });
        }
        this.dialogRef.close();
    };
    GiftModalComponent.prototype.onNoClick = function () {
        this.dialogRef.close();
        console.log(this.data);
    };
    GiftModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-gift-modal',
            template: __webpack_require__(/*! ./gift-modal.component.html */ "./src/app/pop_and_gift/gift-modal/gift-modal.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"]])
    ], GiftModalComponent);
    return GiftModalComponent;
}());



/***/ }),

/***/ "./src/app/pop_and_gift/video-modal/video-modal.component.html":
/*!*********************************************************************!*\
  !*** ./src/app/pop_and_gift/video-modal/video-modal.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\" >\n  <p class=\"heading\">Create E-version</p>\n  <div mat-dialog-content>\n    <div class=\"from-fields\">\n      <div class=\"row mt15\">\n        <div class=\"col s6\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr8\">\n              <input matInput [(ngModel)]=\"data.name\" name=\"title\" placeholder=\"Title\">\n            </mat-form-field>\n          </div>\n        </div>\n        \n        <div class=\"col s6\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr8\">\n              <mat-select [(ngModel)]=\"data.mediaType\" name=\"mediaType\" placeholder=\"Select\">\n                <mat-option [value]=1>Document</mat-option>\n                <mat-option [value]=2>Video Link</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      \n      <div *ngIf=\"data.mediaType==2\" class=\"row mb10\">\n        <div class=\"col s12\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr8\">\n              <input matInput [(ngModel)]=\"data.urlLink\" name=\"videoLink\" placeholder=\"Video Link\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr\">\n              <textarea matInput [(ngModel)]=\"data.description\" name=\"Description\" placeholder=\"Description\" class=\"h100\"></textarea>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      \n\n      <div  *ngIf=\"data.mediaType==1\"  class=\"row mt15\">\n        <div class=\"col s12\">\n          <div class=\"cs-file-multiple scroll\">\n            <ul>\n              <li class=\"w110 pr10\" *ngFor=\"let urlData of urls;let i=index\">\n                <label>\n                  <img *ngIf=\"selectedFile[i].type=='image/jpeg'\" src=\"{{urlData}}\">\n                 <img  *ngIf=\"selectedFile[i].type=='application/pdf'\" src=\"assets/img/pdf.png\">\n                  <a (click)=\"deleteimg(i)\" class=\"close\"><i class=\"material-icons\">delete_sweep</i></a>\n                </label>\n              </li>\n              <li class=\"w110 pr10\">\n                <div class=\"cs-file wp100\">\n                  <label>\n                    <input type=\"file\" (change)=\"insertImage($event)\" style=\"display:none;\" multiple>\n                    <i class=\"material-icons add-file-icon\" >add</i>\n                  </label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <!-- <div class=\"upload-excel mt5\">\n        <label>\n          <input (change)=\"insertImage($event)\" style=\"display: none;\" type=\"file\" multiple>\n          <div class=\"outer\">\n            <div class=\"innear\">\n              <i class=\"material-icons upload-ic\">cloud_upload</i>\n              <p>Add Document</p>\n            </div>\n          </div>\n        </label>\n        <p *ngIf=\"selectedFile && selectedFile[0]\">{{selectedFile[0].name}}</p>\n        <span class=\"file-format\">PDF format attactment</span>\n      </div>\n       -->\n    </div>\n  </div>\n  \n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\"  [mat-dialog-close]=\"false\" class=\"mr15\">Cancel</button>\n    <div >\n      <button mat-raised-button (click)=\"saveEversion()\" [mat-dialog-close]=\"true\" color=\"accent\">Save</button>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/pop_and_gift/video-modal/video-modal.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/pop_and_gift/video-modal/video-modal.component.ts ***!
  \*******************************************************************/
/*! exports provided: VideoModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VideoModalComponent", function() { return VideoModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");





var VideoModalComponent = /** @class */ (function () {
    function VideoModalComponent(db, toast, router) {
        this.db = db;
        this.toast = toast;
        this.router = router;
        this.data = {};
        this.urls = [];
        this.selectedFile = [];
        this.data.mediaType = 2;
    }
    VideoModalComponent.prototype.ngOnInit = function () {
    };
    VideoModalComponent.prototype.saveEversion = function () {
        var _this = this;
        // this.uploadBillAttechment()
        this.loader = true;
        this.db.fetchData(this.data, 'eversion/add').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.toast.openSucess('E-version Updated successfully', '');
                _this.uploadBillAttechment(response['data']);
            }
            _this.loader = false;
        });
    };
    VideoModalComponent.prototype.deleteimg = function (index) {
        this.urls.splice(index, 1);
        this.selectedFile.splice(index, 1);
    };
    VideoModalComponent.prototype.uploadBillAttechment = function (id) {
        var _this = this;
        var documentData = {};
        console.log(this.urls);
        var value = [];
        for (var j = 0; j < this.urls.length; j++) {
            documentData = new FormData;
            documentData['action'] = 1;
            documentData['binaryData'] = this.urls[j];
            documentData['documentType'] = 9;
            documentData['documentName'] = this.selectedFile[0].name;
            documentData['referenceId'] = id;
            if (this.selectedFile[j].type == 'application/pdf') {
                documentData['fileName'] = "document" + j + ".pdf", this.selectedFile[j];
            }
            else {
                documentData['fileName'] = "document" + j + ".jpg", this.selectedFile[j];
            }
            value.push(documentData);
            // this.loader=true;
        }
        this.data.file = value;
        console.log(this.data);
        this.loader = true;
        this.db.fetchData(value, 'document/update').subscribe(function (resp) {
            console.log(resp);
            if (resp['status'] == 'Success') {
                // this.router.navigate(['/gift-list']);
                _this.toast.openSucess('Document Added Sucessfully', '');
            }
        });
    };
    VideoModalComponent.prototype.insertImage = function (data) {
        var _this = this;
        console.log(this.selectedFile);
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        console.log(this.selectedFile);
    };
    VideoModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-video-modal',
            template: __webpack_require__(/*! ./video-modal.component.html */ "./src/app/pop_and_gift/video-modal/video-modal.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]])
    ], VideoModalComponent);
    return VideoModalComponent;
}());



/***/ }),

/***/ "./src/app/product/editmodel/editmodel.component.html":
/*!************************************************************!*\
  !*** ./src/app/product/editmodel/editmodel.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  \n  \n  <div mat-dialog-content >\n    <p class=\"heading\">Update Packing Information</p>\n    <div class=\"from-fields\">\n      <div class=\"col s12\">          \n        <div class=\"row\">\n          <div class=\"col s6\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <input matInput name=\"masterPacking\"  placeholder=\"masterPacking\" [(ngModel)]=\"extraData.masterPacking\">\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"col s6\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <input matInput  name=\"secondaryPacking\"  placeholder=\"secondaryPacking\" [(ngModel)]=\"extraData.secondaryPacking\">\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n    <button mat-raised-button color=\"accent\"[mat-dialog-close]=\"true\" (click)=\"update_detail()\">Save</button>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/product/editmodel/editmodel.component.scss":
/*!************************************************************!*\
  !*** ./src/app/product/editmodel/editmodel.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvZWRpdG1vZGVsL2VkaXRtb2RlbC5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/product/editmodel/editmodel.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/product/editmodel/editmodel.component.ts ***!
  \**********************************************************/
/*! exports provided: EditmodelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditmodelComponent", function() { return EditmodelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");





var EditmodelComponent = /** @class */ (function () {
    function EditmodelComponent(data, service, toast) {
        this.data = data;
        this.service = service;
        this.toast = toast;
        this.extraData = {};
        console.log(data);
        this.extraData = this.data;
        console.log(this.extraData);
    }
    EditmodelComponent.prototype.ngOnInit = function () {
    };
    EditmodelComponent.prototype.update_detail = function () {
        var _this = this;
        this.loader = true;
        this.service.fetchData(this.extraData, "product/update").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.toast.openSucess("Product Packing Detail", " Update SuccessFully");
            }
        });
    };
    EditmodelComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-editmodel',
            template: __webpack_require__(/*! ./editmodel.component.html */ "./src/app/product/editmodel/editmodel.component.html"),
            styles: [__webpack_require__(/*! ./editmodel.component.scss */ "./src/app/product/editmodel/editmodel.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"]])
    ], EditmodelComponent);
    return EditmodelComponent;
}());



/***/ }),

/***/ "./src/app/product/product-detail/product-detail.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/product/product-detail/product-detail.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  \n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  \n  \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/product-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{productdata.productName}}</h2>\n        <p class=\"light\">{{productdata.category}}</p>\n      </div>\n    </div>\n    <div class=\"top-pagination m-right-data \" *ngIf=\"role==1\">\n      <div class=\"detail-field w200\" style=\"background: #efefef;\">\n        <h2>Go Live</h2><mat-slide-toggle class=\"right-toggle\" [checked]=\"productdata.isLive\"  (change)=\"productLive(productdata.productId,$event)\" ></mat-slide-toggle>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer\">\n    <div class=\"container\">\n      \n      \n      <div class=\"row\">\n        \n        <div class=\"col s8 pr10\">\n          <div class=\"sprate-box pt0\">\n            <div class=\"cs-heading\">\n              <h2>PRODUCT DETAIL</h2>\n            </div>\n            <div class=\"details-thumbnail\">\n              <div class=\"row mb10\">\n                <div *ngIf=\"productdata.segment\" class=\"col s4 \">\n                  <div class=\"detail-field\">\n                    <span>Segment</span>\n                    <p>{{productdata.segment}}</p>\n                  </div>\n                </div>\n                <div *ngIf=\"productdata.subSegment\" class=\"col s4 \">\n                  <div class=\"detail-field\">\n                    <span>Sub Segment</span>\n                    <p>{{productdata.subSegment}}</p>\n                  </div>\n                </div>\n                <div *ngIf=\"productdata.category\" class=\"col s4 \">\n                  <div class=\"detail-field\">\n                    <span>Category</span>\n                    <p>{{productdata.category}}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"row mb10\">\n                \n                <div *ngIf=\"productdata.productName\" class=\"col s8 \">\n                  <div class=\"detail-field\">\n                    <span>Product Name</span>\n                    <p>{{productdata.productName}}</p>\n                  </div>\n                </div>\n                \n                <div *ngIf=\"productdata.oem\" class=\"col s4 \">\n                  <div class=\"detail-field\">\n                    <span>OEM</span>\n                    <p>{{productdata.oem}}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"row mb10\">\n                \n                <div *ngIf=\"productdata.model\" class=\"col s4\">\n                  <div class=\"detail-field\">\n                    <span>Model Description 1</span>\n                    <p>{{productdata.model}}</p>\n                  </div>\n                </div>\n                \n                <div *ngIf=\"productdata.model\" class=\"col s4\">\n                  <div class=\"detail-field\">\n                    <span>Model Description 2</span>\n                    <p>{{productdata.model}}</p>\n                  </div>\n                </div>\n                \n                <div *ngIf=\"productdata.size\" class=\"col s4 \">\n                  <div class=\"detail-field\">\n                    <span>Size</span>\n                    <p>{{productdata.size}}</p>\n                  </div>\n                </div>\n                \n              </div>\n              \n              \n              <div *ngIf=\"productdata.materialType\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Material Type</span>\n                  <p>{{productdata.materialType}}</p>\n                </div>\n              </div>\n              \n              \n              <div *ngIf=\"productdata.materialDescription1\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Material Description 1</span>\n                  <p>{{productdata.materialDescription1}}</p>\n                </div>\n              </div>\n              \n              \n              <div *ngIf=\"productdata.materialDescription2\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Material Description 2</span>\n                  <p>{{productdata.materialDescription2}}</p>\n                </div>\n              </div>\n              \n              \n              \n              <div *ngIf=\"productdata.materialDescription3\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Material Description 3</span>\n                  <p>{{productdata.materialDescription3}}</p>\n                </div>\n              </div>\n              \n              \n              <div *ngIf=\"productdata.materialDescription4\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Material Description 4</span>\n                  <p>{{productdata.materialDescription4}}</p>\n                </div>\n              </div>\n              \n              \n              <div *ngIf=\"productdata.partNumber\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Part No</span>\n                  <p>{{productdata.partNumber}}</p>\n                </div>\n              </div>\n              \n              \n              <div *ngIf=\"productdata.partDescription\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Part Description</span>\n                  <p>{{productdata.desc}}</p>\n                </div>\n              </div>\n              \n              \n              <div *ngIf=\"productdata.salesUnit\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Sales Unit</span>\n                  <p>{{productdata.salesUnit}}</p>\n                </div>\n              </div>\n              \n              \n              <div *ngIf=\"productdata.priceUnit\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Price Unit</span>\n                  <p>{{productdata.priceUnit}}</p>\n                </div>\n              </div>\n              \n              \n              <div *ngIf=\"productdata.mrp\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>MRP</span>\n                  <p>{{productdata.mrp}}</p>\n                </div>\n              </div>\n              \n              <div *ngIf=\"productdata.moq\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>MOQ</span>\n                  <p>{{productdata.moq}}</p>\n                </div>\n              </div>\n              \n              \n              <div *ngIf=\"productdata.gstPercentage\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>GST</span>\n                  <p>{{productdata.gstPercentage}}</p>\n                </div>\n              </div>\n              \n              \n              \n              <div *ngIf=\"productdata.hsnCode\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>HSN Code</span>\n                  <p>{{productdata.hsnCode}}</p>\n                </div>\n              </div>\n              \n              <div *ngIf=\"productdata.weightGross\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Weight Gross</span>\n                  <p>{{productdata.weightGross}}</p>\n                </div>\n              </div>\n              \n              <div *ngIf=\"productdata.weightUOM\" class=\"col s4 mb10\">\n                <div class=\"detail-field\">\n                  <span>Weight UOM</span>\n                  <p>{{productdata.weightUOM}}</p>\n                </div>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n        \n        \n        <div class=\"col s4\">\n          <div class=\"sprate-box pt0\">\n            <div class=\"cs-logs\">\n              <div class=\"cs-heading\">\n                <h2>PRODUCT IMAGES</h2>\n                <label *ngIf=\"this.role==1\">\n                  <input type=\"file\" (change)=\"insertImage($event)\" style=\"display: none;\">\n                  Add Image\n                </label>\n              </div>\n              <div class=\"logs-outer padding0\">\n                <div class=\"cs-image\">\n                  \n                  <div *ngIf=\"productdata.documents?.length == 0\" class=\"not-data mt15 padding0\">\n                    <div class=\"inner-data\">\n                      <p>Image not available</p>\n                    </div>\n                  </div>\n                  \n                  <div *ngIf=\"productdata.documents?.length > 0\" class=\"vertical-img {{productdata.documents.length == 2 ? 'double-img' : (productdata.documents.length > 2 ? 'multiple-img' : '')}}\">\n                    <ul>\n                      <li class=\"overlay-content\" *ngFor=\"let productImg of productdata.documents;let i=index\">\n                        <img src=\"{{api+productImg.documentId+'/'+'2'}}\">\n                        <div class=\"tittle\">\n                          <p>{{ productImg.documentName}}</p>\n                        </div>\n                        <a *ngIf=\"this.role==1\" class=\"close\" matRipple matTooltip=\"Delete\" (click)=\"deleteimg(productImg.documentId,productImg.fileName)\"><i class=\"material-icons\">delete_sweep</i></a>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        \n        \n        <div class=\"row  mt15\">\n          \n          <div  class=\"col s6 \">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>Specification Information</h2>\n                <a *ngIf=\"this.role==1\" class=\"edit-icon\" mat-button matTooltip=\"Edit Info\" (click)=\"openDialog('additonal')\"><i class=\"material-icons\">create</i></a>\n              </div>\n              <div  class=\"details-thumbnail\" *ngIf=\"productdata.productSpecification1 || productdata.productSpecification2 || productdata.productSpecification3 || productdata.productSpecification4 || productdata.productSpecification5\">\n                <div class=\"row mb10\">\n                  <div *ngIf=\"productdata.productSpecification1\" class=\"col s4 \">\n                    <div class=\"detail-field\">\n                      <!-- <span>Specification 1</span> -->\n                      <p>{{productdata.productSpecification1}}</p>\n                    </div>\n                  </div>\n                  <div *ngIf=\"productdata.productSpecification2\" class=\"col s4 \">\n                    <div class=\"detail-field\">\n                      <!-- <span>Specification 2</span> -->\n                      <p>{{productdata.productSpecification2}}</p>\n                    </div>\n                  </div>\n                  <div *ngIf=\"productdata.productSpecification3\" class=\"col s4 \">\n                    <div class=\"detail-field\">\n                      <!-- <span>Specification 3</span> -->\n                      <p>{{productdata.productSpecification3}}</p>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row mb10\">\n                  <div *ngIf=\"productdata.productSpecification4\" class=\"col s4 \">\n                    <div class=\"detail-field\">\n                      <!-- <span>Specification 4</span> -->\n                      <p>{{productdata.productSpecification4}}</p>\n                    </div>\n                  </div>\n                  <div *ngIf=\"productdata.productSpecification5\" class=\"col s4\">\n                    <div class=\"detail-field\">\n                      <!-- <span>Specification 5</span> -->\n                      <p>{{productdata.productSpecification5}}</p>\n                    </div>\n                  </div>\n                  <div class=\"col s4 empty\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"col s6 \">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>Additional Information</h2>\n                <a *ngIf=\"this.role==1\" class=\"edit-icon\" mat-button matTooltip=\"Edit Info\"  (click)=\"openDialog('specification')\"><i class=\"material-icons\">create</i></a>\n              </div>\n              <div class=\"from-fields\" >\n                <div class=\"details-thumbnail\" *ngIf=\"productdata.aditionalField1Label || productdata.aditionalField2Label || productdata.aditionalField3Label || productdata.aditionalField4Label\">\n                  <div class=\"row mb10\">\n                    <div class=\"col s6\">\n                      <p class=\"cs-label\">Labels</p>\n                    </div>\n                    <div class=\"col s6\">\n                      <p class=\"cs-label\">Values</p>\n                    </div>\n                  </div>\n                  <div *ngIf=\"productdata.aditionalField1Label\" class=\"row mb10\">\n                    \n                    <div  class=\"col s6\">\n                      <div class=\"detail-field\">\n                        <!-- <span>Label 1</span> -->\n                        <p>{{productdata.aditionalField1Label}}</p>\n                      </div>\n                    </div>\n                    \n                    <div class=\"col s6\">\n                      <div class=\"detail-field\">\n                        <!-- <span>Value 1</span> -->\n                        <p>{{productdata.aditionalField1Value}}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- </div> -->\n                  <div *ngIf=\"productdata.aditionalField2Label\" class=\"row mb10\" >\n                    <div  class=\"col s6\">\n                      <div class=\"detail-field\">\n                        <!-- <span>Label 2</span> -->\n                        <p>{{productdata.aditionalField2Label}}</p>\n                      </div>\n                    </div>\n                    <div class=\"col s6\">\n                      <div class=\"detail-field\">\n                        <!-- <span>Value 2</span> -->\n                        <p>{{productdata.aditionalField2Value}}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div *ngIf=\"productdata.aditionalField3Label\" class=\"row mb10\">\n                    <div  class=\"col s6\">\n                      <div class=\"detail-field\">\n                        <!-- <span>Label 3</span> -->\n                        <p>{{productdata.aditionalField3Label}}</p>\n                      </div>\n                    </div>\n                    <div class=\"col s6\">\n                      <div class=\"detail-field\">\n                        <!-- <span>Value 3</span> -->\n                        <p>{{productdata.aditionalField3Value}}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div *ngIf=\"productdata.aditionalField4Label\" class=\"row mb10\">\n                    <div  class=\"col s6\">\n                      <div class=\"detail-field\">\n                        <!-- <span>Label 4</span> -->\n                        <p>{{productdata.aditionalField4Label}}</p>\n                      </div>\n                    </div>\n                    <div class=\"col s6\">\n                      <div class=\"detail-field\">\n                        <!-- <span>Value 4</span> -->\n                        <p>{{productdata.aditionalField4Value}}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div> \n        \n        <div class=\"row  mt15\">\n          \n          <div  class=\"col s6 \">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>Packing Information</h2>\n                <a *ngIf=\"this.role==1\" class=\"edit-icon\" mat-button matTooltip=\"Edit Info\" (click)=\"openPackingDialog(productdata.productId,productdata.masterPacking,productdata.secondaryPacking)\"><i class=\"material-icons\">create</i></a>\n              </div>\n              <div  class=\"details-thumbnail\">\n                <div class=\"row mb10\">\n                  <div class=\"col s6 \">\n                    <div class=\"detail-field\">\n                      <p>{{productdata.masterPacking}}</p>\n                    </div>\n                  </div>\n                  <div class=\"col s6 \">\n                    <div class=\"detail-field\">\n                      <p>{{productdata.secondaryPacking}}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/product/product-detail/product-detail.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/product/product-detail/product-detail.component.ts ***!
  \********************************************************************/
/*! exports provided: ProductDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductDetailComponent", function() { return ProductDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _product_modal_product_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ..//product-modal/product-modal.component */ "./src/app/product/product-modal/product-modal.component.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var _editmodel_editmodel_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../editmodel/editmodel.component */ "./src/app/product/editmodel/editmodel.component.ts");











var ProductDetailComponent = /** @class */ (function () {
    function ProductDetailComponent(db, router, user, toast, route, dialog, msg) {
        this.db = db;
        this.router = router;
        this.user = user;
        this.toast = toast;
        this.route = route;
        this.dialog = dialog;
        this.msg = msg;
        this.product_detail = {};
        this.productdata = [];
        this.picdata = {};
        this.referenceId = this.id;
        this.userdata = [];
        this.action = "1";
        this.urls = [];
        this.picvalue = [];
    }
    ProductDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loader = true;
        this.userdata = this.user['user']['data'];
        this.role = parseInt(this.userdata['role']);
        console.log(this.role);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            if (_this.id) {
                _this.show_details();
            }
            else {
            }
        });
    };
    ProductDetailComponent.prototype.openDialog = function (check) {
        var _this = this;
        this.productdata.type = check;
        var dialogRef = this.dialog.open(_product_modal_product_modal_component__WEBPACK_IMPORTED_MODULE_6__["ProductModalComponent"], {
            width: '700px',
            data: this.productdata
        });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.show_details();
            console.log('The dialog was closed');
        });
    };
    ProductDetailComponent.prototype.insertImage = function (data) {
        var _this = this;
        this.selectedFile = [];
        var files = data.target.files;
        if (files) {
            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
                var file = files_1[_i];
                var reader = new FileReader();
                reader.onload = function (e) {
                    _this.urls.push(e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }
        console.log(this.urls);
        console.log(data.target.files.length);
        for (var i = 0; i < data.target.files.length; i++) {
            this.selectedFile.push(data.target.files[i]);
        }
        setTimeout(function () {
            _this.Insert_Image();
        }, 500);
    };
    ProductDetailComponent.prototype.Insert_Image = function () {
        var _this = this;
        this.productdata = new FormData;
        this.productdata.action = this.action;
        this.productdata.binaryData = this.urls[this.urls.length - 1];
        this.productdata.documentType = 1;
        this.productdata.documentName = this.name;
        this.productdata.referenceId = this.id;
        this.loader = true;
        for (var i = 0; i < this.selectedFile.length; i++) {
            this.productdata.fileName = "image" + i + ".jpg", this.selectedFile[i];
        }
        console.log(this.productdata);
        var value = [];
        value[0] = this.productdata;
        console.log(value);
        this.db.fetchData(value, "document/update").subscribe(function (resp) {
            console.log(resp);
            if (resp) {
                _this.loader = false;
                _this.show_details();
                _this.toast.openSucess('Image Added Sucessfully', '');
            }
        });
    };
    ProductDetailComponent.prototype.deleteimg = function (picid, filename) {
        var _this = this;
        console.log(picid, filename);
        this.picdata.documentId = picid;
        this.picdata.action = 2;
        this.picdata.fileName = filename;
        this.picdata.documentType = 1;
        this.picdata.referenceId = this.id;
        this.picvalue.push(this.picdata);
        console.log(this.picvalue);
        this.msge = "Your Pic";
        this.msg.delete(this.msge).then(function (result) {
            console.log(result);
            if (result) {
                _this.loader = true;
                _this.db.fetchData(_this.picvalue, "document/update").subscribe(function (resp) {
                    console.log(resp);
                    if (resp) {
                        _this.toast.openSucess('Image Deleted Sucessfully', '');
                        _this.loader = false;
                        _this.show_details();
                        _this.picvalue = [];
                    }
                });
            }
        });
    };
    ProductDetailComponent.prototype.show_details = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'product/detail/' + this.id).subscribe(function (response) {
            console.log(response);
            _this.product_detail = response;
            _this.productdata = _this.product_detail.data;
            // if(this.productdata.isLive==true){
            //   this.productdata.appStatus="Yes";
            // }
            // else{
            //   this.productdata.appStatus="No";
            // }
            _this.name = _this.productdata.productName;
            _this.url = _this.db.dburl;
            _this.requestfn = 'download/document/';
            _this.api = _this.url + _this.requestfn;
            console.log(_this.api);
            setTimeout(function () {
                _this.loader = false;
            }, 1000);
        }, function (error) {
            console.log(error);
        });
    };
    ProductDetailComponent.prototype.productLive = function (id, event) {
        var _this = this;
        console.log(this.productdata.isLive);
        if (this.productdata.isLive == true) {
            this.isLive = false;
        }
        if (this.productdata.isLive == false) {
            this.isLive = true;
        }
        console.log(id, event.checked);
        this.db.fetchData({ "productId": id, "isLive": this.isLive }, 'product/live').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.show_details();
                console.log("live");
                _this.toast.openSucess('Product Update Success', '');
            }
        });
    };
    ProductDetailComponent.prototype.openPackingDialog = function (productId, masterPacking, secondaryPacking) {
        var _this = this;
        var dialogRef = this.dialog.open(_editmodel_editmodel_component__WEBPACK_IMPORTED_MODULE_10__["EditmodelComponent"], {
            width: '700px',
            data: { productId: productId, masterPacking: masterPacking, secondaryPacking: secondaryPacking }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.show_details();
            console.log('The dialog was closed');
        });
    };
    ProductDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-product-detail',
            template: __webpack_require__(/*! ./product-detail.component.html */ "./src/app/product/product-detail/product-detail.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _local_storage_service__WEBPACK_IMPORTED_MODULE_9__["sessionStorage"], src_app_toast__WEBPACK_IMPORTED_MODULE_7__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], src_app_dialog__WEBPACK_IMPORTED_MODULE_8__["DialogComponent"]])
    ], ProductDetailComponent);
    return ProductDetailComponent;
}());



/***/ }),

/***/ "./src/app/product/product-list/product-list.component.html":
/*!******************************************************************!*\
  !*** ./src/app/product/product-list/product-list.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/product.svg\" class=\"h-icon\">\n      <div class=\"heading-text w250\">\n        <h2>Product</h2>\n        <p>Total Product: {{totalrecord}}</p>\n      </div>\n    </div>\n    \n    <div *ngIf=\"filter.segment || filter.subsegment || filter.category || filter.prod || filter.oem || filter.model || filter.partNumber || filter.live\" class=\"filter-container left-auto\">\n      <div (click)=\"clearfilter()\" class=\"filter-btn\">\n        <button mat-button >CLEAR FILTER</button>\n      </div>\n    </div>\n    \n    <!-- <div class=\"top-pagination\">\n      <ul>\n        <li class=\"refresh-area af-none\">\n          <a class=\"refresh-btn\" mat-raised-button matTooltip=\"Refresh\" (click)=\"refresh()\"><i class=\"material-icons\"> refresh</i></a>\n        </li>\n        <li><p>Pages {{pagenumber}} Of {{totalpage}}</p></li>\n        <li><button mat-button class=\"left-btn\" [disabled]=\"pagenumber == 1\" (click)=\"pagination(currentPage,pageSize)\"><i class=\"material-icons\">keyboard_arrow_left</i></button></li>\n        <li><input type=\"text\" placeholder=\"GO TO\" name=\"pagenumber\" (keyup.enter)=\"pagination(pageSize,((pagenumber*pageSize)-pageSize))\" [(ngModel)]=\"pagenumber\"></li>\n        <li><button mat-button class=\"right-btn\"  ng-disabled=\"true\" [disabled]=\"pagenumber == totalpage\" (click)=\"pagination((currentPage+1),pageSize)\"><i class=\"material-icons\">keyboard_arrow_right</i></button></li>\n      </ul>\n    </div> -->\n  </div>\n\n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            \n            <div class=\"sticky-head\">\n              <div class=\"table-head \">\n                <table>\n                  <tr>\n                    <th class=\"w90\">Segment</th>\n                    <th class=\"w180\">SubSegment</th>\n                    <th class=\"w130\">Category</th>\n                    <th >Product Name</th>\n                    <th class=\"w140\">OEM</th>\n                    <th class=\"w160\">Model</th>\n                    <th class=\"w110\">PartNo.</th>\n                    <th *ngIf=\"userRole==1\" class=\"w80\">Live</th>\n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-head bdrt \"  >\n                <table>\n                  <tr>\n                    <th class=\"w90\">\n                      <div class=\"th-search-acmt\" [ngClass]=\"{ 'clear-feilds' : removesegment == true}\">\n                        <div class=\"th-search\">\n                          <select #segment=\"ngModel\" name=\"segment\" [(ngModel)]=\"filter.segment\" (change)=\"filterChangeHandler('segment')\">\n                            <option value=\"\" selected>All</option>\n                            <option value=\"{{list.text}}\" *ngFor=\"let list of segmentlist\">{{list.text}}</option>\n                          </select>\n                        </div>\n                      </div>\n                    </th>\n                    \n\n                    <th class=\"w180\">\n                      <div class=\"th-search-acmt\"  [ngClass]=\"{ 'clear-feilds' : removesubsegment == true}\">\n                        <mat-form-field>\n                          <input type=\"text\"  name=\"subsegment\" [(ngModel)]=\"filter.subsegment\" (ngModelChange)=\"subsegment_list()\" matInput [matAutocomplete]=\"auto2\">\n                          <mat-autocomplete #auto2=\"matAutocomplete\" >\n                            <mat-option *ngFor=\"let subsegment of subsegmentlist; let i=index\"  (click)=\"filterChangeHandler('subsegment')\" value=\"{{subsegment.text}}\">{{subsegment.text}}</mat-option>\n                          </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removesubsegmentfilter()\"><i class=\"material-icons\">clear</i></a>\n                        </mat-form-field>\n                      </div>\n                    </th>\n\n                    <th class=\"w130\">\n                      <div class=\"th-search-acmt\"  [ngClass]=\"{ 'clear-feilds' : removecategory == true}\">\n                        <mat-form-field>\n                          <input type=\"text\" name=\"category\" [(ngModel)]=\"filter.category\" (ngModelChange)=\"category_list()\" matInput [matAutocomplete]=\"auto3\">\n                          <mat-autocomplete #auto3=\"matAutocomplete\" >\n                            <mat-option *ngFor=\"let category of categorylist; let i=index\"  (click)=\"filterChangeHandler('category')\" value=\"{{category.text}}\">{{category.text}}</mat-option>\n                          </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removecategoryfilter()\"><i class=\"material-icons\">clear</i></a>\n                        </mat-form-field>\n                      </div>\n                    </th>\n\n                    <th>\n                      <div class=\"th-search-acmt\"  [ngClass]=\"{ 'clear-feilds' : removeproductname == true}\">\n                        <mat-form-field>\n                          <input type=\"text\"  name=\"prod\" [(ngModel)]=\"filter.prod\" (ngModelChange)=\"productname_list()\" matInput [matAutocomplete]=\"auto4\">\n                          <mat-autocomplete #auto4=\"matAutocomplete\" >\n                            <mat-option *ngFor='let prod of prodlist'  (click)=\"filterChangeHandler('productName')\" value=\"{{prod.productName}}\">{{prod.productName}}</mat-option>\n                          </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removeproductnamefilter()\"><i class=\"material-icons\">clear</i></a>\n                        </mat-form-field>\n                      </div>\n                    </th>\n\n                    <th class=\"w140\">\n                      <div class=\"th-search-acmt\"  [ngClass]=\"{ 'clear-feilds' : removeoem==true}\">\n                        <mat-form-field>\n                          <input type=\"text\"   name=\"oem\"  [(ngModel)]=\"filter.oem\" (ngModelChange)=\"oem_list()\" matInput [matAutocomplete]=\"auto5\">\n                          <mat-autocomplete #auto5=\"matAutocomplete\" >\n                            <mat-option *ngFor='let oem of  oemlist'   (click)=\"filterChangeHandler('oem')\" value=\"{{oem.text}}\">{{oem.text}}</mat-option>\n                          </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removeoemfilter()\"><i class=\"material-icons\">clear</i></a>\n                        </mat-form-field>\n                      </div>\n                    </th>\n                    <th class=\"w160\">\n                      <div class=\"th-search-acmt\"  [ngClass]=\"{ 'clear-feilds' : removemodel== true}\">\n                        <mat-form-field>\n                          <input type=\"text\"   name=\"model\" [(ngModel)]=\"filter.model\" (ngModelChange)=\"model_list()\" matInput [matAutocomplete]=\"auto6\">\n                          <mat-autocomplete #auto6=\"matAutocomplete\" >\n                            <mat-option *ngFor='let model of  modellist'  (click)=\"filterChangeHandler('model')\" value=\"{{model.text}}\">{{model.text}}</mat-option>\n                          </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removemodelfilter()\"><i class=\"material-icons\">clear</i></a>\n                        </mat-form-field>\n                      </div>\n                    </th>\n                   \n                       <th class=\"w110\">\n\n                          <div class=\"th-search-acmt\"  [ngClass]=\"{ 'clear-feilds' : removepartnumber== true}\">\n                            <mat-form-field>\n                                    <input type=\"text\" name=\"partNumber\" [(ngModel)]=\"filter.partNumber\" (ngModelChange)=\"partNumberFilter()\" matInput [matAutocomplete]=\"auto7\">\n                                    <mat-autocomplete #auto7=\"matAutocomplete\" >\n                                        <mat-option *ngFor='let list of partNumberList'  (click)=\"filterChangeHandler('partNumber')\" value=\"{{list.partNumber}}\">{{list.partNumber}}</mat-option>\n                                    </mat-autocomplete>\n                                    <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removePartNumberFilter()\"><i class=\"material-icons\">clear</i></a>\n                            </mat-form-field>\n                          </div>\n                      </th>\n\n                      <th  *ngIf=\"userRole==1\" class=\"w80\">\n                          <div class=\"th-search\">\n                              <select #live=\"ngModel\" name=\"live\" [(ngModel)]=\"filter.live\" (change)=\"filterChangeHandler('live')\">\n                                    <option value=\"\" selected>Select Option</option>\n                                    <option [value]=\"true\">Yes</option>\n                                    <option [value]=\"false\">No</option>\n                              </select>\n                          </div>\n                      </th>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let product of data\">\n                    <td class=\"w90\">{{product.segment}}</td>\n                    <td class=\"w180\">{{product.subSegment}}</td>\n                    <td class=\"w130\">{{product.category}}</td>\n                    <td><a class=\"link-btn\" mat-button routerLink=\"/product-detail/{{product.productId}}\" routerLinkActive=\"active\" ><p>{{product.productName}}</p></a></td>\n                    <td class=\"w140\">{{product.oem}}</td>\n                    <td class=\"w160\"><p>{{product.model}}</p></td>\n                    <td class=\"w110\">{{product.partNumber}}</td>\n                    <td *ngIf=\"product.isLive==true && userRole==1\" class=\"w80 yes\">Yes</td>\n                    <td *ngIf=\"product.isLive==false && userRole==1\" class=\"w60 no\">No</td>\n                    \n                  </tr>\n                </table>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"data.length==0\" class=\"data-not-available\" >\n      <div class=\"outer\">\n        <div class=\"iinear\">\n          <div class=\"figure\" matRipple>\n            <div class=\"header\">\n              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n            </div>\n            <div class=\"description\">\n\n              <div class=\"img\">\n                  <i class=\"material-icons\">error_outline</i>\n              </div>\n                \n              <div class=\"cs-heading\">\n                <h2>Data Not Available</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div  class=\"fixed-multibtn-botm\">\n    <ul>\n      <li *ngIf=\"userdata['userType'] == '1'\"><a  matTooltip=\"Download Product Sheet\" matRipple (click)=\"downloadFile()\"><i class=\"material-icons\">cloud_download</i></a></li>\n    </ul>\n  </div>\n  \n  <div class=\"h100\"></div>\n</div>"

/***/ }),

/***/ "./src/app/product/product-list/product-list.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/product/product-list/product-list.component.ts ***!
  \****************************************************************/
/*! exports provided: ProductListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductListComponent", function() { return ProductListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");








var ProductListComponent = /** @class */ (function () {
    function ProductListComponent(db, user, toast, renderer, confirm) {
        this.db = db;
        this.user = user;
        this.toast = toast;
        this.renderer = renderer;
        this.confirm = confirm;
        this.productlist = [];
        this.segmentlist = [];
        this.subsegmentlist = [];
        this.categorylist = [];
        this.prodlist = [];
        this.modellist = [];
        this.oemlist = [];
        this.data = [];
        this.div = false;
        this.removesegment = false;
        this.removesubsegment = false;
        this.removecategory = false;
        this.removeproductname = false;
        this.removemodel = false;
        this.removeoem = false;
        this.filter = {};
        this.currentPage = 1;
        this.pageSize = 200;
        this.userdata = [];
        this.senddata = [];
        this.sgmnts = [];
        this.removepartnumber = false;
        this.userdata = this.user['user']['data'];
        if (this.userdata['userType'] == 3) {
            for (var i = 0; i < this.userdata['distributerNetwork']['networkSegments'].length; i++) {
                this.sgmnts.push(this.userdata['distributerNetwork']['networkSegments'][i]['segment']);
            }
            this.senddata = { "segments": this.sgmnts, "currentPage": this.currentPage, "pageSize": this.pageSize };
        }
        else if (this.userdata['userType'] == 2) {
            for (var i = 0; i < this.userdata['salesUser']['staffSegments'].length; i++) {
                this.sgmnts.push(this.userdata['salesUser']['staffSegments'][i]['segment']);
            }
            this.senddata = { "segments": this.sgmnts, "currentPage": this.currentPage, "pageSize": this.pageSize };
        }
        else {
            this.senddata = { "currentPage": this.currentPage, "pageSize": this.pageSize };
        }
        this.productList(this.senddata);
        this.userRole = this.userdata['role'];
        console.log(this.userRole);
    }
    ProductListComponent.prototype.ngOnInit = function () {
        this.disableFilter = true;
        this.enableFilter = false;
        this.segment_list();
    };
    ProductListComponent.prototype.filterbutton = function () {
        this.enableFilter = true;
        if (this.enableFilter == true) {
            this.disableFilter = false;
        }
        else {
            this.disableFilter = true;
        }
    };
    ProductListComponent.prototype.closefilter = function () {
        this.enableFilter = false;
        this.disableFilter = true;
        this.productList({ "currentPage": this.currentPage,
            "pageSize": this.pageSize });
        this.filter = '';
    };
    ProductListComponent.prototype.refresh = function () {
        this.productList({ "currentPage": this.currentPage,
            "pageSize": this.pageSize });
        this.toast.openSucess('List Refreshed Sucessfully', '');
    };
    ProductListComponent.prototype.downloadFile = function () {
        var _this = this;
        console.log("productlist");
        this.confirm.downloadConfirm("Product Data").then(function (result) {
            console.log(result);
            if (result) {
                console.log("function");
                _this.db.downloadProductData({}, 'pwnload').subscribe(function (result) {
                    Object(file_saver__WEBPACK_IMPORTED_MODULE_6__["saveAs"])(result, 'Product Data.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                });
            }
        });
    };
    ProductListComponent.prototype.downloadPriceList = function () {
        var _this = this;
        console.log("pricelist");
        this.confirm.downloadConfirm("Price List").then(function (result) {
            console.log(result);
            if (result) {
                console.log("function");
                _this.db.downloadProductData({}, 'price/list').subscribe(function (result) {
                    Object(file_saver__WEBPACK_IMPORTED_MODULE_6__["saveAs"])(result, 'Price List.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                });
            }
        });
    };
    ProductListComponent.prototype.segment_list = function () {
        var _this = this;
        console.log('hello');
        console.log(this.filter.segment);
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
            console.log(_this.segmentlist);
        });
    };
    ProductListComponent.prototype.getAllFilterData = function () {
        var apiFilterObject = {};
        apiFilterObject['currentPage'] = this.currentPage;
        apiFilterObject['pageSize'] = this.pageSize;
        for (var property in this.filter) {
            console.log(this.filter[property]);
            if (this.filter.hasOwnProperty(property) && this.filter[property]) {
                if (property == 'segment') {
                    apiFilterObject['segmentCode'] = this.filter[property];
                }
                if (property == 'subsegment') {
                    apiFilterObject['subSegmentCode'] = this.filter[property];
                }
                if (property == 'category') {
                    apiFilterObject['categoryCode'] = this.filter[property];
                }
                if (property == 'prod') {
                    apiFilterObject['productName'] = this.filter[property];
                }
                if (property == 'oem') {
                    apiFilterObject['oemCode'] = this.filter[property];
                }
                if (property == 'model') {
                    apiFilterObject['modelCode'] = this.filter[property];
                }
                if (property == 'partNumber') {
                    apiFilterObject['partNumberContains'] = this.filter[property];
                }
                if (property == 'partNumber') {
                    apiFilterObject['partNumberContains'] = this.filter[property];
                }
                if (property == 'live') {
                    apiFilterObject['isLive'] = this.filter[property];
                }
            }
        }
        return apiFilterObject;
    };
    ProductListComponent.prototype.filterChangeHandler = function (target) {
        var _this = this;
        var apiURLData = this.getAllFilterData();
        console.log(apiURLData);
        setTimeout(function () {
            _this.productList(apiURLData);
        }, 1000);
        if (target == 'subsegment') {
            this.removesubsegment = true;
        }
        if (target == 'category') {
            this.removecategory = true;
        }
        if (target == 'productName') {
            this.removeproductname = true;
        }
        if (target == 'oem') {
            this.removeoem = true;
        }
        if (target == 'model') {
            this.removemodel = true;
        }
        if (target == 'partNumber') {
            this.removepartnumber = true;
        }
    };
    ProductListComponent.prototype.partNumberFilter = function () {
        var _this = this;
        console.log(this.filter.partNumber);
        this.db.fetchData({ "currentPage": this.currentPage,
            "pageSize": this.pageSize, "partNumberContains": this.filter.partNumber }, 'product/list').subscribe(function (response) {
            _this.partNumberList = response['data'];
            console.log(_this.partNumberList);
        });
    };
    ProductListComponent.prototype.segmentFilter = function () {
        console.log(this.filter.segment);
        this.productList({ "currentPage": this.currentPage,
            "pageSize": this.pageSize, "segmentCode": this.filter.segment });
        this.removesegment = true;
    };
    ProductListComponent.prototype.removesegmentfilter = function () {
        this.filter.segment = '';
        this.productList({ "currentPage": this.currentPage,
            "pageSize": this.pageSize, "segmentCode": this.filter.segment, "subSegmentCode": this.filter.subsegment, "categoryCode": this.filter.category, "productName": this.filter.prod, "modelCode": this.filter.model, "oemCode": this.filter.oem });
        this.removesegment = false;
    };
    ProductListComponent.prototype.subsegment_list = function () {
        var _this = this;
        console.log(this.filter);
        this.db.fetchData({ "subSegment": this.filter.subsegment }, 'subsegment/list').subscribe(function (response) {
            _this.subsegmentlist = response['data'];
            console.log(_this.subsegmentlist);
        });
    };
    ProductListComponent.prototype.removesubsegmentfilter = function () {
        this.filter.subsegment = '';
        this.removesubsegment = false;
        this.filterChangeHandler('subsegment');
    };
    ProductListComponent.prototype.removecategoryfilter = function () {
        this.filter.category = '';
        this.removecategory = false;
        this.filterChangeHandler('category');
    };
    ProductListComponent.prototype.removeproductnamefilter = function () {
        this.filter.prod = '';
        this.removeproductname = false;
        this.filterChangeHandler('productName');
    };
    ProductListComponent.prototype.removeoemfilter = function () {
        this.filter.oem = '';
        this.removeoem = false;
        this.filterChangeHandler('oem');
    };
    ProductListComponent.prototype.removemodelfilter = function () {
        this.filter.model = '';
        this.removemodel = false;
        this.filterChangeHandler('model');
    };
    ProductListComponent.prototype.removePartNumberFilter = function () {
        this.filter.partNumber = '';
        this.filterChangeHandler('partNumber');
        this.removepartnumber = false;
    };
    ProductListComponent.prototype.clearfilter = function () {
        this.filter = {};
        console.log(this.filter);
        this.removesegment = false;
        this.removesubsegment = false;
        this.removecategory = false;
        this.removeproductname = false;
        this.removemodel = false;
        this.removeoem = false;
        this.filterChangeHandler('all');
    };
    ProductListComponent.prototype.productList = function (val) {
        var _this = this;
        this.loader = true;
        this.db.fetchData(val, 'product/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.productlist = response;
                _this.data = _this.productlist.data;
                _this.totalrecord = _this.productlist.recordsFound;
            }
            else {
                _this.div = true;
                _this.data = [];
                _this.productlist = response;
                _this.totalrecord = _this.productlist.recordsFound;
            }
        });
    };
    ProductListComponent.prototype.category_list = function () {
        var _this = this;
        this.db.fileData(this.filter.category, 'category/list/').subscribe(function (response) {
            _this.categorylist = response['data'];
            console.log(response);
        });
    };
    ProductListComponent.prototype.productname_list = function () {
        var _this = this;
        this.db.fetchData({ "currentPage": this.currentPage,
            "pageSize": this.pageSize, "productName": this.filter.prod }, 'product/list').subscribe(function (response) {
            console.log(response);
            var distinctProductNameArr = [];
            if (response['data']) {
                var _loop_1 = function (index) {
                    var indexExist = distinctProductNameArr.findIndex(function (row) { return row.productName == response['data'][index].productName; });
                    if (indexExist == -1) {
                        distinctProductNameArr.push({ productName: response['data'][index].productName });
                    }
                };
                for (var index = 0; index < response['data'].length; index++) {
                    _loop_1(index);
                }
            }
            _this.prodlist = distinctProductNameArr;
        });
    };
    ProductListComponent.prototype.model_list = function () {
        var _this = this;
        this.db.fileData(this.filter.model, 'model/list/').subscribe(function (response) {
            _this.modellist = response['data'];
            console.log(response);
            console.log(_this.modellist);
        });
    };
    ProductListComponent.prototype.oem_list = function () {
        var _this = this;
        this.db.fileData(this.filter.oem, 'oem/list/').subscribe(function (response) {
            _this.oemlist = response['data'];
            console.log(response);
        });
    };
    ProductListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-product-list',
            template: __webpack_require__(/*! ./product-list.component.html */ "./src/app/product/product-list/product-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _local_storage_service__WEBPACK_IMPORTED_MODULE_5__["sessionStorage"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], src_app_dialog__WEBPACK_IMPORTED_MODULE_7__["DialogComponent"]])
    ], ProductListComponent);
    return ProductListComponent;
}());



/***/ }),

/***/ "./src/app/product/product-modal/product-modal.component.html":
/*!********************************************************************!*\
  !*** ./src/app/product/product-modal/product-modal.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n\n\n  <div mat-dialog-content *ngIf=\"data.type=='additonal'\">\n  <p class=\"heading\">Update Specification Information</p>\n  <div class=\"from-fields\">\n    <div class=\"col s12\">          \n    <div class=\"row\">\n      <div class=\"col s4\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <input matInput name=\"productSpecification1\" [(ngModel)]=\"extraData.productSpecification1\" placeholder=\"Specification 1\">\n              </mat-form-field>\n            </div>\n      </div>\n      <div class=\"col s4\">\n        <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput  name=\"productSpecification2\" [(ngModel)]=\"extraData.productSpecification2\" placeholder=\"Specification 2\">\n            </mat-form-field>\n          </div>\n      </div>\n      <div class=\"col s4\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <input matInput  name=\"productSpecification3\" [(ngModel)]=\"extraData.productSpecification3\" placeholder=\"Specification 3\">\n              </mat-form-field>\n            </div>\n      </div>\n    </div>\n    \n    <div class=\"row mb20\">\n      <div class=\"col s4\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <input matInput   name=\"productSpecification4\" [(ngModel)]=\"extraData.productSpecification4\" placeholder=\"Specification 4\">\n              </mat-form-field>\n            </div>\n      </div>\n      <div class=\"col s4\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <input matInput  name=\"productSpecification5\" [(ngModel)]=\"extraData.productSpecification5\" placeholder=\"Specification 5\">\n              </mat-form-field>\n            </div>\n      </div>\n      <div class=\"col s4 empty\"></div>\n    </div>\n    </div>\n  </div>\n  </div>\n\n  <div mat-dialog-content  *ngIf=\"data.type=='specification'\">\n    <p class=\"heading\">Update Additional Fields</p>\n    <div class=\"from-fields\" >\n      <div class=\"row mt15 mb0\">\n          <div class=\"col s4\">\n              <p class=\"cs-lable\">Labels</p>\n          </div>\n          <div class=\"col s8\">\n              <p class=\"cs-lable\">Values</p>\n          </div>\n        <div class=\"col s4\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr\">\n              <input matInput  name=\"label1\" [(ngModel)]=\"extraData.aditionalField1Label\" placeholder=\"Label 1\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s8\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr\">\n              <input matInput  name=\"value1\" [(ngModel)]=\"extraData.aditionalField1Value\" placeholder=\"Value\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb0\">\n        <div class=\"col s4\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput name=\"label2\" [(ngModel)]=\"extraData.aditionalField2Label\" placeholder=\"Label 2\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s8\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput  name=\"value2\" [(ngModel)]=\"extraData.aditionalField2Value\" placeholder=\"Value\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb0\">\n        <div class=\"col s4\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput  name=\"label3\" [(ngModel)]=\"extraData.aditionalField3Label\" placeholder=\"Label 3\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s8\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput  name=\"value3\" [(ngModel)]=\"extraData.aditionalField3Value\" placeholder=\"Value\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb0\">\n        <div class=\"col s4\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput name=\"label4\" [(ngModel)]=\"extraData.aditionalField4Label\" placeholder=\"Label 4\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s8\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input\">\n              <input matInput name=\"Value4\" [(ngModel)]=\"extraData.aditionalField4Value\" placeholder=\"Value\">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n\n\n    <div mat-dialog-content  *ngIf=\"data.type=='App'\">\n        <p class=\"heading\">Update Field</p>\n        <div class=\"from-fields\">\n        <div class=\"row\">\n        <div class=\"col s4\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input infix-bodr\">\n                <mat-select   name=\"isLive\" #isLive=\"ngModel\" [(ngModel)]=\"extraData.isLive\" selected>\n                  <mat-option  [value]=true>\n                   Yes\n                  </mat-option>\n                  <mat-option  [value]=false>\n                  No\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n        </div>\n    </div>\n\n  <div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\">Cancel</button>\n  <button mat-raised-button color=\"accent\" (click)=\"update_detail()\">Save</button>\n  </div>\n  </div>"

/***/ }),

/***/ "./src/app/product/product-modal/product-modal.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/product/product-modal/product-modal.component.ts ***!
  \******************************************************************/
/*! exports provided: ProductModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductModalComponent", function() { return ProductModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");






var ProductModalComponent = /** @class */ (function () {
    function ProductModalComponent(router, dialogRef, data, db, toast) {
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.toast = toast;
        this.extraData = {};
        this.doc = [];
        this.product_detail = [];
        console.log(data);
        this.extraData = this.data;
        console.log(this.extraData.isLive);
        // this.extraData.extraField1=this.data.productSpecification1;
        // this.extraData.extraField2=this.data.productSpecification2;
        // this.extraData.extraField3=this.data.productSpecification3;
        // this.extraData.extraField4=this.data.productSpecification4;
        // this.extraData.extraField5=this.data.productSpecification5;
        console.log(this.data.documents);
        this.id = this.data.productId;
    }
    ProductModalComponent.prototype.ngOnInit = function () {
    };
    ProductModalComponent.prototype.update_detail = function () {
        var _this = this;
        if (this.data.type == 'App') {
            console.log('hello');
            this.db.fetchData({ "productId": this.data.productId, "isLive": this.extraData.isLive,
            }, 'product/live').subscribe(function (response) {
                console.log(response);
                _this.message = response['message'];
                _this.loader = false;
                if (_this.message == "Product updated successfully") {
                    _this.toast.openSucess('Product updated successfully', '');
                    _this.router.navigate(['/product-detail/' + _this.id]);
                }
                else {
                    _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                }
            });
        }
        else {
            this.loader = true;
            console.log(this.extraData);
            this.db.fetchData({ "productId": this.data.productId,
                "productSpecification1": this.extraData.productSpecification1,
                "productSpecification2": this.extraData.productSpecification2,
                "productSpecification3": this.extraData.productSpecification3,
                "productSpecification4": this.extraData.productSpecification4,
                "productSpecification5": this.extraData.productSpecification5,
                "specificationUOM": "string",
                "isLive": this.extraData.isLive,
                "aditionalField1Label": this.extraData.aditionalField1Label,
                "aditionalField1Value": this.extraData.aditionalField1Value,
                "aditionalField2Label": this.extraData.aditionalField2Label,
                "aditionalField2Value": this.extraData.aditionalField2Value,
                "aditionalField3Label": this.extraData.aditionalField3Label,
                "aditionalField3Value": this.extraData.aditionalField3Value,
                "aditionalField4Label": this.extraData.aditionalField4Label,
                "aditionalField4Value": this.extraData.aditionalField4Value,
            }, 'product/update').subscribe(function (response) {
                console.log(response);
                _this.message = response['message'];
                _this.loader = false;
                if (_this.message == "Product updated successfully") {
                    _this.toast.openSucess('Product updated successfully', '');
                    _this.router.navigate(['/product-detail/' + _this.id]);
                }
                else {
                    _this.toast.openError('Something Went Wrong Please Try Again!!', '');
                }
            });
        }
        this.dialogRef.close();
    };
    ProductModalComponent.prototype.onNoClick = function () {
        this.dialogRef.close();
        console.log(this.data);
    };
    ProductModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-product-modal',
            template: __webpack_require__(/*! ./product-modal.component.html */ "./src/app/product/product-modal/product-modal.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"]])
    ], ProductModalComponent);
    return ProductModalComponent;
}());



/***/ }),

/***/ "./src/app/reject-lead/reject-lead.component.html":
/*!********************************************************!*\
  !*** ./src/app/reject-lead/reject-lead.component.html ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n    <div *ngIf=\"loader\"> \n        <div class=\"cs-loader\">\n          <img src=\"assets/img/loader.png\" class=\"rotate\"> \n        </div>\n      </div>\n<div class=\"middle-container\">\n  <div class=\"page-heading\">\n      <img src=\"assets/img/leads_icon.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n          <h2>Reject Lead</h2>\n          <p></p>\n      </div>\n  </div>\n\n\n</div>\n\n<div class=\"container-outer\">\n  <div class=\"container\" >\n      <div class=\"row\">\n          <div class=\"col s12\">\n              <div class=\"cs-table left-right-20\">\n                  <div class=\"table-head\">\n                      <table  class=\"sno-border\">\n                          <tr>\n                            <th class=\"w30\">&nbsp;</th>\n                              <th class=\"w160\">Date</th>\n                              <th class=\"w180\">Company Name</th>\n                              <th class=\"w150\">User's Name</th>\n                              <th>Description</th>\n                              <th class=\"w100\">Task Type</th>\n                              <th class=\"w160\">Rejected Date</th>\n                              <th class=\"w150\">Rejected By</th>\n                          </tr>\n                      </table>\n                  </div>\n                 \n                  <div class=\"table-container\">\n                      <div class=\"table-content\">\n                          <table class=\"sno-border\">\n                              <tr *ngFor=\"let task of rejectedList;let i=index\">\n                                  <td class=\"w30\">{{i+1}}</td>\n                                  <td class=\"w160\">{{task.createdOn|date :'EEEE, MMMM d, y'}} </td>\n                                  <td class=\"w180\">{{task.leadEstablishment}}</td>\n                                  <td  class=\"w150\"> {{task.userName}} </td>\n                                  <td>{{task.remarks}}</td>\n                                  <td class=\"w100\"> {{task.taskTypeName}}</td>\n                                  <td  class=\"w160\">{{task.modifiedOn|date :'EEEE, MMMM d, y'}}</td>\n                                  <td class=\"w150\">{{task.modifiedByName}}\n                                      <!-- <div class=\"action-btns\">\n                                          <a mat-button class=\"view\" (click)=\"goToDetail(task.taskId)\"><i class=\"material-icons\"  >remove_red_eye</i> View</a>\n                                             <button mat-button class=\"delete\" (click)=\"deleteTask(task.taskId)\"><i class=\"material-icons\" >delete_sweep</i> Delete</button>\n                                      </div> -->\n                                  </td>\n                              </tr>\n                          </table>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div *ngIf=\"div\" class=\"data-not-available\" >\n              <div class=\"outer\">\n                  <div class=\"iinear\">\n                      <div class=\"figure\" matRipple>\n                          <div class=\"header\">\n                              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                          </div>\n                          \n                          <div class=\"description\">\n                              <div class=\"cs-heading\">\n                                  <h2>No Reject Lead</h2>\n                              </div>\n                              <div class=\"img\">\n                                      <i class=\"material-icons\">error_outline</i>\n                              </div>\n                              <div class=\"psc\">\n                                  <p>data not available</p>\n                                  <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n  </div>\n</div>\n\n</div>"

/***/ }),

/***/ "./src/app/reject-lead/reject-lead.component.scss":
/*!********************************************************!*\
  !*** ./src/app/reject-lead/reject-lead.component.scss ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlamVjdC1sZWFkL3JlamVjdC1sZWFkLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/reject-lead/reject-lead.component.ts":
/*!******************************************************!*\
  !*** ./src/app/reject-lead/reject-lead.component.ts ***!
  \******************************************************/
/*! exports provided: RejectLeadComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RejectLeadComponent", function() { return RejectLeadComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant.service */ "./src/app/constant.service.ts");



var RejectLeadComponent = /** @class */ (function () {
    function RejectLeadComponent(service) {
        this.service = service;
        this.rejectedList = [];
        this.loader = false;
        this.div = false;
        this.rejectLeadList();
    }
    RejectLeadComponent.prototype.ngOnInit = function () {
    };
    RejectLeadComponent.prototype.rejectLeadList = function () {
        var _this = this;
        this.div = false;
        this.loader = true;
        this.service.fetchData({ "leadConverted": false, "taskStatus": 2, "taskType": 1 }, "task/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.rejectedList = result['data'];
            }
            if (result['status'] == 'Failed') {
                _this.div = true;
            }
        });
    };
    RejectLeadComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-reject-lead',
            template: __webpack_require__(/*! ./reject-lead.component.html */ "./src/app/reject-lead/reject-lead.component.html"),
            styles: [__webpack_require__(/*! ./reject-lead.component.scss */ "./src/app/reject-lead/reject-lead.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"]])
    ], RejectLeadComponent);
    return RejectLeadComponent;
}());



/***/ }),

/***/ "./src/app/router-animation/router-animation.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/router-animation/router-animation.component.ts ***!
  \****************************************************************/
/*! exports provided: routerTransition, slideToRight, slideToLeft, slideToBottom, slideToTop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "routerTransition", function() { return routerTransition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slideToRight", function() { return slideToRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slideToLeft", function() { return slideToLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slideToBottom", function() { return slideToBottom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slideToTop", function() { return slideToTop; });
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/animations */ "./node_modules/@angular/animations/fesm5/animations.js");

// Post by Gerard Sans: https://medium.com/google-developer-experts/angular-2-animate-router-transitions-6de179e00204#.7h2femijg
// Add <script src="https://rawgit.com/web-animations/web-animations-js/master/web-animations.min.js"></script> into index.html for polyfill
// Add the following to any component to animate the view
// import { routerTransition } from './router.animations';
// @Component({
//   selector: 'home',
//   template: `<h1>Home</h1>`,
//   animations: [routerTransition()],
//   host: {'[@routerTransition]': ''}
// })
function routerTransition() {
    return slideToLeft();
}
function slideToRight() {
    return Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('routerTransition', [
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ position: '', width: '' })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ position: '', width: '' })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':enter', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateX(100%)' }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateX(0%)' }))
        ]),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':leave', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateX(0%)' }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateX(100%)' }))
        ])
    ]);
}
function slideToLeft() {
    return Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('routerTransition', [
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ position: '', width: '' })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ position: '', width: '' })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':enter', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateX(-100%)' }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateX(0%)' }))
        ]),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':leave', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateX(0%)' }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateX(100%)' }))
        ])
    ]);
}
function slideToBottom() {
    return Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('routerTransition', [
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ position: '', width: '', height: '' })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ position: '', width: '', height: '' })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':enter', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(-100%)' }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(0%)' }))
        ]),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':leave', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(0%)' }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(100%)' }))
        ])
    ]);
}
function slideToTop() {
    return Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('routerTransition', [
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ position: '', width: '', height: '' })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ position: '', width: '', height: '' })),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':enter', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(100%)' }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(0%)' }))
        ]),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':leave', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(0%)' }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(-100%)' }))
        ])
    ]);
}


/***/ }),

/***/ "./src/app/scheme/add-distributor/add-distributor.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/scheme/add-distributor/add-distributor.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n\n\n  <div class=\"edit-modal\">\n      <div class=\"cs-loader\" *ngIf=\"loader\"> \n          <img src=\"assets/img/loader.png\" class=\"rotate\">\n        </div>\n\n        <mat-dialog-content class=\"mat-typography pl15 pr15\" style=\"overflow: inherit !important;\">\n            <p class=\"heading\">EDIT DISTRIBUTOR</p>\n\n            <div class=\"row\">\n                <div class=\"col s6 pl0\">\n                  <div class=\"multi-all-select\">\n                    <label>Territory </label>\n                    <ng-multiselect-dropdown\n                    [placeholder]=\"'Select Territory'\"\n                    [data]=\"territoryLIst\"\n                    [(ngModel)]=\"schemedetail.territory\"\n                    name=\"territory\"\n                    #territory=\"ngModel\"\n                    selected-model=\"selectedTerritory.territoryID\"\n                    [settings]=\"dropdownSettings1\"\n                    (onSelect)=\"getDistribotorList(schemedetail.territory)\"\n                    (onSelectAll)=\"getDistribotorList($event)\"\n                    (onDeSelect)=\"getDistribotorList(schemedetail.territory)\"\n                    (onDeSelectAll)=\"getSelectedDistribotorList($event)\"\n                    >\n                  </ng-multiselect-dropdown>\n                </div>\n              </div>\n              <div class=\"col s6 pl0\">\n                <div class=\"multi-all-select\">\n                  <label>Distributor</label>\n                  <ng-multiselect-dropdown\n                  [placeholder]=\"'Select Distributor'\"\n                  [data]=\"distributorList\"\n                  [(ngModel)]=\"schemedetail.distributor\"\n                  name=\"distributor\"\n                  #distributor=\"ngModel\"\n                  [settings]=\"dropdownSettings2\"\n                  (onSelect)=\"selectedDistributor(schemedetail.distributor)\"\n                  (onSelectAll)=\"selectedDistributor($event)\"\n                  (onDeSelect)=\"selectedDistributor(schemedetail.distributor)\"\n                  (onDeSelectAll)=\"selectedDistributor($event)\"\n                  >\n                </ng-multiselect-dropdown>\n              </div>\n            </div>\n          </div>\n        </mat-dialog-content>\n\n        <mat-dialog-actions align=\"end\">\n            <button mat-raised-button color=\"warn\"  [mat-dialog-close]=\"false\">Cancel</button>\n            <button mat-raised-button color=\"accent\"  [mat-dialog-close]=\"true\" (click)=\"saveDistributor()\" >Save</button>\n          </mat-dialog-actions>\n  </div>\n\n"

/***/ }),

/***/ "./src/app/scheme/add-distributor/add-distributor.component.scss":
/*!***********************************************************************!*\
  !*** ./src/app/scheme/add-distributor/add-distributor.component.scss ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9hZGQtZGlzdHJpYnV0b3IvYWRkLWRpc3RyaWJ1dG9yLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/scheme/add-distributor/add-distributor.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/scheme/add-distributor/add-distributor.component.ts ***!
  \*********************************************************************/
/*! exports provided: AddDistributorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDistributorComponent", function() { return AddDistributorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");





var AddDistributorComponent = /** @class */ (function () {
    function AddDistributorComponent(data, service, toast) {
        this.data = data;
        this.service = service;
        this.toast = toast;
        this.schemedetail = {};
        this.territory = [];
        this.distributorData = {};
        this.territoryLIst = [];
        this.distributorList = [];
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        // selectedDistributor:any=[];
        this.loader = false;
        this.currentDate = new Date().toJSON().split('T')[0];
        this.form = {};
        this.selectedTerritory = [];
        this.newData = [];
        this.apple = {};
        this.arrayText = [];
        this.getTerritoryList();
        console.log(data);
        this.schemeCode = data['schemeCode'];
        this.schemedetail.distributor = data['value'];
        this.territory = data['territory'];
        console.log(this.territory);
        this.getDistributorList(this.territory);
    }
    AddDistributorComponent.prototype.ngOnInit = function () {
        this.dropdownSettings1 = {
            idField: 'territoryID',
            textField: 'territoryName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings2 = {
            idField: 'networkId',
            textField: 'establishment',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
    };
    AddDistributorComponent.prototype.getTerritoryList = function () {
        var _this = this;
        this.service.fetchData({}, "territory/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.territoryLIst = result['data'];
                console.log(_this.territoryLIst);
                for (var i = 0; i < _this.territoryLIst.length; i++) {
                    for (var j = 0; j < _this.territory.length; j++) {
                        if (_this.territory[j] == _this.territoryLIst[i].territoryID) {
                            _this.selectedTerritory.push({ territoryID: _this.territoryLIst[i].territoryID, territoryName: _this.territoryLIst[i].territoryName });
                        }
                    }
                }
                _this.schemedetail.territory = _this.selectedTerritory;
                console.log(_this.selectedTerritory);
            }
        });
    };
    AddDistributorComponent.prototype.getDistributorList = function (territoriesIds) {
        var _this = this;
        this.service.fetchData({ territoriesIds: territoriesIds }, "territoriesnetworks/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.distributorList = result['data'];
            }
        });
    };
    AddDistributorComponent.prototype.getDistribotorList = function (territory) {
        // this.distributoList=[];
        var _this = this;
        var territoriesIds = [];
        this.loader = true;
        for (var i = 0; i < territory.length; i++) {
            territoriesIds.push(territory[i].territoryID);
        }
        console.log(territory);
        if (territoriesIds.length != 0) {
            this.service.fetchData({ territoriesIds: territoriesIds }, "territoriesnetworks/list").subscribe(function (result) {
                console.log(result);
                _this.loader = false;
                if (result['status'] == 'Success') {
                    _this.distributorList = result['data'];
                    console.log(_this.distributorList);
                }
            });
        }
    };
    AddDistributorComponent.prototype.selectedDistributor = function (distributor) {
        this.schemedetail.schemeDistributors = [];
        console.log(distributor);
        for (var i = 0; i < this.distributorList.length; i++) {
            console.log("test");
            for (var j = 0; j < distributor.length; j++) {
                if (this.distributorList[i].networkId == distributor[j].networkId) {
                    this.schemedetail.schemeDistributors.push({ "distributorID": this.distributorList[i].networkId, "distributorTerritoryID": this.distributorList[i].territoryId, schemeCode: this.schemeCode });
                }
            }
        }
        console.log(this.schemedetail.schemeDistributors);
    };
    AddDistributorComponent.prototype.saveDistributor = function () {
        this.service.fetchData({ isActive: 1, schemeCode: this.schemeCode, schemeDistributors: this.schemedetail.schemeDistributors }, "adddistributor").subscribe(function (result) {
            console.log(result);
        });
    };
    AddDistributorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-distributor',
            template: __webpack_require__(/*! ./add-distributor.component.html */ "./src/app/scheme/add-distributor/add-distributor.component.html"),
            styles: [__webpack_require__(/*! ./add-distributor.component.scss */ "./src/app/scheme/add-distributor/add-distributor.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"]])
    ], AddDistributorComponent);
    return AddDistributorComponent;
}());



/***/ }),

/***/ "./src/app/scheme/add-scheme/add-scheme.component.html":
/*!*************************************************************!*\
  !*** ./src/app/scheme/add-scheme/add-scheme.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n    <div class=\"cs-loader\" *ngIf=\"loader\"> \n        <img src=\"assets/img/loader.png\" class=\"rotate\">\n      </div>\n    \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/scheme.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Scheme</h2>\n        <p>Add New Scheme</p>\n      </div>\n    </div>\n  </div>\n  \n  <form #f=\"ngForm\" (ngSubmit)=\" f.valid && submitDetail()\">\n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\" style=\"overflow: inherit;\">\n              <div class=\"cs-heading\">\n                <h2>Scheme INFORMATION</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Tittle\" name=\"title\" id=\"title\" #title=\"ngModel\" [ngClass]=\"{'has-error' : title.invalid }\" [(ngModel)]=\"scheme.title\" required>\n                      </mat-form-field>\n                      <div class=\"alert alert-danger\" *ngIf=\"!title.valid && title.touched\">\n                        Title is required...\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col s4\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput [matDatepicker]=\"picker\" placeholder=\"Scheme Start Date\" name=\"validFrom\" #validFrom=\"ngModel\" [min]='currentDate' [(ngModel)]=\"scheme.validFrom\" [ngClass]=\"{'has-error' : validFrom.invalid }\" readonly required  >\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                      </mat-form-field>\n                      <div class=\"alert alert-danger\" *ngIf=\"!validFrom.valid && validFrom.touched\">\n                        Scheme Start Date is required...\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col s4 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput [matDatepicker]=\"pickers\" placeholder=\"Scheme End Date\" [min]='scheme.validFrom' name=\"validTill\" #validTill=\"ngModel\" [(ngModel)]=\"scheme.validTill\" [ngClass]=\"{'has-error' : validTill.invalid }\" required readonly >\n                        <mat-datepicker-toggle matSuffix [for]=\"pickers\"></mat-datepicker-toggle>\n                        <mat-datepicker #pickers></mat-datepicker>\n                      </mat-form-field>\n                      <div class=\"alert alert-danger\" *ngIf=\"!validTill.valid && validTill.touched\">\n                        Scheme End Date is required...\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row mt15\">\n                  <div class=\"col s6 pl0\">\n                    <div class=\"from-fields\">\n                      <div class=\"control-field\" >\n                        <app-ngx-editor [placeholder]=\"'Description'\"  [spellcheck]=\"true\"  name=\"schemeDescription\" #schemeDescription=\"ngModel\" [(ngModel)]=\"scheme.schemeDescription\" [ngClass]=\"{'has-error' : schemeDescription.invalid }\" required></app-ngx-editor>\n                      </div>\n                      <div class=\"alert alert-danger\" *ngIf=\"!schemeDescription.valid && schemeDescription.touched\">\n                        Description is required...\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col s6 pr0\">\n                    <div class=\"from-fields\">\n                      <div class=\"control-field\" >\n                        <app-ngx-editor [placeholder]=\"'Term & Condition'\" [spellcheck]=\"true\"  name=\"tc\" #tc=\"ngModel\" [(ngModel)]=\"scheme.tc\" class=\"h100\" required></app-ngx-editor>\n                      </div>\n                      <div class=\"alert alert-danger\" *ngIf=\"!tc.valid && tc.touched\">\n                        Term & Condition is required...\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"sprate-box pt0 mt15\" style=\"overflow: inherit;\">\n              <div class=\"cs-heading\">\n                <h2>Scheme Type</h2>\n              </div>\n              <div class=\"row\">\n                <div class=\"col s12 padding0\">\n                    <div class=\"select-one\">\n                        <mat-radio-group (change)=\"getSchemeType()\" name=\"schemeType\" #schemeType=\"ngModel\" [(ngModel)]=\"schemedetail.schemeType\" aria-label=\"Select an option\">\n                            <mat-radio-button [value]=\"1\">Genric Scheme</mat-radio-button>\n                            <mat-radio-button [value]=\"0\">Selected Scheme</mat-radio-button>\n                          </mat-radio-group>\n                      </div>\n                </div>\n              </div>\n              <mat-divider class=\"mt15 mb15 left-right-15\"></mat-divider>\n              \n              <div *ngIf=\"schemedetail.schemeType==0\" class=\"row\">\n                <div class=\"col s4 pl0\">\n                  <div class=\"multi-all-select\">\n                    <label>Territory</label>\n                    <ng-multiselect-dropdown\n                    [placeholder]=\"'Select Territory'\"\n                    [data]=\"territoryLIst\"\n                    [(ngModel)]=\"schemedetail.territory\"\n                    name=\"territory\"\n                    #territory=\"ngModel\"\n                    [settings]=\"dropdownSettings1\"\n                    (onSelect)=\"getDistribotorList(schemedetail.territory)\"\n                    (onSelectAll)=\"getDistribotorList($event)\"\n                    (onDeSelect)=\"getDistribotorList(schemedetail.territory)\"\n                    (onDeSelectAll)=\"getSelectedDistribotorList($event)\"\n                    \n                    >\n                  </ng-multiselect-dropdown>\n                </div>\n              </div>\n              <div class=\"col s4 pl0\">\n                <div class=\"multi-all-select\">\n                  <label>Distributor</label>\n                  <ng-multiselect-dropdown\n                  [placeholder]=\"'Select Distributor'\"\n                  [data]=\"distributoList\"\n                  [(ngModel)]=\"schemeDistributors.schemeDistributors\"\n                  name=\"distributor\"\n                  #distributor=\"ngModel\"\n                  [settings]=\"dropdownSettings2\"\n                  (onSelect)=\"selectedDistributor(schemeDistributors.schemeDistributors)\"\n                  (onSelectAll)=\"selectedDistributor($event)\"\n                  (onDeSelect)=\"selectedDistributor(schemeDistributors.schemeDistributors)\"\n                  (onDeSelectAll)=\"selectedDistributor($event)\"\n\n\n                  >\n                </ng-multiselect-dropdown>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        <div *ngIf=\"schemedetail.schemeType!=null\" class=\"sprate-box pt0 mt15\" style=\"overflow: inherit;\">\n          <div class=\"cs-heading\">\n            <h2>PRODUCT INFORMATION</h2>\n          </div>\n          \n          <div class=\"from-fields\">\n            <div class=\"row mt10 mb15\">\n              <div class=\"col s4 pl0\">\n                <div class=\"multi-all-select\">\n                  <label>Part Number</label>\n                  <ng-multiselect-dropdown\n                  [placeholder]=\"'Select Part Number'\"\n                  [data]=\"productList\"\n                  [(ngModel)]=\"schemedetail.partNumber\"\n                  name=\"partNumber\"\n                  #partNumber=\"ngModel\"\n                  [settings]=\"dropdownSettings\"\n                  (onSelect)=\"selectedPartNumber($event)\"\n                  >\n                </ng-multiselect-dropdown>\n              </div>\n            </div>\n            <div class=\"col s8 pr0\">\n              <div class=\"control-field pr80\">\n                <mat-form-field class=\"cs-input\">\n                  <!-- <app-ngx-editor [placeholder]=\"'Description'\" [spellcheck]=\"true\"  name=\"prodesc\" #prodesc=\"ngModel\" [(ngModel)]=\"schemedetail.prodesc\" ></app-ngx-editor> -->\n                  <textarea matInput placeholder=\"Scheme Description\" name=\"prodesc\" #prodesc=\"ngModel\" [(ngModel)]=\"schemedetail.prodesc\" class=\"h100\"></textarea>\n                </mat-form-field>\n                <div class=\"plus-btn\">\n                  <button type=\"button\" (click)=\"addScheme(schemedetail.partNumber,schemedetail.prodesc)\" mat-raised-button color=\"accent\">\n                    <i class=\"material-icons\"  >add</i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        \n        \n        <div *ngIf=\"schemeProductDetails.length!=0\" class=\"row\">\n          <div class=\"cs-table left-right-15\">\n            <div class=\"table-head\">\n              <table>\n                <tr>\n                  <th class=\"w230\">Product Code</th>\n                  <th class=\" bdr0\">Scheme Information</th>\n                  <th class=\"w130\">&nbsp;</th>\n                </tr>\n              </table>\n            </div>\n            \n            <div  class=\"table-container\">\n              <div class=\"table-content none-shadow\">\n                <table>\n                  <tr *ngFor=\"let scheme of schemeProductDetails;let i=index\">\n                    <td class=\"w230\">{{scheme.partNumberCode}}</td>\n                    <td [innerHTML]=\"scheme.offerDescription\" >{{scheme.offerDescription}}</td>\n                    <td class=\"w130\">\n                      <a mat-button class=\"del-btn\" type=\"button\" (click)=\"removeScheme(i)\">Delete</a>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col s12\">\n      <div class=\"cs-btn fixedd mt15 text-right\">\n        <div class=\"in-btn\">\n          <button mat-raised-button color=\"accent\" [disabled]=\"schemeProductDetails.length==0\" (click)=\"setFocus(f.form)\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n</form>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/scheme/add-scheme/add-scheme.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/scheme/add-scheme/add-scheme.component.ts ***!
  \***********************************************************/
/*! exports provided: AddSchemeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddSchemeComponent", function() { return AddSchemeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");








var AddSchemeComponent = /** @class */ (function () {
    function AddSchemeComponent(platformId, service, router, toast) {
        this.platformId = platformId;
        this.service = service;
        this.router = router;
        this.toast = toast;
        this.scheme = {};
        this.currentDate = new Date().toJSON().split('T')[0];
        this.dropdownSettings = {};
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        this.schemeDistributors = {};
        this.productList = [];
        this.loader = false;
        this.schemeProductDetails = [];
        this.schemedetail = { "partNumber": "", "prodesc": "" };
        this.territoryLIst = [];
        this.distributoList = [];
        this.schemedetail.schemeType = 1;
        this.getProductList();
        this.getTerritoryList();
    }
    AddSchemeComponent.prototype.ngOnInit = function () {
        this.dropdownSettings = {
            singleSelection: false,
            closeDropDownOnSelection: true,
            idField: 'partNumber',
            textField: 'partNumberCode',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings1 = {
            idField: 'territoryID',
            textField: 'territoryName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings2 = {
            idField: 'networkId',
            textField: 'establishment',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
    };
    AddSchemeComponent.prototype.setFocus = function (form) {
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["isPlatformBrowser"])(this.platformId)) {
                        jquery__WEBPACK_IMPORTED_MODULE_3__('#' + key).focus();
                    }
                    break;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
    };
    AddSchemeComponent.prototype.submitDetail = function () {
        var _this = this;
        this.scheme.schemeDistributors = this.schemedetail.schemeDistributors;
        this.scheme.validFrom = moment__WEBPACK_IMPORTED_MODULE_6__(this.scheme.validFrom).format('YYYY-MM-DD');
        this.scheme.validTill = moment__WEBPACK_IMPORTED_MODULE_6__(this.scheme.validTill).format('YYYY-MM-DD');
        this.loader = true;
        this.scheme.schemeProductDetails = this.schemeProductDetails;
        this.scheme.isActive = 1;
        this.scheme.schemeType = this.schemedetail.schemeType;
        console.log(this.scheme);
        this.service.fetchData(this.scheme, "createscheme").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['message'] == 'Success') {
                _this.toast.openSucess('Scheme ', 'Added successfully');
                _this.router.navigate(['/scheme-list']);
            }
        });
    };
    AddSchemeComponent.prototype.getSchemeType = function () {
        console.log(this.schemedetail.schemeType);
    };
    AddSchemeComponent.prototype.getTerritoryList = function () {
        var _this = this;
        this.service.fetchData({}, "territory/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.territoryLIst = result['data'];
                console.log(_this.territoryLIst);
            }
        });
    };
    AddSchemeComponent.prototype.getDistribotorList = function (territory) {
        // this.distributoList=[];
        var _this = this;
        var territoriesIds = [];
        this.loader = true;
        for (var i = 0; i < territory.length; i++) {
            territoriesIds.push(territory[i].territoryID);
        }
        console.log(territory);
        if (territoriesIds.length != 0) {
            this.service.fetchData({ territoriesIds: territoriesIds }, "territoriesnetworks/list").subscribe(function (result) {
                console.log(result);
                _this.loader = false;
                if (result['status'] == 'Success') {
                    _this.distributoList = result['data'];
                    console.log(_this.distributoList);
                }
            });
        }
    };
    AddSchemeComponent.prototype.getSelectedDistribotorList = function () {
        this.distributoList = [];
    };
    AddSchemeComponent.prototype.selectedDistributor = function (distributor) {
        this.schemedetail.schemeDistributors = [];
        console.log(distributor);
        for (var i = 0; i < this.distributoList.length; i++) {
            console.log("test");
            for (var j = 0; j < distributor.length; j++) {
                if (this.distributoList[i].networkId == distributor[j].networkId) {
                    this.schemedetail.schemeDistributors.push({ "distributorID": this.distributoList[i].networkId, "distributorTerritoryID": this.distributoList[i].territoryId });
                }
            }
        }
        console.log(this.schemedetail.schemeDistributors);
    };
    AddSchemeComponent.prototype.getProductList = function () {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ "currentPage": 1, "pageSize": 500 }, "product/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.productList = result['data'];
            }
        });
    };
    AddSchemeComponent.prototype.selectedPartNumber = function (event) {
        this.partCode = event;
    };
    AddSchemeComponent.prototype.addScheme = function (product, des) {
        console.log(product);
        console.log(des);
        for (var i = 0; i < product.length; i++) {
            this.schemeProductDetails.push({ "partNumberCode": product[i], "offerDescription": des });
        }
        this.schemedetail.partNumber = '';
        this.schemedetail.prodesc = '';
    };
    AddSchemeComponent.prototype.removeScheme = function (index) {
        this.schemeProductDetails.splice(index, 1);
    };
    AddSchemeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-scheme',
            template: __webpack_require__(/*! ./add-scheme.component.html */ "./src/app/scheme/add-scheme/add-scheme.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_7__["SnackBarOverview"]])
    ], AddSchemeComponent);
    return AddSchemeComponent;
}());



/***/ }),

/***/ "./src/app/scheme/edit-scheme/edit-scheme.component.html":
/*!***************************************************************!*\
  !*** ./src/app/scheme/edit-scheme/edit-scheme.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n\n<div class=\"edit-modal\">\n  <p class=\"heading\">Update Scheme</p>\n  <div mat-dialog-content *ngIf=\"schemeData.field!='validFrom' && schemeData.field!='validTill'\">\n    <div class=\"row from-fields\">\n      <div class=\"col s12 control-field\" >\n        <mat-form-field class=\"cs-input\" >\n          <input [innerHTML]=\"schemeData.value\" matInput placeholder=\"Vlaue\" name=\"value\" [(ngModel)]=\"schemeData.value\" >\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div mat-dialog-content style=\"overflow: hidden;\" *ngIf=\"schemeData.field=='validFrom' || schemeData.field=='validTill'\">\n    <div class=\"row from-fields\">\n      <div class=\"control-field\">\n        <mat-form-field class=\"cs-input\">\n          <input matInput [matDatepicker]=\"pickers\" readonly placeholder=\"Scheme End Date\" [min]='currentDate' name=\"value\" [(ngModel)]=\"schemeData.value\" >\n          <mat-datepicker-toggle matSuffix [for]=\"pickers\"></mat-datepicker-toggle>\n          <mat-datepicker #pickers></mat-datepicker>\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  \n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\"  [mat-dialog-close]=\"false\">Cancel</button>\n    <button mat-raised-button color=\"accent\" [mat-dialog-close]=\"true\" (click)=\"updateScheme()\" >Save</button>\n  </div>\n</div>\n\n"

/***/ }),

/***/ "./src/app/scheme/edit-scheme/edit-scheme.component.scss":
/*!***************************************************************!*\
  !*** ./src/app/scheme/edit-scheme/edit-scheme.component.scss ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9lZGl0LXNjaGVtZS9lZGl0LXNjaGVtZS5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/scheme/edit-scheme/edit-scheme.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/scheme/edit-scheme/edit-scheme.component.ts ***!
  \*************************************************************/
/*! exports provided: EditSchemeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditSchemeComponent", function() { return EditSchemeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");





var EditSchemeComponent = /** @class */ (function () {
    function EditSchemeComponent(data, service, toast) {
        this.data = data;
        this.service = service;
        this.toast = toast;
        this.schemeData = {};
        this.currentDate = new Date().toJSON().split('T')[0];
        this.value = {};
        console.log(data);
        this.schemeData = data;
    }
    EditSchemeComponent.prototype.ngOnInit = function () {
    };
    EditSchemeComponent.prototype.updateScheme = function () {
        var _this = this;
        console.log(this.schemeData.isActive);
        this.value.schemeCode = this.schemeData.schemeCode;
        this.value.isActive = this.schemeData.isActive;
        console.log(this.schemeData);
        if (this.schemeData.field == 'title') {
            this.value.title = this.schemeData.value;
        }
        if (this.schemeData.field == 'schemeDescription') {
            this.value.schemeDescription = this.schemeData.value;
        }
        if (this.schemeData.field == 'validFrom') {
            this.value.validFrom = this.schemeData.value;
        }
        if (this.schemeData.field == 'validTill') {
            this.value.validTill = this.schemeData.value;
        }
        if (this.schemeData.field == 'tc') {
            this.value.tc = this.schemeData.value;
        }
        console.log(this.value);
        this.service.fetchData(this.value, "/modifyscheme").subscribe(function (result) {
            console.log(result);
            if (result['message'] == 'Success') {
                _this.toast.openSucess("Scheme", "Update SuccessFully");
            }
        });
    };
    EditSchemeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-edit-scheme',
            template: __webpack_require__(/*! ./edit-scheme.component.html */ "./src/app/scheme/edit-scheme/edit-scheme.component.html"),
            styles: [__webpack_require__(/*! ./edit-scheme.component.scss */ "./src/app/scheme/edit-scheme/edit-scheme.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"]])
    ], EditSchemeComponent);
    return EditSchemeComponent;
}());



/***/ }),

/***/ "./src/app/scheme/editdate-scheme/editdate-scheme.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/scheme/editdate-scheme/editdate-scheme.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n\n<div class=\"edit-modal\">\n  <p class=\"heading\">Update Scheme</p>\n  <div mat-dialog-content style=\"overflow: hidden;\">\n    <div class=\"row from-fields\">\n      <div class=\"control-field\">\n        <mat-form-field  class=\"cs-input\">\n          <input matInput (dateChange)=\"checkValid()\" [matDatepicker]=\"pickers\" readonly placeholder=\"Scheme Start Date\" [min]='currentDate' name=\"value\" [(ngModel)]=\"schemeData.validFrom\" >\n          <mat-datepicker-toggle  matSuffix [for]=\"pickers\"></mat-datepicker-toggle>\n          <mat-datepicker #pickers></mat-datepicker>\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"row from-fields\">\n      <div class=\"control-field\">\n        <mat-form-field class=\"cs-input\">\n          <input matInput [matDatepicker]=\"pickers1\" readonly placeholder=\"Scheme End Date\" [min]='schemeData.validFrom' name=\"value\" [(ngModel)]=\"schemeData.validTill\" >\n          <mat-datepicker-toggle matSuffix [for]=\"pickers1\"></mat-datepicker-toggle>\n          <mat-datepicker #pickers1></mat-datepicker>\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  \n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\"  [mat-dialog-close]=\"false\">Cancel</button>\n    <button mat-raised-button color=\"accent\" [disabled]=\"!schemeData.validFrom||!schemeData.validTill\" [mat-dialog-close]=\"true\" (click)=\"updateScheme()\" >Save</button>\n  </div>\n</div>\n\n"

/***/ }),

/***/ "./src/app/scheme/editdate-scheme/editdate-scheme.component.scss":
/*!***********************************************************************!*\
  !*** ./src/app/scheme/editdate-scheme/editdate-scheme.component.scss ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9lZGl0ZGF0ZS1zY2hlbWUvZWRpdGRhdGUtc2NoZW1lLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/scheme/editdate-scheme/editdate-scheme.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/scheme/editdate-scheme/editdate-scheme.component.ts ***!
  \*********************************************************************/
/*! exports provided: EditdateSchemeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditdateSchemeComponent", function() { return EditdateSchemeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);






var EditdateSchemeComponent = /** @class */ (function () {
    function EditdateSchemeComponent(data, service, toast) {
        this.data = data;
        this.service = service;
        this.toast = toast;
        this.schemeData = {};
        this.currentDate = new Date().toJSON().split('T')[0];
        console.log(data);
        this.schemeData = data;
    }
    EditdateSchemeComponent.prototype.ngOnInit = function () {
    };
    EditdateSchemeComponent.prototype.checkValid = function () {
        if (moment__WEBPACK_IMPORTED_MODULE_5__(this.schemeData.validFrom).format('YYYY-MM-DD') > moment__WEBPACK_IMPORTED_MODULE_5__(this.schemeData.validTill).format('YYYY-MM-DD')) {
            this.schemeData.validTill = null;
        }
    };
    EditdateSchemeComponent.prototype.updateScheme = function () {
        var _this = this;
        console.log(this.schemeData.validFrom);
        var value = { validFrom: moment__WEBPACK_IMPORTED_MODULE_5__(this.schemeData.validFrom).format('YYYY-MM-DD'), validTill: moment__WEBPACK_IMPORTED_MODULE_5__(this.schemeData.validTill).format('YYYY-MM-DD'), schemeCode: this.schemeData.schemeCode, isActive: this.schemeData.isActive };
        this.service.fetchData(value, "/modifyscheme").subscribe(function (result) {
            console.log(result);
            if (result['message'] == 'Success') {
                _this.toast.openSucess("Scheme", "Update SuccessFully");
            }
        });
    };
    EditdateSchemeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-editdate-scheme',
            template: __webpack_require__(/*! ./editdate-scheme.component.html */ "./src/app/scheme/editdate-scheme/editdate-scheme.component.html"),
            styles: [__webpack_require__(/*! ./editdate-scheme.component.scss */ "./src/app/scheme/editdate-scheme/editdate-scheme.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"]])
    ], EditdateSchemeComponent);
    return EditdateSchemeComponent;
}());



/***/ }),

/***/ "./src/app/scheme/scheme-detail/scheme-detail.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/scheme/scheme-detail/scheme-detail.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n    <div class=\"cs-loader\" *ngIf=\"loader\"> \n        <img src=\"assets/img/loader.png\" class=\"rotate\">\n      </div>\n    \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/scheme-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>Scheme {{schemeDetail.title}}  <a class=\"edit-heading\" color=\"accent\" matTooltip=\"EDIT\"  (click)=\"openEditDialog('title',schemeDetail.title)\"><i class=\"material-icons\">create</i></a></h2>\n        \n        <p class=\"light\">{{totalProduct.length}}</p>\n      </div>\n    </div>\n    <div class=\"multi-btn\">\n      <ul>\n      </ul>\n    </div>\n  </div>\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info\">\n            <div class=\"basic-details\">\n              <a mat-button class=\"figure-edit\" matTooltip=\"Edit\" color=\"accent\" (click)=\"openEditDateDialog('date')\"><i class=\"material-icons\">edit</i></a>\n              <div class=\"profile-info\">\n                <ul>\n                  <li class=\"col s4\">\n                    <div class=\"cs-box\">\n                      <img  src=\"assets/img/scheme-detail.svg\" class=\"fix-img\">\n                      <span>SCHEME TYPE</span>\n                      <p *ngIf=\"schemeDetail.schemeType==0\">SELECTED</p>\n                      <p *ngIf=\"schemeDetail.schemeType==1\">GENRIC</p>\n                      \n                    </div>\n                  </li>\n                  <li class=\"col s4\">\n                    <div class=\"cs-box\">\n                      <img  src=\"assets/img/calendar.svg\" class=\"fix-img\">\n                      <span>CREATED DATE</span>\n                      <p class=\"link-clr\">{{schemeDetail.createdOn| date:'EEEE, MMMM d, y'}}</p>\n                      \n                    </div>\n                  </li>\n                  <li  class=\"col s4\">\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/calendar.svg\" class=\"fix-img\">\n                      <span>VALID FROM</span>\n                      <p>{{schemeDetail.validFrom| date:'EEEE, MMMM d, y'}}</p>\n                      <!-- <a class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEditDialog('validFrom',schemeDetail.validFrom)\"><i class=\"material-icons\">create</i></a> -->\n                    </div>\n                  </li>\n                  <li  class=\"col s4\">\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/calendar.svg\" class=\"fix-img\">\n                      <span>VALID TILL</span>\n                      <p>{{schemeDetail.validTill| date:'EEEE, MMMM d, y'}}</p>\n                      <!-- <a class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEditDialog('validTill',schemeDetail.validTill)\"><i class=\"material-icons\">create</i></a> -->\n                    </div>\n                  </li>\n                  \n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb15\" *ngIf=\"schemeDetail.schemeDistributors.length!=0 && schemeDetail.schemeType==0\">\n        \n        <div class=\"col s12\">\n          <div class=\"sprate-box pt0 \">\n            <div class=\"full-address\">\n              <div class=\"cs-heading\">\n                <h2>DISTRIBUTOR INFORMATION</h2>\n                <a mat-button class=\"edit-icon\" matTooltip=\"Add\" color=\"accent\" (click)=\"addDistributor(distributoList)\"><i class=\"material-icons\">add</i></a>  \n              </div>\n              <div class=\"cs-table left-right-15\">\n                  <div class=\"table-head\">\n                    <table>\n                      <tr>\n                        <th class=\"w150\">Distributor Name</th>\n                        \n                      </tr>\n                    </table>\n                  </div>\n                  <div class=\"table-container\">\n                    <div class=\"table-content none-shadow\">\n                      <table>\n                        <tr *ngFor=\"let name of distributoList\">\n                          <td class=\"w150\">{{name.establishment}}\n                            \n                            <div class=\"action-btns\">\n                              <button mat-button class=\"delete\" (click)=\"removeDistributor(name.networkId,schemeDetail.schemeCode)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                            </div>\n                          </td>\n                          \n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                  <!-- <div class=\"row\">\n                    <div class=\"col s4 pl0\">\n                      <div class=\"multi-all-select\">\n                        <label>Territory</label>\n                        <ng-multiselect-dropdown\n                        [placeholder]=\"'Select Territory'\"\n                        \n                        \n                        [settings]=\"dropdownSettings1\"\n                        (onSelect)=\"getDistribotorList(schemedetail.territory)\"\n                        (onSelectAll)=\"getDistribotorList($event)\"\n                        (onDeSelect)=\"getDistribotorList(schemedetail.territory)\"\n                        (onDeSelectAll)=\"getSelectedDistribotorList($event)\"\n                        \n                        >\n                      </ng-multiselect-dropdown>\n                    </div>\n                  </div>\n                  <div class=\"col s4 pl0\">\n                    <div class=\"multi-all-select\">\n                      <label>Distributor</label>\n                      <ng-multiselect-dropdown\n                      [placeholder]=\"'Select Distributor'\"\n                      \n                      \n                      [settings]=\"dropdownSettings2\"\n                      (onSelect)=\"selectedDistributor($event)\"\n                      (onSelectAll)=\"selectedDistributor($event)\"\n                      (onDeSelect)=\"selectedDistributor(schemeDistributors.schemeDistributors)\"\n                      (onDeSelectAll)=\"selectedDistributor($event)\"\n                      >\n                    </ng-multiselect-dropdown>\n                  </div>\n                </div>\n              </div> -->\n            </div>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n  <div class=\"row mb15\" *ngIf=\"totalProduct.length!=0\">\n    <div class=\"col s12\">\n      <div class=\"sprate-box pt0 \">\n        <div class=\"cs-heading\">\n          <h2>PRODUCT SCHEME DETAIL</h2>\n        </div>\n        <div class=\"cs-table left-right-15\">\n          <div class=\"table-head\">\n            <table>\n              <tr>\n                <th class=\"w150\">Part Number</th>\n                <th >Description</th>\n                <th class=\"w140 text-center\">Action</th>\n              </tr>\n            </table>\n          </div>\n          <div class=\"table-container\">\n            <div class=\"table-content none-shadow\">\n              <table>\n                <tr *ngFor=\"let scheme of schemeDetail.schemeProductDetails\">\n                  <td class=\"w150\">{{scheme.partNumberCode}}</td>\n                  <td [innerHTML]=\"scheme.offerDescription\">{{scheme.offerDescription}}\n                    \n                  </td>\n                  <td class=\"w140\">\n                    <div class=\"action-btns default-action\">\n                      <button mat-button class=\"delete\" (click)=\"removeScheme(scheme.partNumberCode)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col s6\" >\n      <div  class=\"sprate-box pt0\">\n        <div class=\"cs-heading\">\n          <h2>TERM & CONDITION</h2>\n          <a class=\"edit-icon\" color=\"accent\" mat-button matRipple matTooltip=\"EDIT\" (click)=\"openEditDialog('tc',schemeDetail.tc)\"><i class=\"material-icons\">create</i></a>\n        </div>\n        <div class=\"cs-pragraph\">\n          <p  [innerHTML]=\"schemeDetail.tc\">{{schemeDetail.tc}}</p>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col s6\">\n      <div  class=\"sprate-box pt0\">\n        <div class=\"cs-heading\">\n          <h2>DESCRIPTION</h2>\n          <a class=\"edit-icon\" color=\"accent\" mat-button matRipple matTooltip=\"EDIT\" (click)=\"openEditDialog('schemeDescription',schemeDetail.schemeDescription)\"><i class=\"material-icons\">create</i></a>\n        </div>\n        <div class=\"cs-pragraph\">\n          <p  [innerHTML]=\"schemeDetail.schemeDescription\">{{schemeDetail.schemeDescription}}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n\n</div>\n\n<div class=\"h50\"></div>\n\n"

/***/ }),

/***/ "./src/app/scheme/scheme-detail/scheme-detail.component.scss":
/*!*******************************************************************!*\
  !*** ./src/app/scheme/scheme-detail/scheme-detail.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9zY2hlbWUtZGV0YWlsL3NjaGVtZS1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/scheme/scheme-detail/scheme-detail.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/scheme/scheme-detail/scheme-detail.component.ts ***!
  \*****************************************************************/
/*! exports provided: SchemeDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchemeDetailComponent", function() { return SchemeDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _edit_scheme_edit_scheme_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../edit-scheme/edit-scheme.component */ "./src/app/scheme/edit-scheme/edit-scheme.component.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _editdate_scheme_editdate_scheme_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../editdate-scheme/editdate-scheme.component */ "./src/app/scheme/editdate-scheme/editdate-scheme.component.ts");
/* harmony import */ var _add_distributor_add_distributor_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../add-distributor/add-distributor.component */ "./src/app/scheme/add-distributor/add-distributor.component.ts");










var SchemeDetailComponent = /** @class */ (function () {
    function SchemeDetailComponent(service, route, dialog, alert, toast) {
        var _this = this;
        this.service = service;
        this.route = route;
        this.dialog = dialog;
        this.alert = alert;
        this.toast = toast;
        this.schemeDetail = {};
        this.totalProduct = [];
        this.loader = false;
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        this.selectedTerritory = [];
        this.distributoList = [];
        this.tmpDistributorList = [];
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.schemeCode = params.id;
            console.log(_this.schemeCode);
            if (_this.schemeCode) {
                _this.getSchemeDetail();
            }
        });
    }
    SchemeDetailComponent.prototype.ngOnInit = function () {
        this.dropdownSettings1 = {
            idField: 'territoryID',
            textField: 'territoryName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings2 = {
            idField: 'networkId',
            textField: 'establishment',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
    };
    SchemeDetailComponent.prototype.getSchemeDetail = function () {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ "schemeCode": this.schemeCode }, "/getschemedescription").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['message'] == 'Success') {
                _this.schemeDetail = result['data'];
                _this.totalProduct = _this.schemeDetail.schemeProductDetails;
                _this.getDistribotorList(_this.schemeDetail.schemeDistributors);
            }
        });
    };
    SchemeDetailComponent.prototype.getDistribotorList = function (territory) {
        var _this = this;
        this.distributoList = [];
        var territoriesIds = [];
        var _loop_1 = function (i) {
            if (territoriesIds.length == 0) {
                territoriesIds.push(territory[i].distributorTerritoryID);
            }
            else {
                var idIndex = territoriesIds.findIndex(function (row) { return row != territory[i].distributorTerritoryID; });
                if (idIndex != -1) {
                    territoriesIds.push(territory[i].distributorTerritoryID);
                }
            }
        };
        // this.loader=true;
        for (var i = 0; i < territory.length; i++) {
            _loop_1(i);
        }
        console.log(territoriesIds);
        this.selectedTerritory = territoriesIds;
        if (territoriesIds.length != 0) {
            this.service.fetchData({ territoriesIds: territoriesIds }, "territoriesnetworks/list").subscribe(function (result) {
                console.log(result);
                _this.loader = false;
                if (result['status'] == 'Success') {
                    _this.tmpDistributorList = result['data'];
                    for (var i = 0; i < _this.tmpDistributorList.length; i++) {
                        for (var j = 0; j < territory.length; j++) {
                            if (_this.tmpDistributorList[i].networkId == territory[j].distributorID) {
                                _this.distributoList.push(_this.tmpDistributorList[i]);
                            }
                        }
                    }
                    // console.log(this.distributoList);
                }
            });
        }
    };
    SchemeDetailComponent.prototype.addDistributor = function (value) {
        var _this = this;
        console.log(value);
        var dialogRef = this.dialog.open(_add_distributor_add_distributor_component__WEBPACK_IMPORTED_MODULE_9__["AddDistributorComponent"], {
            width: '800px',
            data: { 'territory': this.selectedTerritory, value: value, 'schemeCode': this.schemeDetail.schemeCode }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.getSchemeDetail();
        });
    };
    SchemeDetailComponent.prototype.openEditDialog = function (field, value) {
        var _this = this;
        var dialogRef = this.dialog.open(_edit_scheme_edit_scheme_component__WEBPACK_IMPORTED_MODULE_5__["EditSchemeComponent"], {
            width: '512px',
            data: { field: field,
                value: value, 'schemeCode': this.schemeDetail.schemeCode, "isActive": this.schemeDetail.isActive }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.getSchemeDetail();
        });
    };
    SchemeDetailComponent.prototype.openEditDateDialog = function (field) {
        var _this = this;
        var dialogRef = this.dialog.open(_editdate_scheme_editdate_scheme_component__WEBPACK_IMPORTED_MODULE_8__["EditdateSchemeComponent"], {
            width: '512px',
            data: this.schemeDetail
        });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.getSchemeDetail();
        });
    };
    SchemeDetailComponent.prototype.removeScheme = function (partNumber) {
        var _this = this;
        console.log(partNumber);
        this.alert.delete("Scheme").then(function (result) {
            console.log(result);
            if (result) {
                _this.service.fetchData({ "partNumberCode": partNumber, "schemeCode": _this.schemeDetail.schemeCode }, "/removeschemefromproduct").subscribe(function (result) {
                    console.log(result);
                    if (result['message'] == 'Success') {
                        _this.toast.openSucess('Scheme ', 'Removed successfully');
                        _this.getSchemeDetail();
                    }
                });
            }
        });
    };
    SchemeDetailComponent.prototype.removeDistributor = function (id, code) {
        var _this = this;
        console.log(id);
        this.alert.delete("Scheme").then(function (result) {
            console.log(result);
            if (result) {
                _this.service.fetchData({ "distributorID": id, "schemeCode": code }, "removedistributor").subscribe(function (result) {
                    console.log(result);
                    if (result['message'] == 'Success') {
                        _this.toast.openSucess('Scheme ', 'Removed successfully');
                        _this.getSchemeDetail();
                    }
                });
            }
        });
    };
    SchemeDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-scheme-detail',
            template: __webpack_require__(/*! ./scheme-detail.component.html */ "./src/app/scheme/scheme-detail/scheme-detail.component.html"),
            styles: [__webpack_require__(/*! ./scheme-detail.component.scss */ "./src/app/scheme/scheme-detail/scheme-detail.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"], src_app_toast__WEBPACK_IMPORTED_MODULE_7__["SnackBarOverview"]])
    ], SchemeDetailComponent);
    return SchemeDetailComponent;
}());



/***/ }),

/***/ "./src/app/scheme/scheme-list/scheme-list.component.html":
/*!***************************************************************!*\
  !*** ./src/app/scheme/scheme-list/scheme-list.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/scheme.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Scheme</h2>\n        <p>Number of Scheme : <span>{{schemeList.length}}</span></p>\n      </div>\n    </div>\n  </div>\n  \n\n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n            <div class=\"table-head\">\n              <table class=\"sno-border\"> \n                <tr>\n                  <th class=\"w30\">&nbsp;</th>\n                  <th class=\"w100\">Date</th>\n                  <th class=\"w170\">Tittle</th>\n                  <th class=\"w110\">VALID FROM</th>\n                  <th class=\"w110\">VALIT TILL</th>\n                  <th class=\"w170\">Total Prodcut Code</th>\n                  <th>Description</th>\n                  <th class=\"w80\">STATUS</th>\n                  \n                </tr>\n              </table>\n            </div>\n          </div>\n          \n          <div class=\"table-container\">\n            <div class=\"table-content\">\n              <table class=\"sno-border\">\n                \n                <tr *ngFor=\"let scheme of schemeList ; let i=index\">\n                  <td class=\"w30\">{{i+1}}</td>\n                  <td class=\"w100\">{{scheme.createdOn | date:'EEEE, MMMM d, y'}}</td>\n                  <td class=\"w170\"><a class=\"link-btn\" mat-button routerLink=\"/scheme-detail/{{scheme.schemeCode}}\" routerLinkActive=\"active\">{{scheme.title}}</a></td>\n                  <td class=\"w110\">{{scheme.validFrom | date:' MMMM d, y'}}</td>\n                  <td class=\"w110\">{{scheme.validTill | date:' MMMM d, y'}}</td>\n                  <td class=\"w170\"><a class=\"link-btn\" mat-button routerLink=\"/scheme-detail/{{scheme.schemeCode}}\" routerLinkActive=\"active\">{{scheme.schemeProductDetails.length}}</a>\n                  </td>\n                  <td [innerHTML]=\"scheme.schemeDescription\">{{scheme.schemeDescription}}\n                    <div class=\"action-btns\">\n                      <!-- <a mat-button class=\"edit\"><i class=\"material-icons\">create</i> view</a> -->\n                      <button mat-button class=\"delete\" (click)=\"removeScheme(scheme.schemeCode)\" ><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                    </div>\n                  </td>\n                  <td class=\"w80\">\n                    <mat-slide-toggle class=\"switch-toggle\" color=\"accent\" [checked]=\"scheme.isActive==1\" (change)=\"isactive(scheme.schemeCode,scheme.isActive)\"></mat-slide-toggle>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n    \n  </div>\n  <div *ngIf=\"div\" class=\"data-not-available\" >\n    <div class=\"outer\">\n      <div class=\"iinear\">\n        <div class=\"figure\" matRipple>\n          <div class=\"header\">\n            <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n          </div>\n          <div class=\"description\">\n            \n            <div class=\"img\">\n              <i class=\"material-icons\">error_outline</i>\n            </div>\n            \n            <div class=\"cs-heading\">\n              <h2>Data Not Available</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n</div>\n<div *ngIf=\"userType==1\" class=\"fixed-multibtn-botm\">\n  <ul>\n    <li><a  matTooltip=\"Add New\" matRipple routerLink=\"/add-scheme\" routerLinkActive=\"active\"><i class=\"material-icons\">add</i></a></li>\n  </ul>\n</div>\n<div class=\"h50\"></div>\n"

/***/ }),

/***/ "./src/app/scheme/scheme-list/scheme-list.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/scheme/scheme-list/scheme-list.component.ts ***!
  \*************************************************************/
/*! exports provided: SchemeListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchemeListComponent", function() { return SchemeListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");





var SchemeListComponent = /** @class */ (function () {
    function SchemeListComponent(service, dialog, toast) {
        this.service = service;
        this.dialog = dialog;
        this.toast = toast;
        this.schemeList = [];
        this.div = false;
        this.loader = false;
        this.productSchemeList();
    }
    SchemeListComponent.prototype.ngOnInit = function () {
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        console.log(this.userType);
    };
    SchemeListComponent.prototype.productSchemeList = function () {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ isActive: 2 }, "getallscheme").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['message'] == 'Success') {
                _this.schemeList = result['data'];
            }
            else {
                _this.div = true;
                _this.schemeList = [];
            }
        });
    };
    // removeScheme(schemeCode)
    // {
    //   this.dialog.delete("Scheme").then((result) => {
    //     console.log(result);
    //     if(result)
    //     {
    //       this.service.fetchData({schemeCode:schemeCode},"/deactivatescheme").subscribe((result)=>{
    //         console.log(result);
    //         if(result['message']=='Success')
    //         {
    //           this.toast.openSucess('Scheme removed successfully','');
    //           this.productSchemeList();
    //         }
    //       })
    //     }
    //   });
    // }
    SchemeListComponent.prototype.isactive = function (schemeCode, isActive) {
        var _this = this;
        console.log(isActive, schemeCode);
        if (isActive == '1') {
            this.service.fetchData({ schemeCode: schemeCode }, "deactivatescheme").subscribe(function (result) {
                console.log(result);
                if (result['message'] == "Success") {
                    _this.toast.openSucess('Scheme ', 'Deactivated');
                    _this.productSchemeList();
                }
            });
        }
        else {
            this.service.fetchData({ schemeCode: schemeCode, isActive: 1 }, "modifyscheme").subscribe(function (result) {
                console.log(result);
                if (result['message'] == "Success") {
                    _this.toast.openSucess('Scheme ', 'Activated');
                    _this.productSchemeList();
                }
            });
        }
    };
    SchemeListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-scheme-list',
            template: __webpack_require__(/*! ./scheme-list.component.html */ "./src/app/scheme/scheme-list/scheme-list.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_3__["DialogComponent"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"]])
    ], SchemeListComponent);
    return SchemeListComponent;
}());



/***/ }),

/***/ "./src/app/session.service.ts":
/*!************************************!*\
  !*** ./src/app/session.service.ts ***!
  \************************************/
/*! exports provided: AuthGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuard", function() { return AuthGuard; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");






var AuthGuard = /** @class */ (function () {
    function AuthGuard(loc, router, ses, service) {
        this.loc = loc;
        this.router = router;
        this.ses = ses;
        this.service = service;
        this.user = [];
        this.href = '';
    }
    AuthGuard.prototype.canActivate = function (route, state) {
        var _this = this;
        this.ses.getSe().subscribe(function (data) {
            _this.user = data;
            console.log(_this.user);
        }, function (error) {
            console.log('err');
        });
        if (this.user.st_log) {
            console.log(this.user);
            // const location: RouterStateSnapshot = this.loc.location;
            // (this.loc.Location._platformStrategy._platformLocation.location)
            // const snapshot: RouterStateSnapshot = this.router.routerState.snapshot;
            // console.log(snapshot);
            // console.log(this.router);
            // console.log(this.router.url,"Current URL");
            // this.href = this.router.url;
            // this.href = window.location.href;
            // console.log(this.href);
            console.log(this.user);
            this.service.datauser = this.user;
            this.service.can_active = '1';
            this.user.url = this.href;
            console.log(this.service.can_active);
            return true;
        }
        else {
            this.service.can_active = '';
            this.service.datauser = {};
            this.router.navigate([''], { queryParams: { returnUrl: state.url } });
            return false;
        }
    };
    AuthGuard = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_5__["Location"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _local_storage_service__WEBPACK_IMPORTED_MODULE_3__["sessionStorage"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"]])
    ], AuthGuard);
    return AuthGuard;
}());



/***/ }),

/***/ "./src/app/shared/pipes/my-filter.pipe.ts":
/*!************************************************!*\
  !*** ./src/app/shared/pipes/my-filter.pipe.ts ***!
  \************************************************/
/*! exports provided: MyFilterPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MyFilterPipe", function() { return MyFilterPipe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var MyFilterPipe = /** @class */ (function () {
    function MyFilterPipe() {
    }
    MyFilterPipe.prototype.transform = function (items, filter) {
        if (!items || !filter.search) {
            return items;
        }
        // filter items array, items which match and return true will be
        // kept, false will be filtered out
        if (filter.src === 'state') {
            return items.filter(function (item) { return item.indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src === 'territoryState') {
            return items.filter(function (item) { return item.stateName.indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src === 'territory') {
            return items.filter(function (item) { return item.territoryName.toUpperCase().indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src === 'district') {
            return items.filter(function (item) { return item.districtName.toUpperCase().indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src === 'territoryCity') {
            return items.filter(function (item) { return item.cityName.toUpperCase().indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src === 'territoryPincode') {
            return items.filter(function (item) { return ((item.pincode).toString()).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src === 'territoryDistrict') {
            return items.filter(function (item) { return (item.districtName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src == 'selectedPincodes') {
            return items.filter(function (item) { return (item.stateName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1 || (item.districtName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1 || (item.cityName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1 || ((item.pincode).toString()).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src == 'userSearch') {
            return items.filter(function (item) { return (item.userName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src == 'networkSearch') {
            return items.filter(function (item) { return (item.establishment).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1; });
        }
        if (filter.src == 'junior') {
            return items.filter(function (item) { return (item.userName).toUpperCase().indexOf(filter.search.toUpperCase()) !== -1; });
        }
    };
    MyFilterPipe = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
            name: 'myfilter',
            pure: false
        })
    ], MyFilterPipe);
    return MyFilterPipe;
}());



/***/ }),

/***/ "./src/app/task/add-task/add-task.component.html":
/*!*******************************************************!*\
  !*** ./src/app/task/add-task/add-task.component.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"loader\"> \n  <div class=\"cs-loader\">\n    <img src=\"assets/img/loader.png\" class=\"rotate\"> \n  </div>\n</div>\n<form [formGroup]=\"addTask\" (ngSubmit)=\"saveTask()\" ngxScrollToFirstInvalid >\n  <div class=\"main-container\">\n    <div class=\"middle-container\">\n      <div class=\"page-heading\">\n        <img src=\"assets/img/task.svg\" class=\"h-icon\">\n        <div class=\"heading-text\">\n          <h2>Add New Task</h2>\n          <p>Assign new task </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>Creat New Task</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s6\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Select Role Type\" formControlName=\"role\" required >\n                          <mat-option (click)=\"userList(user.roleId)\" *ngFor=\"let user of AllUserList \" value={{user.roleId}}>{{user.roleName}}</mat-option>\n                          <!-- <mat-option (click)=\"oherUserDiv()\" value=null>Other</mat-option> -->\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"submitted && e.role.errors\" >Network Type required</mat-error>\n                    </div>\n                  </div>\n                 <div class=\"col s6\">\n                  <div *ngIf=\"other\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput type=\"text\" placeholder=\"Other User Name\" formControlName=\"other\" required>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                 <div class=\"multi-all-select\" *ngIf=\"other==false\">\n                    <label>Sales User</label>\n                  <ng-multiselect-dropdown \n                  [placeholder]=\"'Select'\"\n                  [data]=\"saleslist\"\n                  [settings]=\"dropdownSettings\"\n                  formControlName=\"userId\"\n                  >\n                </ng-multiselect-dropdown>\n                 </div>\n                 </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col s6\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput [matDatepicker]=\"days\" [min]='currentDate' readonly placeholder=\"To Be Compelted By\" formControlName=\"deadline\"  required>\n                        <mat-datepicker-toggle matSuffix [for]=\"days\"></mat-datepicker-toggle>\n                        <mat-datepicker #days></mat-datepicker>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"submitted && e.deadline.errors\" >Task Deadline is required</mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s6\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Critical\" formControlName=\"taskPriority\"  >\n                          <mat-option value='1'>Currently Critical</mat-option>\n                          <mat-option value='2'>Potentially Critical</mat-option>\n                          <mat-option value='3'>Necessary</mat-option>\n                          <mat-option value='4'>Recommended </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"submitted && e.taskPriority.errors\" >Task Priority is required</mat-error>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col s12\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <textarea matInput placeholder=\"Remark\" class=\"h120\" formControlName=\"remarks\" required></textarea>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"submitted && e.remarks.errors\" >Remarks is required</mat-error>\n                    </div>\n                  </div>\n               </div>\n            </div>\n          <div>\n        </div>\n      </div>\n      <div class=\"col s8\">\n        <div class=\"highlights\">\n          <ul>\n            <!-- <li>Financial loss and Safety Related issues</li>\n            <li>Potential Financial or reputation loss, relationships with customer, statutory requirements</li> -->\n            <li *ngIf=\"addTask.value.taskPriority==1\">Financial loss and Safety Related issues</li>\n                      <li *ngIf=\"addTask.value.taskPriority==2\">Potential Financial or reputation loss, relationships with customer, statutory requirements</li>\n                      <li *ngIf=\"addTask.value.taskPriority==3\">Policies and instructions from management</li>\n                      <li *ngIf=\"addTask.value.taskPriority==4\">All others (no business impact)</li>\n          </ul>\n        </div>\n      </div>\n      <div class=\"col s4\">\n        <div class=\"cs-btn fixedd mt15 text-right\">\n          <div class=\"in-btn\">\n            <button mat-raised-button color=\"accent\">Save</button>\n          </div>\n        </div>\n      </div>\n      <div class=\"col s2\">&nbsp;</div>\n    </div>\n  </div>\n</div>\n</div>\n<div class=\"h50\"></div>\n</div>\n</form>"

/***/ }),

/***/ "./src/app/task/add-task/add-task.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/task/add-task/add-task.component.ts ***!
  \*****************************************************/
/*! exports provided: AddTaskComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddTaskComponent", function() { return AddTaskComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);









var AddTaskComponent = /** @class */ (function () {
    function AddTaskComponent(db, toast, router, route, dialog, formBuilder) {
        this.db = db;
        this.toast = toast;
        this.router = router;
        this.route = route;
        this.dialog = dialog;
        this.formBuilder = formBuilder;
        this.submitted = false; //for login button
        this.rolelists = [];
        this.taskForm = {};
        this.rolelisttask = [];
        this.distributorList = [];
        this.saleslist = [];
        this.territory = [];
        this.other = false;
        this.user = {};
        this.dropdownSettings = {};
        this.currentDate = new Date();
        this.active = {};
        this.rolelisttask1 = [];
        this.AllUserList = [];
        this.saleuserdatalist = [];
        this.rsm = [];
        this.asm = [];
        this.ti = [];
        this.finalsalesuser = [];
        this.tmpUserList = [];
        this.userSearch = {};
        this.searchList = [];
        this.taskValue = {};
        this.userIds = [];
        this.roles = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
    }
    AddTaskComponent.prototype.ngOnInit = function () {
        this.dropdownSettings = {
            singleSelection: false,
            idField: 'userId',
            textField: 'userName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.rolelist();
        this.addTask = this.formBuilder.group({
            role: [''],
            deadline: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            taskPriority: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            userId: [''],
            remarks: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            other: ['']
        });
    };
    Object.defineProperty(AddTaskComponent.prototype, "e", {
        get: function () { return this.addTask.controls; },
        enumerable: true,
        configurable: true
    });
    AddTaskComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
            jquery__WEBPACK_IMPORTED_MODULE_7__('#' + key).focus();
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    AddTaskComponent.prototype.rolelist = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            _this.loader = false;
            var systemuser = _this.rolelists.filter(function (x) { return x.userTypeId == 1; });
            _this.rolelisttask1 = systemuser[0].roles;
            var filterrolelead = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.rolelisttask = filterrolelead[0].roles;
            _this.AllUserList = _this.rolelisttask.concat(_this.rolelisttask1);
            console.log(_this.AllUserList);
            console.log(_this.rolelisttask1);
            console.log(_this.AllUserList);
            console.log(_this.rolelisttask);
            if (_this.userRole == 1) {
                var filterArray = _this.AllUserList.filter(function (row) { return row.roleId != 1; });
                console.log(filterArray);
                _this.AllUserList = filterArray;
            }
            if (_this.userRole == 6) {
                var filterArray = _this.AllUserList.filter(function (row) { return row.roleId != 6 && row.roleId != 1 && row.roleId != 2 && row.roleId != 3 && row.roleId != 4 && row.roleId != 5 && row.roleId != 16 && row.roleId != 17; });
                console.log(filterArray);
                _this.AllUserList = filterArray;
            }
            if (_this.userRole == 7) {
                var filterArray = _this.AllUserList.filter(function (row) { return row.roleId != 6 && row.roleId != 7 && row.roleId != 1 && row.roleId != 2 && row.roleId != 3 && row.roleId != 4 && row.roleId != 5 && row.roleId != 16 && row.roleId != 17; });
                console.log(filterArray);
                _this.AllUserList = filterArray;
            }
            if (_this.userRole == 8) {
                var filterArray = _this.AllUserList.filter(function (row) { return row.roleId != 6 && row.roleId != 7 && row.roleId != 8 && row.roleId != 1 && row.roleId != 2 && row.roleId != 3 && row.roleId != 4 && row.roleId != 5 && row.roleId != 16 && row.roleId != 17; });
                console.log(filterArray);
                _this.AllUserList = filterArray;
            }
            console.log(_this.AllUserList);
        });
    };
    AddTaskComponent.prototype.userList = function (role) {
        var _this = this;
        this.saleslist = [];
        console.log(role);
        console.log(this.userType);
        if (this.userType == 1) {
            console.log(role);
            // console.log(id);
            this.other = false;
            this.loader = true;
            this.db.fetchData({ "role": role, "currentPage": 1, "pageSize": 50 }, "user/list").subscribe(function (result) {
                console.log(result);
                _this.loader = false;
                if (result['status'] == 'Success') {
                    _this.saleslist = result['data'];
                    console.log(_this.saleslist);
                    _this.tmpUserList = _this.saleslist;
                }
            });
        }
        else {
            this.saleuserdatalist = this.user.data.salesUser.staffWithJuniors.juniors;
            console.log(this.saleuserdatalist);
            console.log(role);
            if (this.userRole == 6 && role == 10) {
                for (var i = 0; i < this.saleuserdatalist.length; i++) {
                    this.rsm.push(this.saleuserdatalist[i]);
                }
                for (var k = 0; k < this.rsm.length; k++) {
                    for (var q = 0; q < this.rsm[k].juniors.length; q++) {
                        this.asm.push(this.rsm[k].juniors[q]);
                    }
                }
                for (var j = 0; j < this.asm.length; j++) {
                    for (var z = 0; z < this.asm[j].juniors.length; z++) {
                        this.ti.push(this.asm[j].juniors[z]);
                    }
                }
            }
            if (this.userRole == 6 && role == 8) {
                for (var i = 0; i < this.saleuserdatalist.length; i++) {
                    this.rsm.push(this.saleuserdatalist[i]);
                }
                for (var k = 0; k < this.rsm.length; k++) {
                    for (var q = 0; q < this.rsm[k].juniors.length; q++) {
                        this.asm.push(this.rsm[k].juniors[q]);
                    }
                }
            }
            if (this.userRole == 6 && role == 7) {
                for (var i = 0; i < this.saleuserdatalist.length; i++) {
                    this.rsm.push(this.saleuserdatalist[i]);
                }
            }
            if (this.userRole == 7 && role == 10) {
                for (var i = 0; i < this.saleuserdatalist.length; i++) {
                    this.asm.push(this.saleuserdatalist[i]);
                }
                for (var k = 0; k < this.asm.length; k++) {
                    for (var q = 0; q < this.asm[k].juniors.length; q++) {
                        this.ti.push(this.asm[k].juniors[q]);
                    }
                }
            }
            if (this.userRole == 7 && role == 8) {
                for (var i = 0; i < this.saleuserdatalist.length; i++) {
                    this.asm.push(this.saleuserdatalist[i]);
                }
            }
            if (this.userRole == 7 && role == 10) {
                for (var i = 0; i < this.saleuserdatalist.length; i++) {
                    this.asm.push(this.saleuserdatalist[i]);
                }
                for (var k = 0; k < this.asm.length; k++) {
                    for (var q = 0; q < this.asm[k].juniors.length; q++) {
                        this.ti.push(this.asm[k].juniors[q]);
                    }
                }
            }
            if (this.userRole == 8 && role == 10) {
                for (var i = 0; i < this.saleuserdatalist.length; i++) {
                    this.ti.push(this.saleuserdatalist[i]);
                }
            }
            if (role == 10) {
                for (var a = 0; a < this.ti.length; a++) {
                    var indexExist = this.saleslist.findIndex(function (row) { return row.userId == _this.ti[a].userId; });
                    if (indexExist == -1) {
                        this.saleslist.push(this.ti[a]);
                    }
                }
            }
            else if (role == 8) {
                for (var a = 0; a < this.asm.length; a++) {
                    var indexExist = this.saleslist.findIndex(function (row) { return row.userId == _this.asm[a].userId; });
                    if (indexExist == -1) {
                        this.saleslist.push(this.asm[a]);
                    }
                }
            }
            else {
                for (var a = 0; a < this.rsm.length; a++) {
                    var indexExist = this.saleslist.findIndex(function (row) { return row.userId == _this.rsm[a].userId; });
                    if (indexExist == -1) {
                        this.saleslist.push(this.rsm[a]);
                    }
                }
            }
        }
        console.log(this.saleslist);
    };
    AddTaskComponent.prototype.UserSearch = function () {
        this.saleslist = [];
        for (var i = 0; i < this.tmpUserList.length; i++) {
            this.userSearch.search = this.userSearch.search.toLowerCase();
            this.searchList = this.tmpUserList[i]['userName'].toLowerCase();
            if (this.searchList.includes(this.userSearch.search)) {
                this.saleslist.push(this.tmpUserList[i]);
            }
        }
    };
    AddTaskComponent.prototype.oherUserDiv = function () {
        this.other = true;
        // this.addTask.controls['userId'].setValue(null);
        // this.addTask.controls['role'].setValue(null);
    };
    AddTaskComponent.prototype.getUserid = function (id) {
        console.log(id);
        this.addTask.controls['userId'].setValue(id);
    };
    AddTaskComponent.prototype.saveTask = function () {
        var _this = this;
        this.submitted = true;
        console.log(this.addTask.value);
        if (this.addTask.invalid) {
            console.log("*****invalid data*****");
            console.log(this.addTask.value);
            return;
        }
        else {
            for (var i = 0; i < this.addTask.value.userId.length; i++) {
                this.userIds.push(this.addTask.value.userId[i]['userId']);
                this.roles.push(parseInt(this.addTask.value.role));
            }
            if (this.addTask.value.other != '') {
                this.taskValue = { "other": this.addTask.value.other, "deadline": moment__WEBPACK_IMPORTED_MODULE_8__(this.addTask.value.deadline).format('YYYY-MM-DD '), "remarks": this.addTask.value.remarks, "taskPriority": this.addTask.value.taskPriority };
            }
            else {
                this.taskValue = { "userIds": this.userIds, "roles": this.roles, "deadline": moment__WEBPACK_IMPORTED_MODULE_8__(this.addTask.value.deadline).format('YYYY-MM-DD '), "remarks": this.addTask.value.remarks, "taskPriority": parseInt(this.addTask.value.taskPriority) };
            }
            console.log(this.addTask.value);
            this.db.fetchData(this.taskValue, "task/add").subscribe(function (result) {
                console.log(result);
                if (result['status'] == 'Success') {
                    _this.dialog.success();
                    _this.router.navigate(['/task-list']);
                }
            });
        }
    };
    AddTaskComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-task',
            template: __webpack_require__(/*! ./add-task.component.html */ "./src/app/task/add-task/add-task.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"]])
    ], AddTaskComponent);
    return AddTaskComponent;
}());



/***/ }),

/***/ "./src/app/task/assigntask/assigntask.component.html":
/*!***********************************************************!*\
  !*** ./src/app/task/assigntask/assigntask.component.html ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<form #f=\"ngForm\" (ngSubmit)=\"f.valid && onSubmit()\">\n  <div class=\"main-container\">\n    <div *ngIf=\"loader\"> \n      <div class=\"cs-loader\">\n        <img src=\"assets/img/loader.png\" class=\"rotate\"> \n      </div>\n    </div>\n    <div class=\"middle-container\">\n      <div class=\"page-heading\">\n        <img src=\"assets/img/task.svg\" class=\"h-icon\">\n        <div class=\"heading-text\">\n          <h2>Assign Lead Task</h2>\n          <p>Assign Lead Task</p>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s2\">&nbsp;</div>\n          <div class=\"col s8\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>Assign Task</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                </div>\n                <div class=\"row\">\n                  <div class=\"col s6\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Select {{rolename}}\" name=\"distributor\" #distributor=\"ngModel\" [(ngModel)]=\"taskForm.distributor\" [ngClass]=\"{ 'is-invalid': f.submitted && distributor.invalid }\" required>\n                          <mat-option   (click)=\"getSalesList(distributor.pin)\" *ngFor=\"let distributor of distributorList\" value=\"{{distributor.establishment}}\">\n                            {{distributor.establishment}}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && distributor.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"distributor.errors.required\">Distributor is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  \n                  \n                  \n                  \n                  <div class=\"col s6 \">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Territory\" id=\"tid\" name=\"tid\" #tid=\"ngModel\" [(ngModel)]=\"taskForm.tid\">\n                          <mat-option (click)=\"sale()\" *ngFor='let territoryId of salesid' value=\"{{territoryId.territoryID}}\">{{territoryId.territoryName}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      \n                      <mat-error class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"!salesid || salesid.length==0\">No Data Found!</mat-error>\n                      </mat-error>\n                      \n                    </div>\n                  </div>\n                  \n                  \n                  \n                  <div class=\"col s6\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <input matInput [matDatepicker]=\"days\" [min]='currentDate' readonly placeholder=\"To Be Compelted By\" name=\"deadline\" [(ngModel)]=\"taskForm.deadline\"  required>\n                        <mat-datepicker-toggle matSuffix [for]=\"days\"></mat-datepicker-toggle>\n                        <mat-datepicker #days></mat-datepicker>\n                      </mat-form-field>\n                      <!-- <mat-error *ngIf=\"submitted && e.deadline.errors\" >Task Deadline is required</mat-error> -->\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s6\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Critical\" name=\"taskPriority\" [(ngModel)]=\"taskForm.taskPriority\"  >\n                          <mat-option value=1>Currently Critical</mat-option>\n                          <mat-option value=2>Potentially Critical</mat-option>\n                          <mat-option value=3>Necessary</mat-option>\n                          <mat-option value=4>Recommended </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      \n                      <!-- <mat-error *ngIf=\"submitted && e.taskPriority.errors\" >Task Priority is required</mat-error> -->\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col s6\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Select Sales User\" name=\"sales\" #sales=\"ngModel\" [(ngModel)]=\"taskForm.sales\" [ngClass]=\"{ 'is-invalid': f.submitted && sales.invalid }\" required>\n                          <span *ngFor=\"let sales of salesList\">\n                            <mat-option  value=\"{{sales.userId}}\" >\n                              {{sales.userName}}\n                            </mat-option>\n                          </span>\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error  class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"salesList.length==0 && taskForm.tid\">No Data Found!</mat-error>\n                      </mat-error>\n                      <mat-error *ngIf=\"f.submitted && sales.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"sales.errors.required\">Sales user is required</mat-error>\n                      </mat-error>\n                      \n                    </div>\n                  </div>\n                  <div class=\"col s6\">\n                    <div class=\"from-fields\">\n                      <div class=\"control-field\" >\n                        <mat-form-field class=\"cs-input wp100 h-input\">\n                          <textarea matInput placeholder=\"Description\"  name=\"remarks\" [(ngModel)]=\"taskForm.remarks\"  #remarks=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && remarks.invalid }\" required></textarea>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && remarks.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"remarks.errors.required\">Remark is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- <div class=\"col s12\">\n                    <div class=\"from-fields\">\n                      <div class=\"control-field\" >\n                        <mat-form-field class=\"cs-input wp100 h-input\">\n                          <textarea matInput placeholder=\"Description\"  name=\"remarks\" [(ngModel)]=\"taskForm.remarks\"  #remarks=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && remarks.invalid }\" required></textarea>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && remarks.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"remarks.errors.required\">Remark is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                  </div> -->\n                </div>\n                <div class=\"col s8\">\n                  <div class=\"highlights\">\n                    <ul>\n                      <li *ngIf=\"taskForm.taskPriority==1\">Financial loss and Safety Related issues</li>\n                      <li *ngIf=\"taskForm.taskPriority==2\">Potential Financial or reputation loss, relationships with customer, statutory requirements</li>\n                      <li *ngIf=\"taskForm.taskPriority==3\">Policies and instructions from management</li>\n                      <li *ngIf=\"taskForm.taskPriority==4\">All others (no business impact)</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col s2\">&nbsp;</div>\n            <div class=\"col s2\">&nbsp;</div>\n            <div class=\"col s8\">\n              <div class=\"cs-btn fixedd mt32 text-right\">\n                <div class=\"in-btn\">\n                  <button mat-raised-button color=\"accent\">Save</button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col s2\">&nbsp;</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"h50\"></div>\n  </div>\n</form>"

/***/ }),

/***/ "./src/app/task/assigntask/assigntask.component.scss":
/*!***********************************************************!*\
  !*** ./src/app/task/assigntask/assigntask.component.scss ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svYXNzaWdudGFzay9hc3NpZ250YXNrLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/task/assigntask/assigntask.component.ts":
/*!*********************************************************!*\
  !*** ./src/app/task/assigntask/assigntask.component.ts ***!
  \*********************************************************/
/*! exports provided: AssigntaskComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssigntaskComponent", function() { return AssigntaskComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);






// import moment = require('moment');

var AssigntaskComponent = /** @class */ (function () {
    function AssigntaskComponent(db, toast, router, route, dialog) {
        this.db = db;
        this.toast = toast;
        this.router = router;
        this.route = route;
        this.dialog = dialog;
        this.rolelists = [];
        this.taskForm = {};
        this.salesid = [];
        this.rolelisttask = [];
        this.distributorList = [];
        this.segments = [];
        this.salesList = [];
        this.networklist = [];
        this.segdata = [];
        this.distlist = [];
        this.currentDate = new Date();
    }
    AssigntaskComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            _this.db.fetchData({ "leadId": _this.id }, 'lead/list').subscribe(function (response) {
                console.log(response);
                _this.networklist = response['data'][0];
                console.log(_this.networklist);
                _this.taskForm.distributor = _this.networklist.establishment;
                console.log(_this.taskForm.distributor);
                _this.getDistributorList(_this.id);
            });
        });
    };
    AssigntaskComponent.prototype.getDistributorList = function (id) {
        var _this = this;
        console.log(id);
        this.loader = true;
        this.db.fetchData({ "leadId": id }, 'lead/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.distributorList = response['data'];
            _this.distlist = response['data'][0];
            _this.segments = response['data'][0]['leadSegments'];
            console.log(_this.distributorList);
            console.log(_this.segments);
            for (var j = 0; j < _this.segments.length; j++) {
                _this.segdata.push(_this.segments[j].segmentCode);
            }
            console.log(_this.segdata);
            _this.getSalesList(_this.distlist.pin);
        });
    };
    AssigntaskComponent.prototype.getSalesList = function (pin) {
        var _this = this;
        this.loader = true;
        console.log(pin);
        console.log(this.segdata);
        this.db.fetchData({ 'pinCode': pin, 'segments': this.segdata }, 'territory/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.salesid = response['data'];
            console.log(_this.salesid);
        });
    };
    AssigntaskComponent.prototype.sale = function () {
        var _this = this;
        this.loader = true;
        console.log(this.taskForm.tid);
        this.db.fetchData({}, 'territory/salesusers?territoryIds=' + this.taskForm.tid).subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.salesList = response['data'];
            console.log("check data");
            console.log("check htis" + _this.salesList);
        });
        this.taskForm.salesid = this.salesid;
    };
    AssigntaskComponent.prototype.onSubmit = function () {
        var _this = this;
        this.loader = true;
        console.log(this.taskForm);
        this.db.fetchData({
            "leadId": this.id,
            "userId": this.taskForm.sales,
            "remarks": this.taskForm.remarks,
            "deadline": moment__WEBPACK_IMPORTED_MODULE_6__(this.taskForm.deadline).format('YYYY-MM-DD'),
            "taskPriority": this.taskForm.taskPriority
        }, 'lead/assign').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.toast.openSucess('Task assign successfully', '');
                _this.router.navigate(['/task-list']);
            }
            _this.message = response['message'];
        });
    };
    AssigntaskComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-assigntask',
            template: __webpack_require__(/*! ./assigntask.component.html */ "./src/app/task/assigntask/assigntask.component.html"),
            styles: [__webpack_require__(/*! ./assigntask.component.scss */ "./src/app/task/assigntask/assigntask.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], AssigntaskComponent);
    return AssigntaskComponent;
}());



/***/ }),

/***/ "./src/app/task/task-detail/task-detail.component.html":
/*!*************************************************************!*\
  !*** ./src/app/task/task-detail/task-detail.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\">\n    </div>\n  </div>\n  <div class=\"middle-container\">\n    \n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/task-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <!-- <h2 *ngIf=\"user.data.role!='10'\">{{taskdetail.userName}}</h2> -->\n        <p class=\"light\"></p>\n      </div>\n    </div>\n    \n    <div class=\"left-auto\">\n      <div class=\"cs-btn fixedd\" *ngIf=\"((user.data.role=='1' && taskdetail.taskStatusName=='Completed') || (userId==taskdetail.createBy && taskdetail.taskStatusName=='Completed'))\">\n        <div class=\"in-btn\" *ngIf=\"reopenDiv==false\">\n          <button mat-raised-button color=\"accent\" (click)=\"reOpenDiv()\" mat-stroked-button >Reopen</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col {{(taskdetail?.taskStatusName=='Completed' && !reopenDiv) ? 's12' : 's8'}}\">\n          <div class=\"details-info padding0\">\n            <div class=\"basic-details\">\n              <div class=\"col s12 cs-figure padding0\">\n                <h2>Task Detail</h2>\n                <ul>\n                  <!-- <li *ngIf=\"userType==1\"> -->\n                      <li *ngIf=\"user.data.role!='10'\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Assigned To</span>\n                        <p>{{taskdetail.userName}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <!-- <li *ngIf=\"userType==1\"> -->\n                      <li *ngIf=\"user.data.role!='10'\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Role</span>\n                        <!-- <p *ngIf=\"taskdetail.establishmentName!=''\">Other</p> -->\n                        <p >{{roleName}}</p>\n                        \n                      </div>\n                    </div>\n                  </li>\n\n                  <li *ngIf=\"taskdetail.leadEstablishment\">\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Lead Name</span>\n                          <!-- <p>{{taskdetail.leadEstablishment}}routerLink=\"/lead-detail/{{taskdetail.referenceId}}\" routerLinkActive=\"active\"</p> -->\n                          <p *ngIf=\"taskdetail.taskTypeName=='Lead'\"><a class=\"link-btn\" (click)=\"openleaddetail(taskdetail.referenceId)\"  routerLinkActive=\"active\" >{{taskdetail.leadEstablishment}}</a></p>\n                          \n                        </div>\n                      </div>\n                  </li>\n\n\n                  <li *ngIf=\"taskdetail.leadEstablishment && taskdetail.taskStatusName=='Completed'\">\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Interested</span>\n                          <p *ngIf=\"taskdetail.leadConverted\">Yes</p>\n                          <p *ngIf=\"!taskdetail.leadConverted\">No</p>\n                        </div>\n                      </div>\n                  </li>\n                  <li *ngIf=\"taskdetail.taskTypeName != 'Lead'\">\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Created On</span>\n                          <p>{{taskdetail.createdOn|date:'d MMM y'}}</p>\n                        </div>\n                      </div>\n                  </li>\n                  <li *ngIf=\"taskdetail.taskTypeName == 'Lead'\">\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Date Created</span>\n                          <p>{{taskdetail.createdOn |date:'d MMM y'}}</p>\n                          \n                        </div>\n                      </div>\n                  </li>\n                  \n                  <li *ngIf=\"taskdetail.createdByName!=''\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Created By</span>\n                        <p>{{taskdetail.createdByName}}</p>\n                        \n                      </div>\n                    </div>\n                </li>\n                <li *ngIf=\"taskdetail.taskStatusName=='Completed'\" >\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Completed By</span>\n                        <p>{{taskdetail.modifiedByName}}</p>\n                      </div>\n                    </div>\n                </li>\n\n                  \n                  <!-- <li *ngIf=\"taskdetail.taskTypeName!='Lead'\">\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Created On</span>\n                          <p>{{taskdetail.createdOn|date:'d MMM y'}}</p>\n                        </div>\n                      </div>\n                  </li>\n                  <li *ngIf=\"taskdetail.taskStatusName=='Completed'\" >\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Completed By</span>\n                          <p>{{taskdetail.modifiedByName}}</p>\n                        </div>\n                      </div>\n                  </li> -->\n                  \n                </ul>\n                <ul class=\"mt15\">\n                  <li *ngIf=\"taskdetail.taskTypeName=='Lead'\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Task Type</span>\n                        <p>{{taskdetail.taskTypeName}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Status</span>\n                          <p>{{taskdetail.taskStatusName}}</p>\n                        </div>\n                      </div>\n                  </li>\n                  <li *ngIf=\"taskdetail.taskPriorityName\">\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Priority</span>\n                          <p *ngIf=\"taskdetail.taskPriority==1\">Currently Critical</p>\n                            <p *ngIf=\"taskdetail.taskPriority==2\">Potentially Critical</p>\n                            <p *ngIf=\"taskdetail.taskPriority==3\">Necessary</p>\n                            <p *ngIf=\"taskdetail.taskPriority==4\">Recommended</p>\n                        </div>\n                      </div>\n                  </li>\n                  <!-- <li *ngIf=\"taskdetail.taskTypeName=='Lead'\">\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Date Created</span>\n                          <p>{{taskdetail.createdOn |date:'d MMM y'}}</p>\n                          \n                        </div>\n                      </div>\n                  </li>\n                  <li *ngIf=\"taskdetail.createdByName!=''\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Created By</span>\n                        <p>{{taskdetail.createdByName}}</p>\n                        \n                      </div>\n                    </div>\n                </li> -->\n                <li *ngIf=\"taskdetail.modifiedByName\">\n                  <div class=\"outer\">\n                    <div class=\"inner\">\n                      <span>Updated On</span>\n                      <p >{{taskdetail.modifiedOn |date:'d MMM y'}}</p>\n                    </div>\n                  </div>\n              </li>\n                <li *ngIf=\"taskdetail.modifiedByName\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Updated By</span>\n                        <p >{{taskdetail.modifiedByName}}</p>\n                      </div>\n                    </div>\n                </li>\n\n\n                 \n                </ul>\n\n                <ul class=\"mt15\">\n                  <li style=\"border-left: 1px solid #B29D9D; min-height: 100px;\">\n                      <span>Description</span>\n                      <p>{{taskdetail.remarks}}</p>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n\n        <div *ngIf=\"taskdetail.taskStatusName && ((taskdetail.taskStatusName != 'Completed') || (taskdetail.taskStatusName=='Completed' && reopenDiv))\" class=\"col s4\">\n\n          <div class=\"details-info padding0\">\n            <div class=\"basic-details\">\n\n              <div *ngIf=\"taskdetail.taskStatusName=='InProcess' || taskdetail.taskStatusName=='Reopen'\" class=\"cs-figure\">\n                <h2 class=\"pb0\">Update Task</h2>\n              </div>\n\n              <div *ngIf=\"taskdetail.taskStatusName=='InProcess' || taskdetail.taskStatusName=='Reopen'\" class=\"from-fields\">\n                  <div class=\"row\">\n                    <div class=\"col s12 padding0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr\">\n                          <mat-select placeholder=\"Select Action Type\" name=\"action\" (ngModelChange)=\"actionOnTask($event)\" #action=\"ngModel\" [(ngModel)]=\"taskaction.action\">\n                            <mat-option value=\"1\">Leave a Remark</mat-option>\n                            <mat-option value=\"2\">Close Task</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                      </div>\n                    </div>\n                    \n                    <div *ngIf=\"taskaction.action\" class=\"col s12 padding0\">\n                      <div class=\"control-field\">\n                        <mat-form-field   class=\"cs-input infix-bodr8\">\n                          <textarea matInput placeholder=\"Leave a Remark\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"data.remarks\" class=\"h60\"></textarea>\n                        </mat-form-field>\n                      </div>\n                    </div>\n                    \n                    <div *ngIf=\"taskaction.action==1\" class=\"col s12\">\n                      <div  class=\"cs-btn fixedd mt15 text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" mat-stroked-button [disabled]=\"!data.remarks\" (click)=\"UpdateRemark(taskdetail.taskId)\" >Save</button>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div *ngIf=\"taskaction.action==2 && taskdetail.taskType!=1\" class=\"col s12\">\n                      <div class=\"cs-btn mt15 text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" mat-stroked-button (click)=\"closetask(taskdetail.taskId)\" >Save</button>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    \n                    <div *ngIf=\"taskaction.action==2 && taskdetail.taskType==1\" class=\"col s12 padding0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <mat-select placeholder=\"Lead Status\" name=\"leadConverted\" #leadConverted=\"ngModel\" [(ngModel)]=\"data.leadConverted\">\n                            <mat-option value=true>Accept</mat-option>\n                            <mat-option value=false>Reject</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                      </div>\n                    </div> \n                    <div  *ngIf=\"taskaction.action==2 && taskdetail.taskType==1\" class=\"col s12\">\n                      <div class=\"cs-btn  mt15 text-right\">\n                        <div class=\"in-btn\">\n                          <button mat-raised-button color=\"accent\" mat-stroked-button (click)=\"closeLead(taskdetail.taskId)\" >Save</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n\n              <div *ngIf=\"taskdetail.taskStatusName=='Completed' && reopenDiv==true\" class=\"cs-figure\">\n                  <h2 class=\"pb0\">Update Reopen Remark</h2>\n              </div>\n\n              <div *ngIf=\"taskdetail.taskStatusName=='Completed' && reopenDiv==true\" class=\"from-fields\">\n                  <div  class=\"row\">\n                    <div>\n                      <div  class=\"col s12 padding0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input infix-bodr\">\n                            <textarea matInput placeholder=\"Leave a Remark\" name=\"remarks\" #remarks=\"ngModel\" [(ngModel)]=\"data.remarks\" class=\"h120\"></textarea>\n                          </mat-form-field>\n                        </div>\n                        <div class=\"cs-btn text-right mt15\">\n                          <div class=\"in-btn\">\n                            <button (click)=\"reopenDiv=false\" mat-raised-button color=\"warn\" mat-stroked-button >Cancel</button>\n\n                            <button mat-raised-button color=\"accent\" mat-stroked-button (click)=\"reOpenTask(taskdetail.taskId)\" >Submit</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"taskdetail.taskDetails && taskdetail.taskDetails.length>0\" class=\"row mt15\">\n        <div class=\"col s12\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>Remark Detail</h2>\n              </div>\n              <div class=\"cs-table\">\n                <div class=\"table-head\">\n                  <table>\n                    <tr>\n                      <th class=\"w180\">Date</th>\n                      <th class=\"w180\">User</th>\n                      <th class=\"w150\">Role</th>\n                      <th>Remark</th>\n                    </tr>\n                  </table>\n                </div>\n                \n                <div class=\"table-container\">\n                  <div class=\"table-content none-shadow\">\n                    <table>\n                      <tr *ngFor=\"let list of taskdetail.taskDetails;let index=index\">\n                        <td class=\"w180\">{{list.createdOn | date :'EEEE, MMMM d, y'}}</td>\n                        <td class=\"w180\">{{list.createdByName}}</td>\n                        <td *ngIf=\"list.role==1\" class=\"w150\">Admin</td>\n                        <td *ngIf=\"list.role==6\" class=\"w150\">N.S.M</td>\n                        <td *ngIf=\"list.role==7\" class=\"w150\">R.S.M</td>\n                        <td *ngIf=\"list.role==8\" class=\"w150\">A.S.M</td>\n                        <td *ngIf=\"list.role==10\" class=\"w150\">Territory Incharge</td>\n                        <td>{{list.remarks}}\n                            <div *ngIf=\"userId==list.createBy && taskdetail.taskStatusName !='Completed'\" class=\"action-btns\">\n                                <a mat-button class=\"edit\" (click)=\"edit_remarks(index)\"><i class=\"material-icons\"  >create</i>Edit</a>\n                                <a mat-button class=\"delete\" (click)=\"delete_remarks(list.taskDetailId)\"><i class=\"material-icons\" >delete_sweep</i>Delete</a>\n                            </div>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col s4 empty\">&nbsp;</div>\n      </div>\n    </div>\n  </div>\n  \n</div>\n\n<div class=\"h50\"></div>\n\n"

/***/ }),

/***/ "./src/app/task/task-detail/task-detail.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/task/task-detail/task-detail.component.ts ***!
  \***********************************************************/
/*! exports provided: TaskDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaskDetailComponent", function() { return TaskDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _distribution_update_network_update_network_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../distribution/update-network/update-network.component */ "./src/app/distribution/update-network/update-network.component.ts");








// import { NavigationComponent } from '../../navigation/navigation.component';
// import { Navigation } from 'selenium-webdriver';
var TaskDetailComponent = /** @class */ (function () {
    // @Input NavigationComponent
    function TaskDetailComponent(alrt, db, router, route, dialog, toast) {
        var _this = this;
        this.alrt = alrt;
        this.db = db;
        this.router = router;
        this.route = route;
        this.dialog = dialog;
        this.toast = toast;
        this.loader = false;
        this.taskdetail = {};
        this.data = {};
        this.user = {};
        this.taskdata = {};
        this.tasklist = [];
        this.rolelists = [];
        this.rolelistsales1 = [];
        this.taskremarks = [];
        this.taskaction = {};
        this.reopenDiv = false;
        // this.loader=true;
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.task_id = params.id;
            console.log(_this.task_id);
        });
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.rolelist();
    }
    TaskDetailComponent.prototype.ngOnInit = function () {
    };
    TaskDetailComponent.prototype.task_detail = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'task/detail/' + this.task_id).subscribe(function (response) {
            console.log(response);
            setTimeout(function () {
                _this.loader = false;
            }, 700);
            if (response['status'] == "Success") {
                _this.taskdetail = response['data'];
                console.log(_this.taskdetail);
                for (var i = 0; i < _this.rolelistsales1.length; i++) {
                    if (_this.taskdetail['role'] == _this.rolelistsales1[i]['roleId']) {
                        _this.roleName = _this.rolelistsales1[i]['roleName'];
                    }
                }
                console.log(_this.roleName);
            }
        });
    };
    TaskDetailComponent.prototype.UpdateRemark = function (uid) {
        var _this = this;
        var value = { "taskId": uid, "remarks": this.data['remarks'], "taskStatus": 1, "userId": this.userId };
        this.data.taskId = uid;
        this.data.userId = this.userId;
        console.log(this.data);
        this.db.fetchData(value, "taskdetail/add").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.data = {};
                _this.toast.openSucess("Remark Update", "SuccessFully");
                _this.task_detail();
                _this.taskaction.action = null;
            }
        });
    };
    TaskDetailComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.rolelists = response['data'];
            }
            _this.task_detail();
            var filterrolesales = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.rolelistsales1 = filterrolesales[0].roles;
            console.log(_this.rolelistsales1);
        });
    };
    TaskDetailComponent.prototype.delete_remarks = function (id) {
        var _this = this;
        console.log(id);
        this.msg = "remark";
        this.alrt.delete(this.msg).then(function (result) {
            console.log(result);
            if (result) {
                _this.db.fetchData({}, 'taskdetail/delete/' + id).subscribe(function (response) {
                    console.log(response);
                    if (response['status'] == 'Success') {
                        _this.task_detail();
                    }
                });
            }
            else {
                _this.msg.error('Remark Not Deleted !!');
            }
        });
    };
    TaskDetailComponent.prototype.edit_remarks = function (index) {
        var _this = this;
        console.log(index);
        this.taskremarks = this.taskdetail.taskDetails[index];
        this.taskremarks['type'] = 'taskremarks';
        console.log(this.taskremarks);
        var dialogRef = this.dialog.open(_distribution_update_network_update_network_component__WEBPACK_IMPORTED_MODULE_7__["UpdateNetworkComponent"], { width: '1000px', data: this.taskremarks });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.taskremarks = [];
            _this.task_detail();
        });
    };
    TaskDetailComponent.prototype.openleaddetail = function (id) {
        // window.open(`/lead-detail/`+id);
        window.open('./lead-detail/' + id);
    };
    TaskDetailComponent.prototype.actionOnTask = function (value) {
        console.log(value);
    };
    TaskDetailComponent.prototype.closetask = function (taskId) {
        var _this = this;
        var value = { "taskId": taskId, "userId": this.userId, "taskStatus": 2, 'taskType': this.taskdetail.taskType, "remarks": this.data.remarks };
        console.log(value);
        this.db.fetchData(value, "task/update").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.data = {};
                _this.toast.openSucess("Task Close ", "SuccessFully");
                _this.task_detail();
                _this.taskdetail = {};
                _this.taskaction.action = null;
            }
        });
    };
    TaskDetailComponent.prototype.closeLead = function (taskId) {
        var _this = this;
        console.log(taskId);
        this.taskdetail.task_id = this.task_id;
        console.log(this.data);
        console.log(this.taskdetail.referenceId);
        console.log(this.data.leadConverted);
        var value = { "taskId": taskId, "userId": this.userId, "taskStatus": 2, "leadConverted": this.data.leadConverted, "referenceId": this.taskdetail.referenceId, 'taskType': this.taskdetail.taskType };
        this.db.fetchData(value, "task/update").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                if (_this.data.leadConverted == 'false') {
                    console.log("heelllo");
                    _this.router.navigate(['/lead-list']);
                }
                else {
                    localStorage.setItem('leadId', JSON.stringify(_this.taskdetail));
                    _this.router.navigate(['/add-distribution']);
                    console.log(localStorage);
                    // this.navPage.count_list();
                }
            }
        });
    };
    TaskDetailComponent.prototype.reOpenTask = function (taskId) {
        var _this = this;
        console.log("reopen Function call");
        var value = { "taskId": taskId, "userId": this.userId, "remarks": 'ReopenTask', "taskStatus": 3 };
        this.db.fetchData(value, "taskdetail/add").subscribe(function (result) {
            console.log(result);
            if (result['status'] = 'Success') {
                _this.task_detail();
            }
        });
    };
    TaskDetailComponent.prototype.reOpenDiv = function () {
        this.reopenDiv = true;
    };
    TaskDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-task-detail',
            template: __webpack_require__(/*! ./task-detail.component.html */ "./src/app/task/task-detail/task-detail.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"], _constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"]])
    ], TaskDetailComponent);
    return TaskDetailComponent;
}());



/***/ }),

/***/ "./src/app/task/task-list/task-list.component.html":
/*!*********************************************************!*\
  !*** ./src/app/task/task-list/task-list.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n    <div *ngIf=\"loader\"> \n        <div class=\"cs-loader\">\n          <img src=\"assets/img/loader.png\" class=\"rotate\"> \n        </div>\n      </div>\n    \n    <div class=\"middle-container pb15\">\n        <div class=\"page-heading\">\n            <img src=\"assets/img/task.svg\" class=\"h-icon\">\n            <div class=\"heading-text flex-heading\">\n                <div class=\"content\">\n                    <h2>Task List</h2>\n                    <p>Total Task 15</p>\n                </div>\n                <div class=\"item-filter\" *ngIf=\"userRole!=1 && userRole!=10\">\n                    <mat-form-field class=\"wp100\">\n                        <mat-select  name=\"role\" id=\"role\" [(ngModel)]=\"filter.assignedToMe\" #assignedToMe=\"ngModel\" >\n                            <mat-option *ngIf=\"userRole!=1\" [value]=\"true\" (click)=\"filter.assignedToMe=true;filter.assignedByMe=false;filter.junoiourtask=false;taskList()\">Assigned To Me</mat-option>\n                            <mat-option  [value]=\"false\" (click)=\"filter.assignedToMe=false;filter.assignedByMe=true;filter.junoiourtask=false; taskList()\">Assigned By Me</mat-option>\n                            <mat-option [value]=\"false\" (click)=\"filter.assignedToMe=false;filter.assignedByMe=false;filter.junoiourtask=true; taskList()\">Juniour's Task</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n        <div class=\"left-auto\">\n            <div *ngIf=\"filter.userName || filter.role || filter.taskPriority\" class=\"filter-container mr15\">\n                <div (click)=\"clearfilter()\" class=\"filter-btn\">\n                    <button mat-button >CLEAR FILTER</button>\n                </div>\n            </div>\n            <div class=\"tabs right-tab none-af\">\n                <ul>\n                    <li><a class=\"pr40 inprocess\" [ngClass]= \"{'tab-active' : filter.status==1}\" (click)=\"filter.status=1;check(filter.status)\">InProcess<span  class=\"counter\">{{inprocess}}</span></a></li>\n                    <li><a class=\"pr40 complete\" [ngClass]= \"{'tab-active' : filter.status==2}\" (click)=\"filter.status=2;check(filter.status)\">Completed <span  class=\"counter\">{{completed}}</span></a></li>\n                    <li><a class=\"pr40 reopen\" [ngClass]= \"{'tab-active' : filter.status==3}\" (click)=\"filter.status=3;check(filter.status)\">Reopen <span  class=\"counter\">{{reopen}}</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"container-outer pt0\">\n        <div class=\"container\" >\n            <div class=\"row\">\n                <div class=\"col s12\">\n                    <div class=\"cs-table left-right-20\">\n                        <div class=\"sticky-head\">\n                            <div class=\"table-head\">\n                                <table  class=\"sno-border\">\n                                    <tr>\n                                        <th class=\"w30\">&nbsp;</th>\n                                        <th class=\"w110\">Date</th>\n                                        <th class=\"w180\" *ngIf=\"filter.assignedToMe==false\">Name</th>\n                                        <th *ngIf=\"userType!=2\" class=\"w180\">Role</th>\n                                        <th>Company Name</th>\n                                        <th *ngIf=\"filter.assignedToMe==true\" class=\"w220\">Created By</th>\n                                        <th class=\"w140\">Completed by</th>\n                                        <th class=\"w170\">Critical</th>\n                                        <!-- <th class=\"w110\">Status</th> -->\n                                    </tr>\n                                </table>\n                            </div>\n                            \n                            <div class=\"table-head bdrt\">\n                                <table class=\"sno-border\">\n                                    <tr>\n                                        <th class=\"w30\">&nbsp;</th>\n                                        <th class=\"w110\">&nbsp;</th>\n                                        <th class=\"w180\"  *ngIf=\"filter.assignedToMe==false\">\n                                            <div class=\"th-search\">\n                                                <input type=\"text\" (keyup)=\"taskList()\" name=\"userName\" #userName=\"ngModel\" [(ngModel)]=\"filter.userName\" placeholder=\"Search....\">\n                                            </div>\n                                        </th>\n                                        <th *ngIf=\"userType!=2\" class=\"w180\">\n                                            <div class=\"th-search\" >\n                                                <mat-select placeholder=\"Select role\" id=\"role\" name=\"status\" [(ngModel)]=\"filter.role\" #role=\"ngModel\">\n                                                    <mat-option value=\"\" (click)=\"taskList()\">All</mat-option>\n                                                    <mat-option value=\"6\" (click)=\"taskList()\">National Maneger</mat-option>\n                                                    <mat-option value=\"7\" (click)=\"taskList()\">Reginal Maneger</mat-option>\n                                                    <mat-option value=\"8\" (click)=\"taskList()\">Area Maneger</mat-option>\n                                                    <mat-option value=\"10\" (click)=\"taskList()\">Territory Incharge</mat-option>\n                                                </mat-select>\n                                            </div>\n                                        </th>\n                                        <th >&nbsp;</th>\n                                        <th *ngIf=\"filter.assignedToMe==true\" class=\"w220\">&nbsp;</th>\n                                        <th class=\"w140\">&nbsp;</th>\n                                        \n                                        <th class=\"w170\">\n                                            <div class=\"th-search\" >\n                                                <mat-select placeholder=\"Select Task Priority\" id=\"taskPriority\" name=\"taskPriority\" [(ngModel)]=\"filter.taskPriority\" #taskPriority=\"ngModel\">\n                                                    <mat-option value=\"\" (click)=\"taskList()\">All</mat-option>\n                                                    <mat-option value=\"1\" (click)=\"taskList()\">Currently Critical</mat-option>\n                                                    <mat-option value=\"2\" (click)=\"taskList()\">Potentially Critical</mat-option>\n                                                    <mat-option value=\"3\" (click)=\"taskList()\">Necessary</mat-option>\n                                                    <mat-option value=\"4\" (click)=\"taskList()\">Recommended</mat-option>\n                                                </mat-select>\n                                            </div>\n                                        </th>\n                                        <!-- <th class=\"w110\">\n                                            <div class=\"th-search\" >\n                                                <mat-select placeholder=\"Select status\" id=\"status\" name=\"status\" [(ngModel)]=\"filter.status\" #status=\"ngModel\">\n                                                    <mat-option value=\"\" (click)=\"taskList()\">All</mat-option>\n                                                    <mat-option value=\"1\" (click)=\"taskList()\">InProcess</mat-option>\n                                                    <mat-option value=\"2\" (click)=\"taskList()\">Completed</mat-option>\n                                                    <mat-option value=\"3\" (click)=\"taskList()\">Reopen</mat-option>\n                                                </mat-select>\n                                            </div>\n                                        </th> -->\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                        \n                        <div class=\"table-container \">\n                            <div class=\"table-content\">\n                                <table class=\"sno-border\">\n                                    <tr *ngFor=\"let task of tasklist;let i=index\">\n                                        <td class=\"w30 text-center\">{{i+1}}</td>\n                                        <td class=\"w110\">{{task.createdOn|date :'MMMM d, y'}} </td>\n                                        <td class=\"w180\" *ngIf=\"filter.assignedToMe==false\">\n                                            <a class=\"link-btn\" *ngIf=\"filter.assignedToMe==false\" (click)=\"goToDetail(task.taskId)\">{{task.userName}} </a>\n                                        </td>\n                                        <td *ngIf=\"userType!=2\" class=\"w180\">\n                                            <span *ngIf=\"task.role==6\">National Maneger</span>\n                                            <span *ngIf=\"task.role==7\">Reginal Maneger</span>\n                                            <span *ngIf=\"task.role==8\">Area Maneger</span>\n                                            <span *ngIf=\"task.role==10\">Territory Incharge</span>\n                                        </td>\n                                        <td >\n                                            <span *ngIf=\"task.leadEstablishment!=''\">{{task.leadEstablishment}}</span>\n                                        </td>\n                                        <td *ngIf=\"filter.assignedToMe==true\" class=\"w220\">{{task.createdByName}}</td>\n                                        <td class=\"w140\">{{task.deadline|date :' MMMM d, y'}}</td>\n                                        <td class=\"w170\">\n                                            <span *ngIf=\"task.taskPriority==1\">Currently Critical</span>\n                                            <span *ngIf=\"task.taskPriority==2\">Potentially Critical</span>\n                                            <span *ngIf=\"task.taskPriority==3\">Necessary</span>\n                                            <span *ngIf=\"task.taskPriority==4\">Recommended</span>\n                                            <div class=\"action-btns\">\n                                                <a mat-button class=\"view\" (click)=\"goToDetail(task.taskId)\"><i class=\"material-icons\"  >remove_red_eye</i> View</a>\n                                            </div>\n                                        </td>\n                                        <!-- <td class=\"w110 text-center yellow-clr\">{{task.taskStatusName}}\n                                            <div class=\"action-btns\">\n                                                <a mat-button class=\"view\" (click)=\"goToDetail(task.taskId)\"><i class=\"material-icons\"  >remove_red_eye</i> View</a>\n                                            </div>\n                                        </td> -->\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div *ngIf=\"div\" class=\"data-not-available\" >\n                <div class=\"outer\">\n                    <div class=\"iinear\">\n                        <div class=\"figure\" matRipple>\n                            <div class=\"header\">\n                                <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                            </div>\n                            <div class=\"description\">\n                                <div class=\"img\">\n                                    <i class=\"material-icons\">error_outline</i>\n                                </div>\n                                <div class=\"psc\">\n                                    <p>data not available</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n    \n    <div *ngIf=\"userRole==1 || (userType==2 && userRole != 10)\" class=\"fixed-multibtn-botm\">\n        <ul>\n            <li><a  matTooltip=\"Add New\" matRipple><i class=\"material-icons\" routerLink=\"/add-task\" routerLinkActive=\"active\" >add</i></a></li>\n        </ul>\n    </div>\n    \n</div>\n\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/task/task-list/task-list.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/task/task-list/task-list.component.ts ***!
  \*******************************************************/
/*! exports provided: TaskListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaskListComponent", function() { return TaskListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");





var TaskListComponent = /** @class */ (function () {
    // assignedToMe:any=true;
    // name:any;
    // tasktype:any;
    // nettype:any;
    function TaskListComponent(db, router, dialog) {
        var _this = this;
        this.db = db;
        this.router = router;
        this.dialog = dialog;
        this.user = {};
        this.loader = false;
        this.filterarray = [];
        this.filter = {};
        this.div = false;
        this.tasklist = [];
        this.rolelists = [];
        this.rolelistsales1 = [];
        this.resquestData = {};
        this.tmp_task = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        console.log(this.userRole);
        if (this.userRole == 1) {
            this.filter.assignedToMe = false;
            console.log(this.filter.assignedToMe);
        }
        else {
            this.filter.assignedToMe = true;
            console.log(this.filter.assignedToMe);
        }
        if (this.user) {
            if (this.userType) {
                setTimeout(function () {
                    _this.taskList();
                }, 500);
            }
        }
    }
    TaskListComponent.prototype.ngOnInit = function () {
        this.filter.status = 1;
    };
    TaskListComponent.prototype.clearfilter = function () {
        var activitydata2 = JSON.parse(JSON.stringify(this.filter));
        delete activitydata2['role'];
        delete activitydata2['userName'];
        delete activitydata2['taskPriority'];
        console.log(activitydata2);
        this.filter = activitydata2;
        this.taskList();
    };
    TaskListComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            _this.taskList();
            var filterrolesales = _this.rolelists.filter(function (x) { return x.userTypeId == 3; });
            _this.rolelistsales1 = filterrolesales[0].roles;
            console.log(_this.rolelistsales1);
        });
    };
    TaskListComponent.prototype.taskList = function () {
        var _this = this;
        console.log(this.filter.role);
        this.div = false;
        this.loader = true;
        var apiURL;
        console.log(this.filter.assignedToMe);
        if (this.userRole == 1) {
            console.log("admin task list");
            this.resquestData = { 'taskPriority': this.filter.taskPriority, 'role': this.filter.role, 'userName': this.filter.userName, 'establishmentName': this.filter.companyname, 'taskType': this.filter.tasktype, 'currentPage': 1, 'pageSize': 50 };
            apiURL = "admintask/list";
        }
        if (this.filter.assignedToMe == true) {
            console.log("assigned to me working");
            this.resquestData = { 'taskPriority': this.filter.taskPriority, 'role': this.filter.role, 'userName': this.filter.userName, 'establishmentName': this.filter.companyname, 'taskType': this.filter.tasktype, 'currentPage': 1, 'pageSize': 50 };
            apiURL = "mytask/list";
        }
        if (this.filter.assignedByMe == true) {
            console.log("assigned by me");
            this.resquestData = { 'createdBy': this.userId, 'taskPriority': this.filter.taskPriority, 'role': this.filter.role, 'userName': this.filter.userName, 'establishmentName': this.filter.companyname, 'taskType': this.filter.tasktype, 'currentPage': 1, 'pageSize': 50 };
            apiURL = "taskbyme/list";
        }
        if (this.filter.junoiourtask == true) {
            console.log("juniour task working in esle loop");
            this.resquestData = { 'taskPriority': this.filter.taskPriority, 'role': this.filter.role, 'userName': this.filter.userName, 'establishmentName': this.filter.companyname, 'taskType': this.filter.tasktype, 'currentPage': 1, 'pageSize': 50 };
            apiURL = "juniourstask/list";
        }
        console.log(this.filter.status);
        this.db.fetchData(this.resquestData, apiURL).subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            if (response['status'] == 'Success') {
                _this.tasklist = response['data'];
                _this.filterarray = _this.tasklist;
            }
            if (response['status'] == 'Failed') {
                _this.tasklist = [];
                _this.filterarray = [];
                _this.div = true;
            }
            console.log(_this.tasklist);
            var inprocesscount = _this.tasklist.filter(function (x) { return x.taskStatus == 1; });
            _this.inprocess = inprocesscount.length;
            console.log(_this.inprocess);
            var inprocesscount2 = _this.tasklist.filter(function (x) { return x.taskStatus == 2; });
            _this.completed = inprocesscount2.length;
            console.log(_this.completed);
            var inprocesscount3 = _this.tasklist.filter(function (x) { return x.taskStatus == 3; });
            _this.reopen = inprocesscount3.length;
            console.log(_this.reopen);
            for (var i = 0; i < _this.tasklist.length; i++) {
                for (var j = 0; j < _this.rolelistsales1.length; j++) {
                    if (_this.tasklist[i].role == _this.rolelistsales1[j].roleId) {
                        console.log(_this.tasklist[i].role, _this.rolelistsales1[j].roleId);
                        _this.tasklist[i].rolename = _this.rolelistsales1[j].roleName;
                        console.log(_this.tasklist[i].rolename);
                    }
                }
            }
            _this.check(_this.filter.status);
        });
        // else{
        //   this.loader=true;
        //   this.db.fetchData({'taskStatus':this.filter.taskStatus,'establishmentName':this.filter.companyname,'role': this.filter.nettype,'taskType':this.filter.tasktype,'currentPage': 1,'pageSize': 50},'task/list').subscribe((response)=>{
        //       this.loader=false;
        //     console.log(response);
        //     this.tasklist=response['data'];
        //     for(let i=0;i<this.tasklist.length;i++){
        //        for(let j=0;j<this.rolelistsales1.length;j++){
        //         // console.log(this.tasklist[i].role,this.rolelistsales1[j].roleId);
        //          if(this.tasklist[i].role==this.rolelistsales1[j].roleId)
        //          {
        //           console.log(this.tasklist[i].role,this.rolelistsales1[j].roleId);
        //            this.tasklist[i].rolename=this.rolelistsales1[j].roleName;
        //            console.log(this.tasklist[i].rolename);
        //          }
        //        }
        //    }
        //   })
        // }
    };
    TaskListComponent.prototype.check = function (status) {
        console.log(status);
        var inprocesscount2 = this.filterarray.filter(function (x) { return x.taskStatus == status; });
        this.tmp_task = inprocesscount2;
        console.log(this.tmp_task);
        this.tasklist = this.tmp_task;
    };
    TaskListComponent.prototype.goToDetail = function (id) {
        console.log("hello");
        this.router.navigate(['/task-detail/' + id]);
    };
    TaskListComponent.prototype.deleteTask = function (id) {
        var _this = this;
        this.dialog.delete('Sales User  !').then(function (result) {
            if (result) {
                _this.db.fileData("", "task/delete/" + id).subscribe(function (result) {
                    console.log(result);
                    if (result['status'] == 'Success') {
                        _this.taskList();
                    }
                });
            }
        });
    };
    TaskListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-task-list',
            template: __webpack_require__(/*! ./task-list.component.html */ "./src/app/task/task-list/task-list.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"]])
    ], TaskListComponent);
    return TaskListComponent;
}());



/***/ }),

/***/ "./src/app/territory/place-modal/place-modal.component.html":
/*!******************************************************************!*\
  !*** ./src/app/territory/place-modal/place-modal.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<style>\n   .mat-dialog-content\n  {\n    overflow: inherit !important;\n  }\n</style>\n\n\n<div *ngIf=\"loader\"> \n  <div class=\"cs-loader\">\n    <img src=\"assets/img/loader.png\" class=\"rotate\"> \n  </div>\n</div>\n\n<div class=\"edit-modal\">\n  \n  <form name=\"form\" (ngSubmit)=\"f.form.valid && updateTerritoryData()\"  #f=\"ngForm\" novalidate>\n    \n    <div mat-dialog-content class=\"h300\">\n      \n      <p class=\"heading\">Update {{data.popupType}}</p>\n      \n      <div class=\"from-fields\">\n        <div class=\"row\">\n          <div class=\"col s6\">\n            <div class=\"control-field\">\n              <mat-form-field class=\"cs-input select-input\">\n                \n                <mat-select placeholder=\"Select Segment\" name=\"segment\" [(ngModel)]=\"data.segment\" #segment=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && segment.invalid }\" multiple required>\n                  \n                  <mat-option (click)=\"getSegmentChangeHandler()\" value=\"{{segment.text}}\"  *ngFor='let segment of data.allSegmentList'>{{segment.text}}</mat-option>\n                  \n                </mat-select>\n                \n              </mat-form-field>\n              \n              <mat-error *ngIf=\"f.submitted && segment.invalid\" class=\"invalid-feedback\">\n                <mat-error *ngIf=\"segment.errors.required\">Segment is required</mat-error>\n              </mat-error>\n            </div>\n            \n          </div>\n          \n          <div class=\"col s6\">\n            <div class=\"control-field\">\n              \n              <mat-form-field class=\"cs-input\">\n                \n                <mat-select placeholder=\"Select Sales Role\" name=\"selectRoleArr\" [(ngModel)]=\"data.roleSelected\" #selectRoleArr=\"ngModel\">\n                  \n                  <mat-option disabled value=\"\">Select an Option</mat-option>\n                  \n                  <span *ngFor='let list of data.userRolesArr'>\n                    \n                    <mat-option *ngIf=\"list.roleId != 6\" (click)=\"getRoleWiseUserList(list.roleId, data.segment, 'onForm')\" [value]=\"list.roleId\">{{list.roleName}}</mat-option>\n                    \n                  </span>\n                  \n                </mat-select>\n                \n              </mat-form-field>\n              \n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"control-field\">\n              <div class=\"multi-all-select\">\n                <label>Users</label>\n              <ng-multiselect-dropdown\n              [placeholder]=\"'Select Sales User'\"\n              [data]=\"salesNetworkData\"\n              [(ngModel)]=\"data.salesUsers\"\n              name=\"salesUser\"\n              #salesUser=\"ngModel\"\n              [settings]=\"dropdownSettings\">\n            </ng-multiselect-dropdown>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n    <button style=\"color: #fff;\" mat-raised-button color=\"accent\" >Save</button>\n  </div>\n  \n</form>\n</div>"

/***/ }),

/***/ "./src/app/territory/place-modal/place-modal.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/territory/place-modal/place-modal.component.ts ***!
  \****************************************************************/
/*! exports provided: PlaceModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlaceModalComponent", function() { return PlaceModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");





var PlaceModalComponent = /** @class */ (function () {
    function PlaceModalComponent(dialogRef, popUpData, db, toast) {
        this.dialogRef = dialogRef;
        this.popUpData = popUpData;
        this.db = db;
        this.toast = toast;
        this.dropdownSettings = {};
        this.data = {};
        console.log(popUpData);
        this.data = popUpData;
        this.data.segment = this.data.segments;
        if (this.data.salesUsers.length > 0) {
            this.data.roleSelected = this.data.salesUsers[0].role;
            this.getRoleWiseUserList(this.data.salesUsers[0].role, this.data.segments, 'onLoad');
            console.log(this.data.roleSelected);
        }
    }
    PlaceModalComponent.prototype.ngOnInit = function () {
        this.dropdownSettings = {
            singleSelection: false,
            idField: 'userId',
            textField: 'userName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
    };
    PlaceModalComponent.prototype.getSegmentChangeHandler = function () {
        console.log(this.data.segment);
        console.log(this.data.salesUsers);
        if (this.data.segment.length == 0) {
            this.data.roleSelected = '';
            this.salesNetworkData = [];
            this.data.salesUsers = [];
        }
        if (this.data.segment.length > 0 && this.data.roleSelected) {
            this.getRoleWiseUserList(this.data.roleSelected, this.data.segment, 'onForm');
        }
    };
    PlaceModalComponent.prototype.getRoleWiseUserList = function (userRoleId, segmentList, target) {
        // this.loader = true;
        var _this = this;
        console.log(segmentList);
        this.salesNetworkData = [];
        if (target == 'onForm') {
            this.data.salesUsers = [];
        }
        this.db.fetchData({
            'userType': 2,
            'role': userRoleId,
            'segments': segmentList,
            'currentPage': 1,
            'pageSize': 200
        }, 'user/list').subscribe(function (response) {
            console.log(response);
            // this.loader = false;
            if (response.data) {
                var salesData = [];
                for (var index = 0; index < response.data.length; index++) {
                    salesData.push({ userId: response.data[index].userId, userName: response.data[index].userName + ' / ' + response.data[index].cityOffice, cityOffice: response.data[index].cityOffice });
                }
                _this.salesNetworkData = salesData;
                console.log(_this.salesNetworkData);
            }
            console.log(_this.salesNetworkData);
        });
    };
    PlaceModalComponent.prototype.updateTerritoryData = function () {
        var _this = this;
        console.log("submit");
        if (!this.data.segment || this.data.segment.length == 0) {
            return;
        }
        var userArr = [];
        console.log(this.data.salesUsers);
        if (this.data.salesUsers && this.data.salesUsers.length > 0) {
            for (var index = 0; index < this.data.salesUsers.length; index++) {
                userArr.push(this.data.salesUsers[index].userId);
            }
        }
        console.log(userArr);
        this.loader = true;
        var callApiObject = { 'territoryID': this.data.territoryID, 'segments': this.data.segment, 'salesUsers': userArr };
        var callApiUrl = 'territory/update';
        console.log(callApiObject);
        console.log(callApiUrl);
        this.db.fetchData(callApiObject, callApiUrl)
            .subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.dialogRef.close();
            _this.toast.openSucess('Territory Updated Sucessfully!', '');
        });
    };
    PlaceModalComponent.prototype.closeModel = function () {
        this.dialogRef.close();
    };
    PlaceModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-place-modal',
            template: __webpack_require__(/*! ./place-modal.component.html */ "./src/app/territory/place-modal/place-modal.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"]])
    ], PlaceModalComponent);
    return PlaceModalComponent;
}());



/***/ }),

/***/ "./src/app/territory/territory-add/territory-add.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/territory/territory-add/territory-add.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"main-container\">\n  \n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        \n        <div  class=\"back-btn\">\n          <a *ngIf=\"!isDetailPincodeBtnClicked\"  mat-button routerLink=\"/territory-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n          \n          <a *ngIf=\"isDetailPincodeBtnClicked\" mat-button (click)=\"isDetailPincodeBtnClicked = false\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        \n        <h2 *ngIf=\"territoryId != '0'\">{{existingTerritoryArr.territoryName}}</h2>\n        <!--  <p *ngIf=\"territoryId != '0'\" class=\"light\">{{existingTerritoryArr.pinCodesCount}} Pincode</p> -->\n        \n        <h2 *ngIf=\"territoryId == '0'\">Postal / Territory Master</h2>\n        <p *ngIf=\"territoryId == '0'\">{{territoryId != '0' ? 'Update Territory Pincodes' : 'Create New Territory'}}</p>\n        \n      </div>\n    </div>\n    \n    <div class=\"left-auto\">\n      <div class=\"cs-btn text-right\">\n        <div class=\"in-btn\">\n          <a mat-raised-button color=\"accent\" *ngIf=\"territoryId != '0' && !isDetailPincodeBtnClicked\" (click)=\"emptyFinalPincodeArr()\">Add Pincodes</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div *ngIf=\"territoryId != '0' && !isDetailPincodeBtnClicked\" class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info\">\n            <div class=\"basic-details pb0\" >\n              <a mat-button class=\"hov-action\" matTooltip=\"EDIT\" color=\"accent\" (click)=\"openDialog()\"><i class=\"material-icons\">edit</i></a>\n              <div class=\"profile-info\">\n                <ul>\n                  <li class=\"col s3\">\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/map-location.svg\" class=\"fix-img\">\n                      <span>Name</span>\n                      <p>{{existingTerritoryArr.territoryName}}</p>\n                    </div>\n                  </li>\n                  <li  class=\"col s8\">\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/segment.svg\" class=\"fix-img h20\">\n                      <span>Segment</span>\n                      <!-- <p>0129 625874</p> -->\n                      <ul class=\"segment-code\">\n                        <li >\n                          <span *ngFor=\"let val of existingTerritoryArr.segments\">{{val}}\n                            <!-- <a><i class=\"material-icons\">delete_sweep</i></a> -->\n                          </span>\n                        </li>\n                      </ul>\n                      \n                    </div>\n                  </li>\n                </ul>\n              </div>\n              <mat-divider class=\"mt15 mb15\"></mat-divider>\n              <div class=\"col s12 padding0\">\n                <div class=\"add-field user-heading mb5\">\n                  <div class=\"heading\">\n                    <h2 class=\"grey-clr\">Assign Users</h2>\n                  </div>\n                </div>\n                <div class=\"cs-figure field-figure\">\n                  <ul>\n                    <li *ngFor=\"let list of existingTerritoryArr.salesUsers\">\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <p>{{list.userName}}</p>\n                          <span *ngIf=\"list.role == '10'\">Territory Incharge</span>\n                          <span *ngIf=\"list.role == '8'\">ASM</span>\n                          <span *ngIf=\"list.role == '7'\">RSM</span>\n                        </div>\n                        <!-- <a class=\"del-btn\" matRipple ><i class=\"material-icons\">delete_sweep</i></a> -->\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"row\">\n        <div class=\"col {{isCityClicked ? 's8' : 's12'}}\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>Pincode Description</h2>\n                <!-- <div class=\"top-search wp30 ml20 right-serach\">\n                  <input type=\"text\" [(ngModel)]=\"data.detailDescriptionSearch\" placeholder=\"SEARCH. . .\">\n                  <i class=\"material-icons\">search</i>\n                </div> -->\n              </div>\n              \n              <div class=\"state-table\">\n                \n                <table *ngFor=\"let list of existingTerritoryArr.states\">\n                  \n                  <tr>\n                    <td>\n                      <table>\n                        <tr>\n                          <td>\n                            {{list.stateName}}\n                            <a (click) = \"territoryStateDelete(list.stateName)\" class=\"del-btn\">Delete</a>\n                          </td>\n                        </tr>\n                      </table>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    \n                    <td>\n                      <table>\n                        \n                        <tr *ngFor=\"let districtList of list.distrcits\">\n                          \n                          <td class=\"w250\">\n                            {{districtList.districtName}}\n                          </td>\n                          \n                          <td class=\"pb0\">\n                            <ul class=\"area-code\">\n                              <li (click)=\"detailCityClickHandler(cityList.stateMasterId)\" class=\"{{cityList.checked ? 'active' : ''}}\" *ngFor=\"let cityList of districtList.cities\" >\n                                <a>{{cityList.cityName}} <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                            </ul>\n                          </td>\n                          \n                        </tr>\n                        \n                      </table>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        <div class=\"col s4 right-sticky {{isCityClicked ? '' : 'ds-none'}}\">\n          <div class=\"territory-info\">\n            \n            <div class=\"head\" [ngClass]=\"{'active':active.districts==true}\" style=\"padding: 13px 15px;\">\n              <h2>{{clickedCityDetail.stateName}} / {{clickedCityDetail.districtName}}</h2>\n              <!--  <i class=\"material-icons search-icon\" (click)=\"toggleterritory('districts','open')\"  matRipple style=\"right: 15px;\">search</i> -->\n              <!--   <input type=\"text\" placeholder=\"search...\" class=\"fix-search\"> -->\n              <!--    <i class=\"material-icons close-icon\" (click)=\"toggleterritory('districts','close')\" matRipple>clear</i> -->\n            </div>\n            \n            <div class=\"cs-checkbox\">\n              <div class=\"checkbox-outer auto-height-scroll\">\n                <p class=\"head-cs\">{{clickedCityDetail.cityName}}</p>\n                <section class=\"checkbox-inner\">\n                  <div class=\"cs-table\">\n                    <div class=\"table-head sticky-small\">\n                      <table class=\"sno-border\">\n                        <tr>\n                          <th class=\"w30\">&nbsp;</th>\n                          <th>Pincode</th>\n                          <!-- <th class=\"w50\">&nbsp;</th> -->\n                        </tr>\n                      </table>\n                    </div>\n                    \n                    <div class=\"table-container\">\n                      <div class=\"table-content\">\n                        <table class=\"sno-border\">\n                          <tr *ngFor=\"let val of clickedCityDetail.pincodeArr; let pincodeIndex = index\">\n                            <td class=\"w30\">{{pincodeIndex + 1}}</td>\n                            <td>{{val}}</td>\n                            <!-- <td class=\"w50\" matRipple><a class=\"pointer\"><i class=\"material-icons red-clr\">delete_sweep</i></a></td> -->\n                          </tr>\n                        </table>\n                      </div>\n                    </div>\n                    \n                  </div>\n                </section>\n              </div>\n            </div>\n          </div>\n        </div> \n      </div>\n    </div>\n  </div>\n  \n  \n  \n  <!-- Add Pincode HTML Start -->\n  \n  <div *ngIf=\"territoryId == '0' || isDetailPincodeBtnClicked\" class=\"container-outer\">\n    <!-- <app-master-tab></app-master-tab> -->\n    \n    <!-- <div class=\"container tab-container\" > -->\n      <div class=\"row\">\n        <form name=\"form\" #f=\"ngForm\" novalidate>\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>{{isDetailPincodeBtnClicked ? 'UPDATE TERRITORY PINCODES' : 'CREATE TERRITORY'}}</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>          \n              \n              <div [hidden]=\"isDetailPincodeBtnClicked\" class=\"from-fields\">\n                <div class=\"row mt5\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\" [ngClass]=\"{ 'has-error': !territory_form.name && f.submitted }\">\n                      <mat-form-field class=\"cs-input infix-bodr8 \">\n                        <input matInput [(ngModel)]=\"data.territory\" placeholder=\"Territory Name\" name=\"territory\" #territory=\"ngModel\" id=\"territoryName\" [ngClass]=\"{ 'is-invalid':  territory.invalid }\" [required]=\"!isDetailPincodeBtnClicked\">\n                      </mat-form-field>\n                      \n                      \n                      <mat-error *ngIf=\"!isDetailPincodeBtnClicked && territory.invalid && territory.errors.required\" class=\"invalid-feedback\">*Territory Required!</mat-error>\n                      \n                    </div>\n                    \n                  </div>\n                  \n                  <div class=\"col s4\">\n                    <div class=\"control-field\">\n                      <div class=\"multi-all-select\">\n                        <label >Select Segment</label>\n                        <ng-multiselect-dropdown\n                        [placeholder]=\"'Select Segment'\"\n                        [data]=\"segmentlist\"\n                        [(ngModel)]=\"data.segment\"\n                        name=\"segment\"\n                        #selectRoleArr=\"ngModel\"\n                        [settings]=\"segmentDropdownSettings\"\n                        (onSelect)=\"getSegmentChangeHandler()\"\n                        (onDeSelect)=\"getSegmentChangeHandler()\"\n                        (onDeSelectAll)=\"getSegmentChangeHandler()\"\n                        (onSelectAll)=\"getSegmentChangeHandler()\">\n                      </ng-multiselect-dropdown>\n                    </div>\n                    \n                    <mat-error *ngIf=\"!isDetailPincodeBtnClicked && (!data.segment || data.segment.length == 0)\" class=\"invalid-feedback\">\n                      Segment is required</mat-error>\n                      \n                      <!-- <mat-form-field class=\"cs-input infix-bodr8 \">\n                        \n                        <mat-select placeholder=\"Select Segment\" name=\"segment\" [(ngModel)]=\"data.segment\" #segment=\"ngModel\" id=\"segmentName\" [ngClass]=\"{ 'is-invalid': f.submitted && segment.invalid }\" multiple [required]=\"!isDetailPincodeBtnClicked\">\n                          <mat-option (click)=\"getSegmentChangeHandler()\" value=\"{{segment.text}}\"  *ngFor='let segment of segmentlist'>{{segment.text}}</mat-option>\n                        </mat-select>\n                      </mat-form-field> -->\n                      \n                    </div>\n                  </div>\n                  \n                  <div class=\"col s4 pr0\">\n                    <div class=\"control-field\">\n                      <!-- <mat-form-field *ngIf=\"data.segment && data.segment.length > 0\" class=\"cs-input infix-bodr8\"> -->\n                        <div class=\"multi-all-select\">\n                          <label >Select Sales Role</label>\n                          <ng-multiselect-dropdown\n                          [placeholder]=\"'Select Sales Role'\"\n                          [data]=\"userRolesArr\"\n                          [(ngModel)]=\"data.roleSelected\"\n                          name=\"selectRoleArr\"\n                          #selectRoleArr=\"ngModel\"\n                          [settings]=\"rolesDropdownSettings\"\n                          (onSelect)=\"onItemSelect($event)\"\n                          (onDeSelect)=\"onItemDeselect($event)\"\n                          (onDeSelectAll)=\"onItemDeselectAll($event)\"\n                          (onSelectAll)=\"onSelectAll($event)\">\n                        </ng-multiselect-dropdown>\n                      </div>\n                      \n                      \n                      <!-- <mat-select placeholder=\"Select Sales Role\" name=\"selectRoleArr\" [(ngModel)]=\"data.roleSelected\" #selectRoleArr=\"ngModel\">\n                        <mat-option disabled value=\"\">Select an Option</mat-option>\n                        <span *ngFor='let list of userRolesArr'>\n                          <mat-option *ngIf=\"list.roleId != 6\" (click)=\"getRoleWiseUserList(list.roleId)\" [value]=\"list.roleId\">{{list.roleName}}</mat-option>\n                        </span>\n                      </mat-select> -->\n                      <!-- </mat-form-field> -->\n                    </div>\n                  </div>\n                  \n                  \n                </div>\n                \n                \n                \n                <div *ngIf=\"data.segment  && data.segment.length > 0\" class=\"row mt10\">\n                  \n                  <div class=\"col s4 pl0 \">\n                    <div class=\"multi-all-select\">\n                      <label >Sales User</label>\n                      <ng-multiselect-dropdown\n                      [placeholder]=\"'Select Sales User'\"\n                      [data]=\"salesNetworkData\"\n                      [(ngModel)]=\"data.salesUsers\"\n                      name=\"salesUser\"\n                      #salesUser=\"ngModel\"\n                      [settings]=\"dropdownSettings\">\n                    </ng-multiselect-dropdown>\n                  </div>\n                </div>\n              </div>\n              \n            </div>\n            \n            \n            <div class=\"row mt15\">\n              \n              <div class=\"col s4 pl0\">\n                <div class=\"territory-info\">\n                  \n                  <div class=\"head\" [ngClass]=\"{'active':active.state==true}\">\n                    <h2>STATE</h2>\n                    \n                    <!-- <mat-checkbox class=\"fix-check\"  (change)=\"selectall('st',$event)\">&nbsp;</mat-checkbox> -->\n                    \n                    <i class=\"material-icons search-icon right20\" (click)=\"toggleterritory('state','open')\"  matRipple>search</i>\n                    \n                    <input type=\"text\" id=\"state\" [(ngModel)]=\"data.stateSearch\" name=\"stateSearch\" placeholder=\"search...\" class=\"fix-search\">\n                    \n                    <i class=\"material-icons close-icon\" (click)=\"data.stateSearch='';toggleterritory('state','close')\" matRipple>clear</i>\n                    \n                  </div>\n                  \n                  <div class=\"cs-checkbox\">\n                    <div class=\"checkbox-outer\">\n                      <section class=\"checkbox-inner\">\n                        \n                        <ng-container *ngFor=\"let list of masterArr | myfilter:{src: 'territoryState', search: data.stateSearch};let stateIndex=index;\"> \n                          \n                          <mat-checkbox class=\"check-list\" (change)=\"getDistrictList(list.stateName, list.checked, false)\"\n                          [(ngModel)] = \"list.checked\" name=\"{{list.stateName}}a\">{{list.stateName}}</mat-checkbox>\n                          \n                        </ng-container>\n                      </section>\n                    </div>\n                    \n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"col s4\">\n                <div class=\"territory-info\">\n                  \n                  <div class=\"head\" [ngClass]=\"{'active':active.districts==true}\">\n                    <h2>DISTRICTS</h2>\n                    \n                    <!-- <mat-checkbox class=\"fix-check\"  (change)=\"selectall('dst',$event)\">&nbsp;</mat-checkbox> -->\n                    <i class=\"material-icons search-icon right20\" (click)=\"toggleterritory('districts','open')\"  matRipple>search</i>\n                    \n                    <input type=\"text\" id=\"districts\" [(ngModel)]=\"data.districtSearch\" name=\"districtSearch\" placeholder=\"search...\" class=\"fix-search\">\n                    \n                    <i class=\"material-icons close-icon\" (click)=\"data.districtSearch='';toggleterritory('districts','close')\" matRipple>clear</i>\n                    \n                  </div>\n                  \n                  <div *ngIf=\"!isAnyStateSelected\" class=\"not-data\">\n                    <div class=\"inner-data\">\n                      <p>No Data</p>\n                    </div>\n                  </div>\n                  \n                  <div *ngIf=\"isAnyStateSelected\" class=\"cs-checkbox\">\n                    <div class=\"checkbox-outer\">\n                      <section class=\"checkbox-inner\">\n                        <ng-container *ngFor= \"let list of masterArr; let stateIndex=index\">\n                          <span *ngIf=\"list.checked\">\n                            <span [hidden]=\"data.districtSearch\">\n                              <mat-checkbox [(ngModel)]=\"list.allChecked\" (change)=\"masterActionHandler('state', list.stateName, null, null, null, list.allChecked, null)\" class=\"check-list bg-list text-center\" name=\"{{list.stateName}}\" style=\"background:#eee;color: #111;\">{{list.stateName}}</mat-checkbox>\n                            </span>\n                            <mat-checkbox *ngFor= \"let districtRow of list.districtData | myfilter:{src: 'territoryDistrict', search: data.districtSearch}; let districtIndex=index\"  [(ngModel)]=\"districtRow.checked\" (change)=\"getCityList(list.stateName,districtRow.districtName,districtRow.checked, false, 'single')\" class=\"check-list\" name=\"{{districtRow.districtName}}bb\">{{districtRow.districtName}} {{data.districtSearch ? '('+list.stateName+')' : ''}}</mat-checkbox>              \n                          </span>                                      \n                        </ng-container>\n                        \n                      </section>\n                    </div>\n                    \n                  </div>\n                </div>\n              </div> \n              \n              \n              <div class=\"col s4 pr0\">\n                <div class=\"territory-info\">\n                  \n                  <div class=\"head\" [ngClass]=\"{'active':active.pincode==true}\">\n                    <h2>AREA PINCODES</h2>\n                    <span *ngIf=\"showSelectAll\">\n                      <mat-checkbox class=\"fix-check\" [(ngModel)]=\"data.pincodeSelectAll\" (change)=\"getAllPincodeHandler(data.pincodeSelectAll)\" name=\"pincodeSelectAll\">&nbsp;</mat-checkbox>\n                    </span>\n                    <i class=\"material-icons search-icon right60\"  (click)=\"toggleterritory('pincode','open')\"  matRipple>search</i>\n                    <input type=\"text\" id=\"pincode\" [(ngModel)]=\"data.citySearch\" name=\"citySearch\" placeholder=\"City Search...\" class=\"fix-search\">\n                    <i class=\"material-icons close-icon\" (click)=\"data.citySearch='';toggleterritory('pincode','close')\" matRipple>clear</i>\n                  </div>\n                  \n                  <div  *ngIf=\"!isAnyDistrictSelected\" class=\"not-data\">\n                    <div class=\"inner-data\">\n                      <p>No Data</p>\n                    </div>\n                  </div>\n                  \n                  <div  *ngIf=\"isAnyDistrictSelected\"  class=\"cs-checkbox\">\n                    <div class=\"checkbox-outer\">\n                      <section class=\"checkbox-inner\">\n                        <ng-container *ngFor=\"let list of masterArr;let stateIndex=index;\">\n                          \n                          <span *ngIf=\"list.checked\">\n                            \n                            <ng-container *ngFor=\"let districtRow of list.districtData;let districtIndex=index;\">\n                              \n                              <span *ngIf=\"districtRow.checked\">\n                                \n                                <ng-container *ngFor=\"let cityRow of districtRow.cities  | myfilter:{src: 'territoryCity', search: data.citySearch}; let cityIndex=index;\">\n                                  \n                                  <div [hidden]=\"!data.citySearch && data.pincodeSearch\" style=\"position: relative;\">\n                                    \n                                    <mat-checkbox [(ngModel)]=\"cityRow.checked\" class=\"check-list bg-list text-center\" (change)=\"masterActionHandler('city', list.stateName, districtRow.districtName, cityRow.cityName, null, cityRow.checked, cityRow.stateMasterId)\" name=\"{{cityRow.cityName}}\" style=\"background:#eee;color: #111;\">{{cityRow.cityName}} ({{ districtRow.districtName}})</mat-checkbox> \n                                    \n                                    <!-- <a class=\"drop-icon\" (click)=\"drop_me = ( drop_me == cityIndex ) ? '-1': cityIndex \">&nbsp;</a> -->\n                                  </div>\n                                  \n                                  <ng-container *ngFor=\"let pincodeRow of cityRow.pincodeArr | myfilter:{src: 'territoryPincode', cityArr: cityRow, search: data.pincodeSearch}; let pincodeIndex=index\" #pincodeExist>\n                                    \n                                    <mat-checkbox  class=\"check-list\" [(ngModel)]=\"pincodeRow.checked\"  name=\"{{pincodeRow.pincode}}\" (change)=\"masterActionHandler('pincode', list.stateName, districtRow.districtName, cityRow.cityName, pincodeRow.pincode, pincodeRow.checked, null)\">{{pincodeRow.pincode}} {{(!data.citySearch && data.pincodeSearch ? ' - ' + cityRow.cityName + ' (' + districtRow.districtName+ ')' : '')}}</mat-checkbox>\n                                    \n                                  </ng-container>\n                                  \n                                </ng-container>\n                                \n                              </span>\n                              \n                            </ng-container>\n                            \n                          </span>\n                          \n                        </ng-container>\n                      </section>\n                    </div>\n                  </div>\n                </div>\n              </div> \n            </div>\n            \n            \n            <mat-error *ngIf=\"data.pincodeEmpty\"  class=\"invalid-feedback\">\n              *Atleast one Pincode Required!</mat-error>\n              \n            </div>\n            \n            <div class=\"row\">\n              <div class=\"col s12\">\n                <div  class=\"cs-btn text-right mt15\">\n                  <div class=\"in-btn\">\n                    <button (click)=\"onFinalPinCodesHandler()\" type=\"button\" mat-raised-button color=\"accent\" >Add to Pincode List</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div *ngIf=\"(territoryId == '0' || (territoryId != '0' && isDetailPincodeBtnClicked)) && finalPincodesDetailArr.length > 0\"  class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2 class=\"pr40\">Selected Pincodes \n                  <span class=\"counter-number\" style=\"text-align:right\">{{finalPincodesDetailArr.length}}</span>\n                </h2> \n                <div class=\"top-search ml50\">\n                  <input type=\"text\" placeholder=\"SEARCH. . .\" [(ngModel)]=\"data.selectedPincodeSearch\" name=\"selectedPincodeSearch\" >\n                  <i class=\"material-icons\">search</i>\n                </div>\n                <div class=\"action-menu\">\n                  <button class=\"action-menu-btn\" mat-button [matMenuTriggerFor]=\"menu\"><i class=\"material-icons\">more_vert</i></button>\n                  <mat-menu class=\"action-dropdown\" #menu=\"matMenu\">\n                    <button disabled mat-menu-item class=\"alert-btn red-clr\" style=\"border-bottom: 1px solid #ccc;\">Delete Statewise</button>\n                    <button mat-menu-item (click)=\"deleteSelectedPincode(stateName, '')\" *ngFor='let stateName of distinctSelectedState'>{{stateName}}</button>\n                  </mat-menu>\n                </div>\n              </div>\n              \n              <div class=\"cs-table left-right-15 mt15\">\n                <div class=\"table-head \">\n                  <table>\n                    <tr>\n                      <th>State Name</th>\n                      <th>District Name</th>\n                      <th>City</th>\n                      <th>Pincode</th>\n                    </tr>\n                  </table>\n                </div>\n                <div class=\"table-container height-scroll\">\n                  <div class=\"table-content shadow-none\">\n                    <table>\n                      <tr *ngFor=\"let list of finalPincodesDetailArr | myfilter:{src: 'selectedPincodes', search: data.selectedPincodeSearch};\">\n                        <td>{{list.stateName}}</td>\n                        <td>{{list.districtName}}</td>\n                        <td>{{list.cityName}}</td>\n                        <td>\n                          <div class=\"action-btns\">\n                            <!-- <a mat-button class=\"view\" (click)=\"detailPlan(list.travelPlanID)\"><i class=\"material-icons\">remove_red_eye</i> View</a> -->\n                            <button type=\"button\" mat-button class=\"delete\" (click)=\"deleteSelectedPincode('Pincode', list)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                          </div>\n                          <span> {{list.pincode}}</span>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \n        </form>\n        \n        <div *ngIf=\"finalPincodesDetailArr.length > 0\" class=\"col s12\">\n          <div class=\"cs-btn fixedd mt32 text-right\">\n            <div *ngIf=\"territoryId != '0'\" class=\"in-btn mr15\">\n              <button type=\"button\" (click)=\"isDetailPincodeBtnClicked = false\" type=\"submit\" mat-raised-button color=\"warn\">Cancel</button>\n            </div>\n            <div class=\"in-btn\">\n              <button type=\"button\" (click)=\"save_territory()\" type=\"submit\" mat-raised-button color=\"accent\">Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- </div> -->\n    </div>\n    \n    \n  </div>\n  \n  <div class=\"h50\"></div>\n  \n  <!-- Add Pincode HTML END -->\n  "

/***/ }),

/***/ "./src/app/territory/territory-add/territory-add.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/territory/territory-add/territory-add.component.ts ***!
  \********************************************************************/
/*! exports provided: TerritoryAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TerritoryAddComponent", function() { return TerritoryAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _place_modal_place_modal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../place-modal/place-modal.component */ "./src/app/territory/place-modal/place-modal.component.ts");










var TerritoryAddComponent = /** @class */ (function () {
    function TerritoryAddComponent(db, router, route, toast, dialog, matDialog) {
        this.db = db;
        this.router = router;
        this.route = route;
        this.toast = toast;
        this.dialog = dialog;
        this.matDialog = matDialog;
        this.rolesDropdownSettings = {};
        this.dropdownSettings = {};
        this.segmentDropdownSettings = {};
        this.salesData = [];
        this.isDetailPincodeBtnClicked = false;
        this.drop_me = '-1';
        this.territory_form = {};
        this.masterArr = [];
        this.data = {};
        this.showSelectAll = false;
        this.finalPincodesArr = [];
        this.finalPincodesDetailArr = [];
        this.distinctSelectedState = [];
        this.territoryId = '';
        this.existingTerritoryArr = [];
        this.tmpTerr = [];
        this.formSubmit = false;
        this.segmentlist = [];
        this.isCityClicked = false;
        this.clickedCityDetail = {};
        this.isAnyStateSelected = false;
        this.isAnyDistrictSelected = false;
        this.active = {};
        this.data = {};
        this.data.segment = [];
        this.data.salesUsers = [];
        this.existingTerritoryArr = [];
        this.salesNetworkData = [];
        this.data.salesUsers = [];
        this.data.pincodeEmpty = false;
        this.data.userEmpty = false;
    }
    TerritoryAddComponent.prototype.openDialog = function (popupType) {
        var _this = this;
        this.existingTerritoryArr.popupType = popupType;
        this.existingTerritoryArr.allSegmentList = this.segmentlist;
        this.existingTerritoryArr.userRolesArr = this.userRolesArr;
        var dialogRef = this.matDialog.open(_place_modal_place_modal_component__WEBPACK_IMPORTED_MODULE_9__["PlaceModalComponent"], { width: '768px', data: this.existingTerritoryArr });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.onExistingTerritoryHandler();
            console.log(result);
        });
    };
    TerritoryAddComponent.prototype.onItemSelect = function (item) {
        console.log(item);
        this.getRoleWiseUserList(item.roleId);
    };
    TerritoryAddComponent.prototype.onItemDeselect = function (item) {
        console.log(item);
        this.salesData = this.salesData.filter(function (row) { return row.roleId != item.roleId; });
        this.salesNetworkData = JSON.parse(JSON.stringify(this.salesData));
    };
    TerritoryAddComponent.prototype.onSelectAll = function (items) {
        console.log(items);
        for (var index = 0; index < items.length; index++) {
            this.getRoleWiseUserList(items[index].roleId);
        }
    };
    TerritoryAddComponent.prototype.onItemDeselectAll = function (items) {
        console.log(items);
        this.salesData = [];
        this.salesNetworkData = JSON.parse(JSON.stringify(this.salesData));
    };
    TerritoryAddComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.formSubmit = false;
            _this.data = {};
            _this.territoryId = params.id;
            console.log(_this.territoryId);
            _this.onStateListHandler();
            if (_this.territoryId != '0') {
                _this.onExistingTerritoryHandler();
            }
            else {
                _this.masterArr = [];
                _this.finalPincodesArr = [];
                _this.finalPincodesDetailArr = [];
                _this.isDetailPincodeBtnClicked = false;
                console.log(_this.masterArr);
                console.log(_this.finalPincodesArr);
                console.log(_this.finalPincodesDetailArr);
                _this.getUserTypeRoles();
            }
            _this.segment_list();
        });
        this.options = {
            multiple: true
        };
        this.options = {
            multiple: true
        };
        this.dropdownSettings = {
            singleSelection: false,
            idField: 'userId',
            textField: 'userName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.rolesDropdownSettings = {
            singleSelection: false,
            idField: 'roleId',
            textField: 'roleName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.segmentDropdownSettings = {
            closeDropDownOnSelection: true,
            singleSelection: false,
            idField: 'text',
            textField: 'text',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
    };
    TerritoryAddComponent.prototype.territoryStateDelete = function (stateName) {
        var _this = this;
        this.loader = true;
        this.db.fetchData({
            'territoryId': this.territoryId,
            'state': stateName
        }, 'territory/pincode/delete')
            .subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.toast.openSucess('Deleted Sucessfully!', '');
            _this.clickedCityDetail.pincodeArr = [];
            _this.isCityClicked = false;
            _this.onExistingTerritoryHandler();
        });
    };
    TerritoryAddComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    TerritoryAddComponent.prototype.getSegmentChangeHandler = function (event) {
        console.log(this.data.segment);
        console.log(this.data.salesUsers);
        if (this.data.segment.length == 0) {
            this.data.roleSelected = '';
            this.salesNetworkData = [];
            this.data.salesUsers = [];
        }
        console.log(this.data.roleSelected);
        if (this.data.segment.length > 0 && this.data.roleSelected) {
            for (var index = 0; index < this.data.roleSelected.length; index++) {
                this.getRoleWiseUserList(this.data.roleSelected[index].roleId);
            }
        }
    };
    TerritoryAddComponent.prototype.onStateListHandler = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            _this.masterArr = [];
            console.log(response);
            if (response['data']) {
                for (var index = 0; index < response['data'].length; index++) {
                    _this.masterArr.push({ stateName: response['data'][index], districtData: [] });
                }
                _this.loader = false;
            }
            _this.stateCheckedHandler();
            _this.districtCheckedHandler();
            console.log(_this.masterArr);
        });
    };
    /*  Territory Edit Set Function Start */
    TerritoryAddComponent.prototype.onExistingTerritoryHandler = function () {
        var _this = this;
        this.tmpTerr.push(this.territoryId);
        console.log(this.tmpTerr);
        this.loader = true;
        this.db.fileData('', 'territory/detail/' + this.territoryId).subscribe(function (response) {
            console.log(response);
            _this.existingTerritoryArr = response.data;
            console.log(_this.existingTerritoryArr);
            //  this.data.territory = this.existingTerritoryArr.territoryName;
            _this.loader = false;
            _this.onSetCityPincodeHandler();
            _this.getUserTypeRoles();
        });
    };
    TerritoryAddComponent.prototype.detailCityClickHandler = function (stateMasterId) {
        var _this = this;
        this.isCityClicked = true;
        for (var index = 0; index < this.existingTerritoryArr.states.length; index++) {
            for (var index1 = 0; index1 < this.existingTerritoryArr.states[index].distrcits.length; index1++) {
                for (var index2 = 0; index2 < this.existingTerritoryArr.states[index].distrcits[index1].cities.length; index2++) {
                    if (this.existingTerritoryArr.states[index].distrcits[index1].cities[index2].stateMasterId == stateMasterId) {
                        console.log(this.existingTerritoryArr.states[index].distrcits[index1].cities[index2]);
                        this.existingTerritoryArr.states[index].distrcits[index1].cities[index2].checked = true;
                        this.clickedCityDetail.stateName = this.existingTerritoryArr.states[index].stateName;
                        this.clickedCityDetail.districtName = this.existingTerritoryArr.states[index].distrcits[index1].districtName;
                        this.clickedCityDetail.cityName = this.existingTerritoryArr.states[index].distrcits[index1].cities[index2].cityName;
                        this.loader = true;
                        this.db.fetchData({ 'stateMasterIds': [stateMasterId] }, 'city/pincodes').subscribe(function (response) {
                            console.log(response);
                            setTimeout(function () {
                                _this.loader = false;
                            }, 1000);
                            var pincodeArr = [];
                            if (response.data[0]) {
                                for (var cityPincodeIndex = 0; cityPincodeIndex < response.data[0]['pinCodes'].length; cityPincodeIndex++) {
                                    pincodeArr.push(response.data[0]['pinCodes'][cityPincodeIndex]);
                                }
                            }
                            _this.clickedCityDetail.pincodeArr = pincodeArr;
                            console.log(pincodeArr);
                        });
                        console.log(this.clickedCityDetail);
                    }
                    else {
                        this.existingTerritoryArr.states[index].distrcits[index1].cities[index2].checked = false;
                    }
                }
            }
        }
    };
    TerritoryAddComponent.prototype.onSetCityPincodeHandler = function () {
        var territoryStates = this.existingTerritoryArr['states'];
        console.log(territoryStates);
        for (var index = 0; index < territoryStates.length; index++) {
            for (var index1 = 0; index1 < territoryStates[index]['distrcits'].length; index1++) {
                for (var index2 = 0; index2 < territoryStates[index]['distrcits'][index1]['cities'].length; index2++) {
                    for (var index3 = 0; index3 < territoryStates[index]['distrcits'][index1]['cities'][index2]['pinCodes'].length; index3++) {
                        this.finalPincodesArr.push({ stateMasterId: territoryStates[index]['distrcits'][index1]['cities'][index2].stateMasterId, pincode: territoryStates[index]['distrcits'][index1]['cities'][index2]['pinCodes'][index3] });
                        this.finalPincodesDetailArr.push({ stateMasterId: territoryStates[index]['distrcits'][index1]['cities'][index2].stateMasterId, stateName: territoryStates[index].stateName, districtName: territoryStates[index]['distrcits'][index1]['districtName'], cityName: territoryStates[index]['distrcits'][index1]['cities'][index2].cityName, pincode: territoryStates[index]['distrcits'][index1]['cities'][index2]['pinCodes'][index3] });
                    }
                }
            }
        }
        console.log(this.finalPincodesArr);
        console.log(this.finalPincodesDetailArr);
    };
    TerritoryAddComponent.prototype.onSetTerritoryInchargeHandler = function () {
        // for (let index = 0; index < this.salesNetworkData.length; index++) {
        //     if(this.salesNetworkData[index].roleId == 10) {
        //         for (let index1 = 0; index1 < this.salesNetworkData[index].roleDataArr.length; index1++) {
        //                 const isIndexExist = this.existingTerritoryArr.salesUsers.findIndex(row => row.userId == this.salesNetworkData[index].roleDataArr[index1].userId);
        //                 if (isIndexExist !== -1) {
        //                     this.salesNetworkData[index].roleDataArr[index1].checked = true;
        //                 }
        //         }
        //     }
        // }
    };
    /*  Territory Edit Set Function ENd */
    TerritoryAddComponent.prototype.getUserTypeRoles = function () {
        var _this = this;
        this.loader = true;
        this.userRolesArr = [];
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            for (var index = 0; index < response.data.length; index++) {
                if (response.data[index].userTypeId === 2) {
                    var userRoleData = [];
                    for (var index1 = 0; index1 < response.data[index].roles.length; index1++) {
                        var typeRoles = response.data[index].roles[index1];
                        userRoleData.push({ userTypeId: response.data[index].userTypeId,
                            roleId: typeRoles.roleId,
                            roleName: typeRoles.roleName });
                    }
                    _this.userRolesArr = userRoleData;
                }
            }
            console.log(_this.userRolesArr);
        });
    };
    TerritoryAddComponent.prototype.getRoleWiseUserList = function (userRoleId) {
        var _this = this;
        this.loader = true;
        this.db.fetchData({
            'userType': 2,
            'role': userRoleId,
            'segments': this.data.segment,
            'currentPage': 1,
            'pageSize': 50
        }, 'user/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response.data) {
                var _loop_1 = function (index) {
                    var salesIndex = _this.salesData.findIndex(function (row) { return row.userId == response.data[index].userId; });
                    if (salesIndex == -1) {
                        _this.salesData.push({ roleId: response.data[index].role, userId: response.data[index].userId, userName: response.data[index].userName + ' / ' + response.data[index].cityOffice, cityOffice: response.data[index].cityOffice });
                    }
                };
                for (var index = 0; index < response.data.length; index++) {
                    _loop_1(index);
                }
                _this.salesNetworkData = JSON.parse(JSON.stringify(_this.salesData));
                console.log(_this.salesNetworkData);
                if (_this.territoryId != '0') {
                    _this.onSetTerritoryInchargeHandler();
                }
            }
            console.log(_this.salesNetworkData);
        });
    };
    TerritoryAddComponent.prototype.getDistrictList = function (stateName, isChecked, onPageLoad) {
        var _this = this;
        var stateIndex = this.masterArr.findIndex(function (row) { return row.stateName == stateName; });
        if (isChecked) {
            this.loader = true;
            this.db.fetchData([stateName], 'district/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response.data && response.data[0]) {
                    _this.masterArr[stateIndex].districtData = response.data[0]['distrcits'];
                }
                console.log(_this.masterArr);
            });
        }
        else {
            this.masterArr[stateIndex].districtData = [];
            this.data.pincodeSelectAll = false;
            // this.onFinalPinCodesHandler();
        }
        this.stateCheckedHandler();
    };
    TerritoryAddComponent.prototype.stateCheckedHandler = function () {
        var isChecked = false;
        for (var index = 0; index < this.masterArr.length; index++) {
            if (this.masterArr[index].checked) {
                isChecked = true;
            }
        }
        this.isAnyStateSelected = isChecked;
    };
    TerritoryAddComponent.prototype.getCityList = function (stateName, districtName, isChecked, onPageLoad, districtType) {
        var _this = this;
        console.log(stateName, districtName, isChecked);
        var stateIndex = this.masterArr.findIndex(function (row) { return row.stateName == stateName; });
        var districtIndex = 0;
        if (districtType == 'single') {
            districtIndex = this.masterArr[stateIndex]['districtData'].findIndex(function (row) { return row.districtName == districtName; });
        }
        if (isChecked) {
            setTimeout(function () {
                var districtDBArray = [];
                if (districtType == 'single') {
                    districtDBArray = [{ 'districtName': districtName }];
                }
                if (districtType == 'all') {
                    for (var index = 0; index < _this.masterArr[stateIndex]['districtData'].length; index++) {
                        districtDBArray.push({ 'districtName': _this.masterArr[stateIndex]['districtData'][index]['districtName'] });
                    }
                }
                console.log(districtDBArray);
                _this.loader = true;
                _this.db.fetchData([
                    {
                        'stateName': stateName,
                        'distrcits': districtDBArray,
                        'unusedPin': false
                    }
                ], 'city/list').subscribe(function (response) {
                    console.log(response);
                    setTimeout(function () {
                        _this.loader = false;
                    }, 1000);
                    _this.showSelectAll = true;
                    if (response.data && response.data[0]) {
                        for (var districtTempIndex = 0; districtTempIndex < response.data[0]['distrcits'].length; districtTempIndex++) {
                            var cityArr = [];
                            for (var index = 0; index < response.data[0]['distrcits'][districtTempIndex]['cities'].length; index++) {
                                var pincodeArr = [];
                                cityArr.push({ cityName: response.data[0]['distrcits'][districtTempIndex]['cities'][index]['cityName'], pincodeArr: pincodeArr, stateMasterId: response.data[0]['distrcits'][districtTempIndex]['cities'][index]['stateMasterId'] });
                            }
                            console.log(cityArr);
                            if (districtType == 'single') {
                                _this.masterArr[stateIndex].districtData[districtIndex]['cities'] = cityArr;
                            }
                            if (districtType == 'all') {
                                _this.masterArr[stateIndex].districtData[districtTempIndex]['cities'] = cityArr;
                            }
                        }
                        console.log(_this.masterArr[stateIndex].districtData);
                    }
                });
            }, 500);
            console.log(this.masterArr[stateIndex]['districtData']);
        }
        else {
            this.masterArr[stateIndex].districtData[districtIndex]['cities'] = [];
            this.data.pincodeSelectAll = false;
            // this.onFinalPinCodesHandler();
        }
        this.districtCheckedHandler();
    };
    TerritoryAddComponent.prototype.districtCheckedHandler = function () {
        var isChecked = false;
        for (var index = 0; index < this.masterArr.length; index++) {
            if (this.masterArr[index].checked) {
                for (var index1 = 0; index1 < this.masterArr[index].districtData.length; index1++) {
                    if (this.masterArr[index].districtData[index1].checked) {
                        isChecked = true;
                    }
                }
            }
        }
        this.isAnyDistrictSelected = isChecked;
        console.log(this.isAnyDistrictSelected);
    };
    TerritoryAddComponent.prototype.masterActionHandler = function (target, stateName, districtName, cityName, pincode, isChecked, stateMasterId) {
        var _this = this;
        var stateIndex = this.masterArr.findIndex(function (row) { return row.stateName == stateName; });
        console.log(target, stateIndex, stateName, districtName, cityName, pincode, isChecked);
        var districtIndex = '';
        var cityIndex = '';
        var pincodeIndex = '';
        if (districtName && districtName != null) {
            districtIndex = this.masterArr[stateIndex]['districtData'].findIndex(function (row) { return row.districtName == districtName; });
        }
        if (cityName && cityName != null) {
            cityIndex = this.masterArr[stateIndex]['districtData'][districtIndex]['cities'].findIndex(function (row) { return row.stateMasterId == stateMasterId; });
            console.log(cityIndex);
        }
        if (pincode && pincode != null) {
            pincodeIndex = this.masterArr[stateIndex]['districtData'][districtIndex]['cities'][cityIndex]['pincodeArr'].findIndex(function (row) { return row.pincode == pincode; });
        }
        if (target === 'state') {
            this.loader = true;
            setTimeout(function () {
                var stateDistrictArr = _this.masterArr[stateIndex].districtData;
                for (var index = 0; index < stateDistrictArr.length; index++) {
                    stateDistrictArr[index].checked = isChecked;
                    if (isChecked == false) {
                        stateDistrictArr[index].cities = [];
                    }
                    if (isChecked == false && index == stateDistrictArr.length - 1) {
                        // this.onFinalPinCodesHandler();
                    }
                    if (isChecked === true && index == stateDistrictArr.length - 1) {
                        _this.getCityList(stateName, true, true, false, 'all');
                    }
                }
                if (isChecked == false) {
                    _this.data.pincodeSelectAll = false;
                }
                _this.loader = false;
            }, 1000);
        }
        if (target === 'city') {
            if (isChecked) {
                console.log(stateMasterId);
                this.loader = true;
                this.db.fetchData({ 'stateMasterIds': [stateMasterId] }, 'city/pincodes').subscribe(function (response) {
                    console.log(response);
                    setTimeout(function () {
                        _this.loader = false;
                    }, 1000);
                    var pincodeArr = [];
                    if (response.data[0]) {
                        for (var index = 0; index < response.data[0]['pinCodes'].length; index++) {
                            pincodeArr.push({ pincode: response.data[0]['pinCodes'][index], stateMasterId: _this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex]['stateMasterId'], checked: true });
                        }
                    }
                    _this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex].pincodeArr = pincodeArr;
                    console.log(pincodeArr);
                });
            }
            else {
                for (var index = 0; index < this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex].pincodeArr.length; index++) {
                    this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex].pincodeArr[index].checked = false;
                }
            }
        }
        if (target === 'pincode') {
            var pincodeArr = this.masterArr[stateIndex].districtData[districtIndex]['cities'][cityIndex]['pincodeArr'][pincodeIndex];
            pincodeArr.checked = isChecked;
            // this.onFinalPinCodesHandler();
        }
        console.log(this.masterArr);
    };
    TerritoryAddComponent.prototype.onFinalPinCodesHandler = function () {
        var _this = this;
        var isAnyPincodeSelected = false;
        this.loader = true;
        setTimeout(function () {
            var _loop_2 = function (index) {
                if (_this.masterArr[index].checked) {
                    var _loop_3 = function (index2) {
                        if (_this.masterArr[index]['districtData'][index2].checked) {
                            var _loop_4 = function (index3) {
                                if (_this.masterArr[index]['districtData'][index2]['cities'][index3]) {
                                    var _loop_5 = function (index4) {
                                        if (_this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].checked) {
                                            var isPincodeExist = _this.finalPincodesArr.findIndex(function (pincode) { return pincode == _this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].pincode; });
                                            isAnyPincodeSelected = true;
                                            if (isPincodeExist === -1) {
                                                console.log(_this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr']);
                                                _this.finalPincodesArr.push({ stateMasterId: _this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].stateMasterId, pincode: _this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].pincode });
                                                _this.finalPincodesDetailArr.push({ stateMasterId: _this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].stateMasterId, stateName: _this.masterArr[index].stateName, districtName: _this.masterArr[index]['districtData'][index2]['districtName'], cityName: _this.masterArr[index]['districtData'][index2]['cities'][index3].cityName, pincode: _this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].pincode });
                                            }
                                        }
                                    };
                                    for (var index4 = 0; index4 < _this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'].length; index4++) {
                                        _loop_5(index4);
                                    }
                                }
                            };
                            for (var index3 = 0; index3 < _this.masterArr[index]['districtData'][index2]['cities'].length; index3++) {
                                _loop_4(index3);
                            }
                        }
                    };
                    for (var index2 = 0; index2 < _this.masterArr[index]['districtData'].length; index2++) {
                        _loop_3(index2);
                    }
                }
                if (index == _this.masterArr.length - 1) {
                    setTimeout(function () {
                        _this.loader = false;
                        if (isAnyPincodeSelected) {
                            _this.onStateListHandler();
                            _this.showSelectAll = false;
                            _this.data.pincodeSelectAll = false;
                            _this.distinctSelectedState = [];
                            var _loop_6 = function (finalIndex) {
                                var existIndex = _this.distinctSelectedState.findIndex(function (stateName) { return stateName == _this.finalPincodesDetailArr[finalIndex].stateName; });
                                if (existIndex == -1) {
                                    _this.distinctSelectedState.push(_this.finalPincodesDetailArr[finalIndex].stateName);
                                }
                            };
                            for (var finalIndex = 0; finalIndex < _this.finalPincodesDetailArr.length; finalIndex++) {
                                _loop_6(finalIndex);
                            }
                            _this.toast.openSucess('PincodeList Updated!', '');
                        }
                        else {
                            _this.toast.openSucess('No Pincode Selected!', '');
                        }
                    }, 500);
                }
            };
            for (var index = 0; index < _this.masterArr.length; index++) {
                _loop_2(index);
            }
        }, 1000);
        console.log(this.finalPincodesDetailArr);
    };
    TerritoryAddComponent.prototype.save_territory = function () {
        var _this = this;
        console.log("submit");
        if (!this.isDetailPincodeBtnClicked && !this.data.territory) {
            console.log('hello');
            jquery__WEBPACK_IMPORTED_MODULE_7__('#territoryName').focus();
            return;
        }
        if (!this.isDetailPincodeBtnClicked && (!this.data.segment || this.data.segment.length == 0)) {
            if (!this.data.segment || this.data.segment.length == 0) {
                jquery__WEBPACK_IMPORTED_MODULE_7__('#segmentName').focus();
            }
            return;
        }
        console.log(this.finalPincodesArr);
        var userArr = [];
        console.log(this.data.salesUsers);
        if (!this.isDetailPincodeBtnClicked && this.data.salesUsers && this.data.salesUsers.length > 0) {
            for (var index = 0; index < this.data.salesUsers.length; index++) {
                userArr.push(this.data.salesUsers[index].userId);
            }
        }
        console.log(userArr);
        if (this.finalPincodesArr.length === 0) {
            this.data.pincodeEmpty = true;
        }
        else {
            this.data.pincodeEmpty = false;
        }
        // if (userArr.length === 0) {
        //    this.data.userEmpty = true;
        // } else {
        //    this.data.userEmpty = false;
        // }
        if (this.data.pincodeEmpty) {
            return;
        }
        this.loader = true;
        var callApiObject = {};
        var callApiUrl = '';
        if (this.territoryId != '0') {
            callApiObject = { 'territoryID': this.territoryId, 'territoryPinCodes': this.finalPincodesArr };
            callApiUrl = 'territory/pincode/add';
        }
        else {
            callApiObject = { 'territoryName': this.data.territory, 'segments': this.data.segment, 'territoryPinCodes': this.finalPincodesArr, 'salesUsers': userArr };
            callApiUrl = 'territory/add';
        }
        console.log(callApiObject);
        console.log(callApiUrl);
        this.db.fetchData(callApiObject, callApiUrl)
            .subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response.status == 'Success') {
                _this.toast.openSucess('Territory Saved Sucessfully!', '');
                if (_this.isDetailPincodeBtnClicked) {
                    _this.isDetailPincodeBtnClicked = false;
                    _this.onExistingTerritoryHandler();
                }
                else {
                    _this.router.navigate(['/territory-list']);
                }
            }
            else {
                _this.dialog.alertWarning(response.message);
            }
        });
    };
    TerritoryAddComponent.prototype.getAllPincodeHandler = function (isChecked) {
        var _this = this;
        if (isChecked) {
            var stateMasterIdArr = [];
            for (var index = 0; index < this.masterArr.length; index++) {
                if (this.masterArr[index].checked) {
                    for (var index2 = 0; index2 < this.masterArr[index]['districtData'].length; index2++) {
                        if (this.masterArr[index]['districtData'][index2].checked) {
                            for (var index3 = 0; index3 < this.masterArr[index]['districtData'][index2]['cities'].length; index3++) {
                                if (this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'].length === 0) {
                                    stateMasterIdArr.push(this.masterArr[index]['districtData'][index2]['cities'][index3].stateMasterId);
                                }
                            }
                        }
                    }
                }
            }
            console.log(stateMasterIdArr);
            if (stateMasterIdArr.length > 0) {
                this.loader = true;
                this.db.fetchData({ 'stateMasterIds': stateMasterIdArr }, 'city/pincodes').subscribe(function (response) {
                    console.log(response);
                    setTimeout(function () {
                        _this.loader = false;
                    }, 1000);
                    for (var index = 0; index < response.data.length; index++) {
                        var pincodeArr = [];
                        for (var index1 = 0; index1 < response.data[index]['pinCodes'].length; index1++) {
                            pincodeArr.push({ pincode: response.data[index]['pinCodes'][index1], stateMasterId: response.data[index].stateMasterId, checked: true });
                        }
                        for (var masterIndex = 0; masterIndex < _this.masterArr.length; masterIndex++) {
                            if (_this.masterArr[masterIndex].checked) {
                                for (var masterindex2 = 0; masterindex2 < _this.masterArr[masterIndex]['districtData'].length; masterindex2++) {
                                    if (_this.masterArr[masterIndex]['districtData'][masterindex2].checked) {
                                        for (var masterindex3 = 0; masterindex3 < _this.masterArr[masterIndex]['districtData'][masterindex2]['cities'].length; masterindex3++) {
                                            if (_this.masterArr[masterIndex]['districtData'][masterindex2]['cities'][masterindex3].stateMasterId == response.data[index].stateMasterId) {
                                                _this.masterArr[masterIndex]['districtData'][masterindex2]['cities'][masterindex3].checked = true;
                                                _this.masterArr[masterIndex]['districtData'][masterindex2]['cities'][masterindex3].pincodeArr = pincodeArr;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                });
            }
            else {
                this.pincodeSelectAllHandler(isChecked);
            }
        }
        else {
            this.pincodeSelectAllHandler(isChecked);
        }
    };
    TerritoryAddComponent.prototype.pincodeSelectAllHandler = function (isChecked) {
        var _this = this;
        this.loader = true;
        setTimeout(function () {
            for (var index = 0; index < _this.masterArr.length; index++) {
                if (_this.masterArr[index].checked) {
                    for (var index2 = 0; index2 < _this.masterArr[index]['districtData'].length; index2++) {
                        if (_this.masterArr[index]['districtData'][index2].checked) {
                            for (var index3 = 0; index3 < _this.masterArr[index]['districtData'][index2]['cities'].length; index3++) {
                                if (_this.masterArr[index]['districtData'][index2]['cities'][index3]) {
                                    _this.masterArr[index]['districtData'][index2]['cities'][index3].checked = isChecked;
                                    for (var index4 = 0; index4 < _this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'].length; index4++) {
                                        _this.masterArr[index]['districtData'][index2]['cities'][index3]['pincodeArr'][index4].checked = isChecked;
                                    }
                                }
                            }
                        }
                    }
                }
                if (index == _this.masterArr.length - 1) {
                    _this.loader = false;
                }
            }
        }, 1000);
    };
    TerritoryAddComponent.prototype.emptyFinalPincodeArr = function () {
        this.isDetailPincodeBtnClicked = true;
        this.finalPincodesDetailArr = [];
        this.finalPincodesArr = [];
    };
    TerritoryAddComponent.prototype.deleteSelectedPincode = function (pincodeType, pincodeRowSelected) {
        var _this = this;
        console.log(pincodeType);
        this.dialog.delete(pincodeType).then(function (result) {
            console.log(result);
            if (result) {
                if (pincodeType == 'Pincode') {
                    console.log(pincodeRowSelected);
                    _this.finalPincodesArr = _this.finalPincodesArr.filter(function (pincodeRow) { return pincodeRow.stateMasterId != pincodeRowSelected.stateMasterId && pincodeRow.pincode != pincodeRowSelected.pincode; });
                    _this.finalPincodesDetailArr = _this.finalPincodesDetailArr.filter(function (pincodeRow) { return pincodeRow.stateMasterId != pincodeRowSelected.stateMasterId && pincodeRow.pincode != pincodeRowSelected.pincode; });
                    console.log(_this.finalPincodesArr);
                    console.log(_this.finalPincodesDetailArr);
                }
                else if (pincodeType == 'all') {
                    _this.finalPincodesArr = [];
                    _this.finalPincodesDetailArr = [];
                }
                else {
                    var statePincodeArr_1 = _this.finalPincodesDetailArr.filter(function (pincodeRow) { return pincodeRow.stateName == pincodeType; });
                    var _loop_7 = function (index) {
                        _this.finalPincodesArr = _this.finalPincodesArr.filter(function (pincodeRow) { return pincodeRow.pincode != statePincodeArr_1[index].pincode; });
                    };
                    for (var index = 0; index < statePincodeArr_1.length; index++) {
                        _loop_7(index);
                    }
                    _this.finalPincodesDetailArr = _this.finalPincodesDetailArr.filter(function (pincodeRow) { return pincodeRow.stateName != pincodeType; });
                    console.log(_this.finalPincodesArr);
                }
                _this.data.deleteAllSelected = '';
                _this.distinctSelectedState = [];
                var _loop_8 = function (finalIndex) {
                    var existIndex = _this.distinctSelectedState.findIndex(function (stateName) { return stateName == _this.finalPincodesDetailArr[finalIndex].stateName; });
                    if (existIndex == -1 && _this.finalPincodesDetailArr[finalIndex].stateName) {
                        _this.distinctSelectedState.push(_this.finalPincodesDetailArr[finalIndex].stateName);
                    }
                };
                for (var finalIndex = 0; finalIndex < _this.finalPincodesDetailArr.length; finalIndex++) {
                    _loop_8(finalIndex);
                }
                _this.toast.openSucess('Pincode Deleted!', '');
            }
            else {
                _this.data.deleteAllSelected = '';
            }
        });
    };
    TerritoryAddComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action === 'open') {
            this.active[key] = true;
            jquery__WEBPACK_IMPORTED_MODULE_7__('#' + key).focus();
        }
        if (action === 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    TerritoryAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-territory-add',
            template: __webpack_require__(/*! ./territory-add.component.html */ "./src/app/territory/territory-add/territory-add.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()],
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
            src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"],
            src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"],
            _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"]])
    ], TerritoryAddComponent);
    return TerritoryAddComponent;
}());



/***/ }),

/***/ "./src/app/territory/territory-detail/territory-detail.component.html":
/*!****************************************************************************!*\
  !*** ./src/app/territory/territory-detail/territory-detail.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/territory-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>Golden Place</h2>\n        <p class=\"light\">32 Pincode</p>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info\">\n            <div class=\"sprate-box pb0\">\n              <div class=\"basic-details padding0\">\n                <div class=\"profile-info\">\n                  <ul>\n                    <li class=\"col s5\">\n                      <div class=\"cs-box\">\n                        <img src=\"assets/img/map-location.svg\" class=\"fix-img\">\n                        <span>Name</span>\n                        <p>Golden Place</p>\n                        <a class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openDialog()\"><i class=\"material-icons\">create</i></a>\n                      </div>\n                    </li>\n                    <li  class=\"col s7\">\n                      <div class=\"cs-box\">\n                        <img src=\"assets/img/segment.svg\" class=\"fix-img h20\">\n                        <span>Segment</span>\n                        <!-- <p>0129 625874</p> -->\n                        <ul class=\"segment-code\">\n                          <li>\n                            <span>2 Wheeler<a><i class=\"material-icons\">delete_sweep</i></a></span>\n                          </li>\n                          <li>\n                            <span>4 Wheeler<a><i class=\"material-icons\">delete_sweep</i></a></span>\n                          </li>\n                          <li>\n                            <span>3 Wheeler<a><i class=\"material-icons\">delete_sweep</i></a></span>\n                          </li>\n                        </ul>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                \n                <mat-divider class=\"mt15 mb15\"></mat-divider>\n                <div class=\"col s12\">\n                  <div class=\"add-field mb15\">\n                    <div class=\"heading\">\n                      <h2>Assign Users <a><i class=\"material-icons\">add</i></a></h2>\n                    </div>\n                  </div>\n                  <div class=\"cs-figure field-figure\">\n                    <ul>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <p>Ram Kumar Verma</p>\n                            <span>RSM</span>\n                          </div>\n                          <a class=\"del-btn\" matRipple ><i class=\"material-icons\">delete_sweep</i></a>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <p>Pankaj Verma</p>\n                          </div>\n                          <a class=\"del-btn\" matRipple ><i class=\"material-icons\">delete_sweep</i></a>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>HEADING</h2>\n                <div class=\"top-search wp20 ml20 right-serach\">\n                  <input type=\"text\" placeholder=\"SEARCH. . .\">\n                  <i class=\"material-icons\">search</i>\n                </div>\n              </div>\n              <div class=\"state-table\">\n                <table>\n                  <tr>\n                    <td>\n                      <table>\n                        <tr>\n                          <td>\n                            Haryana\n                            <a class=\"del-btn\">Delete</a>\n                          </td>\n                        </tr>\n                      </table>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <table>\n                        <tr>\n                          <td class=\"w250\">\n                            Faridabad\n                          </td>\n                          <td class=\"pb0\">\n                            <ul class=\"area-code\">\n                              <li matRipple >\n                                <a>N.I.T 5 <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                              <li matRipple >\n                                <a>Alampur <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                              <li matRipple >\n                                <a>Badarpur Said<i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                            </ul>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            Palwal\n                          </td>\n                          <td class=\"pb0\">\n                            <ul class=\"area-code\">\n                              <li matRipple >\n                                <a>Palwal Municipal Council <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                              <li matRipple >\n                                <a>Baghola Census Town <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                              <li matRipple class=\"active\">\n                                <a>Amru <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                            </ul>\n                          </td>\n                        </tr>\n                      </table>\n                    </td>\n                  </tr>\n                </table>\n                <table>\n                  <tr>\n                    <td>\n                      <table>\n                        <tr>\n                          <td>\n                            Uttar Pradesh\n                            <a class=\"del-btn\">Delete</a>\n                          </td>\n                        </tr>\n                      </table>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <table>\n                        <tr>\n                          <td class=\"w250\">\n                            Faridabad\n                          </td>\n                          <td class=\"pb0\">\n                            <ul class=\"area-code\">\n                              <li matRipple >\n                                <a>N.I.T 5 <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                              <li matRipple >\n                                <a>Alampur <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                              <li matRipple >\n                                <a>Badarpur Said<i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                            </ul>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            Palwal\n                          </td>\n                          <td class=\"pb0\">\n                            <ul class=\"area-code\">\n                              <li matRipple >\n                                <a>Palwal Municipal Council <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                              <li matRipple >\n                                <a>Baghola Census Town <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                              <li matRipple class=\"active\">\n                                <a>Amru <i class=\"material-icons\">keyboard_arrow_right</i></a>\n                              </li>\n                            </ul>\n                          </td>\n                        </tr>\n                      </table>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col s4\">\n          <div class=\"territory-info\">\n          \n            <div class=\"head\" [ngClass]=\"{'active':active.districts==true}\">\n              <h2>HARYANA / PALWAL</h2>\n              <i class=\"material-icons search-icon\" (click)=\"toggleterritory('districts','open')\"  matRipple style=\"right: 15px;\">search</i>\n              <input type=\"text\" placeholder=\"search...\" class=\"fix-search\">\n              <i class=\"material-icons close-icon\" (click)=\"toggleterritory('districts','close')\" matRipple>clear</i>\n            </div>\n\n            <div class=\"cs-checkbox\">\n              <div class=\"checkbox-outer\">\n                <p class=\"head-cs\">Baghola Census Town</p>\n                <section class=\"checkbox-inner\">\n                  <div class=\"cs-table\">\n                    <div class=\"table-head sticky-small\">\n                      <table class=\"sno-border\">\n                        <tr>\n                          <th class=\"w30\">&nbsp;</th>\n                          <th>Pincode</th>\n                          <th class=\"w50\">&nbsp;</th>\n                        </tr>\n                      </table>\n                    </div>\n                    \n                    <div class=\"table-container\">\n                      <div class=\"table-content\">\n                        <table class=\"sno-border\">\n                          <tr>\n                            <td class=\"w30\">1</td>\n                            <td>1234</td>\n                            <td class=\"w50\" matRipple><a class=\"pointer\"><i class=\"material-icons red-clr\">delete_sweep</i></a></td>\n                          </tr>\n                          <tr>\n                            <td>2</td>\n                            <td>1234</td>\n                            <td matRipple><a class=\"pointer\"><i class=\"material-icons red-clr\">delete_sweep</i></a></td>\n                          </tr>\n                          <tr>\n                            <td>4</td>\n                            <td>1234</td>\n                            <td matRipple><a class=\"pointer\"><i class=\"material-icons red-clr\">delete_sweep</i></a></td>\n                          </tr>\n                          \n                        </table>\n                      </div>\n                    </div>\n                    \n                  </div>\n                </section>\n              </div>\n            </div>\n          </div>\n        </div> \n      </div>\n    </div>\n  </div>\n  \n  <a class=\"cs-fix-btn\" matRipple >Add Pincode</a>\n\n  </div>\n\n  <div class=\"h50\"></div>\n\n"

/***/ }),

/***/ "./src/app/territory/territory-detail/territory-detail.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/territory/territory-detail/territory-detail.component.ts ***!
  \**************************************************************************/
/*! exports provided: TerritoryDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TerritoryDetailComponent", function() { return TerritoryDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _place_modal_place_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../place-modal/place-modal.component */ "./src/app/territory/place-modal/place-modal.component.ts");




var TerritoryDetailComponent = /** @class */ (function () {
    function TerritoryDetailComponent(dialog) {
        this.dialog = dialog;
        this.active = {};
    }
    TerritoryDetailComponent.prototype.ngOnInit = function () {
    };
    TerritoryDetailComponent.prototype.openDialog = function () {
        var dialogRef = this.dialog.open(_place_modal_place_modal_component__WEBPACK_IMPORTED_MODULE_3__["PlaceModalComponent"], {
            width: '500px',
        });
    };
    TerritoryDetailComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    TerritoryDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-territory-detail',
            template: __webpack_require__(/*! ./territory-detail.component.html */ "./src/app/territory/territory-detail/territory-detail.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"]])
    ], TerritoryDetailComponent);
    return TerritoryDetailComponent;
}());



/***/ }),

/***/ "./src/app/territory/territory-list/territory-list.component.html":
/*!************************************************************************!*\
  !*** ./src/app/territory/territory-list/territory-list.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/territory.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Postal / Territory Master</h2>\n        <p>Add New Location</p>\n      </div>\n    </div>\n\n    <div  *ngIf=\"filter.name || filter.segment || filter.pincode \" class=\"filter-container left-auto\">\n      <div (click)=\"clearfilter()\" class=\"filter-btn\">\n        <button mat-button >CLEAR FILTER</button>\n      </div>\n    </div>\n  </div>\n  \n\n  <div class=\"container-outer pt0\">\n  <!-- <app-master-tab-list></app-master-tab-list> -->\n  \n  <div >\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"cs-table left-right-20\">\n          <div class=\"sticky-head\">\n          <div class=\"table-head\">\n            <table>\n              <tr>\n                <th >Territory Name</th>\n                <th class=\"w150 text-center\">Segments</th>\n                <th class=\"w150 text-center\">Sales Users</th>\n                <th class=\"w150 text-center\">Distributors</th>\n                <th class=\"w150 text-center\">States</th>\n                <th class=\"w150 text-center\">Districts</th>\n                <th class=\"w150 text-center\">Pincodes</th>\n              </tr>\n            </table>\n          </div>\n          <div class=\"table-head bdrt\">\n             <table>\n              <tr>\n                  <th >\n                    <div class=\"th-search-acmt\" [ngClass]=\"{ 'clear-feilds' : removename == true}\">\n                          <mat-form-field>\n                                  <input type=\"text\"  name=\"name\" [(ngModel)]=\"filter.name\" (ngModelChange)=\"nameList()\" matInput [matAutocomplete]=\"auto1\">\n                                  <mat-autocomplete #auto1=\"matAutocomplete\" >\n                                      <mat-option *ngFor=\"let name of namelist\" (click)=\"nameFilter()\" value=\"{{name.territoryName}}\">{{name.territoryName}}</mat-option>\n                                  </mat-autocomplete>\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removenamefilter()\"><i class=\"material-icons\">clear</i></a>\n                          </mat-form-field> \n                    </div>\n                  </th>\n\n                  <th class=\"w150 text-center\">\n                    <div class=\"th-search-acmt\" [ngClass]=\"{ 'clear-feilds' : filter.segment}\">\n                          <mat-form-field>\n\n                            <input type=\"text\"  name=\"segment\" [(ngModel)]=\"filter.segment\" (ngModelChange)=\"segmentList()\" matInput [matAutocomplete]=\"auto2\">\n\n                          <mat-autocomplete #auto2=\"matAutocomplete\" >\n                              <mat-option *ngFor=\"let list of segmentlist\" (click)=\"segmentFilter()\" value=\"{{list.text}}\">{{list.text}}</mat-option>\n                          </mat-autocomplete>\n\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removeSegmentFilter()\"><i class=\"material-icons\">clear</i></a>\n                          </mat-form-field> \n                    </div>\n                  </th>\n\n                  <th class=\"w150 text-center\">&nbsp;</th>\n\n                  <th class=\"w150 text-center\">&nbsp;</th>\n\n                  <th class=\"w150 text-center\">&nbsp;</th>\n                  <th class=\"w150 text-center\">&nbsp;</th>\n                  <th class=\"w150 text-center\">\n                      <div class=\"th-search-acmt\" [ngClass]=\"{ 'clear-feilds' : filter.pincode && filter.pincode != null}\">\n                            <mat-form-field>\n                                    <input type=\"text\"  name=\"pincode\" [(ngModel)]=\"filter.pincode\" (ngModelChange)=\"pincodeTerritoryList()\" maxlength=\"6\" matInput [matAutocomplete]=\"auto3\">\n\n                            <a class=\"close-mat\" matRipple  matTooltip=\"Clear\" (click)=\" removePinFilter()\"><i class=\"material-icons\">clear</i></a>\n                            </mat-form-field> \n                      </div>\n                  </th>\n                </tr>\n                </table>\n                \n          </div>\n        </div>\n          <div class=\"table-container\">\n            <div class=\"table-content\">\n              <table>\n                <tr *ngFor=\"let list of data; let i=index;\">\n\n                  <td >\n                     <a class=\"link-btn\" routerLink=\"/territory-add/{{list.territoryID}}\" routerLinkActive=\"active\" mat-button>{{list.territoryName}}</a>\n                  </td>\n\n                  <td class=\"w150 text-center f12 segment-red\">   \n                    {{list.segmentsCount}}\n                  </td>\n                \n\n                  <td class=\"w150 text-center f12 user-blue\">\n                      {{list.salesUsersCount}}\n                  </td>\n\n                  <td class=\"w150 text-center f12 user-blue\">\n                    {{list.networkCount}}\n                  </td>\n                 \n                  <td class=\"w150 text-center f12 state-yellow\">\n                      {{list.statesCount}}\n                  </td>\n\n                  <td class=\"w150 text-center f12 district-green\">\n                      {{list.districtsCount}}\n                  </td>\n\n                  <td class=\"w150 text-center f12 pincode-pink\">\n                      {{list.pinCodesCount}}\n                      <div class=\"action-btns\">\n                          <a mat-button class=\"view\" routerLink=\"/territory-add/{{list.territoryID}}\" routerLinkActive=\"active\">\n                             <i class=\"material-icons\">remove_red_eye</i> View</a>\n                          <button mat-button class=\"delete\" (click)=\"deleteTerritory(list.territoryID)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                        </div>\n                  </td>\n\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"div\" class=\"data-not-available\" >\n      <div class=\"outer\">\n          <div class=\"iinear\">\n              <div class=\"figure\" matRipple>\n                  <div class=\"header\">\n                      <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                  </div>\n                  \n                  <div class=\"description\">\n                      <!-- <div class=\"cs-heading\">\n                          <h2>No Territory List</h2>\n                      </div> -->\n                      <div class=\"img\">\n                              <i class=\"material-icons\">error_outline</i>\n                      </div>\n                      <div class=\"psc\">\n                          <p>data not available</p>\n                          <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n\n  </div>\n  <div class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" matRipple routerLink=\"/territory-add/0\" routerLinkActive=\"active\"><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/territory/territory-list/territory-list.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/territory/territory-list/territory-list.component.ts ***!
  \**********************************************************************/
/*! exports provided: TerritoryListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TerritoryListComponent", function() { return TerritoryListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");





var TerritoryListComponent = /** @class */ (function () {
    function TerritoryListComponent(db, dialog) {
        this.db = db;
        this.dialog = dialog;
        this.territorylist = [];
        this.auto3 = '';
        this.filter = {};
        this.namelist = [];
        this.pinlist = [];
        this.pinlist1 = [];
        this.removename = false;
        this.removepin = false;
        this.removesegment = false;
        this.div = false;
        this.segmentlist = [];
        this.getTerritoryList({});
    }
    TerritoryListComponent.prototype.deleteTerritory = function (id) {
        var _this = this;
        console.log(id);
        this.dialog.delete('Territory User  !').then(function (result) {
            if (result) {
                console.log(id);
                _this.db.fileData("", "territory/delete/" + id).subscribe(function (result) {
                    console.log(result);
                    if (result['status'] == "Success") {
                        _this.getTerritoryList({});
                    }
                });
            }
        });
    };
    TerritoryListComponent.prototype.ngOnInit = function () {
    };
    TerritoryListComponent.prototype.clearfilter = function () {
        this.removename = false;
        this.filter = {};
        this.getTerritoryList({});
    };
    TerritoryListComponent.prototype.getTerritoryList = function (requestData) {
        var _this = this;
        this.div = false;
        this.loader = true;
        console.log(requestData);
        this.db.fetchData(requestData, 'territory/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.territorylist = response;
            }
            else {
                _this.div = true;
                _this.territorylist = [];
            }
            _this.loader = false;
            _this.data = _this.territorylist.data;
            console.log(_this.data);
        });
    };
    TerritoryListComponent.prototype.modifyFilterData = function () {
        var selectedData = {};
        if (this.filter.name) {
            selectedData['territoryName'] = this.filter.name;
        }
        if (this.filter.segment) {
            selectedData['segments'] = [this.filter.segment];
        }
        if (this.filter.pincode) {
            selectedData['pinCode'] = this.filter.pincode;
        }
        console.log(selectedData);
        return selectedData;
    };
    TerritoryListComponent.prototype.nameList = function () {
        var _this = this;
        this.db.fetchData({ "territoryName": this.filter.name }, 'territory/list').subscribe(function (response) {
            console.log(response);
            _this.namelist = response['data'];
            console.log(_this.namelist);
        });
    };
    TerritoryListComponent.prototype.nameFilter = function () {
        console.log(this.filter.name);
        var selectedData = this.modifyFilterData();
        this.getTerritoryList(selectedData);
        this.removename = true;
    };
    TerritoryListComponent.prototype.removenamefilter = function () {
        this.filter.name = '';
        this.namelist = [];
        var selectedData = this.modifyFilterData();
        this.getTerritoryList(selectedData);
        this.removename = false;
    };
    TerritoryListComponent.prototype.pincodeTerritoryList = function () {
        console.log(this.filter.pincode.length);
        if (this.filter.pincode && (this.filter.pincode).length == 6) {
            var selectedData = this.modifyFilterData();
            this.getTerritoryList(selectedData);
        }
        if (!this.filter.pincode || (this.filter.pincode).length == 0) {
            var selectedData = this.modifyFilterData();
            this.getTerritoryList({});
        }
    };
    TerritoryListComponent.prototype.removePinFilter = function () {
        this.filter.pincode = '';
        var selectedData = this.modifyFilterData();
        this.getTerritoryList(selectedData);
        this.removepin = false;
    };
    TerritoryListComponent.prototype.segmentList = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/' + this.filter.segment).subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    TerritoryListComponent.prototype.segmentFilter = function () {
        var selectedData = this.modifyFilterData();
        this.getTerritoryList(selectedData);
        this.removesegment = true;
    };
    TerritoryListComponent.prototype.removeSegmentFilter = function () {
        this.filter.segment = '';
        var selectedData = this.modifyFilterData();
        this.getTerritoryList(selectedData);
        this.segmentlist = [];
        this.removesegment = false;
    };
    TerritoryListComponent.prototype.pinList = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ "pincode": this.filter.pincode }, 'territory/detail').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.pinlist = response['data'];
        });
        console.log(this.pinlist);
        for (var indexp = 0; indexp < this.pinlist.length; indexp++) {
            var terrPincodeArrp = [];
            var stateArrp = this.pinlist[indexp]['states'];
            for (var index2p = 0; index2p < stateArrp.length; index2p++) {
                var districtArrp = stateArrp[index2p]['distrcits'];
                for (var index3p = 0; index3p < districtArrp.length; index3p++) {
                    var cityArrp = districtArrp[index3p]['cities'];
                    for (var index4p = 0; index4p < cityArrp.length; index4p++) {
                        var areaArrp = cityArrp[index4p]['pinCodes'];
                        for (var index5p = 0; index5p < areaArrp.length; index5p++) {
                            terrPincodeArrp.push(areaArrp[index5p]);
                        }
                    }
                }
            }
            this.pinlist[indexp].pincodeArr = terrPincodeArrp;
        }
        console.log(this.pinlist);
        this.pinlist1 = [];
        for (var i = 0; i < this.pinlist.length; i++) {
            for (var j = 0; j < this.pinlist[i].pincodeArr.length; j++) {
                this.pinlist1.push(this.pinlist[i].pincodeArr[j]);
            }
        }
        console.log(this.pinlist1);
    };
    TerritoryListComponent.prototype.pinFilter = function () {
        this.filter.name = '';
        this.removename = false;
        console.log(this.filter.pincode);
        this.getTerritoryList({ "pincode": this.filter.pincode });
        this.removepin = true;
    };
    TerritoryListComponent.prototype.removepinfilter = function () {
        this.filter.pincode = '';
        this.getTerritoryList({ "pincode": this.filter.pincode });
        this.removepin = false;
    };
    TerritoryListComponent.prototype.goToEditTerritoryPage = function () {
    };
    TerritoryListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-territory-list',
            template: __webpack_require__(/*! ./territory-list.component.html */ "./src/app/territory/territory-list/territory-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"]])
    ], TerritoryListComponent);
    return TerritoryListComponent;
}());



/***/ }),

/***/ "./src/app/toast.ts":
/*!**************************!*\
  !*** ./src/app/toast.ts ***!
  \**************************/
/*! exports provided: SnackBarOverview */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SnackBarOverview", function() { return SnackBarOverview; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");



var SnackBarOverview = /** @class */ (function () {
    function SnackBarOverview(snackBar) {
        this.snackBar = snackBar;
    }
    SnackBarOverview.prototype.ngOnInit = function () {
    };
    SnackBarOverview.prototype.openSucess = function (message, action) {
        this.snackBar.open(message, action, {
            duration: 2500,
            verticalPosition: 'top'
        });
    };
    SnackBarOverview.prototype.openError = function (message, action) {
        this.snackBar.open(message, action, {
            duration: 2500,
            verticalPosition: 'top',
        });
    };
    SnackBarOverview = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({ providedIn: 'root' }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSnackBar"]])
    ], SnackBarOverview);
    return SnackBarOverview;
}());



/***/ }),

/***/ "./src/app/travel/add-on-detail/add-on-detail.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/travel/add-on-detail/add-on-detail.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n\n<div class=\"edit-modal\" >\n    <p class=\"heading\">ADD TRAVEL</p>\n    <div mat-dialog-content style=\"min-height: 370px;\">\n      <div class=\"from-fields\">\n        <div class=\"row\" *ngIf=\"tmpdate==0\">\n            <div class=\"col s4\">\n                <div class=\"control-field\">\n                  <mat-form-field class=\"cs-input\">\n                    <mat-select placeholder=\"Select Date\" name=\"date\" #date=\"ngModel\" [(ngModel)]=\"planDate\" required>\n                      <mat-option *ngFor=\"let day of dayArray;let i=index\" value=\"{{day}}\"> {{day | date :'EEEE, MMMM d, y'}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n        </div>\n        <div class=\"row mt15\">\n            <div class=\"col s4\">\n                <div class=\"multi-all-select\">{{state}}\n                  <label>State</label>\n                  <ng-multiselect-dropdown\n                  name=\"state\"\n                  [placeholder]=\"'Select State'\"\n                  [data]=\"gState\"\n                  [(ngModel)]=\"selectedState.state\"\n                  name=\"state\"            \n                  [settings]=\"dropdownSettings\"           \n                  (onSelect)=\"getDistrict(selectedState.state)\"\n                >\n                </ng-multiselect-dropdown>\n              </div>\n            </div>\n            <div class=\"col s4\">\n              <div class=\"multi-all-select\">\n                <label>District</label>\n                <ng-multiselect-dropdown\n                name=\"district\"\n                [placeholder]=\"'Select District'\"\n                [data]=\"tmpDistrictArray\"\n                [(ngModel)]=\"selectedDistrict.district\"\n                [settings]=\"dropdownSettings1\" \n                (onSelect)=\"getCity(selectedDistrict.district)\"\n                >\n              </ng-multiselect-dropdown>\n            </div>\n          </div>\n      <div class=\"col s4\">\n        <div class=\"control-field pr80\">\n          <div class=\"multi-all-select\">\n            <label>City</label>\n            <ng-multiselect-dropdown\n            name=\"city\"\n            [placeholder]=\"'Select City'\"\n            [data]=\"gCity\"\n            [(ngModel)]=\"myselectedcity.city\"\n            name=\"city\"\n            [settings]=\"dropdownSettings2\"\n            (onSelect)=\"onCitySelect(myselectedcity.city)\"\n            >\n          </ng-multiselect-dropdown>\n        </div>\n        <div class=\"plus-btn\">\n            <button type=\"button\" (click)=\"addTravelOnDetail()\" mat-raised-button color=\"accent\">\n              <i class=\"material-icons\" >add</i>\n            </button>\n        </div>\n       </div>\n      </div>\n     \n  </div>\n    </div>\n   \n\n  \n  <div *ngIf=\"newTravelonDate.length!=0\" class=\"row mt15\">\n    <div class=\"col s12 padding0\">\n      <div class=\"cs-table left-right-20\">\n        <div class=\"table-head\">\n          <table>\n            <tr>\n              <th class=\"w180\">State</th>\n              <th class=\"w180\">District</th>\n              <th class=\"w150\">City</th>\n              <th> Sales Activity </th>\n              <th class=\"w80\">Action</th>\n            </tr>\n          </table>\n        </div>\n        <div class=\"table-container scroll\">\n          <div class=\"table-content none-shadow\">\n            <table>\n              <tr *ngFor=\"let detail of newTravelonDate ; let indx=index\">\n                <td class=\"w180\">{{detail.state}}</td>\n                <td class=\"w180\">{{detail.district}}</td>\n                <td class=\"w150\">{{detail.city}}</td>\n                <td>\n                  <div class=\"from-fields \">\n                    <div class=\"row\">\n                      <div class=\"col s12\">\n                        <div class=\"select-one pt10\">\n                          <span>Do you want any sales activity ?</span>\n                          <mat-radio-group style=\"display: flex;\"  [(ngModel)]=\"detail.isSalesActivity\" name=\"isSalesActivity{{indx}}\" >\n                            <mat-radio-button [value]=true >Yes</mat-radio-button>\n                            <mat-radio-button [value]=false >No</mat-radio-button>\n                          </mat-radio-group>\n                        </div>\n                      </div>\n                      <div class=\"row\" *ngIf=\"detail.isSalesActivity==true\">\n                        <div class=\"col s6\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr\">\n                              <mat-select placeholder=\"Select\" name=\"activityType{{indx}}\" [(ngModel)]=\"detail.activityType\">\n                                <mat-option value=1>Mechanic get together</mat-option>\n                                <mat-option value=2>Retailer get together</mat-option>\n                                <mat-option value=3>van Campaign</mat-option>\n                                <mat-option value=4>Stall Campaign</mat-option>\n                                <mat-option value=5>Exhibition Participation</mat-option>\n                                <mat-option value=6>Signboard</mat-option>\n                                <mat-option value=7>Wall/Shop Painting</mat-option>\n                                <mat-option value=8>GiveAways</mat-option>\n                                <mat-option value=9>Printing Of Lesafelts,banners, posters etc.</mat-option>\n                              </mat-select>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                        <div class=\"col s6\">\n                          <div class=\"control-field\">\n                            <mat-form-field class=\"cs-input infix-bodr\">\n                              <input matInput type=\"number\" placeholder=\"Budget\" name=\"salesBudget{{indx}}\" [(ngModel)]=\"detail.salesBudget\">\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                  </div>\n                </td>\n                <td class=\"w80\">\n                    <div class=\"action-btns default-action\">\n                        <a  mat-button class=\"delete\" (click)=\"removePlan(indx)\"><i class=\"material-icons\">delete_sweep</i></a>\n                      </div>\n                </td>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n \n  </div>\n\n  <div mat-dialog-actions>\n      <button mat-raised-button color=\"warn\"  [mat-dialog-close]=\"false\" class=\"mr15\">Cancel</button>\n      <div >\n          <button mat-raised-button  [mat-dialog-close]=\"true\" color=\"accent\" (click)=\"onClick()\">Save</button>\n        </div>\n      </div>\n  </div>"

/***/ }),

/***/ "./src/app/travel/add-on-detail/add-on-detail.component.scss":
/*!*******************************************************************!*\
  !*** ./src/app/travel/add-on-detail/add-on-detail.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYXZlbC9hZGQtb24tZGV0YWlsL2FkZC1vbi1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/travel/add-on-detail/add-on-detail.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/travel/add-on-detail/add-on-detail.component.ts ***!
  \*****************************************************************/
/*! exports provided: AddOnDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddOnDetailComponent", function() { return AddOnDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);







var AddOnDetailComponent = /** @class */ (function () {
    function AddOnDetailComponent(data, service, dialog, toast, rout) {
        this.data = data;
        this.service = service;
        this.dialog = dialog;
        this.toast = toast;
        this.rout = rout;
        this.loader = false;
        this.dropdownSettings = {};
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        this.tmpDistrictArray = [];
        this.selectedState = {};
        this.selectedDistrict = {};
        this.myselectedcity = {};
        this.oldTravelDetail = [];
        this.travelData = {};
        this.dayArray = [];
        this.gState = [];
        this.gDistrict = [];
        this.gCity = [];
        this.selectedcity = [];
        this.traveldetail = [];
        this.newTravelonDate = [];
        this.travelData = data.olddata;
        // this.getStateList();
        console.log(data);
        this.oldTravelDetail = data.olddata.travelDetails;
        this.travelPlanID = data['id'];
        this.planDate = data['date'];
        this.tmpdate = this.planDate;
        this.userId = data['userId'];
        this.status = data['status'];
        this.month = data['olddata']['month'];
        this.year = data['olddata']['year'];
        console.log(this.month);
        console.log(this.year);
        // if()
        console.log(this.planDate);
    }
    AddOnDetailComponent.prototype.ngOnInit = function () {
        this.getState();
        this.seletDate(this.month);
        this.dropdownSettings = {
            singleSelection: false,
            idField: 'state',
            textField: 'state',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true
        };
        this.dropdownSettings1 = {
            singleSelection: false,
            idField: 'districtName',
            textField: 'districtName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true
        };
        this.dropdownSettings2 = {
            singleSelection: false,
            idField: 'city',
            textField: 'city',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true
        };
    };
    AddOnDetailComponent.prototype.seletDate = function (month) {
        if (month == 'January' || month == 'March' || month == 'May' || month == 'July' || month == 'August' || month == 'October' || month == 'December') {
            for (var i = 1; i <= 31; i++) {
                var planDate = month + "/" + i + "/" + this.year;
                var date = moment__WEBPACK_IMPORTED_MODULE_6__(planDate).format('YYYY-MM-DD hh:mm:ss');
                this.dayArray.push(date);
            }
        }
        else if (month == 'February') {
            var days = void 0;
            if (parseInt(this.data.year) % 4 == 0) {
                days = 29;
            }
            else {
                days = 28;
            }
            for (var j = 1; j <= days; j++) {
                var planDate = month + "/" + j + "/" + this.year;
                var date = moment__WEBPACK_IMPORTED_MODULE_6__(planDate).format('YYYY-MM-DD hh:mm:ss');
                this.dayArray.push(date);
            }
        }
        else {
            for (var k = 1; k <= 30; k++) {
                var planDate = month + "/" + k + "/" + this.year;
                var date = moment__WEBPACK_IMPORTED_MODULE_6__(planDate).format('YYYY-MM-DD hh:mm:ss ');
                this.dayArray.push(date);
            }
        }
        this.loader = false;
    };
    AddOnDetailComponent.prototype.getState = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData('', 'state/list/').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            _this.gState = response['data'];
            console.log(_this.gState);
        });
    };
    AddOnDetailComponent.prototype.getDistrict = function (state) {
        var _this = this;
        this.tmpDistrictArray = [];
        this.loader = true;
        this.service.fetchData({ states: state }, 'districtinstate/list').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            _this.gDistrict = response['data'];
            var districtArray = [];
            var _loop_1 = function (i) {
                var index = districtArray.findIndex(function (row) { return row.districtName === _this.gDistrict[i].districtName; });
                if (index == -1) {
                    districtArray.push(_this.gDistrict[i]);
                }
            };
            for (var i = 0; i < _this.gDistrict.length; i++) {
                _loop_1(i);
            }
            _this.tmpDistrictArray = districtArray;
            console.log(_this.tmpDistrictArray);
        });
    };
    AddOnDetailComponent.prototype.getCity = function (district) {
        var _this = this;
        this.gCity = [];
        this.loader = true;
        this.service.fetchData({ districts: district }, 'citiesindistrict/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.gCity = response['data'];
            console.log(_this.gCity);
        });
    };
    AddOnDetailComponent.prototype.onCitySelect = function (cityName) {
        console.log(cityName);
        this.selectedcity = cityName;
    };
    // calculateBudget(budget)
    // {
    //   console.log(budget);
    //   this.data.salesBudget=parseInt(this.data.salesBudget)+parseInt(budget);
    // }
    AddOnDetailComponent.prototype.addTravelOnDetail = function () {
        console.log(this.planDate);
        console.log(this.selectedcity);
        for (var i = 0; i < this.selectedcity.length; i++) {
            for (var j = 0; j < this.gCity.length; j++) {
                if (this.selectedcity[i] == this.gCity[j].city) {
                    this.traveldetail.push({ district: this.gCity[j].districtName, city: this.selectedcity[i] });
                }
            }
        }
        for (var i = 0; i < this.traveldetail.length; i++) {
            for (var j = 0; j < this.tmpDistrictArray.length; j++) {
                if (this.traveldetail[i].district == this.tmpDistrictArray[j].districtName) {
                    this.newTravelonDate.push({ planDate: this.planDate, state: this.tmpDistrictArray[j].stateName, district: this.traveldetail[i].district, city: this.traveldetail[i].city, isSalesActivity: false, activityType: 0, salesBudget: 0 });
                }
            }
        }
        console.log(this.newTravelonDate);
        this.selectedDistrict.districtName = [];
        this.myselectedcity.city = [];
        this.selectedState.state = [];
    };
    AddOnDetailComponent.prototype.onClick = function () {
        var _this = this;
        this.loader = true;
        console.log(this.newTravelonDate);
        for (var i = 0; i < this.newTravelonDate.length; i++) {
            this.oldTravelDetail.push(this.newTravelonDate[i]);
            if (this.newTravelonDate[i].isSalesActivity != null) {
                this.travelData.budget = parseInt(this.travelData.budget) + parseInt(this.newTravelonDate[i].salesBudget);
                this.travelData.salesBudget = parseInt(this.travelData.salesBudget) + parseInt(this.newTravelonDate[i].salesBudget);
            }
        }
        console.log(this.travelData);
        //   let value={'travelPlanID':this.travelPlanID,'userId':this.userId,'status':this.status,'month':this.month,'travelDetails':this.newTravelonDate}
        // console.log(value);
        this.service.fetchData(this.travelData, "travelplan/update").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                // this.rout.navigate(['detail-travel']);
                _this.toast.openSucess(result['message'], "Success");
            }
            else {
                _this.toast.openError(result['message'], "Error");
            }
        });
    };
    AddOnDetailComponent.prototype.removePlan = function (index) {
        // this.data.budget=parseInt(this.data.travelBudget)-parseInt(this.dayArray[i].details.salesBudget)
        this.newTravelonDate.splice(index, 1);
    };
    AddOnDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-on-detail',
            template: __webpack_require__(/*! ./add-on-detail.component.html */ "./src/app/travel/add-on-detail/add-on-detail.component.html"),
            styles: [__webpack_require__(/*! ./add-on-detail.component.scss */ "./src/app/travel/add-on-detail/add-on-detail.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
    ], AddOnDetailComponent);
    return AddOnDetailComponent;
}());



/***/ }),

/***/ "./src/app/travel/add-travel/add-travel.component.html":
/*!*************************************************************!*\
  !*** ./src/app/travel/add-travel/add-travel.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/travel.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Travel Plan</h2>\n        <p>Add Travel Plan</p>\n      </div>\n    </div>\n  </div>\n  \n  <form (ngSubmit)=\"f.form.valid && onClick()\" #f=\"ngForm\">\n    <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>Basic Details</h2>\n                <span class=\"required\">Indicates required fields ( <sup>*</sup> )</span>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s3 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <mat-select placeholder=\"Select Year\" name=\"year\" #year=\"ngModel\" [(ngModel)]=\"data.year\" required>\n                          <mat-option (click)=\"divmonth(data.year)\" *ngFor=\"let year of yearArray\" value={{year}}>{{year}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && year.invalid \" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"year.errors.required\">Year is required....</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  <div *ngIf=\"monthDiv\"> \n                    <div  class=\"col s3 \">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <mat-select placeholder=\" Select Month\" name=\"month\" #month=\"ngModel\" [(ngModel)]=\"data.month\" required>\n                            <mat-option (click)=\"addTravel(day)\" *ngFor=\"let day of monthArray;let i=index\" value={{i+1}}>{{day}}</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && month.invalid \" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"month.errors.required\">Month is required....</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div class=\"col s2 pr0\" >\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <mat-select placeholder=\"Select Senior For Approval\" name=\"travelApprover\" #travelApprover=\"ngModel\" [(ngModel)]=\"data.travelApprover\" required>\n                            <mat-option (click)=\"getSenior()\" *ngFor=\"let senior of seniors\" value={{senior.userId}}>{{senior.userName}}</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && travelApprover.invalid \" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"travelApprover.errors.required\">Approver is required....</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div class=\"col s2 pr0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput type=\"number\" placeholder=\"Travel Budget\" #travelBudget=\"ngModel\" name=\"travelBudget\" [(ngModel)]=\"data.travelBudget\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && travelBudget.invalid \" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"travelBudget.errors.required\">Travel Budget required...</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                   \n                    <div class=\"col s2 pr0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput type=\"number\" readonly placeholder=\"Sales Budget\" #salesBudget=\"ngModel\" name=\"salesBudget\" [(ngModel)]=\"data.salesBudget\" required>\n                        </mat-form-field>\n                      </div>\n                    </div>\n                    <!-- <div class=\"col s2 pr0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput type=\"number\" readonly placeholder=\"Budget\" #budget=\"ngModel\" name=\"budget\" [(ngModel)]=\"data.budget\" required>\n                        </mat-form-field>\n                      </div>\n                    </div> -->\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n            \n            \n            <div class=\"row\" >\n              <div class=\"sprate-box pt0 mt15\" style=\"overflow: inherit;\">\n                <div class=\"cs-heading\" style=\"border-radius: 6px 6px 0px 0px;\">\n                  <h2>Travel Details</h2>\n                </div>\n                <div class=\"collaps flat-collaps mt15\" >\n                  <div class=\"collaps-area\">\n                    <mat-accordion>\n                      <mat-expansion-panel  style=\"overflow: inherit;\" *ngFor=\"let day of dayArray;let i=index;let detail of planDetail\">\n                        <mat-expansion-panel-header class=\"outer-panel mb10\">\n                          <mat-panel-title>\n                            {{day.planDate | date :'EEEE, MMMM d, y'}}\n                          </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div>\n                          <mat-divider class=\"mb15 mt15 left-right-20\"></mat-divider>\n                          <div class=\"row\" >\n                            <div class=\"from-fields\">\n                              <div class=\"row\">\n                                <div class=\"col s4\">\n                                  <div class=\"multi-all-select\">\n                                    <label>State</label>\n                                    <ng-multiselect-dropdown\n                                    [placeholder]=\"'Select State'\"\n                                    [data]=\"shippingState\"\n                                    [(ngModel)]=\"detail.state\"                                    \n                                    name=\"state\"\n                                    [settings]=\"dropdownSettings\"\n                                    (onSelect)=\"getShippingDistrict(detail.state,i)\">\n                                  </ng-multiselect-dropdown>\n                                </div>\n                              </div>\n                              <div class=\"col s4\">\n                                <div class=\"multi-all-select\">\n                                  <label>District</label>\n                                  <ng-multiselect-dropdown\n                                  [placeholder]=\"'Select District'\"\n                                  [data]=\"tmpDistrictArray\"\n                                  [(ngModel)]=\"detail.district\"                                  \n                                  name=\"district\"\n                                  [settings]=\"dropdownSettings1\"\n                                  (onSelect)=\"getShippingCity(detail.district,i)\">\n                                </ng-multiselect-dropdown>\n                              </div>\n                            </div>\n                            <div class=\"col s4\">\n                              <div class=\"control-field pr80\">\n                                <div class=\"multi-all-select\">\n                                  <label>City</label>\n                                  <ng-multiselect-dropdown\n                                  [placeholder]=\"'Select City'\"\n                                  [data]=\"shippingCity\"\n                                  [(ngModel)]=\"detail.city\"                                  \n                                  name=\"city\"\n                                  [settings]=\"dropdownSettings2\"\n                                  (onSelect)=\"travelcity(detail.city,i)\">\n                                </ng-multiselect-dropdown>\n                              </div>\n                              <div class=\"plus-btn\">\n                                <button type=\"button\" (click)=\"travelList(i)\" mat-raised-button color=\"accent\">\n                                  <i class=\"material-icons\" >add</i>\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    \n                    <div *ngIf=\"day.details.length!=0\" class=\"row mt15\">\n                      <div class=\"col s12 padding0\">\n                        <div class=\"cs-table left-right-20\">\n                          <div class=\"table-head\">\n                            <table>\n                              <tr>\n                                <th class=\"w180\">State</th>\n                                <th class=\"w180\">District</th>\n                                <th class=\"w150\">City</th>\n                                <th> Sales Activity </th>\n                                <th class=\"w90\">&nbsp;</th>\n                              </tr>\n                            </table>\n                          </div>\n                          <div class=\"table-container\">\n                            <div class=\"table-content none-shadow\">\n                              <table>\n                                <tr *ngFor=\"let detail of day.details ; let indx=index\">\n                                  <td class=\"w180\">{{detail.state}}</td>\n                                  <td class=\"w180\">{{detail.district}}</td>\n                                  <td class=\"w150\">{{detail.city}}</td>\n                                  <td>\n                                    <div class=\"from-fields \">\n                                      <div class=\"row\">\n                                        <div class=\"col s4\">\n                                          <div class=\"select-one pt10\">\n                                            <span>Do you want any sales activity ?</span>\n                                            <mat-radio-group style=\"display: flex;\"  [(ngModel)]=\"detail.isSalesActivity\" name=\"isSalesActivity{{indx}}\" >\n                                              <mat-radio-button value='Yes' >Yes</mat-radio-button>\n                                              <mat-radio-button value='No' >No</mat-radio-button>\n                                            </mat-radio-group>\n                                          </div>\n                                        </div>\n                                        <div *ngIf=\"detail.isSalesActivity=='Yes'\">\n                                          <div class=\"col s4\">\n                                            <div class=\"control-field\">\n                                              <mat-form-field class=\"cs-input infix-bodr\">\n                                                <mat-select placeholder=\"Select\" name=\"activityType{{indx}}\" [(ngModel)]=\"detail.activityType\">\n                                                  <mat-option value=\"1\">Mechanic get together</mat-option>\n                                                  <mat-option value=\"2\">Retailer get together</mat-option>\n                                                  <mat-option value=\"3\">van Campaign</mat-option>\n                                                  <mat-option value=\"4\">Stall Campaign</mat-option>\n                                                  <mat-option value=\"5\">Exhibition Participation</mat-option>\n                                                  <mat-option value=\"6\">Signboard</mat-option>\n                                                  <mat-option value=\"7\">Wall/Shop Painting</mat-option>\n                                                  <mat-option value=\"8\">GiveAways</mat-option>\n                                                  <mat-option value=\"9\">Printing Of Lesafelts,banners, posters etc.</mat-option>\n                                                </mat-select>\n                                              </mat-form-field>\n                                            </div>\n                                          </div>\n                                          <div class=\"col s4\">\n                                            <div class=\"control-field\">\n                                              <mat-form-field class=\"cs-input infix-bodr\">\n                                                <input matInput type=\"number\" placeholder=\"Budget\" (change)=\"calculateBudget(detail.salesBudget)\" name=\"salesBudget{{indx}}\" [(ngModel)]=\"detail.salesBudget\">\n                                              </mat-form-field>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      \n                                    </div>\n                                  </td>\n                                  <td class=\"w90\">\n                                    <a mat-button class=\"del-btn\" (click)=\"removePlan(i,indx)\">Delete</a>\n                                  </td>\n                                </tr>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </mat-expansion-panel>\n              </mat-accordion>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n  \n  </div>\n  \n  <div class=\"col s12\">\n    <div class=\"cs-btn mt15 text-right\">\n      <div class=\"in-btn\">\n        <button mat-raised-button color=\"accent\" (click)=\"travelStatus(1)\">Save As Draft</button>\n        <button mat-raised-button color=\"accent\" (click)=\"travelStatus(2)\" >Save For Approvel</button>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n</form>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/travel/add-travel/add-travel.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/travel/add-travel/add-travel.component.ts ***!
  \***********************************************************/
/*! exports provided: AddTravelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddTravelComponent", function() { return AddTravelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var AddTravelComponent = /** @class */ (function () {
    function AddTravelComponent(service, rout, toast, alrt) {
        this.service = service;
        this.rout = rout;
        this.toast = toast;
        this.alrt = alrt;
        this.tmp_month = [];
        this.data = {};
        this.user = {};
        this.loader = false;
        this.shippingState = [];
        this.shippingDistrict = [];
        this.shippingCity = [];
        this.day = {};
        this.state = [];
        this.monthArray = ["January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"];
        this.tmpArray = this.monthArray;
        this.dropdownSettings = {};
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        this.tmpDistrictArray = [];
        this.seniors = [];
        this.yearArray = [];
        // day:any={};
        this.planArray = [];
        // files: FileList; 
        //   filestring: string; 
        //   uploadFile(event) { 
        //       this.files = event.target.files; 
        //       var reader = new FileReader(); 
        //       reader.onload = this._handleReaderLoaded.bind(this); 
        //       reader.readAsBinaryString(this.files[0]); 
        //   } 
        //   _handleReaderLoaded(readerEvt) { 
        //       var binaryString = readerEvt.target.result; 
        //       this.filestring = btoa(binaryString);
        //       this.data.excelFile=this.filestring;
        //       console.log(this.data);
        //  } 
        this.monthDiv = false;
        this.dayArray = [];
        this.planDetail = [];
        this.selectedDistrictArray = [];
        this.finalCityArray = [];
        this.traveldetail = [];
        this.selectedcity = [];
        this.finaldetail = [];
        this.original_data = [];
        this.data.travelBudget = 0;
        this.data.salesBudget = 0;
        this.data.budget = 0;
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        // if(this.user)
        // {
        //   if(this.userType==2)
        //   {
        //     // this.loader=true;
        //     // this.categoryList()
        //     // this.userTypeList();
        //     // this.getSegmentList();
        //     // this.getOemList();
        //   }
        // }
        var month = moment__WEBPACK_IMPORTED_MODULE_5__().format('M');
        for (var i = parseInt(month) - 1; i < this.monthArray.length; i++) {
            this.tmp_month.push(this.monthArray[i]);
        }
    }
    AddTravelComponent.prototype.ngOnInit = function () {
        this.getSenior();
        var currentyear = moment__WEBPACK_IMPORTED_MODULE_5__().format('YYYY');
        this.yearArray.push(currentyear);
        this.yearArray.push(parseInt(currentyear) + 1);
        this.yearArray.push(parseInt(currentyear) + 2);
        console.log(this.yearArray);
        this.getshippingState();
        this.dropdownSettings = {
            singleSelection: false,
            idField: 'state',
            textField: 'state',
            closeDropDownOnSelection: true,
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings1 = {
            singleSelection: false,
            idField: 'districtName',
            textField: 'districtName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
        this.dropdownSettings2 = {
            singleSelection: false,
            idField: 'city',
            textField: 'city',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true,
            maxHeight: 197
        };
    };
    AddTravelComponent.prototype.getSenior = function () {
        var _this = this;
        this.service.fileData(" ", 'getseniors/list').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            if (response['status'] == 'Success') {
                _this.seniors = response['data'];
                console.log(_this.seniors);
            }
        });
    };
    AddTravelComponent.prototype.onClick = function () {
        var _this = this;
        for (var i = 0; i < this.dayArray.length; i++) {
            if (this.dayArray[i].details.length != 0) {
                for (var j = 0; j < this.dayArray[i].details.length; j++) {
                    console.log(this.dayArray[i].details);
                    if (this.dayArray[i].details[j].isSalesActivity == 'Yes') {
                        console.log(this.dayArray[i].details[j].activityType);
                        this.planArray.push({ planDate: moment__WEBPACK_IMPORTED_MODULE_5__(this.dayArray[i].planDate).format('YYYY-MM-DD'), state: this.dayArray[i].details[j].state, district: this.dayArray[i].details[j].district, city: this.dayArray[i].details[j].city, isSalesActivity: true, salesBudget: this.dayArray[i].details[j].salesBudget, activityType: this.dayArray[i].details[j].activityType });
                    }
                    else {
                        this.planArray.push({ planDate: moment__WEBPACK_IMPORTED_MODULE_5__(this.dayArray[i].planDate).format('YYYY-MM-DD'), state: this.dayArray[i].details[j].state, district: this.dayArray[i].details[j].district, city: this.dayArray[i].details[j].city, isSalesActivity: false });
                    }
                }
            }
        }
        console.log(this.planArray);
        this.loader = true;
        console.log(this.dayArray);
        this.data.month = this.numberofMonth;
        this.data.userId = this.userId;
        this.data.travelDetails = this.planArray;
        if (this.seniors.length == 0) {
            this.data.travelApprover = 1;
        }
        console.log(this.data);
        this.service.fetchData(this.data, "travelplan/add").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.rout.navigate(['list-travel']);
                _this.toast.openSucess(result['message'], "Success");
            }
            else {
                _this.toast.openError(result['message'], "Error");
            }
        });
    };
    AddTravelComponent.prototype.travelStatus = function (status) {
        this.data.status = status;
    };
    AddTravelComponent.prototype.divmonth = function (year) {
        console.log(year);
        if (year == moment__WEBPACK_IMPORTED_MODULE_5__().format('YYYY')) {
            this.monthArray = [];
            this.monthArray = this.tmp_month;
            console.log("true");
        }
        else {
            this.monthArray = this.tmpArray;
        }
        this.monthDiv = true;
    };
    AddTravelComponent.prototype.addTravel = function (month) {
        this.loader = true;
        console.log(month);
        //  let currentmonth=moment().format('M');
        this.numberofMonth = moment__WEBPACK_IMPORTED_MODULE_5__().month(month).format("M");
        this.dayArray = [];
        if (month == 'January' || month == 'March' || month == 'May' || month == 'July' || month == 'August' || month == 'October' || month == 'December') {
            for (var i = 1; i <= 31; i++) {
                var planDate = month + "/" + i + "/" + this.data.year;
                var date = moment__WEBPACK_IMPORTED_MODULE_5__(planDate).format('YYYY-MM-DD hh:mm:ss a Z');
                this.planDetail.push({ state: '', district: '', city: '' });
                this.dayArray.push({ planDate: date, details: [], salesactivity: 'No' });
            }
        }
        else if (month == 'February') {
            var days = void 0;
            if (parseInt(this.data.year) % 4 == 0) {
                days = 29;
            }
            else {
                days = 28;
            }
            for (var j = 1; j <= days; j++) {
                var planDate = month + "/" + j + "/" + this.data.year;
                var date = moment__WEBPACK_IMPORTED_MODULE_5__(planDate).format('YYYY-MM-DD hh:mm:ss a Z');
                this.planDetail.push({ state: '', district: '', city: '' });
                this.dayArray.push({ planDate: date, details: [], salesactivity: 'No' });
            }
        }
        else {
            for (var k = 1; k <= 30; k++) {
                var planDate = month + "/" + k + "/" + this.data.year;
                var date = moment__WEBPACK_IMPORTED_MODULE_5__(planDate).format('YYYY-MM-DD hh:mm:ss a Z');
                this.planDetail.push({ state: 'sdfd', district: 'sdfdf', city: 'sfdsf' });
                this.dayArray.push({ planDate: date, details: [], salesactivity: 'No' });
            }
        }
        this.loader = false;
    };
    AddTravelComponent.prototype.getshippingState = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.shippingState = response['data'];
        });
    };
    AddTravelComponent.prototype.getShippingDistrict = function (state, i) {
        var _this = this;
        console.log(state);
        // this.planDetail[i].state=state;
        // console.log(state);
        // let statename=state[state.length-1];
        //  console.log(statename);
        // console.log(this.planDetail[i]);
        this.state = state;
        this.loader = true;
        this.service.fetchData({ states: state }, 'districtinstate/list').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            _this.shippingDistrict = response['data'];
            var districtArray = [];
            var _loop_1 = function (i_1) {
                var index = districtArray.findIndex(function (row) { return row.districtName === _this.shippingDistrict[i_1].districtName; });
                if (index == -1) {
                    districtArray.push(_this.shippingDistrict[i_1]);
                }
            };
            for (var i_1 = 0; i_1 < _this.shippingDistrict.length; i_1++) {
                _loop_1(i_1);
            }
            _this.tmpDistrictArray = districtArray;
            console.log(_this.tmpDistrictArray);
            // console.log(this.shippingDistrict);
            // console.log(this.district1);
        });
    };
    AddTravelComponent.prototype.getShippingCity = function (district, i) {
        var _this = this;
        console.log(district);
        console.log(this.tmpDistrictArray);
        console.log(this.selectedDistrictArray);
        this.planDetail[i].district = district;
        console.log(this.planDetail[i].district);
        this.loader = true;
        this.service.fetchData({ districts: district }, 'citiesindistrict/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.shippingCity = response['data'];
            console.log(_this.shippingCity);
        });
    };
    AddTravelComponent.prototype.travelcity = function (city, i) {
        console.log(city);
        this.selectedcity = city;
        this.planDetail[i].city = city;
    };
    AddTravelComponent.prototype.calculateBudget = function (budget) {
        console.log(budget);
        this.data.salesBudget = parseInt(this.data.salesBudget) + parseInt(budget);
        this.data.budget = parseInt(this.data.travelBudget) + parseInt(this.data.salesBudget);
    };
    AddTravelComponent.prototype.travelList = function (index) {
        for (var i = 0; i < this.selectedcity.length; i++) {
            for (var j = 0; j < this.shippingCity.length; j++) {
                if (this.selectedcity[i] == this.shippingCity[j].city) {
                    this.traveldetail.push({ district: this.shippingCity[j].districtName, city: this.selectedcity[i] });
                }
            }
        }
        console.log(this.traveldetail);
        for (var i = 0; i < this.traveldetail.length; i++) {
            for (var j = 0; j < this.tmpDistrictArray.length; j++) {
                if (this.traveldetail[i].district == this.tmpDistrictArray[j].districtName) {
                    this.dayArray[index].details.push({ state: this.tmpDistrictArray[j].stateName, district: this.traveldetail[i].district, city: this.traveldetail[i].city, isSalesActivity: 'No', activityType: '', salesBudget: 0 });
                    // this.data.budget=parseInt(this.data.travelBudget)+parseInt(this.dayArray[index].details.salesBudget);
                }
            }
        }
        console.log(this.finaldetail);
        // console.log(this.planDetail);
        // this.dayArray[index].details.push(this.finaldetail);
        this.finaldetail = [];
        console.log(this.dayArray[index]);
        console.log(this.dayArray);
        // console.log(this.planDetail[index].state);
        // this.shippingDistrict=[]
        // this.shippingCity=[];
        this.dayArray[index].state = '';
        this.dayArray[index].district = '';
        this.dayArray[index].city = '';
        // console.log(this.planDetail[index].state);
    };
    AddTravelComponent.prototype.removePlan = function (i, index) {
        this.data.budget = parseInt(this.data.travelBudget) - parseInt(this.dayArray[i].details.salesBudget);
        this.dayArray[i].details.splice(index, 1);
    };
    AddTravelComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-travel',
            template: __webpack_require__(/*! ./add-travel.component.html */ "./src/app/travel/add-travel/add-travel.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], AddTravelComponent);
    return AddTravelComponent;
}());



/***/ }),

/***/ "./src/app/travel/detail-travel/detail-travel.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/travel/detail-travel/detail-travel.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/list-travel\" routerLinkActive=\"active\" ><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{travelDetail.userName}}</h2>\n        <!-- <p class=\"light\">Sub Admin</p> -->\n      </div>\n    </div>\n    \n    <div class=\"left-auto\" *ngIf=\"travelDetail.status==1\">\n      <div class=\"cs-btn text-right\">\n        <div class=\"in-btn\">\n          <a mat-raised-button color=\"accent\" (click)=\"addOnDetail(0)\" >Add New Date</a>\n        </div>\n      </div>\n    </div>\n    <!-- <div class=\"tabs right-tab\">\n      <ul>\n        <li><a routerLink=\"/sale-user-detail\" routerLinkActive=\"active\">DETAIL</a></li>\n        <li><a routerLink=\"/my-network\" routerLinkActive=\"active\">My Network</a></li>\n        <li><a routerLink=\"/user-order\" routerLinkActive=\"active\">ORDERS</a></li>\n        <li><a>LEADS</a></li>\n        <li><a>FOLLOWUP</a></li>\n        <li><a routerLink=\"/target\" routerLinkActive=\"active\">Target</a></li>\n        <li><a routerLink=\"/travel-plan\" routerLinkActive=\"active\">Travel Plan</a></li>\n      </ul>\n    </div> -->\n  </div>\n  \n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12 padding0\">\n          <div class=\"sprate-box pt0  mb15\">\n            <div class=\"cs-heading\">\n              <h2>Travel Detail</h2>\n            </div>\n            <div class=\"row mt15 mb15\">\n              <div class=\"col s12 cs-figure\">\n                <ul>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Year</span>\n                        <p>{{travelDetail.year}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Month</span>\n                        <p *ngIf=\"travelDetail.month==1\" >January</p>\n                        <p *ngIf=\"travelDetail.month==2\">February</p>\n                        <p *ngIf=\"travelDetail.month==3\">March</p>\n                        <p *ngIf=\"travelDetail.month==4\">April</p>\n                        <p *ngIf=\"travelDetail.month==5\">May</p>\n                        <p *ngIf=\"travelDetail.month==6\">June</p>\n                        <p *ngIf=\"travelDetail.month==7\">July</p>\n                        <p *ngIf=\"travelDetail.month==8\">August</p>\n                        <p *ngIf=\"travelDetail.month==9\">September</p>\n                        <p *ngIf=\"travelDetail.month==10\">October</p>\n                        <p *ngIf=\"travelDetail.month==11\">November</p>\n                        <p *ngIf=\"travelDetail.month==12\">December</p>\n                        <!-- <p>{{travelDetail.month}}</p> -->\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Travel Budget</span>\n                        <p>&#8377;  {{travelDetail.travelBudget}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Sales Budget</span>\n                        <p>&#8377;  {{travelDetail.salesBudget}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  \n                  \n                  <li *ngIf=\"travelDetail.status==2||travelDetail.status==3\" class=\"pending\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Status</span>\n                        <p>Pending</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li *ngIf=\"travelDetail.status==5\" class=\"approved\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Status</span>\n                        <p>Approve</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li *ngIf=\"travelDetail.status==4||travelDetail.status==6\" class=\"reject\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Status</span>\n                        <p>Reject</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li *ngIf=\"userId==travelDetail.createBy && travelDetail.status==1\" class=\"draft\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Status</span>\n                        <p>Draft</p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div *ngIf=\"travelDetail.status==2 && travelDetail.createBy!=userId\" class=\"row mt15 mb15\">\n              <div class=\"col s6 cs-figure\">\n                <ul>\n                  <li style=\"border: 1px solid #B29D9D\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <div class=\"from-fields\">\n                          <div class=\"dflex\">\n                            <div class=\"control-field wp100\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <mat-select placeholder=\"Select Travel Plan Status\" #status=\"ngModel\" [(ngModel)]=\"travel.status\" >\n                                  <mat-option value=3>Approve</mat-option>\n                                  <mat-option value=4>Reject</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                            </div>\n                            \n                            <div class=\"control-field  wp100 ml10\" *ngIf=\"travel.status==3\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <mat-select placeholder=\"Select For Sales Budget Approval\" name=\"travelApprovedBy\" #travelApprovedBy=\"ngModel\" [(ngModel)]=\"travel.travelApprovedBy\" >\n                                  <mat-option *ngFor=\"let user of financeUserList\" value=\"{{user.userId}}\">{{user.userName}}</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                            </div>\n                            \n                            <div class=\"control-field wp100 ml10\" *ngIf=\"travel.status==4\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <textarea matInput placeholder=\"Reason for Rejection\" name=\"travelRejectionReason\" #travelRejectionReason=\"ngModel\" [(ngModel)]=\"travel.travelRejectionReason\" class=\"h45\"></textarea>\n                              </mat-form-field>\n                            </div>\n                            \n                            <div class=\"cs-btn ml10\">\n                              <div class=\"in-btn\">\n                                <button mat-raised-button color=\"accent\"  mat-stroked-button (click)=\"saveTravelStatus()\" >Save</button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            \n            <div *ngIf=\"travelDetail.status==3 && userRole==17\" class=\"row mt15 mb15\">\n              <div class=\"col s6 cs-figure\">\n                <ul>\n                  <li style=\"border: 1px solid #B29D9D\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <div class=\"from-fields\">\n                          <div class=\"dflex\">\n                            <div class=\"control-field wp100\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <mat-select placeholder=\"Select Travel Plan Status\" #status=\"ngModel\" [(ngModel)]=\"travel.status\" >\n                                  <mat-option value=5>Approve</mat-option>\n                                  <mat-option value=6>Reject</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                            </div>\n                            <div class=\"control-field wp100 ml10\" *ngIf=\"travel.status==6\">\n                              <mat-form-field class=\"cs-input infix-bodr\">\n                                <textarea matInput placeholder=\"Reason for Rejection\" name=\"salesRejectionReason\" #salesRejectionReason=\"ngModel\" [(ngModel)]=\"travel.salesRejectionReason\" class=\"h45\"></textarea>\n                              </mat-form-field>\n                            </div>\n                            <div class=\"cs-btn ml10\">\n                              <div class=\"in-btn\">\n                                <button mat-raised-button color=\"accent\"  mat-stroked-button (click)=\"saveSalesStatus()\" >Save</button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"cs-table left-right-15\">\n            <div class=\"table-head sticky-head top130\">\n              <table class=\"sno-border\">\n                <tr>\n                  <th class=\"w30\">&nbsp;</th>\n                  <th class=\"w170\">Date</th>\n                  <th class=\"padding0\">\n                    <table>\n                      <tr>\n                        <th>State</th>\n                        <th>District</th>\n                        <th>City</th>\n                        <th class=\"w130 text-center\">Sales Activity</th>\n                        <th class=\"w120 text-right\">Sales Budget</th>\n                        <th *ngIf=\"travelDetail.status!=5 && userId==travelDetail.createBy && travelDetail.status!=3\" class=\"w110 text-center\">Action</th>\n                        <th *ngIf=\"travelDetail.status!=5 && userId==travelDetail.createBy && travelDetail.status!=3\"class=\"w80 text-center\">ADD</th>\n                      </tr>\n                    </table>\n                  </th>\n                </tr>\n              </table>\n            </div>\n            <div class=\"table-container \">\n              <div class=\"table-content\">\n                <!-- <table>\n                  <tr *ngFor=\"let list of travelDetail.travelDetails\">\n                    <td class=\"w300\">{{list.planDate | date :'EEEE, MMMM d, y'}}</td>\n                    <td class=\"w220\">{{list.details}}</td>\n                    <td class=\"w200\">{{list.actual}}</td>\n                    <td>{{list.reasonForDeviation}}\n                      <div class=\"action-btns\" *ngIf=\"travelDetail.status==1\">\n                        <a mat-button class=\"view\" (click)=\"updateTravel(list)\"><i class=\"material-icons\">edit</i> Edit</a>\n                      </div>\n                    </td>\n                  </tr>\n                </table> -->\n                \n                <table class=\"sno-border\">\n                  <tr *ngFor=\"let plan of planArray;let i=index\">\n                    <td class=\"w30\">{{i+1}}</td>\n                    <td class=\"w170\">{{plan.planDate | date :'EEEE, MMMM d, y'}}</td>\n                    <td class=\"padding0\">\n                      <table class=\"inner-table\">\n                        <tr *ngFor=\"let detail of plan.plandDetail\">\n                          <td >{{detail.state}}</td>\n                          <td>{{detail.district}}</td>\n                          <td>{{detail.city}}</td>\n                          <td class=\"w130 text-center\">{{detail.salesActivity?'Yes':'No'}}</td>\n                          <td class=\"w120 text-right\">&#x20B9; {{detail.salesBudget?detail.salesBudget:'NA'}}</td>\n                          <td *ngIf=\"travelDetail.status!=5 && userId==travelDetail.createBy && travelDetail.status!=3\" class=\"w110\">\n                            <div class=\"action-btns default-action\" style=\"right: 3px;\">\n                              <a mat-button class=\"edit\" (click)=\"updateTravel(detail)\"><i class=\"material-icons\">create</i></a>\n                              <button  mat-button class=\"delete\" (click)=\"deleteTravelPlan(detail.travelDetailId)\"><i class=\"material-icons\">delete_sweep</i></button>\n                            </div>\n                          </td>\n                          \n                        </tr>\n                        \n                      </table>\n                    </td>\n                    <td *ngIf=\"travelDetail.status!=5 && userId==travelDetail.createBy && travelDetail.status!=3\" class=\"w80 text-center\">\n                      <div class=\"in-btn\">\n                        <a mat-button color=\"accent\" matTooltip=\"Add Plan\" (click)=\"addOnDetail(plan.planDate)\"><i class=\"material-icons\">\n                          add_circle\n                        </i></a>\n                      </div>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col s12 padding0\" *ngIf=\"travelDetail.status==1\">\n        <div class=\"cs-btn fixedd mt15 text-right\">\n          <div class=\"in-btn\">\n            <button mat-raised-button color=\"accent\"(click)=\"updatedstatus(travelDetail.travelPlanID,2)\" >Submit</button>\n          </div>\n        </div>\n      </div>\n      <div class=\"col s12 padding0\" *ngIf=\"travelDetail.status==4||travelDetail.status==6\" >\n        <div class=\"cs-btn mt15 text-right\">\n          <div class=\"in-btn\">\n            <button mat-raised-button color=\"accent\"(click)=\"updatedstatus(travelDetail.travelPlanID,2)\">Re-submit</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n</div>\n\n<div class=\"h50\"></div>\n\n"

/***/ }),

/***/ "./src/app/travel/detail-travel/detail-travel.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/travel/detail-travel/detail-travel.component.ts ***!
  \*****************************************************************/
/*! exports provided: DetailTravelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetailTravelComponent", function() { return DetailTravelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _update_travel_update_travel_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../update-travel/update-travel.component */ "./src/app/travel/update-travel/update-travel.component.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _add_on_detail_add_on_detail_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../add-on-detail/add-on-detail.component */ "./src/app/travel/add-on-detail/add-on-detail.component.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");









var DetailTravelComponent = /** @class */ (function () {
    function DetailTravelComponent(route, service, dialog, toast, alrt) {
        var _this = this;
        this.route = route;
        this.service = service;
        this.dialog = dialog;
        this.toast = toast;
        this.alrt = alrt;
        this.activeStatus1 = '';
        this.activeStatus2 = '';
        this.activeStatus3 = '';
        this.travelDetail = [];
        this.user = {};
        this.loader = false;
        this.travel = {};
        this.planArray = [];
        this.financeUserList = [];
        this.value = {};
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        console.log(this.userType, "&", this.userId, "&", this.userRole);
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.travelId = params.id;
            console.log(_this.travelId);
            _this.getUserList();
            if (_this.travelId) {
                _this.getTravelDetail();
            }
        });
    }
    DetailTravelComponent.prototype.ngOnInit = function () {
    };
    DetailTravelComponent.prototype.getTravelDetail = function () {
        var _this = this;
        this.planArray = [];
        this.loader = true;
        this.service.fetchData({ "travelPlanID": this.travelId }, "travelplan/list").subscribe(function (result) {
            console.log(result);
            setTimeout(function () {
                _this.loader = false;
            }, 700);
            if (result['status'] == "Success") {
                _this.travelDetail = result['data'][0];
                console.log(_this.travelDetail);
                var _loop_1 = function (i) {
                    if (_this.planArray.length == 0) {
                        _this.planArray.push({ planDate: _this.travelDetail.travelDetails[i].planDate, plandDetail: [{ state: _this.travelDetail.travelDetails[i].state, district: _this.travelDetail.travelDetails[i].district, city: _this.travelDetail.travelDetails[i].city, travelDetailId: _this.travelDetail.travelDetails[i].travelDetailId, salesActivity: _this.travelDetail.travelDetails[i].isSalesActivity, salesBudget: _this.travelDetail.travelDetails[i].salesBudget, activityType: _this.travelDetail.travelDetails[i].activityType }] });
                    }
                    else {
                        var index = _this.planArray.findIndex(function (row) { return row.planDate === _this.travelDetail.travelDetails[i].planDate; });
                        if (index != -1) {
                            _this.planArray[index].plandDetail.push({ state: _this.travelDetail.travelDetails[i].state, district: _this.travelDetail.travelDetails[i].district, city: _this.travelDetail.travelDetails[i].city, travelDetailId: _this.travelDetail.travelDetails[i].travelDetailId, salesActivity: _this.travelDetail.travelDetails[i].isSalesActivity, salesBudget: _this.travelDetail.travelDetails[i].salesBudget, activityType: _this.travelDetail.travelDetails[i].activityType });
                        }
                        else {
                            _this.planArray.push({ planDate: _this.travelDetail.travelDetails[i].planDate, plandDetail: [{ state: _this.travelDetail.travelDetails[i].state, district: _this.travelDetail.travelDetails[i].district, city: _this.travelDetail.travelDetails[i].city, travelDetailId: _this.travelDetail.travelDetails[i].travelDetailId, salesActivity: _this.travelDetail.travelDetails[i].isSalesActivity, salesBudget: _this.travelDetail.travelDetails[i].salesBudget, activityType: _this.travelDetail.travelDetails[i].activityType }] });
                        }
                    }
                };
                for (var i = 0; i < _this.travelDetail.travelDetails.length; i++) {
                    _loop_1(i);
                }
                console.log(_this.planArray);
                if (_this.travelDetail['status'] == 1) {
                    _this.activeStatus1 = 'pending';
                }
                if (_this.travelDetail['status'] == 2) {
                    _this.activeStatus2 = 'approved';
                }
                if (_this.travelDetail['status'] == 3) {
                    _this.activeStatus3 = 'reject';
                }
            }
        });
    };
    DetailTravelComponent.prototype.updateTravel = function (value) {
        var _this = this;
        console.log(value);
        var dialogRef = this.dialog.open(_update_travel_update_travel_component__WEBPACK_IMPORTED_MODULE_5__["UpdateTravelComponent"], {
            width: '1024px',
            data: {
                id: this.travelDetail.travelPlanID,
                value: value
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            console.log('The dialog was closed');
            if (result) {
                _this.getTravelDetail();
            }
        });
    };
    DetailTravelComponent.prototype.deleteTravelPlan = function (travelDetailID) {
        var _this = this;
        this.alrt.delete('Travel Plan  !').then(function (result) {
            if (result) {
                console.log(travelDetailID);
                _this.loader = true;
                _this.service.fileData("", "traveldetail/delete/" + travelDetailID).subscribe(function (result) {
                    console.log(result);
                    _this.loader = false;
                    if (result['status'] == 'Success') {
                        _this.getTravelDetail;
                    }
                });
            }
        });
    };
    DetailTravelComponent.prototype.getUserList = function () {
        var _this = this;
        this.loader = true;
        this.service.fetchData({ role: 17, "currentPage": 1, "pageSize": 50 }, "user/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.financeUserList = result['data'];
            }
        });
    };
    // updateTravelStatus(id,status)
    // {
    //   this.travel.travelPlanID=id;
    //   console.log(status.value);
    // }
    DetailTravelComponent.prototype.updatedstatus = function (id, status) {
        this.travel.travelPlanID = id;
        console.log(status);
        this.travel.status = status;
        this.saveStatus();
    };
    DetailTravelComponent.prototype.saveStatus = function () {
        var _this = this;
        this.value = { "travelPlanID": this.travel.travelPlanID, "status": this.travel.status };
        console.log(this.value);
        this.service.fetchData(this.value, "travelplan/travelapproval").subscribe(function (result) {
            console.log(result);
            if (result['status'] == ['Success']) {
                _this.toast.openSucess('Status updated successfully', '');
                _this.getTravelDetail();
            }
        });
    };
    DetailTravelComponent.prototype.saveTravelStatus = function () {
        var _this = this;
        if (this.travel.status == 4) {
            this.travel.travelRejectedBy = this.userId;
        }
        this.travel.travelPlanID = this.travelId;
        console.log(this.travel);
        this.service.fetchData(this.travel, "travelplan/travelapproval").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.getTravelDetail();
            }
        });
    };
    DetailTravelComponent.prototype.saveSalesStatus = function () {
        var _this = this;
        if (this.travel.status == 6) {
            this.travel.salesRejectedBy = this.userId;
        }
        else {
            this.travel.salesApprovedBy = this.userId;
        }
        this.travel.travelPlanID = this.travelId;
        console.log(this.travel);
        this.service.fetchData(this.travel, "travelplan/salesapproval").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.getTravelDetail();
            }
        });
    };
    DetailTravelComponent.prototype.addOnDetail = function (date) {
        var _this = this;
        console.log("hello");
        var dialogRef = this.dialog.open(_add_on_detail_add_on_detail_component__WEBPACK_IMPORTED_MODULE_7__["AddOnDetailComponent"], {
            width: '1024px',
            data: {
                olddata: this.travelDetail,
                date: date
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            if (result) {
                _this.getTravelDetail();
            }
            console.log('The dialog was closed');
        });
    };
    DetailTravelComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-detail-travel',
            template: __webpack_require__(/*! ./detail-travel.component.html */ "./src/app/travel/detail-travel/detail-travel.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_6__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_8__["DialogComponent"]])
    ], DetailTravelComponent);
    return DetailTravelComponent;
}());



/***/ }),

/***/ "./src/app/travel/list-travel/list-travel.component.html":
/*!***************************************************************!*\
  !*** ./src/app/travel/list-travel/list-travel.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  \n  <div class=\"middle-container pb15\">\n    \n    <div class=\"page-heading\">\n      <img src=\"assets/img/travel.svg\" class=\"h-icon\">\n      \n      <div class=\"heading-text flex-heading\">\n        <div class=\"content\">\n          <h2>{{userRole==17?'Sales Promotion':'Travel List'}}</h2>\n        </div>\n        <div class=\"item-filter\" *ngIf=\"userRole!=10 && userRole!=17\">\n          <mat-form-field class=\"wp100\">\n            <mat-select  name=\"travelPlanApprovel\" #travelPlanApprovel=\"ngModel\" [(ngModel)]=\"forApprovel\">\n              <mat-option (click)=\"getTravelList(1,travelStatus)\" [value]=1>My Travel Plan</mat-option>\n              <mat-option (click)=\"getTravelList(2,travelStatus)\" [value]=2>Wating For Approvel</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"left-auto\">\n      <div  *ngIf=\"filterData.createdByName || filterData.designation || filterData.month || filterData.createdOn\" class=\"filter-container\">\n        <div (click)=\"clearfilter()\" class=\"filter-btn\">\n          <button mat-button >CLEAR FILTER</button>\n        </div>\n      </div>\n      <div class=\"tabs right-tab none-af\">\n        <ul>\n          <li><a class=\"pending\" [ngClass]=\"{'tab-active':travelStatus==2}\" (click)=\"getTravelList(forApprovel,2)\" >PENDING</a></li>\n          <li><a class=\"approved\" [ngClass]=\"{'tab-active':travelStatus==5}\" (click)=\"getTravelList(forApprovel,5)\" >APPROVE</a></li>\n          <li><a class=\"reject\" [ngClass]=\"{'tab-active':travelStatus==6}\" (click)=\"getTravelList(forApprovel,6)\" >REJECT</a></li>\n          <li class=\"draft\" *ngIf=\"forApprovel==1 && userRole!=17\"><a [ngClass]=\"{'tab-active':travelStatus==1}\" (click)=\"getTravelList(forApprovel,1)\" >DRAFT</a></li>\n        </ul>\n      </div>\n    </div>\n    \n    \n  </div>\n  \n  \n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table class=\"sno-border\">\n                  <tr>\n                    <th class=\"w30\">&nbsp;</th>\n                    <th class=\"w200\">Date</th>\n                    <th *ngIf=\"forApprovel==2\">User Name</th>\n                    <th class=\"w170\" *ngIf=\"forApprovel==2\">Designation Name</th>\n                    <th class=\"w130\">Travel Month</th>\n                    <th class=\"w100 text-center\">Year</th>\n                    <th class=\"w130 text-right\">Budget</th>\n                    <th class=\"w120\">Status</th>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-head bdrt\">\n                <form>\n                  <table class=\"sno-border\">\n                    <tr>\n                      <th class=\"w30\">&nbsp;</th>\n                      <th class=\"w200\">&nbsp;\n                        <!-- <div class=\"th-search padding0\" >\n                          <mat-form-field class=\"wp100 toggle-date-picker\">\n                            <input matInput (dateChange)=\"getTravelList(forApprovel,travelStatus)\" name=\"createdOn\" [(ngModel)]=\"filterData.createdOn\" [matDatepicker]=\"picker\" >\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker  #picker></mat-datepicker>\n                          </mat-form-field>\n                        </div> -->\n                      </th>\n                      <th *ngIf=\"forApprovel==2\">\n                        <div class=\"th-search\" >\n                          <input type=\"text\" (input)=\"getTravelList(forApprovel,travelStatus)\" name=\"createdByName\" #createdByName=\"ngModel\" [(ngModel)]=\"filterData.createdByName\" placeholder=\"Search....\">\n                          <a class=\"close-mat\" matRipple  matTooltip=\"Clear\"></a>\n                          \n                        </div>\n                      </th>\n                      <th  class=\"w170\" *ngIf=\"forApprovel==2\">&nbsp;\n                        <!-- <div class=\"th-search\">\n                          <mat-select placeholder=\"Select designation\" name=\"designation\"  #designation=\"ngModel\" [(ngModel)]=\"filter.designation\">\n                            <mat-option *ngFor='let list of designationData' (click)=\"getTravelList(travelStatus)\" [value]=\"list.designation\">{{list.designationName}}</mat-option>\n                            \n                          </mat-select>\n                        </div> -->\n                      </th>\n                      <th class=\"w130\">\n                        <div class=\"th-search\">\n                          <mat-select placeholder=\"Select\" name=\"month\" #month=\"ngModel\" [(ngModel)]=\"filterData.month\" >\n                            <mat-option  value={{i+1}} (click)=\"getTravelList(forApprovel,travelStatus)\" *ngFor=\"let month of monthArray;let i=index\">{{month}}</mat-option>\n                          </mat-select>\n                          \n                        </div>\n                      </th>\n                      <th class=\"w100\">&nbsp;</th>\n                      <th class=\"w130\">&nbsp;</th>\n                      <th class=\"w120\">&nbsp;</th>\n                    </tr>\n                  </table>\n                </form>\n              </div>\n            </div>\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table class=\"sno-border\">\n                  <tr *ngFor=\"let list of trvelPlanLIst;let i=index\">\n                    <td class=\"w30\">{{i+1}}</td>\n                    <td class=\"w200\">{{list.createdOn|date :'EEEE, MMMM d, y'}}</td>\n                    <td *ngIf=\"forApprovel==2\"><a class=\"link-btn\" routerLink=\"/detail-travel/{{list.travelPlanID}}\" routerLinkActive=\"active\" mat-button>{{list.userName}}</a></td>\n                    <td class=\"w170\" *ngIf=\"forApprovel==2\">\n                      <span >{{list.designationName}}</span>\n                    </td>\n                    <td class=\"w130\">\n                      <span *ngIf=\"list.month==1\" >January</span>\n                      <span *ngIf=\"list.month==2\">February</span>\n                      <span *ngIf=\"list.month==3\">March</span>\n                      <span *ngIf=\"list.month==4\">April</span>\n                      <span *ngIf=\"list.month==5\">May</span>\n                      <span *ngIf=\"list.month==6\">June</span>\n                      <span *ngIf=\"list.month==7\">July</span>\n                      <span *ngIf=\"list.month==8\">August</span>\n                      <span *ngIf=\"list.month==9\">September</span>\n                      <span *ngIf=\"list.month==10\">October</span>\n                      <span *ngIf=\"list.month==11\">November</span>\n                      <span *ngIf=\"list.month==12\">December</span>\n                    </td>\n                    <td class=\"w100 text-center\">{{list.year}}</td>\n                    <td class=\"w130 text-right\">&#x20B9; {{list.budget}}</td>\n                    <td [ngClass]=\"{'pending':list.status==2||list.status==3,'approved':list.status==5,'reject':list.status==4||list.status==6,'draft':list.status==1}\" class=\"w120\">\n                      <span *ngIf=\"list.status==2||list.status==3\" >PENDING</span>\n                      <span *ngIf=\"list.status==5\" >APPROVED</span>\n                      <span *ngIf=\"list.status==4||list.status==6\">REJECT</span>\n                      <span *ngIf=\"list.status==1\" >DRAFT</span>                          \n                      <div class=\"action-btns\">\n                        <a mat-button class=\"view\" (click)=\"detailPlan(list.travelPlanID)\"><i class=\"material-icons\">remove_red_eye</i> View</a>\n                      </div>\n                    </td>\n                    <!-- <button *ngIf=\"userRole!=1\" mat-button class=\"delete\" (click)=\"deletePlan(list.travelPlanID)\"><i class=\"material-icons\">delete_sweep</i> Delete</button> -->\n                  </tr>\n                  \n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"data-not-available\" *ngIf=\"div\">\n        <div class=\"outer\">\n          <div class=\"iinear\">\n            <div class=\"figure\" matRipple>\n              <div class=\"header\">\n                <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n              </div>\n              \n              <div class=\"description\">\n                <!-- <div class=\"cs-heading\">\n                  <h2>No Travel Plane</h2>\n                </div> -->\n                <div class=\"img\">\n                  <i class=\"material-icons\">error_outline</i>\n                </div>\n                <div class=\"psc\">\n                  <p>data not available</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"fixed-multibtn-botm\">\n      <ul>\n        <li><a  matTooltip=\"Add New\" routerLink=\"/add-travel\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n      </ul>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./src/app/travel/list-travel/list-travel.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/travel/list-travel/list-travel.component.ts ***!
  \*************************************************************/
/*! exports provided: ListTravelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListTravelComponent", function() { return ListTravelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);






// import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';
var ListTravelComponent = /** @class */ (function () {
    function ListTravelComponent(service, route, dialog) {
        this.service = service;
        this.route = route;
        this.dialog = dialog;
        this.filter = {};
        this.forApprovel = '1';
        this.user = {};
        this.trvelPlanLIst = [];
        this.loader = false;
        this.div = false;
        this.travelStatus = 2;
        // travelStatus:any=2;
        this.monthArray = ["January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"];
        this.designationData = [
            { designationName: 'Vice President', designation: 1 },
            { designationName: 'Deputy General Manager', designation: 2 },
            { designationName: 'General Manager', designation: 3 },
            { designationName: 'Assistant General Manager', designation: 4 },
            { designationName: 'Sr Manager', designation: 5 },
            { designationName: 'Manager', designation: 6 },
            { designationName: 'Deputy Manager', designation: 7 },
            { designationName: 'Sr Executive', designation: 8 },
            { designationName: 'Executive', designation: 9 },
            { designationName: 'Assistant Manager', designation: 10 },
            { designationName: 'Assistant', designation: 11 },
            { designationName: 'Trainee', designation: 12 },
            { designationName: 'Others', designation: 13 }
        ];
        // creaatedDate:any;
        this.filterData = {};
        this.tmpTravelList = [];
        this.user = JSON.parse(localStorage.getItem('user')) || [];
        console.log(this.user);
        this.userType = this.user.data.userType;
        this.userId = this.user.data.userId;
        this.userRole = this.user.data.role;
        // this.filter.createdOn='';
        this.forApprovel = 2;
        this.travelStatus == 2;
        if (this.userId) {
            this.getTravelList(this.forApprovel, this.travelStatus);
        }
        console.log(this.userType, "&", this.userId, "&", this.userRole);
    }
    ListTravelComponent.prototype.ngOnInit = function () {
    };
    ListTravelComponent.prototype.getTravelList = function (planList, filterStatus) {
        var _this = this;
        console.log(planList, filterStatus);
        this.forApprovel = planList;
        this.travelStatus = filterStatus;
        if (this.filterData.createdOn) {
            this.filterData.createdOn = moment__WEBPACK_IMPORTED_MODULE_5__(this.filterData.createdOn).format('YYYY-MM-DD');
        }
        this.trvelPlanLIst = [];
        if (this.forApprovel == 1) {
            this.filterData.currentPage = 1;
            this.filterData.pageSize = 50;
            this.filterData.createdById = this.userId;
            this.filterData.status = filterStatus;
        }
        else if (this.forApprovel == 2) {
            this.filterData.currentPage = 1;
            this.filterData.pageSize = 50;
            this.filterData.createdById = undefined;
            if (this.userRole == 17 && filterStatus == 2) {
                this.filterData.status = 3;
            }
            else {
                this.filterData.status = filterStatus;
            }
        }
        this.loader = true;
        this.service.fetchData(this.filterData, "travelplan/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.trvelPlanLIst = result['data'];
                if (_this.forApprovel == 2) {
                    var travelArray = _this.trvelPlanLIst.filter(function (row) { return row.createBy != _this.userId; });
                    _this.trvelPlanLIst = travelArray;
                }
            }
            if (_this.forApprovel == 1) {
                if (filterStatus == 2) {
                    _this.getTravelApproverList(3);
                }
                if (filterStatus == 6) {
                    _this.getTravelApproverList(4);
                }
            }
            if (result['status'] == 'Failed') {
                _this.div = true;
                _this.trvelPlanLIst = [];
            }
        });
    };
    ListTravelComponent.prototype.getTravelApproverList = function (status) {
        var _this = this;
        this.loader = true;
        this.filterData.status = status;
        this.filterData.createdById = this.userId;
        this.service.fetchData(this.filterData, "travelplan/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                _this.tmpTravelList = result['data'];
                _this.trvelPlanLIst = _this.trvelPlanLIst.concat(_this.tmpTravelList);
            }
        });
    };
    ListTravelComponent.prototype.clearfilter = function () {
        this.filterData = {};
        this.filterData.createdOn = undefined;
        this.getTravelList(this.forApprovel, this.travelStatus);
    };
    ListTravelComponent.prototype.detailPlan = function (id) {
        console.log("hello");
        this.route.navigate(['/detail-travel/' + id]);
    };
    ListTravelComponent.prototype.deletePlan = function (id) {
        var _this = this;
        this.dialog.delete('Travel Plan !').then(function (result) {
            if (result) {
                _this.service.fileData("", "travel/delete/" + id).subscribe(function (result) {
                    console.log(result);
                    if (result['status'] == "Success") {
                        // this.getTravelList('2');
                    }
                });
            }
        });
    };
    ListTravelComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-list-travel',
            template: __webpack_require__(/*! ./list-travel.component.html */ "./src/app/travel/list-travel/list-travel.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"]])
    ], ListTravelComponent);
    return ListTravelComponent;
}());



/***/ }),

/***/ "./src/app/travel/update-travel/update-travel.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/travel/update-travel/update-travel.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\" >\n  <p class=\"heading\">Update Travel</p>\n  <div mat-dialog-content style=\"overflow-y: inherit; overflow-x: hidden; overflow: inherit;\">\n    <div class=\"from-fields\">\n      <div class=\"row mt15\">\n        <div class=\"col s4\">\n          <div class=\"multi-all-select\">\n            <label>State</label>\n            <ng-multiselect-dropdown\n            [placeholder]=\"'Select State'\"\n            [data]=\"travelStateList\"\n            [(ngModel)]=\"planData.state\"\n            [settings]=\"dropdownSettings\"\n            (onSelect)=\"getDistrictList($event)\"\n           \n            >\n          </ng-multiselect-dropdown>\n        </div>\n      </div>\n      <div class=\"col s4\">\n        <div class=\"multi-all-select\">\n          <label>District</label>\n          <ng-multiselect-dropdown\n          [placeholder]=\"'Select District'\"\n          [data]=\"travelDistrictList\"\n          [(ngModel)]=\"planData.districtName\"\n          [settings]=\"dropdownSettings1\"\n          (onSelect)=\"getCityList($event)\"\n         \n          >\n        </ng-multiselect-dropdown>\n      </div>\n    </div>\n    <div class=\"col s4\">\n      <div class=\"control-field pr80\">\n        <div class=\"multi-all-select\">\n          <label>City</label>\n          <ng-multiselect-dropdown\n          [placeholder]=\"'Select City'\"\n          [data]=\"travelCityList\"\n          [(ngModel)]=\"planData.cityName\"\n          [settings]=\"dropdownSettings2\"\n          (onSelect)=\"onItemSelect(planData.cityName)\"\n         \n          >\n        </ng-multiselect-dropdown>\n      </div>\n      <!-- <div class=\"plus-btn\">\n        <button type=\"button\" mat-raised-button color=\"accent\">\n          <i class=\"material-icons\">add</i>\n        </button>\n      </div> -->\n    </div>\n  </div>\n  <div class=\"col s12\">\n    <div class=\"select-one pt10\">\n      <span>Do you want any sales activity ?</span>\n      <mat-radio-group style=\"display: flex;\"  name=\"isSalesActivity\" #isSalesActivity=\"ngModel\" [(ngModel)]=\"sendData.isSalesActivity\" >\n        <mat-radio-button [value]=true >Yes</mat-radio-button>\n        <mat-radio-button [value]=false >No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"sendData.isSalesActivity==true\">\n    <div class=\"col s6\">\n      <div class=\"control-field\">\n        <mat-form-field class=\"cs-input infix-bodr\">\n          <mat-select placeholder=\"Select\" name=\"activityType\" #activityType=\"ngModel\" [(ngModel)]=\"sendData.activityType\">\n            <mat-option [value]=1>Mechanic get together</mat-option>\n            <mat-option [value]=2>Retailer get together</mat-option>\n            <mat-option [value]=3>van Campaign</mat-option>\n            <mat-option [value]=4>Stall Campaign</mat-option>\n            <mat-option [value]=5>Exhibition Participation</mat-option>\n            <mat-option [value]=6>Signboard</mat-option>\n            <mat-option [value]=7>Wall/Shop Painting</mat-option>\n            <mat-option [value]=8>GiveAways</mat-option>\n            <mat-option [value]=9>Printing Of Lesafelts,banners, posters etc.</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"col s6\">\n      <div class=\"control-field\">\n        <mat-form-field class=\"cs-input infix-bodr\">\n          <input matInput type=\"number\" placeholder=\"Budget\" name=\"salesBudget\" #salesBudget=\"ngModel\" [(ngModel)]=\"sendData.salesBudget\" >\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n<!-- <div class=\"row mt15\">\n  <div class=\"col s12 padding0\">\n    <div class=\"cs-table left-right-20\">\n      <div class=\"table-head\">\n        <table>\n          <tr>\n            <th>State</th>\n            <th class=\"w220\">District</th>\n            <th class=\"w220 \">City</th>\n            <th class=\"w130 text-center\">Action</th>\n          </tr>\n        </table>\n      </div>\n      <div class=\"table-container\">\n        <div class=\"table-content\">\n          <table>\n            <tr>\n              <td>Haryana</td>\n              <td class=\"w220\">Faridabad</td>\n              <td class=\"w220\">Faridabad</td>\n              <td class=\"w130\">\n                <div class=\"action-btns default-action\">\n                  <a mat-button class=\"delete\"  (click)=\"removePlan(i,indx)\"><i class=\"material-icons\">delete_sweep</i>Delete</a>\n                </div>     \n                <a mat-button class=\"del-btn\" (click)=\"removePlan(i,indx)\">Delete</a>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\"  [mat-dialog-close]=\"false\" class=\"mr15\">Cancel</button>\n  <div >\n    <!-- [disabled]=\"!travelData.details||!travelData.actual||!travelData.reasonForDeviation\" (click)=\"update_travel()\" -->\n    <button mat-raised-button  [mat-dialog-close]=\"true\" color=\"accent\" (click)=\"update_travel()\">Save</button>\n  </div>\n</div>\n</div>"

/***/ }),

/***/ "./src/app/travel/update-travel/update-travel.component.scss":
/*!*******************************************************************!*\
  !*** ./src/app/travel/update-travel/update-travel.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYXZlbC91cGRhdGUtdHJhdmVsL3VwZGF0ZS10cmF2ZWwuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/travel/update-travel/update-travel.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/travel/update-travel/update-travel.component.ts ***!
  \*****************************************************************/
/*! exports provided: UpdateTravelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateTravelComponent", function() { return UpdateTravelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");





var UpdateTravelComponent = /** @class */ (function () {
    function UpdateTravelComponent(data, service, dialog, toast) {
        this.data = data;
        this.service = service;
        this.dialog = dialog;
        this.toast = toast;
        this.travelData = {};
        this.planData = {};
        this.dropdownList = [];
        this.selectedItems = [];
        this.dropdownSettings = {};
        this.dropdownSettings1 = {};
        this.dropdownSettings2 = {};
        this.sendData = {};
        this.loader = false;
        this.travelStateList = [];
        this.travelDistrictList = [];
        this.travelCityList = [];
        console.log(data);
        this.travelData = data['value'];
        if (data != null) {
            this.planData = data['value'];
            console.log(this.planData);
            this.planData.state = [this.travelData.state];
            this.planData.districtName = [this.travelData.district];
            console.log(this.planData.districtName);
            this.planData.cityName = [this.travelData.city];
            // this.sendData.state=this.planData.state;
            // this.sendData.city=this.planData.cityName;
            // this.sendData.district=this.planData.districtNames;
            // this.sendData.salesActivity=this.travelData.salesActivity;
            this.sendData.salesBudget = this.travelData.salesBudget;
            this.sendData.travelDetailId = this.travelData.travelDetailId;
            this.sendData.travelPlanID = data['id'];
            this.sendData.isSalesActivity = this.travelData.salesActivity;
            this.sendData.activityType = this.travelData.activityType;
            console.log(this.sendData);
            this.getStateList();
        }
        console.log(this.planData);
    }
    UpdateTravelComponent.prototype.ngOnInit = function () {
        // this.dropdownList = [
        //   { item_id: 1, item_text: 'Mumbai' },
        //   { item_id: 2, item_text: 'Bangaluru' },
        //   { item_id: 3, item_text: 'Pune' },
        //   { item_id: 4, item_text: 'Navsari' },
        //   { item_id: 5, item_text: 'New Delhi' }
        // ];
        // this.selectedItems = [
        //   { item_id: 3, item_text: 'Pune' },
        //   { item_id: 4, item_text: 'Navsari' }
        // ];
        this.dropdownSettings = {
            singleSelection: true,
            idField: 'state',
            textField: 'state',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true
        };
        this.dropdownSettings1 = {
            singleSelection: true,
            idField: 'districtName',
            textField: 'districtName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true
        };
        this.dropdownSettings2 = {
            singleSelection: true,
            idField: 'cityName',
            textField: 'cityName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            allowSearchFilter: true
        };
    };
    UpdateTravelComponent.prototype.onItemSelect = function (item) {
        this.sendData.city = item[0];
        console.log(item);
    };
    UpdateTravelComponent.prototype.onSelectAll = function (items) {
        console.log(items);
    };
    UpdateTravelComponent.prototype.update_travel = function () {
        var _this = this;
        console.log(this.sendData);
        this.service.fetchData(this.sendData, "traveldetail/update").subscribe(function (result) {
            console.log(result);
            if (result['status'] == "Success") {
                _this.toast.openSucess("Travel Plan Update", "SuccessFully");
                _this.dialog.closeAll();
            }
        });
    };
    UpdateTravelComponent.prototype.getStateList = function () {
        var _this = this;
        this.loader = true;
        this.service.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.travelStateList = response['data'];
                _this.getDistrictList(_this.planData.state);
            }
        });
    };
    UpdateTravelComponent.prototype.getDistrictList = function (state) {
        var _this = this;
        console.log(state);
        this.sendData.state = state[0];
        this.travelDistrictList = [];
        // console.log(state);
        this.loader = true;
        this.service.fetchData(this.planData.state, 'district/list/').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            if (response['status'] == 'Success') {
                _this.travelDistrictList = response['data'][0].distrcits;
                _this.getCityList(_this.planData.city);
            }
            // console.log(this.district1);
        });
    };
    UpdateTravelComponent.prototype.getCityList = function (district) {
        var _this = this;
        this.travelCityList = [];
        this.sendData.district = district;
        console.log(district);
        // this.planDetail[i].district=district
        this.loader = true;
        this.service.fetchData(Array({ "stateName": this.planData.state[0], "distrcits": Array({ 'districtName': this.planData.districtName[0] }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.travelCityList = response['data'][0].distrcits[0].cities;
            }
            // console.log(this.shippingCity);
        });
    };
    UpdateTravelComponent.prototype.travelcity = function (city, i) {
        // this.planDetail[i].city=city
    };
    UpdateTravelComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-update-travel',
            template: __webpack_require__(/*! ./update-travel.component.html */ "./src/app/travel/update-travel/update-travel.component.html"),
            styles: [__webpack_require__(/*! ./update-travel.component.scss */ "./src/app/travel/update-travel/update-travel.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"]])
    ], UpdateTravelComponent);
    return UpdateTravelComponent;
}());



/***/ }),

/***/ "./src/app/user/address-modal/address-modal.component.html":
/*!*****************************************************************!*\
  !*** ./src/app/user/address-modal/address-modal.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div mat-dialog-content>\n    \n    <p class=\"heading\">Update Address</p>\n    <div class=\"from-fields\">\n      \n      <div class=\"row\">\n        <div class=\"col s6\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr8\">\n              <mat-select placeholder=\"State\" name=\"state\" #state=\"ngModel\" [(ngModel)]=\"sales_data.state\" [ngClass]=\"{'has-error' : state.invalid } \" required>\n                <mat-option (click)=\"get_district()\"  *ngFor=\"let state of statelist\" value=\"{{state}}\">{{state}}</mat-option>\n                <div class=\"alert alert-danger\" *ngIf=\"!state.valid && state.touched\">\n                  State is required....\n                </div>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s6\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr8\">                \n              <mat-select placeholder=\"District\"   name=\"district\" #district=\"ngModel\" [(ngModel)]=\"sales_data.district\" [ngClass]=\"{'has-error' : district.invalid } \" >\n                <mat-option (click)=\"get_city()\"  *ngFor=\"let district of district1\" value=\"{{district.districtName}}\">{{district.districtName}}</mat-option>\n                <div class=\"alert alert-danger\" *ngIf=\"!district.valid && district.touched\">\n                  District is required....\n                </div>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"row\">\n        <div class=\"col s6\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr8\">\n              <mat-select placeholder=\"City\"  name=\"city\" #city=\"ngModel\" [(ngModel)]=\"sales_data.city\" [ngClass]=\"{'has-error' : city.invalid } \" >\n                <mat-option  (click)= \"get_pincode()\" *ngFor=\"let city of cities\" value=\"{{city.cityName}}\">{{city.cityName}}</mat-option>\n                <div class=\"alert alert-danger\" *ngIf=\"!city.valid && city.touched\">\n                  City is required....\n                </div>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"col s6\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr8\">\n              <mat-select placeholder=\"Pin\"  name=\"pin\" #pin=\"ngModel\" [(ngModel)]=\"sales_data.pin\"  [ngClass]=\"{'has-error' : pin.invalid } \" >\n                <mat-option   *ngFor=\"let pin of areas\" value=\"{{pin}}\">{{pin}}</mat-option>\n                <div class=\"alert alert-danger\" *ngIf=\"!pin.valid && pin.touched\">\n                  Pin is required....\n                </div>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"control-field\">\n            <mat-form-field class=\"cs-input infix-bodr8\" >\n              <textarea matInput placeholder=\"Address\" name=\"street\" #street=\"ngModel\" [(ngModel)]=\"sales_data.street\" class=\"h90\"></textarea>\n              <div class=\"alert alert-danger\" *ngIf=\"!street.valid && street.touched\">\n                Street is required....\n              </div>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n    <ng-container *ngIf=\"district.valid\">\n      <button mat-raised-button color=\"accent\" (click)=\"update_salesuser()\">Save</button>\n    </ng-container>\n  </div>\n  \n</div>"

/***/ }),

/***/ "./src/app/user/address-modal/address-modal.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/user/address-modal/address-modal.component.ts ***!
  \***************************************************************/
/*! exports provided: AddressModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressModalComponent", function() { return AddressModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");






var AddressModalComponent = /** @class */ (function () {
    function AddressModalComponent(toast, router, dialogRef, data, db) {
        this.toast = toast;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.sales_data = {};
        this.statelist = [];
        this.districtlist = [];
        this.st = [];
        this.district1 = [];
        this.citylist = [];
        this.cities = [];
        this.districts2 = [];
        this.cities1 = [];
        this.areas = [];
        this.districts1 = [];
        this.sales_data = this.data;
        this.sales_data.district = this.data.district.charAt(0).toUpperCase() + this.data.district.substr(1).toLowerCase();
        this.sales_data.city = this.data.city.charAt(0).toUpperCase() + this.data.city.substr(1).toLowerCase();
        console.log(this.sales_data);
        this.get_state();
        this.get_district();
        this.get_city();
        this.get_pincode();
    }
    AddressModalComponent.prototype.ngOnInit = function () {
    };
    AddressModalComponent.prototype.get_state = function () {
        var _this = this;
        // this.sales_data.state='';/
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.statelist = response['data'];
            console.log(_this.statelist);
            _this.get_district();
        });
    };
    AddressModalComponent.prototype.get_district = function () {
        var _this = this;
        // this.sales_data.district='';
        console.log(this.sales_data.state);
        this.st = Array(this.sales_data.state);
        this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
            console.log(response);
            _this.districtlist = response['data'];
            _this.district1 = _this.districtlist[0].distrcits;
        });
        this.get_city();
    };
    AddressModalComponent.prototype.get_city = function () {
        var _this = this;
        // this.sales_data.city='';
        console.log(this.sales_data.state, this.sales_data.district);
        console.log(this.sales_data.district);
        this.db.fetchData(Array({ "stateName": this.sales_data.state, "distrcits": Array({ "districtName": this.sales_data.district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.citylist = response['data'];
                _this.districts1 = _this.citylist[0].distrcits;
                _this.cities = _this.districts1[0].cities;
                // this. get_pincode();
            }
            console.log(_this.cities);
        });
    };
    AddressModalComponent.prototype.get_pincode = function () {
        var _this = this;
        // this.sales_data.pin='';/
        console.log(this.sales_data.state, this.sales_data.district, this.sales_data.city);
        this.db.fetchData(Array({ "stateName": this.sales_data.state, "distrcits": Array({ "districtName": this.sales_data.district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.cities1 = response['data'][0]['distrcits'][0]['cities'];
                var filterpincode = _this.cities1.filter(function (x) { return x.cityName.toLowerCase(x.cityName) === _this.sales_data.city.toLowerCase(_this.sales_data.city); });
                _this.areas = filterpincode[0].pinCodes;
            }
        });
    };
    AddressModalComponent.prototype.update_salesuser = function () {
        var _this = this;
        this.loader = true;
        console.log(this.data);
        this.db.fetchData(this.sales_data, 'user/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "User updated successfully") {
                _this.toast.openSucess('Address updated successfully', '');
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
        this.dialogRef.close();
    };
    AddressModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-address-modal',
            template: __webpack_require__(/*! ./address-modal.component.html */ "./src/app/user/address-modal/address-modal.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], AddressModalComponent);
    return AddressModalComponent;
}());



/***/ }),

/***/ "./src/app/user/email-modal/email-modal.component.html":
/*!*************************************************************!*\
  !*** ./src/app/user/email-modal/email-modal.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n<form name=\"form\" (ngSubmit)=\"f.form.valid && updateMobileEmail()\"  #f=\"ngForm\" novalidate>\n        <div *ngIf=\"loader\"> \n                <div class=\"cs-loader\">\n                  <img src=\"assets/img/loader.png\" class=\"rotate\"> \n                </div>\n         </div>\n\n\n\n<div *ngIf=\"data.type=='userName'\" mat-dialog-content>\n                <p class=\"heading\">Update User Detail</p>\n                \n                <div class=\"row\">\n                        <div class=\"from-fields col s12\">\n                                <div class=\"control-field\">\n                                        <mat-form-field class=\"example-full-width cs-input\">\n                                                <!-- <input matInput placeholder=\"Email\" value=\"email\" [(ngModel)]=\"data.email\"> -->\n                                                <input matInput placeholder=\"Name\" name=\"username\"  [(ngModel)]=\"data.userName\" #userName=\"ngModel\" required>\n                                        </mat-form-field>\n                                </div>\n                                <div class=\"alert alert-danger\" *ngIf=\"!data.userName\">\n                                        Name Required!\n                                </div>\n                        </div>\n                </div>\n\n\n                <div class=\"row\">\n                        <div class=\"from-fields col s12\">\n\n                                <div class=\"control-field\">\n                                        <mat-form-field class=\"cs-input infix-bodr8\">\n                                                <mat-select placeholder=\"Role\" name=\"role\" [(ngModel)]=\"data.role\"  #role=\"ngModel\" required>\n                                                        <mat-option *ngFor='let role of roleData' [value]=\"role.roleId\">{{role.roleName}}</mat-option>\n                                                </mat-select>\n                                        </mat-form-field>\n                                </div>\n\n                                <div class=\"alert alert-danger\" *ngIf=\"!data.role\">\n                                        Role Required!\n                                </div>\n                        </div>\n                </div>\n                \n        </div>\n        \n\n        <div *ngIf=\"data.type=='target'\" mat-dialog-content>\n                        <p class=\"heading\">Update Yearly Target</p>\n                        \n                <div class=\"row\">\n                        <div class=\"from-fields col s12\">\n                                <div class=\"control-field\">\n                                        <mat-form-field class=\"example-full-width cs-input\">\n                                                <!-- <input matInput placeholder=\"Email\" value=\"email\" [(ngModel)]=\"data.email\"> -->\n                                                <input matInput placeholder=\"Yearly Target\" name=\"target\" id=\"target\" [(ngModel)]=\"data.totalTarget\" #target=\"ngModel\" maxlength=\"10\" (keypress)=\"MobileNumber($event)\"  required>\n                                        </mat-form-field>\n                                </div>\n                                <div class=\"alert alert-danger\" *ngIf=\"!data.userName\">\n                                        Target Required!\n                                </div>\n                        </div>\n                </div>\n        </div>\n\n\n\n<div *ngIf=\"data.type=='email'\" mat-dialog-content>\n<p class=\"heading\">Update Email</p>\n\n<div class=\"row\">\n        <div class=\"from-fields col s12\">\n                <div class=\"control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                                <!-- <input matInput placeholder=\"Email\" value=\"email\" [(ngModel)]=\"data.email\"> -->\n                                <input matInput placeholder=\"Email-ID\" name=\"email\" value=\"email\" [(ngModel)]=\"data.email\" #email=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n                        </mat-form-field>\n                </div>\n                <div class=\"alert alert-danger\" *ngIf=\"!email.valid && email.touched\">\n                        Please Enter Valid Email....\n                </div>\n        </div>\n</div>\n</div>\n\n\n<div *ngIf=\"data.type=='mobile'\" mat-dialog-content>\n<p class=\"heading\">Update Mobile</p>\n<div class=\"row\">\n        <div class=\"from-fields col s12\">\n                <div class=\"control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                                <input matInput type=\"text\"  maxlength=\"10\"  placeholder=\"Mobile\" name=\"mobile\"   value=\"mobile\" [(ngModel)]=\"data.mobile\" minlength=\"10\" maxlength=\"10\" min=\"0\" #mobile=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && mobile.invalid }\" (keypress)=\"MobileNumber($event)\" required>\n                                <!-- <input matInput placeholder=\"Mobile\" value=\"mobile\" [(ngModel)]=\"data.mobile\"> -->\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!mobile.valid && mobile.touched\">\n                                Please Enter Valid Mobile....\n                        </div>\n                </div>\n        </div>\n</div>\n\n\n</div>\n\n\n<div *ngIf=\"data.type=='concern_approval'\" mat-dialog-content>\n\n<p class=\"heading\">Update Concern Right</p>\n<div class=\"row\">\n        <div class=\"from-fields col s12\">\n                <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input\">\n                                <mat-select placeholder=\"Select Concern Right\" name=\"concern_approval\" [(ngModel)]=\"data.concernApprovalAccess\">\n                                        <mat-option [value] =\"true\" >Yes</mat-option>\n                                        <mat-option [value] =\"false\" >No</mat-option>\n                                </mat-select>\n                        </mat-form-field>\n                </div>\n        </div>\n</div>\n\n</div>\n\n\n<div *ngIf=\"data.type=='designationName'\" mat-dialog-content>\n\n<p class=\"heading\">Update Designation</p>\n<div class=\"row\">\n        <div class=\"from-fields col s12\">\n                <div class=\"control-field\">\n\n                <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"Designation\" name=\"designation\" id=\"designation\" [(ngModel)]=\"data.designation\"  #designation=\"ngModel\">\n                                <mat-option *ngFor='let list of designationData' [value]=\"list.designation\">{{list.designationName}}</mat-option>\n                        </mat-select>\n                </mat-form-field>\n                </div>\n        </div>\n</div>\n\n</div>\n\n\n\n<div *ngIf=\"data.type=='territory'\" mat-dialog-content>\n<p class=\"heading\">Update Territories</p>\n<div class=\"row\">\n        <div class=\"from-fields col s12\">\n                <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input\">\n                                <mat-select placeholder=\"Select territory\" name=\"territory\" [(ngModel)]=\"data.territory\" multiple>\n                                        <mat-option *ngFor='let territory of territorylist' value=\"{{territory.territoryID}}\" >{{territory.territoryName}}</mat-option>\n                                </mat-select>\n                        </mat-form-field>\n                </div>\n        </div>\n</div>\n\n\n</div>  \n<div *ngIf=\"data.type=='segment'\" mat-dialog-content>\n<p class=\"heading\">Update Segment</p>\n<div class=\"row\">\n        <div class=\"from-fields col s12\">\n                <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input\">\n                                <mat-select placeholder=\"Select segment\" name=\"segment\" [(ngModel)]=\"data.segment\" multiple>\n                                        <mat-option *ngFor='let segment of segmentlist' value=\"{{segment.text}}\" >{{segment.text}}</mat-option>\n                                </mat-select>\n                        </mat-form-field>\n                </div>\n        </div>\n</div>\n\n</div>\n<div *ngIf=\"data.type=='assign'\" mat-dialog-content>\n<p class=\"heading\">Update Juniors</p>\n\n<div class=\"row\">\n        <div class=\"from-fields col s12\">\n                <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input\">\n                                <mat-select placeholder=\"Select Juniors\" name=\"Juniors\" [(ngModel)]=\"data.Juniors\" multiple>\n                                        <mat-option *ngFor='let junior of junior' value=\"{{junior.userId}}\" >{{junior.userName}}</mat-option>\n                                </mat-select>\n                        </mat-form-field>\n                </div>\n        </div>\n</div>\n</div>\n<div mat-dialog-actions>\n<button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n<button mat-raised-button color=\"accent\">Save</button>\n</div>\n</form>\n</div>"

/***/ }),

/***/ "./src/app/user/email-modal/email-modal.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/user/email-modal/email-modal.component.ts ***!
  \***********************************************************/
/*! exports provided: EmailModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailModalComponent", function() { return EmailModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");






var EmailModalComponent = /** @class */ (function () {
    function EmailModalComponent(toast, router, dialogRef, data, db) {
        this.toast = toast;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.juniordata = {};
        this.junior = [];
        this.segmentlist = [];
        this.staffSegments = [];
        this.territories = [];
        this.territorylist = [];
        this.saleHierarchies = [];
        this.designationData = [];
        this.roleData = [];
        console.log(data);
        this.designationData = [
            { designationName: 'Vice President', designation: 1 },
            { designationName: 'Deputy General Manager', designation: 2 },
            { designationName: 'General Manager', designation: 3 },
            { designationName: 'Assistant General Manager', designation: 4 },
            { designationName: 'Sr Manager', designation: 5 },
            { designationName: 'Manager', designation: 6 },
            { designationName: 'Deputy Manager', designation: 7 },
            { designationName: 'Sr Executive', designation: 8 },
            { designationName: 'Executive', designation: 9 },
            { designationName: 'Assistant Manager', designation: 10 },
            { designationName: 'Assistant', designation: 11 },
            { designationName: 'Trainee', designation: 12 },
            { designationName: 'Others', designation: 13 }
        ];
    }
    EmailModalComponent.prototype.ngOnInit = function () {
        this.rolelist();
        this.get_territory();
        this.segment_list();
        this.get_juniors();
    };
    EmailModalComponent.prototype.segment_list = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    EmailModalComponent.prototype.get_juniors = function () {
        var _this = this;
        if (this.data.role == 8) {
            this.role = parseInt(this.data.role) + 2;
        }
        else {
            this.role = parseInt(this.data.role) + 1;
        }
        this.db.fetchData({ 'role': this.role, 'currentPage': 1,
            'pageSize': 50, }, 'user/list').subscribe(function (response) {
            console.log(response);
            _this.junior = response['data'];
            console.log(_this.junior);
        });
    };
    EmailModalComponent.prototype.get_territory = function () {
        var _this = this;
        this.db.fetchData({}, 'territory/detail').subscribe(function (response) {
            console.log(response);
            _this.territorylist = response['data'];
            console.log(_this.territorylist);
        });
    };
    EmailModalComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    EmailModalComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            var roleArr = response['data'].filter(function (x) { return x.userTypeId == 2; });
            _this.roleData = roleArr[0].roles;
            console.log(_this.roleData);
        });
    };
    EmailModalComponent.prototype.updateMobileEmail = function () {
        var _this = this;
        console.log(this.data);
        if (this.data.type == 'territory') {
            for (var i = 0; i < this.data.territory.length; i++) {
                this.territories.push(this.data.territory[i]);
                console.log(this.territories);
            }
            this.data.territories = this.territories;
            this.data.landline = "9050801272";
            this.data.country = "string";
            this.db.fetchData(this.data, 'user/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                if (_this.message == "User updated successfully") {
                    _this.toast.openSucess('Updated successfully', '');
                    _this.router.navigate(['/sales-user-detail/' + _this.data.userId]);
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
                _this.dialogRef.close();
            });
        }
        if (this.data.type == 'email') {
            console.log('email');
            console.log(this.data);
            for (var i = 0; i < this.data.userTerritories.length; i++) {
                this.territories.push(this.data.userTerritories[i].territoryId);
                console.log(this.territories);
            }
            this.data.territories = this.territories;
            console.log(this.data);
            this.loader = true;
            console.log(this.data);
            this.data.landline = "9050801272";
            this.data.country = "string";
            this.db.fetchData(this.data, 'user/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                if (_this.message == "User updated successfully") {
                    _this.toast.openSucess('Updated successfully', '');
                    _this.router.navigate(['/sales-user-detail/' + _this.data.userId]);
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
                _this.dialogRef.close();
            });
        }
        if (this.data.type == 'target') {
            this.loader = true;
            this.db.fetchData(this.data, 'user/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                _this.dialogRef.close();
            });
        }
        if (this.data.type == 'mobile') {
            console.log('mobile');
            for (var i = 0; i < this.data.userTerritories.length; i++) {
                this.territories.push(this.data.userTerritories[i].territoryId);
                console.log(this.territories);
            }
            this.data.territories = this.territories;
            this.loader = true;
            console.log(this.data);
            this.data.landline = "9050801272";
            this.data.country = "string";
            this.db.fetchData(this.data, 'user/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                if (_this.message == "User updated successfully") {
                    _this.toast.openSucess('Updated successfully', '');
                    _this.router.navigate(['/sales-user-detail/' + _this.data.userId]);
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
                _this.dialogRef.close();
            });
        }
        if (this.data.type == 'segment') {
            console.log(this.data.segment);
            for (var j = 0; j < this.data.segment.length; j++) {
                this.staffSegments.push({ "userId": this.data.userId,
                    "segmentCode": this.data.segment[j],
                    "segment": this.data.segment[j] });
            }
            console.log(this.staffSegments);
            this.data.staffSegments = this.staffSegments;
            for (var i = 0; i < this.data.userTerritories.length; i++) {
                this.territories.push(this.data.userTerritories[i].territoryId);
                console.log(this.territories);
            }
            this.data.territories = this.territories;
            this.loader = true;
            console.log(this.data);
            this.data.landline = "9050801272";
            this.data.country = "string";
            this.db.fetchData(this.data, 'user/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                if (_this.message == "User updated successfully") {
                    _this.toast.openSucess('Updated successfully', '');
                    _this.router.navigate(['/sales-user-detail/' + _this.data.userId]);
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
                _this.dialogRef.close();
            });
        }
        if (this.data.type == 'assign') {
            console.log("array junior");
            console.log(this.data.Juniors);
            for (var index = 0; index < this.data.Juniors.length; index++) {
                this.saleHierarchies.push({ "juniorUserID": this.data.Juniors[index] });
            }
            console.log(this.saleHierarchies);
            this.data.saleHierarchies = this.saleHierarchies;
            this.db.fetchData(this.data, 'user/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                if (_this.message == "User updated successfully") {
                    _this.toast.openSucess('Updated successfully', '');
                }
                else {
                    _this.toast.openError('Something went wrong Please Try Again!!', '');
                }
                _this.dialogRef.close();
            });
        }
        if (this.data.type == 'concern_approval') {
            console.log(this.data.concernApprovalAccess);
            this.loader = true;
            this.db.fetchData({ userId: this.data.userId, concernApprovalAccess: this.data.concernApprovalAccess }, 'user/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                _this.toast.openSucess('Updated successfully', '');
                _this.dialogRef.close();
            });
        }
        if (this.data.type == 'designationName') {
            console.log(this.data.designation);
            this.loader = true;
            this.db.fetchData({ userId: this.data.userId, designation: this.data.designation }, 'user/update').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.message = response['message'];
                _this.toast.openSucess('Updated successfully', '');
                _this.dialogRef.close();
            });
        }
        if (this.data.type == 'userName') {
            console.log(this.data.userName);
            if (!this.data.userName.trim()) {
                this.data.userName = '';
                return;
            }
            this.loader = true;
            this.db.fetchData({ userId: this.data.userId, userName: this.data.userName }, 'user/update').subscribe(function (response) {
                console.log(response);
                _this.db.fetchData({
                    'userId': _this.data.userId,
                    'role': _this.data.role
                }, 'userrole/update').subscribe(function (responseData) {
                    console.log(responseData);
                    _this.loader = false;
                    _this.toast.openSucess('Updated successfully', '');
                    _this.dialogRef.close();
                });
            });
        }
    };
    EmailModalComponent.prototype.onNoClick = function () {
        this.dialogRef.close();
    };
    EmailModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-email-modal',
            template: __webpack_require__(/*! ./email-modal.component.html */ "./src/app/user/email-modal/email-modal.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], EmailModalComponent);
    return EmailModalComponent;
}());



/***/ }),

/***/ "./src/app/user/sale-user-detail/sale-user-detail.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/user/sale-user-detail/sale-user-detail.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/sale-user-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{salesdata.userName}}  \n          \n          <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" name=\"userName\" (click)=\"openEmail('userName')\"><i class=\"material-icons\">create</i></a>\n        \n        </h2>\n        <p class=\"light\">{{salesdata.roleName}}</p>\n      </div>\n    </div>\n\n    <div *ngIf=\"userdata.role ==1 && userdata.superAdmin\" class=\"tabs right-tab\">\n      \n        <ul>\n            <li><a class=\"{{currentActiveTab==1 ? 'tab-active' : ''}}\" (click)='currentActiveTab=1' routerLinkActive=\"active\">Details</a></li>\n  \n            <li><a  class=\"{{currentActiveTab==2 ? 'tab-active' : ''}}\" (click)='currentActiveTab=2 ; lead_list()' routerLinkActive=\"active\">Leads</a></li>\n  \n            <li><a class=\"{{currentActiveTab==3 ? 'tab-active' : ''}}\" (click)=\"currentActiveTab=3; getOrderList()\" routerLinkActive=\"active\">Orders</a></li>\n\n            <li><a class=\"{{currentActiveTab==4 ? 'tab-active' : ''}}\" (click)=\"currentActiveTab=4; getConcernList()\" routerLinkActive=\"active\">Concern List</a></li>\n\n            <li><a class=\"{{currentActiveTab==5 ? 'tab-active' : ''}}\" (click)='currentActiveTab=5; getTravelList()' routerLinkActive=\"active\">Travel Plans</a></li>\n\n            <li><a class=\"{{currentActiveTab==6 ? 'tab-active' : ''}}\" (click)=\"currentActiveTab=6; getExpenseList()\" routerLinkActive=\"active\">Expenses</a></li>\n              \n            <li><a class=\"{{currentActiveTab==7 ? 'tab-active' : ''}}\" (click)='currentActiveTab=7;getCheckinList()' routerLinkActive=\"active\">DVR</a></li>\n\n  \n          </ul>\n\n      </div>\n    <!-- <div class=\"tabs right-tab\">\n      <ul>\n        <li><a  routerLink=\"/sale-user-detail/{{id}}\" routerLinkActive=\"active\">DETAIL</a></li>\n        <li><a>ORDERS</a></li>\n        <li><a>LEADS</a></li>\n        <li><a>FOLLOWUP</a></li>\n        <li><a>TARGETS</a></li>\n        <li><a>TRAVEL PLAN</a></li>\n      </ul>\n    </div> -->\n  </div>\n\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div *ngIf=\"currentActiveTab==1\" class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info\">\n            <div class=\"basic-details\">\n              <div class=\"profile-info\">\n                <ul class=\"flex-start\">\n\n\n                  <li>\n                      <div class=\"cs-box\">\n                        <img src=\"assets/img/gmail.svg\" class=\"fix-img\">\n                        <span>Designation</span>\n                        <p class=\"link-clr\">{{salesdata.designationName}}</p>\n                        <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" [(ngModel)]=\"salesdata.designationName\" #designationName=\"ngModel\" name=\"designationName\"  (click)=\"openEmail('designationName')\" ><i class=\"material-icons\">create</i></a>\n                      </div>\n                    </li>\n\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/gmail.svg\" class=\"fix-img\">\n                      <span>Email</span>\n                      <p class=\"link-clr\">{{salesdata.email}}</p>\n                      <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" [(ngModel)]=\"salesdata.email\"  name=\"email\" (click)=\"openEmail('email')\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/phone.svg\" class=\"fix-img\">\n                      <span>Mobile</span>\n                      <p>{{salesdata.mobile}}</p>\n                      <a *ngIf=\"this.role==1\" class=\"edit-icon\"  color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('mobile')\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n                  <li *ngIf=\"salesdata.role == '10'\">\n                    <div class=\"cs-box\">\n                      <!-- <img src=\"assets/img/phone.svg\" class=\"fix-img\"> -->\n                      <span>Concern Right</span>\n                      <p *ngIf=\"salesdata.concernApprovalAccess\">Yes</p>\n                      <p *ngIf=\"!salesdata.concernApprovalAccess\">No</p>\n\n                      <!-- <a *ngIf=\"this.role==1\" class=\"edit-icon\"  color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('concern_approval')\"><i class=\"material-icons\">create</i></a> -->\n\n                    </div>\n                  </li>\n                </ul>\n              </div>\n              <mat-divider class=\"mt15 mb15\"></mat-divider>\n              \n              <div class=\"col s10 cs-figure space-li pl0\">\n                <ul>\n                  <li *ngIf=\"salesdata.role==6\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Regional Manager</span>\n                        <p class=\"counter\">{{TotalRSM.length}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li *ngIf=\"salesdata.role==7\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Area Manager</span>\n                        <p class=\"counter\">{{TotalASM.length}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  \n                  <li *ngIf=\"salesdata.role==8\">\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Territory Incharge</span>\n                        <p class=\"counter\">{{TotalTI.length}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li >\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Territory</span>\n                        <p class=\"counter\">{{TotalTerritoy.length}}</p>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"outer\">\n                      <div class=\"inner\">\n                        <span>Distributor</span>\n                        <p class=\"counter\">{{TotalDistributor.length}}</p>\n                      </div>\n                    </div>\n                  </li>\n\n\n                  <li>\n                      <div class=\"outer\">\n                        <div class=\"inner\">\n                          <span>Target</span>\n                          <p class=\"counter\">&#8377; {{salesdata.totalTarget}}</p>\n                        </div>\n\n                        <a *ngIf=\"this.role==1\" class=\"edit-icon\"  color=\"accent\" matRipple matTooltip=\"EDIT\" (click)=\"openEmail('target')\"><i class=\"material-icons\">create</i></a>\n                   \n                      </div>\n                    </li>\n                  \n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"currentActiveTab==1\"  class=\"row\">\n        <div class=\"col s8\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>ADDRESS</h2>\n              </div>\n              <a  *ngIf=\"this.role==1\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\" (click)=\"openDialog()\"><i class=\"material-icons\">edit</i></a>\n              <div class=\"nationality\">\n                <img src=\"assets/img/india.svg\" alt=\"\">\n                <p>India</p>\n              </div>\n              <div class=\"ds-from-fields\">\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>State</p>\n                    <p>{{salesdata.state}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>District</p>\n                    <p>{{salesdata.district}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>City</p>\n                    <p>{{salesdata.city}}</p>\n                  </div>\n                  <div class=\"static-info w100\" style=\"min-width: 100px;\">\n                    <p>Pin Code</p>\n                    <p>{{salesdata.pin}}</p>\n                  </div>\n                </div>\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>address</p>\n                    <p>{{salesdata.street}}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col s4\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"cs-logs\">\n              <div class=\"top-heading\">\n                <h2>ACCOUNT INFO</h2>\n              </div>\n              <div class=\"logs-outer\">\n                <div class=\"logs-list\">\n                  <div class=\"account-details\">\n                    <ul>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <div class=\"cs-account\">\n                              <p>User Name</p>\n                              <h5>{{salesdata.email}}</h5>\n                            </div>\n                          </div>\n                        </div>\n                      </li>\n                      \n                      <li *ngIf=\"this.role==1\" class=\"active\" style=\"padding-top: 0px !important; padding-bottom: 0px !important;\">\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <div class=\"cs-account\">\n                              <!-- <p>Password</p> -->\n                              <form name=\"form\" (ngSubmit)=\"f.form.valid && updatepassword()\"  #f=\"ngForm\" novalidate>\n                                <div class=\"from-fields\">\n                                  <div class=\"control-field pr80\">\n                                    <mat-form-field class=\"cs-input infix-bodr\">\n                                      <input matInput type=\"text\" placeholder=\"Change password\" name=\"password\" [(ngModel)]=\"account_form.password\" #password=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && password.invalid }\" required>\n                                    </mat-form-field>\n                                  </div>\n                                </div>\n                                <mat-error *ngIf=\"f.submitted && password.invalid\" class=\"invalid-feedback\">\n                                  <mat-error *ngIf=\"password.errors.required\">Password is required</mat-error>\n                                </mat-error>\n                                <button style=\"color: #fff;\" mat-raised-button color=\"accent\" class=\"material-icons pass-icon\">Save</button>\n                              </form>\n                            </div>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n      <div *ngIf=\"currentActiveTab==1\"  class=\"row\">\n          \n\n                \n          <div class=\"col s12\">\n              <div class=\"sprate-box padding0 mt15\">\n                <div class=\"full-address\">\n                  <div class=\"top-heading\">\n                    <h2>OFFICE ADDRESS</h2>\n                  </div>\n                  <!-- <a  *ngIf=\"this.role==1\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\" (click)=\"openDialog()\"><i class=\"material-icons\">edit</i></a> -->\n                  <div class=\"nationality\">\n                    <img src=\"assets/img/india.svg\" alt=\"\">\n                    <p>India</p>\n                  </div>\n                  <div class=\"ds-from-fields\">\n                    <div class=\"cs-row\">\n                      <div class=\"static-info\">\n                        <p>State</p>\n                        <p>{{salesdata.stateOffice}}</p>\n                      </div>\n                      <div class=\"static-info\">\n                        <p>District</p>\n                        <p>{{salesdata.districtOffice}}</p>\n                      </div>\n                      <div class=\"static-info\">\n                        <p>City</p>\n                        <p>{{salesdata.cityOffice}}</p>\n                      </div>\n                      <div class=\"static-info w100\" style=\"min-width: 100px;\">\n                        <p>Pin Code</p>\n                        <p>{{salesdata.pinOffice}}</p>\n                      </div>\n                    </div>\n                    <div class=\"cs-row\">\n                      <div class=\"static-info\">\n                        <p>address</p>\n                        <p>{{salesdata.streetOffice}}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n         \n        </div>\n      \n      \n      <div *ngIf=\"currentActiveTab==1 && salesdata.seniors && salesdata.seniors.length > 0\" class=\"sprate-box mt20 padding0\">\n        <div class=\"full-address\">\n          <div class=\"top-heading\">\n            <h2>Team Detail</h2>\n          </div>\n          <div class=\"cs-table\">\n            <div class=\"table-head\">\n              <table>\n                <tr>\n                  <th>Name</th>\n                  <th>Role</th>\n                </tr>\n              </table>\n            </div>\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let list of salesdata.seniors\">\n                    <td>{{list.userName}}</td>\n                    <td>\n                      <span *ngIf=\"salesdata.role==10\">ASM</span>\n                      <span *ngIf=\"salesdata.role==8\">RSM</span>\n                      <span *ngIf=\"salesdata.role==7\">NSM</span>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      \n      <!-- Only View Assigned Detail Start -->\n      <div *ngIf=\"currentActiveTab==1 && this.role==1 && !editAssignedDiv\" class=\"sprate-box pt0 mt20 mb15\">\n        <div  class=\"top-heading left-right-15\">\n          <h2>ASSIGNED INFORMATION</h2>\n          <a  *ngIf=\"this.role==1 && !editAssignedDiv\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\"  (click)=\"editAssign();getSegmentRelatedData()\"><i class=\"material-icons\">edit</i></a>\n        </div>\n        <div *ngIf=\"this.role==1 && !editAssignedDiv\" class=\"row mt15\" >\n          \n          <div class=\"col s3 pl0\">\n            \n            <div class=\"territory-info\">\n              <div class=\"head\" [ngClass]=\"{'active':active.one==true}\">\n                <h2>Segment</h2>\n                <!-- <i class=\"material-icons search-icon\" (click)=\"toggleterritory('one','open')\"  matRipple>search</i>\n                  <input type=\"text\" placeholder=\"search...\" class=\"fix-search\">\n                  <i class=\"material-icons close-icon\" (click)=\"toggleterritory('one','close')\" matRipple>clear</i> -->\n                </div>\n                \n                <div  *ngIf=\"!salesdata.staffSegments || salesdata.staffSegments.length == 0\" class=\"not-data\">\n                  <div class=\"inner-data\">\n                    <p>No Data</p>\n                  </div>\n                </div>\n                \n                <div *ngIf=\"salesdata.staffSegments.length > 0\" class=\"cs-checkbox\">\n                  <div class=\"checkbox-outer\" >\n                    <section class=\"checkbox-inner bodr0\" >\n                      <mat-checkbox  *ngFor=\"let list of salesdata.staffSegments\" class=\"check-list bg-none check-none check-none check-none check-none\" value=\"1\">\n                        <div class=\"name-outer\">\n                          <div class=\"outer\">\n                            <div class=\"inner\">\n                              <div class=\"name-inner\">\n                                S\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"text-box\">\n                          <h2>{{list.segment}}</h2>\n                        </div>\n                      </mat-checkbox>\n                    </section>\n                  </div>\n                </div>\n              </div>\n            </div> \n            \n            \n            <div *ngIf=\"salesdata.role==8\" class=\"col s3\">\n              \n              <div class=\"territory-info\">\n                <div class=\"head\" [ngClass]=\"{'active':active.one==true}\">\n                  <h2>Territory Incharge</h2>\n                  <!-- <i class=\"material-icons search-icon\" (click)=\"toggleterritory('one','open')\"  matRipple>search</i>\n                    <input type=\"text\" placeholder=\"search...\" class=\"fix-search\">\n                    <i class=\"material-icons close-icon\" (click)=\"toggleterritory('one','close')\" matRipple>clear</i> -->\n                  </div>\n                  \n                  <div  *ngIf=\"!TotalTI || TotalTI.length == 0\" class=\"not-data\">\n                    <div class=\"inner-data\">\n                      <p>No Data</p>\n                    </div>\n                  </div>\n                  \n                  <div *ngIf=\"TotalTI.length > 0\" class=\"cs-checkbox\">\n                    <div class=\"checkbox-outer\" >\n                      <section class=\"checkbox-inner bodr0\" >\n                        <mat-checkbox class=\"check-list bg-none check-none check-none check-none check-hover check-hover\" value=\"1\" *ngFor=\"let user of TotalTI\">\n                          <a routerLink=\"/sale-user-detail/{{user.userId}}\" routerLinkActive=\"active\">\n                            <div class=\"name-outer\">\n                              <div class=\"outer\">\n                                <div class=\"inner\">\n                                  <div *ngIf=\"user.userName\" class=\"name-inner\">\n                                    {{user.userName[0]}}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"text-box\">\n                              <h2>{{user.userName}}</h2>\n                            </div>\n                          </a>\n                        </mat-checkbox>\n                      </section>\n                    </div>\n                  </div>\n                </div>\n              </div> \n              \n              \n              <div *ngIf=\"salesdata.role==7\" class=\"col s3\">\n                \n                <div class=\"territory-info\">\n                  <div class=\"head\" [ngClass]=\"{'active':active.one==true}\">\n                    <h2>Area Manager</h2>\n                    <!-- <i class=\"material-icons search-icon\" (click)=\"toggleterritory('one','open')\"  matRipple>search</i>\n                      <input type=\"text\" placeholder=\"search...\" class=\"fix-search\">\n                      <i class=\"material-icons close-icon\" (click)=\"toggleterritory('one','close')\" matRipple>clear</i> -->\n                    </div>\n                    \n                    <div  *ngIf=\"!TotalASM || TotalASM.length == 0\" class=\"not-data\">\n                      <div class=\"inner-data\">\n                        <p>No Data</p>\n                      </div>\n                    </div>\n                    \n                    \n                    <div *ngIf=\"TotalASM.length > 0\" class=\"cs-checkbox\">\n                      <div class=\"checkbox-outer\">\n                        <section class=\"checkbox-inner bodr0\" >\n                          <mat-checkbox class=\"check-list bg-none check-none check-none check-none check-hover \" value=\"1\" *ngFor=\"let asm of TotalASM\">\n                            <a routerLink=\"/sale-user-detail/{{asm.userId}}\" routerLinkActive=\"active\">\n                              <div class=\"name-outer\">\n                                <div class=\"outer\">\n                                  <div class=\"inner\">\n                                    <div class=\"name-inner\">\n                                      {{asm.userName[0]}}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"text-box\">\n                                \n                                \n                                <h2>{{asm.userName}}</h2>\n                                \n                              </div>\n                            </a>\n                          </mat-checkbox>\n                        </section>\n                      </div>\n                    </div>\n                  </div>\n                </div> \n                \n                <div *ngIf=\"salesdata.role==6\" class=\"col s3\">\n                  \n                  <div class=\"territory-info\">\n                    <div class=\"head\" [ngClass]=\"{'active':active.one==true}\">\n                      <h2>Regional Manager</h2>\n                      <!-- <i class=\"material-icons search-icon\" (click)=\"toggleterritory('one','open')\"  matRipple>search</i>\n                        <input type=\"text\" placeholder=\"search...\" class=\"fix-search\">\n                        <i class=\"material-icons close-icon\" (click)=\"toggleterritory('one','close')\" matRipple>clear</i> -->\n                      </div>\n                      \n                      <div  *ngIf=\"!TotalRSM || TotalRSM.length == 0\" class=\"not-data\">\n                        <div class=\"inner-data\">\n                          <p>No Data</p>\n                        </div>\n                      </div>\n                      \n                      <div  *ngIf=\"TotalRSM.length > 0\" class=\"cs-checkbox\">\n                        <div class=\"checkbox-outer\">\n                          <section class=\"checkbox-inner bodr0\" >\n                            <mat-checkbox class=\"check-list bg-none check-none check-none check-none check-hover\" value=\"1\" *ngFor=\"let rsm of TotalRSM\">\n                              <a  routerLink=\"/sale-user-detail/{{rsm.userId}}\" routerLinkActive=\"active\" >\n                                <div class=\"name-outer\">\n                                  <div class=\"outer\">\n                                    <div class=\"inner\">\n                                      <div class=\"name-inner\">\n                                        {{rsm.userName[0]}}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"text-box\">\n                                  <h2> {{rsm.userName}}</h2>\n                                </div>\n                              </a>\n                            </mat-checkbox>\n                          </section>\n                        </div>\n                      </div>\n                    </div>\n                  </div> \n                  \n                  <div class=\"col s3\">\n                    \n                    <div class=\"territory-info\">\n                      <div class=\"head\" [ngClass]=\"{'active':active.two==true}\">\n                        <h2>Territory</h2>\n                        <!-- <i class=\"material-icons search-icon\" (click)=\"toggleterritory('two','open')\"  matRipple>search</i>\n                          <input type=\"text\" placeholder=\"search...\" class=\"fix-search\">\n                          <i class=\"material-icons close-icon\" (click)=\"toggleterritory('two','close')\" matRipple>clear</i> -->\n                        </div>\n                        \n                        <div  *ngIf=\"!TotalTerritoy || TotalTerritoy.length == 0\" class=\"not-data\">\n                          <div class=\"inner-data\">\n                            <p>No Data</p>\n                          </div>\n                        </div>\n                        \n                        <div *ngIf=\"TotalTerritoy.length > 0\" class=\"cs-checkbox\">\n                          <div class=\"checkbox-outer\" >\n                            <section class=\"checkbox-inner bodr0\" >\n                              \n                              <mat-checkbox class=\"check-list bg-none check-none check-none check-hover check-none\" *ngFor=\"let list of TotalTerritoy\">\n                                <a routerLink=\"/territory-add/{{list.territoryId}}\" routerLinkActive=\"active\" >\n                                  <div class=\"name-outer\">\n                                    <div class=\"outer\">\n                                      <div class=\"inner\">\n                                        <div class=\"name-inner\">\n                                          {{list.territoryName[0]}}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div class=\"text-box\">\n                                    <h2>{{list.territoryName}}</h2>\n                                  </div>\n                                </a>\n                              </mat-checkbox>\n                            </section>  \n                          </div>\n                        </div>\n                      </div>\n                    </div> \n                    \n                    <div class=\"col s3\" >\n                      \n                      <div class=\"territory-info\">\n                        <div class=\"head\" [ngClass]=\"{'active':active.three==true}\">\n                          <h2>DISTRIBUTOR</h2>\n                          <!-- <i class=\"material-icons search-icon\" (click)=\"toggleterritory('three','open')\"  matRipple>search</i>\n                            <input type=\"text\" placeholder=\"search...\" class=\"fix-search\">\n                            <i class=\"material-icons close-icon\" (click)=\"toggleterritory('three','close')\" matRipple>clear</i> -->\n                          </div>\n                          \n                          \n                          <div  *ngIf=\"!TotalDistributor || TotalDistributor.length == 0\" class=\"not-data\">\n                            <div class=\"inner-data\">\n                              <p>No Data</p>\n                            </div>\n                          </div>\n                          \n                          \n                          <div *ngIf=\"TotalDistributor && TotalDistributor.length > 0\"  class=\"cs-checkbox\">\n                            \n                            <div class=\"checkbox-outer\" >\n                              <section class=\"checkbox-inner bodr0\" >\n                                <mat-checkbox class=\"check-list bg-none check-none check-none check-hover check-hover\" value=\"1\" *ngFor=\"let list of TotalDistributor\">\n                                  <a class=\"link-btn\" mat-button routerLink=\"/distribution-detail/{{list.networkId}}\" routerLinkActive=\"active\">\n                                    <div class=\"name-outer\">\n                                      <div class=\"outer\">\n                                        <div class=\"inner\">\n                                          <div class=\"name-inner\">\n                                            {{list.establishment[0]}}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div class=\"text-box\">\n                                      <h2>{{list.establishment}}</h2>\n                                      <!-- <h2>{{list.establishment}} <span>(Territory Incharge)</span></h2> -->\n                                      <!-- <p>Territory</p> -->\n                                    </div>\n                                  </a>\n                                </mat-checkbox>\n                              </section>\n                            </div>\n                          </div>\n                        </div>\n                        \n                      </div>\n                      \n                    </div>\n                  </div>\n                  \n                  <!-- Only View Assigned Detail End -->\n                  \n                  \n                  <!-- Edit assigned Detail Start -->\n                  <div *ngIf=\"currentActiveTab==1 &&  editAssignedDiv\"  class=\"sprate-box pt0  mt20 mb15\">\n                    <div  class=\"top-heading left-right-15\">\n                      <h2>UPDATE INFORMATION</h2>\n                    </div>\n                    <div class=\"row mt15\">                     \n                      <div class=\"col s4\">\n                        <div class=\"territory-info\">\n                          <div class=\"head\" >\n                            <h2>SEGMENT</h2>\n                          </div>\n                          \n                          <div  *ngIf=\"!segmentlist || segmentlist.length == 0\" class=\"not-data\">\n                            <div class=\"inner-data\">\n                              <p>No Data</p>\n                            </div>\n                          </div>\n                          \n                          <div *ngIf=\"segmentlist.length > 0\" class=\"cs-checkbox\">\n                            <div class=\"checkbox-outer\">\n                              <section class=\"checkbox-inner\" >\n                                <ng-container *ngFor=\"let row of segmentlist;let index=index\" aria-required=\"true\">\n                                  <mat-checkbox class=\"check-list\" [(ngModel)]=\"row.checked\" (change)=\"getSegmentRelatedData()\">{{row.value}}</mat-checkbox>\n                                </ng-container>\n                              </section>\n                            </div>\n                          </div>\n                        </div>\n                      </div> \n                      \n                      <div *ngIf=\"salesdata.role==6 || salesdata.role==7 || salesdata.role==8\" class=\"col s4\">\n                        \n                        <div class=\"territory-info\">\n                          <div class=\"head\" >\n                            <h2 *ngIf=\"salesdata.role==6\">Regional Manager</h2>\n                            <h2 *ngIf=\"salesdata.role==7\">Area Manager</h2>\n                            <h2 *ngIf=\"salesdata.role==8\">Territory Incharge</h2>\n                          </div>\n                          \n                          <div  *ngIf=\"juniorList.length == 0\" class=\"not-data\">\n                            <div class=\"inner-data\">\n                              <p>No Data</p>\n                            </div>\n                          </div>\n                          \n                          <div *ngIf=\"juniorList.length > 0\" class=\"cs-checkbox\">\n                            <div class=\"checkbox-outer\">\n                              <section class=\"checkbox-inner\" >\n                                \n                                <ng-container *ngFor=\"let junior of juniorList;let index1=index\" aria-required=\"true\">\n                                  <mat-checkbox class=\"check-list\" (change)=\"select_territory(junior.userTerritories, junior.check, 'junior')\"  [(ngModel)]=\"junior.check\" value=\"{{junior.userId}}\">{{junior.userName}}</mat-checkbox>\n                                </ng-container>\n                                \n                                \n                              </section>\n                            </div>\n                          </div>\n                          \n                        </div>\n                      </div> \n                      \n                      <div  class=\"col s4\">\n                        \n                        <div class=\"territory-info\">\n                          <div class=\"head\" >\n                            <h2>Territories</h2>\n                          </div>\n\n                          <div  *ngIf=\"territorylist.length == 0\" class=\"not-data\">\n                            <div class=\"inner-data\">\n                              <p>No Data</p>\n                            </div>\n                          </div>\n                          \n                          <div *ngIf=\"territorylist.length != 0\" class=\"cs-checkbox\">\n                            <div class=\"checkbox-outer\">\n                              <section class=\"checkbox-inner\" >\n                                <ng-container *ngFor=\"let list of territorylist;\">\n                                  <mat-checkbox class=\"check-list\" (change)=\"select_territory(list.territoryID, list.check1, 'territory')\"  [(ngModel)]=\"list.check1\" [disabled]=\"list.disabled\" name=\"{{list.territoryID}}\">{{list.territoryName}}</mat-checkbox>\n                                </ng-container>\n                              </section>\n                            </div>\n                          </div>\n                        </div>\n                      </div> \n                      \n                      <div *ngIf=\"role > 6\"  class=\"col s4\">\n                        <div class=\"territory-info\">\n                          <div class=\"head\" >\n                            <h2>Distributor</h2>\n                          </div>\n                          \n                          <div  *ngIf=\"distributionList.length == 0\" class=\"not-data\">\n                            <div class=\"inner-data\">\n                              <p>No Data</p>\n                            </div>\n                          </div>\n                          \n                          \n                          \n                          <div *ngIf=\"distributionList.length > 0\" class=\"cs-checkbox\">\n                            <div class=\"checkbox-outer\">\n                              <section class=\"checkbox-inner\" >\n                                <ng-container *ngFor=\"let list of distributionList;let index1=index\" aria-required=\"true\">\n                                  <mat-checkbox class=\"check-list\" [(ngModel)]='list.checked' [disabled]=\"list.disabled\" value=\"{{list.networkId}}\">{{list.establishment}} / {{list.territoryName}}</mat-checkbox>\n                                </ng-container>\n                              </section>\n                            </div>\n                          </div>\n                        </div>\n                      </div> \n                      \n                      \n                    </div>\n                  </div>\n                  \n                  \n                  <div class=\"row\" *ngIf=\"currentActiveTab==1 &&  editAssignedDiv\">\n                    <div class=\"col s12\">\n                      <div class=\"cs-btn mt15 text-right\">\n                        <button mat-raised-button color=\"warn\" class=\"mr15\" (click)=\"editAssignedDiv=false\">Cancel</button>\n                        <button mat-raised-button color=\"accent\" (click)=\"updateSalesUser()\" style=\"color:#fff;\">Update</button>\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div class=\"row\" *ngIf=\"currentActiveTab==2\">\n                      <div class=\"col s12\">\n                        <div class=\"cs-table left-right-20\">\n                          <div class=\"table-head tab-sticky-head\">\n                            <table class=\"sno-border\"> \n                              <tr>\n                                <th class=\"w120\"> Lead Name</th>\n                                <th class=\"w70 text-center\">Mobile</th>\n                                <th class=\"w120 text-right\">Segment</th>\n                                <th class=\"w180\">Address</th>\n                                <th class=\"w180\">Action</th>\n                              </tr>\n                            </table>\n                          </div>\n                          <div class=\"table-container\">\n                            <div class=\"table-content\">\n                              <table class=\"sno-border\">\n                                <tr *ngFor=\"let list of leadlist; let index = index\">\n                                  <td class=\"w120\">{{list.establishment}}</td>\n                                  <td class=\"w70 text-center\">{{list.mobile}}</td>\n                                  <td class=\"w120 text-center\">{{list.segmentStr}}</td>\n                                  <td class=\"w180 text-right\">{{list.state}} {{list.district}} {{list.city}} {{list.pin}}</td>\n\n                                  <td class=\"w180\">\n\n                                      <div class=\"action-btns default-action\">\n\n                                          <a mat-button class=\"view\" routerLink=\"/lead-detail/{{list.leadId}}\" routerLinkActive=\"active\">\n                                            <i class=\"material-icons\">remove_red_eye</i> View</a> \n                                    </div> \n                                  </td>\n                                </tr>\n                              </table>\n                            </div>\n                          </div>\n                          \n                        </div>\n                        <div class=\"data-not-available\" *ngIf=\"div\">\n                          <div class=\"outer\">\n                            <div class=\"iinear\">\n                              <div class=\"figure\" matRipple>\n                                <div class=\"header\">\n                                  <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                </div>\n                                \n                                <div class=\"description\">\n                                  <div class=\"cs-heading\">\n                                    <!-- <h2 *ngIf=\"cartActive=='active'\">Nothing In Draft</h2> -->\n                                    <h2 *ngIf=\"orderActive=='active'\">No Data List</h2>\n                                    \n                                  </div>\n                                  <div class=\"img\">\n                                    <i class=\"material-icons\">error_outline</i>\n                                  </div>\n                                  <div class=\"psc\">\n                                    <p>data not available</p>\n                                    <!-- <p>Tap on <a href=\"\">ADD NEW</a> for Service Plan</p> -->\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n        \n                    <div class=\"row\" *ngIf=\"currentActiveTab==3\">\n        \n                      <div class=\"col s12 padding0\">\n                        <div class=\"cs-table left-right-20\">\n                          <div class=\"table-head\">\n                            <table>\n                              <tr >\n\n                                  <th class=\"w30\">&nbsp;</th>\n                                  <th class=\"w150\"> Date</th>\n                                  <th>Company Name</th>\n                                  <th class=\"w115\"> Order No</th>\n                                  <th class=\"w70 text-center\">QTY.</th>\n                                  <th class=\"w100 text-right\">Amount</th>\n                                  <th  class=\"w110\"> Dist. Status</th>\n                                  <th  class=\"w130\"> Comp. Status</th>\n                                  <th  class=\"w130\"> Action</th>\n                              </tr>\n                            </table>\n                          </div>\n                          <div class=\"table-container\">\n                            <div class=\"table-content\">\n                              <table>\n\n                                <tr *ngFor=\"let list of orderList; let index= index\">\n                                  <td class=\"w30\">&nbsp;</td>\n                                  <td class=\"w150\"> {{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\n                                  <td>{{list.establishment}}</td>\n                                  <td class=\"w115\"> {{list.orderNumber}}</td>\n                                  <td class=\"w70 text-center\">{{list.quantity}}</td>\n                                  <td class=\"w100 text-right\">{{list.totalAmount}}</td>\n                                  <td  class=\"w110\"> \n\n                                      <span *ngIf=\"list.dealerStatus==1\">Draft</span>\n                                      <span *ngIf=\"list.dealerStatus==2\">Pending</span>\n                                      <span *ngIf=\"list.dealerStatus==3\">Approved</span>\n                                  </td>\n\n                                  <td  class=\"w130\"> \n                                      <span *ngIf=\"list.companyStatus==1\">Pending</span>\n                                      <span *ngIf=\"list.companyStatus==2\">Approved</span>\n                                      <span *ngIf=\"list.companyStatus==3\">Hold</span>\n                                  </td>\n\n                                  <td class=\"w130\">\n\n                                      <a mat-button class=\"view\" (click)=\"orderDetail(index)\">\n                                        <i class=\"material-icons\">remove_red_eye</i> View</a> \n\n                                      \n                                  </td>\n\n                                  </tr>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div *ngIf=\"orderList.length==0\" class=\"data-not-available\" >\n                          <div class=\"outer\">\n                            <div class=\"iinear\">\n                              <div class=\"figure\" matRipple>\n                                <div class=\"header\">\n                                  <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                </div>\n                                \n                                <div class=\"description\">\n                                  <div class=\"cs-heading\">\n                                  </div>\n                                  <div class=\"img\">\n                                    <i class=\"material-icons\">error_outline</i>\n                                  </div>\n                                  <div class=\"psc\">\n                                    <p>data not available</p>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"row\" *ngIf=\"currentActiveTab==4\">\n        \n                        <div class=\"col s12 padding0\">\n                          <div class=\"cs-table left-right-20\">\n                            <div class=\"table-head\">\n                              <table>\n                                <tr>\n                                  <th class=\"w150\">Date</th>\n                                  <th>Company Name</th>\n                                  <th class=\"w150 text-center\">Concern No</th>\n                                  <th class=\"w150 text-center\">Concern Type</th>\n                                  <th class=\"w150 text-center\">Total Item</th>\n                                  <th class=\"w150 text-center\">Total Qty</th>\n                                  <th class=\"w150 text-center\">Amount</th>\n                                  <th class=\"w150\">Action</th>\n                                </tr>\n                              </table>\n                            </div>\n                            <div class=\"table-container\">\n                              <div class=\"table-content\">\n                                <table>\n                                 <tr *ngFor=\"let list of concernList\">\n        \n                                    <td class=\"w150\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\n        \n                                    <td>{{list.networkEstablishment}}</td>\n        \n                                    <td class=\"w150\"> <a mat-button class=\"link-btn\" routerLink=\"/concern-detail/{{list.concernId}}\" routerLinkActive=\"active\">\n                                      {{list.claimNo}}\n                                    </a></td>\n\n                                    <td class=\"w150\">{{list.concernTypeName}}</td>\n\n                                    <td class=\"w150\">{{list.productConcerns.length}}</td>\n\n                                    <td class=\"w150\">{{list.totalQty}}</td>\n\n                                    <td class=\"w150\">{{list.totalAmount}}</td>\n        \n                                    <td class=\"w150\">\n                                        <div class=\"action-btns default-action\">\n\n                                            <a mat-button class=\"view\" routerLink=\"/concern-detail/{{list.concernId}}\" routerLinkActive=\"active\">\n                                              <i class=\"material-icons\">remove_red_eye</i> View</a>\n                                           \n                                      </div> \n                                    </td> \n        \n                                   </tr> \n                                </table>\n                              </div>\n                            </div>\n                          </div>\n        \n                          <div *ngIf=\"concernList?.length==0 && !loader\" class=\"data-not-available\" >\n                            <div class=\"outer\">\n                              <div class=\"iinear\">\n                                <div class=\"figure\" matRipple>\n                                  <div class=\"header\">\n                                    <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                  </div>\n                                  \n                                  <div class=\"description\">\n                                    <div class=\"cs-heading\">\n                                    </div>\n                                    <div class=\"img\">\n                                      <i class=\"material-icons\">error_outline</i>\n                                    </div>\n                                    <div class=\"psc\">\n                                      <p>data not available</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n        \n        \n        \n                      <div class=\"row\" *ngIf=\"currentActiveTab==5\">\n        \n                          <div class=\"col s12 padding0\">\n                            <div class=\"cs-table left-right-20\">\n                              <div class=\"table-head\">\n                                <table>\n                                  <tr >\n                                    <th class=\"w150\">Date</th>\n                                    <th class=\"w150\">Travel Month </th>\n                                    <th class=\"w150\">Travel Year </th>\n                                    <th class=\"w150\">Amount</th>\n                                    <th class=\"w150\">Status</th>\n                                    <th class=\"w150\">Action</th>\n                                  </tr>\n                                </table>\n                              </div>\n                              <div class=\"table-container\">\n                                <div class=\"table-content\">\n                                  <table>\n\n                                      <tr *ngFor=\"let list of trvelPlanLIst\">\n                                          <td class=\"w150\">{{list.createdOn  | date: 'dd-MMM-yyyy'}}</td>\n                                          <td class=\"w150\">{{list.monthName}}</td>\n                                          <td class=\"w150\">{{list.year}} </td>\n                                          <td class=\"w150\">&#8377; {{list.budget}}</td>\n                                          <td class=\"w150\">\n                                            <span *ngIf=\"list.status==2\">Pending</span>\n                                            <span *ngIf=\"list.status==3\">Approved</span>\n                                            <span *ngIf=\"list.status==4\">Reject</span>\n                                          </td>\n                                          <td class=\"w150\"> \n                                            <a mat-button class=\"view\" routerLink=\"/detail-travel/{{list.travelPlanID}}\" routerLinkActive=\"active\">\n                                            <i class=\"material-icons\">remove_red_eye</i> View</a></td>\n                                        </tr>\n                                    \n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n        \n                            <div *ngIf=\"trvelPlanLIst.length==0\" class=\"data-not-available\" >\n                              <div class=\"outer\">\n                                <div class=\"iinear\">\n                                  <div class=\"figure\" matRipple>\n                                    <div class=\"header\">\n                                      <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                    </div>\n                                    \n                                    <div class=\"description\">\n                                      <div class=\"cs-heading\">\n                                      </div>\n                                      <div class=\"img\">\n                                        <i class=\"material-icons\">error_outline</i>\n                                      </div>\n                                      <div class=\"psc\">\n                                        <p>data not available</p>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n\n                        <div class=\"row\" *ngIf=\"currentActiveTab==6\">\n                            <div class=\"col s12 padding0\">\n                              <div class=\"cs-table left-right-20\">\n                                <div class=\"table-head\">\n                                  <table>\n                                    <tr >\n                                      <th class=\"w150\">Date</th>\n                                      <th>Expense Type</th>\n                                      <th>Expense Amount</th>\n                                      <th class=\"w150\">Status</th>\n                                    </tr>\n                                  </table>\n                                </div>\n                                <div class=\"table-container\">\n                                  <div class=\"table-content\">\n                                    <table>\n\n                                        <tr *ngFor=\"let list of expenseList\">\n                                            <td class=\"w150\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\n                                            <td>{{list.expenseTypeName}}</td>\n                                            <td>&#8377; {{list.actualExpenseAmount}}</td>\n                                            <td class=\"w150\">\n                                             <span *ngIf=\"list.status==1\">Draft </span>\n                                             <span *ngIf=\"list.status==2\">Pending </span>\n                                             <span *ngIf=\"list.status==3\">Approved </span>\n                                             <span *ngIf=\"list.status==4\">Reject </span>\n                                            </td>\n                                          </tr>\n                                      \n                                    </table>\n                                  </div>\n                                </div>\n                              </div>\n          \n                              <div *ngIf=\"expenseList?.length==0 && !loader\"  class=\"data-not-available\" >\n                                <div class=\"outer\">\n                                  <div class=\"iinear\">\n                                    <div class=\"figure\" matRipple>\n                                      <div class=\"header\">\n                                        <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                      </div>\n                                      \n                                      <div class=\"description\">\n                                        <div class=\"cs-heading\">\n                                        </div>\n                                        <div class=\"img\">\n                                          <i class=\"material-icons\">error_outline</i>\n                                        </div>\n                                        <div class=\"psc\">\n                                          <p>data not available</p>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                        </div>\n\n                  <!-- Edit assigned Detail End -->\n\n\n                  <div class=\"row\" *ngIf=\"currentActiveTab==7\">\n        \n                      <div class=\"col s12 padding0\">\n                        <div class=\"cs-table left-right-20\">\n                          <div class=\"table-head\">\n                            <table>\n                              <tr >\n                                <th class=\"w150\">Date</th>\n                                <th class=\"w150 text-center\">Company Name</th>\n                                <th class=\"w150 text-center\">Type</th>\n                                <th class=\"w150 text-center\">Checkin Time</th>\n                                <th class=\"w150 text-center\">Checkout Time</th>\n                                <th class=\"w150\">Action</th>\n                              </tr>\n                            </table>\n                          </div>\n                          <div class=\"table-container\">\n                            <div class=\"table-content\">\n                              <table>\n                               <tr *ngFor=\"let list of checkInList\">\n      \n                                  <td class=\"w150\">{{list.createdOn | date: 'dd-MMM-yyyy'}}</td>\n      \n                                  <td class=\"w150\">{{list.establishment ? list.establishment : list.establishmentName}}</td>\n      \n                                  <td class=\"w150\">{{list.activityModuleName}}</td>\n\n                                  <td class=\"w150\">{{list.checkInTime|date :'d, MMMM , y, h:mm:ss a'}}</td>\n\n                                  <td class=\"w150\">{{list.checkOutTime|date :'d, MMMM , y, h:mm:ss a'}}</td>\n      \n      \n                                  <td class=\"w150\">\n                                      <div class=\"action-btns default-action\">\n\n                                          <a mat-button class=\"view\" routerLink=\"/checkin-detail/{{list.activityId}}\" routerLinkActive=\"active\">\n                                            <i class=\"material-icons\">remove_red_eye</i> View</a>\n                                    </div> \n                                  </td> \n      \n                                 </tr> \n                              </table>\n                            </div>\n                          </div>\n                        </div>\n      \n                        <div *ngIf=\"checkInList?.length==0 && !loader\" class=\"data-not-available\" >\n                          <div class=\"outer\">\n                            <div class=\"iinear\">\n                              <div class=\"figure\" matRipple>\n                                <div class=\"header\">\n                                  <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                                </div>\n                                \n                                <div class=\"description\">\n                                  <div class=\"cs-heading\">\n                                  </div>\n                                  <div class=\"img\">\n                                    <i class=\"material-icons\">error_outline</i>\n                                  </div>\n                                  <div class=\"psc\">\n                                    <p>data not available</p>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n\n\n                </div>\n              </div>\n            </div>\n            <div class=\"h50\"></div>\n            \n            "

/***/ }),

/***/ "./src/app/user/sale-user-detail/sale-user-detail.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/user/sale-user-detail/sale-user-detail.component.ts ***!
  \*********************************************************************/
/*! exports provided: SaleUserDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaleUserDetailComponent", function() { return SaleUserDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _address_modal_address_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../address-modal/address-modal.component */ "./src/app/user/address-modal/address-modal.component.ts");
/* harmony import */ var _email_modal_email_modal_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../email-modal/email-modal.component */ "./src/app/user/email-modal/email-modal.component.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");










var SaleUserDetailComponent = /** @class */ (function () {
    function SaleUserDetailComponent(db, router, user, route, dialog, toast) {
        var _this = this;
        this.db = db;
        this.router = router;
        this.user = user;
        this.route = route;
        this.dialog = dialog;
        this.toast = toast;
        this.segment = [];
        this.staffSegments = [];
        this.account_form = {};
        this.sales_detail = [];
        this.salesdata = {};
        this.rolelists = [];
        this.userdata = [];
        this.segmentlist = [];
        this.territorylist = [];
        this.territory = [];
        this.rolelistsales1 = [];
        this.distributionList = [];
        this.juniorUserDetail = [];
        this.active = {};
        this.territorylistdata = [];
        this.networkIdsdata = [];
        this.currentActiveTab = '';
        this.tiID = [];
        this.leadlist = [];
        this.designationData = [
            { designationName: 'Vice President', designation: 1 },
            { designationName: 'Deputy General Manager', designation: 2 },
            { designationName: 'General Manager', designation: 3 },
            { designationName: 'Assistant General Manager', designation: 4 },
            { designationName: 'Sr Manager', designation: 5 },
            { designationName: 'Manager', designation: 6 },
            { designationName: 'Deputy Manager', designation: 7 },
            { designationName: 'Sr Executive', designation: 8 },
            { designationName: 'Executive', designation: 9 },
            { designationName: 'Assistant Manager', designation: 10 },
            { designationName: 'Assistant', designation: 11 },
            { designationName: 'Trainee', designation: 12 },
            { designationName: 'Others', designation: 13 }
        ];
        this.editAssignedDiv = false;
        this.juniorList = [];
        this.TotalRSM = [];
        this.TotalASM = [];
        this.TotalTI = [];
        this.TotalTerritoy = [];
        this.TotalDistributor = [];
        this.orderList = [];
        this.trvelPlanLIst = [];
        this.expenseList = [];
        this.checkInList = [];
        this.tmp_concern = [];
        this.concernList = [];
        this.loader = true;
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
        this.route.params.subscribe(function (params) {
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            _this.rolelist();
            // this.distributorList();
        });
    }
    SaleUserDetailComponent.prototype.ngOnInit = function () {
    };
    SaleUserDetailComponent.prototype.rolelist = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.rolelists = response['data'];
                var filterrolesales = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
                _this.rolelistsales1 = filterrolesales[0].roles;
                console.log(_this.rolelistsales1);
                _this.salesuserdetail();
            }
        });
    };
    SaleUserDetailComponent.prototype.distributorList = function () {
        var _this = this;
        console.log("Function call");
        this.db.fetchData({}, 'network/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == "Success") {
                _this.distributionList = response['data'];
            }
            console.log(_this.distributionList);
        });
    };
    SaleUserDetailComponent.prototype.salesuserdetail = function () {
        var _this = this;
        setTimeout(function () {
            _this.currentActiveTab = 1;
        }, 200);
        console.log('hello');
        this.sales_detail = [];
        this.juniorUserDetail = [];
        this.distributionList = [];
        this.TotalRSM = [];
        this.TotalASM = [];
        this.TotalTI = [];
        this.TotalTerritoy = [];
        this.TotalDistributor = [];
        this.loader = true;
        this.db.fileData('', 'user/detail/' + this.id).subscribe(function (response) {
            console.log(response);
            setTimeout(function () {
                _this.loader = false;
            }, 200);
            if (response['status'] == 'Success') {
                // this.sales_detail = response;
                _this.salesdata = response['data'];
                for (var index = 0; index < _this.designationData.length; index++) {
                    if (_this.designationData[index].designation == _this.salesdata.designation) {
                        _this.salesdata.designationName = _this.designationData[index].designationName;
                    }
                }
                _this.sales_detail = _this.salesdata.staffWithJuniors;
                _this.juniorUserDetail = _this.sales_detail;
                _this.juniourDetail(_this.juniorUserDetail);
                console.log(_this.juniorUserDetail);
                console.log(_this.salesdata);
                for (var i = 0; i < _this.rolelistsales1.length; i++) {
                    if (_this.rolelistsales1[i].roleId == _this.salesdata.role) {
                        _this.salesdata.roleName = _this.rolelistsales1[i]['roleName'];
                    }
                }
                if (_this.salesdata.role != 10) {
                    console.log("get_juniorUserID function call");
                    //   this.get_juniorUserID();
                }
            }
            _this.segment_list();
        });
    };
    SaleUserDetailComponent.prototype.editAssign = function () {
        this.editAssignedDiv = true;
    };
    SaleUserDetailComponent.prototype.segment_list = function () {
        var _this = this;
        console.log('Exist it');
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            console.log(_this.salesdata.staffSegments);
            if (response['status'] == 'Success') {
                _this.segmentlist = response['data'];
                console.log(_this.segmentlist);
                var _loop_1 = function (i) {
                    var isSegmentExist = _this.salesdata.staffSegments.findIndex(function (row) { return row.segment == _this.segmentlist[i].value; });
                    if (isSegmentExist !== -1) {
                        _this.segmentlist[i].checked = true;
                    }
                };
                for (var i = 0; i < _this.segmentlist.length; i++) {
                    _loop_1(i);
                }
            }
        });
    };
    SaleUserDetailComponent.prototype.getSegmentRelatedData = function () {
        this.get_juniorUserID();
        this.get_territory();
    };
    SaleUserDetailComponent.prototype.get_territory = function () {
        var _this = this;
        var segmentSelectedArr = [];
        for (var i = 0; i < this.segmentlist.length; i++) {
            if (this.segmentlist[i].checked) {
                segmentSelectedArr.push(this.segmentlist[i].value);
            }
        }
        if (segmentSelectedArr.length > 0) {
            this.loader = true;
            this.db.fetchData({ 'segments': segmentSelectedArr }, 'territory/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.territorylist = response['data'];
                    console.log(_this.territorylist);
                    console.log(_this.TotalTerritoy);
                    _this.distributionList = [];
                    var _loop_2 = function (i) {
                        console.log(_this.territorylist[i]);
                        var territoryExist = _this.TotalTerritoy.findIndex(function (row) { return row.territoryId == _this.territorylist[i].territoryID; });
                        if (territoryExist !== -1) {
                            _this.territorylist[i].check1 = true;
                            _this.territorylist[i].disabled = _this.TotalTerritoy[territoryExist].disabled;
                            _this.loader = true;
                            _this.db.fileData('', 'territory/detail/' + _this.territorylist[i].territoryID).subscribe(function (responseData) {
                                console.log(responseData);
                                _this.loader = false;
                                _this.territorylistdata = responseData['data'];
                                var _loop_5 = function (j) {
                                    console.log(_this.territorylistdata.territoryNetworks[j]);
                                    _this.territorylistdata.territoryNetworks[j].territoryName = _this.territorylistdata.territoryName;
                                    var isSelectedIndex = _this.TotalDistributor.findIndex(function (row) { return row.networkId == _this.territorylistdata.territoryNetworks[j].networkId; });
                                    console.log(_this.TotalDistributor);
                                    if (isSelectedIndex != -1) {
                                        _this.territorylistdata.territoryNetworks[j].checked = true;
                                        _this.territorylistdata.territoryNetworks[j].disabled = _this.TotalDistributor[isSelectedIndex].disabled;
                                    }
                                    else {
                                        _this.territorylistdata.territoryNetworks[j].checked = false;
                                    }
                                    console.log(_this.territorylistdata.territoryNetworks[j]);
                                    _this.distributionList.push(_this.territorylistdata.territoryNetworks[j]);
                                };
                                for (var j = 0; j < _this.territorylistdata.territoryNetworks.length; j++) {
                                    _loop_5(j);
                                }
                                console.log(_this.distributionList);
                            });
                        }
                    };
                    for (var i = 0; i < _this.territorylist.length; i++) {
                        _loop_2(i);
                    }
                    var _loop_3 = function (index) {
                        var recordExist = _this.TotalDistributor.findIndex(function (row) { return row.networkId == _this.distributionList[index].networkId; });
                        if (recordExist !== -1) {
                            _this.distributionList[index].checked = true;
                            _this.distributionList[index].disabled = _this.TotalDistributor[recordExist].disabled;
                        }
                    };
                    for (var index = 0; index < _this.distributionList.length; index++) {
                        _loop_3(index);
                    }
                    console.log(_this.distributionList);
                    var userTempArr = [];
                    if (_this.salesdata.role == 6) {
                        userTempArr = _this.TotalRSM;
                    }
                    else if (_this.salesdata.role == 7) {
                        userTempArr = _this.TotalASM;
                    }
                    else if (_this.salesdata.role == 8) {
                        userTempArr = _this.TotalTI;
                    }
                    var _loop_4 = function (i) {
                        var isExist = userTempArr.findIndex(function (row) { return row.userId == _this.juniorList[i].userId; });
                        if (isExist != -1) {
                            _this.juniorList[i].check = true;
                        }
                    };
                    for (var i = 0; i < _this.juniorList.length; i++) {
                        _loop_4(i);
                    }
                }
            });
        }
        else {
            this.juniorList = [];
            this.territorylist = [];
            this.distributionList = [];
        }
    };
    SaleUserDetailComponent.prototype.get_juniorUserID = function () {
        var _this = this;
        if (this.salesdata.role == 8) {
            this.userRole = parseInt(this.salesdata.role) + 2;
        }
        else {
            this.userRole = parseInt(this.salesdata.role) + 1;
        }
        var juniorSelectedArr = [];
        if (this.salesdata.role == 8) {
            juniorSelectedArr = this.TotalTI;
        }
        else if (this.salesdata.role == 7) {
            juniorSelectedArr = this.TotalASM;
        }
        else if (this.salesdata.role == 6) {
            juniorSelectedArr = this.TotalRSM;
        }
        console.log(juniorSelectedArr);
        var segmentSelected = [];
        for (var index = 0; index < this.segmentlist.length; index++) {
            if (this.segmentlist[index].checked) {
                segmentSelected.push(this.segmentlist[index].text);
            }
        }
        console.log(segmentSelected);
        if (segmentSelected.length > 0) {
            console.log(this.role);
            this.loader = true;
            this.db.fetchData({ 'role': this.userRole, 'segments': segmentSelected, 'currentPage': 1, 'pageSize': 200, }, 'user/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (response['status'] == 'Success') {
                    _this.juniorList = response['data'];
                    console.log(juniorSelectedArr);
                    for (var i = 0; i < juniorSelectedArr.length; i++) {
                        for (var j = 0; j < _this.juniorList.length; j++) {
                            if (juniorSelectedArr[i]['userId'] === _this.juniorList[j]['userId']) {
                                _this.juniorList[j].check = true;
                            }
                        }
                    }
                }
                console.log(_this.juniorList);
            });
        }
        else {
            this.juniorList = [];
        }
    };
    SaleUserDetailComponent.prototype.juniourDetail = function (juniorList) {
        // this. get_territory()
        for (var i = 0; i < juniorList.salesUserNetworks.length; i++) {
            juniorList.salesUserNetworks[i].disabled = false;
            this.TotalDistributor = this.TotalDistributor.concat(juniorList.salesUserNetworks[i]);
            console.log(this.TotalDistributor);
        }
        for (var j = 0; j < juniorList.userTerritories.length; j++) {
            juniorList.userTerritories[j].disabled = false;
            this.TotalTerritoy = this.TotalTerritoy.concat(juniorList.userTerritories[j]);
            console.log(this.TotalTerritoy);
        }
        if (this.salesdata.role == 8) {
            console.log("role 8");
            var _loop_6 = function (i) {
                console.log(juniorList.juniors[i].userId);
                if (juniorList.juniors[i].userId && juniorList.juniors[i].userName) {
                    this_1.TotalTI = this_1.TotalTI.concat(juniorList.juniors[i]);
                    var _loop_9 = function (j) {
                        var existIndex = this_1.TotalDistributor.findIndex(function (row) { return row.establishment == juniorList.juniors[i].salesUserNetworks[j].establishment; });
                        if (existIndex == -1) {
                            juniorList.juniors[i].salesUserNetworks[j].disabled = true;
                            this_1.TotalDistributor = this_1.TotalDistributor.concat(juniorList.juniors[i].salesUserNetworks[j]);
                        }
                    };
                    for (var j = 0; j < juniorList.juniors[i].salesUserNetworks.length; j++) {
                        _loop_9(j);
                    }
                    var _loop_10 = function (j) {
                        var existIndex = this_1.TotalTerritoy.findIndex(function (row) { return row.territoryId == juniorList.juniors[i].userTerritories[j].territoryId; });
                        if (existIndex == -1) {
                            juniorList.juniors[i].userTerritories[j].disabled = true;
                            this_1.TotalTerritoy = this_1.TotalTerritoy.concat(juniorList.juniors[i].userTerritories[j]);
                        }
                    };
                    for (var j = 0; j < juniorList.juniors[i].userTerritories.length; j++) {
                        _loop_10(j);
                    }
                }
                console.log(this_1.TotalTerritoy);
            };
            var this_1 = this;
            for (var i = 0; i < juniorList.juniors.length; i++) {
                _loop_6(i);
            }
        }
        if (this.salesdata.role == 7) {
            console.log("role 7");
            var _loop_7 = function (i) {
                if (juniorList.juniors[i].userId && juniorList.juniors[i].userName) {
                    this_2.TotalASM = this_2.TotalASM.concat(juniorList.juniors[i]);
                    console.log(this_2.TotalASM);
                    var _loop_11 = function (j) {
                        if (juniorList.juniors[i].juniors[j].userId && juniorList.juniors[i].juniors[j].userName) {
                            var asmIndex = this_2.TotalTI.findIndex(function (row) { return row.userName == juniorList.juniors[i].juniors[j].userName; });
                            if (asmIndex == -1) {
                                this_2.TotalTI = this_2.TotalTI.concat(juniorList.juniors[i].juniors[j]);
                            }
                            var _loop_12 = function (k) {
                                var existIndex = this_2.TotalDistributor.findIndex(function (row) { return row.establishment == juniorList.juniors[i].juniors[j].salesUserNetworks[k].establishment; });
                                if (existIndex == -1) {
                                    juniorList.juniors[i].juniors[j].salesUserNetworks[k].disabled = true;
                                    this_2.TotalDistributor = this_2.TotalDistributor.concat(juniorList.juniors[i].juniors[j].salesUserNetworks[k]);
                                }
                            };
                            for (var k = 0; k < juniorList.juniors[i].juniors[j].salesUserNetworks.length; k++) {
                                _loop_12(k);
                            }
                            var _loop_13 = function (l) {
                                console.log("territory");
                                var TiIndex = this_2.TotalTerritoy.findIndex(function (row) { return row.territoryName == juniorList.juniors[i].juniors[j].userTerritories[l].territoryName; });
                                if (TiIndex == -1) {
                                    juniorList.juniors[i].juniors[j].userTerritories[l].disabled = true;
                                    this_2.TotalTerritoy = this_2.TotalTerritoy.concat(juniorList.juniors[i].juniors[j].userTerritories[l]);
                                }
                            };
                            for (var l = 0; l < juniorList.juniors[i].juniors[j].userTerritories.length; l++) {
                                _loop_13(l);
                            }
                        }
                    };
                    for (var j = 0; j < juniorList.juniors[i].juniors.length; j++) {
                        _loop_11(j);
                    }
                }
            };
            var this_2 = this;
            for (var i = 0; i < juniorList.juniors.length; i++) {
                _loop_7(i);
            }
        }
        console.log(juniorList);
        if (this.salesdata.role == 6) {
            console.log("role 6");
            var _loop_8 = function (i) {
                if (juniorList.juniors[i].userId && juniorList.juniors[i].userName) {
                    this_3.TotalRSM = this_3.TotalRSM.concat(juniorList.juniors[i]);
                    console.log(this_3.TotalRSM);
                    var _loop_14 = function (a) {
                        if (juniorList.juniors[i].juniors[a].userId && juniorList.juniors[i].juniors[a].userName) {
                            var asmIndex = this_3.TotalASM.findIndex(function (row) { return row.userName == juniorList.juniors[i].juniors[a].userName; });
                            if (asmIndex == -1) {
                                this_3.TotalASM = this_3.TotalASM.concat(juniorList.juniors[i].juniors[a]);
                            }
                            var _loop_15 = function (j) {
                                if (juniorList.juniors[i].juniors[a].juniors[j].userId && juniorList.juniors[i].juniors[a].juniors[j].userName) {
                                    var tiIndex = this_3.TotalTI.findIndex(function (row) { return row.userName == juniorList.juniors[i].juniors[a].juniors[j].userName; });
                                    if (tiIndex == -1) {
                                        this_3.TotalTI = this_3.TotalTI.concat(juniorList.juniors[i].juniors[a].juniors[j]);
                                    }
                                    var _loop_16 = function (k) {
                                        var existIndex = this_3.TotalDistributor.findIndex(function (row) { return row.establishment == juniorList.juniors[i].juniors[a].juniors[j].salesUserNetworks[k].establishment; });
                                        if (existIndex == -1) {
                                            juniorList.juniors[i].juniors[a].juniors[j].salesUserNetworks[k].disabled = true;
                                            this_3.TotalDistributor = this_3.TotalDistributor.concat(juniorList.juniors[i].juniors[a].juniors[j].salesUserNetworks[k]);
                                        }
                                    };
                                    for (var k = 0; k < juniorList.juniors[i].juniors[a].juniors[j].salesUserNetworks.length; k++) {
                                        _loop_16(k);
                                    }
                                    var _loop_17 = function (l) {
                                        console.log("territory");
                                        var TiIndex = this_3.TotalTerritoy.findIndex(function (row) { return row.territoryName == juniorList.juniors[i].juniors[a].juniors[j].userTerritories[l].territoryName; });
                                        if (TiIndex == -1) {
                                            juniorList.juniors[i].juniors[a].juniors[j].userTerritories[l].disabled = true;
                                            this_3.TotalTerritoy = this_3.TotalTerritoy.concat(juniorList.juniors[i].juniors[a].juniors[j].userTerritories[l]);
                                        }
                                    };
                                    for (var l = 0; l < juniorList.juniors[i].juniors[a].juniors[j].userTerritories.length; l++) {
                                        _loop_17(l);
                                    }
                                }
                            };
                            for (var j = 0; j < juniorList.juniors[i].juniors[a].juniors.length; j++) {
                                _loop_15(j);
                            }
                        }
                    };
                    for (var a = 0; a < juniorList.juniors[i].juniors.length; a++) {
                        _loop_14(a);
                    }
                }
            };
            var this_3 = this;
            for (var i = 0; i < juniorList.juniors.length; i++) {
                _loop_8(i);
            }
        }
    };
    SaleUserDetailComponent.prototype.select_segment = function (value, index, event) {
        if (event.checked) {
            this.segment.push(value);
            console.log(this.segment);
        }
        else {
            console.log(index);
            console.log(this.segment[0]);
            for (var j = 0; j < this.segmentlist.length; j++) {
                if (this.segmentlist[index]['value'] == this.segment[j]) {
                    this.segment.splice(j, 1);
                }
            }
            console.log(this.segment);
        }
    };
    SaleUserDetailComponent.prototype.select_territory = function (territoryId, isChecked, src) {
        var _this = this;
        console.log(territoryId, isChecked);
        console.log('Select Territory Clicked');
        if (isChecked) {
            console.log(this.territorylist);
            // this.territory.push(value1);
            // console.log(this.territory);
            var territoryArr = [];
            if (src == 'territory') {
                territoryArr = [territoryId];
                this.loader = true;
                this.db.fileData('', 'territory/detail/' + territoryId).subscribe(function (response) {
                    console.log(response);
                    _this.loader = false;
                    _this.territorylistdata = response;
                    if (_this.territorylistdata.data['territoryNetworks']) {
                        for (var index = 0; index < _this.territorylistdata.data['territoryNetworks'].length; index++) {
                            _this.territorylistdata.data['territoryNetworks'][index]['territoryName'] = _this.territorylistdata.data['territoryName'];
                            _this.distributionList.push(_this.territorylistdata.data['territoryNetworks'][index]);
                        }
                        console.log(_this.distributionList);
                    }
                });
            }
            if (src == 'junior') {
                console.log(this.territorylist);
                var _loop_18 = function (index) {
                    console.log(territoryId);
                    var isExist = territoryId.findIndex(function (row) { return row.territoryId == _this.territorylist[index].territoryID; });
                    if (isExist != -1) {
                        this_4.territorylist[index].check1 = true;
                    }
                };
                var this_4 = this;
                for (var index = 0; index < this.territorylist.length; index++) {
                    _loop_18(index);
                }
            }
        }
        else {
            if (src == 'territory') {
                this.distributionList = this.distributionList.filter(function (row) { return row.territoryId != territoryId; });
                console.log(this.distributionList);
            }
        }
    };
    SaleUserDetailComponent.prototype.updateSalesUser = function () {
        var _this = this;
        var updatedSalesArr = {};
        updatedSalesArr['userId'] = this.salesdata.userId;
        var segmentSelected = [];
        for (var i = 0; i < this.segmentlist.length; i++) {
            if (this.segmentlist[i].checked) {
                segmentSelected.push({ 'userId': this.salesdata.userId, 'segmentCode': this.segmentlist[i].value, 'segment': this.segmentlist[i].value });
            }
        }
        var territorySelected = [];
        for (var index = 0; index < this.territorylist.length; index++) {
            if (this.territorylist[index].check1 && !this.territorylist[index].disabled) {
                territorySelected.push(this.territorylist[index]['territoryID']);
            }
        }
        var networkSelected = [];
        for (var index = 0; index < this.distributionList.length; index++) {
            if (this.distributionList[index].checked && !this.distributionList[index].disabled) {
                networkSelected.push({ networkId: this.distributionList[index]['networkId'], territoryId: this.distributionList[index]['territoryId'] });
            }
        }
        updatedSalesArr['networks'] = networkSelected;
        if (this.salesdata.role == '8' || this.salesdata.role == '7' || this.salesdata.role == '6') {
            var salesHierarchies = [];
            for (var index = 0; index < this.juniorList.length; index++) {
                if (this.juniorList[index].check) {
                    salesHierarchies.push({ juniorUserID: this.juniorList[index].userId });
                }
            }
            updatedSalesArr['saleHierarchies'] = salesHierarchies;
        }
        if (this.salesdata.role != '6') {
            updatedSalesArr['territories'] = territorySelected;
        }
        updatedSalesArr['staffSegments'] = segmentSelected;
        console.log(updatedSalesArr);
        this.loader = true;
        updatedSalesArr['staffSegmentsModified'] = true;
        updatedSalesArr['salesHeirarchyModified'] = true;
        updatedSalesArr['territoriesModified'] = true;
        updatedSalesArr['networksModified'] = true;
        this.db.fetchData(updatedSalesArr, 'user/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            _this.editAssignedDiv = false;
            if (_this.message == "User updated successfully") {
                _this.toast.openSucess('Updated successfully', '');
                _this.staffSegments = [];
                _this.salesuserdetail();
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
    };
    SaleUserDetailComponent.prototype.updateTerritory = function () {
        var _this = this;
        this.salesdata.territories = this.territory;
        this.salesdata.landline = "9050801272";
        this.salesdata.country = "string";
        this.db.fetchData(this.salesdata, 'user/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "User updated successfully") {
                _this.toast.openSucess('Updated successfully', '');
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
    };
    SaleUserDetailComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    SaleUserDetailComponent.prototype.openDialog = function () {
        var _this = this;
        var dialogRef = this.dialog.open(_address_modal_address_modal_component__WEBPACK_IMPORTED_MODULE_6__["AddressModalComponent"], { width: '768px', data: this.salesdata });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.salesuserdetail();
        });
    };
    SaleUserDetailComponent.prototype.openEmail = function (check) {
        var _this = this;
        this.salesdata.type = check;
        console.log(check);
        var dialogRef = this.dialog.open(_email_modal_email_modal_component__WEBPACK_IMPORTED_MODULE_7__["EmailModalComponent"], { width: '520px', data: this.salesdata });
        dialogRef.afterClosed().subscribe(function (result) {
            _this.salesuserdetail();
        });
    };
    SaleUserDetailComponent.prototype.updatepassword = function () {
        var _this = this;
        console.log('pass');
        this.db.fetchData({ "userId": this.id, "password": this.account_form.password }, 'account/changepassword')
            .subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            console.log(_this.message);
            if (_this.message == "Your password has been changed successfully!") {
                _this.toast.openSucess('Your password has been changed successfully!', '');
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
        });
    };
    SaleUserDetailComponent.prototype.lead_list = function () {
        var _this = this;
        this.loader = true;
        this.senddata = { "userId": this.id, "currentPage": 1, "pageSize": 50, 'status': '2', 'leadType': 12, 'isActive': true };
        this.db.fetchData(this.senddata, 'lead/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.leadlist = response['data'];
            for (var index = 0; index < _this.leadlist.length; index++) {
                var segmentStr = '';
                for (var index1 = 0; index1 < _this.leadlist[index]['leadSegments'].length; index1++) {
                    if (index1 == 0) {
                        segmentStr = _this.leadlist[index]['leadSegments'][index1].segment;
                    }
                    else {
                        segmentStr += ', ' + _this.leadlist[index]['leadSegments'][index1].segment;
                    }
                }
                _this.leadlist[index].segmentStr = segmentStr;
            }
        });
    };
    SaleUserDetailComponent.prototype.getOrderList = function () {
        var _this = this;
        this.loader = true;
        var senddata = { "userId": this.id, "currentPage": 1, "pageSize": 50 };
        this.db.fetchData(senddata, 'order/list').subscribe(function (response) {
            console.log(response);
            // this.orderActive=true;
            _this.orderList = response['data'];
            _this.loader = false;
        });
    };
    SaleUserDetailComponent.prototype.getTravelList = function () {
        var _this = this;
        this.loader = true;
        var monthArr = [{ monthId: 1, monthName: 'January' },
            { monthId: 2, monthName: 'February' },
            { monthId: 3, monthName: 'March' },
            { monthId: 4, monthName: 'April' },
            { monthId: 5, monthName: 'May' },
            { monthId: 6, monthName: 'June' },
            { monthId: 7, monthName: 'July' },
            { monthId: 8, monthName: 'Augest' },
            { monthId: 9, monthName: 'September' },
            { monthId: 10, monthName: 'October' },
            { monthId: 11, monthName: 'November' },
            { monthId: 12, monthName: 'December' }];
        this.db.fetchData({ "userId": this.id, "currentPage": 1, "pageSize": 50 }, "travelplan/list").subscribe(function (result) {
            console.log(result);
            _this.trvelPlanLIst = result['data'];
            var _loop_19 = function (index) {
                var indexExist = monthArr.findIndex(function (row) { return row.monthId == _this.trvelPlanLIst[index].month; });
                _this.trvelPlanLIst[index].monthName = monthArr[indexExist].monthName;
            };
            for (var index = 0; index < _this.trvelPlanLIst.length; index++) {
                _loop_19(index);
            }
            setTimeout(function () {
                _this.loader = false;
            }, 700);
        });
    };
    SaleUserDetailComponent.prototype.getExpenseList = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ "userId": this.id, "currentPage": 1, "pageSize": 50 }, "expense/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            _this.expenseList = result['data'];
        });
    };
    SaleUserDetailComponent.prototype.orderDetail = function (index) {
        if (this.orderList[index].dealerStatus == 1) {
            console.log("router work");
            this.router.navigate(['edit-order/' + this.orderList[index].orderId]);
        }
        if (this.orderList[index].dealerStatus == 2 || this.orderList[index].dealerStatus == 3) {
            this.router.navigate(['order-detail/' + this.orderList[index].orderId]);
        }
    };
    ;
    SaleUserDetailComponent.prototype.getCheckinList = function () {
        var _this = this;
        this.loader = true;
        var requesData = { "userId": this.id, "currentPage": 1,
            "pageSize": 500 };
        this.db.fetchData(requesData, 'activity/list').subscribe(function (response) {
            console.log(response);
            _this.checkInList = response['data'];
            _this.loader = false;
        });
    };
    SaleUserDetailComponent.prototype.getConcernList = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ "currentPage": 1,
            "pageSize": 500, concernStatuses: [3, 4, 5, 6], createdBy: this.id }, 'concern/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.concernList = response['data'];
            for (var index = 0; index < _this.concernList.length; index++) {
                var totalQty = 0;
                var totalAmount = 0;
                for (var index1 = 0; index1 < _this.concernList[index]['productConcerns'].length; index1++) {
                    if (_this.concernList[index]['productConcerns'][index1].qunatity) {
                        totalQty += _this.concernList[index]['productConcerns'][index1].qunatity;
                    }
                    totalAmount += _this.concernList[index]['productConcerns'][index1].netAmount;
                }
                _this.concernList[index].totalQty = totalQty;
                _this.concernList[index].totalAmount = totalAmount;
            }
            if (response['status'] == 'Failed') {
                // this.div=true;
                // this.concernList=[];
                // this.tmp_concern=this.concernList
            }
            console.log(_this.concernList);
            console.log(_this.tmp_concern);
        });
    };
    SaleUserDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-sale-user-detail',
            template: __webpack_require__(/*! ./sale-user-detail.component.html */ "./src/app/user/sale-user-detail/sale-user-detail.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _local_storage_service__WEBPACK_IMPORTED_MODULE_9__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], src_app_toast__WEBPACK_IMPORTED_MODULE_8__["SnackBarOverview"]])
    ], SaleUserDetailComponent);
    return SaleUserDetailComponent;
}());



/***/ }),

/***/ "./src/app/user/sale-user-list/sale-user-list.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/user/sale-user-list/sale-user-list.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/user.svg\" class=\"h-icon\">\n      <div class=\"heading-text w250\">\n        <h2>Users</h2>\n        <p>Total User {{users.length}}</p>\n      </div>\n    </div>\n    <div  *ngIf=\"filter.name || filter.role || filter.mobileno ||filter.email\" class=\"filter-container left-auto\">\n      <div (click)=\"clearfilter()\" class=\"filter-btn\">\n        <button mat-button >CLEAR FILTER</button>\n      </div>\n    </div>\n    <div class=\"tabs left-auto\">\n      <ul>\n        <li><a routerLink=\"/sale-user-list\" routerLinkActive=\"active\">SALES USERS</a></li>\n        <li><a routerLink=\"/system-user-list\" routerLinkActive=\"active\">SYSTEM USERS</a></li>\n      </ul>\n    </div>\n   \n  </div>\n  \n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n            <div class=\"table-head\">\n              <table>\n                <tr>\n                  <th class=\"w110\">Date</th>\n                  <th class=\"w170\">Role</th>\n                  <th class=\"w230\">Name</th>\n                  <th class=\"w130\">Mobile</th>\n                  <th class=\"w130\">Territories</th>\n                  <th>Target</th>\n                  <th class=\"w200\">Account Status</th>\n                </tr>\n              </table>\n            </div>\n            <div class=\"table-head bdrt\">\n              <form>\n                <table>\n                  <tr>\n                    <th class=\"w110\"> </th>\n                    <th class=\"w170\">\n                      <div class=\"th-search\">\n                        <select #role=\"ngModel\" name=\"role\" [(ngModel)]=\"filter.role\" (change)=\"userList()\">\n                          <option value=\"\" selected>Select</option>\n                          <option value=\"{{list.roleId}}\" *ngFor=\"let list of rolelistsales1\">{{list.roleName}}</option>\n                        </select>\n                      </div>\n                    </th>\n                    <th class=\"w230\">\n                      <div class=\"th-search\">\n                        <input type=\"text\"  (keyup)=\"userList()\" name=\"name\" #companyname=\"ngModel\" [(ngModel)]=\"filter.name\" placeholder=\"Search....\">\n                        <!-- <i class=\"material-icons search-icon\">search</i> -->\n                      </div>\n                    </th>\n                    <th class=\"w130\">\n                      <div class=\"th-search\">\n                        <input type=\"text\"  (keyup)=\"userList()\" name=\"mobileno\" #companyname=\"ngModel\" [(ngModel)]=\"filter.mobileno\" placeholder=\"Search....\">\n                        <!-- <i class=\"material-icons search-icon\">search</i> -->\n                      </div>\n                    </th>\n\n                    <th class=\"w130\">\n                      &nbsp;\n                      \n                    </th>\n\n                     <th>\n                       &nbsp;\n                     </th>\n\n                    <th class=\"w200\">&nbsp;</th>\n\n                  </tr>\n                </table>\n              </form>\n            </div>\n          </div>\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table>\n                  <tr *ngFor=\"let salesuser of users\">\n\n                    <td class=\"w110\">{{ salesuser.createdOn|date:'d MMM y'}}</td>\n                    <td class=\"w170\">{{ salesuser.role_name}}</td>\n                    <td class=\"w230\"><a class=\"link-btn\" routerLink=\"/sale-user-detail/{{salesuser.userId}}\" routerLinkActive=\"active\" mat-button>{{ salesuser.userName}}</a></td>\n                    <td class=\"w130\">{{ salesuser.mobile}}</td>\n                    \n                    <td class=\"w130\">\n                       <span *ngFor=\"let list of salesuser.userTerritories\">{{list.territoryName}}</span>\n                    </td>\n\n                    <td>&#8377; {{salesuser.totalTarget}}</td>\n\n                      <td class=\"w200\">\n\n                          <mat-slide-toggle class=\"right-toggle\" [checked]=\"salesuser.isActive\"  (change)=\"accountHandler(salesuser.userId, $event)\" ></mat-slide-toggle>\n                             \n                          <!-- <div class=\"action-btns\">\n                            <button mat-button class=\"delete\" (click)=\"deleteUser(salesuser.userId)\"><i class=\"material-icons\">delete_sweep</i> Delete</button>\n                          </div> -->\n\n                      </td>\n\n                    </tr>\n                </table>\n                </div>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"div\" class=\"data-not-available\" >\n        <div class=\"outer\">\n          <div class=\"iinear\">\n            <div class=\"figure\" matRipple>\n              <div class=\"header\">\n                <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n              </div>\n              <div class=\"description\">\n\n                <div class=\"img\">\n                    <i class=\"material-icons\">error_outline</i>\n                </div>\n                  \n                <div class=\"cs-heading\">\n                  <h2>Data Not Available</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"fixed-multibtn-botm\">\n      <ul>\n        <li><a  matTooltip=\"Add New\" routerLink=\"/user-add\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n      </ul>\n    </div>\n  </div>"

/***/ }),

/***/ "./src/app/user/sale-user-list/sale-user-list.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/user/sale-user-list/sale-user-list.component.ts ***!
  \*****************************************************************/
/*! exports provided: SaleUserListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaleUserListComponent", function() { return SaleUserListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");






var SaleUserListComponent = /** @class */ (function () {
    function SaleUserListComponent(db, dialog, toast) {
        this.db = db;
        this.dialog = dialog;
        this.toast = toast;
        this.userlist = [];
        this.users = [];
        this.rolelists = [];
        this.rolelistsales1 = [];
        this.filter = {};
        this.div = false;
        this.userList();
    }
    SaleUserListComponent.prototype.ngOnInit = function () {
    };
    SaleUserListComponent.prototype.clearfilter = function () {
        this.filter = {};
        this.userList();
    };
    SaleUserListComponent.prototype.deleteUser = function (id) {
        var _this = this;
        this.dialog.delete('Sales User  !').then(function (result) {
            if (result) {
                console.log(id);
                _this.db.fileData("", "user/delete/" + id).subscribe(function (result) {
                    console.log(result);
                    if (result['status'] == "Success") {
                        _this.userList();
                    }
                });
            }
        });
    };
    SaleUserListComponent.prototype.rolelist = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.rolelists = response['data'];
            var filterrolesystem = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.rolelistsales1 = filterrolesystem[0].roles;
            console.log(_this.rolelistsales1);
            var _loop_1 = function (i) {
                var systemIndex = _this.rolelistsales1.findIndex(function (x) { return x.roleId == _this.users[i].role; });
                console.log(systemIndex);
                if (systemIndex != -1) {
                    _this.users[i].role_name = _this.rolelistsales1[systemIndex].roleName;
                    console.log(_this.users[i].role_name);
                }
            };
            for (var i = 0; i < _this.users.length; i++) {
                _loop_1(i);
            }
        });
    };
    SaleUserListComponent.prototype.userList = function () {
        var _this = this;
        this.loader = true;
        var selectedObject = { 'userType': 2, 'currentPage': 1,
            'pageSize': 200 };
        if (this.filter.name) {
            selectedObject['userName'] = this.filter.name;
        }
        if (this.filter.mobileno) {
            selectedObject['mobile'] = this.filter.mobileno;
        }
        if (this.filter.email) {
            selectedObject['email'] = this.filter.email;
        }
        if (this.filter.role) {
            selectedObject['role'] = this.filter.role;
        }
        this.db.fetchData(selectedObject, 'user/list').subscribe(function (response) {
            console.log(response);
            if (response['status'] == 'Success') {
                _this.rolelist();
                _this.userlist = response;
                _this.users = _this.userlist.data;
            }
            else {
                _this.div = true;
                _this.userlist = [];
                _this.users = [];
            }
            _this.loader = false;
            // console.log(this.users[25].userTerritories[0]);
        });
    };
    SaleUserListComponent.prototype.accountHandler = function (userId, event) {
        var _this = this;
        this.loader = true;
        console.log(event.checked);
        this.db.fileData("", "user/delete/" + userId + '/' + event.checked).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            _this.toast.openSucess('Account Updated Successfully!', '');
        });
    };
    SaleUserListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-sale-user-list',
            template: __webpack_require__(/*! ./sale-user-list.component.html */ "./src/app/user/sale-user-list/sale-user-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], src_app_dialog__WEBPACK_IMPORTED_MODULE_4__["DialogComponent"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"]])
    ], SaleUserListComponent);
    return SaleUserListComponent;
}());



/***/ }),

/***/ "./src/app/user/system-modal/system-modal.component.html":
/*!***************************************************************!*\
  !*** ./src/app/user/system-modal/system-modal.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<div   *ngIf=\"system_data.type=='address'\"  class=\"edit-modal\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div mat-dialog-content>\n  <p class=\"heading\">Update Address</p>\n  <div class=\"from-fields\">\n    <div class=\"col s12\">          \n    <div class=\"row\">\n      <div class=\"col s4 pl0\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <mat-select placeholder=\"State\" name=\"state\" [(ngModel)]=\"system_data.state\" >\n                  <mat-option (click)=\"get_district()\"  *ngFor=\"let state of statelist\" value=\"{{state}}\">{{state}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n      </div>\n      <div class=\"col s4 \">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <mat-select placeholder=\"District\"   name=\"district\" [(ngModel)]=\"system_data.district\" >\n                  <mat-option (click)=\"get_city()\"  *ngFor=\"let district of district1\" value=\"{{district.districtName}}\">{{district.districtName}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n      </div>\n      <div class=\"col s4 pr0\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\">\n                <mat-select placeholder=\"City\"  name=\"city\" [(ngModel)]=\"system_data.city\" >\n                  <mat-option   *ngFor=\"let city of cities\" value=\"{{city.cityName}}\">{{city.cityName}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n      </div>\n    </div>\n    \n    <div class=\"row mb20\">\n      <div class=\"col s8 pl0\">\n          <div class=\"control-field\">\n              <mat-form-field class=\"cs-input\" >\n                <textarea matInput placeholder=\"Address\" name=\"street\" [(ngModel)]=\"system_data.street\" class=\"h45\"></textarea>\n              </mat-form-field>\n            </div>\n      </div>\n      <div class=\"col s4 empty\"></div>\n    </div>\n    </div>\n  </div>\n  </div>\n  <div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\n  <button mat-button (click)=\"update_salesuser()\">Save</button>\n  </div>\n</div>\n  <!-- Email &&&& Mobile Dialog -->\n  <div *ngIf=\"data.type=='email' || data.type=='mobile'\" class=\"edit-modal\">\n      <form name=\"form\" (ngSubmit)=\"f.form.valid && updateMobileEmail()\"  #f=\"ngForm\" novalidate>\n      <div *ngIf=\"loader\"> \n              <mat-spinner class=\"loader\"></mat-spinner> \n      </div>\n  <div *ngIf=\"data.type=='email'\" mat-dialog-content>\n      <p class=\"heading\">Update Email</p>\n      <mat-form-field class=\"example-full-width cs-field\">\n         <!-- <input matInput placeholder=\"Email\" value=\"email\" [(ngModel)]=\"data.email\"> -->\n         <input matInput placeholder=\"Email-ID\" name=\"email\" value=\"email\" [(ngModel)]=\"data.email\" #email=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n      </mat-form-field>\n      <div class=\"alert alert-danger\" *ngIf=\"!email.valid && email.touched\">\n          Please Enter Valid Email....\n        </div>\n  </div>\n  <div *ngIf=\"data.type=='mobile'\" mat-dialog-content>\n       <p class=\"heading\">Update Mobile</p>\n       <mat-form-field class=\"example-full-width cs-field\">\n          <input matInput type=\"text\"  maxlength=\"10\" type=text  placeholder=\"Mobile\" name=\"mobile\"   value=\"mobile\" [(ngModel)]=\"data.mobile\" minlength=\"10\" maxlength=\"10\" min=\"0\" #mobile=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && mobile.invalid }\" (keypress)=\"MobileNumber($event)\" required>\n          <!-- <input matInput placeholder=\"Mobile\" value=\"mobile\" [(ngModel)]=\"data.mobile\"> -->\n      </mat-form-field>\n      <div class=\"alert alert-danger\" *ngIf=\"!mobile.valid && mobile.touched\">\n        Please Enter Valid Mobile....\n    </div>\n  </div>\n  <div mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"false\">Cancel</button>\n  <button mat-button>Save</button>\n  </div>\n </form>\n  </div>"

/***/ }),

/***/ "./src/app/user/system-modal/system-modal.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/user/system-modal/system-modal.component.ts ***!
  \*************************************************************/
/*! exports provided: SystemModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemModalComponent", function() { return SystemModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");






var SystemModalComponent = /** @class */ (function () {
    function SystemModalComponent(toast, router, dialogRef, data, db) {
        this.toast = toast;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.system_data = {};
        this.statelist = [];
        this.districtlist = [];
        this.st = [];
        this.district1 = [];
        this.citylist = [];
        this.cities = [];
        this.districts1 = [];
        this.system_data = this.data;
        console.log(this.system_data);
        this.get_state();
        this.get_district();
        this.get_city();
    }
    SystemModalComponent.prototype.ngOnInit = function () {
    };
    SystemModalComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    SystemModalComponent.prototype.get_state = function () {
        var _this = this;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.statelist = response['data'];
            console.log(_this.statelist);
            _this.get_district();
        });
    };
    SystemModalComponent.prototype.get_district = function () {
        var _this = this;
        console.log(this.system_data.state);
        this.st = Array(this.system_data.state);
        this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
            console.log(response);
            _this.districtlist = response['data'];
            _this.district1 = _this.districtlist[0].distrcits;
        });
        this.get_city();
    };
    SystemModalComponent.prototype.get_city = function () {
        var _this = this;
        console.log(this.system_data.state, this.system_data.district);
        console.log(this.system_data.district);
        this.db.fetchData(Array({ "stateName": this.system_data.state, "distrcits": Array({ "districtName": this.system_data.district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.citylist = response['data'];
            _this.districts1 = _this.citylist[0].distrcits;
            _this.cities = _this.districts1[0].cities;
            console.log(_this.cities);
        });
    };
    SystemModalComponent.prototype.updateMobileEmail = function () {
        var _this = this;
        this.loader = true;
        console.log(this.data);
        this.data.landline = "9050801272";
        this.data.country = "string";
        this.db.fetchData(this.data, 'user/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "User updated successfully") {
                _this.toast.openSucess('Updated successfully', '');
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
            _this.dialogRef.close();
        });
    };
    SystemModalComponent.prototype.update_salesuser = function () {
        var _this = this;
        this.loader = true;
        console.log(this.data);
        this.db.fetchData(this.system_data, 'user/update').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "User updated successfully") {
                _this.toast.openSucess('Address updated successfully', '');
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
        this.dialogRef.close();
    };
    SystemModalComponent.prototype.onNoClick = function () {
        this.dialogRef.close();
    };
    SystemModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-system-modal',
            template: __webpack_require__(/*! ./system-modal.component.html */ "./src/app/user/system-modal/system-modal.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], SystemModalComponent);
    return SystemModalComponent;
}());



/***/ }),

/***/ "./src/app/user/system-user-detail/system-user-detail.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/user/system-user-detail/system-user-detail.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/system-user-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{systemdata.userName}}</h2>\n        <p class=\"light\">{{systemdata.role_name}}</p>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer\">\n    \n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info\">\n            <div class=\"basic-details\">\n              <div class=\"profile-info\">\n                <ul class=\"flex-start\">\n\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/phone.svg\" class=\"fix-img\">\n                      <span>Designation</span>\n                      <p>{{systemdata.designationName}}</p>\n                      <!-- <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" [(ngModel)]=\"systemdata.mobile\" (click)=\"openEmail('mobile')\"><i class=\"material-icons\">create</i></a> -->\n                    </div>\n                  </li>\n\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/gmail.svg\" class=\"fix-img\">\n                      <span>Email</span>\n                      <p class=\"link-clr\">{{systemdata.email}}</p>\n                      <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" [(ngModel)]=\"systemdata.email\" (click)=\"openEmail('email')\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/phone.svg\" class=\"fix-img\">\n                      <span>Mobile</span>\n                      <p>{{systemdata.mobile}}</p>\n                      <a *ngIf=\"this.role==1\" class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\" [(ngModel)]=\"systemdata.mobile\" (click)=\"openEmail('mobile')\"><i class=\"material-icons\">create</i></a>\n                    </div>\n                  </li>\n\n                \n                  <!-- <li  class=\"col s4\">\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/map-location.svg\" class=\"fix-img\">\n                      <span>Assign Location</span>\n                      <p>Faridabad Golden</p>\n                    </div>\n                  </li> -->\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"row\">\n        <div class=\"col s8\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>ADDRESS</h2>\n              </div>\n              <a *ngIf=\"this.role==1\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\"  (click)=\"openDialog('address')\"><i class=\"material-icons\">edit</i></a>\n              <div class=\"nationality\">\n                <img src=\"assets/img/india.svg\" alt=\"\">\n                <p>India</p>\n              </div>\n              <div class=\"ds-from-fields\">\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>State</p>\n                    <p>{{systemdata.state}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>District</p>\n                    <p>{{systemdata.district}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>City</p>\n                    <p>{{systemdata.city}}</p>\n                  </div>\n                  <div class=\"static-info w100\" style=\"min-width: 100px;\">\n                    <p>Pin Code</p>\n                    <p>{{systemdata.pin}}</p>\n                  </div>\n                </div>\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>address</p>\n                    <p>{{systemdata.street}}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col s4\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"cs-logs\">\n              <div class=\"top-heading\">\n                <h2>ACCOUNT INFO</h2>\n              </div>\n              <div class=\"logs-outer\">\n                <div class=\"logs-list\">\n                  <div class=\"account-details\">\n                    <ul>\n                      <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <div class=\"cs-account\">\n                              <p>User Name</p>\n                              <h5>{{systemdata.email}}</h5>\n                            </div>\n                          </div>\n                        </div>\n                      </li>\n                      \n                      <li class=\"active\" [ngClass]=\"{'active':systemdata.active==true}\" style=\"padding-top: 0px !important; padding-bottom: 0px !important;\">\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <div class=\"cs-account\">\n                              <!-- <p>Password</p> -->\n                              <form name=\"form\" (ngSubmit)=\"f.form.valid && updatepassword()\"  #f=\"ngForm\" novalidate>\n                                <div class=\"from-fields\">\n                                  <div class=\"control-field pr80\">\n                                    <mat-form-field class=\"cs-input infix-bodr\">\n                                      <input matInput type=\"text\" placeholder=\"Change password\" name=\"password\" [(ngModel)]=\"account_form.password\" #password=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && password.invalid }\" required>\n                                    </mat-form-field>\n                                  </div>\n                                </div>\n                                <mat-error *ngIf=\"f.submitted && password.invalid\" class=\"invalid-feedback\">\n                                  <mat-error *ngIf=\"password.errors.required\">Password is required</mat-error>\n                                </mat-error>\n                                <button mat-raised-button color=\"accent\" class=\"material-icons pass-icon\">Save</button>\n                              </form>\n                              <!-- <i class=\"material-icons pass-icon pass-show\"   (click)=\"toggleterritory(systemdata.active,'open')\">visibility</i>\n                                <i class=\"material-icons pass-icon pass-hide\" (click)=\"toggleterritory(systemdata.active,'close')\">visibility_off</i> -->\n                              </div>\n                            </div>\n                          </div>\n                        </li>\n                      \n                        <!-- <li class=\"status-bg\">\n                          <div class=\"outer\">\n                            <div class=\"inner\">\n                              <div class=\"cs-account\">\n                                <p>Status</p>\n                                <h5>Active</h5>\n                                <mat-slide-toggle class=\"status-toogle\" color=\"warn\"  [(ngModel)]='systemdata.isActive' (change)=\"isactive(systemdata.isActive)\">&nbsp;</mat-slide-toggle>\n                              </div>\n                            </div>\n                          </div>\n                        </li> -->\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n\n\n        <div *ngIf=\"!moduleAssignedEdit && systemdata.type=='1'\" class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box padding0\">\n              <div class=\"full-address\">\n                <div class=\"top-heading\">\n                  <h2>Modules Assigned Details</h2>\n                </div>\n\n                <a (click)=\"editModulesHandler()\" mat-button class=\"address-edit\" matTooltip=\"EDIT\" color=\"accent\"><i class=\"material-icons\">edit</i></a>\n                <div class=\"cs-table\">\n\n                    <div class=\"table-container\">\n                      <div class=\"table-content none-shadow\">\n                        <table>\n                          <tr [hidden]=\"!list.show\" *ngFor=\"let list of dbModuleData.moduleAccesses\">\n                            <td>{{list.module}}</td>\n                          </tr>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- <div *ngIf=\"moduleAssignedEdit\" class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"collaps mt15\">\n              <div class=\"cs-heading\">\n                <h2>Modules Rights</h2>\n              </div>\n              <mat-divider class=\"mt10 mb15\"></mat-divider>\n              <div class=\"collaps-area\">\n        \n        \n                <mat-accordion>\n        \n                  <mat-expansion-panel *ngFor=\"let list of moduleData; let index = index\" [expanded]=\"step === index\" (opened)=\"setStep(0)\">\n                    <mat-expansion-panel-header class=\"outer-panel mb10\">\n                      <mat-panel-title>\n                        {{list.moduleName}}\n                      </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <div class=\"cs-rights\">\n        \n                      <div class=\"all-selct\">\n                        <mat-checkbox [(ngModel)]=\"list.view\" (change)=\"selectAllHandler(index)\" name=\"View\">View</mat-checkbox>\n                      </div>\n        \n                      <ul *ngIf=\"list.view\">\n        \n                        <li>\n                           <mat-checkbox [(ngModel)]=\"list.isSelectAllChecked\" (change)=\"selectAllHandler(index)\" name=\"Select All\">Select All</mat-checkbox>\n                        </li>\n        \n                        <li *ngFor=\"let modeuleList of list.moduleRights; let childIndex = index\">\n                            <mat-checkbox [(ngModel)]=\"modeuleList.checked\" name=\"{{modeuleList.name}}{{index}}{{childIndex}}\">{{modeuleList.name}}</mat-checkbox>\n                        </li>\n                        \n                      </ul>\n        \n                    </div>\n                  </mat-expansion-panel>\n                    \n                </mat-accordion>\n              </div>\n            </div>\n          </div>\n        \n        \n          <p *ngIf=\"system_detail.role=='1' && !isModuleSelected\">Atleast One Module Right Required!</p>\n        </div> -->\n\n        <div *ngIf=\"moduleAssignedEdit\" class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"sprate-box mt15\">\n                <div class=\"cs-heading\">\n                  <h2>Modules Rights</h2>\n                </div>\n                <mat-divider class=\"left-right-15 mt10 mb15 mat-divider\"></mat-divider>\n          \n                <div class=\"cs-table left-right-20\">\n                    <div class=\"table-head\">\n                      <table>\n                        <tr>\n                          <th class=\"w50 text-center\">&nbsp;</th>\n                          <th>Module Name</th>\n                        </tr>\n                      </table>\n                    </div>\n                    <div class=\"table-container\">\n                      <div class=\"table-content none-shadow\">\n                        <table>\n                          <tr *ngFor=\"let list of moduleData\">\n                            <td class=\"w50 text-center\">\n                              <mat-checkbox [(ngModel)]=\"list.view\" name=\"{{list.view}}\" color=\"accent\">&nbsp;</mat-checkbox>\n                            </td>\n                            <td>{{list.moduleName}}</td>\n                          </tr>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n          \n              </div>\n            </div>\n        </div>\n\n        <p class=\"key-message\" *ngIf=\"moduleAssignedEdit && !isModuleSelected\">Atleast One Module Right Required!</p>\n\n        <div *ngIf=\"moduleAssignedEdit\" class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"cs-btn text-right\">\n              <div class=\"in-btn\">\n               <button mat-raised-button (click)=\"moduleAssignedEdit=false\" color=\"warn\" class=\"material-icons pass-icon\">Cancel</button>\n                <button mat-raised-button (click)=\"saveAccessHandler()\" color=\"accent\" class=\"material-icons pass-icon\">Save</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"h50\"></div>\n  \n  "

/***/ }),

/***/ "./src/app/user/system-user-detail/system-user-detail.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/user/system-user-detail/system-user-detail.component.ts ***!
  \*************************************************************************/
/*! exports provided: SystemUserDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemUserDetailComponent", function() { return SystemUserDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _system_modal_system_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system-modal/system-modal.component */ "./src/app/user/system-modal/system-modal.component.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");









var SystemUserDetailComponent = /** @class */ (function () {
    function SystemUserDetailComponent(toast, user, db, router, route, dialog) {
        var _this = this;
        this.toast = toast;
        this.user = user;
        this.db = db;
        this.router = router;
        this.route = route;
        this.dialog = dialog;
        this.account_form = {};
        this.type = [];
        this.system_detail = [];
        this.active = {};
        this.systemdata = [];
        this.rolelists = [];
        this.rolelistsystem1 = [];
        this.userdata = [];
        this.isModuleSelected = false;
        this.dbModuleData = [];
        this.step = 0;
        this.moduleAssignedEdit = false;
        this.moduleData = [{ moduleId: '1', moduleName: 'Lead', isSelectAllChecked: false, view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '2', moduleName: 'Distribution Network', isSelectAllChecked: false, view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '3', moduleName: 'Task', isSelectAllChecked: false, view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '4', moduleName: 'Order', isSelectAllChecked: false, view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '5', moduleName: 'Travel Plan', isSelectAllChecked: false, view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '6', moduleName: 'Expense', isSelectAllChecked: false, view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '7', moduleName: 'Customer Concern', isSelectAllChecked: false, view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '8', moduleName: 'Checkin', isSelectAllChecked: false, view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '9', moduleName: 'Followup', isSelectAllChecked: false, view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '11', moduleName: 'Sales Leave', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '12', moduleName: 'Pop & Gift Order', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '13', moduleName: 'Schemes', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '14', moduleName: 'Vendors', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            }
        ];
        this.designationData = [
            { designationName: 'Vice President', designation: 1 },
            { designationName: 'Deputy General Manager', designation: 2 },
            { designationName: 'General Manager', designation: 3 },
            { designationName: 'Assistant General Manager', designation: 4 },
            { designationName: 'Sr Manager', designation: 5 },
            { designationName: 'Manager', designation: 6 },
            { designationName: 'Deputy Manager', designation: 7 },
            { designationName: 'Sr Executive', designation: 8 },
            { designationName: 'Executive', designation: 9 },
            { designationName: 'Assistant Manager', designation: 10 },
            { designationName: 'Assistant', designation: 11 },
            { designationName: 'Trainee', designation: 12 },
            { designationName: 'Others', designation: 13 }
        ];
        this.route.params.subscribe(function (params) {
            _this.userdata = _this.user['user']['data'];
            _this.role = _this.userdata['role'];
            console.log(params);
            _this.id = params.id;
            console.log(_this.id);
            _this.systemuserdetail();
            // if(this.id){
            //   this.systemuserdetail();    
            // }else{
            // }
        });
    }
    SystemUserDetailComponent.prototype.ngOnInit = function () {
    };
    SystemUserDetailComponent.prototype.setStep = function (index) {
        this.step = index;
    };
    SystemUserDetailComponent.prototype.systemuserdetail = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'user/detail/' + this.id).subscribe(function (response) {
            console.log(response);
            _this.system_detail = response;
            _this.loader = false;
            _this.systemdata = _this.system_detail.data;
            for (var index = 0; index < _this.designationData.length; index++) {
                if (_this.designationData[index].designation == _this.systemdata['designation']) {
                    _this.systemdata.designationName = _this.designationData[index].designationName;
                }
            }
            _this.rolelist();
            _this.db.fileData('', 'admin/access/' + _this.id).subscribe(function (responseData) {
                console.log(responseData);
                _this.dbModuleData = responseData['data'];
                _this.moduleAssignedEdit = false;
                // this.system_detail = response;
                // this.systemdata=this.system_detail.data;
            }, function (error) {
                console.log(error);
            });
        }, function (error) {
            console.log(error);
        });
    };
    SystemUserDetailComponent.prototype.editModulesHandler = function () {
        var _this = this;
        var _loop_1 = function (index) {
            var indexExist = this_1.dbModuleData.moduleAccesses.findIndex(function (row) { return row.moduleId == _this.moduleData[index].moduleId && row.show; });
            if (indexExist != -1) {
                this_1.moduleData[index].view = this_1.dbModuleData.moduleAccesses[indexExist].show;
                this_1.moduleData[index].moduleRights[0]['checked'] = this_1.dbModuleData.moduleAccesses[indexExist].add;
                this_1.moduleData[index].moduleRights[1]['checked'] = this_1.dbModuleData.moduleAccesses[indexExist].edit;
                this_1.moduleData[index].moduleRights[2]['checked'] = this_1.dbModuleData.moduleAccesses[indexExist].delete;
                if (this_1.dbModuleData.moduleAccesses[indexExist].add && this_1.dbModuleData.moduleAccesses[indexExist].edit && this_1.dbModuleData.moduleAccesses[indexExist].delete) {
                    this_1.moduleData[index]['isSelectAllChecked'] = true;
                }
            }
        };
        var this_1 = this;
        for (var index = 0; index < this.moduleData.length; index++) {
            _loop_1(index);
        }
        console.log(this.moduleData);
        this.moduleAssignedEdit = true;
        this.isModuleSelected = true;
    };
    SystemUserDetailComponent.prototype.saveAccessHandler = function () {
        var _this = this;
        var moduleAccesses = [];
        for (var index = 0; index < this.moduleData.length; index++) {
            if (this.moduleData[index].view) {
                if (!this.moduleData[index].moduleRights[0].checked) {
                    this.moduleData[index].moduleRights[0].checked = false;
                }
                if (!this.moduleData[index].moduleRights[1].checked) {
                    this.moduleData[index].moduleRights[1].checked = false;
                }
                if (!this.moduleData[index].moduleRights[2].checked) {
                    this.moduleData[index].moduleRights[2].checked = false;
                }
                moduleAccesses.push({
                    'moduleId': this.moduleData[index].moduleId,
                    'module': this.moduleData[index].moduleName,
                    'show': true,
                    'add': this.moduleData[index].moduleRights[0].checked,
                    'edit': this.moduleData[index].moduleRights[1].checked,
                    'delete': this.moduleData[index].moduleRights[2].checked,
                });
            }
        }
        console.log(moduleAccesses);
        if (moduleAccesses.length == 0) {
            this.isModuleSelected = false;
            return false;
        }
        else {
            this.isModuleSelected = true;
            ;
        }
        console.log(moduleAccesses);
        var accessData = {};
        accessData['userId'] = this.systemdata.userId;
        accessData['moduleAccesses'] = moduleAccesses;
        this.loader = true;
        this.db.fetchData(accessData, 'admin/saveaccess').subscribe(function (responseData) {
            console.log(responseData);
            _this.loader = false;
            _this.toast.openSucess('User Updated successfully', '');
            _this.systemuserdetail();
        });
    };
    SystemUserDetailComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var filterrolesystem = _this.rolelists.filter(function (x) { return x.userTypeId == 1; });
            _this.rolelistsystem1 = filterrolesystem[0].roles;
            var filterrolesalesdetail = _this.rolelistsystem1.filter(function (x) { return x.roleId == _this.systemdata.role; });
            _this.systemdata.role_name = filterrolesalesdetail[0].roleName;
            console.log(_this.systemdata);
        });
    };
    SystemUserDetailComponent.prototype.selectAllHandler = function (index) {
        console.log(this.moduleData[index]);
        console.log(index);
        for (var index1 = 0; index1 < this.moduleData[index]['moduleRights'].length; index1++) {
            this.moduleData[index]['moduleRights'][index1]['checked'] = this.moduleData[index]['isSelectAllChecked'];
        }
    };
    SystemUserDetailComponent.prototype.openDialog = function (check1) {
        var dialogRef = this.dialog.open(_system_modal_system_modal_component__WEBPACK_IMPORTED_MODULE_6__["SystemModalComponent"], { data: this.systemdata });
        this.systemdata.type = check1;
        console.log(this.systemdata.type);
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
        });
    };
    SystemUserDetailComponent.prototype.openEmail = function (check) {
        this.systemdata.type = check;
        console.log(check);
        var dialogRef = this.dialog.open(_system_modal_system_modal_component__WEBPACK_IMPORTED_MODULE_6__["SystemModalComponent"], { data: this.systemdata });
        dialogRef.afterClosed().subscribe(function (result) {
        });
    };
    SystemUserDetailComponent.prototype.toggleterritory = function (key, action) {
        if (action == 'open') {
            this.type = "password";
            this.systemdata.active = true;
        }
        if (action == 'close') {
            this.type = "text";
            this.systemdata.active = false;
        }
    };
    SystemUserDetailComponent.prototype.isactive = function (isActive) {
        var _this = this;
        if (isActive == true) {
            this.systemdata.isActive = true;
            console.log(this.systemdata);
        }
        if (isActive == false) {
            this.systemdata.isActive = false;
            console.log(this.systemdata);
        }
        console.log(isActive);
        this.db.fetchData({
            "userId": this.systemdata.userId,
            "userName": this.systemdata.userName,
            "password": "xyz",
            "email": this.systemdata.email,
            "mobile": this.systemdata.mobile,
            "landline": "string",
            "userType": this.systemdata.userType,
            "role": this.systemdata.role,
            "street": this.systemdata.street,
            "state": this.systemdata.state,
            "district": "string",
            "city": this.systemdata.city,
            "country": "string",
            "pin": this.systemdata.pin,
            "targetType": this.systemdata.targetType,
            "duration": this.systemdata.duration,
            "amount": this.systemdata.amount,
            "userTerritories": [],
            "userSegments": [],
            "token": "string",
            "isActive": this.systemdata.isActive,
            "createBy": 0,
            "createdOn": "2019-02-11T04:19:25.435Z",
            "modifiedBy": 0,
            "modifiedOn": "2019-02-11T04:19:25.435Z",
            "documents": []
        }, 'user/update').subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            console.log(_this.message);
            if (_this.message == "User updated successfully") {
                _this.toast.openSucess('User Updated successfully', '');
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
        });
    };
    SystemUserDetailComponent.prototype.updatepassword = function () {
        var _this = this;
        console.log('pass');
        this.db.fetchData({ "userId": this.id, "password": this.account_form.password }, 'account/changepassword')
            .subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            console.log(_this.message);
            if (_this.message == "Your password has been changed successfully!") {
                _this.toast.openSucess('Your password has been changed successfully!', '');
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
        });
    };
    SystemUserDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-system-user-detail',
            template: __webpack_require__(/*! ./system-user-detail.component.html */ "./src/app/user/system-user-detail/system-user-detail.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_toast__WEBPACK_IMPORTED_MODULE_7__["SnackBarOverview"], _local_storage_service__WEBPACK_IMPORTED_MODULE_8__["sessionStorage"], _constant_service__WEBPACK_IMPORTED_MODULE_4__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]])
    ], SystemUserDetailComponent);
    return SystemUserDetailComponent;
}());



/***/ }),

/***/ "./src/app/user/system-user-list/system-user-list.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/user/system-user-list/system-user-list.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/user.svg\" class=\"h-icon\">\n      <div class=\"heading-text w250\">\n        <h2>Users</h2>\n        <p>Total User {{users.length}}</p>\n      </div>\n    </div>\n    <div  *ngIf=\"filter.name || filter.role || filter.mobileno ||filter.email\" class=\"filter-container left-auto\">\n      <div (click)=\"clearfilter()\" class=\"filter-btn\">\n        <button mat-button >CLEAR FILTER</button>\n      </div>\n    </div>\n    <div class=\"tabs left-auto\">\n      <ul>\n        <li><a routerLink=\"/sale-user-list\" routerLinkActive=\"active\">SALES USERS</a></li>\n        <li><a routerLink=\"/system-user-list\" routerLinkActive=\"active\">SYSTEM USERS</a></li>\n      </ul>\n    </div>\n    \n  </div>\n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n            <div class=\"table-head\">\n              <table>\n                <tr>\n                  <th class=\"w110\">Date</th>\n                  <th class=\"w170\">Role</th>\n                  <th class=\"w230\">Name</th>\n                  <th class=\"w130\">Mobile</th>\n                  <th>Email</th>\n                  <th class=\"w200\">Account Status</th>\n                  <!-- <th class=\"w60\">&nbsp;</th> -->\n                </tr>\n              </table>\n            </div>\n            <div class=\"table-head bdrt\">\n              <form>\n                <table>\n                  <tr>\n                    <th class=\"w110\">\n                    </th>\n                    <th class=\"w170\">\n                      \n                      <div class=\"th-search\">\n                        <select #role=\"ngModel\" name=\"role\" [(ngModel)]=\"filter.role\" (change)=\"userList()\">\n                          <option value=\"\" selected>Select</option>\n                          <option value=\"{{list.roleId}}\" *ngFor=\"let list of rolelistsystem1\">{{list.roleName}}</option>\n                        </select>\n                      </div>\n                    </th>\n                    \n                    <th class=\"w230\" style=\"padding: 20px 10px;\">\n                      <div class=\"th-search\">\n                        <input type=\"text\"  (keyup)=\"userList()\" name=\"name\" #companyname=\"ngModel\" [(ngModel)]=\"filter.name\" placeholder=\"Search....\">\n                        <!-- <i class=\"material-icons search-icon\">search</i> -->\n                      </div>\n                    </th>\n                    <th class=\"w130\"  style=\"padding: 20px 10px;\">\n                      <div class=\"th-search\">\n                        <input type=\"text\"  (keyup)=\"userList()\" name=\"mobileno\" #companyname=\"ngModel\" [(ngModel)]=\"filter.mobileno\" placeholder=\"Search....\">\n                        <!-- <i class=\"material-icons search-icon\">search</i> -->\n                      </div>\n                      <th  style=\"padding: 20px 10px;\">\n                        <div class=\"th-search\">\n                          <input type=\"text\"  (keyup)=\"userList()\" name=\"email\" #companyname=\"ngModel\" [(ngModel)]=\"filter.email\" placeholder=\"Search....\">\n                          <!-- <i class=\"material-icons search-icon\">search</i> -->\n                        </div>\n                      </th>\n                      <!-- <th></th> -->\n                      <th class=\"w200\"></th>\n                    </tr>\n                  </table>\n                </form>\n              </div>\n            </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content\">\n                  <table>\n                    <tr  *ngFor=\"let systemuser of users;let i=index\">\n                      <td class=\"w110\">{{systemuser.createdOn|date:'d MMM y'}}</td>\n                      <td class=\"w170\">{{systemuser.role_name}}</td>\n                      <td class=\"w230\"><a class=\"link-btn\" routerLink=\"/system-user-detail/{{systemuser.userId}}\" routerLinkActive=\"active\" mat-button>{{systemuser.userName}}</a></td>\n                      <td class=\"w130\">{{systemuser.mobile}}</td>\n                      <td><p>{{systemuser.email}}</p></td>\n                      <td class=\"w200\">\n                      \n\n                            <mat-slide-toggle class=\"right-toggle\" [checked]=\"systemuser.isActive\"  (change)=\"deleteUser(systemuser.userId, $event)\" ></mat-slide-toggle>\n                          <!-- <a mat-button class=\"view\" (click)=\"detailPlan(list.travelPlanID)\"><i class=\"material-icons\">remove_red_eye</i> View</a> -->\n                          <!-- <button mat-button class=\"delete\" (click)=\"deleteUser(systemuser.userId)\"><i class=\"material-icons\">delete_sweep</i> Delete</button> -->\n                      </td>\n                      <!-- <td class=\"w230\">\n                        <div class=\"td-input\" >\n                          <p>{{systemuser.password}}</p> -->\n                          <!-- <input type=\"{{systemuser.active? 'password' : 'text'}}\"  placeholder=\"\" [(ngModel)]=\"systemuser.password\">\n                            [ngClass]=\"{'active':systemuser.active==true}\"\n                            <i class=\"material-icons password show-pass\" (click)=\"toggleterritory(systemuser.active,'open',i)\" >visibility</i>\n                            <i class=\"material-icons password show-hide\" (click)=\"toggleterritory(systemuser.active,'close',i)\">visibility_off</i> -->\n                            <!-- </div>\n                            </td> -->\n                            <!-- <td class=\"w60\">\n                              <mat-slide-toggle class=\"switch-toggle\" color=\"warn\" [(ngModel)]='systemuser.isActive' (change)=\"isactive(systemuser.isActive,i)\"></mat-slide-toggle>\n                            </td> -->\n                          </tr>\n                        </table>\n                      </div>\n                    </div>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"div\" class=\"data-not-available\" >\n              <div class=\"outer\">\n                <div class=\"iinear\">\n                  <div class=\"figure\" matRipple>\n                    <div class=\"header\">\n                      <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                    </div>\n                    <div class=\"description\">\n  \n                      <div class=\"img\">\n                          <i class=\"material-icons\">error_outline</i>\n                      </div>\n                        \n                      <div class=\"cs-heading\">\n                        <h2>Data Not Available</h2>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"fixed-multibtn-botm\">\n            <ul>\n              <li><a  matTooltip=\"Add New\" routerLink=\"/user-add\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n            </ul>\n          </div>\n        </div>"

/***/ }),

/***/ "./src/app/user/system-user-list/system-user-list.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/user/system-user-list/system-user-list.component.ts ***!
  \*********************************************************************/
/*! exports provided: SystemUserListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemUserListComponent", function() { return SystemUserListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");







var SystemUserListComponent = /** @class */ (function () {
    function SystemUserListComponent(db, router, toast, dialog) {
        this.db = db;
        this.router = router;
        this.toast = toast;
        this.dialog = dialog;
        this.userlist = [];
        this.users = [];
        this.active = {};
        this.rolelists = [];
        this.div = false;
        this.rolelistsystem1 = [];
        this.filter = {};
        this.userList();
    }
    SystemUserListComponent.prototype.ngOnInit = function () {
    };
    SystemUserListComponent.prototype.clearfilter = function () {
        this.filter = {};
        this.userList();
    };
    SystemUserListComponent.prototype.rolelist = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.rolelists = response['data'];
            var filterrolesystem = _this.rolelists.filter(function (x) { return x.userTypeId == 1; });
            _this.rolelistsystem1 = filterrolesystem[0].roles;
            console.log(_this.rolelistsystem1);
            var _loop_1 = function (i) {
                var systemIndex = _this.rolelistsystem1.findIndex(function (x) { return x.roleId == _this.users[i].role; });
                console.log(systemIndex);
                if (systemIndex != -1) {
                    _this.users[i].role_name = _this.rolelistsystem1[systemIndex].roleName;
                    console.log(_this.users[i].role_name);
                }
            };
            for (var i = 0; i < _this.users.length; i++) {
                _loop_1(i);
            }
        });
    };
    SystemUserListComponent.prototype.isactive = function (isActive, index) {
        var _this = this;
        if (isActive == true) {
            this.users[index].isActive = true;
            console.log(this.users);
        }
        if (isActive == false) {
            this.users[index].isActive = false;
            console.log(this.users);
        }
        console.log(isActive);
        this.db.fetchData({
            "userId": this.users[index].userId,
            "userName": this.users[index].userName,
            "password": "xyz",
            "email": this.users[index].email,
            "mobile": this.users[index].mobile,
            "landline": "string",
            "userType": this.users[index].userType,
            "role": this.users[index].role,
            "street": this.users[index].street,
            "state": this.users[index].state,
            "district": "string",
            "city": this.users[index].city,
            "country": "string",
            "pin": this.users[index].pin,
            "targetType": this.users[index].targetType,
            "duration": this.users[index].duration,
            "amount": this.users[index].amount,
            "userTerritories": [],
            "userSegments": [],
            "token": "string",
            "isActive": this.users[index].isActive,
            "createBy": 0,
            "createdOn": "2019-02-11T04:19:25.435Z",
            "modifiedBy": 0,
            "modifiedOn": "2019-02-11T04:19:25.435Z",
            "documents": []
        }, 'user/update').subscribe(function (response) {
            console.log(response);
            _this.message = response['message'];
            console.log(_this.message);
            if (_this.message == "User updated successfully") {
                _this.toast.openSucess('User Updated successfully', '');
            }
            else {
                _this.toast.openError('Something Went Wrong Please Try Again!!', '');
            }
        });
    };
    SystemUserListComponent.prototype.toggleterritory = function (key, action, index) {
        if (action == 'open') {
            this.type = "password";
            this.users[index].active = true;
        }
        if (action == 'close') {
            this.type = "text";
            this.users[index].active = false;
        }
    };
    SystemUserListComponent.prototype.userList = function () {
        var _this = this;
        this.loader = true;
        var selectedObject = { 'userType': 1, 'currentPage': 1,
            'pageSize': 200 };
        if (this.filter.name) {
            selectedObject['userName'] = this.filter.name;
        }
        if (this.filter.mobileno) {
            selectedObject['mobile'] = this.filter.mobileno;
        }
        if (this.filter.email) {
            selectedObject['email'] = this.filter.email;
        }
        if (this.filter.role) {
            selectedObject['role'] = this.filter.role;
        }
        this.db.fetchData(selectedObject, 'user/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.rolelist();
                _this.userlist = response;
                _this.users = _this.userlist.data;
            }
            else {
                _this.div = true;
                _this.userlist = [];
                _this.users = [];
            }
            // this.userlist = response;
            // this.users=this.userlist.data
            // console.log(this.users);
            // this.rolelist();  
            // console.log(this.users);
        });
    };
    SystemUserListComponent.prototype.deleteUser = function (id, event) {
        var _this = this;
        this.loader = true;
        this.db.fileData("", "user/delete/" + id + '/' + event.checked).subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            _this.toast.openSucess('Account Updated Successfully!', '');
        });
    };
    SystemUserListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-system-user-list',
            template: __webpack_require__(/*! ./system-user-list.component.html */ "./src/app/user/system-user-list/system-user-list.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"]])
    ], SystemUserListComponent);
    return SystemUserListComponent;
}());



/***/ }),

/***/ "./src/app/user/user-add/user-add.component.html":
/*!*******************************************************!*\
  !*** ./src/app/user/user-add/user-add.component.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/profile.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>User</h2>\n        <p>Add New User</p>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"container-outer\">\n    \n    <!-- <app-master-tab></app-master-tab> -->\n    <form #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onSubmit() \" novalidate>\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>USER TYPE</h2>\n                <span class=\"required\">Indicates Required Fields ( <sup>*</sup> )</span>\n              </div>\n              \n              \n              <div class=\"row mb0\">\n                \n                <div class=\"col s3 from-fields pl0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select placeholder=\"Role\" name=\"role\" id=\"role\" [(ngModel)]=\"user_type.role\"  #role=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && role.invalid }\" required>\n                        <mat-option *ngFor='let role of rolelistsystem1' (click)=\"roles();setplaceholder()\" value=\"{{role.roleId}}\">{{role.roleName}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && role.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"role.errors.required\">Role is required</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n                \n                <div *ngIf=\"user_type.role\" class=\"col s3 from-fields pl0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select placeholder=\"Designation\" name=\"designation\" id=\"designation\" [(ngModel)]=\"user_type.designation\"  #designation=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && designation.invalid }\" required>\n                        <mat-option (click)=\"filterDesignaton(user_type.designation)\" *ngFor='let list of desginationList' [value]=\"list.order\">{{list.designationName}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.submitted && designation.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"designation.errors.required\">Designation is required</mat-error>\n                    </mat-error>\n                  </div>\n                </div>\n                <div *ngIf=\"user_type.type==1\">\n                <div class=\"col s3 from-fields pl0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select placeholder=\"Senior Designation\" name=\"role\" >\n                        <mat-option (click)=\"seniorUserList(role.order)\" *ngFor='let role of seniorUserDesignation' value=\"{{role.order}}\">{{role.designationName}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                  </div>\n                </div>\n                \n                <div class=\"col s3 from-fields pl0\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select placeholder=\"Select Senior User\" name=\"leaveApprover\" #leaveApprover=\"ngModel\" [(ngModel)]=\"user_type.leaveApprover\">\n                        <mat-option *ngFor='let user of userList' value=\"{{user.userId}}\">{{user.userName}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                  </div>\n                </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"col s12\" *ngIf=\"user_type.type == '2'\">\n            <div class=\"sprate-box mt15 pt0\">\n              <div class=\"cs-heading\">\n                <h2>BASIC INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row mb0\">\n                  \n                  <div class=\"col s3 pl0\">\n                    <div class=\"control-field\" >\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Name \" name=\"username\" [(ngModel)]=\"sales_data.username\" #username=\"ngModel\" id=\"username\" [ngClass]=\"{ 'is-invalid': f.submitted && username.invalid }\" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && username.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"username.errors.required\">Name is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s3 \">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput type=\"text\"  maxlength=\"10\" type=text  placeholder=\"Mobile No.\" name=\"mobile\" [(ngModel)]=\"sales_data.mobile\" minlength=\"10\" maxlength=\"10\" min=\"0\" #mobile=\"ngModel\" id=\"mobile\" [ngClass]=\"{ 'is-invalid': f.submitted && mobile.invalid }\" (keypress)=\"MobileNumber($event)\" required>\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"f.submitted && mobile.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"mobile.errors.required || mobile.errors.invalid\">Mobile is invalid</mat-error>\n                        <mat-error *ngIf=\"mobile.errors.minlength || mobile.errors.maxlength\">Mobile must be 10 Digit</mat-error>\n                      </mat-error>\n                      \n                    </div>\n                  </div>\n                  \n                  <div class=\"col s3 pr0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Email-ID\" name=\"email\" [(ngModel)]=\"sales_data.email\" id=\"email\" #email=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n                      </mat-form-field>\n                      <div class=\"alert alert-danger\" *ngIf=\"!email.valid && email.touched\">\n                        Please Enter Valid Email....\n                      </div>\n                      <mat-error *ngIf=\"f.submitted && email.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"email.errors.required\">Email is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s3 pr0\">\n                    \n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Yearly Target Amount\" name=\"target\" [(ngModel)]=\"sales_data.target\" id=\"target\" #target=\"ngModel\"  (keypress)=\"MobileNumber($event)\"  maxlength=\"10\" [ngClass]=\"{ 'is-invalid': target.invalid }\">\n                      </mat-form-field>\n                      \n                      <mat-error *ngIf=\"target.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"target.errors.required\">Target is required</mat-error>\n                        <mat-error *ngIf=\"target.errors.maxlength\">Maximum target length is 10 Digit !</mat-error>\n                      </mat-error>\n                      \n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n            \n            <div class=\"sprate-box mt15 pt0\">\n              <div class=\"cs-heading\">\n                <h2>ADDRESS INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n                \n                <div class=\"row mb0\">\n                  <div class=\"col s6 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\" >\n                        <textarea matInput placeholder=\"Street\" name=\"street\" id=\"street\" [(ngModel)]=\"sales_data.street\" class=\"h110\" #street=\"ngModel\" ></textarea>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s6 pr0\">\n                    <div class=\"row mb0\">\n                      <div class=\"col s6 \" >\n                        <div class=\"control-field\">\n                          <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : state.invalid } \" >\n                            <mat-form-field class=\" cs-input infix-bodr8 select-input\">\n                              <input matInput placeholder=\"State\" [matAutocomplete]=\"state\" (input)=\"state_array_filter(sales_data.state)\" name=\"state\" id=\"state\" #state=\"ngModel\" [(ngModel)]=\"sales_data.state\" required>\n                              <mat-autocomplete #state=\"matAutocomplete\">\n                                <mat-option (click)=\"get_district()\" *ngFor='let state of tmpstateList' value=\"{{state}}\">\n                                  <small>{{state}}</small>\n                                </mat-option>\n                              </mat-autocomplete>\n                            </mat-form-field>\n                          </div>\n                          <mat-error *ngIf=\"f.submitted && state.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"state.errors.required\">State is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6 pr0\">\n                        <div class=\"control-field\">\n                          <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : district.invalid } \" >\n                            <mat-form-field class=\"example-full-width cs-input infix-bodr8 select-input\">\n                              <input matInput placeholder=\"District\" [matAutocomplete]=\"district\" (input)=\"district_array_filter(sales_data.district)\" name=\"district\" id=\"district\" #district=\"ngModel\" [(ngModel)]=\"sales_data.district\" required>\n                              <mat-autocomplete #district=\"matAutocomplete\">\n                                <mat-option  (click)=\"get_city()\"  *ngFor='let district of district1' value=\"{{district.districtName}}\">\n                                  <small>{{district.districtName}}</small>\n                                </mat-option>\n                              </mat-autocomplete>\n                            </mat-form-field>\n                          </div>\n                          <mat-error *ngIf=\"f.submitted && district.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"district.errors.required\"> District is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6 \">\n                        <div class=\"control-field\">\n                          \n                          <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : city.invalid } \" >\n                            <mat-form-field class=\" cs-input  infix-bodr8 select-input\">\n                              <input matInput placeholder=\"City\" [matAutocomplete]=\"city\" (input)=\"city_array_filter(sales_data.city)\" name=\"city\" id=\"city\" #city=\"ngModel\" [(ngModel)]=\"sales_data.city\" required>\n                              <mat-autocomplete #city=\"matAutocomplete\">\n                                <mat-option  (click)=\" get_pincode(city.stateMasterId)\" *ngFor='let city of cities' value=\"{{city.cityName}}\">\n                                  <small>{{city.cityName}}</small>\n                                </mat-option>\n                              </mat-autocomplete>\n                            </mat-form-field>\n                          </div>\n                          <mat-error *ngIf=\"f.submitted && city.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"city.errors.required\"> City is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6 pr0\" >\n                        <div class=\"control-field\">\n                          <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : pin.invalid } \" >\n                            <mat-form-field class=\" cs-input infix-bodr8 select-input\">\n                              <input matInput placeholder=\"pin\" [matAutocomplete]=\"pin\" (keypress)=\"MobileNumber($event)\" (input)=\"pin_array_filter(sales_data.pin)\" minlength=\"6\" maxlength=\"6\"  name=\"pin\"  id=\"pin\" #pin=\"ngModel\" [(ngModel)]=\"sales_data.pin\" required>\n                              <mat-autocomplete #pin=\"matAutocomplete\">\n                                <mat-option  *ngFor='let pin of areas' value=\"{{pin}}\">\n                                  <small>{{pin}}</small>\n                                </mat-option>\n                              </mat-autocomplete>\n                            </mat-form-field>\n                          </div>\n                          <mat-error *ngIf=\"f.submitted && pin.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"pin.errors.required\"> Pincode is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"sprate-box mt15 pt0\">\n              <div class=\"cs-heading\">\n                <h2>OFFICIAL ADDRESS INFORMATION</h2>\n              </div>\n              \n              <div class=\"from-fields\">\n                <div class=\"row mb0\">\n                  <div class=\"col s6 pl0\">\n                    <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input infix-bodr8\" >\n                        <textarea matInput placeholder=\"Street\" name=\"streetOffice\" id=\"streetOffice\" [(ngModel)]=\"sales_data.streetOffice\" class=\"h175\" #streetOffice=\"ngModel\" ></textarea>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && streetOffice.invalid\" class=\"invalid-feedback\">\n                        <mat-error *ngIf=\"streetOffice.errors.required\"> Street is required</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  \n                  <div class=\"col s6 pr0\">\n                    <div class=\"row mb0\">\n                      <div class=\"col s6\" >\n                        <div class=\"control-field\">\n                          <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : statef.invalid } \" >\n                            <mat-form-field class=\" cs-input infix-bodr8 select-input\">\n                              <input matInput placeholder=\"State\" [matAutocomplete]=\"statef\" (input)=\"state_array_filter(sales_data.statef)\" name=\"statef\" id=\"statef\" #statef=\"ngModel\" [(ngModel)]=\"sales_data.statef\" required>\n                              <mat-autocomplete #statef=\"matAutocomplete\">\n                                <mat-option (click)=\"get_districtOffice()\" *ngFor='let statef of tmpstateList' value=\"{{statef}}\">\n                                  <small>{{statef}}</small>\n                                </mat-option>\n                              </mat-autocomplete>\n                            </mat-form-field>\n                          </div>\n                          <mat-error *ngIf=\"f.submitted && statef.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"statef.errors.required\">State is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6 pr0\"> \n                        <div class=\"control-field\">\n                          <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : districtOffice.invalid } \" >\n                            <mat-form-field class=\"cs-input infix-bodr8 select-input\">\n                              <input matInput placeholder=\"District\" [matAutocomplete]=\"districtOffice\" (input)=\"officedistrict_array_filter(sales_data.districtOffice)\" name=\"districtOffice\" id=\"districtOffice\"  #districtOffice=\"ngModel\" [(ngModel)]=\"sales_data.districtOffice\" required>\n                              <mat-autocomplete #districtOffice=\"matAutocomplete\">\n                                <mat-option  (click)=\"get_cityOffice()\"  *ngFor='let districtf of districtOffice1' value=\"{{districtf.districtName}}\">\n                                  <small>{{districtf.districtName}}</small>\n                                </mat-option>\n                              </mat-autocomplete>\n                            </mat-form-field>\n                          </div>\n                          <mat-error *ngIf=\"f.submitted && districtOffice.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"districtOffice.errors.required\"> District is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6\">\n                        <div class=\"control-field\">\n                          <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : cityOffice.invalid } \" >\n                            <mat-form-field class=\"cs-input infix-bodr8 select-input\">\n                              <input matInput placeholder=\"City\" [matAutocomplete]=\"cityOffice\" (input)=\"officecity_array_filter(sales_data.cityOffice)\" name=\"cityOffice\" id=\"cityOffice\" #cityOffice=\"ngModel\" [(ngModel)]=\"sales_data.cityOffice\" required>\n                              <mat-autocomplete #cityOffice=\"matAutocomplete\">\n                                <mat-option  (click)=\" get_pincodeOffice(cityf.stateMasterId)\" *ngFor='let cityf of citiesOffice' value=\"{{cityf.cityName}}\">\n                                  <small>{{cityf.cityName}}</small>\n                                </mat-option>\n                              </mat-autocomplete>\n                            </mat-form-field>\n                          </div>\n                          <mat-error *ngIf=\"f.submitted && cityOffice.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"cityOffice.errors.required\"> City is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6 pr0\" >\n                        <div class=\"control-field\">\n                          <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : pinOffice.invalid } \" >\n                            <mat-form-field class=\" cs-input infix-bodr8 select-input\">\n                              <input matInput placeholder=\"Pin\" minlength=\"6\" maxlength=\"6\"   [matAutocomplete]=\"pinOffice\" (input)=\"officepin_array_filter(sales_data.pinOffice)\" (keypress)=\"MobileNumber($event)\" name=\"pinOffice\" id=\"pinOffice\" #pinOffice=\"ngModel\" [(ngModel)]=\"sales_data.pinOffice\" required>\n                              <mat-autocomplete #pinOffice=\"matAutocomplete\">\n                                <mat-option  *ngFor='let pinf of areasOffice' value=\"{{pinf}}\">\n                                  <small>{{pinf}}</small>\n                                </mat-option>\n                              </mat-autocomplete>\n                            </mat-form-field>\n                          </div>\n                          <mat-error *ngIf=\"f.submitted && pinOffice.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"pinOffice.errors.required\"> Pincode is required</mat-error>\n                          </mat-error>\n                        </div>\n                      </div>\n                      <div class=\"col s6\">\n                        <div class=\"control-field\" >\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Landline\" name=\"landline\"  id=\"landline\" [(ngModel)]=\"sales_data.landline\" #landline=\"ngModel\"  minlength=\"10\" maxlength=\"13\" min=\"0\" (keypress)=\"MobileNumber($event)\">\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"sprate-box mt15 pt0\">\n              <div *ngIf=\"user_type.type == '2'\" class=\"cs-heading\">\n                <h2>CONCERN APPROVAL RIGHTS</h2>\n              </div>\n              <div *ngIf=\"user_type.type == '2'\" class=\"from-fields\">\n                <div class=\"row mb0\">\n                  <div class=\"control-field col s4 pl0\">\n                    <mat-form-field class=\"cs-input infix-bodr8\">\n                      <mat-select [(ngModel)]=\"sales_data.concernApprovalAccess\" name=\"concernApprovalAccess\" placeholder=\"Select Approval Right\">\n                        <mat-option [value]=\"true\">Yes</mat-option>\n                        <mat-option [value]=\"false\">No</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <!-- <mat-error *ngIf=\"f.submitted && role.invalid\" class=\"invalid-feedback\">\n                      <mat-error *ngIf=\"role.errors.required\">Role is required</mat-error>\n                    </mat-error> -->\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"sprate-box mt15 pt0\">\n              <div *ngIf=\"(this.user_type.role > 7) && (this.user_type.role < 11 )\" class=\"cs-heading\">\n                <h2>ASSIGN INFORMATION</h2>\n              </div>\n              <div  class=\"row mt15 mb0\">\n                <div class=\"col s4 pl0\">\n                  <div class=\"territory-info\">\n                    <div class=\"head\" >\n                      <h2>SEGMENT</h2>\n                    </div>\n                    <div class=\"cs-checkbox \">\n                      <div class=\"checkbox-outer\">\n                        <section class=\"checkbox-inner\" *ngFor='let segment of segmentlist' aria-required=\"true\">\n                          <mat-checkbox class=\"check-list\" [(ngModel)]=\"segment.checked\" name=\"{{segment.text}}\" (change)=\"getSegmentRelatedData()\">{{segment.text}}</mat-checkbox>\n                        </section>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div *ngIf=\"(this.user_type.role < 9) && (this.user_type.role > 5 )\" class=\"col s4\">\n                  \n                  <div class=\"territory-info\">\n                    \n                    <div class=\"head\" [ngClass]=\"{'active':active.junior==true}\">\n                      <h2><span *ngIf=\"this.user_type.role==6\" >Select RSM</span>\n                        <span *ngIf=\"this.user_type.role==7\" >Select ASM</span>\n                        <span *ngIf=\"this.user_type.role==8\" >Select T. I.</span></h2>\n                        <!-- <mat-checkbox class=\"fix-check\">&nbsp;</mat-checkbox> -->\n                        <i class=\"material-icons search-icon\" (click)=\"toggleterritory('junior','open')\"    matRipple>search</i>\n                        <input type=\"text\" [(ngModel)]=\"sales_data.juniorSearch\" name=\"juniorSearch\"  placeholder=\"search...\" class=\"fix-search\">\n                        <i class=\"material-icons close-icon\"  (click)=\"sales_data.juniorSearch='';toggleterritory('junior','close')\" matRipple>clear</i>\n                      </div>\n                      \n                      <div *ngIf=\"juniorList.length == 0\" class=\"not-data\">\n                        <div class=\"inner-data\">\n                          <p>No Data</p>\n                        </div>\n                      </div>\n                      \n                      \n                      <div *ngIf=\"juniorList.length > 0\" class=\"cs-checkbox\">\n                        <div class=\"checkbox-outer\">\n                          <section class=\"checkbox-inner\">\n                            <mat-checkbox  *ngFor=\"let list of juniorList  | myfilter:{src: 'junior', search: sales_data.juniorSearch}; let i=index;\" class=\"check-list\" (change)=\"onUserAssignedHandler(list.userId, list.checked)\" value=\"{{list.userId}}\" [(ngModel)]=\"list.checked\"  name=\"{{list.userId}}\" >{{list.userName}}</mat-checkbox>\n                          </section>\n                        </div>\n                      </div>\n                      \n                      \n                    </div>\n                  </div>\n                  <div *ngIf=\"(this.user_type.role >= 6) && (this.user_type.role < 11 )\" class=\"col s4\">\n                    <div class=\"territory-info\">\n                      <div class=\"head\" [ngClass]=\"{'active':active.territory==true}\">\n                        <h2>TERRITORIES INFO</h2>\n                        <i class=\"material-icons search-icon right15\" (click)=\"toggleterritory('territory','open')\"  matRipple>search</i>\n                        <input type=\"text\" [(ngModel)]=\"sales_data.territorySearch\"  name=\"territorySearch\" placeholder=\"search...\" class=\"fix-search\">\n                        <i class=\"material-icons close-icon\" (click)=\"sales_data.territorySearch='';toggleterritory('territory','close')\" matRipple>clear</i>\n                      </div>\n                      \n                      <div *ngIf=\"territoryList.length == 0\" class=\"not-data\">\n                        <div class=\"inner-data\">\n                          <p>No Data</p>\n                        </div>\n                      </div>\n                      \n                      <div *ngIf=\"territoryList.length > 0\" class=\"cs-checkbox\">\n                        \n                        <div class=\"checkbox-outer\">\n                          <section class=\"checkbox-inner\">\n                            <ng-container  *ngFor=\"let territory of territoryList | myfilter:{src: 'territory', search: sales_data.territorySearch};let i=index;\"> \n                              \n                              <mat-checkbox class=\"check-list\"  (change)=\"getTerritoryNetwork(territory.territoryID,territory.check)\" value=\"{{territory.territoryName}}\"  [(ngModel)]=\"territory.check\"  [disabled]=\"territory.disabled\" name=\"{{territory.territoryName}}\" >{{territory.territoryName}} </mat-checkbox>\n                              \n                            </ng-container>\n                          </section>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div *ngIf=\"(this.user_type.role >= 7) && (this.user_type.role < 11 )\" class=\"col s4 pr0\">\n                    \n                    <div class=\"territory-info\">\n                      <div class=\"head\" [ngClass]=\"{'active':active.network==true}\">\n                        <h2>Distribution Network</h2>\n                        <!-- <mat-checkbox class=\"fix-check\">&nbsp;</mat-checkbox> -->\n                        <i class=\"material-icons search-icon right15\" (click)=\"toggleterritory('network','open')\"  matRipple>search</i>\n                        <input type=\"text\"[(ngModel)]=\"sales_data.networkSearch\" name=\"networkSearch\"  placeholder=\"search...\" class=\"fix-search\">\n                        <i class=\"material-icons close-icon\" (click)=\"sales_data.networkSearch='';toggleterritory('network','close')\" matRipple>clear</i>\n                      </div>\n                      \n                      <div *ngIf=\"networkIdsdata.length == 0\" class=\"not-data\">\n                        <div class=\"inner-data\">\n                          <p>No Data</p>\n                        </div>\n                      </div>\n                      \n                      <div *ngIf=\"networkIdsdata.length > 0\" class=\"cs-checkbox\">\n                        <div class=\"checkbox-outer\">\n                          <section class=\"checkbox-inner\">\n                            <mat-checkbox  *ngFor=\"let network of networkIdsdata | myfilter:{src: 'networkSearch', search: sales_data.networkSearch}; let i=index;\" class=\"check-list\" [disabled]=\"network.disabled\" value=\"{{network.networkId}}\" [(ngModel)]=\"network.checked\"  name=\"{{network.establishment}}\">{{network.establishment}}</mat-checkbox>\n                          </section>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n            </div>\n            \n            <div class=\"col s12\" *ngIf=\"user_type.type == '1'\">\n              <div class=\"sprate-box mt15 pt0\">\n                <div class=\"cs-heading\">\n                  <h2>BASIC INFORMATION</h2>\n                </div>\n                <div class=\"from-fields\">\n                  <div class=\"row mb0\">\n                    <div class=\"col s4 pl0\">\n                      <div class=\"control-field\" >\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput placeholder=\"Name\" name=\"username\" id=\"username\" [(ngModel)]=\"system_data.username\"  #username=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && username.invalid }\" required>\n                        </mat-form-field>\n                        <mat-error *ngIf=\"f.submitted && username.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"username.errors.required\">Name is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    <div class=\"col s4 \">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                          <input matInput type=\"text\"  maxlength=\"10\" type=text  placeholder=\"Mobile No.\" name=\"mobile\" id=\"mobile\" [(ngModel)]=\"system_data.mobile\" (keypress)=\"MobileNumber($event)\" minlength=\"10\" maxlength=\"10\" min=\"0\" #mobile=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && mobile.invalid }\" required >\n                        </mat-form-field>\n                        \n                        <mat-error *ngIf=\"f.submitted && mobile.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"mobile.errors.required || mobile.errors.invalid\">Mobile is invalid</mat-error>\n                          <mat-error *ngIf=\"mobile.errors.minlength || mobile.errors.maxlength\">Mobile must be 10 Digit</mat-error>\n                        </mat-error>\n                        \n                      </div>\n                    </div>\n                    \n                    <div class=\"col s4 pr0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\" [ngClass]=\"{ 'has-error' : f.submitted }\">\n                          <input matInput placeholder=\"Email-ID\" name=\"email\" id=\"email\" [(ngModel)]=\"system_data.email\"  #email=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\"  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"!email.valid && email.touched\">\n                          Please Enter Valid Email-ID.....\n                        </div>\n                        <mat-error *ngIf=\"f.submitted && email.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"email.errors.required || email.errors.invalid\">Email is required</mat-error>\n                        </mat-error>\n                      </div>\n                    </div>\n                    \n                  </div>\n                </div>\n              </div>\n              <div class=\"sprate-box mt15 pt0\">\n                <div class=\"cs-heading\">\n                  <h2>ADDRESS INFORMATION</h2>\n                </div>\n                <div class=\"from-fields\">\n                  \n                  <div class=\"row mb0\">\n                    <div class=\"col s6 pl0\">\n                      <div class=\"control-field\">\n                        <mat-form-field class=\"cs-input infix-bodr8\" >\n                          <textarea matInput placeholder=\"Street\" name=\"street\" [(ngModel)]=\"system_data.street\" class=\"h110\" #street=\"ngModel\" ></textarea>\n                        </mat-form-field>\n                      </div>\n                    </div>\n                    <div class=\"col s6 pr0\">\n                      <div class=\"row mb0\">\n                        <div class=\"col s6 \" >\n                          <div class=\"control-field\">\n                            <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : state.invalid } \" >\n                              <mat-form-field class=\"cs-input infix-bodr8 select-input\">\n                                <input matInput placeholder=\"State\" [matAutocomplete]=\"state\" (input)=\"state_array_filter(system_data.state)\" name=\"state\" id=\"state\" #state=\"ngModel\" [(ngModel)]=\"system_data.state\" required>\n                                <mat-autocomplete #state=\"matAutocomplete\">\n                                  <mat-option (click)=\"get_district()\" *ngFor='let state of tmpstateList' value=\"{{state}}\">\n                                    <small>{{state}}</small>\n                                  </mat-option>\n                                </mat-autocomplete>\n                              </mat-form-field>\n                            </div>\n                            <mat-error *ngIf=\"f.submitted && state.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"state.invalid\">State is required</mat-error>\n                            </mat-error>\n                          </div>\n                        </div>\n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : district.invalid } \" >\n                              <mat-form-field class=\"cs-input infix-bodr8 select-input\">\n                                <input matInput placeholder=\"district\" [matAutocomplete]=\"district\" (input)=\"district_array_filter(system_data.district)\" name=\"district\" id=\"district\" #district=\"ngModel\" [(ngModel)]=\"system_data.district\" required>\n                                <mat-autocomplete #district=\"matAutocomplete\">\n                                  <mat-option  (click)=\"get_city()\"  *ngFor='let district of district1' value=\"{{district.districtName}}\">\n                                    <small>{{district.districtName}}</small>\n                                  </mat-option>\n                                </mat-autocomplete>\n                              </mat-form-field>\n                            </div>\n                            <mat-error *ngIf=\"f.submitted && district.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"district.errors.required\"> District is required</mat-error>\n                            </mat-error>\n                          </div>\n                        </div>\n                        <div class=\"col s6\">\n                          <div class=\"control-field\">\n                            \n                            <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : city.invalid } \" >\n                              <mat-form-field class=\"cs-input infix-bodr8 select-input\">\n                                <input matInput placeholder=\"City\" [matAutocomplete]=\"city\" (input)=\"city_array_filter(system_data.city)\" name=\"city\" id=\"city\" #city=\"ngModel\" [(ngModel)]=\"system_data.city\" required>\n                                <mat-autocomplete #city=\"matAutocomplete\">\n                                  <mat-option  (click)=\" get_pincode(city.stateMasterId)\" *ngFor='let city of cities' value=\"{{city.cityName}}\">\n                                    <small>{{city.cityName}}</small>\n                                  </mat-option>\n                                </mat-autocomplete>\n                              </mat-form-field>\n                            </div>\n                            <mat-error *ngIf=\"f.submitted && city.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"city.errors.required\"> City is required</mat-error>\n                            </mat-error>\n                          </div>\n                        </div>\n                        <div class=\"col s6 pr0\">\n                          <div class=\"control-field\">\n                            <div class=\"control-field col-4\" [ngClass]=\"{'has-error' : pin.invalid } \" >\n                              <mat-form-field class=\"cs-input infix-bodr8 select-input\">\n                                <input matInput type=\"text\" (keypress)=\"MobileNumber($event)\" placeholder=\"pin\" [matAutocomplete]=\"pin\" (input)=\"pin_array_filter(system_data.pin)\"  (keypress)=\"MobileNumber($event)\" maxlength=\"6\" minlength=\"6\"  name=\"pin\" id=\"pin\" #pin=\"ngModel\" [(ngModel)]=\"system_data.pin\" required>\n                                <mat-autocomplete #pin=\"matAutocomplete\">\n                                  <mat-option  *ngFor='let pin of areas' value=\"{{pin}}\">\n                                    <small>{{pin}}</small>\n                                  </mat-option>\n                                </mat-autocomplete>\n                              </mat-form-field>\n                            </div>\n                            <mat-error *ngIf=\"f.submitted && pin.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"pin.errors.required\"> Pincode is required</mat-error>\n                            </mat-error>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <p class=\"key-message\" *ngIf=\"f.submitted && user_type.type==1 && !isModuleSelected\">Atleast One Module Right Required!</p> \n            \n            <div *ngIf=\"user_type.type == 1\" class=\"row\">\n              <div class=\"col s12\">\n                <div class=\"sprate-box mt15 pt0\">\n                  <div class=\"cs-heading\">\n                    <h2>Modules Rights</h2>\n                  </div>\n                  \n                  <div *ngIf=\"user_type.type ==1\" class=\"col s12\">\n                    <div class=\"collaps flat-collaps mt15\">\n                      <div class=\"collaps-area\">\n                        <mat-accordion>\n                          <mat-expansion-panel  [expanded]=\"step === index\" (opened)=\"setStep(0)\">\n                            <mat-expansion-panel-header class=\"outer-panel mb10\">\n                              <mat-panel-title>\n                                Module Name\n                              </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <div class=\"cs-rights\">\n                              <div class=\"all-selct\" *ngFor=\"let list of moduleData; let index = index\">\n                                <mat-checkbox [(ngModel)]=\"list.view\" name=\"list.view\">{{list.moduleName}}</mat-checkbox>\n                              </div>\n                            </div>\n                            \n                            <div *ngIf=\"user_type.type ==1\" class=\"col s12\">\n                              <div class=\"collaps flat-collaps mt10\">\n                                <div class=\"collaps-area\">\n                                  <mat-accordion>\n                                    <mat-expansion-panel  >\n                                      <mat-expansion-panel-header class=\"outer-panel mb10\">\n                                        <mat-panel-title>\n                                          <mat-checkbox (change)=\"selectAllHandler($event)\">Master</mat-checkbox>\n                                        </mat-panel-title>\n                                      </mat-expansion-panel-header>\n                                      <div class=\"cs-rights\">\n                                        <div class=\"all-selct\" *ngFor=\"let list of masterArray; let i = index\">\n                                          <mat-checkbox [(ngModel)]=\"list.view\" name=\"list.view{{i}}\">{{list.moduleName}}</mat-checkbox>\n                                        </div>\n                                      </div>\n                                    </mat-expansion-panel>\n                                  </mat-accordion>\n                                </div>\n                              </div>\n                            </div>\n                          </mat-expansion-panel>\n                        </mat-accordion>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            \n            \n            <div *ngIf=\"user_type.role\" class=\"col s12\">\n              <div class=\"cs-btn fixedd mt32 text-right\">\n                <div class=\"in-btn\">\n                  <button mat-raised-button color=\"accent\" (click)=\"setFocus(f.form)\" >Save</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n  \n  <div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/user/user-add/user-add.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/user/user-add/user-add.component.ts ***!
  \*****************************************************/
/*! exports provided: UserAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserAddComponent", function() { return UserAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../router-animation/router-animation.component */ "./src/app/router-animation/router-animation.component.ts");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_8__);









var UserAddComponent = /** @class */ (function () {
    function UserAddComponent(db, toast, router, route, renderer, alrt, platformId) {
        this.db = db;
        this.toast = toast;
        this.router = router;
        this.route = route;
        this.renderer = renderer;
        this.alrt = alrt;
        this.platformId = platformId;
        this.sales_data = {};
        this.staffSegments = [];
        this.r = 1;
        this.users_territory = [];
        this.userTerritories = [];
        this.system_data = {};
        this.user_type = {};
        this.rolelists = [];
        this.rolelistsales1 = [];
        this.rolelistsystem1 = [];
        this.segmentlist = [];
        this.statelist = [];
        this.st = [];
        this.districtlist = [];
        this.districtlistOffice = [];
        this.district1 = [];
        this.districtOffice1 = [];
        this.citylist = [];
        this.citylistOffice = [];
        this.districts1 = [];
        this.districtsOffice1 = [];
        this.districts2 = [];
        this.districtsOffice2 = [];
        this.cities1 = [];
        this.areas = [];
        this.cities = [];
        this.citiesOffice = [];
        this.areasOffice = [];
        this.citiesOffice1 = [];
        this.networkIdsdata = [];
        this.networkIds = [];
        this.territoryList = [];
        this.document = [];
        this.juniorList = [];
        this.saleHierarchies = [];
        this.isModuleSelected = true;
        this.disabledTerritories = [];
        this.disabledNetwork = [];
        this.selectedTempArr = [];
        this.step = 0;
        this.moduleData = [{ moduleId: '1', moduleName: 'Lead', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '2', moduleName: 'Distribution Network', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '3', moduleName: 'Task', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '4', moduleName: 'Order', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '5', moduleName: 'Travel Plan', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '6', moduleName: 'Expense', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '7', moduleName: 'Product Concern', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '15', moduleName: 'Other Concern', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '8', moduleName: 'Checkin', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '9', moduleName: 'Followup', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '11', moduleName: 'Sales Leave', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '12', moduleName: 'Pop & Gift Order', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '13', moduleName: 'Schemes', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '14', moduleName: 'Vendors', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            }
        ];
        this.masterArray = [{ moduleId: '16', moduleName: 'Product', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '17', moduleName: 'User', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '18', moduleName: 'Territories', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '19', moduleName: 'Marketing', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '20', moduleName: 'Leaves & Holiday', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '21', moduleName: 'Announcement', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            },
            { moduleId: '22', moduleName: 'Allowance', view: false, moduleRights: [
                    { name: 'Add', checked: false },
                    { name: 'Edit', checked: false },
                    { name: 'Delete', checked: false }
                ]
            }
        ];
        this.designationData = [];
        this.userAssignedTerriotories = [];
        this.desginationList = [];
        this.seniorUserDesignation = [];
        this.userList = [];
        this.role = {};
        ///////state list start//////////////////
        this.tmpstateList = [];
        this.tmpofficedistrict = [];
        this.tmpdistrictList = [];
        /////////////////city list start///////////
        this.tmpofficecitylist = [];
        this.tmpcityList = [];
        ///////////////// pincode list start///////////////////
        this.tmpofficePinlist = [];
        this.tmpPinList = [];
        this.active = {};
        this.designationData = [
            { designationName: 'Vice President', designation: 1 },
            { designationName: 'Deputy General Manager', designation: 2 },
            { designationName: 'General Manager', designation: 3 },
            { designationName: 'Assistant General Manager', designation: 4 },
            { designationName: 'Sr Manager', designation: 5 },
            { designationName: 'Manager', designation: 6 },
            { designationName: 'Deputy Manager', designation: 7 },
            { designationName: 'Sr Executive', designation: 8 },
            { designationName: 'Executive', designation: 9 },
            { designationName: 'Assistant Manager', designation: 10 },
            { designationName: 'Assistant', designation: 11 },
            { designationName: 'Trainee', designation: 12 },
            { designationName: 'Others', designation: 13 }
        ];
        this.getDesignationList();
    }
    UserAddComponent.prototype.ngOnInit = function () {
        this.rolelist();
        this.getAllSegment();
        this.get_state();
        this.sales_data.concernApprovalAccess = false;
        this.renderer.removeClass(document.body, 'nav-active');
    };
    UserAddComponent.prototype.selectAllHandler = function (event) {
        if (event.checked) {
            for (var index = 0; index < this.masterArray.length; index++) {
                this.masterArray[index].view = true;
            }
        }
        else {
            for (var index = 0; index < this.masterArray.length; index++) {
                this.masterArray[index].view = false;
            }
        }
    };
    UserAddComponent.prototype.setStep = function (index) {
        this.step = index;
    };
    UserAddComponent.prototype.nextStep = function () {
        this.step++;
    };
    UserAddComponent.prototype.prevStep = function () {
        this.step--;
    };
    UserAddComponent.prototype.setFocus = function (form) {
        console.log(form.controls);
        for (var key in form.controls) {
            if (form.controls.hasOwnProperty(key)) {
                if (form.controls[key].status == 'INVALID') {
                    if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_7__["isPlatformBrowser"])(this.platformId)) {
                        jquery__WEBPACK_IMPORTED_MODULE_8__('#' + key).focus();
                    }
                    console.log(key);
                    return true;
                }
                console.log(key + " -> " + form.controls[key].status);
            }
        }
    };
    UserAddComponent.prototype.getDesignationList = function () {
        var _this = this;
        this.db.fileData("", "designation/list").subscribe(function (result) {
            console.log(result);
            if (result['status'] == 'Success') {
                _this.desginationList = result['data'];
            }
        });
    };
    UserAddComponent.prototype.filterDesignaton = function (id) {
        console.log(id);
        for (var i = 0; i < this.desginationList.length; i++) {
            if (this.desginationList[i].order < id) {
                this.seniorUserDesignation.push(this.desginationList[i]);
            }
        }
    };
    UserAddComponent.prototype.seniorUserList = function (designationOrder) {
        var _this = this;
        console.log(designationOrder);
        this.loader = true;
        this.db.fetchData({ 'userType': 1, 'currentPage': 1, 'pageSize': 200 }, "user/list").subscribe(function (result) {
            console.log(result);
            _this.loader = false;
            if (result['status'] == 'Success') {
                var userArray = result['data'];
                _this.userList = userArray.filter(function (row) { return row.designation == designationOrder; });
            }
        });
    };
    UserAddComponent.prototype.rolelist = function () {
        var _this = this;
        this.db.fileData('', 'usertype/list').subscribe(function (response) {
            console.log(response);
            _this.rolelists = response['data'];
            var filterrolesales = _this.rolelists.filter(function (x) { return x.userTypeId == 2; });
            _this.rolelistsales1 = filterrolesales[0].roles;
            var filterrolesystem = _this.rolelists.filter(function (x) { return x.userTypeId == 1; });
            _this.rolelistsystem1 = filterrolesystem[0].roles;
            for (var i = 0; i < _this.rolelistsales1.length; i++) {
                if (_this.rolelistsales1[i]['roleId'] != 9) {
                    _this.rolelistsystem1.push(_this.rolelistsales1[i]);
                }
            }
            console.log(_this.rolelistsales1);
            console.log(_this.rolelistsystem1);
        });
    };
    UserAddComponent.prototype.setplaceholder = function () {
        if (this.user_type.role == 6) {
            this.placeholder = "Select RSM";
        }
        else if (this.user_type.role == 7) {
            this.placeholder = "Select ASM";
        }
        else {
            this.placeholder = "Select T. I.";
        }
    };
    UserAddComponent.prototype.roles = function () {
        console.log(this.user_type);
        if (this.user_type.role < 6 || this.user_type.role == 17 || this.user_type.role == 16) {
            this.user_type.type = 1;
        }
        else {
            this.user_type.type = 2;
        }
        if (this.user_type.type == 2) {
            for (var index = 0; index < this.segmentlist.length; index++) {
                this.segmentlist[index].checked = false;
            }
            this.juniorList = [];
            this.territoryList = [];
            this.networkIdsdata = [];
        }
        console.log(this.user_type);
    };
    UserAddComponent.prototype.saveUserSelectedDetail = function () {
        this.selectedTempArr['segmentSelected'] = [];
        for (var index = 0; index < this.segmentlist.length; index++) {
            if (this.segmentlist[index].checked) {
                this.selectedTempArr['segmentSelected'].push(this.segmentlist[index].text);
            }
        }
        this.selectedTempArr['userSelected'] = [];
        for (var index = 0; index < this.juniorList.length; index++) {
            if (this.juniorList[index].checked) {
                this.selectedTempArr['userSelected'].push(this.juniorList[index].userId);
            }
        }
        this.selectedTempArr['territorySelected'] = [];
        for (var index = 0; index < this.territoryList.length; index++) {
            if (this.territoryList[index].check && !this.territoryList[index].disabled) {
                this.selectedTempArr['territorySelected'].push({ territoryID: this.territoryList[index].territoryID, disabled: false });
            }
            if (this.territoryList[index].check && this.territoryList[index].disabled) {
                this.selectedTempArr['territorySelected'].push({ territoryID: this.territoryList[index].territoryID, disabled: true });
            }
        }
        this.selectedTempArr['networkSelected'] = [];
        for (var networkIndex = 0; networkIndex < this.networkIdsdata.length; networkIndex++) {
            if (this.networkIdsdata[networkIndex].checked && !this.networkIdsdata[networkIndex].disabled) {
                this.selectedTempArr['networkSelected'].push({ networkId: this.networkIdsdata[networkIndex].networkId, disabled: false });
            }
            if (this.networkIdsdata[networkIndex].checked && this.networkIdsdata[networkIndex].disabled) {
                this.selectedTempArr['networkSelected'].push({ networkId: this.networkIdsdata[networkIndex].networkId, disabled: true });
            }
        }
        console.log(this.selectedTempArr['segmentSelected']);
        console.log(this.selectedTempArr['territorySelected']);
        console.log(this.selectedTempArr['networkSelected']);
    };
    UserAddComponent.prototype.getSegmentRelatedData = function () {
        this.saveUserSelectedDetail();
        console.log(this.selectedTempArr);
        if (this.selectedTempArr['segmentSelected'].length > 0) {
            if (this.user_type.role == 10) {
                this.getTerritoryData();
            }
            if (this.user_type.role == 8 || this.user_type.role == 7 || this.user_type.role == 6) {
                this.getUserDataToAssign();
                this.getTerritoryData();
            }
        }
        else {
            this.juniorList = [];
            this.territoryList = [];
            this.networkIdsdata = [];
        }
    };
    UserAddComponent.prototype.getUserDataToAssign = function () {
        var _this = this;
        if (this.user_type.role == 8) {
            this.role = parseInt(this.user_type.role) + 2;
        }
        else {
            this.role = parseInt(this.user_type.role) + 1;
        }
        this.loader = true;
        console.log(this.role);
        this.db.fetchData({
            'role': this.role,
            'segments': this.selectedTempArr['segmentSelected'],
            'currentPage': 1,
            'pageSize': 200
        }, 'user/list').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            if (response['status'] == 'Success') {
                _this.juniorList = response['data'];
                var _loop_1 = function (index) {
                    var indexExist = _this.selectedTempArr['userSelected'].findIndex(function (juniorId) { return juniorId == _this.juniorList[index].userId; });
                    if (indexExist != -1) {
                        _this.juniorList[index].checked = true;
                        _this.onUserAssignedHandler(_this.juniorList[index].userId, true);
                    }
                };
                for (var index = 0; index < _this.juniorList.length; index++) {
                    _loop_1(index);
                }
            }
            console.log(_this.juniorList);
        });
    };
    UserAddComponent.prototype.userAssignedDefaultSelectedHandler = function () {
        for (var index = 0; index < this.juniorList.length; index++) {
            if (this.juniorList[index].checked) {
            }
        }
    };
    UserAddComponent.prototype.onUserAssignedHandler = function (userId, isChecked) {
        var _this = this;
        console.log('hello ' + userId + ', ' + isChecked);
        if (isChecked) {
            this.saveUserSelectedDetail();
            this.db.fileData('', 'user/detail/' + userId).subscribe(function (response) {
                console.log(response);
                if (response['status'] == 'Success') {
                    var assignData_1 = response['data']['staffWithJuniors'];
                    var userAssignedTerritories_1 = [];
                    for (var territoryIndex = 0; territoryIndex < assignData_1['userTerritories'].length; territoryIndex++) {
                        userAssignedTerritories_1.push({ territoryID: assignData_1['userTerritories'][territoryIndex]['territoryId'] });
                    }
                    var _loop_2 = function (juIndex1) {
                        var _loop_7 = function (juTerrIndex1) {
                            var isIndexExist = userAssignedTerritories_1.findIndex(function (row) { return row.territoryID == assignData_1['juniors'][juIndex1]['userTerritories'][juTerrIndex1]['territoryId']; });
                            if (isIndexExist == -1) {
                                userAssignedTerritories_1.push({ territoryID: assignData_1['juniors'][juIndex1]['userTerritories'][juTerrIndex1]['territoryId'] });
                            }
                            var _loop_8 = function (juIndex2) {
                                var _loop_9 = function (juTerrIndex2) {
                                    var isIndexExist_1 = userAssignedTerritories_1.findIndex(function (row) { return row.territoryID == assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['userTerritories'][juTerrIndex2]['territoryId']; });
                                    if (isIndexExist_1 == -1) {
                                        userAssignedTerritories_1.push({ territoryID: assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['userTerritories'][juTerrIndex2]['territoryId'] });
                                    }
                                    var _loop_10 = function (juIndex3) {
                                        var _loop_11 = function (juTerrIndex3) {
                                            var isIndexExist_2 = userAssignedTerritories_1.findIndex(function (row) { return row.territoryID == assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['userTerritories'][juTerrIndex3]['territoryId']; });
                                            if (isIndexExist_2 == -1) {
                                                userAssignedTerritories_1.push({ territoryID: assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['userTerritories'][juTerrIndex3]['territoryId'] });
                                            }
                                        };
                                        for (var juTerrIndex3 = 0; juTerrIndex3 < assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['userTerritories'].length; juTerrIndex3++) {
                                            _loop_11(juTerrIndex3);
                                        }
                                    };
                                    for (var juIndex3 = 0; juIndex3 < assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['juniors'].length; juIndex3++) {
                                        _loop_10(juIndex3);
                                    }
                                };
                                for (var juTerrIndex2 = 0; juTerrIndex2 < assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['userTerritories'].length; juTerrIndex2++) {
                                    _loop_9(juTerrIndex2);
                                }
                            };
                            for (var juIndex2 = 0; juIndex2 < assignData_1['juniors'][juIndex1]['juniors'].length; juIndex2++) {
                                _loop_8(juIndex2);
                            }
                        };
                        for (var juTerrIndex1 = 0; juTerrIndex1 < assignData_1['juniors'][juIndex1]['userTerritories'].length; juTerrIndex1++) {
                            _loop_7(juTerrIndex1);
                        }
                    };
                    for (var juIndex1 = 0; juIndex1 < assignData_1['juniors'].length; juIndex1++) {
                        _loop_2(juIndex1);
                    }
                    var userAssignedNetwork_1 = [];
                    for (var networkIndex = 0; networkIndex < assignData_1['salesUserNetworks'].length; networkIndex++) {
                        userAssignedNetwork_1.push({ networkId: assignData_1['salesUserNetworks'][networkIndex]['networkId'] });
                    }
                    var _loop_3 = function (juIndex1) {
                        var _loop_12 = function (juNetIndex1) {
                            var isIndexExist = userAssignedNetwork_1.findIndex(function (row) { return row.networkId == assignData_1['juniors'][juIndex1]['salesUserNetworks'][juNetIndex1]['networkId']; });
                            if (isIndexExist == -1) {
                                userAssignedNetwork_1.push({ networkId: assignData_1['juniors'][juIndex1]['salesUserNetworks'][juNetIndex1]['networkId'] });
                            }
                            var _loop_13 = function (juIndex2) {
                                var _loop_14 = function (juNetIndex2) {
                                    var isIndexExist_3 = userAssignedNetwork_1.findIndex(function (row) { return row.networkId == assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['salesUserNetworks'][juNetIndex2]['networkId']; });
                                    if (isIndexExist_3 == -1) {
                                        userAssignedNetwork_1.push({ networkId: assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['salesUserNetworks'][juNetIndex2]['networkId'] });
                                    }
                                    var _loop_15 = function (juIndex3) {
                                        var _loop_16 = function (juNetIndex3) {
                                            var isIndexExist_4 = userAssignedNetwork_1.findIndex(function (row) { return row.networkId == assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['salesUserNetworks'][juNetIndex3]['networkId']; });
                                            if (isIndexExist_4 == -1) {
                                                userAssignedNetwork_1.push({ networkId: assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['salesUserNetworks'][juNetIndex3]['networkId'] });
                                            }
                                        };
                                        for (var juNetIndex3 = 0; juNetIndex3 < assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['juniors'][juIndex3]['salesUserNetworks'].length; juNetIndex3++) {
                                            _loop_16(juNetIndex3);
                                        }
                                    };
                                    for (var juIndex3 = 0; juIndex3 < assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['juniors'].length; juIndex3++) {
                                        _loop_15(juIndex3);
                                    }
                                };
                                for (var juNetIndex2 = 0; juNetIndex2 < assignData_1['juniors'][juIndex1]['juniors'][juIndex2]['salesUserNetworks'].length; juNetIndex2++) {
                                    _loop_14(juNetIndex2);
                                }
                            };
                            for (var juIndex2 = 0; juIndex2 < assignData_1['juniors'][juIndex1]['juniors'].length; juIndex2++) {
                                _loop_13(juIndex2);
                            }
                        };
                        for (var juNetIndex1 = 0; juNetIndex1 < assignData_1['juniors'][juIndex1]['salesUserNetworks'].length; juNetIndex1++) {
                            _loop_12(juNetIndex1);
                        }
                    };
                    for (var juIndex1 = 0; juIndex1 < assignData_1['juniors'].length; juIndex1++) {
                        _loop_3(juIndex1);
                    }
                    console.log(userAssignedTerritories_1);
                    console.log(userAssignedNetwork_1);
                    var _loop_4 = function (index) {
                        var isTerrIndexExist = _this.selectedTempArr['territorySelected'].findIndex(function (row) { return row.territoryID == userAssignedTerritories_1[index].territoryID; });
                        if (isTerrIndexExist == -1) {
                            _this.selectedTempArr['territorySelected'].push({ territoryID: userAssignedTerritories_1[index].territoryID, disabled: true });
                        }
                        else {
                            _this.selectedTempArr['territorySelected'][isTerrIndexExist].disabled = true;
                        }
                    };
                    for (var index = 0; index < userAssignedTerritories_1.length; index++) {
                        _loop_4(index);
                    }
                    var _loop_5 = function (index) {
                        var isNetworkIndexExist = _this.selectedTempArr['networkSelected'].findIndex(function (row) { return row.networkId == userAssignedNetwork_1[index].networkId; });
                        if (isNetworkIndexExist == -1) {
                            _this.selectedTempArr['networkSelected'].push({ networkId: userAssignedNetwork_1[index].networkId, disabled: true });
                        }
                        else {
                            _this.selectedTempArr['networkSelected'][isNetworkIndexExist]['disabled'] = true;
                        }
                    };
                    for (var index = 0; index < userAssignedNetwork_1.length; index++) {
                        _loop_5(index);
                    }
                    console.log(_this.selectedTempArr['networkSelected']);
                    var _loop_6 = function (territoryIndex) {
                        var isExist = _this.selectedTempArr['territorySelected'].findIndex(function (row) { return row.territoryID == _this.territoryList[territoryIndex].territoryID; });
                        if (isExist != -1) {
                            _this.territoryList[territoryIndex].check = true;
                            _this.territoryList[territoryIndex].disabled = _this.selectedTempArr['territorySelected'][isExist].disabled;
                            _this.getTerritoryNetwork(_this.territoryList[territoryIndex].territoryID, true);
                        }
                    };
                    for (var territoryIndex = 0; territoryIndex < _this.territoryList.length; territoryIndex++) {
                        _loop_6(territoryIndex);
                    }
                }
            });
        }
        else {
            for (var index = 0; index < this.territoryList.length; index++) {
                this.territoryList[index].check = false;
                this.territoryList[index].disabled = false;
            }
            this.getSegmentRelatedData();
        }
    };
    UserAddComponent.prototype.getTerritoryData = function () {
        var _this = this;
        this.networkIdsdata = [];
        this.loader = true;
        this.db.fetchData({ 'segments': this.selectedTempArr['segmentSelected'] }, 'territory/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['status'] == 'Success') {
                _this.territoryList = response['data'];
                var _loop_17 = function (index) {
                    var indexExist = _this.selectedTempArr['territorySelected'].findIndex(function (row) { return row.territoryID == _this.territoryList[index].territoryID; });
                    if (indexExist != -1) {
                        _this.territoryList[index].check = true;
                        _this.territoryList[index].disabled = _this.selectedTempArr['territorySelected'][indexExist].disabled;
                        _this.getTerritoryNetwork(_this.territoryList.territoryID, true);
                    }
                };
                for (var index = 0; index < _this.territoryList.length; index++) {
                    _loop_17(index);
                }
            }
            console.log(_this.territoryList);
        });
    };
    UserAddComponent.prototype.getTerritoryNetwork = function (id, isChecked) {
        var _this = this;
        console.log(id, isChecked);
        // this.saveUserSelectedDetail();
        console.log(this.selectedTempArr);
        if (isChecked) {
            this.loader = true;
            this.db.fileData('', 'territory/detail/' + id).subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                if (!response['data']['territoryNetworks']) {
                    response['data']['territoryNetworks'] = [];
                }
                var _loop_18 = function (territoryIndex) {
                    var networkSegmentMatch = false;
                    var _loop_20 = function (segmentIndex) {
                        console.log(response['data']['territoryNetworks'][territoryIndex].networkSegments);
                        console.log(_this.selectedTempArr);
                        var segmentExistIndex = _this.selectedTempArr['segmentSelected'].findIndex(function (segment) { return segment == response['data']['territoryNetworks'][territoryIndex].networkSegments[segmentIndex].segment; });
                        if (segmentExistIndex != -1) {
                            networkSegmentMatch = true;
                        }
                    };
                    for (var segmentIndex = 0; segmentIndex < response['data']['territoryNetworks'][territoryIndex].networkSegments.length; segmentIndex++) {
                        _loop_20(segmentIndex);
                    }
                    if (networkSegmentMatch) {
                        var indexExist = _this.networkIdsdata.findIndex(function (row) { return row.networkId == response['data']['territoryNetworks'][territoryIndex].networkId; });
                        if (indexExist == -1) {
                            response['data']['territoryNetworks'][territoryIndex].territoryArr = [];
                            response['data']['territoryNetworks'][territoryIndex].territoryArr.push(response['data'].territoryID);
                            _this.networkIdsdata.push(response['data']['territoryNetworks'][territoryIndex]);
                        }
                        else {
                            _this.networkIdsdata[indexExist].territoryArr.push(response['data'].territoryID);
                        }
                    }
                };
                for (var territoryIndex = 0; territoryIndex < response['data']['territoryNetworks'].length; territoryIndex++) {
                    _loop_18(territoryIndex);
                }
                var _loop_19 = function (networkIndex) {
                    var isIndexExist = _this.selectedTempArr['networkSelected'].findIndex(function (row) { return row.networkId == _this.networkIdsdata[networkIndex].networkId; });
                    if (isIndexExist != -1) {
                        _this.networkIdsdata[networkIndex].checked = true;
                        _this.networkIdsdata[networkIndex].disabled = _this.selectedTempArr['networkSelected'][isIndexExist].disabled;
                    }
                };
                for (var networkIndex = 0; networkIndex < _this.networkIdsdata.length; networkIndex++) {
                    _loop_19(networkIndex);
                }
                console.log(_this.networkIdsdata);
            });
        }
        else {
            for (var networkIndex = 0; networkIndex < this.networkIdsdata.length; networkIndex++) {
                var indexExist = this.networkIdsdata[networkIndex].territoryArr.findIndex(function (territoryId) { return territoryId == id; });
                if (indexExist != -1) {
                    if (this.networkIdsdata[networkIndex].territoryArr.length > 1) {
                        var territoryIndex = this.networkIdsdata[networkIndex].territoryArr.findIndex(function (val) { return val == id; });
                        this.networkIdsdata[networkIndex].territoryArr.splice(territoryIndex, 1);
                    }
                    else {
                        this.networkIdsdata.splice(networkIndex, 1);
                    }
                }
            }
        }
    };
    ///////////segment list start////////////
    UserAddComponent.prototype.getAllSegment = function () {
        var _this = this;
        this.db.fileData('', 'segment/list/').subscribe(function (response) {
            console.log(response);
            _this.segmentlist = response['data'];
        });
    };
    UserAddComponent.prototype.get_state = function () {
        var _this = this;
        this.loader = true;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.statelist = response['data'];
            _this.tmpstateList = _this.statelist;
        });
    };
    UserAddComponent.prototype.get_districtOffice = function () {
        var _this = this;
        this.sales_data.districtOffice = '';
        this.sales_data.cityOffice = '';
        this.sales_data.pinOffice = '';
        if (this.user_type.type == '2') {
            this.loader = true;
            this.st = Array(this.sales_data.statef);
            this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.districtlistOffice = response['data'];
                _this.districtOffice1 = _this.districtlistOffice[0].distrcits;
                _this.tmpofficedistrict = _this.districtOffice1;
            });
        }
    };
    UserAddComponent.prototype.get_district = function () {
        var _this = this;
        if (this.user_type.type == '2') {
            this.loader = true;
            this.sales_data.district = '';
            this.sales_data.pin = '';
            this.sales_data.city = '';
            this.st = Array(this.sales_data.state);
            this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
                _this.loader = false;
                console.log(response);
                _this.districtlist = response['data'];
                _this.district1 = _this.districtlist[0].distrcits;
                _this.tmpdistrictList = _this.district1;
            });
        }
        else {
            this.loader = true;
            this.system_data.district = '';
            this.system_data.pin = '';
            this.system_data.city = '';
            console.log(this.system_data.state);
            this.st = Array(this.system_data.state);
            this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.districtlist = response['data'];
                _this.district1 = _this.districtlist[0].distrcits;
                _this.tmpdistrictList = _this.district1;
            });
        }
        console.log(this.tmpdistrictList);
    };
    UserAddComponent.prototype.get_cityOffice = function () {
        var _this = this;
        this.loader = true;
        this.sales_data.cityOffice = '';
        this.sales_data.pinOffice = '';
        console.log(this.sales_data.statef, this.sales_data.districtOffice);
        console.log(this.sales_data.districtOffice);
        this.db.fetchData(Array({ "stateName": this.sales_data.statef, "distrcits": Array({ "districtName": this.sales_data.districtOffice }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.citylistOffice = response['data'];
            _this.districtsOffice1 = _this.citylistOffice[0].distrcits;
            _this.citiesOffice = _this.districtsOffice1[0].cities;
            _this.tmpofficecitylist = _this.citiesOffice;
            console.log(_this.citiesOffice);
        });
    };
    UserAddComponent.prototype.get_city = function () {
        var _this = this;
        if (this.user_type.type == '2') {
            this.loader = true;
            this.sales_data.city = '';
            this.sales_data.pin = '';
            console.log(this.sales_data.state, this.sales_data.district);
            console.log(this.sales_data.district);
            this.db.fetchData(Array({ "stateName": this.sales_data.state, "distrcits": Array({ "districtName": this.sales_data.district }) }), 'city/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.citylist = response['data'];
                _this.districts1 = _this.citylist[0].distrcits;
                _this.cities = _this.districts1[0].cities;
                _this.tmpcityList = _this.cities;
                console.log(_this.cities);
            });
        }
        else {
            this.loader = true;
            this.system_data.city = '';
            this.system_data.pin = '';
            console.log(this.system_data.state, this.system_data.district);
            console.log(this.system_data.district);
            this.db.fetchData(Array({ "stateName": this.system_data.state, "distrcits": Array({ "districtName": this.system_data.district }) }), 'city/list').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                _this.citylist = response['data'];
                _this.districts1 = _this.citylist[0].distrcits;
                _this.cities = _this.districts1[0].cities;
                _this.tmpcityList = _this.cities;
                console.log(_this.cities);
            });
        }
    };
    UserAddComponent.prototype.get_pincodeOffice = function (masterId) {
        var _this = this;
        this.loader = true;
        this.sales_data.pinOffice = '';
        console.log(this.sales_data.statef, this.sales_data.districtOffice, this.sales_data.cityOffice);
        this.db.fetchData({ "stateMasterIds": [masterId] }, 'city/pincodes').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            // this.citylistOffice=response['data'];
            // this.districtsOffice2=this.citylistOffice[0].distrcits;
            // this.citiesOffice1=this.districtsOffice2[0].cities;
            // let filterpincodeOffice= this.citiesOffice1.filter(x => x.cityName==this.sales_data.cityOffice);
            _this.areasOffice = response['data'][0]['pinCodes'];
            _this.tmpofficePinlist = _this.areasOffice;
            console.log(_this.areasOffice);
            console.log(_this.citiesOffice1);
        });
    };
    UserAddComponent.prototype.get_pincode = function (masterId) {
        var _this = this;
        if (this.user_type.type == '2') {
            this.loader = true;
            this.sales_data.pin = '';
            console.log(this.sales_data.state, this.sales_data.district, this.sales_data.city);
            this.db.fetchData({ "stateMasterIds": [masterId] }, 'city/pincodes').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                // this.citylist=response['data'];
                // this.districts2=this.citylist[0].distrcits;
                // this.cities1=this.districts2[0].cities;
                _this.areas = response['data'][0]['pinCodes'];
                _this.tmpPinList = _this.areas;
                console.log(_this.tmpPinList);
                // console.log(this.cities1);
            });
        }
        else {
            this.loader = true;
            this.system_data.pin = '';
            console.log(this.system_data.state, this.system_data.district, this.system_data.city);
            this.db.fetchData({ "stateMasterIds": [masterId] }, 'city/pincodes').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                // this.citylist=response['data'];
                _this.areas = response['data'][0]['pinCodes'];
                _this.tmpPinList = _this.areas;
                console.log(_this.areas);
                // console.log(this.cities1);
            });
        }
    };
    UserAddComponent.prototype.onSubmit = function () {
        var _this = this;
        this.sales_data.stateOffice = this.sales_data.statef;
        console.log(this.sales_data.segment);
        console.log(this.staffSegments);
        if (this.user_type.type == '2') {
            var segmentArr = [];
            for (var i = 0; i < this.segmentlist.length; i++) {
                if (this.segmentlist[i].checked) {
                    segmentArr.push({ "segmentCode": this.segmentlist[i].text, "segment": this.segmentlist[i].text });
                }
            }
            var saleHierarchy = [];
            for (var index = 0; index < this.juniorList.length; index++) {
                if (this.juniorList[index].checked) {
                    saleHierarchy.push({ 'juniorUserID': this.juniorList[index].userId });
                }
            }
            var territorySelected = [];
            if (this.territoryList && this.territoryList.length) {
                for (var index = 0; index < this.territoryList.length; index++) {
                    if (this.territoryList[index].check && !this.territoryList[index].disabled) {
                        territorySelected.push(this.territoryList[index]['territoryID']);
                    }
                }
            }
            var networks = [];
            for (var index = 0; index < this.networkIdsdata.length; index++) {
                if (this.networkIdsdata[index].checked && !this.networkIdsdata[index].disabled) {
                    networks.push({ networkId: this.networkIdsdata[index].networkId, territoryId: this.networkIdsdata[index].territoryId });
                }
            }
            this.sales_data.staffSegments = segmentArr;
            this.sales_data.saleHierarchies = saleHierarchy;
            this.sales_data.territories = territorySelected;
            this.sales_data.networks = networks;
            console.log(this.networkIdsdata);
            this.sales_data.userType = this.user_type.type,
                this.sales_data.role = this.user_type.role,
                this.sales_data.country = "India";
            this.sales_data.userType = 2;
            this.sales_data.totalTarget = this.sales_data.target;
            this.sales_data.document = [];
            console.log(this.sales_data);
            console.log(this.user_type.leaveApprover);
            this.sales_data.designation = this.user_type.designation;
            console.log(this.sales_data);
            this.loader = true;
            this.db.fetchData(this.sales_data, 'user/add').subscribe(function (response) {
                console.log(response);
                _this.loader = false;
                console.log(response);
                _this.staffSegments = [];
                _this.message = response['message'];
                if (_this.message == "User added successfully") {
                    _this.toast.openSucess('User added successfully', '');
                    _this.router.navigate(['/sale-user-list']);
                }
                else {
                    _this.alrt.alertWarning(_this.message);
                    // this.toast.openError('Email or Phone Can Not Be Duplicate or Invalid Please Try Again!!','');
                }
            });
        }
        else {
            this.system_data.userType = this.user_type.type,
                this.system_data.role = this.user_type.role,
                this.system_data.country = "India";
            this.system_data.document = [];
            this.sales_data.staffSegments = [];
            this.system_data.designation = this.user_type.designation;
            if (this.user_type.leaveApprover) {
                this.system_data.leaveApprover = this.user_type.leaveApprover;
            }
            console.log(this.system_data);
            var moduleAccesses_1 = [];
            for (var index = 0; index < this.moduleData.length; index++) {
                if (this.moduleData[index].view) {
                    if (!this.moduleData[index].moduleRights[0].checked) {
                        this.moduleData[index].moduleRights[0].checked = false;
                    }
                    if (!this.moduleData[index].moduleRights[1].checked) {
                        this.moduleData[index].moduleRights[1].checked = false;
                    }
                    if (!this.moduleData[index].moduleRights[2].checked) {
                        this.moduleData[index].moduleRights[2].checked = false;
                    }
                    moduleAccesses_1.push({
                        'moduleId': this.moduleData[index].moduleId,
                        'module': this.moduleData[index].moduleName,
                        'show': true,
                        'add': this.moduleData[index].moduleRights[0].checked,
                        'edit': this.moduleData[index].moduleRights[1].checked,
                        'delete': this.moduleData[index].moduleRights[2].checked,
                    });
                }
            }
            for (var index = 0; index < this.masterArray.length; index++) {
                if (this.masterArray[index].view) {
                    if (!this.masterArray[index].moduleRights[0].checked) {
                        this.masterArray[index].moduleRights[0].checked = false;
                    }
                    if (!this.masterArray[index].moduleRights[1].checked) {
                        this.masterArray[index].moduleRights[1].checked = false;
                    }
                    if (!this.masterArray[index].moduleRights[2].checked) {
                        this.masterArray[index].moduleRights[2].checked = false;
                    }
                    moduleAccesses_1.push({
                        'moduleId': this.masterArray[index].moduleId,
                        'module': this.masterArray[index].moduleName,
                        'show': true,
                        'add': this.masterArray[index].moduleRights[0].checked,
                        'edit': this.masterArray[index].moduleRights[1].checked,
                        'delete': this.masterArray[index].moduleRights[2].checked,
                    });
                }
            }
            console.log(moduleAccesses_1);
            if (this.user_type.role == '1' && moduleAccesses_1.length == 0) {
                this.isModuleSelected = false;
                return false;
            }
            else {
                this.isModuleSelected = true;
                ;
            }
            console.log(moduleAccesses_1);
            this.loader = true;
            this.db.fetchData(this.system_data, 'user/add').subscribe(function (response) {
                console.log(response);
                _this.message = response['message'];
                _this.staffSegments = [];
                if (_this.message == "User added successfully") {
                    if (_this.user_type.type == '1') {
                        var accessData = {};
                        accessData['userId'] = response['data'];
                        accessData['moduleAccesses'] = moduleAccesses_1;
                        console.log(accessData);
                        _this.db.fetchData(accessData, 'admin/saveaccess').subscribe(function (responseData) {
                            console.log(responseData);
                            _this.loader = false;
                            _this.message = responseData['message'];
                            _this.toast.openSucess('User added successfully', '');
                            _this.router.navigate(['/system-user-list']);
                        });
                    }
                    else {
                        _this.loader = false;
                        _this.toast.openSucess('User added successfully', '');
                        _this.router.navigate(['/system-user-list']);
                    }
                }
                else {
                    _this.loader = false;
                    _this.alrt.alertWarning(_this.message);
                }
            });
        }
    };
    UserAddComponent.prototype.toggleterritory = function (key, action) {
        console.log(action);
        console.log(key);
        if (action == 'open') {
            this.active[key] = true;
        }
        if (action == 'close') {
            this.active[key] = false;
        }
        console.log(this.active);
    };
    UserAddComponent.prototype.userActionHandler = function (userId, isChecked) {
        var _this = this;
        for (var index = 0; index < this.juniorList.length; index++) {
            if (this.juniorList[index].checked) {
                this.loader = true;
                console.log(this.juniorList[index].userId);
                this.db.fileData(this.juniorList[index].userId, 'user/detail/').subscribe(function (response) {
                    console.log(response);
                    _this.loader = false;
                    if (response) {
                        _this.users_territory = response['data']['userTerritories'];
                        console.log(_this.users_territory);
                        for (var i = 0; i < _this.territoryList.length; i++) {
                            for (var j = 0; j < _this.users_territory.length; j++) {
                                if (_this.territoryList[i]['territoryName'] == _this.users_territory[j]['territoryName']) {
                                    _this.territoryList[i].check = true;
                                    console.log(_this.territoryList);
                                }
                            }
                        }
                    }
                    ;
                });
            }
        }
    };
    UserAddComponent.prototype.get_user_territory = function (userId) {
        var _this = this;
        this.loader = true;
        console.log(userId);
        this.db.fileData(userId, 'user/detail/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response) {
                _this.users_territory = response['data']['userTerritories'];
                console.log(_this.users_territory);
                for (var i = 0; i < _this.territoryList.length; i++) {
                    for (var j = 0; j < _this.users_territory.length; j++) {
                        if (_this.territoryList[i]['territoryName'] == _this.users_territory[j]['territoryName']) {
                            _this.territoryList[i].check = true;
                            console.log(_this.territoryList);
                        }
                    }
                }
            }
            ;
        });
    };
    UserAddComponent.prototype.state_array_filter = function (state) {
        this.tmpstateList = [];
        var value = state.toUpperCase();
        this.tmpstateList = [];
        for (var i = 0; i < this.statelist.length; i++) {
            if (this.statelist[i].toUpperCase().search(value) !== -1) {
                this.tmpstateList.push(this.statelist[i]);
            }
        }
        console.log(this.tmpstateList);
    };
    UserAddComponent.prototype.district_array_filter = function (district) {
        this.district1 = [];
        var value = district.toUpperCase();
        for (var i = 0; i < this.tmpdistrictList.length; i++) {
            if (this.tmpdistrictList[i]['districtName'].toUpperCase().search(value) !== -1) {
                this.district1.push(this.tmpdistrictList[i]);
            }
        }
    };
    UserAddComponent.prototype.city_array_filter = function (city) {
        console.log(city);
        console.log(this.tmpcityList);
        this.cities = [];
        var value = city.toUpperCase();
        for (var i = 0; i < this.tmpcityList.length; i++) {
            if (this.tmpcityList[i]['cityName'].toUpperCase().search(value) !== -1) {
                this.cities.push(this.tmpcityList[i]);
            }
        }
    };
    UserAddComponent.prototype.pin_array_filter = function (pin) {
        this.areas = [];
        console.log(this.tmpPinList);
        var value = pin;
        console.log(value);
        for (var i = 0; i < this.tmpPinList.length; i++) {
            if (this.tmpPinList[i].toString().search(value) !== -1) {
                this.areas.push(this.tmpPinList[i]);
            }
        }
    };
    UserAddComponent.prototype.officedistrict_array_filter = function (district) {
        this.districtOffice1 = [];
        var value = district.toUpperCase();
        for (var i = 0; i < this.tmpofficedistrict.length; i++) {
            if (this.tmpofficedistrict[i]['districtName'].toUpperCase().search(value) !== -1) {
                this.districtOffice1.push(this.tmpofficedistrict[i]);
            }
        }
    };
    UserAddComponent.prototype.officecity_array_filter = function (city) {
        console.log(city);
        console.log(this.tmpofficecitylist);
        this.citiesOffice = [];
        var value = city.toUpperCase();
        for (var i = 0; i < this.tmpofficecitylist.length; i++) {
            if (this.tmpofficecitylist[i]['cityName'].toUpperCase().search(value) !== -1) {
                this.citiesOffice.push(this.tmpofficecitylist[i]);
            }
        }
    };
    UserAddComponent.prototype.officepin_array_filter = function (pin) {
        this.areasOffice = [];
        console.log(this.tmpPinList);
        var value = pin;
        console.log(value);
        for (var i = 0; i < this.tmpofficePinlist.length; i++) {
            if (this.tmpofficePinlist[i].toString().search(value) !== -1) {
                this.areasOffice.push(this.tmpofficePinlist[i]);
            }
        }
    };
    UserAddComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    UserAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-user-add',
            template: __webpack_require__(/*! ./user-add.component.html */ "./src/app/user/user-add/user-add.component.html"),
            animations: [Object(_router_animation_router_animation_component__WEBPACK_IMPORTED_MODULE_2__["slideToTop"])()]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"],
            src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
            src_app_dialog__WEBPACK_IMPORTED_MODULE_6__["DialogComponent"],
            Object])
    ], UserAddComponent);
    return UserAddComponent;
}());



/***/ }),

/***/ "./src/app/vendor/qr-code-detail/qr-code-detail.component.html":
/*!*********************************************************************!*\
  !*** ./src/app/vendor/qr-code-detail/qr-code-detail.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/vendor-detail\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>Ritesh Pvt Ltd.</h2>\n        <p class=\"light\">Vendor</p>\n      </div>\n    </div>\n    \n  </div>\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"qr-collaps\">\n            <mat-accordion>\n              <mat-expansion-panel class=\"first-panel\">\n                <mat-expansion-panel-header class=\"first-header\">\n                  <mat-panel-title>\n                    DPNAHO0010 - C.B.R 250 NON ABS TYPE- R (3)\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"first-step\">\n                  <mat-expansion-panel class=\"second-panel second-bg\">\n                    <mat-expansion-panel-header class=\"second-header\">\n                      <div class=\"head-tab\">\n                        <ul>\n                          <li>\n                            <p>Section</p>\n                            <p>Master (1)</p>\n                          </li>\n                          <li>\n                            <p>Serial No</p>\n                            <p>#ABCD12345678910</p>\n                          </li>\n                          <li>\n                            <p>QR Code</p>\n                            <img src=\"assets/img/qr.svg\">\n                          </li>\n                          <li>\n                            <p>Print</p>\n                            <img src=\"assets/img/printer.svg\">\n                          </li>\n                        </ul>\n                      </div>\n                    </mat-expansion-panel-header>\n                    <div class=\"panel-body\">\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (1)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (2)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (3)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                    </div>\n                  </mat-expansion-panel>\n                  <mat-expansion-panel class=\"second-panel second-bg\">\n                    <mat-expansion-panel-header class=\"second-header\">\n                      <div class=\"head-tab\">\n                        <ul>\n                          <li>\n                            <p>Section</p>\n                            <p>Master (1)</p>\n                          </li>\n                          <li>\n                            <p>Serial No</p>\n                            <p>#ABCD12345678910</p>\n                          </li>\n                          <li>\n                            <p>QR Code</p>\n                            <img src=\"assets/img/qr.svg\">\n                          </li>\n                          <li>\n                            <p>Print</p>\n                            <img src=\"assets/img/printer.svg\">\n                          </li>\n                        </ul>\n                      </div>\n                    </mat-expansion-panel-header>\n                    <div class=\"panel-body\">\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (1)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (2)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                    </div>\n                  </mat-expansion-panel>\n                  <mat-expansion-panel class=\"second-panel second-bg\">\n                    <mat-expansion-panel-header class=\"second-header\">\n                      <div class=\"head-tab\">\n                        <ul>\n                          <li>\n                            <p>Section</p>\n                            <p>Master (1)</p>\n                          </li>\n                          <li>\n                            <p>Serial No</p>\n                            <p>#ABCD12345678910</p>\n                          </li>\n                          <li>\n                            <p>QR Code</p>\n                            <img src=\"assets/img/qr.svg\">\n                          </li>\n                          <li>\n                            <p>Print</p>\n                            <img src=\"assets/img/printer.svg\">\n                          </li>\n                        </ul>\n                      </div>\n                    </mat-expansion-panel-header>\n                    <div class=\"panel-body\">\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (2)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Master (1)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                    </div>\n                  </mat-expansion-panel>\n                </div>    \n              </mat-expansion-panel>\n              \n              <mat-expansion-panel class=\"first-panel\">\n                <mat-expansion-panel-header class=\"first-header\">\n                  <mat-panel-title>\n                    DPNAHO0010 - C.B.R 250 NON ABS TYPE- R (3)\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"first-step\">\n                  <mat-expansion-panel class=\"second-panel second-bg\">\n                    <mat-expansion-panel-header class=\"second-header\">\n                      <div class=\"head-tab\">\n                        <ul>\n                          <li>\n                            <p>Section</p>\n                            <p>Master (1)</p>\n                          </li>\n                          <li>\n                            <p>Serial No</p>\n                            <p>#ABCD12345678910</p>\n                          </li>\n                          <li>\n                            <p>QR Code</p>\n                            <img src=\"assets/img/qr.svg\">\n                          </li>\n                          <li>\n                            <p>Print</p>\n                            <img src=\"assets/img/printer.svg\">\n                          </li>\n                        </ul>\n                      </div>\n                    </mat-expansion-panel-header>\n                    <div class=\"panel-body\">\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (1)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (2)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (3)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                    </div>\n                  </mat-expansion-panel>\n                  <mat-expansion-panel class=\"second-panel second-bg\">\n                    <mat-expansion-panel-header class=\"second-header\">\n                      <div class=\"head-tab\">\n                        <ul>\n                          <li>\n                            <p>Section</p>\n                            <p>Master (1)</p>\n                          </li>\n                          <li>\n                            <p>Serial No</p>\n                            <p>#ABCD12345678910</p>\n                          </li>\n                          <li>\n                            <p>QR Code</p>\n                            <img src=\"assets/img/qr.svg\">\n                          </li>\n                          <li>\n                            <p>Print</p>\n                            <img src=\"assets/img/printer.svg\">\n                          </li>\n                        </ul>\n                      </div>\n                    </mat-expansion-panel-header>\n                    <div class=\"panel-body\">\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (1)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (2)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                    </div>\n                  </mat-expansion-panel>\n                  <mat-expansion-panel class=\"second-panel second-bg\">\n                    <mat-expansion-panel-header class=\"second-header\">\n                      <div class=\"head-tab\">\n                        <ul>\n                          <li>\n                            <p>Section</p>\n                            <p>Master (1)</p>\n                          </li>\n                          <li>\n                            <p>Serial No</p>\n                            <p>#ABCD12345678910</p>\n                          </li>\n                          <li>\n                            <p>QR Code</p>\n                            <img src=\"assets/img/qr.svg\">\n                          </li>\n                          <li>\n                            <p>Print</p>\n                            <img src=\"assets/img/printer.svg\">\n                          </li>\n                        </ul>\n                      </div>\n                    </mat-expansion-panel-header>\n                    <div class=\"panel-body\">\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (2)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Master (1)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                    </div>\n                  </mat-expansion-panel>\n                </div>    \n              </mat-expansion-panel>\n              \n              <mat-expansion-panel class=\"first-panel\">\n                <mat-expansion-panel-header class=\"first-header\">\n                  <mat-panel-title>\n                    DPNAHO0010 - C.B.R 250 NON ABS TYPE- R (3)\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"first-step\">\n                  <mat-expansion-panel class=\"second-panel second-bg\">\n                    <mat-expansion-panel-header class=\"second-header\">\n                      <div class=\"head-tab\">\n                        <ul>\n                          <li>\n                            <p>Section</p>\n                            <p>Master (1)</p>\n                          </li>\n                          <li>\n                            <p>Serial No</p>\n                            <p>#ABCD12345678910</p>\n                          </li>\n                          <li>\n                            <p>QR Code</p>\n                            <img src=\"assets/img/qr.svg\">\n                          </li>\n                          <li>\n                            <p>Print</p>\n                            <img src=\"assets/img/printer.svg\">\n                          </li>\n                        </ul>\n                      </div>\n                    </mat-expansion-panel-header>\n                    <div class=\"panel-body\">\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (1)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (2)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (3)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                    </div>\n                  </mat-expansion-panel>\n                  <mat-expansion-panel class=\"second-panel second-bg\">\n                    <mat-expansion-panel-header class=\"second-header\">\n                      <div class=\"head-tab\">\n                        <ul>\n                          <li>\n                            <p>Section</p>\n                            <p>Master (1)</p>\n                          </li>\n                          <li>\n                            <p>Serial No</p>\n                            <p>#ABCD12345678910</p>\n                          </li>\n                          <li>\n                            <p>QR Code</p>\n                            <img src=\"assets/img/qr.svg\">\n                          </li>\n                          <li>\n                            <p>Print</p>\n                            <img src=\"assets/img/printer.svg\">\n                          </li>\n                        </ul>\n                      </div>\n                    </mat-expansion-panel-header>\n                    <div class=\"panel-body\">\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (1)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (2)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                    </div>\n                  </mat-expansion-panel>\n                  <mat-expansion-panel class=\"second-panel second-bg\">\n                    <mat-expansion-panel-header class=\"second-header\">\n                      <div class=\"head-tab\">\n                        <ul>\n                          <li>\n                            <p>Section</p>\n                            <p>Master (1)</p>\n                          </li>\n                          <li>\n                            <p>Serial No</p>\n                            <p>#ABCD12345678910</p>\n                          </li>\n                          <li>\n                            <p>QR Code</p>\n                            <img src=\"assets/img/qr.svg\">\n                          </li>\n                          <li>\n                            <p>Print</p>\n                            <img src=\"assets/img/printer.svg\">\n                          </li>\n                        </ul>\n                      </div>\n                    </mat-expansion-panel-header>\n                    <div class=\"panel-body\">\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Secondary (2)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                      <mat-expansion-panel class=\"second-panel third-panel second-bg\">\n                        <mat-expansion-panel-header class=\"second-header\">\n                          <div class=\"head-tab\">\n                            <ul>\n                              <li>\n                                <p>Section</p>\n                                <p>Master (1)</p>\n                              </li>\n                              <li>\n                                <p>Serial No</p>\n                                <p>#ABCD12345678910</p>\n                              </li>\n                              <li>\n                                <p>QR Code</p>\n                                <img src=\"assets/img/qr.svg\">\n                              </li>\n                              <li>\n                                <p>Print</p>\n                                <img src=\"assets/img/printer.svg\">\n                              </li>\n                            </ul>\n                          </div>\n                        </mat-expansion-panel-header>\n                        <div class=\"panel-body\">\n                          <div class=\"table-box left-right-24\">\n                            <div class=\"heading\">\n                              <h2>Primary</h2>\n                              <a class=\"print-btn\" mat-button>Print All</a>\n                            </div>\n                            <div class=\"cs-table\">\n                              <div class=\"table-head\">\n                                <table> \n                                  <tr >\n                                    <th class=\"w80\">S No.</th>\n                                    <th class=\"w250\">Serial No.</th>  \n                                    <th class=\"w150\">QR Code</th>  \n                                    <th>Print</th>  \n                                  </tr>\n                                </table>\n                              </div>\n                              \n                              <div class=\"table-container\">\n                                <div class=\"table-content none-shadow\">\n                                  <table>\n                                    <tr>\n                                      <td class=\"w80\">1</td>\n                                      <td class=\"w250\">#ABCD12345678910</td>  \n                                      <td class=\"w150\"><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                    <tr>\n                                      <td>2</td>\n                                      <td>#ABCD12345678910</td>  \n                                      <td><img src=\"assets/img/qr.svg\" class=\"h20\"></td>\n                                      <td>\n                                        <a class=\"link-btn\"  mat-button>Print</a>\n                                      </td> \n                                    </tr>\n                                  </table>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-expansion-panel>\n                    </div>\n                  </mat-expansion-panel>\n                </div>    \n              </mat-expansion-panel>\n\n            </mat-accordion>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/vendor/qr-code-detail/qr-code-detail.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/vendor/qr-code-detail/qr-code-detail.component.ts ***!
  \*******************************************************************/
/*! exports provided: QrCodeDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QrCodeDetailComponent", function() { return QrCodeDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var QrCodeDetailComponent = /** @class */ (function () {
    function QrCodeDetailComponent() {
        this.step = 0;
        this.loader = true;
    }
    QrCodeDetailComponent.prototype.setStep = function (index) {
        this.step = index;
    };
    QrCodeDetailComponent.prototype.nextStep = function () {
        this.step++;
    };
    QrCodeDetailComponent.prototype.prevStep = function () {
        this.step--;
    };
    QrCodeDetailComponent.prototype.ngOnInit = function () {
    };
    QrCodeDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-qr-code-detail',
            template: __webpack_require__(/*! ./qr-code-detail.component.html */ "./src/app/vendor/qr-code-detail/qr-code-detail.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], QrCodeDetailComponent);
    return QrCodeDetailComponent;
}());



/***/ }),

/***/ "./src/app/vendor/vendor-add/vendor-add.component.html":
/*!*************************************************************!*\
  !*** ./src/app/vendor/vendor-add/vendor-add.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form #f=\"ngForm\" (ngSubmit)=\"f.valid && onSubmit()\">\n<div class=\"main-container\">\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/vendor.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Vendor</h2>\n        <p>Add New Vendor</p>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"container-outer\">\n      <div class=\"container\" >\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0\">\n              <div class=\"cs-heading\">\n                <h2>BASIC INFORMATION</h2>\n              </div>\n              <div class=\"from-fields\">\n                <div class=\"row\">\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\" >\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Company Name\" id=\"vendorName\" #vendorName=\"ngModel\" name=\"vendorName\" #vendorName=\"ngModel\" [ngClass]=\"{'has-error' : vendorName.invalid } \" [(ngModel)]=\"vendor_form.vendorName\" required>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && vendorName.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"vendorName.errors.required\">Vendor Name is required</mat-error>\n                          </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4\">\n                    <div class=\"control-field\" >\n                        <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Vendor Code\" id=\"vendorCode\"  name=\"vendorCode\" #vendorCode=\"ngModel\" [ngClass]=\"{'has-error' : vendorCode.invalid } \" [(ngModel)]=\"vendor_form.vendorCode\" required>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && vendorCode.invalid\" class=\"invalid-feedback\">\n                            <mat-error *ngIf=\"vendorCode.errors.required\">Vendor Code is required</mat-error>\n                          </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4\">\n                      <div class=\"control-field\" >\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                              <input matInput placeholder=\"GSt No Code\" id=\"gstNo\" minlength=\"15\" maxlength=\"15\" min=\"0\" name=\"gstNo\" #gstNo=\"ngModel\" [ngClass]=\"{'has-error' : gstNo.invalid } \" [(ngModel)]=\"vendor_form.gstNo\" required>\n                            </mat-form-field>\n                            <mat-error *ngIf=\"f.submitted && gstNo.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"gstNo.errors.required\">GST No. is required</mat-error>\n                            </mat-error>\n                      </div>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <div class=\"col s4 pr0\">\n                        <div class=\"control-field\" >\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Contact Person\" id=\"contactPersonName\" (keypress)=\"namecheck($event)\" name=\"contactPersonName\" #contactPersonName=\"ngModel\" [ngClass]=\"{'has-error' : contactPersonName.invalid } \" [(ngModel)]=\"vendor_form.contactPersonName\" required>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && contactPersonName.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"contactPersonName.errors.required\">Contact Person is required</mat-error>\n                            </mat-error>\n                        </div>\n                      </div>\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\" >\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Mobile 1\" id=\"mobile1\"  minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" name=\"mobile1\" #mobile1=\"ngModel\" [ngClass]=\"{'has-error' : mobile1.invalid } \" [(ngModel)]=\"vendor_form.mobile1\" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && mobile1.invalid && mobile1.touched\" class=\"invalid-feedback\">\n                        <mat-error >mobile must be 10 digit</mat-error>\n                      </mat-error>\n                      <mat-error *ngIf=\"f.submitted && mobile1.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"mobile1.errors.required\">Mobile No. is required</mat-error>\n                        </mat-error>\n                    </div>\n                  </div>\n                  <div class=\"col s4\">\n                    <div class=\"control-field\" >\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Mobile 2\" id=\"mobile2\"  minlength=\"10\" maxlength=\"10\" min=\"0\" (keypress)=\"MobileNumber($event)\" name=\"mobile2\" #mobile2=\"ngModel\" [ngClass]=\"{'has-error' : mobile2.invalid } \" [(ngModel)]=\"vendor_form.mobile2\" >\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && mobile2.invalid && mobile2.touched\" class=\"invalid-feedback\">\n                        <mat-error >mobile must be 10 digit</mat-error>\n                      </mat-error>\n                    </div>\n                  </div>\n                  \n                </div>\n                \n                <div class=\"row\">\n                    <div class=\"col s4 pr0\">\n                        <div class=\"control-field\" >\n                          <mat-form-field class=\"cs-input infix-bodr8\">\n                            <input matInput placeholder=\"Email\" id=\"emailid\"  name=\"emailid\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" #emailid=\"ngModel\" [ngClass]=\"{'has-error' : emailid.invalid } \" [(ngModel)]=\"vendor_form.emailid\" required>\n                          </mat-form-field>\n                          <mat-error *ngIf=\"f.submitted && emailid.invalid\" class=\"invalid-feedback\">\n                              <mat-error *ngIf=\"emailid.errors.required\">E-mail Id is required</mat-error>\n                            </mat-error>\n                        </div>\n                      </div>\n                  <div class=\"col s4 pl0\">\n                    <div class=\"control-field\" >\n                      <mat-form-field class=\"cs-input infix-bodr8\">\n                        <input matInput placeholder=\"Landline No\" id=\"landline\"  name=\"landline\" (keypress)=\"MobileNumber($event)\" #landline=\"ngModel\" minlength=\"6\" maxlength=\"13\" min=\"0\" [ngClass]=\"{'has-error' : landline.invalid } \" [(ngModel)]=\"vendor_form.landline\" required>\n                      </mat-form-field>\n                      <mat-error *ngIf=\"f.submitted && landline.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"landline.errors.required\">Landline is required</mat-error>\n                        </mat-error>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col s12\">\n              <div class=\"sprate-box pt0 mt15\">\n                  <div class=\"cs-heading\">\n                    <h2>ADDRESS INFORMATION</h2>\n                  </div>\n                  <div class=\"from-fields\">\n                    <div class=\"row\">\n                      <div class=\"col s6 pl0\">\n                        <div class=\"control-field\">\n                          <mat-form-field class=\"cs-input\">\n                            <textarea matInput placeholder=\"Street\" name=\"street\" id=\"street\" #street=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && street.invalid }\" [(ngModel)]=\"vendor_form.street\" class=\"h100\" required></textarea>\n                          </mat-form-field>\n                        </div>\n                        <mat-error *ngIf=\"f.submitted && street.invalid\" class=\"invalid-feedback\">\n                          <mat-error *ngIf=\"street.errors.required\">street is required</mat-error>\n                        </mat-error>\n                      </div>\n                      \n                      <div class=\"col s6 pr0\">\n                        <div class=\"row\">\n                          <div class=\"col s6\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <mat-select placeholder=\"State\" name=\"vendorState\" id=\"vendorState\" [(ngModel)]=\"vendor_form.vendorState\"  #vendorState=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && vendorState.invalid }\" required>\n                                  <mat-option  (click)=\"get_district()\" *ngFor='let state of statelist' value=\"{{state}}\">{{state}}</mat-option>  \n                                </mat-select>\n                              </mat-form-field>\n                              <mat-error *ngIf=\"f.submitted && vendorState.invalid\" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"vendorState.errors.required\">State is required</mat-error>\n                              </mat-error>\n                            </div>\n                          </div>\n                          <div class=\"col s6 pr0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <mat-select placeholder=\"District\" name=\"district\" id=\"district\" [(ngModel)]=\"vendor_form.district\"  #district=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && district.invalid }\" required >\n                                  <mat-option (click)=\"get_city()\"  value=\"{{district.districtName}}\" *ngFor=\"let district of district1\">{{district.districtName}}</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                              <mat-error *ngIf=\"f.submitted && district.invalid\" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"district.errors.required\"> District is required</mat-error>\n                              </mat-error>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div class=\"row\">\n                          <div class=\"col s6\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <mat-select placeholder=\"City\" (keyup.enter)=\"get_pincode(city.stateMasterId)\" id=\"city\" name=\"city\" [(ngModel)]=\"vendor_form.city\" #city=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && city.invalid }\" required >\n                                  <mat-option (click)=\"get_pincode(city.stateMasterId)\" *ngFor=\"let city of cities\"  value=\"{{city.cityName}}\">{{city.cityName}}</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                              <mat-error *ngIf=\"f.submitted && city.invalid\" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"city.errors.required\"> City is required</mat-error>\n                              </mat-error>\n                            </div>\n                          </div>\n                          \n                          <div class=\"col s6 pr0\">\n                            <div class=\"control-field\">\n                              <mat-form-field class=\"cs-input infix-bodr8\">\n                                <mat-select placeholder=\"Pincode\"  name=\"pincode\" id=\"pincode\" [(ngModel)]=\"vendor_form.pincode\"  #pincode=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && pincode.invalid }\" required>\n                                  <mat-option *ngFor=\"let pin of areas\"  value=\"{{pin}}\">{{pin}}</mat-option>\n                                </mat-select>\n                              </mat-form-field>\n                              <mat-error *ngIf=\"f.submitted && pincode.invalid\" class=\"invalid-feedback\">\n                                <mat-error *ngIf=\"pincode.errors.required\"> Pincode is required</mat-error>\n                              </mat-error>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        \n                      </div>\n                    </div>\n                  </div>\n                </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div  class=\"col s12\">\n            <div class=\"cs-btn fixedd mt32 text-right\">\n              <div class=\"in-btn\">\n                <button mat-raised-button color=\"accent\" >Save</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n</form>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/vendor/vendor-add/vendor-add.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/vendor/vendor-add/vendor-add.component.ts ***!
  \***********************************************************/
/*! exports provided: VendorAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorAddComponent", function() { return VendorAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");






var VendorAddComponent = /** @class */ (function () {
    function VendorAddComponent(db, toast, router, renderer, msg, platformId) {
        this.db = db;
        this.toast = toast;
        this.router = router;
        this.renderer = renderer;
        this.msg = msg;
        this.platformId = platformId;
        this.vendor_form = {};
        this.loader = false;
        this.st = [];
        this.statelist = [];
        this.district1 = [];
        this.districts1 = [];
        this.districtlist = [];
        this.citylist = [];
        this.cities = [];
        this.areas = [];
        this.get_state();
        this.renderer.removeClass(document.body, 'nav-active');
        localStorage.setItem('leadId', JSON.stringify(''));
    }
    VendorAddComponent.prototype.ngOnInit = function () {
    };
    VendorAddComponent.prototype.get_state = function () {
        var _this = this;
        console.log("stats runnning.....");
        this.loader = true;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.statelist = response['data'];
        });
    };
    VendorAddComponent.prototype.get_district = function () {
        var _this = this;
        this.loader = true;
        console.log("district running....");
        console.log(this.vendor_form.vendorState);
        this.st = Array(this.vendor_form.vendorState);
        this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            _this.districtlist = response['data'];
            _this.district1 = _this.districtlist[0].distrcits;
            console.log(_this.district1);
        });
    };
    VendorAddComponent.prototype.get_city = function () {
        var _this = this;
        this.loader = true;
        console.log(this.vendor_form.vendorState);
        console.log(this.vendor_form.district);
        console.log("city runniyng..");
        this.db.fetchData(Array({ "stateName": this.vendor_form.vendorState, "distrcits": Array({ "districtName": this.vendor_form.district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.citylist = response['data'];
            _this.districts1 = _this.citylist[0].distrcits;
            _this.cities = _this.districts1[0].cities;
            console.log(_this.cities);
            var statemasterdata = [];
            statemasterdata = _this.cities.filter(function (x) { return x.cityName == _this.vendor_form.city; });
            console.log(statemasterdata);
            _this.statemasteroid = statemasterdata[0]['stateMasterId'];
        });
    };
    VendorAddComponent.prototype.get_pincode = function (stateMasterId) {
        var _this = this;
        this.loader = true;
        console.log(stateMasterId);
        var cityarray = [];
        cityarray[0] = stateMasterId;
        this.db.fetchData({ 'stateMasterIds': cityarray, }, 'city/pincodes').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.citylist = response['data'];
            _this.areas = response['data'][0].pinCodes;
            console.log(_this.areas);
        });
    };
    VendorAddComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    VendorAddComponent.prototype.namecheck = function (event) {
        var pattern = /[A-Z\+\a-z\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    VendorAddComponent.prototype.onSubmit = function () {
        var _this = this;
        console.log(this.vendor_form);
        this.db.fetchData(this.vendor_form, 'createvendor').subscribe(function (response) {
            console.log(response);
            if (response['message'] == "Success") {
                _this.toast.openSucess('Vendor added successfully', '');
                _this.router.navigate(['/vendor-list']);
            }
            else if (response['message'] == "The vendor already exists.") {
                _this.msg.error('The vendor already exists..');
            }
            else {
                _this.msg.error('Vendor is not added..');
            }
        });
    };
    VendorAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-vendor-add',
            template: __webpack_require__(/*! ./vendor-add.component.html */ "./src/app/vendor/vendor-add/vendor-add.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"],
            src_app_toast__WEBPACK_IMPORTED_MODULE_3__["SnackBarOverview"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
            src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"], Object])
    ], VendorAddComponent);
    return VendorAddComponent;
}());



/***/ }),

/***/ "./src/app/vendor/vendor-detail/vendor-detail.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/vendor/vendor-detail/vendor-detail.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\" >\n  <div *ngIf=\"loader\"> \n    <div class=\"cs-loader\">\n      <img src=\"assets/img/loader.png\" class=\"rotate\"> \n    </div>\n  </div>\n  <div class=\"middle-container\">\n    <div class=\"page-heading\">\n      <div class=\"heading-text bc-space\">\n        <div class=\"back-btn\">\n          <a mat-button routerLink=\"/vendor-list\" routerLinkActive=\"active\"><i class=\"material-icons\">arrow_right_alt</i></a>\n        </div>\n        <h2>{{vendordetail.vendorName}}</h2>\n        <p class=\"light\">Vendor</p>\n      </div>\n    </div>\n    \n  </div>\n  <div class=\"container-outer\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"details-info\">\n            <div class=\"basic-details\">\n              <div class=\"profile-info\">\n                <ul class=\"flex-start\">\n                    <li>\n                        <div class=\"cs-box\">\n                          <img src=\"assets/img/code.svg\" class=\"fix-img\">\n                          <span>Vendor Code</span>\n                          <p class=\"link-clr\">#{{vendordetail.vendorCode}}</p>\n                          <!-- <a class=\"edit-icon\" color=\"accent\" matRipple matTooltip=\"EDIT\">\n                            <i class=\"material-icons\">create</i>\n                          </a> -->\n                        </div>\n                      </li>\n                      <li>\n                          <div class=\"cs-box\">\n                            <img src=\"assets/img/phone.svg\" class=\"fix-img\">\n                            <span>GST No</span>\n                            <p>{{vendordetail.gstNo}}</p>\n                            <a *ngIf=\"userType==1\" class=\"edit-icon\" color=\"accent\" (click)=\"openEmail('gstNo')\" matRipple matTooltip=\"EDIT\">\n                              <i class=\"material-icons\">create</i>\n                            </a>\n                          </div>\n                        </li>\n                      <li>\n                          <div class=\"cs-box\">\n                            <img src=\"assets/img/phone.svg\" class=\"fix-img\">\n                            <span>Landline</span>\n                            <p>{{vendordetail.landline}}</p>\n                            <a *ngIf=\"userType==1\" class=\"edit-icon\" color=\"accent\" (click)=\"openEmail('landline')\" matRipple matTooltip=\"EDIT\">\n                              <i class=\"material-icons\">create</i>\n                            </a>\n                          </div>\n                        </li>\n                </ul>\n                <ul class=\"flex-start\">\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/applicant.svg\" class=\"fix-img\">\n                      <span>Contact Person</span>\n                      <p class=\"link-clr\">{{vendordetail.contactPersonName}}</p>\n                      <a *ngIf=\"userType==1\" class=\"edit-icon\" (click)=\"openEmail('contact_person')\" color=\"accent\" matRipple matTooltip=\"EDIT\">\n                        <i class=\"material-icons\">create</i>\n                      </a>\n                    </div>\n                  </li>\n                  \n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/mobile.svg\" class=\"fix-img\">\n                      <span>Mobile 1</span>\n                      <p>{{vendordetail.mobile1}}</p>\n                      <a *ngIf=\"userType==1\" class=\"edit-icon\" (click)=\"openEmail('mobile')\" color=\"accent\" matRipple matTooltip=\"EDIT\">\n                        <i class=\"material-icons\">create</i>\n                      </a>\n                    </div>\n                  </li>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/mobile.svg\" class=\"fix-img\">\n                      <span>Mobile 2</span>\n                      <p>{{vendordetail.mobile2}}</p>\n                      <a *ngIf=\"userType==1\" class=\"edit-icon\" (click)=\"openEmail('mobile2')\" color=\"accent\" matRipple matTooltip=\"EDIT\">\n                        <i class=\"material-icons\">create</i>\n                      </a>\n                    </div>\n                  </li>\n                </ul>\n                <ul>\n                  <li>\n                    <div class=\"cs-box\">\n                      <img src=\"assets/img/gmail.svg\" class=\"fix-img\">\n                      <span>Email</span>\n                      <p>{{vendordetail.emailid}}</p>\n                      <a *ngIf=\"userType==1\" class=\"edit-icon\" color=\"accent\" (click)=\"openEmail('email')\" matRipple matTooltip=\"EDIT\">\n                        <i class=\"material-icons\">create</i>\n                      </a>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div  class=\"row\">\n        <div class=\"col s8\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"full-address\">\n              <div class=\"top-heading\">\n                <h2>ADDRESS</h2>\n              </div>\n              <a *ngIf=\"userType==1\"  mat-button class=\"address-edit\" (click)=\"openEmail('address')\" matTooltip=\"EDIT\"><i class=\"material-icons\">edit</i></a>\n              <div class=\"nationality\">\n                <img src=\"assets/img/india.svg\" alt=\"\">\n                <p>India</p>\n              </div>\n              <div class=\"ds-from-fields\">\n                  <div class=\"cs-row\">\n                      <div class=\"static-info\">\n                        <p>Street</p>\n                        <p>{{vendordetail.street}} </p>\n                      </div>\n                    </div>\n                <div class=\"cs-row\">\n                  <div class=\"static-info\">\n                    <p>State</p>\n                    <p>{{vendordetail.vendorState}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>District</p>\n                    <p>{{vendordetail.district}}</p>\n                  </div>\n                  <div class=\"static-info\">\n                    <p>City</p>\n                    <p>{{vendordetail.city}}</p>\n                  </div>\n                  <div class=\"static-info w100\" style=\"min-width: 100px;\">\n                    <p>Pin Code</p>\n                    <p>{{vendordetail.pincode}}</p>\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"col s4\">\n          <div class=\"sprate-box padding0\">\n            <div class=\"cs-logs\">\n              <div class=\"top-heading\">\n                <h2>ACCOUNT INFO</h2>\n              </div>\n              <div class=\"logs-outer\">\n                <div class=\"logs-list\">\n                  <div class=\"account-details\">\n                    <ul>\n                      <!-- <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <div class=\"cs-account\">\n                              <p>User Name</p>\n                              <h5>{{vendordetail.emailid}}</h5>\n                            </div>\n                          </div>\n                        </div>\n                      </li> -->\n                      <!-- <li>\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <div class=\"cs-account\">\n                              <p>Password</p>\n                              <input type=\"password\" placeholder=\"********\">\n                              <i class=\"material-icons pass-icon pass-show\">visibility</i>\n                              <i class=\"material-icons pass-icon pass-hide\">visibility_off</i>\n                            </div>\n                          </div>\n                        </div>\n                      </li> -->\n                      <li class=\"status-bg\">\n                        <div class=\"outer\">\n                          <div class=\"inner\">\n                            <div class=\"cs-account\">\n                              <p>Status</p>\n                              <h5 *ngIf=\"vendordetail.vendorStatus==true\">Active</h5>\n                              <h5 *ngIf=\"vendordetail.vendorStatus==false\">Inactive</h5>\n                              <mat-slide-toggle class=\"status-toogle\" [checked]=\"vendordetail.vendorStatus\" (change)=\"checkstatus(vendordetail.vendorStatus)\" [(ngModel)]=\"vendordetail.vendorStatus\" color=\"warn\">&nbsp;</mat-slide-toggle>\n                            </div>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"sprate-box pt0 mt15\">\n            <div class=\"cs-heading\">\n              <h2>PURCHASE ORDER</h2>\n            </div>\n            <div class=\"cs-table left-right-15\">\n              <div class=\"table-head\">\n                <table class=\"sno-border\"> \n                  <tr >\n                    <th class=\"w40\">&nbsp;</th>\n                    <th class=\"w270\">Date & Created By </th>  \n                    <th>P.O No</th>  \n                    <th class=\"w150\">Total Item</th>  \n                    <th class=\"w150\">QR Code Generat</th> \n                  </tr>\n                </table>\n              </div>\n              \n              <div class=\"table-container\">\n                <div class=\"table-content none-shadow\">\n                  <table class=\"sno-border\">\n                    <tr>\n                      <td class=\"w40\">1</td>\n                      <td class=\"w270\">1 12 Aug 2018, Pankaj</td>  \n                      <td>\n                        <a class=\"link-btn\"  mat-button>#PO2458458</a>\n                      </td>  \n                      <td class=\"w150\">25</td>  \n                      <td class=\"w150 inactive\">24</td> \n                      \n                    </tr>\n                    <tr>\n                      <td>2</td>\n                      <td>1 12 Aug 2018, Pankaj</td>  \n                      <td>\n                        <a class=\"link-btn\"  mat-button>#PO2458458</a>\n                      </td>  \n                      <td>25</td>  \n                      <td class=\"actives\">20</td>\n                    </tr>\n                    <tr>\n                      <td>3</td>\n                      <td>1 12 Aug 2018, Pankaj</td>  \n                      <td>\n                        <a class=\"link-btn\"  mat-button>#PO2458458</a>\n                      </td>  \n                      <td>25</td>  \n                      <td class=\"actives\">20</td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n      </div> -->\n      <!-- <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"sprate-box pt0 mt15\">\n              <div class=\"cs-heading\">\n                <h2>QR CODE REQUEST</h2>\n              </div>\n              <div class=\"cs-table left-right-15\">\n                <div class=\"table-head\">\n                  <table class=\"sno-border\"> \n                    <tr >\n                      <th class=\"w40\">&nbsp;</th>\n                      <th class=\"w110\">Date</th>  \n                      <th class=\"w150\">P.O No</th>  \n                      <th>Item Description</th>  \n                      <th class=\"w80\">QTY.</th> \n                      <th class=\"w110\">Status</th>\n                      <th class=\"w280\">Action</th>\n                    </tr>\n                  </table>\n                </div>\n                \n                <div class=\"table-container\">\n                  <div class=\"table-content none-shadow\">\n                    <table class=\"sno-border\">\n                      <tr>\n                        <td class=\"w40\">1</td>\n                        <td class=\"w110\">12 June 2019</td>  \n                        <td class=\"w150\">#PO12345</td>\n                        <td>Lorem Ipsum is simply text.</td> \n                        <td class=\"w80\">20</td>\n                        <td class=\"w110 actives\">Generated</td>\n                        <td class=\"w280\">\n                          <a class=\"link-btn underline\"  mat-button routerLink=\"/qr-code-detail\" routerLinkActive=\"active\">VIEW QR CODE</a>\n                        </td> \n                      </tr>\n                      <tr>\n                        <td>2</td>\n                        <td>12 June 2019</td>  \n                        <td>#PO12345</td>\n                        <td>Lorem Ipsum is simply text.</td> \n                        <td>20</td>\n                        <td class=\"inactive\">Pending</td>\n                        <td>\n                          <div class=\"cs-btn\">\n                            <div class=\"in-btn qr-btn\">\n                              <button mat-raised-button color=\"warn\" >Reject</button>\n                              <button mat-raised-button color=\"accent\" >Generate QR Code</button>\n                            </div>\n                          </div>\n                        </td> \n                      </tr>\n                      <tr>\n                        <td>3</td>\n                        <td>12 June 2019</td>  \n                        <td>#PO12345</td>\n                        <td>Lorem Ipsum is simply text.</td> \n                        <td>20</td>\n                        <td class=\"inactive\">Pending</td>\n                        <td>\n                          <div class=\"cs-btn\">\n                            <div class=\"in-btn qr-btn\">\n                              <button mat-raised-button color=\"warn\" >Reject</button>\n                              <button mat-raised-button color=\"accent\" >Generate QR Code</button>\n                            </div>\n                          </div>\n                        </td> \n                      </tr>\n                      <tr>\n                        <td>4</td>\n                        <td>12 June 2019</td>  \n                        <td>#PO12345</td>\n                        <td>Lorem Ipsum is simply text.</td> \n                        <td>20</td>\n                        <td class=\"actives\">Generated</td>\n                        <td><a class=\"link-btn underline\"  mat-button routerLink=\"/qr-code-detail\" routerLinkActive=\"active\">VIEW QR CODE</a></td> \n                      </tr>\n                      <tr>\n                        <td>5</td>\n                        <td>12 June 2019</td>  \n                        <td>#PO12345</td>\n                        <td>Lorem Ipsum is simply text.</td> \n                        <td>20</td>\n                        <td class=\"inactive\">Pending</td>\n                        <td>\n                          <div class=\"cs-btn\">\n                            <div class=\"in-btn qr-btn\">\n                              <button mat-raised-button color=\"warn\" >Reject</button>\n                              <button mat-raised-button color=\"accent\" >Generate QR Code</button>\n                            </div>\n                          </div>\n                        </td> \n                      </tr>\n                      <tr>\n                        <td>6</td>\n                        <td>12 June 2019</td>  \n                        <td>#PO12345</td>\n                        <td>Lorem Ipsum is simply text.</td> \n                        <td>20</td>\n                        <td class=\"actives\">Generated</td>\n                        <td><a class=\"link-btn underline\"  mat-button routerLink=\"/qr-code-detail\" routerLinkActive=\"active\">VIEW QR CODE</a></td> \n                      </tr>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> -->\n        \n      \n    </div>\n  </div>\n</div>\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/vendor/vendor-detail/vendor-detail.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/vendor/vendor-detail/vendor-detail.component.ts ***!
  \*****************************************************************/
/*! exports provided: VendorDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorDetailComponent", function() { return VendorDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _vendor_update_vendor_update_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../vendor-update/vendor-update.component */ "./src/app/vendor/vendor-update/vendor-update.component.ts");










var VendorDetailComponent = /** @class */ (function () {
    function VendorDetailComponent(router, toast, user, route, service, dialog, dia) {
        var _this = this;
        this.router = router;
        this.toast = toast;
        this.user = user;
        this.route = route;
        this.service = service;
        this.dialog = dialog;
        this.dia = dia;
        this.loader = false;
        this.userdata = {};
        this.vendordetail = {};
        this.route.params.subscribe(function (params) {
            console.log(params);
            console.log(user);
            _this.vendorcode = params.id;
            _this.resultVendorStatus = 2;
            console.log(_this.vendorcode);
            _this.userdata = _this.user['user']['data'];
            _this.role = _this.userdata['role'];
            _this.userType = _this.userdata['userType'];
            console.log("this is the uer type = " + _this.userType);
        });
    }
    VendorDetailComponent.prototype.ngOnInit = function () {
        this.get_detail();
        console.log(this.role);
        console.log("this is the uer type = " + this.userType);
    };
    VendorDetailComponent.prototype.get_detail = function () {
        var _this = this;
        this.loader = true;
        console.log(this.vendorcode);
        this.service.fetchData({ 'resultVendorStatus': this.resultVendorStatus, 'vendorCode': this.vendorcode }, '/getallvendors').subscribe(function (response) {
            console.log(response);
            if (response['message'] == "Success") {
                _this.loader = false;
                _this.vendordetail = response['data'][0];
                console.log(_this.vendordetail);
            }
            else {
                _this.loader = false;
                _this.vendordetail = {};
            }
            console.log(_this.vendordetail);
        });
    };
    VendorDetailComponent.prototype.openEmail = function (check) {
        var _this = this;
        console.log(check);
        this.vendordetail['typeofupdate'] = check;
        console.log("chech assign user update");
        var dialogRef = this.dialog.open(_vendor_update_vendor_update_component__WEBPACK_IMPORTED_MODULE_8__["VendorUpdateComponent"], { width: '1000px', data: this.vendordetail });
        dialogRef.afterClosed().subscribe(function (result) {
            console.log(result);
            _this.get_detail();
        });
    };
    VendorDetailComponent.prototype.checkstatus = function (status) {
        var _this = this;
        console.log(status);
        this.loader = true;
        this.service.fetchData({ 'vendorStatus': status, 'vendorCode': this.vendorcode }, 'changevendorstatus').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            if (response['message'] == "Success") {
                _this.toast.openSucess('Updated successfully', '');
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
        });
    };
    VendorDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-vendor-detail',
            template: __webpack_require__(/*! ./vendor-detail.component.html */ "./src/app/vendor/vendor-detail/vendor-detail.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], src_app_toast__WEBPACK_IMPORTED_MODULE_5__["SnackBarOverview"], _local_storage_service__WEBPACK_IMPORTED_MODULE_6__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], src_app_constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"], src_app_dialog__WEBPACK_IMPORTED_MODULE_7__["DialogComponent"]])
    ], VendorDetailComponent);
    return VendorDetailComponent;
}());



/***/ }),

/***/ "./src/app/vendor/vendor-list/vendor-list.component.html":
/*!***************************************************************!*\
  !*** ./src/app/vendor/vendor-list/vendor-list.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"main-container\">\n  <div class=\"cs-loader\" *ngIf=\"loader\"> \n    <img src=\"assets/img/loader.png\" class=\"rotate\">\n  </div>\n  \n  <div class=\"middle-container pb15\">\n    <div class=\"page-heading\">\n      <img src=\"assets/img/vendor.svg\" class=\"h-icon\">\n      <div class=\"heading-text\">\n        <h2>Vendors</h2>\n        <p>Total Vendor <span *ngIf='vendorList'>{{vendorList.length}}</span><span *ngIf='!vendorList'>0</span></p>\n      </div>\n    </div>\n  </div>\n  \n  \n  <div class=\"container-outer pt0\">\n    <div class=\"container\" >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div class=\"cs-table left-right-20\">\n            <div class=\"sticky-head\">\n              <div class=\"table-head\">\n                <table class=\"sno-border\"> \n                  <tr >\n                    <th class=\"w40\">&nbsp;</th>\n                    <th class=\"w200\">Comapny Name </th>  \n                    <th class=\"w150\"> Vendor Code</th>  \n                    <th class=\"w170\">Contact Person</th>  \n                    <th class=\"w100\">Mobile No</th> \n                    <th>Address</th>\n                    <th class=\"w100 text-center\">QR Code Request</th>\n                    <th class=\"w100\">Status</th>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"table-head bdrt\">\n                <table class=\"sno-border\">\n                    <tr> <th class=\"w40\">&nbsp;</th>\n                        <th class=\"w200\" >\n                            <div class=\"th-search\">\n                                <input type=\"text\" (keyup)=\"vendor_list()\" name=\"vendorName\" #vendorName=\"ngModel\" [(ngModel)]=\"filter.vendorName\" placeholder=\"Search....\">\n                            </div>\n                        </th>\n                        <th class=\"w150\" >\n                          <div class=\"th-search\">\n                              <input type=\"text\" (keyup)=\"vendor_list()\" name=\"vendorCode\" #vendorCode=\"ngModel\" [(ngModel)]=\"filter.vendorCode\" placeholder=\"Search....\">\n                          </div>\n                      </th>\n                        <th class=\"w170\">\n                            \n                              <div class=\"th-search\">\n                                <input type=\"text\" (keyup)=\"vendor_list()\" name=\"contactPersonName\" #contactPersonName=\"ngModel\" [(ngModel)]=\"filter.contactPersonName\" placeholder=\"Search....\">\n                            </div>\n                            \n                        </th>\n                       \n                        <th class=\"w100\">\n                          <div class=\"th-search\">\n                            <input type=\"text\" (keyup)=\"vendor_list()\" name=\"mobile\" #mobile=\"ngModel\" [(ngModel)]=\"filter.mobile\" placeholder=\"Search....\">\n                        </div>\n                        </th>\n                        <th >&nbsp;</th>\n                        <th class=\"w100 text-center\" >&nbsp;</th>\n                        <th class=\"w100\">\n                            <div class=\"th-search\" >\n                                <mat-select placeholder=\"Select Task Priority\" id=\"resultVendorStatus\" name=\"resultVendorStatus\" [(ngModel)]=\"filter.resultVendorStatus\" #resultVendorStatus=\"ngModel\">\n                                  <mat-option (click)=\"vendor_list()\" value=\"2\">All</mat-option> \n                                  <mat-option (click)=\"vendor_list()\" value=\"1\">Active</mat-option>  \n                                  <mat-option (click)=\"vendor_list()\" value=\"0\">Inactive</mat-option>\n                                </mat-select>\n                            </div>\n                        </th>\n                       \n                    </tr>\n                </table>\n            </div>\n            </div>\n\n            <div class=\"table-container\">\n              <div class=\"table-content\">\n                <table class=\"sno-border\">\n                  <tr *ngFor=\"let vendor of vendorList;let i=index\">\n                    <td class=\"w40\">{{i+1}}</td>\n                    <td class=\"w200\"><a class=\"link-btn\" routerLink=\"/vendor-detail/{{vendor.vendorCode}}\" routerLinkActive=\"active\" mat-button>{{vendor.vendorName}}</a></td>  \n                    <td class=\"w150\">#{{vendor.vendorCode}}</td>  \n                    <td class=\"w170\">{{vendor.contactPersonName}}</td>  \n                    <td class=\"w100\">{{vendor.mobile1}}</td> \n                    <td>{{vendor.street}},{{vendor.city}},{{vendor.district}},{{vendor.vendorState}},{{vendor.pincode}}</td>\n                    <td class=\"w100 text-center\"><a class=\"link-btn\" mat-button>12</a></td>\n                    <td class=\"w100 inactive\" *ngIf=\"vendor.vendorStatus==false\">Inactive</td>\n                    <td class=\"w100 active\" *ngIf=\"vendor.vendorStatus==true\">Active</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n\n            <div *ngIf=\"div==true\" class=\"data-not-available\" >\n              <div class=\"outer\">\n                  <div class=\"iinear\">\n                      <div class=\"figure\" matRipple>\n                          <div class=\"header\">\n                              <img src=\"assets/img/data-not-available-header.svg\" alt=\"\">\n                          </div>\n                          <div class=\"description\">\n                              <div class=\"img\">\n                                  <i class=\"material-icons\">error_outline</i>\n                              </div>\n                              <div class=\"psc\">\n                                  <p>data not available</p>\n                              </div>\n                          </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"fixed-multibtn-botm\">\n    <ul>\n      <li><a  matTooltip=\"Add New\" routerLink=\"/vendor-add\" routerLinkActive=\"active\" matRipple><i class=\"material-icons\">add</i></a></li>\n    </ul>\n  </div>\n</div>\n\n<div class=\"h50\"></div>"

/***/ }),

/***/ "./src/app/vendor/vendor-list/vendor-list.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/vendor/vendor-list/vendor-list.component.ts ***!
  \*************************************************************/
/*! exports provided: VendorListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorListComponent", function() { return VendorListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var src_app_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/dialog */ "./src/app/dialog.ts");
/* harmony import */ var _local_storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../local-storage.service */ "./src/app/local-storage.service.ts");







var VendorListComponent = /** @class */ (function () {
    function VendorListComponent(db, user, route, toast, dialog) {
        this.db = db;
        this.user = user;
        this.route = route;
        this.toast = toast;
        this.dialog = dialog;
        this.vendorList = [];
        this.msg = [];
        this.filter = {};
        this.div = false;
        this.userdata = [];
        this.userdata = this.user['user']['data'];
        this.role = this.userdata['role'];
        this.filter.resultVendorStatus = 2;
    }
    VendorListComponent.prototype.ngOnInit = function () {
        this.filter.resultVendorStatus = 2;
        this.vendor_list();
    };
    VendorListComponent.prototype.vendor_list = function () {
        var _this = this;
        this.loader = true;
        this.db.fetchData({ 'vendorName': this.filter.vendorName, 'vendorCode': this.filter.vendorCode, 'contactPersonName': this.filter.contactPersonName, 'mobile': this.filter.mobile, 'resultVendorStatus': this.filter.resultVendorStatus }, '/getallvendors').subscribe(function (response) {
            console.log(response);
            if (response['data'] != '') {
                _this.loader = false;
                _this.div = false;
                _this.vendorList = response['data'];
                console.log(_this.vendorList);
            }
            else {
                console.log("no data found");
                _this.div = true;
                _this.loader = false;
                _this.vendorList = [];
            }
            console.log(_this.vendorList);
            console.log(_this.div);
        });
    };
    VendorListComponent.prototype.refreshlist = function () {
        this.vendor_list();
        this.toast.openSucess('Refreshed successfully!', '');
    };
    VendorListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-vendor-list',
            template: __webpack_require__(/*! ./vendor-list.component.html */ "./src/app/vendor/vendor-list/vendor-list.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_constant_service__WEBPACK_IMPORTED_MODULE_2__["ConstantService"], _local_storage_service__WEBPACK_IMPORTED_MODULE_6__["sessionStorage"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], src_app_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"]])
    ], VendorListComponent);
    return VendorListComponent;
}());



/***/ }),

/***/ "./src/app/vendor/vendor-update/vendor-update.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/vendor/vendor-update/vendor-update.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"edit-modal\">\n    <form name=\"form\" (ngSubmit)=\"f.form.valid && updateMobileEmail()\"  #f=\"ngForm\" novalidate>\n        <div *ngIf=\"loader\"> \n            <div class=\"cs-loader\">\n              <img src=\"assets/img/loader.png\" class=\"rotate\"> \n            </div>\n          </div>\n        \n        <div *ngIf=\"vendordetail.typeofupdate=='email'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Email</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput placeholder=\"Email-ID\" name=\"emailid\" value=\"emailid\" [(ngModel)]=\"vendordetail.emailid\" #emailid=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && emailid.invalid }\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!emailid.valid && emailid.touched\">\n                        Please Enter Valid Email!\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"vendordetail.typeofupdate=='contact_person'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Contact Person</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput placeholder=\"Name\" name=\"contactPersonName\" (keypress)=\"namecheck($event)\" value=\"contactPersonName\" [(ngModel)]=\"vendordetail.contactPersonName\" #contactPersonName=\"ngModel\"  [ngClass]=\"{ 'is-invalid': f.submitted && contactPersonName.invalid }\" required>\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!contactPersonName.valid && contactPersonName.touched\">\n                        Please Enter Name..\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div *ngIf=\"vendordetail.typeofupdate=='gstNo'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update GST</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput placeholder=\"GST\" name=\"gstNo\" value=\"gstNo\" [(ngModel)]=\"vendordetail.gstNo\" #gstNo=\"ngModel\" minlength=\"15\" maxlength=\"15\" min=\"0\" [ngClass]=\"{ 'is-invalid': f.submitted && gstNo.invalid }\" required>\n                    </mat-form-field>\n                    <div class=\"alert alert-danger\" *ngIf=\"!gstNo.valid && gstNo.touched\">\n                        Please Enter 15 Digit GST\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div *ngIf=\"vendordetail.typeofupdate=='mobile'\" mat-dialog-content style=\"overflow: hidden;\">\n            <p class=\"heading\">Update Mobile</p>\n            <div class=\" from-fields\">\n                <div class=\"control-field\">\n                    <mat-form-field class=\"example-full-width cs-input\">\n                        <input matInput type=\"text\" placeholder=\"mobile\" name=\"mobile1\"   value=\"mobile1\" [(ngModel)]=\"vendordetail.mobile1\" minlength=\"10\" maxlength=\"10\" min=\"0\" #mobile1=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && mobile1.invalid }\" (keypress)=\"MobileNumber($event)\" required>\n                    </mat-form-field>\n                    \n                    <div class=\"alert alert-danger\" *ngIf=\"!mobile1.valid && mobile1.touched\">\n                        Please Enter Valid Mobile\n                    </div>\n                    <mat-error *ngIf=\"f.submitted && mobile1.invalid && mobile1.touched\" class=\"invalid-feedback\">\n                      <mat-error >mobile must be 10 digit</mat-error>\n                    </mat-error>\n                </div>\n            </div>\n        </div>\n\n\n        <div *ngIf=\"vendordetail.typeofupdate=='mobile2'\" mat-dialog-content style=\"overflow: hidden;\">\n          <p class=\"heading\">Update Mobile</p>\n          <div class=\" from-fields\">\n              <div class=\"control-field\">\n                  <mat-form-field class=\"example-full-width cs-input\">\n                      <input matInput type=\"text\" placeholder=\"mobile\" name=\"mobile2\"   value=\"mobile2\" [(ngModel)]=\"vendordetail.mobile2\" minlength=\"10\" maxlength=\"10\" min=\"0\" #mobile1=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && mobile2.invalid }\" (keypress)=\"MobileNumber($event)\" required>\n                  </mat-form-field>\n                  \n                  <div class=\"alert alert-danger\" *ngIf=\"!mobile2.valid && mobile2.touched\">\n                      Please Enter Valid Mobile\n                  </div>\n                  <mat-error *ngIf=\"f.submitted && mobile2.invalid && mobile2.touched\" class=\"invalid-feedback\">\n                    <mat-error >mobile must be 10 digit</mat-error>\n                  </mat-error>\n              </div>\n          </div>\n      </div>\n\n\n        <div *ngIf=\"vendordetail.typeofupdate=='landline'\" mat-dialog-content style=\"overflow: hidden;\">\n                <p class=\"heading\">Update Landline</p>\n                <div class=\" from-fields\">\n                    <div class=\"control-field\">\n                        <mat-form-field class=\"example-full-width cs-input\">\n                            <input matInput type=\"text\"  maxlength=\"10\"  placeholder=\"Landline\" name=\"landline\" (keypress)=\"MobileNumber($event)\" value=\"landline\" [(ngModel)]=\"vendordetail.landline\"  minlength=\"6\" maxlength=\"13\" #landline=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && landline.invalid }\" required>\n                        </mat-form-field>\n                        <div class=\"alert alert-danger\" *ngIf=\"landline.invalid && landline.touched\">\n                                Landline is must be atleast 6 digit\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"landline.invalid && landline.errors.required\">\n                                    Landline is required\n                            </div>\n                    </div>\n                </div>\n       </div>\n\n\n       <div mat-dialog-content *ngIf=\"vendordetail.typeofupdate=='address'\">\n          <p class=\"heading\">Update Address</p>\n          <div class=\"from-fields\">\n            <div class=\"row\">\n              <div class=\"col s6\">\n                  <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"State\" name=\"vendorState\" [(ngModel)]=\"vendordetail.vendorState\" >\n                          <mat-option (click)=\"get_district()\"  *ngFor=\"let state of statelist\" value=\"{{state}}\">{{state}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n              </div>\n              <div class=\"col s6\">\n                  <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"District\"   name=\"district\" [(ngModel)]=\"vendordetail.district\" >\n                          <mat-option (click)=\"get_city()\"  *ngFor=\"let district of district1\" value=\"{{district.districtName}}\">{{district.districtName}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n              </div>\n              <div class=\"col s6\">\n                  <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\">\n                        <mat-select placeholder=\"City\"  name=\"city\" [(ngModel)]=\"vendordetail.city\" >\n                          <mat-option *ngFor=\"let city of cities\" (click)=\"get_pincode(city.stateMasterId)\" value=\"{{city.cityName}}\">{{city.cityName}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n              </div>\n              <div class=\"col s6\">\n                  <div class=\"control-field\">\n                    <mat-form-field class=\"cs-input\">\n                      <mat-select placeholder=\"Pincode\"  name=\"pincode\" [(ngModel)]=\"vendordetail.pincode\" >\n                        <mat-option *ngFor=\"let pin of areas\" value=\"{{pin}}\">{{pin}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                  </div>\n                </div>\n            </div>\n            \n            <div class=\"row mb15\">\n              <div class=\"col s12\">\n                  <div class=\"control-field\">\n                      <mat-form-field class=\"cs-input\" >\n                        <textarea matInput placeholder=\"Address\" name=\"street\" [(ngModel)]=\"vendordetail.street\" class=\"h100\"></textarea>\n                      </mat-form-field>\n                    </div>\n              </div>\n              \n            </div>\n          </div>\n          </div>\n\n\n\n        <div mat-dialog-actions>\n            <button mat-raised-button  color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n            <button mat-raised-button color=\"accent\">Save</button>\n        </div>\n    </form>\n</div>"

/***/ }),

/***/ "./src/app/vendor/vendor-update/vendor-update.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/vendor/vendor-update/vendor-update.component.ts ***!
  \*****************************************************************/
/*! exports provided: VendorUpdateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorUpdateComponent", function() { return VendorUpdateComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _constant_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constant.service */ "./src/app/constant.service.ts");
/* harmony import */ var src_app_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/toast */ "./src/app/toast.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");






var VendorUpdateComponent = /** @class */ (function () {
    function VendorUpdateComponent(toast, router, dialogRef, data, db) {
        this.toast = toast;
        this.router = router;
        this.dialogRef = dialogRef;
        this.data = data;
        this.db = db;
        this.vendordetail = {};
        this.loader = false;
        this.district1 = [];
        this.statelist = [];
        this.citylist = [];
        this.cities = [];
        this.areas = [];
        this.update_data = {};
        console.log(data);
        this.vendordetail = this.data;
        console.log(this.vendordetail);
        console.log(this.vendordetail.typeofupdate);
    }
    VendorUpdateComponent.prototype.ngOnInit = function () {
        this.get_state();
    };
    VendorUpdateComponent.prototype.get_state = function () {
        var _this = this;
        console.log("stats runnning.....");
        this.loader = true;
        this.db.fileData('', 'state/list/').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.statelist = response['data'];
        });
        this.get_district();
    };
    VendorUpdateComponent.prototype.get_district = function () {
        var _this = this;
        this.loader = true;
        console.log("district running....");
        console.log(this.vendordetail.vendorState);
        this.st = Array(this.vendordetail.vendorState);
        this.db.fetchData(this.st, 'district/list/').subscribe(function (response) {
            _this.loader = false;
            console.log(response);
            _this.districtlist = response['data'];
            _this.district1 = _this.districtlist[0].distrcits;
            console.log(_this.district1);
        });
        this.get_city();
    };
    VendorUpdateComponent.prototype.get_city = function () {
        var _this = this;
        this.loader = true;
        console.log(this.vendordetail.vendorState);
        console.log(this.vendordetail.district);
        console.log("city runniyng..");
        this.db.fetchData(Array({ "stateName": this.vendordetail.vendorState, "distrcits": Array({ "districtName": this.vendordetail.district }) }), 'city/list').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.citylist = response['data'];
            _this.districts1 = _this.citylist[0].distrcits;
            _this.cities = _this.districts1[0].cities;
            console.log(_this.cities);
            var statemasterdata = [];
            statemasterdata = _this.cities.filter(function (x) { return x.cityName == _this.vendordetail.city; });
            console.log(statemasterdata);
            _this.statemasteroid = statemasterdata[0]['stateMasterId'];
            console.log(_this.statemasteroid);
            setTimeout(function () {
                _this.get_pincode(_this.statemasteroid);
            }, 500);
        });
    };
    VendorUpdateComponent.prototype.get_pincode = function (stateMasterId) {
        var _this = this;
        this.loader = true;
        console.log(stateMasterId);
        var cityarray = [];
        cityarray[0] = stateMasterId;
        console.log(cityarray);
        this.db.fetchData({ 'stateMasterIds': cityarray, }, 'city/pincodes').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.citylist = response['data'];
            _this.areas = response['data'][0].pinCodes;
            console.log(_this.areas);
        });
    };
    VendorUpdateComponent.prototype.namecheck = function (event) {
        var pattern = /[A-Z\+\a-z\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    VendorUpdateComponent.prototype.MobileNumber = function (event) {
        var pattern = /[0-9\+\-\ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    VendorUpdateComponent.prototype.updateMobileEmail = function () {
        var _this = this;
        if (this.vendordetail.typeofupdate == 'email') {
            this.update_data.emailid = this.vendordetail.emailid;
            this.update_data.vendorCode = this.vendordetail.vendorCode;
            console.log(this.update_data);
        }
        else if (this.vendordetail.typeofupdate == 'mobile') {
            this.update_data.mobile1 = this.vendordetail.mobile1;
            this.update_data.vendorCode = this.vendordetail.vendorCode;
            console.log(this.update_data);
        }
        else if (this.vendordetail.typeofupdate == 'mobile2') {
            this.update_data.mobile2 = this.vendordetail.mobile2;
            this.update_data.vendorCode = this.vendordetail.vendorCode;
            console.log(this.update_data);
        }
        else if (this.vendordetail.typeofupdate == 'gstNo') {
            this.update_data.gstNo = this.vendordetail.gstNo;
            this.update_data.vendorCode = this.vendordetail.vendorCode;
            console.log(this.update_data);
        }
        else if (this.vendordetail.typeofupdate == 'contact_person') {
            this.update_data.contactPersonName = this.vendordetail.contactPersonName;
            this.update_data.vendorCode = this.vendordetail.vendorCode;
            console.log(this.update_data);
        }
        else if (this.vendordetail.typeofupdate == 'landline') {
            this.update_data.landline = this.vendordetail.landline;
            this.update_data.vendorCode = this.vendordetail.vendorCode;
            console.log(this.update_data);
        }
        else if (this.vendordetail.typeofupdate == 'address') {
            this.update_data.vendorState = this.vendordetail.vendorState;
            this.update_data.city = this.vendordetail.city;
            this.update_data.district = this.vendordetail.district;
            this.update_data.pincode = this.vendordetail.pincode;
            this.update_data.street = this.vendordetail.street;
            this.update_data.vendorCode = this.vendordetail.vendorCode;
            console.log(this.update_data);
        }
        console.log(this.update_data);
        this.loader = true;
        this.db.fetchData(this.update_data, 'modifyvendor').subscribe(function (response) {
            console.log(response);
            _this.loader = false;
            _this.message = response['message'];
            if (_this.message == "Success") {
                _this.toast.openSucess('Updated successfully', '');
                _this.router.navigate(['/vendor-detail/' + _this.update_data.vendorCode]);
            }
            else {
                _this.toast.openError('Something went wrong Please Try Again!!', '');
            }
            _this.dialogRef.close();
        });
    };
    VendorUpdateComponent.prototype.onNoClick = function () {
        this.dialogRef.close();
    };
    VendorUpdateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-vendor-update',
            template: __webpack_require__(/*! ./vendor-update.component.html */ "./src/app/vendor/vendor-update/vendor-update.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_toast__WEBPACK_IMPORTED_MODULE_4__["SnackBarOverview"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _constant_service__WEBPACK_IMPORTED_MODULE_3__["ConstantService"]])
    ], VendorUpdateComponent);
    return VendorUpdateComponent;
}());



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
var environment = {
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! hammerjs */ "./node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_4__);





if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(function (err) { return console.error(err); });


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\Admin\Desktop\kenshin\src\main.ts */"./src/main.ts");


/***/ }),

/***/ 1:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 3:
/*!************************!*\
  !*** stream (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map